-- This SQL code was generated by scikit2sql (development version).
-- Copyright 2017

WITH "ADS_imp_1_OUT" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_0" IS NULL) THEN 0.0 ELSE "ADS"."Feature_0" END AS impter_2, CASE WHEN ("ADS"."Feature_1" IS NULL) THEN 0.285077951002 ELSE "ADS"."Feature_1" END AS impter_3, CASE WHEN ("ADS"."Feature_2" IS NULL) THEN 5.48329621381 ELSE "ADS"."Feature_2" END AS impter_4, CASE WHEN ("ADS"."Feature_3" IS NULL) THEN 12.0690423163 ELSE "ADS"."Feature_3" END AS impter_5, CASE WHEN ("ADS"."Feature_4" IS NULL) THEN 11.6191536748 ELSE "ADS"."Feature_4" END AS impter_6, CASE WHEN ("ADS"."Feature_5" IS NULL) THEN 5.75501113586 ELSE "ADS"."Feature_5" END AS impter_7, CASE WHEN ("ADS"."Feature_6" IS NULL) THEN 1.53229398664 ELSE "ADS"."Feature_6" END AS impter_8, CASE WHEN ("ADS"."Feature_7" IS NULL) THEN 0.19153674833 ELSE "ADS"."Feature_7" END AS impter_9, CASE WHEN ("ADS"."Feature_8" IS NULL) THEN 0.00668151447661 ELSE "ADS"."Feature_8" END AS impter_10, CASE WHEN ("ADS"."Feature_9" IS NULL) THEN 1.91091314031 ELSE "ADS"."Feature_9" END AS impter_11, CASE WHEN ("ADS"."Feature_10" IS NULL) THEN 10.4855233853 ELSE "ADS"."Feature_10" END AS impter_12, CASE WHEN ("ADS"."Feature_11" IS NULL) THEN 12.1848552339 ELSE "ADS"."Feature_11" END AS impter_13, CASE WHEN ("ADS"."Feature_12" IS NULL) THEN 10.5501113586 ELSE "ADS"."Feature_12" END AS impter_14, CASE WHEN ("ADS"."Feature_13" IS NULL) THEN 8.04454342984 ELSE "ADS"."Feature_13" END AS impter_15, CASE WHEN ("ADS"."Feature_14" IS NULL) THEN 2.04231625835 ELSE "ADS"."Feature_14" END AS impter_16, CASE WHEN ("ADS"."Feature_15" IS NULL) THEN 0.113585746102 ELSE "ADS"."Feature_15" END AS impter_17, CASE WHEN ("ADS"."Feature_16" IS NULL) THEN 0.0 ELSE "ADS"."Feature_16" END AS impter_18, CASE WHEN ("ADS"."Feature_17" IS NULL) THEN 2.35634743875 ELSE "ADS"."Feature_17" END AS impter_19, CASE WHEN ("ADS"."Feature_18" IS NULL) THEN 9.54565701559 ELSE "ADS"."Feature_18" END AS impter_20, CASE WHEN ("ADS"."Feature_19" IS NULL) THEN 7.32293986637 ELSE "ADS"."Feature_19" END AS impter_21, CASE WHEN ("ADS"."Feature_20" IS NULL) THEN 7.75501113586 ELSE "ADS"."Feature_20" END AS impter_22, CASE WHEN ("ADS"."Feature_21" IS NULL) THEN 7.65033407572 ELSE "ADS"."Feature_21" END AS impter_23, CASE WHEN ("ADS"."Feature_22" IS NULL) THEN 1.82182628062 ELSE "ADS"."Feature_22" END AS impter_24, CASE WHEN ("ADS"."Feature_23" IS NULL) THEN 0.0400890868597 ELSE "ADS"."Feature_23" END AS impter_25, CASE WHEN ("ADS"."Feature_24" IS NULL) THEN 0.0 ELSE "ADS"."Feature_24" END AS impter_26, CASE WHEN ("ADS"."Feature_25" IS NULL) THEN 2.18708240535 ELSE "ADS"."Feature_25" END AS impter_27, CASE WHEN ("ADS"."Feature_26" IS NULL) THEN 8.36748329621 ELSE "ADS"."Feature_26" END AS impter_28, CASE WHEN ("ADS"."Feature_27" IS NULL) THEN 8.79287305122 ELSE "ADS"."Feature_27" END AS impter_29, CASE WHEN ("ADS"."Feature_28" IS NULL) THEN 10.1692650334 ELSE "ADS"."Feature_28" END AS impter_30, CASE WHEN ("ADS"."Feature_29" IS NULL) THEN 7.43207126949 ELSE "ADS"."Feature_29" END AS impter_31, CASE WHEN ("ADS"."Feature_30" IS NULL) THEN 2.1714922049 ELSE "ADS"."Feature_30" END AS impter_32, CASE WHEN ("ADS"."Feature_31" IS NULL) THEN 0.0 ELSE "ADS"."Feature_31" END AS impter_33, CASE WHEN ("ADS"."Feature_32" IS NULL) THEN 0.0 ELSE "ADS"."Feature_32" END AS impter_34, CASE WHEN ("ADS"."Feature_33" IS NULL) THEN 1.91982182628 ELSE "ADS"."Feature_33" END AS impter_35, CASE WHEN ("ADS"."Feature_34" IS NULL) THEN 6.95991091314 ELSE "ADS"."Feature_34" END AS impter_36, CASE WHEN ("ADS"."Feature_35" IS NULL) THEN 9.28062360802 ELSE "ADS"."Feature_35" END AS impter_37, CASE WHEN ("ADS"."Feature_36" IS NULL) THEN 10.5189309577 ELSE "ADS"."Feature_36" END AS impter_38, CASE WHEN ("ADS"."Feature_37" IS NULL) THEN 8.26057906459 ELSE "ADS"."Feature_37" END AS impter_39, CASE WHEN ("ADS"."Feature_38" IS NULL) THEN 2.52338530067 ELSE "ADS"."Feature_38" END AS impter_40, CASE WHEN ("ADS"."Feature_39" IS NULL) THEN 0.0 ELSE "ADS"."Feature_39" END AS impter_41, CASE WHEN ("ADS"."Feature_40" IS NULL) THEN 0.0133630289532 ELSE "ADS"."Feature_40" END AS impter_42, CASE WHEN ("ADS"."Feature_41" IS NULL) THEN 1.39643652561 ELSE "ADS"."Feature_41" END AS impter_43, CASE WHEN ("ADS"."Feature_42" IS NULL) THEN 6.61915367483 ELSE "ADS"."Feature_42" END AS impter_44, CASE WHEN ("ADS"."Feature_43" IS NULL) THEN 7.89977728285 ELSE "ADS"."Feature_43" END AS impter_45, CASE WHEN ("ADS"."Feature_44" IS NULL) THEN 8.10467706013 ELSE "ADS"."Feature_44" END AS impter_46, CASE WHEN ("ADS"."Feature_45" IS NULL) THEN 7.87305122494 ELSE "ADS"."Feature_45" END AS impter_47, CASE WHEN ("ADS"."Feature_46" IS NULL) THEN 3.05345211581 ELSE "ADS"."Feature_46" END AS impter_48, CASE WHEN ("ADS"."Feature_47" IS NULL) THEN 0.00890868596882 ELSE "ADS"."Feature_47" END AS impter_49, CASE WHEN ("ADS"."Feature_48" IS NULL) THEN 0.00890868596882 ELSE "ADS"."Feature_48" END AS impter_50, CASE WHEN ("ADS"."Feature_49" IS NULL) THEN 0.772828507795 ELSE "ADS"."Feature_49" END AS impter_51, CASE WHEN ("ADS"."Feature_50" IS NULL) THEN 7.77728285078 ELSE "ADS"."Feature_50" END AS impter_52, CASE WHEN ("ADS"."Feature_51" IS NULL) THEN 9.99777282851 ELSE "ADS"."Feature_51" END AS impter_53, CASE WHEN ("ADS"."Feature_52" IS NULL) THEN 9.95100222717 ELSE "ADS"."Feature_52" END AS impter_54, CASE WHEN ("ADS"."Feature_53" IS NULL) THEN 8.82405345212 ELSE "ADS"."Feature_53" END AS impter_55, CASE WHEN ("ADS"."Feature_54" IS NULL) THEN 3.85077951002 ELSE "ADS"."Feature_54" END AS impter_56, CASE WHEN ("ADS"."Feature_55" IS NULL) THEN 0.28285077951 ELSE "ADS"."Feature_55" END AS impter_57, CASE WHEN ("ADS"."Feature_56" IS NULL) THEN 0.0022271714922 ELSE "ADS"."Feature_56" END AS impter_58, CASE WHEN ("ADS"."Feature_57" IS NULL) THEN 0.28285077951 ELSE "ADS"."Feature_57" END AS impter_59, CASE WHEN ("ADS"."Feature_58" IS NULL) THEN 5.89755011136 ELSE "ADS"."Feature_58" END AS impter_60, CASE WHEN ("ADS"."Feature_59" IS NULL) THEN 12.0890868597 ELSE "ADS"."Feature_59" END AS impter_61, CASE WHEN ("ADS"."Feature_60" IS NULL) THEN 11.7505567929 ELSE "ADS"."Feature_60" END AS impter_62, CASE WHEN ("ADS"."Feature_61" IS NULL) THEN 6.80623608018 ELSE "ADS"."Feature_61" END AS impter_63, CASE WHEN ("ADS"."Feature_62" IS NULL) THEN 2.46325167038 ELSE "ADS"."Feature_62" END AS impter_64, CASE WHEN ("ADS"."Feature_63" IS NULL) THEN 0.603563474388 ELSE "ADS"."Feature_63" END AS impter_65 
FROM digits AS "ADS"), 
"ADS_sca_2_OUT" AS 
(SELECT "ADS_imp_1_OUT"."KEY" AS "KEY", (CAST("ADS_imp_1_OUT".impter_2 AS FLOAT) - 0.0) / 1.0 AS scaler_2, (CAST("ADS_imp_1_OUT".impter_3 AS FLOAT) - 0.285077951002) / 0.819459899091 AS scaler_3, (CAST("ADS_imp_1_OUT".impter_4 AS FLOAT) - 5.48329621381) / 4.78353819754 AS scaler_4, (CAST("ADS_imp_1_OUT".impter_5 AS FLOAT) - 12.0690423163) / 4.198541397 AS scaler_5, (CAST("ADS_imp_1_OUT".impter_6 AS FLOAT) - 11.6191536748) / 4.55744704411 AS scaler_6, (CAST("ADS_imp_1_OUT".impter_7 AS FLOAT) - 5.75501113586) / 5.74612316773 AS scaler_7, (CAST("ADS_imp_1_OUT".impter_8 AS FLOAT) - 1.53229398664) / 3.74040174384 AS scaler_8, (CAST("ADS_imp_1_OUT".impter_9 AS FLOAT) - 0.19153674833) / 1.19718288448 AS scaler_9, (CAST("ADS_imp_1_OUT".impter_10 AS FLOAT) - 0.00668151447661) / 0.105314836682 AS scaler_10, (CAST("ADS_imp_1_OUT".impter_11 AS FLOAT) - 1.91091314031) / 3.14831468531 AS scaler_11, (CAST("ADS_imp_1_OUT".impter_12 AS FLOAT) - 10.4855233853) / 5.32426389027 AS scaler_12, (CAST("ADS_imp_1_OUT".impter_13 AS FLOAT) - 12.1848552339) / 3.839675949 AS scaler_13, (CAST("ADS_imp_1_OUT".impter_14 AS FLOAT) - 10.5501113586) / 4.76137075171 AS scaler_14, (CAST("ADS_imp_1_OUT".impter_15 AS FLOAT) - 8.04454342984) / 6.14652365786 AS scaler_15, (CAST("ADS_imp_1_OUT".impter_16 AS FLOAT) - 2.04231625835) / 4.00839764127 AS scaler_16, (CAST("ADS_imp_1_OUT".impter_17 AS FLOAT) - 0.113585746102) / 0.808098109422 AS scaler_17, (CAST("ADS_imp_1_OUT".impter_18 AS FLOAT) - 0.0) / 1.0 AS scaler_18, (CAST("ADS_imp_1_OUT".impter_19 AS FLOAT) - 2.35634743875) / 3.39296547597 AS scaler_19, (CAST("ADS_imp_1_OUT".impter_20 AS FLOAT) - 9.54565701559) / 5.70298910239 AS scaler_20, (CAST("ADS_imp_1_OUT".impter_21 AS FLOAT) - 7.32293986637) / 5.91893524844 AS scaler_21, (CAST("ADS_imp_1_OUT".impter_22 AS FLOAT) - 7.75501113586) / 6.14143821163 AS scaler_22, (CAST("ADS_imp_1_OUT".impter_23 AS FLOAT) - 7.65033407572) / 6.15973389966 AS scaler_23, (CAST("ADS_imp_1_OUT".impter_24 AS FLOAT) - 1.82182628062) / 3.38730306504 AS scaler_24, (CAST("ADS_imp_1_OUT".impter_25 AS FLOAT) - 0.0400890868597) / 0.357167764031 AS scaler_25, (CAST("ADS_imp_1_OUT".impter_26 AS FLOAT) - 0.0) / 1.0 AS scaler_26, (CAST("ADS_imp_1_OUT".impter_27 AS FLOAT) - 2.18708240535) / 3.03663051674 AS scaler_27, (CAST("ADS_imp_1_OUT".impter_28 AS FLOAT) - 8.36748329621) / 6.21592990105 AS scaler_28, (CAST("ADS_imp_1_OUT".impter_29 AS FLOAT) - 8.79287305122) / 5.89887634043 AS scaler_29, (CAST("ADS_imp_1_OUT".impter_30 AS FLOAT) - 10.1692650334) / 6.03832154466 AS scaler_30, (CAST("ADS_imp_1_OUT".impter_31 AS FLOAT) - 7.43207126949) / 5.91855979549 AS scaler_31, (CAST("ADS_imp_1_OUT".impter_32 AS FLOAT) - 2.1714922049) / 3.62796460457 AS scaler_32, (CAST("ADS_imp_1_OUT".impter_33 AS FLOAT) - 0.0) / 1.0 AS scaler_33, (CAST("ADS_imp_1_OUT".impter_34 AS FLOAT) - 0.0) / 1.0 AS scaler_34, (CAST("ADS_imp_1_OUT".impter_35 AS FLOAT) - 1.91982182628) / 3.35538445905 AS scaler_35, (CAST("ADS_imp_1_OUT".impter_36 AS FLOAT) - 6.95991091314) / 6.18376320587 AS scaler_36, (CAST("ADS_imp_1_OUT".impter_37 AS FLOAT) - 9.28062360802) / 6.23100971083 AS scaler_37, (CAST("ADS_imp_1_OUT".impter_38 AS FLOAT) - 10.5189309577) / 5.78957074138 AS scaler_38, (CAST("ADS_imp_1_OUT".impter_39 AS FLOAT) - 8.26057906459) / 5.84706963125 AS scaler_39, (CAST("ADS_imp_1_OUT".impter_40 AS FLOAT) - 2.52338530067) / 3.34171330046 AS scaler_40, (CAST("ADS_imp_1_OUT".impter_41 AS FLOAT) - 0.0) / 1.0 AS scaler_41, (CAST("ADS_imp_1_OUT".impter_42 AS FLOAT) - 0.0133630289532) / 0.210629673364 AS scaler_42, (CAST("ADS_imp_1_OUT".impter_43 AS FLOAT) - 1.39643652561) / 2.93941583914 AS scaler_43, (CAST("ADS_imp_1_OUT".impter_44 AS FLOAT) - 6.61915367483) / 6.51499474459 AS scaler_44, (CAST("ADS_imp_1_OUT".impter_45 AS FLOAT) - 7.89977728285) / 6.41485087546 AS scaler_45, (CAST("ADS_imp_1_OUT".impter_46 AS FLOAT) - 8.10467706013) / 6.26157372546 AS scaler_46, (CAST("ADS_imp_1_OUT".impter_47 AS FLOAT) - 7.87305122494) / 5.67998947579 AS scaler_47, (CAST("ADS_imp_1_OUT".impter_48 AS FLOAT) - 3.05345211581) / 4.15048690337 AS scaler_48, (CAST("ADS_imp_1_OUT".impter_49 AS FLOAT) - 0.00890868596882) / 0.133184110358 AS scaler_49, (CAST("ADS_imp_1_OUT".impter_50 AS FLOAT) - 0.00890868596882) / 0.14897097112 AS scaler_50, (CAST("ADS_imp_1_OUT".impter_51 AS FLOAT) - 0.772828507795) / 1.95655969818 AS scaler_51, (CAST("ADS_imp_1_OUT".impter_52 AS FLOAT) - 7.77728285078) / 5.67841383737 AS scaler_52, (CAST("ADS_imp_1_OUT".impter_53 AS FLOAT) - 9.99777282851) / 5.17639790418 AS scaler_53, (CAST("ADS_imp_1_OUT".impter_54 AS FLOAT) - 9.95100222717) / 5.36858013542 AS scaler_54, (CAST("ADS_imp_1_OUT".impter_55 AS FLOAT) - 8.82405345212) / 5.93263974167 AS scaler_55, (CAST("ADS_imp_1_OUT".impter_56 AS FLOAT) - 3.85077951002) / 5.05405132586 AS scaler_56, (CAST("ADS_imp_1_OUT".impter_57 AS FLOAT) - 0.28285077951) / 1.17611526089 AS scaler_57, (CAST("ADS_imp_1_OUT".impter_58 AS FLOAT) - 0.0022271714922) / 0.0471403351637 AS scaler_58, (CAST("ADS_imp_1_OUT".impter_59 AS FLOAT) - 0.28285077951) / 0.874124380209 AS scaler_59, (CAST("ADS_imp_1_OUT".impter_60 AS FLOAT) - 5.89755011136) / 5.132821004 AS scaler_60, (CAST("ADS_imp_1_OUT".impter_61 AS FLOAT) - 12.0890868597) / 4.36335125022 AS scaler_61, (CAST("ADS_imp_1_OUT".impter_62 AS FLOAT) - 11.7505567929) / 5.04678829287 AS scaler_62, (CAST("ADS_imp_1_OUT".impter_63 AS FLOAT) - 6.80623608018) / 5.94858118604 AS scaler_63, (CAST("ADS_imp_1_OUT".impter_64 AS FLOAT) - 2.46325167038) / 4.531907088 AS scaler_64, (CAST("ADS_imp_1_OUT".impter_65 AS FLOAT) - 0.603563474388) / 2.45105054448 AS scaler_65 
FROM "ADS_imp_1_OUT"), 
"DT_node_lookup" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_38 < -1.73051) THEN 1 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_30 < -0.938881) THEN 3 ELSE 4 END END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Score" AS "Score" 
FROM (SELECT 0 AS node_id, 'scaler_38' AS feature, -1.73051 AS threshold, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" UNION ALL SELECT 1 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.253289 AS "Score" UNION ALL SELECT 2 AS node_id, 'scaler_30' AS feature, -0.938881 AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.034846 AS "Score" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.054619 AS "Score") AS "Values"), 
"DT_Output" AS 
(SELECT "DT_node_lookup"."KEY" AS "KEY", "DT_node_lookup".node_id_2 AS node_id_2, "DT_node_data".node_id AS node_id, "DT_node_data".feature AS feature, "DT_node_data".threshold AS threshold, "DT_node_data".depth AS depth, "DT_node_data".parent_id AS parent_id, "DT_node_data"."Score" AS "Score" 
FROM "DT_node_lookup" LEFT OUTER JOIN "DT_node_data" ON "DT_node_lookup".node_id_2 = "DT_node_data".node_id), 
"XGB_Tree_0_0" AS 
(SELECT "DT_Output"."KEY" AS "KEY", "DT_Output"."Score" AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3", 0.0 AS "Score_4", 0.0 AS "Score_5", 0.0 AS "Score_6", 0.0 AS "Score_7", 0.0 AS "Score_8", 0.0 AS "Score_9" 
FROM "DT_Output"), 
"DT_node_lookup_1" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_21 < 1.38151) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_12 < -0.936378) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_1" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Score" AS "Score" 
FROM (SELECT 0 AS node_id, 'scaler_21' AS feature, 1.38151 AS threshold, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" UNION ALL SELECT 1 AS node_id, 'scaler_12' AS feature, -0.936378 AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.276536 AS "Score" UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.027972 AS "Score" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0545987 AS "Score") AS "Values"), 
"DT_Output_1" AS 
(SELECT "DT_node_lookup_1"."KEY" AS "KEY", "DT_node_lookup_1".node_id_2 AS node_id_2, "DT_node_data_1".node_id AS node_id, "DT_node_data_1".feature AS feature, "DT_node_data_1".threshold AS threshold, "DT_node_data_1".depth AS depth, "DT_node_data_1".parent_id AS parent_id, "DT_node_data_1"."Score" AS "Score" 
FROM "DT_node_lookup_1" LEFT OUTER JOIN "DT_node_data_1" ON "DT_node_lookup_1".node_id_2 = "DT_node_data_1".node_id), 
"XGB_Tree_1_0" AS 
(SELECT "DT_Output_1"."KEY" AS "KEY", 0.0 AS "Score_0", "DT_Output_1"."Score" AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3", 0.0 AS "Score_4", 0.0 AS "Score_5", 0.0 AS "Score_6", 0.0 AS "Score_7", 0.0 AS "Score_8", 0.0 AS "Score_9" 
FROM "DT_Output_1"), 
"DT_node_lookup_2" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_64 < 0.0081088) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_39 < -0.985208) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_47 < -0.417791) THEN 5 ELSE 6 END END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_2" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Score" AS "Score" 
FROM (SELECT 0 AS node_id, 'scaler_64' AS feature, 0.0081088 AS threshold, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" UNION ALL SELECT 1 AS node_id, 'scaler_39' AS feature, -0.985208 AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" UNION ALL SELECT 2 AS node_id, 'scaler_47' AS feature, -0.417791 AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0403112 AS "Score" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0543977 AS "Score" UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.336489 AS "Score" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0126354 AS "Score") AS "Values"), 
"DT_Output_2" AS 
(SELECT "DT_node_lookup_2"."KEY" AS "KEY", "DT_node_lookup_2".node_id_2 AS node_id_2, "DT_node_data_2".node_id AS node_id, "DT_node_data_2".feature AS feature, "DT_node_data_2".threshold AS threshold, "DT_node_data_2".depth AS depth, "DT_node_data_2".parent_id AS parent_id, "DT_node_data_2"."Score" AS "Score" 
FROM "DT_node_lookup_2" LEFT OUTER JOIN "DT_node_data_2" ON "DT_node_lookup_2".node_id_2 = "DT_node_data_2".node_id), 
"XGB_Tree_2_0" AS 
(SELECT "DT_Output_2"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", "DT_Output_2"."Score" AS "Score_2", 0.0 AS "Score_3", 0.0 AS "Score_4", 0.0 AS "Score_5", 0.0 AS "Score_6", 0.0 AS "Score_7", 0.0 AS "Score_8", 0.0 AS "Score_9" 
FROM "DT_Output_2"), 
"DT_node_lookup_3" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_28 < -0.943943) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_47 < -0.241735) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_20 < -0.534046) THEN 5 ELSE 6 END END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_3" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Score" AS "Score" 
FROM (SELECT 0 AS node_id, 'scaler_28' AS feature, -0.943943 AS threshold, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" UNION ALL SELECT 1 AS node_id, 'scaler_47' AS feature, -0.241735 AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" UNION ALL SELECT 2 AS node_id, 'scaler_20' AS feature, -0.534046 AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0294118 AS "Score" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.238267 AS "Score" UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.00174825 AS "Score" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0523614 AS "Score") AS "Values"), 
"DT_Output_3" AS 
(SELECT "DT_node_lookup_3"."KEY" AS "KEY", "DT_node_lookup_3".node_id_2 AS node_id_2, "DT_node_data_3".node_id AS node_id, "DT_node_data_3".feature AS feature, "DT_node_data_3".threshold AS threshold, "DT_node_data_3".depth AS depth, "DT_node_data_3".parent_id AS parent_id, "DT_node_data_3"."Score" AS "Score" 
FROM "DT_node_lookup_3" LEFT OUTER JOIN "DT_node_data_3" ON "DT_node_lookup_3".node_id_2 = "DT_node_data_3".node_id), 
"XGB_Tree_3_0" AS 
(SELECT "DT_Output_3"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", "DT_Output_3"."Score" AS "Score_3", 0.0 AS "Score_4", 0.0 AS "Score_5", 0.0 AS "Score_6", 0.0 AS "Score_7", 0.0 AS "Score_8", 0.0 AS "Score_9" 
FROM "DT_Output_3"), 
"DT_node_lookup_4" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_35 < 1.36502) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_36 < 1.05762) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_4" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Score" AS "Score" 
FROM (SELECT 0 AS node_id, 'scaler_35' AS feature, 1.36502 AS threshold, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" UNION ALL SELECT 1 AS node_id, 'scaler_36' AS feature, 1.05762 AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.184116 AS "Score" UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.052901 AS "Score" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0120226 AS "Score") AS "Values"), 
"DT_Output_4" AS 
(SELECT "DT_node_lookup_4"."KEY" AS "KEY", "DT_node_lookup_4".node_id_2 AS node_id_2, "DT_node_data_4".node_id AS node_id, "DT_node_data_4".feature AS feature, "DT_node_data_4".threshold AS threshold, "DT_node_data_4".depth AS depth, "DT_node_data_4".parent_id AS parent_id, "DT_node_data_4"."Score" AS "Score" 
FROM "DT_node_lookup_4" LEFT OUTER JOIN "DT_node_data_4" ON "DT_node_lookup_4".node_id_2 = "DT_node_data_4".node_id), 
"XGB_Tree_4_0" AS 
(SELECT "DT_Output_4"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3", "DT_Output_4"."Score" AS "Score_4", 0.0 AS "Score_5", 0.0 AS "Score_6", 0.0 AS "Score_7", 0.0 AS "Score_8", 0.0 AS "Score_9" 
FROM "DT_Output_4"), 
"DT_node_lookup_5" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_23 < -0.998474) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_7 < -0.914532) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_8 < 0.258717) THEN 5 ELSE 6 END END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_5" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Score" AS "Score" 
FROM (SELECT 0 AS node_id, 'scaler_23' AS feature, -0.998474 AS threshold, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" UNION ALL SELECT 1 AS node_id, 'scaler_7' AS feature, -0.914532 AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" UNION ALL SELECT 2 AS node_id, 'scaler_8' AS feature, 0.258717 AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0516266 AS "Score" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.224541 AS "Score" UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0543889 AS "Score" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.032491 AS "Score") AS "Values"), 
"DT_Output_5" AS 
(SELECT "DT_node_lookup_5"."KEY" AS "KEY", "DT_node_lookup_5".node_id_2 AS node_id_2, "DT_node_data_5".node_id AS node_id, "DT_node_data_5".feature AS feature, "DT_node_data_5".threshold AS threshold, "DT_node_data_5".depth AS depth, "DT_node_data_5".parent_id AS parent_id, "DT_node_data_5"."Score" AS "Score" 
FROM "DT_node_lookup_5" LEFT OUTER JOIN "DT_node_data_5" ON "DT_node_lookup_5".node_id_2 = "DT_node_data_5".node_id), 
"XGB_Tree_5_0" AS 
(SELECT "DT_Output_5"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3", 0.0 AS "Score_4", "DT_Output_5"."Score" AS "Score_5", 0.0 AS "Score_6", 0.0 AS "Score_7", 0.0 AS "Score_8", 0.0 AS "Score_9" 
FROM "DT_Output_5"), 
"DT_node_lookup_6" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_23 < -1.16082) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_44 < 0.365441) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_6" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Score" AS "Score" 
FROM (SELECT 0 AS node_id, 'scaler_23' AS feature, -1.16082 AS threshold, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" UNION ALL SELECT 1 AS node_id, 'scaler_44' AS feature, 0.365441 AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0529647 AS "Score" UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0511811 AS "Score" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.292419 AS "Score") AS "Values"), 
"DT_Output_6" AS 
(SELECT "DT_node_lookup_6"."KEY" AS "KEY", "DT_node_lookup_6".node_id_2 AS node_id_2, "DT_node_data_6".node_id AS node_id, "DT_node_data_6".feature AS feature, "DT_node_data_6".threshold AS threshold, "DT_node_data_6".depth AS depth, "DT_node_data_6".parent_id AS parent_id, "DT_node_data_6"."Score" AS "Score" 
FROM "DT_node_lookup_6" LEFT OUTER JOIN "DT_node_data_6" ON "DT_node_lookup_6".node_id_2 = "DT_node_data_6".node_id), 
"XGB_Tree_6_0" AS 
(SELECT "DT_Output_6"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3", 0.0 AS "Score_4", 0.0 AS "Score_5", "DT_Output_6"."Score" AS "Score_6", 0.0 AS "Score_7", 0.0 AS "Score_8", 0.0 AS "Score_9" 
FROM "DT_Output_6"), 
"DT_node_lookup_7" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_55 < -1.40309) THEN 1 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_53 < -1.44845) THEN 3 ELSE 4 END END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_7" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Score" AS "Score" 
FROM (SELECT 0 AS node_id, 'scaler_55' AS feature, -1.40309 AS threshold, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" UNION ALL SELECT 1 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.241082 AS "Score" UNION ALL SELECT 2 AS node_id, 'scaler_53' AS feature, -1.44845 AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0234657 AS "Score" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.054552 AS "Score") AS "Values"), 
"DT_Output_7" AS 
(SELECT "DT_node_lookup_7"."KEY" AS "KEY", "DT_node_lookup_7".node_id_2 AS node_id_2, "DT_node_data_7".node_id AS node_id, "DT_node_data_7".feature AS feature, "DT_node_data_7".threshold AS threshold, "DT_node_data_7".depth AS depth, "DT_node_data_7".parent_id AS parent_id, "DT_node_data_7"."Score" AS "Score" 
FROM "DT_node_lookup_7" LEFT OUTER JOIN "DT_node_data_7" ON "DT_node_lookup_7".node_id_2 = "DT_node_data_7".node_id), 
"XGB_Tree_7_0" AS 
(SELECT "DT_Output_7"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3", 0.0 AS "Score_4", 0.0 AS "Score_5", 0.0 AS "Score_6", "DT_Output_7"."Score" AS "Score_7", 0.0 AS "Score_8", 0.0 AS "Score_9" 
FROM "DT_Output_7"), 
"DT_node_lookup_8" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_40 < -0.306246) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_23 < -0.51144) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_5 < 0.340823) THEN 5 ELSE 6 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_44 < -0.0182891) THEN 7 ELSE 8 END END ELSE 2 END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_8" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Score" AS "Score" 
FROM (SELECT 0 AS node_id, 'scaler_40' AS feature, -0.306246 AS threshold, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" UNION ALL SELECT 1 AS node_id, 'scaler_23' AS feature, -0.51144 AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0510441 AS "Score" UNION ALL SELECT 3 AS node_id, 'scaler_5' AS feature, 0.340823 AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" UNION ALL SELECT 4 AS node_id, 'scaler_44' AS feature, -0.0182891 AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.032491 AS "Score" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0509182 AS "Score" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.00649351 AS "Score" UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.220497 AS "Score") AS "Values"), 
"DT_Output_8" AS 
(SELECT "DT_node_lookup_8"."KEY" AS "KEY", "DT_node_lookup_8".node_id_2 AS node_id_2, "DT_node_data_8".node_id AS node_id, "DT_node_data_8".feature AS feature, "DT_node_data_8".threshold AS threshold, "DT_node_data_8".depth AS depth, "DT_node_data_8".parent_id AS parent_id, "DT_node_data_8"."Score" AS "Score" 
FROM "DT_node_lookup_8" LEFT OUTER JOIN "DT_node_data_8" ON "DT_node_lookup_8".node_id_2 = "DT_node_data_8".node_id), 
"XGB_Tree_8_0" AS 
(SELECT "DT_Output_8"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3", 0.0 AS "Score_4", 0.0 AS "Score_5", 0.0 AS "Score_6", 0.0 AS "Score_7", "DT_Output_8"."Score" AS "Score_8", 0.0 AS "Score_9" 
FROM "DT_Output_8"), 
"DT_node_lookup_9" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_45 < -1.15354) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_23 < 0.624973) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_31 < 1.1942) THEN 5 ELSE 6 END END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_9" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Score" AS "Score" 
FROM (SELECT 0 AS node_id, 'scaler_45' AS feature, -1.15354 AS threshold, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" UNION ALL SELECT 1 AS node_id, 'scaler_23' AS feature, 0.624973 AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" UNION ALL SELECT 2 AS node_id, 'scaler_31' AS feature, 1.1942 AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.00774527 AS "Score" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.198046 AS "Score" UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0524971 AS "Score" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0144404 AS "Score") AS "Values"), 
"DT_Output_9" AS 
(SELECT "DT_node_lookup_9"."KEY" AS "KEY", "DT_node_lookup_9".node_id_2 AS node_id_2, "DT_node_data_9".node_id AS node_id, "DT_node_data_9".feature AS feature, "DT_node_data_9".threshold AS threshold, "DT_node_data_9".depth AS depth, "DT_node_data_9".parent_id AS parent_id, "DT_node_data_9"."Score" AS "Score" 
FROM "DT_node_lookup_9" LEFT OUTER JOIN "DT_node_data_9" ON "DT_node_lookup_9".node_id_2 = "DT_node_data_9".node_id), 
"XGB_Tree_9_0" AS 
(SELECT "DT_Output_9"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3", 0.0 AS "Score_4", 0.0 AS "Score_5", 0.0 AS "Score_6", 0.0 AS "Score_7", 0.0 AS "Score_8", "DT_Output_9"."Score" AS "Score_9" 
FROM "DT_Output_9"), 
"DT_node_lookup_10" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_38 < -1.73051) THEN 1 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_36 < 1.38105) THEN 3 ELSE 4 END END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_10" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Score" AS "Score" 
FROM (SELECT 0 AS node_id, 'scaler_38' AS feature, -1.73051 AS threshold, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" UNION ALL SELECT 1 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.198139 AS "Score" UNION ALL SELECT 2 AS node_id, 'scaler_36' AS feature, 1.38105 AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0542777 AS "Score" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0338151 AS "Score") AS "Values"), 
"DT_Output_10" AS 
(SELECT "DT_node_lookup_10"."KEY" AS "KEY", "DT_node_lookup_10".node_id_2 AS node_id_2, "DT_node_data_10".node_id AS node_id, "DT_node_data_10".feature AS feature, "DT_node_data_10".threshold AS threshold, "DT_node_data_10".depth AS depth, "DT_node_data_10".parent_id AS parent_id, "DT_node_data_10"."Score" AS "Score" 
FROM "DT_node_lookup_10" LEFT OUTER JOIN "DT_node_data_10" ON "DT_node_lookup_10".node_id_2 = "DT_node_data_10".node_id), 
"XGB_Tree_0_1" AS 
(SELECT "DT_Output_10"."KEY" AS "KEY", "DT_Output_10"."Score" AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3", 0.0 AS "Score_4", 0.0 AS "Score_5", 0.0 AS "Score_6", 0.0 AS "Score_7", 0.0 AS "Score_8", 0.0 AS "Score_9" 
FROM "DT_Output_10"), 
"DT_node_lookup_11" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_21 < 1.38151) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_12 < -0.936378) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_11" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Score" AS "Score" 
FROM (SELECT 0 AS node_id, 'scaler_21' AS feature, 1.38151 AS threshold, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" UNION ALL SELECT 1 AS node_id, 'scaler_12' AS feature, -0.936378 AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.215086 AS "Score" UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0261063 AS "Score" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0542591 AS "Score") AS "Values"), 
"DT_Output_11" AS 
(SELECT "DT_node_lookup_11"."KEY" AS "KEY", "DT_node_lookup_11".node_id_2 AS node_id_2, "DT_node_data_11".node_id AS node_id, "DT_node_data_11".feature AS feature, "DT_node_data_11".threshold AS threshold, "DT_node_data_11".depth AS depth, "DT_node_data_11".parent_id AS parent_id, "DT_node_data_11"."Score" AS "Score" 
FROM "DT_node_lookup_11" LEFT OUTER JOIN "DT_node_data_11" ON "DT_node_lookup_11".node_id_2 = "DT_node_data_11".node_id), 
"XGB_Tree_1_1" AS 
(SELECT "DT_Output_11"."KEY" AS "KEY", 0.0 AS "Score_0", "DT_Output_11"."Score" AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3", 0.0 AS "Score_4", 0.0 AS "Score_5", 0.0 AS "Score_6", 0.0 AS "Score_7", 0.0 AS "Score_8", 0.0 AS "Score_9" 
FROM "DT_Output_11"), 
"DT_node_lookup_12" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_64 < 0.0081088) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_39 < -0.985208) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_48 < -0.615218) THEN 5 ELSE 6 END END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_12" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Score" AS "Score" 
FROM (SELECT 0 AS node_id, 'scaler_64' AS feature, 0.0081088 AS threshold, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" UNION ALL SELECT 1 AS node_id, 'scaler_39' AS feature, -0.985208 AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" UNION ALL SELECT 2 AS node_id, 'scaler_48' AS feature, -0.615218 AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0375721 AS "Score" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0540362 AS "Score" UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.250799 AS "Score" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0101304 AS "Score") AS "Values"), 
"DT_Output_12" AS 
(SELECT "DT_node_lookup_12"."KEY" AS "KEY", "DT_node_lookup_12".node_id_2 AS node_id_2, "DT_node_data_12".node_id AS node_id, "DT_node_data_12".feature AS feature, "DT_node_data_12".threshold AS threshold, "DT_node_data_12".depth AS depth, "DT_node_data_12".parent_id AS parent_id, "DT_node_data_12"."Score" AS "Score" 
FROM "DT_node_lookup_12" LEFT OUTER JOIN "DT_node_data_12" ON "DT_node_lookup_12".node_id_2 = "DT_node_data_12".node_id), 
"XGB_Tree_2_1" AS 
(SELECT "DT_Output_12"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", "DT_Output_12"."Score" AS "Score_2", 0.0 AS "Score_3", 0.0 AS "Score_4", 0.0 AS "Score_5", 0.0 AS "Score_6", 0.0 AS "Score_7", 0.0 AS "Score_8", 0.0 AS "Score_9" 
FROM "DT_Output_12"), 
"DT_node_lookup_13" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_28 < -0.943943) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_45 < -0.218209) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_20 < -0.534046) THEN 5 ELSE 6 END END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_13" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Score" AS "Score" 
FROM (SELECT 0 AS node_id, 'scaler_28' AS feature, -0.943943 AS threshold, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" UNION ALL SELECT 1 AS node_id, 'scaler_45' AS feature, -0.218209 AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" UNION ALL SELECT 2 AS node_id, 'scaler_20' AS feature, -0.534046 AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.238499 AS "Score" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0391006 AS "Score" UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.00190937 AS "Score" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0518818 AS "Score") AS "Values"), 
"DT_Output_13" AS 
(SELECT "DT_node_lookup_13"."KEY" AS "KEY", "DT_node_lookup_13".node_id_2 AS node_id_2, "DT_node_data_13".node_id AS node_id, "DT_node_data_13".feature AS feature, "DT_node_data_13".threshold AS threshold, "DT_node_data_13".depth AS depth, "DT_node_data_13".parent_id AS parent_id, "DT_node_data_13"."Score" AS "Score" 
FROM "DT_node_lookup_13" LEFT OUTER JOIN "DT_node_data_13" ON "DT_node_lookup_13".node_id_2 = "DT_node_data_13".node_id), 
"XGB_Tree_3_1" AS 
(SELECT "DT_Output_13"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", "DT_Output_13"."Score" AS "Score_3", 0.0 AS "Score_4", 0.0 AS "Score_5", 0.0 AS "Score_6", 0.0 AS "Score_7", 0.0 AS "Score_8", 0.0 AS "Score_9" 
FROM "DT_Output_13"), 
"DT_node_lookup_14" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_35 < 0.768966) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_61 < -0.36419) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_14" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Score" AS "Score" 
FROM (SELECT 0 AS node_id, 'scaler_35' AS feature, 0.768966 AS threshold, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" UNION ALL SELECT 1 AS node_id, 'scaler_61' AS feature, -0.36419 AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.124548 AS "Score" UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0254417 AS "Score" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0541746 AS "Score") AS "Values"), 
"DT_Output_14" AS 
(SELECT "DT_node_lookup_14"."KEY" AS "KEY", "DT_node_lookup_14".node_id_2 AS node_id_2, "DT_node_data_14".node_id AS node_id, "DT_node_data_14".feature AS feature, "DT_node_data_14".threshold AS threshold, "DT_node_data_14".depth AS depth, "DT_node_data_14".parent_id AS parent_id, "DT_node_data_14"."Score" AS "Score" 
FROM "DT_node_lookup_14" LEFT OUTER JOIN "DT_node_data_14" ON "DT_node_lookup_14".node_id_2 = "DT_node_data_14".node_id), 
"XGB_Tree_4_1" AS 
(SELECT "DT_Output_14"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3", "DT_Output_14"."Score" AS "Score_4", 0.0 AS "Score_5", 0.0 AS "Score_6", 0.0 AS "Score_7", 0.0 AS "Score_8", 0.0 AS "Score_9" 
FROM "DT_Output_14"), 
"DT_node_lookup_15" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_23 < -0.998474) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_7 < -0.566471) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_8 < -0.00863383) THEN 5 ELSE 6 END END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_15" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Score" AS "Score" 
FROM (SELECT 0 AS node_id, 'scaler_23' AS feature, -0.998474 AS threshold, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" UNION ALL SELECT 1 AS node_id, 'scaler_7' AS feature, -0.566471 AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" UNION ALL SELECT 2 AS node_id, 'scaler_8' AS feature, -0.00863383 AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0521371 AS "Score" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.244582 AS "Score" UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0539974 AS "Score" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0341166 AS "Score") AS "Values"), 
"DT_Output_15" AS 
(SELECT "DT_node_lookup_15"."KEY" AS "KEY", "DT_node_lookup_15".node_id_2 AS node_id_2, "DT_node_data_15".node_id AS node_id, "DT_node_data_15".feature AS feature, "DT_node_data_15".threshold AS threshold, "DT_node_data_15".depth AS depth, "DT_node_data_15".parent_id AS parent_id, "DT_node_data_15"."Score" AS "Score" 
FROM "DT_node_lookup_15" LEFT OUTER JOIN "DT_node_data_15" ON "DT_node_lookup_15".node_id_2 = "DT_node_data_15".node_id), 
"XGB_Tree_5_1" AS 
(SELECT "DT_Output_15"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3", 0.0 AS "Score_4", "DT_Output_15"."Score" AS "Score_5", 0.0 AS "Score_6", 0.0 AS "Score_7", 0.0 AS "Score_8", 0.0 AS "Score_9" 
FROM "DT_Output_15"), 
"DT_node_lookup_16" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_23 < -1.16082) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_44 < 0.365441) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_16" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Score" AS "Score" 
FROM (SELECT 0 AS node_id, 'scaler_23' AS feature, -1.16082 AS threshold, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" UNION ALL SELECT 1 AS node_id, 'scaler_44' AS feature, 0.365441 AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0525487 AS "Score" UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.050702 AS "Score" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.225777 AS "Score") AS "Values"), 
"DT_Output_16" AS 
(SELECT "DT_node_lookup_16"."KEY" AS "KEY", "DT_node_lookup_16".node_id_2 AS node_id_2, "DT_node_data_16".node_id AS node_id, "DT_node_data_16".feature AS feature, "DT_node_data_16".threshold AS threshold, "DT_node_data_16".depth AS depth, "DT_node_data_16".parent_id AS parent_id, "DT_node_data_16"."Score" AS "Score" 
FROM "DT_node_lookup_16" LEFT OUTER JOIN "DT_node_data_16" ON "DT_node_lookup_16".node_id_2 = "DT_node_data_16".node_id), 
"XGB_Tree_6_1" AS 
(SELECT "DT_Output_16"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3", 0.0 AS "Score_4", 0.0 AS "Score_5", "DT_Output_16"."Score" AS "Score_6", 0.0 AS "Score_7", 0.0 AS "Score_8", 0.0 AS "Score_9" 
FROM "DT_Output_16"), 
"DT_node_lookup_17" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_62 < -1.63481) THEN 1 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_7 < 1.17383) THEN 3 ELSE 4 END END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_17" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Score" AS "Score" 
FROM (SELECT 0 AS node_id, 'scaler_62' AS feature, -1.63481 AS threshold, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" UNION ALL SELECT 1 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.259192 AS "Score" UNION ALL SELECT 2 AS node_id, 'scaler_7' AS feature, 1.17383 AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0545113 AS "Score" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0747282 AS "Score") AS "Values"), 
"DT_Output_17" AS 
(SELECT "DT_node_lookup_17"."KEY" AS "KEY", "DT_node_lookup_17".node_id_2 AS node_id_2, "DT_node_data_17".node_id AS node_id, "DT_node_data_17".feature AS feature, "DT_node_data_17".threshold AS threshold, "DT_node_data_17".depth AS depth, "DT_node_data_17".parent_id AS parent_id, "DT_node_data_17"."Score" AS "Score" 
FROM "DT_node_lookup_17" LEFT OUTER JOIN "DT_node_data_17" ON "DT_node_lookup_17".node_id_2 = "DT_node_data_17".node_id), 
"XGB_Tree_7_1" AS 
(SELECT "DT_Output_17"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3", 0.0 AS "Score_4", 0.0 AS "Score_5", 0.0 AS "Score_6", "DT_Output_17"."Score" AS "Score_7", 0.0 AS "Score_8", 0.0 AS "Score_9" 
FROM "DT_Output_17"), 
"DT_node_lookup_18" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_40 < -0.306246) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_23 < -0.51144) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_36 < -0.236088) THEN 5 ELSE 6 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_44 < -0.0182891) THEN 7 ELSE 8 END END ELSE 2 END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_18" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Score" AS "Score" 
FROM (SELECT 0 AS node_id, 'scaler_40' AS feature, -0.306246 AS threshold, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" UNION ALL SELECT 1 AS node_id, 'scaler_23' AS feature, -0.51144 AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.050529 AS "Score" UNION ALL SELECT 3 AS node_id, 'scaler_36' AS feature, -0.236088 AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" UNION ALL SELECT 4 AS node_id, 'scaler_44' AS feature, -0.0182891 AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0503103 AS "Score" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0320975 AS "Score" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.00664762 AS "Score" UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.175818 AS "Score") AS "Values"), 
"DT_Output_18" AS 
(SELECT "DT_node_lookup_18"."KEY" AS "KEY", "DT_node_lookup_18".node_id_2 AS node_id_2, "DT_node_data_18".node_id AS node_id, "DT_node_data_18".feature AS feature, "DT_node_data_18".threshold AS threshold, "DT_node_data_18".depth AS depth, "DT_node_data_18".parent_id AS parent_id, "DT_node_data_18"."Score" AS "Score" 
FROM "DT_node_lookup_18" LEFT OUTER JOIN "DT_node_data_18" ON "DT_node_lookup_18".node_id_2 = "DT_node_data_18".node_id), 
"XGB_Tree_8_1" AS 
(SELECT "DT_Output_18"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3", 0.0 AS "Score_4", 0.0 AS "Score_5", 0.0 AS "Score_6", 0.0 AS "Score_7", "DT_Output_18"."Score" AS "Score_8", 0.0 AS "Score_9" 
FROM "DT_Output_18"), 
"DT_node_lookup_19" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_45 < -0.99765) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_31 < 0.518357) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_27 < 0.761672) THEN 5 ELSE 6 END END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_19" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Score" AS "Score" 
FROM (SELECT 0 AS node_id, 'scaler_45' AS feature, -0.99765 AS threshold, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" UNION ALL SELECT 1 AS node_id, 'scaler_31' AS feature, 0.518357 AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" UNION ALL SELECT 2 AS node_id, 'scaler_27' AS feature, 0.761672 AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0257571 AS "Score" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.183226 AS "Score" UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0539915 AS "Score" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0330796 AS "Score") AS "Values"), 
"DT_Output_19" AS 
(SELECT "DT_node_lookup_19"."KEY" AS "KEY", "DT_node_lookup_19".node_id_2 AS node_id_2, "DT_node_data_19".node_id AS node_id, "DT_node_data_19".feature AS feature, "DT_node_data_19".threshold AS threshold, "DT_node_data_19".depth AS depth, "DT_node_data_19".parent_id AS parent_id, "DT_node_data_19"."Score" AS "Score" 
FROM "DT_node_lookup_19" LEFT OUTER JOIN "DT_node_data_19" ON "DT_node_lookup_19".node_id_2 = "DT_node_data_19".node_id), 
"XGB_Tree_9_1" AS 
(SELECT "DT_Output_19"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3", 0.0 AS "Score_4", 0.0 AS "Score_5", 0.0 AS "Score_6", 0.0 AS "Score_7", 0.0 AS "Score_8", "DT_Output_19"."Score" AS "Score_9" 
FROM "DT_Output_19"), 
"DT_node_lookup_20" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_38 < -1.73051) THEN 1 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_30 < -0.938881) THEN 3 ELSE 4 END END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_20" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Score" AS "Score" 
FROM (SELECT 0 AS node_id, 'scaler_38' AS feature, -1.73051 AS threshold, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" UNION ALL SELECT 1 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.162872 AS "Score" UNION ALL SELECT 2 AS node_id, 'scaler_30' AS feature, -0.938881 AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0326468 AS "Score" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0539381 AS "Score") AS "Values"), 
"DT_Output_20" AS 
(SELECT "DT_node_lookup_20"."KEY" AS "KEY", "DT_node_lookup_20".node_id_2 AS node_id_2, "DT_node_data_20".node_id AS node_id, "DT_node_data_20".feature AS feature, "DT_node_data_20".threshold AS threshold, "DT_node_data_20".depth AS depth, "DT_node_data_20".parent_id AS parent_id, "DT_node_data_20"."Score" AS "Score" 
FROM "DT_node_lookup_20" LEFT OUTER JOIN "DT_node_data_20" ON "DT_node_lookup_20".node_id_2 = "DT_node_data_20".node_id), 
"XGB_Tree_0_2" AS 
(SELECT "DT_Output_20"."KEY" AS "KEY", "DT_Output_20"."Score" AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3", 0.0 AS "Score_4", 0.0 AS "Score_5", 0.0 AS "Score_6", 0.0 AS "Score_7", 0.0 AS "Score_8", 0.0 AS "Score_9" 
FROM "DT_Output_20"), 
"DT_node_lookup_21" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_21 < 1.38151) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_12 < -1.1242) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_21" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Score" AS "Score" 
FROM (SELECT 0 AS node_id, 'scaler_21' AS feature, 1.38151 AS threshold, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" UNION ALL SELECT 1 AS node_id, 'scaler_12' AS feature, -1.1242 AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.17595 AS "Score" UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0297545 AS "Score" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0539565 AS "Score") AS "Values"), 
"DT_Output_21" AS 
(SELECT "DT_node_lookup_21"."KEY" AS "KEY", "DT_node_lookup_21".node_id_2 AS node_id_2, "DT_node_data_21".node_id AS node_id, "DT_node_data_21".feature AS feature, "DT_node_data_21".threshold AS threshold, "DT_node_data_21".depth AS depth, "DT_node_data_21".parent_id AS parent_id, "DT_node_data_21"."Score" AS "Score" 
FROM "DT_node_lookup_21" LEFT OUTER JOIN "DT_node_data_21" ON "DT_node_lookup_21".node_id_2 = "DT_node_data_21".node_id), 
"XGB_Tree_1_2" AS 
(SELECT "DT_Output_21"."KEY" AS "KEY", 0.0 AS "Score_0", "DT_Output_21"."Score" AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3", 0.0 AS "Score_4", 0.0 AS "Score_5", 0.0 AS "Score_6", 0.0 AS "Score_7", 0.0 AS "Score_8", 0.0 AS "Score_9" 
FROM "DT_Output_21"), 
"DT_node_lookup_22" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_64 < 0.0081088) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_39 < -0.985208) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_53 < 0.483392) THEN 5 ELSE 6 END END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_22" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Score" AS "Score" 
FROM (SELECT 0 AS node_id, 'scaler_64' AS feature, 0.0081088 AS threshold, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" UNION ALL SELECT 1 AS node_id, 'scaler_39' AS feature, -0.985208 AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" UNION ALL SELECT 2 AS node_id, 'scaler_53' AS feature, 0.483392 AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0348885 AS "Score" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0536913 AS "Score" UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.000115971 AS "Score" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.203011 AS "Score") AS "Values"), 
"DT_Output_22" AS 
(SELECT "DT_node_lookup_22"."KEY" AS "KEY", "DT_node_lookup_22".node_id_2 AS node_id_2, "DT_node_data_22".node_id AS node_id, "DT_node_data_22".feature AS feature, "DT_node_data_22".threshold AS threshold, "DT_node_data_22".depth AS depth, "DT_node_data_22".parent_id AS parent_id, "DT_node_data_22"."Score" AS "Score" 
FROM "DT_node_lookup_22" LEFT OUTER JOIN "DT_node_data_22" ON "DT_node_lookup_22".node_id_2 = "DT_node_data_22".node_id), 
"XGB_Tree_2_2" AS 
(SELECT "DT_Output_22"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", "DT_Output_22"."Score" AS "Score_2", 0.0 AS "Score_3", 0.0 AS "Score_4", 0.0 AS "Score_5", 0.0 AS "Score_6", 0.0 AS "Score_7", 0.0 AS "Score_8", 0.0 AS "Score_9" 
FROM "DT_Output_22"), 
"DT_node_lookup_23" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_45 < -0.99765) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_28 < -0.783066) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_20 < -0.709392) THEN 5 ELSE 6 END END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_23" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Score" AS "Score" 
FROM (SELECT 0 AS node_id, 'scaler_45' AS feature, -0.99765 AS threshold, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" UNION ALL SELECT 1 AS node_id, 'scaler_28' AS feature, -0.783066 AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" UNION ALL SELECT 2 AS node_id, 'scaler_20' AS feature, -0.709392 AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.226449 AS "Score" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0290787 AS "Score" UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0155754 AS "Score" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0535541 AS "Score") AS "Values"), 
"DT_Output_23" AS 
(SELECT "DT_node_lookup_23"."KEY" AS "KEY", "DT_node_lookup_23".node_id_2 AS node_id_2, "DT_node_data_23".node_id AS node_id, "DT_node_data_23".feature AS feature, "DT_node_data_23".threshold AS threshold, "DT_node_data_23".depth AS depth, "DT_node_data_23".parent_id AS parent_id, "DT_node_data_23"."Score" AS "Score" 
FROM "DT_node_lookup_23" LEFT OUTER JOIN "DT_node_data_23" ON "DT_node_lookup_23".node_id_2 = "DT_node_data_23".node_id), 
"XGB_Tree_3_2" AS 
(SELECT "DT_Output_23"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", "DT_Output_23"."Score" AS "Score_3", 0.0 AS "Score_4", 0.0 AS "Score_5", 0.0 AS "Score_6", 0.0 AS "Score_7", 0.0 AS "Score_8", 0.0 AS "Score_9" 
FROM "DT_Output_23"), 
"DT_node_lookup_24" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_35 < 0.768966) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_61 < -0.36419) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_24" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Score" AS "Score" 
FROM (SELECT 0 AS node_id, 'scaler_35' AS feature, 0.768966 AS threshold, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" UNION ALL SELECT 1 AS node_id, 'scaler_61' AS feature, -0.36419 AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.10775 AS "Score" UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0244022 AS "Score" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0538325 AS "Score") AS "Values"), 
"DT_Output_24" AS 
(SELECT "DT_node_lookup_24"."KEY" AS "KEY", "DT_node_lookup_24".node_id_2 AS node_id_2, "DT_node_data_24".node_id AS node_id, "DT_node_data_24".feature AS feature, "DT_node_data_24".threshold AS threshold, "DT_node_data_24".depth AS depth, "DT_node_data_24".parent_id AS parent_id, "DT_node_data_24"."Score" AS "Score" 
FROM "DT_node_lookup_24" LEFT OUTER JOIN "DT_node_data_24" ON "DT_node_lookup_24".node_id_2 = "DT_node_data_24".node_id), 
"XGB_Tree_4_2" AS 
(SELECT "DT_Output_24"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3", "DT_Output_24"."Score" AS "Score_4", 0.0 AS "Score_5", 0.0 AS "Score_6", 0.0 AS "Score_7", 0.0 AS "Score_8", 0.0 AS "Score_9" 
FROM "DT_Output_24"), 
"DT_node_lookup_25" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_23 < -0.998474) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_7 < -0.39244) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_8 < -0.00863383) THEN 5 ELSE 6 END END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_25" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Score" AS "Score" 
FROM (SELECT 0 AS node_id, 'scaler_23' AS feature, -0.998474 AS threshold, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" UNION ALL SELECT 1 AS node_id, 'scaler_7' AS feature, -0.39244 AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" UNION ALL SELECT 2 AS node_id, 'scaler_8' AS feature, -0.00863383 AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0462438 AS "Score" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.215606 AS "Score" UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0536612 AS "Score" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0333045 AS "Score") AS "Values"), 
"DT_Output_25" AS 
(SELECT "DT_node_lookup_25"."KEY" AS "KEY", "DT_node_lookup_25".node_id_2 AS node_id_2, "DT_node_data_25".node_id AS node_id, "DT_node_data_25".feature AS feature, "DT_node_data_25".threshold AS threshold, "DT_node_data_25".depth AS depth, "DT_node_data_25".parent_id AS parent_id, "DT_node_data_25"."Score" AS "Score" 
FROM "DT_node_lookup_25" LEFT OUTER JOIN "DT_node_data_25" ON "DT_node_lookup_25".node_id_2 = "DT_node_data_25".node_id), 
"XGB_Tree_5_2" AS 
(SELECT "DT_Output_25"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3", 0.0 AS "Score_4", "DT_Output_25"."Score" AS "Score_5", 0.0 AS "Score_6", 0.0 AS "Score_7", 0.0 AS "Score_8", 0.0 AS "Score_9" 
FROM "DT_Output_25"), 
"DT_node_lookup_26" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_23 < -1.16082) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_4 < -0.414609) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_26" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Score" AS "Score" 
FROM (SELECT 0 AS node_id, 'scaler_23' AS feature, -1.16082 AS threshold, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" UNION ALL SELECT 1 AS node_id, 'scaler_4' AS feature, -0.414609 AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0521497 AS "Score" UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.197813 AS "Score" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0366327 AS "Score") AS "Values"), 
"DT_Output_26" AS 
(SELECT "DT_node_lookup_26"."KEY" AS "KEY", "DT_node_lookup_26".node_id_2 AS node_id_2, "DT_node_data_26".node_id AS node_id, "DT_node_data_26".feature AS feature, "DT_node_data_26".threshold AS threshold, "DT_node_data_26".depth AS depth, "DT_node_data_26".parent_id AS parent_id, "DT_node_data_26"."Score" AS "Score" 
FROM "DT_node_lookup_26" LEFT OUTER JOIN "DT_node_data_26" ON "DT_node_lookup_26".node_id_2 = "DT_node_data_26".node_id), 
"XGB_Tree_6_2" AS 
(SELECT "DT_Output_26"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3", 0.0 AS "Score_4", 0.0 AS "Score_5", "DT_Output_26"."Score" AS "Score_6", 0.0 AS "Score_7", 0.0 AS "Score_8", 0.0 AS "Score_9" 
FROM "DT_Output_26"), 
"DT_node_lookup_27" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_62 < -1.83296) THEN 1 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_7 < 1.17383) THEN 3 ELSE 4 END END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_27" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Score" AS "Score" 
FROM (SELECT 0 AS node_id, 'scaler_62' AS feature, -1.83296 AS threshold, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" UNION ALL SELECT 1 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.232907 AS "Score" UNION ALL SELECT 2 AS node_id, 'scaler_7' AS feature, 1.17383 AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.054224 AS "Score" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.067758 AS "Score") AS "Values"), 
"DT_Output_27" AS 
(SELECT "DT_node_lookup_27"."KEY" AS "KEY", "DT_node_lookup_27".node_id_2 AS node_id_2, "DT_node_data_27".node_id AS node_id, "DT_node_data_27".feature AS feature, "DT_node_data_27".threshold AS threshold, "DT_node_data_27".depth AS depth, "DT_node_data_27".parent_id AS parent_id, "DT_node_data_27"."Score" AS "Score" 
FROM "DT_node_lookup_27" LEFT OUTER JOIN "DT_node_data_27" ON "DT_node_lookup_27".node_id_2 = "DT_node_data_27".node_id), 
"XGB_Tree_7_2" AS 
(SELECT "DT_Output_27"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3", 0.0 AS "Score_4", 0.0 AS "Score_5", 0.0 AS "Score_6", "DT_Output_27"."Score" AS "Score_7", 0.0 AS "Score_8", 0.0 AS "Score_9" 
FROM "DT_Output_27"), 
"DT_node_lookup_28" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_29 < -0.049649) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_39 < -0.643156) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_44 < -0.0182891) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_60 < 0.117372) THEN 7 ELSE 8 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_53 < 0.290207) THEN 9 ELSE 10 END END END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_28" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Score" AS "Score" 
FROM (SELECT 0 AS node_id, 'scaler_29' AS feature, -0.049649 AS threshold, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" UNION ALL SELECT 1 AS node_id, 'scaler_39' AS feature, -0.643156 AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" UNION ALL SELECT 2 AS node_id, 'scaler_44' AS feature, -0.0182891 AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0157003 AS "Score" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0532132 AS "Score" UNION ALL SELECT 5 AS node_id, 'scaler_60' AS feature, 0.117372 AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" UNION ALL SELECT 6 AS node_id, 'scaler_53' AS feature, 0.290207 AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.00378342 AS "Score" UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0512073 AS "Score" UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.203622 AS "Score" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.000737078 AS "Score") AS "Values"), 
"DT_Output_28" AS 
(SELECT "DT_node_lookup_28"."KEY" AS "KEY", "DT_node_lookup_28".node_id_2 AS node_id_2, "DT_node_data_28".node_id AS node_id, "DT_node_data_28".feature AS feature, "DT_node_data_28".threshold AS threshold, "DT_node_data_28".depth AS depth, "DT_node_data_28".parent_id AS parent_id, "DT_node_data_28"."Score" AS "Score" 
FROM "DT_node_lookup_28" LEFT OUTER JOIN "DT_node_data_28" ON "DT_node_lookup_28".node_id_2 = "DT_node_data_28".node_id), 
"XGB_Tree_8_2" AS 
(SELECT "DT_Output_28"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3", 0.0 AS "Score_4", 0.0 AS "Score_5", 0.0 AS "Score_6", 0.0 AS "Score_7", "DT_Output_28"."Score" AS "Score_8", 0.0 AS "Score_9" 
FROM "DT_Output_28"), 
"DT_node_lookup_29" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_45 < -0.99765) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_31 < 0.687317) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_27 < 0.761672) THEN 5 ELSE 6 END END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_29" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Score" AS "Score" 
FROM (SELECT 0 AS node_id, 'scaler_45' AS feature, -0.99765 AS threshold, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" UNION ALL SELECT 1 AS node_id, 'scaler_31' AS feature, 0.687317 AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" UNION ALL SELECT 2 AS node_id, 'scaler_27' AS feature, 0.761672 AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0160955 AS "Score" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.162084 AS "Score" UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0536323 AS "Score" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.032228 AS "Score") AS "Values"), 
"DT_Output_29" AS 
(SELECT "DT_node_lookup_29"."KEY" AS "KEY", "DT_node_lookup_29".node_id_2 AS node_id_2, "DT_node_data_29".node_id AS node_id, "DT_node_data_29".feature AS feature, "DT_node_data_29".threshold AS threshold, "DT_node_data_29".depth AS depth, "DT_node_data_29".parent_id AS parent_id, "DT_node_data_29"."Score" AS "Score" 
FROM "DT_node_lookup_29" LEFT OUTER JOIN "DT_node_data_29" ON "DT_node_lookup_29".node_id_2 = "DT_node_data_29".node_id), 
"XGB_Tree_9_2" AS 
(SELECT "DT_Output_29"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3", 0.0 AS "Score_4", 0.0 AS "Score_5", 0.0 AS "Score_6", 0.0 AS "Score_7", 0.0 AS "Score_8", "DT_Output_29"."Score" AS "Score_9" 
FROM "DT_Output_29"), 
"DT_node_lookup_30" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_38 < -1.73051) THEN 1 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_30 < -0.938881) THEN 3 ELSE 4 END END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_30" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Score" AS "Score" 
FROM (SELECT 0 AS node_id, 'scaler_38' AS feature, -1.73051 AS threshold, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" UNION ALL SELECT 1 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.138335 AS "Score" UNION ALL SELECT 2 AS node_id, 'scaler_30' AS feature, -0.938881 AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0316448 AS "Score" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0536218 AS "Score") AS "Values"), 
"DT_Output_30" AS 
(SELECT "DT_node_lookup_30"."KEY" AS "KEY", "DT_node_lookup_30".node_id_2 AS node_id_2, "DT_node_data_30".node_id AS node_id, "DT_node_data_30".feature AS feature, "DT_node_data_30".threshold AS threshold, "DT_node_data_30".depth AS depth, "DT_node_data_30".parent_id AS parent_id, "DT_node_data_30"."Score" AS "Score" 
FROM "DT_node_lookup_30" LEFT OUTER JOIN "DT_node_data_30" ON "DT_node_lookup_30".node_id_2 = "DT_node_data_30".node_id), 
"XGB_Tree_0_3" AS 
(SELECT "DT_Output_30"."KEY" AS "KEY", "DT_Output_30"."Score" AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3", 0.0 AS "Score_4", 0.0 AS "Score_5", 0.0 AS "Score_6", 0.0 AS "Score_7", 0.0 AS "Score_8", 0.0 AS "Score_9" 
FROM "DT_Output_30"), 
"DT_node_lookup_31" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_21 < 1.38151) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_12 < -1.1242) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_47 < -0.593848) THEN 5 ELSE 6 END END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_31" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Score" AS "Score" 
FROM (SELECT 0 AS node_id, 'scaler_21' AS feature, 1.38151 AS threshold, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" UNION ALL SELECT 1 AS node_id, 'scaler_12' AS feature, -1.1242 AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" UNION ALL SELECT 2 AS node_id, 'scaler_47' AS feature, -0.593848 AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0276444 AS "Score" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0536351 AS "Score" UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.218519 AS "Score" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0723213 AS "Score") AS "Values"), 
"DT_Output_31" AS 
(SELECT "DT_node_lookup_31"."KEY" AS "KEY", "DT_node_lookup_31".node_id_2 AS node_id_2, "DT_node_data_31".node_id AS node_id, "DT_node_data_31".feature AS feature, "DT_node_data_31".threshold AS threshold, "DT_node_data_31".depth AS depth, "DT_node_data_31".parent_id AS parent_id, "DT_node_data_31"."Score" AS "Score" 
FROM "DT_node_lookup_31" LEFT OUTER JOIN "DT_node_data_31" ON "DT_node_lookup_31".node_id_2 = "DT_node_data_31".node_id), 
"XGB_Tree_1_3" AS 
(SELECT "DT_Output_31"."KEY" AS "KEY", 0.0 AS "Score_0", "DT_Output_31"."Score" AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3", 0.0 AS "Score_4", 0.0 AS "Score_5", 0.0 AS "Score_6", 0.0 AS "Score_7", 0.0 AS "Score_8", 0.0 AS "Score_9" 
FROM "DT_Output_31"), 
"DT_node_lookup_32" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_64 < 0.0081088) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_39 < -1.32726) THEN 3 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_47 < -0.417791) THEN 7 ELSE 8 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_28 < -0.139558) THEN 5 ELSE 6 END END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_32" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Score" AS "Score" 
FROM (SELECT 0 AS node_id, 'scaler_64' AS feature, 0.0081088 AS threshold, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" UNION ALL SELECT 1 AS node_id, 'scaler_39' AS feature, -1.32726 AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" UNION ALL SELECT 2 AS node_id, 'scaler_28' AS feature, -0.139558 AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0472855 AS "Score" UNION ALL SELECT 4 AS node_id, 'scaler_47' AS feature, -0.417791 AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.171999 AS "Score" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.00313081 AS "Score" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0330988 AS "Score" UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0532277 AS "Score") AS "Values"), 
"DT_Output_32" AS 
(SELECT "DT_node_lookup_32"."KEY" AS "KEY", "DT_node_lookup_32".node_id_2 AS node_id_2, "DT_node_data_32".node_id AS node_id, "DT_node_data_32".feature AS feature, "DT_node_data_32".threshold AS threshold, "DT_node_data_32".depth AS depth, "DT_node_data_32".parent_id AS parent_id, "DT_node_data_32"."Score" AS "Score" 
FROM "DT_node_lookup_32" LEFT OUTER JOIN "DT_node_data_32" ON "DT_node_lookup_32".node_id_2 = "DT_node_data_32".node_id), 
"XGB_Tree_2_3" AS 
(SELECT "DT_Output_32"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", "DT_Output_32"."Score" AS "Score_2", 0.0 AS "Score_3", 0.0 AS "Score_4", 0.0 AS "Score_5", 0.0 AS "Score_6", 0.0 AS "Score_7", 0.0 AS "Score_8", 0.0 AS "Score_9" 
FROM "DT_Output_32"), 
"DT_node_lookup_33" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_45 < -0.99765) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_28 < -0.783066) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_20 < -0.709392) THEN 5 ELSE 6 END END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_33" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Score" AS "Score" 
FROM (SELECT 0 AS node_id, 'scaler_45' AS feature, -0.99765 AS threshold, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" UNION ALL SELECT 1 AS node_id, 'scaler_28' AS feature, -0.783066 AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" UNION ALL SELECT 2 AS node_id, 'scaler_20' AS feature, -0.709392 AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.183701 AS "Score" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0280808 AS "Score" UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0150054 AS "Score" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0532089 AS "Score") AS "Values"), 
"DT_Output_33" AS 
(SELECT "DT_node_lookup_33"."KEY" AS "KEY", "DT_node_lookup_33".node_id_2 AS node_id_2, "DT_node_data_33".node_id AS node_id, "DT_node_data_33".feature AS feature, "DT_node_data_33".threshold AS threshold, "DT_node_data_33".depth AS depth, "DT_node_data_33".parent_id AS parent_id, "DT_node_data_33"."Score" AS "Score" 
FROM "DT_node_lookup_33" LEFT OUTER JOIN "DT_node_data_33" ON "DT_node_lookup_33".node_id_2 = "DT_node_data_33".node_id), 
"XGB_Tree_3_3" AS 
(SELECT "DT_Output_33"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", "DT_Output_33"."Score" AS "Score_3", 0.0 AS "Score_4", 0.0 AS "Score_5", 0.0 AS "Score_6", 0.0 AS "Score_7", 0.0 AS "Score_8", 0.0 AS "Score_9" 
FROM "DT_Output_33"), 
"DT_node_lookup_34" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_60 < -1.05158) THEN 1 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_28 < 1.14746) THEN 3 ELSE 4 END END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_34" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Score" AS "Score" 
FROM (SELECT 0 AS node_id, 'scaler_60' AS feature, -1.05158 AS threshold, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" UNION ALL SELECT 1 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.108502 AS "Score" UNION ALL SELECT 2 AS node_id, 'scaler_28' AS feature, 1.14746 AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0521173 AS "Score" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0110642 AS "Score") AS "Values"), 
"DT_Output_34" AS 
(SELECT "DT_node_lookup_34"."KEY" AS "KEY", "DT_node_lookup_34".node_id_2 AS node_id_2, "DT_node_data_34".node_id AS node_id, "DT_node_data_34".feature AS feature, "DT_node_data_34".threshold AS threshold, "DT_node_data_34".depth AS depth, "DT_node_data_34".parent_id AS parent_id, "DT_node_data_34"."Score" AS "Score" 
FROM "DT_node_lookup_34" LEFT OUTER JOIN "DT_node_data_34" ON "DT_node_lookup_34".node_id_2 = "DT_node_data_34".node_id), 
"XGB_Tree_4_3" AS 
(SELECT "DT_Output_34"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3", "DT_Output_34"."Score" AS "Score_4", 0.0 AS "Score_5", 0.0 AS "Score_6", 0.0 AS "Score_7", 0.0 AS "Score_8", 0.0 AS "Score_9" 
FROM "DT_Output_34"), 
"DT_node_lookup_35" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_23 < -0.998474) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_7 < -0.0443797) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_51 < -0.139443) THEN 5 ELSE 6 END END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_35" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Score" AS "Score" 
FROM (SELECT 0 AS node_id, 'scaler_23' AS feature, -0.998474 AS threshold, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" UNION ALL SELECT 1 AS node_id, 'scaler_7' AS feature, -0.0443797 AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" UNION ALL SELECT 2 AS node_id, 'scaler_51' AS feature, -0.139443 AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0362584 AS "Score" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.205018 AS "Score" UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0534198 AS "Score" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0326879 AS "Score") AS "Values"), 
"DT_Output_35" AS 
(SELECT "DT_node_lookup_35"."KEY" AS "KEY", "DT_node_lookup_35".node_id_2 AS node_id_2, "DT_node_data_35".node_id AS node_id, "DT_node_data_35".feature AS feature, "DT_node_data_35".threshold AS threshold, "DT_node_data_35".depth AS depth, "DT_node_data_35".parent_id AS parent_id, "DT_node_data_35"."Score" AS "Score" 
FROM "DT_node_lookup_35" LEFT OUTER JOIN "DT_node_data_35" ON "DT_node_lookup_35".node_id_2 = "DT_node_data_35".node_id), 
"XGB_Tree_5_3" AS 
(SELECT "DT_Output_35"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3", 0.0 AS "Score_4", "DT_Output_35"."Score" AS "Score_5", 0.0 AS "Score_6", 0.0 AS "Score_7", 0.0 AS "Score_8", 0.0 AS "Score_9" 
FROM "DT_Output_35"), 
"DT_node_lookup_36" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_23 < -1.16082) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_44 < 0.365441) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_36" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Score" AS "Score" 
FROM (SELECT 0 AS node_id, 'scaler_23' AS feature, -1.16082 AS threshold, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" UNION ALL SELECT 1 AS node_id, 'scaler_44' AS feature, 0.365441 AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0517667 AS "Score" UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0501087 AS "Score" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.160414 AS "Score") AS "Values"), 
"DT_Output_36" AS 
(SELECT "DT_node_lookup_36"."KEY" AS "KEY", "DT_node_lookup_36".node_id_2 AS node_id_2, "DT_node_data_36".node_id AS node_id, "DT_node_data_36".feature AS feature, "DT_node_data_36".threshold AS threshold, "DT_node_data_36".depth AS depth, "DT_node_data_36".parent_id AS parent_id, "DT_node_data_36"."Score" AS "Score" 
FROM "DT_node_lookup_36" LEFT OUTER JOIN "DT_node_data_36" ON "DT_node_lookup_36".node_id_2 = "DT_node_data_36".node_id), 
"XGB_Tree_6_3" AS 
(SELECT "DT_Output_36"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3", 0.0 AS "Score_4", 0.0 AS "Score_5", "DT_Output_36"."Score" AS "Score_6", 0.0 AS "Score_7", 0.0 AS "Score_8", 0.0 AS "Score_9" 
FROM "DT_Output_36"), 
"DT_node_lookup_37" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_55 < -1.40309) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_32 < -0.460725) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_63 < -0.892017) THEN 5 ELSE 6 END END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_37" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Score" AS "Score" 
FROM (SELECT 0 AS node_id, 'scaler_55' AS feature, -1.40309 AS threshold, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" UNION ALL SELECT 1 AS node_id, 'scaler_32' AS feature, -0.460725 AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" UNION ALL SELECT 2 AS node_id, 'scaler_63' AS feature, -0.892017 AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0451497 AS "Score" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.208671 AS "Score" UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0234924 AS "Score" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0536811 AS "Score") AS "Values"), 
"DT_Output_37" AS 
(SELECT "DT_node_lookup_37"."KEY" AS "KEY", "DT_node_lookup_37".node_id_2 AS node_id_2, "DT_node_data_37".node_id AS node_id, "DT_node_data_37".feature AS feature, "DT_node_data_37".threshold AS threshold, "DT_node_data_37".depth AS depth, "DT_node_data_37".parent_id AS parent_id, "DT_node_data_37"."Score" AS "Score" 
FROM "DT_node_lookup_37" LEFT OUTER JOIN "DT_node_data_37" ON "DT_node_lookup_37".node_id_2 = "DT_node_data_37".node_id), 
"XGB_Tree_7_3" AS 
(SELECT "DT_Output_37"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3", 0.0 AS "Score_4", 0.0 AS "Score_5", 0.0 AS "Score_6", "DT_Output_37"."Score" AS "Score_7", 0.0 AS "Score_8", 0.0 AS "Score_9" 
FROM "DT_Output_37"), 
"DT_node_lookup_38" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_40 < -0.306246) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_23 < -0.51144) THEN 3 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_29 < 0.119875) THEN 5 ELSE 6 END END ELSE 2 END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_38" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Score" AS "Score" 
FROM (SELECT 0 AS node_id, 'scaler_40' AS feature, -0.306246 AS threshold, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" UNION ALL SELECT 1 AS node_id, 'scaler_23' AS feature, -0.51144 AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0497303 AS "Score" UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0420741 AS "Score" UNION ALL SELECT 4 AS node_id, 'scaler_29' AS feature, 0.119875 AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0221922 AS "Score" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.129002 AS "Score") AS "Values"), 
"DT_Output_38" AS 
(SELECT "DT_node_lookup_38"."KEY" AS "KEY", "DT_node_lookup_38".node_id_2 AS node_id_2, "DT_node_data_38".node_id AS node_id, "DT_node_data_38".feature AS feature, "DT_node_data_38".threshold AS threshold, "DT_node_data_38".depth AS depth, "DT_node_data_38".parent_id AS parent_id, "DT_node_data_38"."Score" AS "Score" 
FROM "DT_node_lookup_38" LEFT OUTER JOIN "DT_node_data_38" ON "DT_node_lookup_38".node_id_2 = "DT_node_data_38".node_id), 
"XGB_Tree_8_3" AS 
(SELECT "DT_Output_38"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3", 0.0 AS "Score_4", 0.0 AS "Score_5", 0.0 AS "Score_6", 0.0 AS "Score_7", "DT_Output_38"."Score" AS "Score_8", 0.0 AS "Score_9" 
FROM "DT_Output_38"), 
"DT_node_lookup_39" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_45 < -0.841762) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_31 < 0.518357) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_39" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Score" AS "Score" 
FROM (SELECT 0 AS node_id, 'scaler_45' AS feature, -0.841762 AS threshold, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" UNION ALL SELECT 1 AS node_id, 'scaler_31' AS feature, 0.518357 AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0514871 AS "Score" UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0259475 AS "Score" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.127963 AS "Score") AS "Values"), 
"DT_Output_39" AS 
(SELECT "DT_node_lookup_39"."KEY" AS "KEY", "DT_node_lookup_39".node_id_2 AS node_id_2, "DT_node_data_39".node_id AS node_id, "DT_node_data_39".feature AS feature, "DT_node_data_39".threshold AS threshold, "DT_node_data_39".depth AS depth, "DT_node_data_39".parent_id AS parent_id, "DT_node_data_39"."Score" AS "Score" 
FROM "DT_node_lookup_39" LEFT OUTER JOIN "DT_node_data_39" ON "DT_node_lookup_39".node_id_2 = "DT_node_data_39".node_id), 
"XGB_Tree_9_3" AS 
(SELECT "DT_Output_39"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3", 0.0 AS "Score_4", 0.0 AS "Score_5", 0.0 AS "Score_6", 0.0 AS "Score_7", 0.0 AS "Score_8", "DT_Output_39"."Score" AS "Score_9" 
FROM "DT_Output_39"), 
"DT_node_lookup_40" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_30 < -1.2701) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_23 < 0.300283) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_40" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Score" AS "Score" 
FROM (SELECT 0 AS node_id, 'scaler_30' AS feature, -1.2701 AS threshold, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" UNION ALL SELECT 1 AS node_id, 'scaler_23' AS feature, 0.300283 AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0541701 AS "Score" UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.00665334 AS "Score" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.209067 AS "Score") AS "Values"), 
"DT_Output_40" AS 
(SELECT "DT_node_lookup_40"."KEY" AS "KEY", "DT_node_lookup_40".node_id_2 AS node_id_2, "DT_node_data_40".node_id AS node_id, "DT_node_data_40".feature AS feature, "DT_node_data_40".threshold AS threshold, "DT_node_data_40".depth AS depth, "DT_node_data_40".parent_id AS parent_id, "DT_node_data_40"."Score" AS "Score" 
FROM "DT_node_lookup_40" LEFT OUTER JOIN "DT_node_data_40" ON "DT_node_lookup_40".node_id_2 = "DT_node_data_40".node_id), 
"XGB_Tree_0_4" AS 
(SELECT "DT_Output_40"."KEY" AS "KEY", "DT_Output_40"."Score" AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3", 0.0 AS "Score_4", 0.0 AS "Score_5", 0.0 AS "Score_6", 0.0 AS "Score_7", 0.0 AS "Score_8", 0.0 AS "Score_9" 
FROM "DT_Output_40"), 
"DT_node_lookup_41" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_21 < 1.38151) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_12 < -1.1242) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_47 < -0.593848) THEN 5 ELSE 6 END END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_41" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Score" AS "Score" 
FROM (SELECT 0 AS node_id, 'scaler_21' AS feature, 1.38151 AS threshold, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" UNION ALL SELECT 1 AS node_id, 'scaler_12' AS feature, -1.1242 AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" UNION ALL SELECT 2 AS node_id, 'scaler_47' AS feature, -0.593848 AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0258774 AS "Score" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.053332 AS "Score" UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.183102 AS "Score" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0663137 AS "Score") AS "Values"), 
"DT_Output_41" AS 
(SELECT "DT_node_lookup_41"."KEY" AS "KEY", "DT_node_lookup_41".node_id_2 AS node_id_2, "DT_node_data_41".node_id AS node_id, "DT_node_data_41".feature AS feature, "DT_node_data_41".threshold AS threshold, "DT_node_data_41".depth AS depth, "DT_node_data_41".parent_id AS parent_id, "DT_node_data_41"."Score" AS "Score" 
FROM "DT_node_lookup_41" LEFT OUTER JOIN "DT_node_data_41" ON "DT_node_lookup_41".node_id_2 = "DT_node_data_41".node_id), 
"XGB_Tree_1_4" AS 
(SELECT "DT_Output_41"."KEY" AS "KEY", 0.0 AS "Score_0", "DT_Output_41"."Score" AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3", 0.0 AS "Score_4", 0.0 AS "Score_5", 0.0 AS "Score_6", 0.0 AS "Score_7", 0.0 AS "Score_8", 0.0 AS "Score_9" 
FROM "DT_Output_41"), 
"DT_node_lookup_42" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_64 < 0.0081088) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_39 < -0.985208) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_47 < -0.241735) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_11 < 0.504742) THEN 7 ELSE 8 END ELSE 6 END END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_42" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Score" AS "Score" 
FROM (SELECT 0 AS node_id, 'scaler_64' AS feature, 0.0081088 AS threshold, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" UNION ALL SELECT 1 AS node_id, 'scaler_39' AS feature, -0.985208 AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" UNION ALL SELECT 2 AS node_id, 'scaler_47' AS feature, -0.241735 AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0308982 AS "Score" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0530628 AS "Score" UNION ALL SELECT 5 AS node_id, 'scaler_11' AS feature, 0.504742 AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0164892 AS "Score" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0920775 AS "Score" UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.190984 AS "Score") AS "Values"), 
"DT_Output_42" AS 
(SELECT "DT_node_lookup_42"."KEY" AS "KEY", "DT_node_lookup_42".node_id_2 AS node_id_2, "DT_node_data_42".node_id AS node_id, "DT_node_data_42".feature AS feature, "DT_node_data_42".threshold AS threshold, "DT_node_data_42".depth AS depth, "DT_node_data_42".parent_id AS parent_id, "DT_node_data_42"."Score" AS "Score" 
FROM "DT_node_lookup_42" LEFT OUTER JOIN "DT_node_data_42" ON "DT_node_lookup_42".node_id_2 = "DT_node_data_42".node_id), 
"XGB_Tree_2_4" AS 
(SELECT "DT_Output_42"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", "DT_Output_42"."Score" AS "Score_2", 0.0 AS "Score_3", 0.0 AS "Score_4", 0.0 AS "Score_5", 0.0 AS "Score_6", 0.0 AS "Score_7", 0.0 AS "Score_8", 0.0 AS "Score_9" 
FROM "DT_Output_42"), 
"DT_node_lookup_43" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_45 < -0.99765) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_20 < -0.183352) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_52 < -0.929359) THEN 5 ELSE 6 END END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_43" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Score" AS "Score" 
FROM (SELECT 0 AS node_id, 'scaler_45' AS feature, -0.99765 AS threshold, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" UNION ALL SELECT 1 AS node_id, 'scaler_20' AS feature, -0.183352 AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" UNION ALL SELECT 2 AS node_id, 'scaler_52' AS feature, -0.929359 AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.152928 AS "Score" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0327552 AS "Score" UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.00922887 AS "Score" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.050663 AS "Score") AS "Values"), 
"DT_Output_43" AS 
(SELECT "DT_node_lookup_43"."KEY" AS "KEY", "DT_node_lookup_43".node_id_2 AS node_id_2, "DT_node_data_43".node_id AS node_id, "DT_node_data_43".feature AS feature, "DT_node_data_43".threshold AS threshold, "DT_node_data_43".depth AS depth, "DT_node_data_43".parent_id AS parent_id, "DT_node_data_43"."Score" AS "Score" 
FROM "DT_node_lookup_43" LEFT OUTER JOIN "DT_node_data_43" ON "DT_node_lookup_43".node_id_2 = "DT_node_data_43".node_id), 
"XGB_Tree_3_4" AS 
(SELECT "DT_Output_43"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", "DT_Output_43"."Score" AS "Score_3", 0.0 AS "Score_4", 0.0 AS "Score_5", 0.0 AS "Score_6", 0.0 AS "Score_7", 0.0 AS "Score_8", 0.0 AS "Score_9" 
FROM "DT_Output_43"), 
"DT_node_lookup_44" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_35 < 0.768966) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_61 < -0.36419) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_46 < 0.701952) THEN 5 ELSE 6 END END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_44" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Score" AS "Score" 
FROM (SELECT 0 AS node_id, 'scaler_35' AS feature, 0.768966 AS threshold, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" UNION ALL SELECT 1 AS node_id, 'scaler_61' AS feature, -0.36419 AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" UNION ALL SELECT 2 AS node_id, 'scaler_46' AS feature, 0.701952 AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0240892 AS "Score" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0533018 AS "Score" UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0434756 AS "Score" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.218144 AS "Score") AS "Values"), 
"DT_Output_44" AS 
(SELECT "DT_node_lookup_44"."KEY" AS "KEY", "DT_node_lookup_44".node_id_2 AS node_id_2, "DT_node_data_44".node_id AS node_id, "DT_node_data_44".feature AS feature, "DT_node_data_44".threshold AS threshold, "DT_node_data_44".depth AS depth, "DT_node_data_44".parent_id AS parent_id, "DT_node_data_44"."Score" AS "Score" 
FROM "DT_node_lookup_44" LEFT OUTER JOIN "DT_node_data_44" ON "DT_node_lookup_44".node_id_2 = "DT_node_data_44".node_id), 
"XGB_Tree_4_4" AS 
(SELECT "DT_Output_44"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3", "DT_Output_44"."Score" AS "Score_4", 0.0 AS "Score_5", 0.0 AS "Score_6", 0.0 AS "Score_7", 0.0 AS "Score_8", 0.0 AS "Score_9" 
FROM "DT_Output_44"), 
"DT_node_lookup_45" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_23 < -0.998474) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_7 < -0.0443797) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_51 < -0.139443) THEN 5 ELSE 6 END END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_45" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Score" AS "Score" 
FROM (SELECT 0 AS node_id, 'scaler_23' AS feature, -0.998474 AS threshold, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" UNION ALL SELECT 1 AS node_id, 'scaler_7' AS feature, -0.0443797 AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" UNION ALL SELECT 2 AS node_id, 'scaler_51' AS feature, -0.139443 AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0353577 AS "Score" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.172342 AS "Score" UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0530871 AS "Score" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0319764 AS "Score") AS "Values"), 
"DT_Output_45" AS 
(SELECT "DT_node_lookup_45"."KEY" AS "KEY", "DT_node_lookup_45".node_id_2 AS node_id_2, "DT_node_data_45".node_id AS node_id, "DT_node_data_45".feature AS feature, "DT_node_data_45".threshold AS threshold, "DT_node_data_45".depth AS depth, "DT_node_data_45".parent_id AS parent_id, "DT_node_data_45"."Score" AS "Score" 
FROM "DT_node_lookup_45" LEFT OUTER JOIN "DT_node_data_45" ON "DT_node_lookup_45".node_id_2 = "DT_node_data_45".node_id), 
"XGB_Tree_5_4" AS 
(SELECT "DT_Output_45"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3", 0.0 AS "Score_4", "DT_Output_45"."Score" AS "Score_5", 0.0 AS "Score_6", 0.0 AS "Score_7", 0.0 AS "Score_8", 0.0 AS "Score_9" 
FROM "DT_Output_45"), 
"DT_node_lookup_46" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_23 < -1.16082) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_48 < 0.58946) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_46" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Score" AS "Score" 
FROM (SELECT 0 AS node_id, 'scaler_23' AS feature, -1.16082 AS threshold, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" UNION ALL SELECT 1 AS node_id, 'scaler_48' AS feature, 0.58946 AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.051372 AS "Score" UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0162323 AS "Score" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.164396 AS "Score") AS "Values"), 
"DT_Output_46" AS 
(SELECT "DT_node_lookup_46"."KEY" AS "KEY", "DT_node_lookup_46".node_id_2 AS node_id_2, "DT_node_data_46".node_id AS node_id, "DT_node_data_46".feature AS feature, "DT_node_data_46".threshold AS threshold, "DT_node_data_46".depth AS depth, "DT_node_data_46".parent_id AS parent_id, "DT_node_data_46"."Score" AS "Score" 
FROM "DT_node_lookup_46" LEFT OUTER JOIN "DT_node_data_46" ON "DT_node_lookup_46".node_id_2 = "DT_node_data_46".node_id), 
"XGB_Tree_6_4" AS 
(SELECT "DT_Output_46"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3", 0.0 AS "Score_4", 0.0 AS "Score_5", "DT_Output_46"."Score" AS "Score_6", 0.0 AS "Score_7", 0.0 AS "Score_8", 0.0 AS "Score_9" 
FROM "DT_Output_46"), 
"DT_node_lookup_47" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_55 < -1.40309) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_31 < 0.687317) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_55 < -0.39174) THEN 5 ELSE 6 END END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_47" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Score" AS "Score" 
FROM (SELECT 0 AS node_id, 'scaler_55' AS feature, -1.40309 AS threshold, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" UNION ALL SELECT 1 AS node_id, 'scaler_31' AS feature, 0.687317 AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" UNION ALL SELECT 2 AS node_id, 'scaler_55' AS feature, -0.39174 AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0434921 AS "Score" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.175805 AS "Score" UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0229692 AS "Score" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0534158 AS "Score") AS "Values"), 
"DT_Output_47" AS 
(SELECT "DT_node_lookup_47"."KEY" AS "KEY", "DT_node_lookup_47".node_id_2 AS node_id_2, "DT_node_data_47".node_id AS node_id, "DT_node_data_47".feature AS feature, "DT_node_data_47".threshold AS threshold, "DT_node_data_47".depth AS depth, "DT_node_data_47".parent_id AS parent_id, "DT_node_data_47"."Score" AS "Score" 
FROM "DT_node_lookup_47" LEFT OUTER JOIN "DT_node_data_47" ON "DT_node_lookup_47".node_id_2 = "DT_node_data_47".node_id), 
"XGB_Tree_7_4" AS 
(SELECT "DT_Output_47"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3", 0.0 AS "Score_4", 0.0 AS "Score_5", 0.0 AS "Score_6", "DT_Output_47"."Score" AS "Score_7", 0.0 AS "Score_8", 0.0 AS "Score_9" 
FROM "DT_Output_47"), 
"DT_node_lookup_48" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_37 < -0.12528) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_54 < -0.270277) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_53 < 0.676576) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_52 < -0.048831) THEN 7 ELSE 8 END ELSE 6 END END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_48" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Score" AS "Score" 
FROM (SELECT 0 AS node_id, 'scaler_37' AS feature, -0.12528 AS threshold, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" UNION ALL SELECT 1 AS node_id, 'scaler_54' AS feature, -0.270277 AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" UNION ALL SELECT 2 AS node_id, 'scaler_53' AS feature, 0.676576 AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0317518 AS "Score" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0523296 AS "Score" UNION ALL SELECT 5 AS node_id, 'scaler_52' AS feature, -0.048831 AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0371311 AS "Score" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0170132 AS "Score" UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.124805 AS "Score") AS "Values"), 
"DT_Output_48" AS 
(SELECT "DT_node_lookup_48"."KEY" AS "KEY", "DT_node_lookup_48".node_id_2 AS node_id_2, "DT_node_data_48".node_id AS node_id, "DT_node_data_48".feature AS feature, "DT_node_data_48".threshold AS threshold, "DT_node_data_48".depth AS depth, "DT_node_data_48".parent_id AS parent_id, "DT_node_data_48"."Score" AS "Score" 
FROM "DT_node_lookup_48" LEFT OUTER JOIN "DT_node_data_48" ON "DT_node_lookup_48".node_id_2 = "DT_node_data_48".node_id), 
"XGB_Tree_8_4" AS 
(SELECT "DT_Output_48"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3", 0.0 AS "Score_4", 0.0 AS "Score_5", 0.0 AS "Score_6", 0.0 AS "Score_7", "DT_Output_48"."Score" AS "Score_8", 0.0 AS "Score_9" 
FROM "DT_Output_48"), 
"DT_node_lookup_49" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_45 < -0.99765) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_31 < 0.518357) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_19 < 0.337066) THEN 5 ELSE 6 END END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_49" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Score" AS "Score" 
FROM (SELECT 0 AS node_id, 'scaler_45' AS feature, -0.99765 AS threshold, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" UNION ALL SELECT 1 AS node_id, 'scaler_31' AS feature, 0.518357 AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" UNION ALL SELECT 2 AS node_id, 'scaler_19' AS feature, 0.337066 AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0235567 AS "Score" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.115021 AS "Score" UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0529867 AS "Score" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0319474 AS "Score") AS "Values"), 
"DT_Output_49" AS 
(SELECT "DT_node_lookup_49"."KEY" AS "KEY", "DT_node_lookup_49".node_id_2 AS node_id_2, "DT_node_data_49".node_id AS node_id, "DT_node_data_49".feature AS feature, "DT_node_data_49".threshold AS threshold, "DT_node_data_49".depth AS depth, "DT_node_data_49".parent_id AS parent_id, "DT_node_data_49"."Score" AS "Score" 
FROM "DT_node_lookup_49" LEFT OUTER JOIN "DT_node_data_49" ON "DT_node_lookup_49".node_id_2 = "DT_node_data_49".node_id), 
"XGB_Tree_9_4" AS 
(SELECT "DT_Output_49"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3", 0.0 AS "Score_4", 0.0 AS "Score_5", 0.0 AS "Score_6", 0.0 AS "Score_7", 0.0 AS "Score_8", "DT_Output_49"."Score" AS "Score_9" 
FROM "DT_Output_49"), 
"DT_node_lookup_50" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_30 < -1.2701) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_46 < -0.735386) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_50" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Score" AS "Score" 
FROM (SELECT 0 AS node_id, 'scaler_30' AS feature, -1.2701 AS threshold, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" UNION ALL SELECT 1 AS node_id, 'scaler_46' AS feature, -0.735386 AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0538433 AS "Score" UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.175224 AS "Score" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.00592348 AS "Score") AS "Values"), 
"DT_Output_50" AS 
(SELECT "DT_node_lookup_50"."KEY" AS "KEY", "DT_node_lookup_50".node_id_2 AS node_id_2, "DT_node_data_50".node_id AS node_id, "DT_node_data_50".feature AS feature, "DT_node_data_50".threshold AS threshold, "DT_node_data_50".depth AS depth, "DT_node_data_50".parent_id AS parent_id, "DT_node_data_50"."Score" AS "Score" 
FROM "DT_node_lookup_50" LEFT OUTER JOIN "DT_node_data_50" ON "DT_node_lookup_50".node_id_2 = "DT_node_data_50".node_id), 
"XGB_Tree_0_5" AS 
(SELECT "DT_Output_50"."KEY" AS "KEY", "DT_Output_50"."Score" AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3", 0.0 AS "Score_4", 0.0 AS "Score_5", 0.0 AS "Score_6", 0.0 AS "Score_7", 0.0 AS "Score_8", 0.0 AS "Score_9" 
FROM "DT_Output_50"), 
"DT_node_lookup_51" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_21 < 1.38151) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_12 < -1.1242) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_54 < 0.661068) THEN 5 ELSE 6 END END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_51" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Score" AS "Score" 
FROM (SELECT 0 AS node_id, 'scaler_21' AS feature, 1.38151 AS threshold, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" UNION ALL SELECT 1 AS node_id, 'scaler_12' AS feature, -1.1242 AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" UNION ALL SELECT 2 AS node_id, 'scaler_54' AS feature, 0.661068 AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0243126 AS "Score" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0530301 AS "Score" UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0456263 AS "Score" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.156315 AS "Score") AS "Values"), 
"DT_Output_51" AS 
(SELECT "DT_node_lookup_51"."KEY" AS "KEY", "DT_node_lookup_51".node_id_2 AS node_id_2, "DT_node_data_51".node_id AS node_id, "DT_node_data_51".feature AS feature, "DT_node_data_51".threshold AS threshold, "DT_node_data_51".depth AS depth, "DT_node_data_51".parent_id AS parent_id, "DT_node_data_51"."Score" AS "Score" 
FROM "DT_node_lookup_51" LEFT OUTER JOIN "DT_node_data_51" ON "DT_node_lookup_51".node_id_2 = "DT_node_data_51".node_id), 
"XGB_Tree_1_5" AS 
(SELECT "DT_Output_51"."KEY" AS "KEY", 0.0 AS "Score_0", "DT_Output_51"."Score" AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3", 0.0 AS "Score_4", 0.0 AS "Score_5", 0.0 AS "Score_6", 0.0 AS "Score_7", 0.0 AS "Score_8", 0.0 AS "Score_9" 
FROM "DT_Output_51"), 
"DT_node_lookup_52" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_47 < -0.241735) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_55 < -0.897417) THEN 3 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_28 < -0.461312) THEN 7 ELSE 8 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_28 < -0.783066) THEN 5 ELSE 6 END END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_52" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Score" AS "Score" 
FROM (SELECT 0 AS node_id, 'scaler_47' AS feature, -0.241735 AS threshold, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" UNION ALL SELECT 1 AS node_id, 'scaler_55' AS feature, -0.897417 AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" UNION ALL SELECT 2 AS node_id, 'scaler_28' AS feature, -0.783066 AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0516913 AS "Score" UNION ALL SELECT 4 AS node_id, 'scaler_28' AS feature, -0.461312 AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.00641997 AS "Score" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0531707 AS "Score" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.177631 AS "Score" UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0432795 AS "Score") AS "Values"), 
"DT_Output_52" AS 
(SELECT "DT_node_lookup_52"."KEY" AS "KEY", "DT_node_lookup_52".node_id_2 AS node_id_2, "DT_node_data_52".node_id AS node_id, "DT_node_data_52".feature AS feature, "DT_node_data_52".threshold AS threshold, "DT_node_data_52".depth AS depth, "DT_node_data_52".parent_id AS parent_id, "DT_node_data_52"."Score" AS "Score" 
FROM "DT_node_lookup_52" LEFT OUTER JOIN "DT_node_data_52" ON "DT_node_lookup_52".node_id_2 = "DT_node_data_52".node_id), 
"XGB_Tree_2_5" AS 
(SELECT "DT_Output_52"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", "DT_Output_52"."Score" AS "Score_2", 0.0 AS "Score_3", 0.0 AS "Score_4", 0.0 AS "Score_5", 0.0 AS "Score_6", 0.0 AS "Score_7", 0.0 AS "Score_8", 0.0 AS "Score_9" 
FROM "DT_Output_52"), 
"DT_node_lookup_53" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_28 < -0.943943) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_45 < -0.841762) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_20 < -0.358699) THEN 5 ELSE 6 END END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_53" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Score" AS "Score" 
FROM (SELECT 0 AS node_id, 'scaler_28' AS feature, -0.943943 AS threshold, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" UNION ALL SELECT 1 AS node_id, 'scaler_45' AS feature, -0.841762 AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" UNION ALL SELECT 2 AS node_id, 'scaler_20' AS feature, -0.358699 AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.139957 AS "Score" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0274681 AS "Score" UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.00267026 AS "Score" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.050167 AS "Score") AS "Values"), 
"DT_Output_53" AS 
(SELECT "DT_node_lookup_53"."KEY" AS "KEY", "DT_node_lookup_53".node_id_2 AS node_id_2, "DT_node_data_53".node_id AS node_id, "DT_node_data_53".feature AS feature, "DT_node_data_53".threshold AS threshold, "DT_node_data_53".depth AS depth, "DT_node_data_53".parent_id AS parent_id, "DT_node_data_53"."Score" AS "Score" 
FROM "DT_node_lookup_53" LEFT OUTER JOIN "DT_node_data_53" ON "DT_node_lookup_53".node_id_2 = "DT_node_data_53".node_id), 
"XGB_Tree_3_5" AS 
(SELECT "DT_Output_53"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", "DT_Output_53"."Score" AS "Score_3", 0.0 AS "Score_4", 0.0 AS "Score_5", 0.0 AS "Score_6", 0.0 AS "Score_7", 0.0 AS "Score_8", 0.0 AS "Score_9" 
FROM "DT_Output_53"), 
"DT_node_lookup_54" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_35 < 0.768966) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_61 < -0.36419) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_46 < 0.861656) THEN 5 ELSE 6 END END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_54" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Score" AS "Score" 
FROM (SELECT 0 AS node_id, 'scaler_35' AS feature, 0.768966 AS threshold, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" UNION ALL SELECT 1 AS node_id, 'scaler_61' AS feature, -0.36419 AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" UNION ALL SELECT 2 AS node_id, 'scaler_46' AS feature, 0.861656 AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0233731 AS "Score" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0529863 AS "Score" UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0274463 AS "Score" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.186017 AS "Score") AS "Values"), 
"DT_Output_54" AS 
(SELECT "DT_node_lookup_54"."KEY" AS "KEY", "DT_node_lookup_54".node_id_2 AS node_id_2, "DT_node_data_54".node_id AS node_id, "DT_node_data_54".feature AS feature, "DT_node_data_54".threshold AS threshold, "DT_node_data_54".depth AS depth, "DT_node_data_54".parent_id AS parent_id, "DT_node_data_54"."Score" AS "Score" 
FROM "DT_node_lookup_54" LEFT OUTER JOIN "DT_node_data_54" ON "DT_node_lookup_54".node_id_2 = "DT_node_data_54".node_id), 
"XGB_Tree_4_5" AS 
(SELECT "DT_Output_54"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3", "DT_Output_54"."Score" AS "Score_4", 0.0 AS "Score_5", 0.0 AS "Score_6", 0.0 AS "Score_7", 0.0 AS "Score_8", 0.0 AS "Score_9" 
FROM "DT_Output_54"), 
"DT_node_lookup_55" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_23 < -0.998474) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_7 < -0.21841) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_28 < 0.986581) THEN 5 ELSE 6 END END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_55" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Score" AS "Score" 
FROM (SELECT 0 AS node_id, 'scaler_23' AS feature, -0.998474 AS threshold, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" UNION ALL SELECT 1 AS node_id, 'scaler_7' AS feature, -0.21841 AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" UNION ALL SELECT 2 AS node_id, 'scaler_28' AS feature, 0.986581 AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0391064 AS "Score" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.143852 AS "Score" UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0527848 AS "Score" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0320387 AS "Score") AS "Values"), 
"DT_Output_55" AS 
(SELECT "DT_node_lookup_55"."KEY" AS "KEY", "DT_node_lookup_55".node_id_2 AS node_id_2, "DT_node_data_55".node_id AS node_id, "DT_node_data_55".feature AS feature, "DT_node_data_55".threshold AS threshold, "DT_node_data_55".depth AS depth, "DT_node_data_55".parent_id AS parent_id, "DT_node_data_55"."Score" AS "Score" 
FROM "DT_node_lookup_55" LEFT OUTER JOIN "DT_node_data_55" ON "DT_node_lookup_55".node_id_2 = "DT_node_data_55".node_id), 
"XGB_Tree_5_5" AS 
(SELECT "DT_Output_55"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3", 0.0 AS "Score_4", "DT_Output_55"."Score" AS "Score_5", 0.0 AS "Score_6", 0.0 AS "Score_7", 0.0 AS "Score_8", 0.0 AS "Score_9" 
FROM "DT_Output_55"), 
"DT_node_lookup_56" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_23 < -1.16082) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_4 < -0.414609) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_56" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Score" AS "Score" 
FROM (SELECT 0 AS node_id, 'scaler_23' AS feature, -1.16082 AS threshold, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" UNION ALL SELECT 1 AS node_id, 'scaler_4' AS feature, -0.414609 AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0509971 AS "Score" UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.131984 AS "Score" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0359275 AS "Score") AS "Values"), 
"DT_Output_56" AS 
(SELECT "DT_node_lookup_56"."KEY" AS "KEY", "DT_node_lookup_56".node_id_2 AS node_id_2, "DT_node_data_56".node_id AS node_id, "DT_node_data_56".feature AS feature, "DT_node_data_56".threshold AS threshold, "DT_node_data_56".depth AS depth, "DT_node_data_56".parent_id AS parent_id, "DT_node_data_56"."Score" AS "Score" 
FROM "DT_node_lookup_56" LEFT OUTER JOIN "DT_node_data_56" ON "DT_node_lookup_56".node_id_2 = "DT_node_data_56".node_id), 
"XGB_Tree_6_5" AS 
(SELECT "DT_Output_56"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3", 0.0 AS "Score_4", 0.0 AS "Score_5", "DT_Output_56"."Score" AS "Score_6", 0.0 AS "Score_7", 0.0 AS "Score_8", 0.0 AS "Score_9" 
FROM "DT_Output_56"), 
"DT_node_lookup_57" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_55 < -1.40309) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_28 < 0.101757) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_37 < 0.998133) THEN 5 ELSE 6 END END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_57" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Score" AS "Score" 
FROM (SELECT 0 AS node_id, 'scaler_55' AS feature, -1.40309 AS threshold, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" UNION ALL SELECT 1 AS node_id, 'scaler_28' AS feature, 0.101757 AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" UNION ALL SELECT 2 AS node_id, 'scaler_37' AS feature, 0.998133 AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.148573 AS "Score" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0274921 AS "Score" UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0531474 AS "Score" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0242975 AS "Score") AS "Values"), 
"DT_Output_57" AS 
(SELECT "DT_node_lookup_57"."KEY" AS "KEY", "DT_node_lookup_57".node_id_2 AS node_id_2, "DT_node_data_57".node_id AS node_id, "DT_node_data_57".feature AS feature, "DT_node_data_57".threshold AS threshold, "DT_node_data_57".depth AS depth, "DT_node_data_57".parent_id AS parent_id, "DT_node_data_57"."Score" AS "Score" 
FROM "DT_node_lookup_57" LEFT OUTER JOIN "DT_node_data_57" ON "DT_node_lookup_57".node_id_2 = "DT_node_data_57".node_id), 
"XGB_Tree_7_5" AS 
(SELECT "DT_Output_57"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3", 0.0 AS "Score_4", 0.0 AS "Score_5", 0.0 AS "Score_6", "DT_Output_57"."Score" AS "Score_7", 0.0 AS "Score_8", 0.0 AS "Score_9" 
FROM "DT_Output_57"), 
"DT_node_lookup_58" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_40 < -0.306246) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_23 < -0.51144) THEN 3 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_29 < -0.049649) THEN 5 ELSE 6 END END ELSE 2 END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_58" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Score" AS "Score" 
FROM (SELECT 0 AS node_id, 'scaler_40' AS feature, -0.306246 AS threshold, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" UNION ALL SELECT 1 AS node_id, 'scaler_23' AS feature, -0.51144 AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0489633 AS "Score" UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0408963 AS "Score" UNION ALL SELECT 4 AS node_id, 'scaler_29' AS feature, -0.049649 AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0264738 AS "Score" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.100283 AS "Score") AS "Values"), 
"DT_Output_58" AS 
(SELECT "DT_node_lookup_58"."KEY" AS "KEY", "DT_node_lookup_58".node_id_2 AS node_id_2, "DT_node_data_58".node_id AS node_id, "DT_node_data_58".feature AS feature, "DT_node_data_58".threshold AS threshold, "DT_node_data_58".depth AS depth, "DT_node_data_58".parent_id AS parent_id, "DT_node_data_58"."Score" AS "Score" 
FROM "DT_node_lookup_58" LEFT OUTER JOIN "DT_node_data_58" ON "DT_node_lookup_58".node_id_2 = "DT_node_data_58".node_id), 
"XGB_Tree_8_5" AS 
(SELECT "DT_Output_58"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3", 0.0 AS "Score_4", 0.0 AS "Score_5", 0.0 AS "Score_6", 0.0 AS "Score_7", "DT_Output_58"."Score" AS "Score_8", 0.0 AS "Score_9" 
FROM "DT_Output_58"), 
"DT_node_lookup_59" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_45 < -0.841762) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_38 < -0.175994) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_28 < 0.343073) THEN 5 ELSE 6 END ELSE 4 END ELSE 2 END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_59" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Score" AS "Score" 
FROM (SELECT 0 AS node_id, 'scaler_45' AS feature, -0.841762 AS threshold, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" UNION ALL SELECT 1 AS node_id, 'scaler_38' AS feature, -0.175994 AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0506777 AS "Score" UNION ALL SELECT 3 AS node_id, 'scaler_28' AS feature, 0.343073 AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0258403 AS "Score" UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.134659 AS "Score" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0518281 AS "Score") AS "Values"), 
"DT_Output_59" AS 
(SELECT "DT_node_lookup_59"."KEY" AS "KEY", "DT_node_lookup_59".node_id_2 AS node_id_2, "DT_node_data_59".node_id AS node_id, "DT_node_data_59".feature AS feature, "DT_node_data_59".threshold AS threshold, "DT_node_data_59".depth AS depth, "DT_node_data_59".parent_id AS parent_id, "DT_node_data_59"."Score" AS "Score" 
FROM "DT_node_lookup_59" LEFT OUTER JOIN "DT_node_data_59" ON "DT_node_lookup_59".node_id_2 = "DT_node_data_59".node_id), 
"XGB_Tree_9_5" AS 
(SELECT "DT_Output_59"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3", 0.0 AS "Score_4", 0.0 AS "Score_5", 0.0 AS "Score_6", 0.0 AS "Score_7", 0.0 AS "Score_8", "DT_Output_59"."Score" AS "Score_9" 
FROM "DT_Output_59"), 
"DT_node_lookup_60" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_30 < -1.2701) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_23 < 0.300283) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_60" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Score" AS "Score" 
FROM (SELECT 0 AS node_id, 'scaler_30' AS feature, -1.2701 AS threshold, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" UNION ALL SELECT 1 AS node_id, 'scaler_23' AS feature, 0.300283 AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.053518 AS "Score" UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.00378694 AS "Score" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.154343 AS "Score") AS "Values"), 
"DT_Output_60" AS 
(SELECT "DT_node_lookup_60"."KEY" AS "KEY", "DT_node_lookup_60".node_id_2 AS node_id_2, "DT_node_data_60".node_id AS node_id, "DT_node_data_60".feature AS feature, "DT_node_data_60".threshold AS threshold, "DT_node_data_60".depth AS depth, "DT_node_data_60".parent_id AS parent_id, "DT_node_data_60"."Score" AS "Score" 
FROM "DT_node_lookup_60" LEFT OUTER JOIN "DT_node_data_60" ON "DT_node_lookup_60".node_id_2 = "DT_node_data_60".node_id), 
"XGB_Tree_0_6" AS 
(SELECT "DT_Output_60"."KEY" AS "KEY", "DT_Output_60"."Score" AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3", 0.0 AS "Score_4", 0.0 AS "Score_5", 0.0 AS "Score_6", 0.0 AS "Score_7", 0.0 AS "Score_8", 0.0 AS "Score_9" 
FROM "DT_Output_60"), 
"DT_node_lookup_61" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_21 < 1.38151) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_12 < -1.1242) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_30 < 0.220382) THEN 5 ELSE 6 END END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_61" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Score" AS "Score" 
FROM (SELECT 0 AS node_id, 'scaler_21' AS feature, 1.38151 AS threshold, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" UNION ALL SELECT 1 AS node_id, 'scaler_12' AS feature, -1.1242 AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" UNION ALL SELECT 2 AS node_id, 'scaler_30' AS feature, 0.220382 AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0229541 AS "Score" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0527395 AS "Score" UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0375573 AS "Score" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.137214 AS "Score") AS "Values"), 
"DT_Output_61" AS 
(SELECT "DT_node_lookup_61"."KEY" AS "KEY", "DT_node_lookup_61".node_id_2 AS node_id_2, "DT_node_data_61".node_id AS node_id, "DT_node_data_61".feature AS feature, "DT_node_data_61".threshold AS threshold, "DT_node_data_61".depth AS depth, "DT_node_data_61".parent_id AS parent_id, "DT_node_data_61"."Score" AS "Score" 
FROM "DT_node_lookup_61" LEFT OUTER JOIN "DT_node_data_61" ON "DT_node_lookup_61".node_id_2 = "DT_node_data_61".node_id), 
"XGB_Tree_1_6" AS 
(SELECT "DT_Output_61"."KEY" AS "KEY", 0.0 AS "Score_0", "DT_Output_61"."Score" AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3", 0.0 AS "Score_4", 0.0 AS "Score_5", 0.0 AS "Score_6", 0.0 AS "Score_7", 0.0 AS "Score_8", 0.0 AS "Score_9" 
FROM "DT_Output_61"), 
"DT_node_lookup_62" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_47 < -0.241735) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_55 < -0.897417) THEN 3 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_29 < 0.289399) THEN 7 ELSE 8 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_28 < -0.783066) THEN 5 ELSE 6 END END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_62" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Score" AS "Score" 
FROM (SELECT 0 AS node_id, 'scaler_47' AS feature, -0.241735 AS threshold, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" UNION ALL SELECT 1 AS node_id, 'scaler_55' AS feature, -0.897417 AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" UNION ALL SELECT 2 AS node_id, 'scaler_28' AS feature, -0.783066 AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0512091 AS "Score" UNION ALL SELECT 4 AS node_id, 'scaler_29' AS feature, 0.289399 AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.00583556 AS "Score" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0528376 AS "Score" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.152248 AS "Score" UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0351588 AS "Score") AS "Values"), 
"DT_Output_62" AS 
(SELECT "DT_node_lookup_62"."KEY" AS "KEY", "DT_node_lookup_62".node_id_2 AS node_id_2, "DT_node_data_62".node_id AS node_id, "DT_node_data_62".feature AS feature, "DT_node_data_62".threshold AS threshold, "DT_node_data_62".depth AS depth, "DT_node_data_62".parent_id AS parent_id, "DT_node_data_62"."Score" AS "Score" 
FROM "DT_node_lookup_62" LEFT OUTER JOIN "DT_node_data_62" ON "DT_node_lookup_62".node_id_2 = "DT_node_data_62".node_id), 
"XGB_Tree_2_6" AS 
(SELECT "DT_Output_62"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", "DT_Output_62"."Score" AS "Score_2", 0.0 AS "Score_3", 0.0 AS "Score_4", 0.0 AS "Score_5", 0.0 AS "Score_6", 0.0 AS "Score_7", 0.0 AS "Score_8", 0.0 AS "Score_9" 
FROM "DT_Output_62"), 
"DT_node_lookup_63" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_20 < -0.183352) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_45 < -0.841762) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_28 < -0.300435) THEN 5 ELSE 6 END END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_63" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Score" AS "Score" 
FROM (SELECT 0 AS node_id, 'scaler_20' AS feature, -0.183352 AS threshold, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" UNION ALL SELECT 1 AS node_id, 'scaler_45' AS feature, -0.841762 AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" UNION ALL SELECT 2 AS node_id, 'scaler_28' AS feature, -0.300435 AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.11509 AS "Score" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0235208 AS "Score" UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.024611 AS "Score" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0521826 AS "Score") AS "Values"), 
"DT_Output_63" AS 
(SELECT "DT_node_lookup_63"."KEY" AS "KEY", "DT_node_lookup_63".node_id_2 AS node_id_2, "DT_node_data_63".node_id AS node_id, "DT_node_data_63".feature AS feature, "DT_node_data_63".threshold AS threshold, "DT_node_data_63".depth AS depth, "DT_node_data_63".parent_id AS parent_id, "DT_node_data_63"."Score" AS "Score" 
FROM "DT_node_lookup_63" LEFT OUTER JOIN "DT_node_data_63" ON "DT_node_lookup_63".node_id_2 = "DT_node_data_63".node_id), 
"XGB_Tree_3_6" AS 
(SELECT "DT_Output_63"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", "DT_Output_63"."Score" AS "Score_3", 0.0 AS "Score_4", 0.0 AS "Score_5", 0.0 AS "Score_6", 0.0 AS "Score_7", 0.0 AS "Score_8", 0.0 AS "Score_9" 
FROM "DT_Output_63"), 
"DT_node_lookup_64" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_35 < 1.96108) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_36 < 1.05762) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_64" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Score" AS "Score" 
FROM (SELECT 0 AS node_id, 'scaler_35' AS feature, 1.96108 AS threshold, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" UNION ALL SELECT 1 AS node_id, 'scaler_36' AS feature, 1.05762 AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.1593 AS "Score" UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0514306 AS "Score" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0119968 AS "Score") AS "Values"), 
"DT_Output_64" AS 
(SELECT "DT_node_lookup_64"."KEY" AS "KEY", "DT_node_lookup_64".node_id_2 AS node_id_2, "DT_node_data_64".node_id AS node_id, "DT_node_data_64".feature AS feature, "DT_node_data_64".threshold AS threshold, "DT_node_data_64".depth AS depth, "DT_node_data_64".parent_id AS parent_id, "DT_node_data_64"."Score" AS "Score" 
FROM "DT_node_lookup_64" LEFT OUTER JOIN "DT_node_data_64" ON "DT_node_lookup_64".node_id_2 = "DT_node_data_64".node_id), 
"XGB_Tree_4_6" AS 
(SELECT "DT_Output_64"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3", "DT_Output_64"."Score" AS "Score_4", 0.0 AS "Score_5", 0.0 AS "Score_6", 0.0 AS "Score_7", 0.0 AS "Score_8", 0.0 AS "Score_9" 
FROM "DT_Output_64"), 
"DT_node_lookup_65" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_23 < -0.998474) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_7 < -0.0443797) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_28 < 0.986581) THEN 5 ELSE 6 END END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_65" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Score" AS "Score" 
FROM (SELECT 0 AS node_id, 'scaler_23' AS feature, -0.998474 AS threshold, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" UNION ALL SELECT 1 AS node_id, 'scaler_7' AS feature, -0.0443797 AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" UNION ALL SELECT 2 AS node_id, 'scaler_28' AS feature, 0.986581 AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0334851 AS "Score" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.131411 AS "Score" UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.05247 AS "Score" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0312676 AS "Score") AS "Values"), 
"DT_Output_65" AS 
(SELECT "DT_node_lookup_65"."KEY" AS "KEY", "DT_node_lookup_65".node_id_2 AS node_id_2, "DT_node_data_65".node_id AS node_id, "DT_node_data_65".feature AS feature, "DT_node_data_65".threshold AS threshold, "DT_node_data_65".depth AS depth, "DT_node_data_65".parent_id AS parent_id, "DT_node_data_65"."Score" AS "Score" 
FROM "DT_node_lookup_65" LEFT OUTER JOIN "DT_node_data_65" ON "DT_node_lookup_65".node_id_2 = "DT_node_data_65".node_id), 
"XGB_Tree_5_6" AS 
(SELECT "DT_Output_65"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3", 0.0 AS "Score_4", "DT_Output_65"."Score" AS "Score_5", 0.0 AS "Score_6", 0.0 AS "Score_7", 0.0 AS "Score_8", 0.0 AS "Score_9" 
FROM "DT_Output_65"), 
"DT_node_lookup_66" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_23 < -0.998474) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_44 < 0.365441) THEN 3 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_48 < 1.07133) THEN 5 ELSE 6 END END ELSE 2 END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_66" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Score" AS "Score" 
FROM (SELECT 0 AS node_id, 'scaler_23' AS feature, -0.998474 AS threshold, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" UNION ALL SELECT 1 AS node_id, 'scaler_44' AS feature, 0.365441 AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.052765 AS "Score" UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0500331 AS "Score" UNION ALL SELECT 4 AS node_id, 'scaler_48' AS feature, 1.07133 AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0544841 AS "Score" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.159524 AS "Score") AS "Values"), 
"DT_Output_66" AS 
(SELECT "DT_node_lookup_66"."KEY" AS "KEY", "DT_node_lookup_66".node_id_2 AS node_id_2, "DT_node_data_66".node_id AS node_id, "DT_node_data_66".feature AS feature, "DT_node_data_66".threshold AS threshold, "DT_node_data_66".depth AS depth, "DT_node_data_66".parent_id AS parent_id, "DT_node_data_66"."Score" AS "Score" 
FROM "DT_node_lookup_66" LEFT OUTER JOIN "DT_node_data_66" ON "DT_node_lookup_66".node_id_2 = "DT_node_data_66".node_id), 
"XGB_Tree_6_6" AS 
(SELECT "DT_Output_66"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3", 0.0 AS "Score_4", 0.0 AS "Score_5", "DT_Output_66"."Score" AS "Score_6", 0.0 AS "Score_7", 0.0 AS "Score_8", 0.0 AS "Score_9" 
FROM "DT_Output_66"), 
"DT_node_lookup_67" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_55 < -1.40309) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_32 < -0.185088) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_32 < 0.641822) THEN 5 ELSE 6 END END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_67" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Score" AS "Score" 
FROM (SELECT 0 AS node_id, 'scaler_55' AS feature, -1.40309 AS threshold, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" UNION ALL SELECT 1 AS node_id, 'scaler_32' AS feature, -0.185088 AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" UNION ALL SELECT 2 AS node_id, 'scaler_32' AS feature, 0.641822 AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0352414 AS "Score" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.136865 AS "Score" UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0528598 AS "Score" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0229383 AS "Score") AS "Values"), 
"DT_Output_67" AS 
(SELECT "DT_node_lookup_67"."KEY" AS "KEY", "DT_node_lookup_67".node_id_2 AS node_id_2, "DT_node_data_67".node_id AS node_id, "DT_node_data_67".feature AS feature, "DT_node_data_67".threshold AS threshold, "DT_node_data_67".depth AS depth, "DT_node_data_67".parent_id AS parent_id, "DT_node_data_67"."Score" AS "Score" 
FROM "DT_node_lookup_67" LEFT OUTER JOIN "DT_node_data_67" ON "DT_node_lookup_67".node_id_2 = "DT_node_data_67".node_id), 
"XGB_Tree_7_6" AS 
(SELECT "DT_Output_67"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3", 0.0 AS "Score_4", 0.0 AS "Score_5", 0.0 AS "Score_6", "DT_Output_67"."Score" AS "Score_7", 0.0 AS "Score_8", 0.0 AS "Score_9" 
FROM "DT_Output_67"), 
"DT_node_lookup_68" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_40 < -0.306246) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_53 < 0.676576) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_44 < -0.939242) THEN 5 ELSE 6 END ELSE 4 END ELSE 2 END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_68" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Score" AS "Score" 
FROM (SELECT 0 AS node_id, 'scaler_40' AS feature, -0.306246 AS threshold, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" UNION ALL SELECT 1 AS node_id, 'scaler_53' AS feature, 0.676576 AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0484536 AS "Score" UNION ALL SELECT 3 AS node_id, 'scaler_44' AS feature, -0.939242 AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0372406 AS "Score" UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0203309 AS "Score" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0952831 AS "Score") AS "Values"), 
"DT_Output_68" AS 
(SELECT "DT_node_lookup_68"."KEY" AS "KEY", "DT_node_lookup_68".node_id_2 AS node_id_2, "DT_node_data_68".node_id AS node_id, "DT_node_data_68".feature AS feature, "DT_node_data_68".threshold AS threshold, "DT_node_data_68".depth AS depth, "DT_node_data_68".parent_id AS parent_id, "DT_node_data_68"."Score" AS "Score" 
FROM "DT_node_lookup_68" LEFT OUTER JOIN "DT_node_data_68" ON "DT_node_lookup_68".node_id_2 = "DT_node_data_68".node_id), 
"XGB_Tree_8_6" AS 
(SELECT "DT_Output_68"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3", 0.0 AS "Score_4", 0.0 AS "Score_5", 0.0 AS "Score_6", 0.0 AS "Score_7", "DT_Output_68"."Score" AS "Score_8", 0.0 AS "Score_9" 
FROM "DT_Output_68"), 
"DT_node_lookup_69" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_45 < -0.841762) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_23 < 0.624973) THEN 3 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_47 < 0.638548) THEN 5 ELSE 6 END END ELSE 2 END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_69" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Score" AS "Score" 
FROM (SELECT 0 AS node_id, 'scaler_45' AS feature, -0.841762 AS threshold, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" UNION ALL SELECT 1 AS node_id, 'scaler_23' AS feature, 0.624973 AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0502514 AS "Score" UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0217968 AS "Score" UNION ALL SELECT 4 AS node_id, 'scaler_47' AS feature, 0.638548 AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.124732 AS "Score" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0523635 AS "Score") AS "Values"), 
"DT_Output_69" AS 
(SELECT "DT_node_lookup_69"."KEY" AS "KEY", "DT_node_lookup_69".node_id_2 AS node_id_2, "DT_node_data_69".node_id AS node_id, "DT_node_data_69".feature AS feature, "DT_node_data_69".threshold AS threshold, "DT_node_data_69".depth AS depth, "DT_node_data_69".parent_id AS parent_id, "DT_node_data_69"."Score" AS "Score" 
FROM "DT_node_lookup_69" LEFT OUTER JOIN "DT_node_data_69" ON "DT_node_lookup_69".node_id_2 = "DT_node_data_69".node_id), 
"XGB_Tree_9_6" AS 
(SELECT "DT_Output_69"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3", 0.0 AS "Score_4", 0.0 AS "Score_5", 0.0 AS "Score_6", 0.0 AS "Score_7", 0.0 AS "Score_8", "DT_Output_69"."Score" AS "Score_9" 
FROM "DT_Output_69"), 
"DT_node_lookup_70" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_30 < -1.2701) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_46 < -0.735386) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_70" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Score" AS "Score" 
FROM (SELECT 0 AS node_id, 'scaler_30' AS feature, -1.2701 AS threshold, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" UNION ALL SELECT 1 AS node_id, 'scaler_46' AS feature, -0.735386 AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0532222 AS "Score" UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.136704 AS "Score" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.00323119 AS "Score") AS "Values"), 
"DT_Output_70" AS 
(SELECT "DT_node_lookup_70"."KEY" AS "KEY", "DT_node_lookup_70".node_id_2 AS node_id_2, "DT_node_data_70".node_id AS node_id, "DT_node_data_70".feature AS feature, "DT_node_data_70".threshold AS threshold, "DT_node_data_70".depth AS depth, "DT_node_data_70".parent_id AS parent_id, "DT_node_data_70"."Score" AS "Score" 
FROM "DT_node_lookup_70" LEFT OUTER JOIN "DT_node_data_70" ON "DT_node_lookup_70".node_id_2 = "DT_node_data_70".node_id), 
"XGB_Tree_0_7" AS 
(SELECT "DT_Output_70"."KEY" AS "KEY", "DT_Output_70"."Score" AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3", 0.0 AS "Score_4", 0.0 AS "Score_5", 0.0 AS "Score_6", 0.0 AS "Score_7", 0.0 AS "Score_8", 0.0 AS "Score_9" 
FROM "DT_Output_70"), 
"DT_node_lookup_71" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_21 < 0.536762) THEN 1 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_22 < 0.60979) THEN 3 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_12 < -0.936378) THEN 5 ELSE 6 END END END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_71" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Score" AS "Score" 
FROM (SELECT 0 AS node_id, 'scaler_21' AS feature, 0.536762 AS threshold, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" UNION ALL SELECT 1 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0527548 AS "Score" UNION ALL SELECT 2 AS node_id, 'scaler_22' AS feature, 0.60979 AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.00546252 AS "Score" UNION ALL SELECT 4 AS node_id, 'scaler_12' AS feature, -0.936378 AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.173551 AS "Score" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0685326 AS "Score") AS "Values"), 
"DT_Output_71" AS 
(SELECT "DT_node_lookup_71"."KEY" AS "KEY", "DT_node_lookup_71".node_id_2 AS node_id_2, "DT_node_data_71".node_id AS node_id, "DT_node_data_71".feature AS feature, "DT_node_data_71".threshold AS threshold, "DT_node_data_71".depth AS depth, "DT_node_data_71".parent_id AS parent_id, "DT_node_data_71"."Score" AS "Score" 
FROM "DT_node_lookup_71" LEFT OUTER JOIN "DT_node_data_71" ON "DT_node_lookup_71".node_id_2 = "DT_node_data_71".node_id), 
"XGB_Tree_1_7" AS 
(SELECT "DT_Output_71"."KEY" AS "KEY", 0.0 AS "Score_0", "DT_Output_71"."Score" AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3", 0.0 AS "Score_4", 0.0 AS "Score_5", 0.0 AS "Score_6", 0.0 AS "Score_7", 0.0 AS "Score_8", 0.0 AS "Score_9" 
FROM "DT_Output_71"), 
"DT_node_lookup_72" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_53 < 0.676576) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_39 < -1.15623) THEN 3 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_29 < -0.897268) THEN 7 ELSE 8 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_36 < -0.721229) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_55 < 0.282496) THEN 9 ELSE 10 END ELSE 6 END END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_72" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Score" AS "Score" 
FROM (SELECT 0 AS node_id, 'scaler_53' AS feature, 0.676576 AS threshold, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" UNION ALL SELECT 1 AS node_id, 'scaler_39' AS feature, -1.15623 AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" UNION ALL SELECT 2 AS node_id, 'scaler_36' AS feature, -0.721229 AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0288608 AS "Score" UNION ALL SELECT 4 AS node_id, 'scaler_29' AS feature, -0.897268 AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" UNION ALL SELECT 5 AS node_id, 'scaler_55' AS feature, 0.282496 AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0222748 AS "Score" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0320367 AS "Score" UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0528495 AS "Score" UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0947685 AS "Score" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.161453 AS "Score") AS "Values"), 
"DT_Output_72" AS 
(SELECT "DT_node_lookup_72"."KEY" AS "KEY", "DT_node_lookup_72".node_id_2 AS node_id_2, "DT_node_data_72".node_id AS node_id, "DT_node_data_72".feature AS feature, "DT_node_data_72".threshold AS threshold, "DT_node_data_72".depth AS depth, "DT_node_data_72".parent_id AS parent_id, "DT_node_data_72"."Score" AS "Score" 
FROM "DT_node_lookup_72" LEFT OUTER JOIN "DT_node_data_72" ON "DT_node_lookup_72".node_id_2 = "DT_node_data_72".node_id), 
"XGB_Tree_2_7" AS 
(SELECT "DT_Output_72"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", "DT_Output_72"."Score" AS "Score_2", 0.0 AS "Score_3", 0.0 AS "Score_4", 0.0 AS "Score_5", 0.0 AS "Score_6", 0.0 AS "Score_7", 0.0 AS "Score_8", 0.0 AS "Score_9" 
FROM "DT_Output_72"), 
"DT_node_lookup_73" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_20 < -0.183352) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_45 < -0.841762) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_28 < -0.300435) THEN 5 ELSE 6 END END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_73" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Score" AS "Score" 
FROM (SELECT 0 AS node_id, 'scaler_20' AS feature, -0.183352 AS threshold, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" UNION ALL SELECT 1 AS node_id, 'scaler_45' AS feature, -0.841762 AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" UNION ALL SELECT 2 AS node_id, 'scaler_28' AS feature, -0.300435 AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.101971 AS "Score" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0225582 AS "Score" UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0239025 AS "Score" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0518589 AS "Score") AS "Values"), 
"DT_Output_73" AS 
(SELECT "DT_node_lookup_73"."KEY" AS "KEY", "DT_node_lookup_73".node_id_2 AS node_id_2, "DT_node_data_73".node_id AS node_id, "DT_node_data_73".feature AS feature, "DT_node_data_73".threshold AS threshold, "DT_node_data_73".depth AS depth, "DT_node_data_73".parent_id AS parent_id, "DT_node_data_73"."Score" AS "Score" 
FROM "DT_node_lookup_73" LEFT OUTER JOIN "DT_node_data_73" ON "DT_node_lookup_73".node_id_2 = "DT_node_data_73".node_id), 
"XGB_Tree_3_7" AS 
(SELECT "DT_Output_73"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", "DT_Output_73"."Score" AS "Score_3", 0.0 AS "Score_4", 0.0 AS "Score_5", 0.0 AS "Score_6", 0.0 AS "Score_7", 0.0 AS "Score_8", 0.0 AS "Score_9" 
FROM "DT_Output_73"), 
"DT_node_lookup_74" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_35 < 1.96108) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_36 < 1.05762) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_74" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Score" AS "Score" 
FROM (SELECT 0 AS node_id, 'scaler_35' AS feature, 1.96108 AS threshold, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" UNION ALL SELECT 1 AS node_id, 'scaler_36' AS feature, 1.05762 AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.139512 AS "Score" UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0510325 AS "Score" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0119482 AS "Score") AS "Values"), 
"DT_Output_74" AS 
(SELECT "DT_node_lookup_74"."KEY" AS "KEY", "DT_node_lookup_74".node_id_2 AS node_id_2, "DT_node_data_74".node_id AS node_id, "DT_node_data_74".feature AS feature, "DT_node_data_74".threshold AS threshold, "DT_node_data_74".depth AS depth, "DT_node_data_74".parent_id AS parent_id, "DT_node_data_74"."Score" AS "Score" 
FROM "DT_node_lookup_74" LEFT OUTER JOIN "DT_node_data_74" ON "DT_node_lookup_74".node_id_2 = "DT_node_data_74".node_id), 
"XGB_Tree_4_7" AS 
(SELECT "DT_Output_74"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3", "DT_Output_74"."Score" AS "Score_4", 0.0 AS "Score_5", 0.0 AS "Score_6", 0.0 AS "Score_7", 0.0 AS "Score_8", 0.0 AS "Score_9" 
FROM "DT_Output_74"), 
"DT_node_lookup_75" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_23 < -0.998474) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_7 < -0.566471) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_37 < -1.40918) THEN 5 ELSE 6 END END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_75" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Score" AS "Score" 
FROM (SELECT 0 AS node_id, 'scaler_23' AS feature, -0.998474 AS threshold, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" UNION ALL SELECT 1 AS node_id, 'scaler_7' AS feature, -0.566471 AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" UNION ALL SELECT 2 AS node_id, 'scaler_37' AS feature, -1.40918 AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0497923 AS "Score" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.105379 AS "Score" UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0309134 AS "Score" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0522475 AS "Score") AS "Values"), 
"DT_Output_75" AS 
(SELECT "DT_node_lookup_75"."KEY" AS "KEY", "DT_node_lookup_75".node_id_2 AS node_id_2, "DT_node_data_75".node_id AS node_id, "DT_node_data_75".feature AS feature, "DT_node_data_75".threshold AS threshold, "DT_node_data_75".depth AS depth, "DT_node_data_75".parent_id AS parent_id, "DT_node_data_75"."Score" AS "Score" 
FROM "DT_node_lookup_75" LEFT OUTER JOIN "DT_node_data_75" ON "DT_node_lookup_75".node_id_2 = "DT_node_data_75".node_id), 
"XGB_Tree_5_7" AS 
(SELECT "DT_Output_75"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3", 0.0 AS "Score_4", "DT_Output_75"."Score" AS "Score_5", 0.0 AS "Score_6", 0.0 AS "Score_7", 0.0 AS "Score_8", 0.0 AS "Score_9" 
FROM "DT_Output_75"), 
"DT_node_lookup_76" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_36 < 0.895909) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_48 < 0.830396) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_56 < 0.0295249) THEN 5 ELSE 6 END END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_76" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Score" AS "Score" 
FROM (SELECT 0 AS node_id, 'scaler_36' AS feature, 0.895909 AS threshold, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" UNION ALL SELECT 1 AS node_id, 'scaler_48' AS feature, 0.830396 AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" UNION ALL SELECT 2 AS node_id, 'scaler_56' AS feature, 0.0295249 AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0528356 AS "Score" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0186082 AS "Score" UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0360156 AS "Score" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.14175 AS "Score") AS "Values"), 
"DT_Output_76" AS 
(SELECT "DT_node_lookup_76"."KEY" AS "KEY", "DT_node_lookup_76".node_id_2 AS node_id_2, "DT_node_data_76".node_id AS node_id, "DT_node_data_76".feature AS feature, "DT_node_data_76".threshold AS threshold, "DT_node_data_76".depth AS depth, "DT_node_data_76".parent_id AS parent_id, "DT_node_data_76"."Score" AS "Score" 
FROM "DT_node_lookup_76" LEFT OUTER JOIN "DT_node_data_76" ON "DT_node_lookup_76".node_id_2 = "DT_node_data_76".node_id), 
"XGB_Tree_6_7" AS 
(SELECT "DT_Output_76"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3", 0.0 AS "Score_4", 0.0 AS "Score_5", "DT_Output_76"."Score" AS "Score_6", 0.0 AS "Score_7", 0.0 AS "Score_8", 0.0 AS "Score_9" 
FROM "DT_Output_76"), 
"DT_node_lookup_77" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_62 < -0.84223) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_20 < 0.167341) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_7 < 0.825772) THEN 5 ELSE 6 END END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_77" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Score" AS "Score" 
FROM (SELECT 0 AS node_id, 'scaler_62' AS feature, -0.84223 AS threshold, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" UNION ALL SELECT 1 AS node_id, 'scaler_20' AS feature, 0.167341 AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" UNION ALL SELECT 2 AS node_id, 'scaler_7' AS feature, 0.825772 AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.12916 AS "Score" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0291667 AS "Score" UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0529845 AS "Score" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.000237728 AS "Score") AS "Values"), 
"DT_Output_77" AS 
(SELECT "DT_node_lookup_77"."KEY" AS "KEY", "DT_node_lookup_77".node_id_2 AS node_id_2, "DT_node_data_77".node_id AS node_id, "DT_node_data_77".feature AS feature, "DT_node_data_77".threshold AS threshold, "DT_node_data_77".depth AS depth, "DT_node_data_77".parent_id AS parent_id, "DT_node_data_77"."Score" AS "Score" 
FROM "DT_node_lookup_77" LEFT OUTER JOIN "DT_node_data_77" ON "DT_node_lookup_77".node_id_2 = "DT_node_data_77".node_id), 
"XGB_Tree_7_7" AS 
(SELECT "DT_Output_77"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3", 0.0 AS "Score_4", 0.0 AS "Score_5", 0.0 AS "Score_6", "DT_Output_77"."Score" AS "Score_7", 0.0 AS "Score_8", 0.0 AS "Score_9" 
FROM "DT_Output_77"), 
"DT_node_lookup_78" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_37 < -0.12528) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_22 < -0.530008) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_47 < 0.462492) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_23 < 0.300283) THEN 7 ELSE 8 END ELSE 6 END END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_78" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Score" AS "Score" 
FROM (SELECT 0 AS node_id, 'scaler_37' AS feature, -0.12528 AS threshold, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" UNION ALL SELECT 1 AS node_id, 'scaler_22' AS feature, -0.530008 AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" UNION ALL SELECT 2 AS node_id, 'scaler_47' AS feature, 0.462492 AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0312615 AS "Score" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0515259 AS "Score" UNION ALL SELECT 5 AS node_id, 'scaler_23' AS feature, 0.300283 AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0773725 AS "Score" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0426513 AS "Score" UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0347765 AS "Score") AS "Values"), 
"DT_Output_78" AS 
(SELECT "DT_node_lookup_78"."KEY" AS "KEY", "DT_node_lookup_78".node_id_2 AS node_id_2, "DT_node_data_78".node_id AS node_id, "DT_node_data_78".feature AS feature, "DT_node_data_78".threshold AS threshold, "DT_node_data_78".depth AS depth, "DT_node_data_78".parent_id AS parent_id, "DT_node_data_78"."Score" AS "Score" 
FROM "DT_node_lookup_78" LEFT OUTER JOIN "DT_node_data_78" ON "DT_node_lookup_78".node_id_2 = "DT_node_data_78".node_id), 
"XGB_Tree_8_7" AS 
(SELECT "DT_Output_78"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3", 0.0 AS "Score_4", 0.0 AS "Score_5", 0.0 AS "Score_6", 0.0 AS "Score_7", "DT_Output_78"."Score" AS "Score_8", 0.0 AS "Score_9" 
FROM "DT_Output_78"), 
"DT_node_lookup_79" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_45 < -0.841762) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_31 < 0.518357) THEN 3 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_46 < -1.2145) THEN 5 ELSE 6 END END ELSE 2 END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_79" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Score" AS "Score" 
FROM (SELECT 0 AS node_id, 'scaler_45' AS feature, -0.841762 AS threshold, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" UNION ALL SELECT 1 AS node_id, 'scaler_31' AS feature, 0.518357 AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0498253 AS "Score" UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0252293 AS "Score" UNION ALL SELECT 4 AS node_id, 'scaler_46' AS feature, -1.2145 AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.131003 AS "Score" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0271297 AS "Score") AS "Values"), 
"DT_Output_79" AS 
(SELECT "DT_node_lookup_79"."KEY" AS "KEY", "DT_node_lookup_79".node_id_2 AS node_id_2, "DT_node_data_79".node_id AS node_id, "DT_node_data_79".feature AS feature, "DT_node_data_79".threshold AS threshold, "DT_node_data_79".depth AS depth, "DT_node_data_79".parent_id AS parent_id, "DT_node_data_79"."Score" AS "Score" 
FROM "DT_node_lookup_79" LEFT OUTER JOIN "DT_node_data_79" ON "DT_node_lookup_79".node_id_2 = "DT_node_data_79".node_id), 
"XGB_Tree_9_7" AS 
(SELECT "DT_Output_79"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3", 0.0 AS "Score_4", 0.0 AS "Score_5", 0.0 AS "Score_6", 0.0 AS "Score_7", 0.0 AS "Score_8", "DT_Output_79"."Score" AS "Score_9" 
FROM "DT_Output_79"), 
"DT_node_lookup_80" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_38 < -1.21234) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_35 < 0.470938) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_80" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Score" AS "Score" 
FROM (SELECT 0 AS node_id, 'scaler_38' AS feature, -1.21234 AS threshold, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" UNION ALL SELECT 1 AS node_id, 'scaler_35' AS feature, 0.470938 AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0525427 AS "Score" UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.00472152 AS "Score" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.126594 AS "Score") AS "Values"), 
"DT_Output_80" AS 
(SELECT "DT_node_lookup_80"."KEY" AS "KEY", "DT_node_lookup_80".node_id_2 AS node_id_2, "DT_node_data_80".node_id AS node_id, "DT_node_data_80".feature AS feature, "DT_node_data_80".threshold AS threshold, "DT_node_data_80".depth AS depth, "DT_node_data_80".parent_id AS parent_id, "DT_node_data_80"."Score" AS "Score" 
FROM "DT_node_lookup_80" LEFT OUTER JOIN "DT_node_data_80" ON "DT_node_lookup_80".node_id_2 = "DT_node_data_80".node_id), 
"XGB_Tree_0_8" AS 
(SELECT "DT_Output_80"."KEY" AS "KEY", "DT_Output_80"."Score" AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3", 0.0 AS "Score_4", 0.0 AS "Score_5", 0.0 AS "Score_6", 0.0 AS "Score_7", 0.0 AS "Score_8", 0.0 AS "Score_9" 
FROM "DT_Output_80"), 
"DT_node_lookup_81" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_21 < 0.536762) THEN 1 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_22 < 0.60979) THEN 3 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_12 < -0.936378) THEN 5 ELSE 6 END END END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_81" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Score" AS "Score" 
FROM (SELECT 0 AS node_id, 'scaler_21' AS feature, 0.536762 AS threshold, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" UNION ALL SELECT 1 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0524593 AS "Score" UNION ALL SELECT 2 AS node_id, 'scaler_22' AS feature, 0.60979 AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.00510514 AS "Score" UNION ALL SELECT 4 AS node_id, 'scaler_12' AS feature, -0.936378 AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.150563 AS "Score" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0619604 AS "Score") AS "Values"), 
"DT_Output_81" AS 
(SELECT "DT_node_lookup_81"."KEY" AS "KEY", "DT_node_lookup_81".node_id_2 AS node_id_2, "DT_node_data_81".node_id AS node_id, "DT_node_data_81".feature AS feature, "DT_node_data_81".threshold AS threshold, "DT_node_data_81".depth AS depth, "DT_node_data_81".parent_id AS parent_id, "DT_node_data_81"."Score" AS "Score" 
FROM "DT_node_lookup_81" LEFT OUTER JOIN "DT_node_data_81" ON "DT_node_lookup_81".node_id_2 = "DT_node_data_81".node_id), 
"XGB_Tree_1_8" AS 
(SELECT "DT_Output_81"."KEY" AS "KEY", 0.0 AS "Score_0", "DT_Output_81"."Score" AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3", 0.0 AS "Score_4", 0.0 AS "Score_5", 0.0 AS "Score_6", 0.0 AS "Score_7", 0.0 AS "Score_8", 0.0 AS "Score_9" 
FROM "DT_Output_81"), 
"DT_node_lookup_82" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_28 < 0.343073) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_40 < -0.605493) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_56 < -0.465128) THEN 5 ELSE 6 END ELSE 4 END ELSE 2 END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_82" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Score" AS "Score" 
FROM (SELECT 0 AS node_id, 'scaler_28' AS feature, 0.343073 AS threshold, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" UNION ALL SELECT 1 AS node_id, 'scaler_40' AS feature, -0.605493 AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0530154 AS "Score" UNION ALL SELECT 3 AS node_id, 'scaler_56' AS feature, -0.465128 AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0394366 AS "Score" UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0139158 AS "Score" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.118749 AS "Score") AS "Values"), 
"DT_Output_82" AS 
(SELECT "DT_node_lookup_82"."KEY" AS "KEY", "DT_node_lookup_82".node_id_2 AS node_id_2, "DT_node_data_82".node_id AS node_id, "DT_node_data_82".feature AS feature, "DT_node_data_82".threshold AS threshold, "DT_node_data_82".depth AS depth, "DT_node_data_82".parent_id AS parent_id, "DT_node_data_82"."Score" AS "Score" 
FROM "DT_node_lookup_82" LEFT OUTER JOIN "DT_node_data_82" ON "DT_node_lookup_82".node_id_2 = "DT_node_data_82".node_id), 
"XGB_Tree_2_8" AS 
(SELECT "DT_Output_82"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", "DT_Output_82"."Score" AS "Score_2", 0.0 AS "Score_3", 0.0 AS "Score_4", 0.0 AS "Score_5", 0.0 AS "Score_6", 0.0 AS "Score_7", 0.0 AS "Score_8", 0.0 AS "Score_9" 
FROM "DT_Output_82"), 
"DT_node_lookup_83" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_20 < -0.183352) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_61 < 0.323355) THEN 3 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_53 < -0.289347) THEN 7 ELSE 8 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_28 < -0.300435) THEN 5 ELSE 6 END END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_83" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Score" AS "Score" 
FROM (SELECT 0 AS node_id, 'scaler_20' AS feature, -0.183352 AS threshold, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" UNION ALL SELECT 1 AS node_id, 'scaler_61' AS feature, 0.323355 AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" UNION ALL SELECT 2 AS node_id, 'scaler_28' AS feature, -0.300435 AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0347689 AS "Score" UNION ALL SELECT 4 AS node_id, 'scaler_53' AS feature, -0.289347 AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0232175 AS "Score" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0515396 AS "Score" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.134057 AS "Score" UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0136747 AS "Score") AS "Values"), 
"DT_Output_83" AS 
(SELECT "DT_node_lookup_83"."KEY" AS "KEY", "DT_node_lookup_83".node_id_2 AS node_id_2, "DT_node_data_83".node_id AS node_id, "DT_node_data_83".feature AS feature, "DT_node_data_83".threshold AS threshold, "DT_node_data_83".depth AS depth, "DT_node_data_83".parent_id AS parent_id, "DT_node_data_83"."Score" AS "Score" 
FROM "DT_node_lookup_83" LEFT OUTER JOIN "DT_node_data_83" ON "DT_node_lookup_83".node_id_2 = "DT_node_data_83".node_id), 
"XGB_Tree_3_8" AS 
(SELECT "DT_Output_83"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", "DT_Output_83"."Score" AS "Score_3", 0.0 AS "Score_4", 0.0 AS "Score_5", 0.0 AS "Score_6", 0.0 AS "Score_7", 0.0 AS "Score_8", 0.0 AS "Score_9" 
FROM "DT_Output_83"), 
"DT_node_lookup_84" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_35 < 1.96108) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_36 < 1.05762) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_84" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Score" AS "Score" 
FROM (SELECT 0 AS node_id, 'scaler_35' AS feature, 1.96108 AS threshold, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" UNION ALL SELECT 1 AS node_id, 'scaler_36' AS feature, 1.05762 AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.123614 AS "Score" UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0506315 AS "Score" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0120425 AS "Score") AS "Values"), 
"DT_Output_84" AS 
(SELECT "DT_node_lookup_84"."KEY" AS "KEY", "DT_node_lookup_84".node_id_2 AS node_id_2, "DT_node_data_84".node_id AS node_id, "DT_node_data_84".feature AS feature, "DT_node_data_84".threshold AS threshold, "DT_node_data_84".depth AS depth, "DT_node_data_84".parent_id AS parent_id, "DT_node_data_84"."Score" AS "Score" 
FROM "DT_node_lookup_84" LEFT OUTER JOIN "DT_node_data_84" ON "DT_node_lookup_84".node_id_2 = "DT_node_data_84".node_id), 
"XGB_Tree_4_8" AS 
(SELECT "DT_Output_84"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3", "DT_Output_84"."Score" AS "Score_4", 0.0 AS "Score_5", 0.0 AS "Score_6", 0.0 AS "Score_7", 0.0 AS "Score_8", 0.0 AS "Score_9" 
FROM "DT_Output_84"), 
"DT_node_lookup_85" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_23 < -0.836129) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_7 < -0.566471) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_85" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Score" AS "Score" 
FROM (SELECT 0 AS node_id, 'scaler_23' AS feature, -0.836129 AS threshold, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" UNION ALL SELECT 1 AS node_id, 'scaler_7' AS feature, -0.566471 AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.049663 AS "Score" UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0498137 AS "Score" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.096439 AS "Score") AS "Values"), 
"DT_Output_85" AS 
(SELECT "DT_node_lookup_85"."KEY" AS "KEY", "DT_node_lookup_85".node_id_2 AS node_id_2, "DT_node_data_85".node_id AS node_id, "DT_node_data_85".feature AS feature, "DT_node_data_85".threshold AS threshold, "DT_node_data_85".depth AS depth, "DT_node_data_85".parent_id AS parent_id, "DT_node_data_85"."Score" AS "Score" 
FROM "DT_node_lookup_85" LEFT OUTER JOIN "DT_node_data_85" ON "DT_node_lookup_85".node_id_2 = "DT_node_data_85".node_id), 
"XGB_Tree_5_8" AS 
(SELECT "DT_Output_85"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3", 0.0 AS "Score_4", "DT_Output_85"."Score" AS "Score_5", 0.0 AS "Score_6", 0.0 AS "Score_7", 0.0 AS "Score_8", 0.0 AS "Score_9" 
FROM "DT_Output_85"), 
"DT_node_lookup_86" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_23 < -0.998474) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_48 < -0.374282) THEN 3 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_48 < 1.5532) THEN 5 ELSE 6 END END ELSE 2 END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_86" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Score" AS "Score" 
FROM (SELECT 0 AS node_id, 'scaler_23' AS feature, -0.998474 AS threshold, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" UNION ALL SELECT 1 AS node_id, 'scaler_48' AS feature, -0.374282 AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.052265 AS "Score" UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0362258 AS "Score" UNION ALL SELECT 4 AS node_id, 'scaler_48' AS feature, 1.5532 AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0663078 AS "Score" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.120768 AS "Score") AS "Values"), 
"DT_Output_86" AS 
(SELECT "DT_node_lookup_86"."KEY" AS "KEY", "DT_node_lookup_86".node_id_2 AS node_id_2, "DT_node_data_86".node_id AS node_id, "DT_node_data_86".feature AS feature, "DT_node_data_86".threshold AS threshold, "DT_node_data_86".depth AS depth, "DT_node_data_86".parent_id AS parent_id, "DT_node_data_86"."Score" AS "Score" 
FROM "DT_node_lookup_86" LEFT OUTER JOIN "DT_node_data_86" ON "DT_node_lookup_86".node_id_2 = "DT_node_data_86".node_id), 
"XGB_Tree_6_8" AS 
(SELECT "DT_Output_86"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3", 0.0 AS "Score_4", 0.0 AS "Score_5", "DT_Output_86"."Score" AS "Score_6", 0.0 AS "Score_7", 0.0 AS "Score_8", 0.0 AS "Score_9" 
FROM "DT_Output_86"), 
"DT_node_lookup_87" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_55 < -1.40309) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_21 < -0.139035) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_11 < -0.448149) THEN 7 ELSE 8 END ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_60 < -1.05158) THEN 5 ELSE 6 END END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_87" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Score" AS "Score" 
FROM (SELECT 0 AS node_id, 'scaler_55' AS feature, -1.40309 AS threshold, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" UNION ALL SELECT 1 AS node_id, 'scaler_21' AS feature, -0.139035 AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" UNION ALL SELECT 2 AS node_id, 'scaler_60' AS feature, -1.05158 AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" UNION ALL SELECT 3 AS node_id, 'scaler_11' AS feature, -0.448149 AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.00634877 AS "Score" UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0220139 AS "Score" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0523194 AS "Score" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.129274 AS "Score" UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0764848 AS "Score") AS "Values"), 
"DT_Output_87" AS 
(SELECT "DT_node_lookup_87"."KEY" AS "KEY", "DT_node_lookup_87".node_id_2 AS node_id_2, "DT_node_data_87".node_id AS node_id, "DT_node_data_87".feature AS feature, "DT_node_data_87".threshold AS threshold, "DT_node_data_87".depth AS depth, "DT_node_data_87".parent_id AS parent_id, "DT_node_data_87"."Score" AS "Score" 
FROM "DT_node_lookup_87" LEFT OUTER JOIN "DT_node_data_87" ON "DT_node_lookup_87".node_id_2 = "DT_node_data_87".node_id), 
"XGB_Tree_7_8" AS 
(SELECT "DT_Output_87"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3", 0.0 AS "Score_4", 0.0 AS "Score_5", 0.0 AS "Score_6", "DT_Output_87"."Score" AS "Score_7", 0.0 AS "Score_8", 0.0 AS "Score_9" 
FROM "DT_Output_87"), 
"DT_node_lookup_88" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_40 < -0.306246) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_23 < -0.51144) THEN 3 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_29 < -0.049649) THEN 5 ELSE 6 END END ELSE 2 END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_88" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Score" AS "Score" 
FROM (SELECT 0 AS node_id, 'scaler_40' AS feature, -0.306246 AS threshold, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" UNION ALL SELECT 1 AS node_id, 'scaler_23' AS feature, -0.51144 AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0477522 AS "Score" UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0395853 AS "Score" UNION ALL SELECT 4 AS node_id, 'scaler_29' AS feature, -0.049649 AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0252878 AS "Score" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0787079 AS "Score") AS "Values"), 
"DT_Output_88" AS 
(SELECT "DT_node_lookup_88"."KEY" AS "KEY", "DT_node_lookup_88".node_id_2 AS node_id_2, "DT_node_data_88".node_id AS node_id, "DT_node_data_88".feature AS feature, "DT_node_data_88".threshold AS threshold, "DT_node_data_88".depth AS depth, "DT_node_data_88".parent_id AS parent_id, "DT_node_data_88"."Score" AS "Score" 
FROM "DT_node_lookup_88" LEFT OUTER JOIN "DT_node_data_88" ON "DT_node_lookup_88".node_id_2 = "DT_node_data_88".node_id), 
"XGB_Tree_8_8" AS 
(SELECT "DT_Output_88"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3", 0.0 AS "Score_4", 0.0 AS "Score_5", 0.0 AS "Score_6", 0.0 AS "Score_7", "DT_Output_88"."Score" AS "Score_8", 0.0 AS "Score_9" 
FROM "DT_Output_88"), 
"DT_node_lookup_89" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_45 < -0.841762) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_38 < -0.175994) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_36 < -0.559515) THEN 5 ELSE 6 END ELSE 4 END ELSE 2 END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_89" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Score" AS "Score" 
FROM (SELECT 0 AS node_id, 'scaler_45' AS feature, -0.841762 AS threshold, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" UNION ALL SELECT 1 AS node_id, 'scaler_38' AS feature, -0.175994 AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0494114 AS "Score" UNION ALL SELECT 3 AS node_id, 'scaler_36' AS feature, -0.559515 AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0261045 AS "Score" UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.126462 AS "Score" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.00532763 AS "Score") AS "Values"), 
"DT_Output_89" AS 
(SELECT "DT_node_lookup_89"."KEY" AS "KEY", "DT_node_lookup_89".node_id_2 AS node_id_2, "DT_node_data_89".node_id AS node_id, "DT_node_data_89".feature AS feature, "DT_node_data_89".threshold AS threshold, "DT_node_data_89".depth AS depth, "DT_node_data_89".parent_id AS parent_id, "DT_node_data_89"."Score" AS "Score" 
FROM "DT_node_lookup_89" LEFT OUTER JOIN "DT_node_data_89" ON "DT_node_lookup_89".node_id_2 = "DT_node_data_89".node_id), 
"XGB_Tree_9_8" AS 
(SELECT "DT_Output_89"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3", 0.0 AS "Score_4", 0.0 AS "Score_5", 0.0 AS "Score_6", 0.0 AS "Score_7", 0.0 AS "Score_8", "DT_Output_89"."Score" AS "Score_9" 
FROM "DT_Output_89"), 
"DT_node_lookup_90" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_30 < -1.2701) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_23 < 0.300283) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_90" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Score" AS "Score" 
FROM (SELECT 0 AS node_id, 'scaler_30' AS feature, -1.2701 AS threshold, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" UNION ALL SELECT 1 AS node_id, 'scaler_23' AS feature, 0.300283 AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0527062 AS "Score" UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.00135654 AS "Score" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.115093 AS "Score") AS "Values"), 
"DT_Output_90" AS 
(SELECT "DT_node_lookup_90"."KEY" AS "KEY", "DT_node_lookup_90".node_id_2 AS node_id_2, "DT_node_data_90".node_id AS node_id, "DT_node_data_90".feature AS feature, "DT_node_data_90".threshold AS threshold, "DT_node_data_90".depth AS depth, "DT_node_data_90".parent_id AS parent_id, "DT_node_data_90"."Score" AS "Score" 
FROM "DT_node_lookup_90" LEFT OUTER JOIN "DT_node_data_90" ON "DT_node_lookup_90".node_id_2 = "DT_node_data_90".node_id), 
"XGB_Tree_0_9" AS 
(SELECT "DT_Output_90"."KEY" AS "KEY", "DT_Output_90"."Score" AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3", 0.0 AS "Score_4", 0.0 AS "Score_5", 0.0 AS "Score_6", 0.0 AS "Score_7", 0.0 AS "Score_8", 0.0 AS "Score_9" 
FROM "DT_Output_90"), 
"DT_node_lookup_91" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_21 < 0.536762) THEN 1 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_40 < -0.605493) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_22 < 0.60979) THEN 5 ELSE 6 END ELSE 4 END END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_91" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Score" AS "Score" 
FROM (SELECT 0 AS node_id, 'scaler_21' AS feature, 0.536762 AS threshold, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" UNION ALL SELECT 1 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0521792 AS "Score" UNION ALL SELECT 2 AS node_id, 'scaler_40' AS feature, -0.605493 AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" UNION ALL SELECT 3 AS node_id, 'scaler_22' AS feature, 0.60979 AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.031201 AS "Score" UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0242215 AS "Score" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.124363 AS "Score") AS "Values"), 
"DT_Output_91" AS 
(SELECT "DT_node_lookup_91"."KEY" AS "KEY", "DT_node_lookup_91".node_id_2 AS node_id_2, "DT_node_data_91".node_id AS node_id, "DT_node_data_91".feature AS feature, "DT_node_data_91".threshold AS threshold, "DT_node_data_91".depth AS depth, "DT_node_data_91".parent_id AS parent_id, "DT_node_data_91"."Score" AS "Score" 
FROM "DT_node_lookup_91" LEFT OUTER JOIN "DT_node_data_91" ON "DT_node_lookup_91".node_id_2 = "DT_node_data_91".node_id), 
"XGB_Tree_1_9" AS 
(SELECT "DT_Output_91"."KEY" AS "KEY", 0.0 AS "Score_0", "DT_Output_91"."Score" AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3", 0.0 AS "Score_4", 0.0 AS "Score_5", 0.0 AS "Score_6", 0.0 AS "Score_7", 0.0 AS "Score_8", 0.0 AS "Score_9" 
FROM "DT_Output_91"), 
"DT_node_lookup_92" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_28 < 0.343073) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_53 < 0.676576) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_39 < -0.643156) THEN 5 ELSE 6 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_56 < -0.0694056) THEN 7 ELSE 8 END END ELSE 2 END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_92" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Score" AS "Score" 
FROM (SELECT 0 AS node_id, 'scaler_28' AS feature, 0.343073 AS threshold, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" UNION ALL SELECT 1 AS node_id, 'scaler_53' AS feature, 0.676576 AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0526815 AS "Score" UNION ALL SELECT 3 AS node_id, 'scaler_39' AS feature, -0.643156 AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" UNION ALL SELECT 4 AS node_id, 'scaler_56' AS feature, -0.0694056 AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0409257 AS "Score" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0454999 AS "Score" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0272301 AS "Score" UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.122541 AS "Score") AS "Values"), 
"DT_Output_92" AS 
(SELECT "DT_node_lookup_92"."KEY" AS "KEY", "DT_node_lookup_92".node_id_2 AS node_id_2, "DT_node_data_92".node_id AS node_id, "DT_node_data_92".feature AS feature, "DT_node_data_92".threshold AS threshold, "DT_node_data_92".depth AS depth, "DT_node_data_92".parent_id AS parent_id, "DT_node_data_92"."Score" AS "Score" 
FROM "DT_node_lookup_92" LEFT OUTER JOIN "DT_node_data_92" ON "DT_node_lookup_92".node_id_2 = "DT_node_data_92".node_id), 
"XGB_Tree_2_9" AS 
(SELECT "DT_Output_92"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", "DT_Output_92"."Score" AS "Score_2", 0.0 AS "Score_3", 0.0 AS "Score_4", 0.0 AS "Score_5", 0.0 AS "Score_6", 0.0 AS "Score_7", 0.0 AS "Score_8", 0.0 AS "Score_9" 
FROM "DT_Output_92"), 
"DT_node_lookup_93" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_20 < -0.183352) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_61 < 0.323355) THEN 3 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_53 < -0.289347) THEN 7 ELSE 8 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_21 < -0.814832) THEN 5 ELSE 6 END END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_93" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Score" AS "Score" 
FROM (SELECT 0 AS node_id, 'scaler_20' AS feature, -0.183352 AS threshold, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" UNION ALL SELECT 1 AS node_id, 'scaler_61' AS feature, 0.323355 AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" UNION ALL SELECT 2 AS node_id, 'scaler_21' AS feature, -0.814832 AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0338939 AS "Score" UNION ALL SELECT 4 AS node_id, 'scaler_53' AS feature, -0.289347 AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0232298 AS "Score" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0514643 AS "Score" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.120462 AS "Score" UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0129845 AS "Score") AS "Values"), 
"DT_Output_93" AS 
(SELECT "DT_node_lookup_93"."KEY" AS "KEY", "DT_node_lookup_93".node_id_2 AS node_id_2, "DT_node_data_93".node_id AS node_id, "DT_node_data_93".feature AS feature, "DT_node_data_93".threshold AS threshold, "DT_node_data_93".depth AS depth, "DT_node_data_93".parent_id AS parent_id, "DT_node_data_93"."Score" AS "Score" 
FROM "DT_node_lookup_93" LEFT OUTER JOIN "DT_node_data_93" ON "DT_node_lookup_93".node_id_2 = "DT_node_data_93".node_id), 
"XGB_Tree_3_9" AS 
(SELECT "DT_Output_93"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", "DT_Output_93"."Score" AS "Score_3", 0.0 AS "Score_4", 0.0 AS "Score_5", 0.0 AS "Score_6", 0.0 AS "Score_7", 0.0 AS "Score_8", 0.0 AS "Score_9" 
FROM "DT_Output_93"), 
"DT_node_lookup_94" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_35 < 1.96108) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_36 < 1.05762) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_94" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Score" AS "Score" 
FROM (SELECT 0 AS node_id, 'scaler_35' AS feature, 1.96108 AS threshold, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" UNION ALL SELECT 1 AS node_id, 'scaler_36' AS feature, 1.05762 AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.111007 AS "Score" UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0502131 AS "Score" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0116289 AS "Score") AS "Values"), 
"DT_Output_94" AS 
(SELECT "DT_node_lookup_94"."KEY" AS "KEY", "DT_node_lookup_94".node_id_2 AS node_id_2, "DT_node_data_94".node_id AS node_id, "DT_node_data_94".feature AS feature, "DT_node_data_94".threshold AS threshold, "DT_node_data_94".depth AS depth, "DT_node_data_94".parent_id AS parent_id, "DT_node_data_94"."Score" AS "Score" 
FROM "DT_node_lookup_94" LEFT OUTER JOIN "DT_node_data_94" ON "DT_node_lookup_94".node_id_2 = "DT_node_data_94".node_id), 
"XGB_Tree_4_9" AS 
(SELECT "DT_Output_94"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3", "DT_Output_94"."Score" AS "Score_4", 0.0 AS "Score_5", 0.0 AS "Score_6", 0.0 AS "Score_7", 0.0 AS "Score_8", 0.0 AS "Score_9" 
FROM "DT_Output_94"), 
"DT_node_lookup_95" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_23 < -0.836129) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_7 < 0.129651) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_95" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Score" AS "Score" 
FROM (SELECT 0 AS node_id, 'scaler_23' AS feature, -0.836129 AS threshold, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" UNION ALL SELECT 1 AS node_id, 'scaler_7' AS feature, 0.129651 AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0492528 AS "Score" UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.030146 AS "Score" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.104001 AS "Score") AS "Values"), 
"DT_Output_95" AS 
(SELECT "DT_node_lookup_95"."KEY" AS "KEY", "DT_node_lookup_95".node_id_2 AS node_id_2, "DT_node_data_95".node_id AS node_id, "DT_node_data_95".feature AS feature, "DT_node_data_95".threshold AS threshold, "DT_node_data_95".depth AS depth, "DT_node_data_95".parent_id AS parent_id, "DT_node_data_95"."Score" AS "Score" 
FROM "DT_node_lookup_95" LEFT OUTER JOIN "DT_node_data_95" ON "DT_node_lookup_95".node_id_2 = "DT_node_data_95".node_id), 
"XGB_Tree_5_9" AS 
(SELECT "DT_Output_95"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3", 0.0 AS "Score_4", "DT_Output_95"."Score" AS "Score_5", 0.0 AS "Score_6", 0.0 AS "Score_7", 0.0 AS "Score_8", 0.0 AS "Score_9" 
FROM "DT_Output_95"), 
"DT_node_lookup_96" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_36 < 0.895909) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_48 < 0.830396) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_56 < 0.0295249) THEN 5 ELSE 6 END END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_96" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Score" AS "Score" 
FROM (SELECT 0 AS node_id, 'scaler_36' AS feature, 0.895909 AS threshold, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" UNION ALL SELECT 1 AS node_id, 'scaler_48' AS feature, 0.830396 AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" UNION ALL SELECT 2 AS node_id, 'scaler_56' AS feature, 0.0295249 AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0522878 AS "Score" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0181688 AS "Score" UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0341223 AS "Score" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.118187 AS "Score") AS "Values"), 
"DT_Output_96" AS 
(SELECT "DT_node_lookup_96"."KEY" AS "KEY", "DT_node_lookup_96".node_id_2 AS node_id_2, "DT_node_data_96".node_id AS node_id, "DT_node_data_96".feature AS feature, "DT_node_data_96".threshold AS threshold, "DT_node_data_96".depth AS depth, "DT_node_data_96".parent_id AS parent_id, "DT_node_data_96"."Score" AS "Score" 
FROM "DT_node_lookup_96" LEFT OUTER JOIN "DT_node_data_96" ON "DT_node_lookup_96".node_id_2 = "DT_node_data_96".node_id), 
"XGB_Tree_6_9" AS 
(SELECT "DT_Output_96"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3", 0.0 AS "Score_4", 0.0 AS "Score_5", "DT_Output_96"."Score" AS "Score_6", 0.0 AS "Score_7", 0.0 AS "Score_8", 0.0 AS "Score_9" 
FROM "DT_Output_96"), 
"DT_node_lookup_97" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_55 < -1.23454) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_21 < -0.139035) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_20 < -0.621719) THEN 7 ELSE 8 END ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_32 < 0.366185) THEN 5 ELSE 6 END END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_97" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Score" AS "Score" 
FROM (SELECT 0 AS node_id, 'scaler_55' AS feature, -1.23454 AS threshold, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" UNION ALL SELECT 1 AS node_id, 'scaler_21' AS feature, -0.139035 AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" UNION ALL SELECT 2 AS node_id, 'scaler_32' AS feature, 0.366185 AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" UNION ALL SELECT 3 AS node_id, 'scaler_20' AS feature, -0.621719 AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.00046398 AS "Score" UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0519886 AS "Score" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0309232 AS "Score" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.120788 AS "Score" UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0630813 AS "Score") AS "Values"), 
"DT_Output_97" AS 
(SELECT "DT_node_lookup_97"."KEY" AS "KEY", "DT_node_lookup_97".node_id_2 AS node_id_2, "DT_node_data_97".node_id AS node_id, "DT_node_data_97".feature AS feature, "DT_node_data_97".threshold AS threshold, "DT_node_data_97".depth AS depth, "DT_node_data_97".parent_id AS parent_id, "DT_node_data_97"."Score" AS "Score" 
FROM "DT_node_lookup_97" LEFT OUTER JOIN "DT_node_data_97" ON "DT_node_lookup_97".node_id_2 = "DT_node_data_97".node_id), 
"XGB_Tree_7_9" AS 
(SELECT "DT_Output_97"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3", 0.0 AS "Score_4", 0.0 AS "Score_5", 0.0 AS "Score_6", "DT_Output_97"."Score" AS "Score_7", 0.0 AS "Score_8", 0.0 AS "Score_9" 
FROM "DT_Output_97"), 
"DT_node_lookup_98" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_40 < -0.306246) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_23 < -0.51144) THEN 3 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_52 < 0.479486) THEN 5 ELSE 6 END END ELSE 2 END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_98" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Score" AS "Score" 
FROM (SELECT 0 AS node_id, 'scaler_40' AS feature, -0.306246 AS threshold, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" UNION ALL SELECT 1 AS node_id, 'scaler_23' AS feature, -0.51144 AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0472148 AS "Score" UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.03877 AS "Score" UNION ALL SELECT 4 AS node_id, 'scaler_52' AS feature, 0.479486 AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.000715379 AS "Score" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0880441 AS "Score") AS "Values"), 
"DT_Output_98" AS 
(SELECT "DT_node_lookup_98"."KEY" AS "KEY", "DT_node_lookup_98".node_id_2 AS node_id_2, "DT_node_data_98".node_id AS node_id, "DT_node_data_98".feature AS feature, "DT_node_data_98".threshold AS threshold, "DT_node_data_98".depth AS depth, "DT_node_data_98".parent_id AS parent_id, "DT_node_data_98"."Score" AS "Score" 
FROM "DT_node_lookup_98" LEFT OUTER JOIN "DT_node_data_98" ON "DT_node_lookup_98".node_id_2 = "DT_node_data_98".node_id), 
"XGB_Tree_8_9" AS 
(SELECT "DT_Output_98"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3", 0.0 AS "Score_4", 0.0 AS "Score_5", 0.0 AS "Score_6", 0.0 AS "Score_7", "DT_Output_98"."Score" AS "Score_8", 0.0 AS "Score_9" 
FROM "DT_Output_98"), 
"DT_node_lookup_99" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_45 < -0.841762) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_23 < 0.624973) THEN 3 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_29 < 0.289399) THEN 5 ELSE 6 END END ELSE 2 END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_99" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Score" AS "Score" 
FROM (SELECT 0 AS node_id, 'scaler_45' AS feature, -0.841762 AS threshold, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" UNION ALL SELECT 1 AS node_id, 'scaler_23' AS feature, 0.624973 AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0489938 AS "Score" UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0220604 AS "Score" UNION ALL SELECT 4 AS node_id, 'scaler_29' AS feature, 0.289399 AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.025022 AS "Score" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.112456 AS "Score") AS "Values"), 
"DT_Output_99" AS 
(SELECT "DT_node_lookup_99"."KEY" AS "KEY", "DT_node_lookup_99".node_id_2 AS node_id_2, "DT_node_data_99".node_id AS node_id, "DT_node_data_99".feature AS feature, "DT_node_data_99".threshold AS threshold, "DT_node_data_99".depth AS depth, "DT_node_data_99".parent_id AS parent_id, "DT_node_data_99"."Score" AS "Score" 
FROM "DT_node_lookup_99" LEFT OUTER JOIN "DT_node_data_99" ON "DT_node_lookup_99".node_id_2 = "DT_node_data_99".node_id), 
"XGB_Tree_9_9" AS 
(SELECT "DT_Output_99"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3", 0.0 AS "Score_4", 0.0 AS "Score_5", 0.0 AS "Score_6", 0.0 AS "Score_7", 0.0 AS "Score_8", "DT_Output_99"."Score" AS "Score_9" 
FROM "DT_Output_99"), 
"Score_Union_CTE" AS 
(SELECT ensemble_score_union."KEY" AS "KEY", ensemble_score_union."Score_0" AS "Score_0", ensemble_score_union."Score_1" AS "Score_1", ensemble_score_union."Score_2" AS "Score_2", ensemble_score_union."Score_3" AS "Score_3", ensemble_score_union."Score_4" AS "Score_4", ensemble_score_union."Score_5" AS "Score_5", ensemble_score_union."Score_6" AS "Score_6", ensemble_score_union."Score_7" AS "Score_7", ensemble_score_union."Score_8" AS "Score_8", ensemble_score_union."Score_9" AS "Score_9" 
FROM (SELECT "XGB_Tree_0_0"."KEY" AS "KEY", "XGB_Tree_0_0"."Score_0" AS "Score_0", "XGB_Tree_0_0"."Score_1" AS "Score_1", "XGB_Tree_0_0"."Score_2" AS "Score_2", "XGB_Tree_0_0"."Score_3" AS "Score_3", "XGB_Tree_0_0"."Score_4" AS "Score_4", "XGB_Tree_0_0"."Score_5" AS "Score_5", "XGB_Tree_0_0"."Score_6" AS "Score_6", "XGB_Tree_0_0"."Score_7" AS "Score_7", "XGB_Tree_0_0"."Score_8" AS "Score_8", "XGB_Tree_0_0"."Score_9" AS "Score_9" 
FROM "XGB_Tree_0_0" UNION ALL SELECT "XGB_Tree_1_0"."KEY" AS "KEY", "XGB_Tree_1_0"."Score_0" AS "Score_0", "XGB_Tree_1_0"."Score_1" AS "Score_1", "XGB_Tree_1_0"."Score_2" AS "Score_2", "XGB_Tree_1_0"."Score_3" AS "Score_3", "XGB_Tree_1_0"."Score_4" AS "Score_4", "XGB_Tree_1_0"."Score_5" AS "Score_5", "XGB_Tree_1_0"."Score_6" AS "Score_6", "XGB_Tree_1_0"."Score_7" AS "Score_7", "XGB_Tree_1_0"."Score_8" AS "Score_8", "XGB_Tree_1_0"."Score_9" AS "Score_9" 
FROM "XGB_Tree_1_0" UNION ALL SELECT "XGB_Tree_2_0"."KEY" AS "KEY", "XGB_Tree_2_0"."Score_0" AS "Score_0", "XGB_Tree_2_0"."Score_1" AS "Score_1", "XGB_Tree_2_0"."Score_2" AS "Score_2", "XGB_Tree_2_0"."Score_3" AS "Score_3", "XGB_Tree_2_0"."Score_4" AS "Score_4", "XGB_Tree_2_0"."Score_5" AS "Score_5", "XGB_Tree_2_0"."Score_6" AS "Score_6", "XGB_Tree_2_0"."Score_7" AS "Score_7", "XGB_Tree_2_0"."Score_8" AS "Score_8", "XGB_Tree_2_0"."Score_9" AS "Score_9" 
FROM "XGB_Tree_2_0" UNION ALL SELECT "XGB_Tree_3_0"."KEY" AS "KEY", "XGB_Tree_3_0"."Score_0" AS "Score_0", "XGB_Tree_3_0"."Score_1" AS "Score_1", "XGB_Tree_3_0"."Score_2" AS "Score_2", "XGB_Tree_3_0"."Score_3" AS "Score_3", "XGB_Tree_3_0"."Score_4" AS "Score_4", "XGB_Tree_3_0"."Score_5" AS "Score_5", "XGB_Tree_3_0"."Score_6" AS "Score_6", "XGB_Tree_3_0"."Score_7" AS "Score_7", "XGB_Tree_3_0"."Score_8" AS "Score_8", "XGB_Tree_3_0"."Score_9" AS "Score_9" 
FROM "XGB_Tree_3_0" UNION ALL SELECT "XGB_Tree_4_0"."KEY" AS "KEY", "XGB_Tree_4_0"."Score_0" AS "Score_0", "XGB_Tree_4_0"."Score_1" AS "Score_1", "XGB_Tree_4_0"."Score_2" AS "Score_2", "XGB_Tree_4_0"."Score_3" AS "Score_3", "XGB_Tree_4_0"."Score_4" AS "Score_4", "XGB_Tree_4_0"."Score_5" AS "Score_5", "XGB_Tree_4_0"."Score_6" AS "Score_6", "XGB_Tree_4_0"."Score_7" AS "Score_7", "XGB_Tree_4_0"."Score_8" AS "Score_8", "XGB_Tree_4_0"."Score_9" AS "Score_9" 
FROM "XGB_Tree_4_0" UNION ALL SELECT "XGB_Tree_5_0"."KEY" AS "KEY", "XGB_Tree_5_0"."Score_0" AS "Score_0", "XGB_Tree_5_0"."Score_1" AS "Score_1", "XGB_Tree_5_0"."Score_2" AS "Score_2", "XGB_Tree_5_0"."Score_3" AS "Score_3", "XGB_Tree_5_0"."Score_4" AS "Score_4", "XGB_Tree_5_0"."Score_5" AS "Score_5", "XGB_Tree_5_0"."Score_6" AS "Score_6", "XGB_Tree_5_0"."Score_7" AS "Score_7", "XGB_Tree_5_0"."Score_8" AS "Score_8", "XGB_Tree_5_0"."Score_9" AS "Score_9" 
FROM "XGB_Tree_5_0" UNION ALL SELECT "XGB_Tree_6_0"."KEY" AS "KEY", "XGB_Tree_6_0"."Score_0" AS "Score_0", "XGB_Tree_6_0"."Score_1" AS "Score_1", "XGB_Tree_6_0"."Score_2" AS "Score_2", "XGB_Tree_6_0"."Score_3" AS "Score_3", "XGB_Tree_6_0"."Score_4" AS "Score_4", "XGB_Tree_6_0"."Score_5" AS "Score_5", "XGB_Tree_6_0"."Score_6" AS "Score_6", "XGB_Tree_6_0"."Score_7" AS "Score_7", "XGB_Tree_6_0"."Score_8" AS "Score_8", "XGB_Tree_6_0"."Score_9" AS "Score_9" 
FROM "XGB_Tree_6_0" UNION ALL SELECT "XGB_Tree_7_0"."KEY" AS "KEY", "XGB_Tree_7_0"."Score_0" AS "Score_0", "XGB_Tree_7_0"."Score_1" AS "Score_1", "XGB_Tree_7_0"."Score_2" AS "Score_2", "XGB_Tree_7_0"."Score_3" AS "Score_3", "XGB_Tree_7_0"."Score_4" AS "Score_4", "XGB_Tree_7_0"."Score_5" AS "Score_5", "XGB_Tree_7_0"."Score_6" AS "Score_6", "XGB_Tree_7_0"."Score_7" AS "Score_7", "XGB_Tree_7_0"."Score_8" AS "Score_8", "XGB_Tree_7_0"."Score_9" AS "Score_9" 
FROM "XGB_Tree_7_0" UNION ALL SELECT "XGB_Tree_8_0"."KEY" AS "KEY", "XGB_Tree_8_0"."Score_0" AS "Score_0", "XGB_Tree_8_0"."Score_1" AS "Score_1", "XGB_Tree_8_0"."Score_2" AS "Score_2", "XGB_Tree_8_0"."Score_3" AS "Score_3", "XGB_Tree_8_0"."Score_4" AS "Score_4", "XGB_Tree_8_0"."Score_5" AS "Score_5", "XGB_Tree_8_0"."Score_6" AS "Score_6", "XGB_Tree_8_0"."Score_7" AS "Score_7", "XGB_Tree_8_0"."Score_8" AS "Score_8", "XGB_Tree_8_0"."Score_9" AS "Score_9" 
FROM "XGB_Tree_8_0" UNION ALL SELECT "XGB_Tree_9_0"."KEY" AS "KEY", "XGB_Tree_9_0"."Score_0" AS "Score_0", "XGB_Tree_9_0"."Score_1" AS "Score_1", "XGB_Tree_9_0"."Score_2" AS "Score_2", "XGB_Tree_9_0"."Score_3" AS "Score_3", "XGB_Tree_9_0"."Score_4" AS "Score_4", "XGB_Tree_9_0"."Score_5" AS "Score_5", "XGB_Tree_9_0"."Score_6" AS "Score_6", "XGB_Tree_9_0"."Score_7" AS "Score_7", "XGB_Tree_9_0"."Score_8" AS "Score_8", "XGB_Tree_9_0"."Score_9" AS "Score_9" 
FROM "XGB_Tree_9_0" UNION ALL SELECT "XGB_Tree_0_1"."KEY" AS "KEY", "XGB_Tree_0_1"."Score_0" AS "Score_0", "XGB_Tree_0_1"."Score_1" AS "Score_1", "XGB_Tree_0_1"."Score_2" AS "Score_2", "XGB_Tree_0_1"."Score_3" AS "Score_3", "XGB_Tree_0_1"."Score_4" AS "Score_4", "XGB_Tree_0_1"."Score_5" AS "Score_5", "XGB_Tree_0_1"."Score_6" AS "Score_6", "XGB_Tree_0_1"."Score_7" AS "Score_7", "XGB_Tree_0_1"."Score_8" AS "Score_8", "XGB_Tree_0_1"."Score_9" AS "Score_9" 
FROM "XGB_Tree_0_1" UNION ALL SELECT "XGB_Tree_1_1"."KEY" AS "KEY", "XGB_Tree_1_1"."Score_0" AS "Score_0", "XGB_Tree_1_1"."Score_1" AS "Score_1", "XGB_Tree_1_1"."Score_2" AS "Score_2", "XGB_Tree_1_1"."Score_3" AS "Score_3", "XGB_Tree_1_1"."Score_4" AS "Score_4", "XGB_Tree_1_1"."Score_5" AS "Score_5", "XGB_Tree_1_1"."Score_6" AS "Score_6", "XGB_Tree_1_1"."Score_7" AS "Score_7", "XGB_Tree_1_1"."Score_8" AS "Score_8", "XGB_Tree_1_1"."Score_9" AS "Score_9" 
FROM "XGB_Tree_1_1" UNION ALL SELECT "XGB_Tree_2_1"."KEY" AS "KEY", "XGB_Tree_2_1"."Score_0" AS "Score_0", "XGB_Tree_2_1"."Score_1" AS "Score_1", "XGB_Tree_2_1"."Score_2" AS "Score_2", "XGB_Tree_2_1"."Score_3" AS "Score_3", "XGB_Tree_2_1"."Score_4" AS "Score_4", "XGB_Tree_2_1"."Score_5" AS "Score_5", "XGB_Tree_2_1"."Score_6" AS "Score_6", "XGB_Tree_2_1"."Score_7" AS "Score_7", "XGB_Tree_2_1"."Score_8" AS "Score_8", "XGB_Tree_2_1"."Score_9" AS "Score_9" 
FROM "XGB_Tree_2_1" UNION ALL SELECT "XGB_Tree_3_1"."KEY" AS "KEY", "XGB_Tree_3_1"."Score_0" AS "Score_0", "XGB_Tree_3_1"."Score_1" AS "Score_1", "XGB_Tree_3_1"."Score_2" AS "Score_2", "XGB_Tree_3_1"."Score_3" AS "Score_3", "XGB_Tree_3_1"."Score_4" AS "Score_4", "XGB_Tree_3_1"."Score_5" AS "Score_5", "XGB_Tree_3_1"."Score_6" AS "Score_6", "XGB_Tree_3_1"."Score_7" AS "Score_7", "XGB_Tree_3_1"."Score_8" AS "Score_8", "XGB_Tree_3_1"."Score_9" AS "Score_9" 
FROM "XGB_Tree_3_1" UNION ALL SELECT "XGB_Tree_4_1"."KEY" AS "KEY", "XGB_Tree_4_1"."Score_0" AS "Score_0", "XGB_Tree_4_1"."Score_1" AS "Score_1", "XGB_Tree_4_1"."Score_2" AS "Score_2", "XGB_Tree_4_1"."Score_3" AS "Score_3", "XGB_Tree_4_1"."Score_4" AS "Score_4", "XGB_Tree_4_1"."Score_5" AS "Score_5", "XGB_Tree_4_1"."Score_6" AS "Score_6", "XGB_Tree_4_1"."Score_7" AS "Score_7", "XGB_Tree_4_1"."Score_8" AS "Score_8", "XGB_Tree_4_1"."Score_9" AS "Score_9" 
FROM "XGB_Tree_4_1" UNION ALL SELECT "XGB_Tree_5_1"."KEY" AS "KEY", "XGB_Tree_5_1"."Score_0" AS "Score_0", "XGB_Tree_5_1"."Score_1" AS "Score_1", "XGB_Tree_5_1"."Score_2" AS "Score_2", "XGB_Tree_5_1"."Score_3" AS "Score_3", "XGB_Tree_5_1"."Score_4" AS "Score_4", "XGB_Tree_5_1"."Score_5" AS "Score_5", "XGB_Tree_5_1"."Score_6" AS "Score_6", "XGB_Tree_5_1"."Score_7" AS "Score_7", "XGB_Tree_5_1"."Score_8" AS "Score_8", "XGB_Tree_5_1"."Score_9" AS "Score_9" 
FROM "XGB_Tree_5_1" UNION ALL SELECT "XGB_Tree_6_1"."KEY" AS "KEY", "XGB_Tree_6_1"."Score_0" AS "Score_0", "XGB_Tree_6_1"."Score_1" AS "Score_1", "XGB_Tree_6_1"."Score_2" AS "Score_2", "XGB_Tree_6_1"."Score_3" AS "Score_3", "XGB_Tree_6_1"."Score_4" AS "Score_4", "XGB_Tree_6_1"."Score_5" AS "Score_5", "XGB_Tree_6_1"."Score_6" AS "Score_6", "XGB_Tree_6_1"."Score_7" AS "Score_7", "XGB_Tree_6_1"."Score_8" AS "Score_8", "XGB_Tree_6_1"."Score_9" AS "Score_9" 
FROM "XGB_Tree_6_1" UNION ALL SELECT "XGB_Tree_7_1"."KEY" AS "KEY", "XGB_Tree_7_1"."Score_0" AS "Score_0", "XGB_Tree_7_1"."Score_1" AS "Score_1", "XGB_Tree_7_1"."Score_2" AS "Score_2", "XGB_Tree_7_1"."Score_3" AS "Score_3", "XGB_Tree_7_1"."Score_4" AS "Score_4", "XGB_Tree_7_1"."Score_5" AS "Score_5", "XGB_Tree_7_1"."Score_6" AS "Score_6", "XGB_Tree_7_1"."Score_7" AS "Score_7", "XGB_Tree_7_1"."Score_8" AS "Score_8", "XGB_Tree_7_1"."Score_9" AS "Score_9" 
FROM "XGB_Tree_7_1" UNION ALL SELECT "XGB_Tree_8_1"."KEY" AS "KEY", "XGB_Tree_8_1"."Score_0" AS "Score_0", "XGB_Tree_8_1"."Score_1" AS "Score_1", "XGB_Tree_8_1"."Score_2" AS "Score_2", "XGB_Tree_8_1"."Score_3" AS "Score_3", "XGB_Tree_8_1"."Score_4" AS "Score_4", "XGB_Tree_8_1"."Score_5" AS "Score_5", "XGB_Tree_8_1"."Score_6" AS "Score_6", "XGB_Tree_8_1"."Score_7" AS "Score_7", "XGB_Tree_8_1"."Score_8" AS "Score_8", "XGB_Tree_8_1"."Score_9" AS "Score_9" 
FROM "XGB_Tree_8_1" UNION ALL SELECT "XGB_Tree_9_1"."KEY" AS "KEY", "XGB_Tree_9_1"."Score_0" AS "Score_0", "XGB_Tree_9_1"."Score_1" AS "Score_1", "XGB_Tree_9_1"."Score_2" AS "Score_2", "XGB_Tree_9_1"."Score_3" AS "Score_3", "XGB_Tree_9_1"."Score_4" AS "Score_4", "XGB_Tree_9_1"."Score_5" AS "Score_5", "XGB_Tree_9_1"."Score_6" AS "Score_6", "XGB_Tree_9_1"."Score_7" AS "Score_7", "XGB_Tree_9_1"."Score_8" AS "Score_8", "XGB_Tree_9_1"."Score_9" AS "Score_9" 
FROM "XGB_Tree_9_1" UNION ALL SELECT "XGB_Tree_0_2"."KEY" AS "KEY", "XGB_Tree_0_2"."Score_0" AS "Score_0", "XGB_Tree_0_2"."Score_1" AS "Score_1", "XGB_Tree_0_2"."Score_2" AS "Score_2", "XGB_Tree_0_2"."Score_3" AS "Score_3", "XGB_Tree_0_2"."Score_4" AS "Score_4", "XGB_Tree_0_2"."Score_5" AS "Score_5", "XGB_Tree_0_2"."Score_6" AS "Score_6", "XGB_Tree_0_2"."Score_7" AS "Score_7", "XGB_Tree_0_2"."Score_8" AS "Score_8", "XGB_Tree_0_2"."Score_9" AS "Score_9" 
FROM "XGB_Tree_0_2" UNION ALL SELECT "XGB_Tree_1_2"."KEY" AS "KEY", "XGB_Tree_1_2"."Score_0" AS "Score_0", "XGB_Tree_1_2"."Score_1" AS "Score_1", "XGB_Tree_1_2"."Score_2" AS "Score_2", "XGB_Tree_1_2"."Score_3" AS "Score_3", "XGB_Tree_1_2"."Score_4" AS "Score_4", "XGB_Tree_1_2"."Score_5" AS "Score_5", "XGB_Tree_1_2"."Score_6" AS "Score_6", "XGB_Tree_1_2"."Score_7" AS "Score_7", "XGB_Tree_1_2"."Score_8" AS "Score_8", "XGB_Tree_1_2"."Score_9" AS "Score_9" 
FROM "XGB_Tree_1_2" UNION ALL SELECT "XGB_Tree_2_2"."KEY" AS "KEY", "XGB_Tree_2_2"."Score_0" AS "Score_0", "XGB_Tree_2_2"."Score_1" AS "Score_1", "XGB_Tree_2_2"."Score_2" AS "Score_2", "XGB_Tree_2_2"."Score_3" AS "Score_3", "XGB_Tree_2_2"."Score_4" AS "Score_4", "XGB_Tree_2_2"."Score_5" AS "Score_5", "XGB_Tree_2_2"."Score_6" AS "Score_6", "XGB_Tree_2_2"."Score_7" AS "Score_7", "XGB_Tree_2_2"."Score_8" AS "Score_8", "XGB_Tree_2_2"."Score_9" AS "Score_9" 
FROM "XGB_Tree_2_2" UNION ALL SELECT "XGB_Tree_3_2"."KEY" AS "KEY", "XGB_Tree_3_2"."Score_0" AS "Score_0", "XGB_Tree_3_2"."Score_1" AS "Score_1", "XGB_Tree_3_2"."Score_2" AS "Score_2", "XGB_Tree_3_2"."Score_3" AS "Score_3", "XGB_Tree_3_2"."Score_4" AS "Score_4", "XGB_Tree_3_2"."Score_5" AS "Score_5", "XGB_Tree_3_2"."Score_6" AS "Score_6", "XGB_Tree_3_2"."Score_7" AS "Score_7", "XGB_Tree_3_2"."Score_8" AS "Score_8", "XGB_Tree_3_2"."Score_9" AS "Score_9" 
FROM "XGB_Tree_3_2" UNION ALL SELECT "XGB_Tree_4_2"."KEY" AS "KEY", "XGB_Tree_4_2"."Score_0" AS "Score_0", "XGB_Tree_4_2"."Score_1" AS "Score_1", "XGB_Tree_4_2"."Score_2" AS "Score_2", "XGB_Tree_4_2"."Score_3" AS "Score_3", "XGB_Tree_4_2"."Score_4" AS "Score_4", "XGB_Tree_4_2"."Score_5" AS "Score_5", "XGB_Tree_4_2"."Score_6" AS "Score_6", "XGB_Tree_4_2"."Score_7" AS "Score_7", "XGB_Tree_4_2"."Score_8" AS "Score_8", "XGB_Tree_4_2"."Score_9" AS "Score_9" 
FROM "XGB_Tree_4_2" UNION ALL SELECT "XGB_Tree_5_2"."KEY" AS "KEY", "XGB_Tree_5_2"."Score_0" AS "Score_0", "XGB_Tree_5_2"."Score_1" AS "Score_1", "XGB_Tree_5_2"."Score_2" AS "Score_2", "XGB_Tree_5_2"."Score_3" AS "Score_3", "XGB_Tree_5_2"."Score_4" AS "Score_4", "XGB_Tree_5_2"."Score_5" AS "Score_5", "XGB_Tree_5_2"."Score_6" AS "Score_6", "XGB_Tree_5_2"."Score_7" AS "Score_7", "XGB_Tree_5_2"."Score_8" AS "Score_8", "XGB_Tree_5_2"."Score_9" AS "Score_9" 
FROM "XGB_Tree_5_2" UNION ALL SELECT "XGB_Tree_6_2"."KEY" AS "KEY", "XGB_Tree_6_2"."Score_0" AS "Score_0", "XGB_Tree_6_2"."Score_1" AS "Score_1", "XGB_Tree_6_2"."Score_2" AS "Score_2", "XGB_Tree_6_2"."Score_3" AS "Score_3", "XGB_Tree_6_2"."Score_4" AS "Score_4", "XGB_Tree_6_2"."Score_5" AS "Score_5", "XGB_Tree_6_2"."Score_6" AS "Score_6", "XGB_Tree_6_2"."Score_7" AS "Score_7", "XGB_Tree_6_2"."Score_8" AS "Score_8", "XGB_Tree_6_2"."Score_9" AS "Score_9" 
FROM "XGB_Tree_6_2" UNION ALL SELECT "XGB_Tree_7_2"."KEY" AS "KEY", "XGB_Tree_7_2"."Score_0" AS "Score_0", "XGB_Tree_7_2"."Score_1" AS "Score_1", "XGB_Tree_7_2"."Score_2" AS "Score_2", "XGB_Tree_7_2"."Score_3" AS "Score_3", "XGB_Tree_7_2"."Score_4" AS "Score_4", "XGB_Tree_7_2"."Score_5" AS "Score_5", "XGB_Tree_7_2"."Score_6" AS "Score_6", "XGB_Tree_7_2"."Score_7" AS "Score_7", "XGB_Tree_7_2"."Score_8" AS "Score_8", "XGB_Tree_7_2"."Score_9" AS "Score_9" 
FROM "XGB_Tree_7_2" UNION ALL SELECT "XGB_Tree_8_2"."KEY" AS "KEY", "XGB_Tree_8_2"."Score_0" AS "Score_0", "XGB_Tree_8_2"."Score_1" AS "Score_1", "XGB_Tree_8_2"."Score_2" AS "Score_2", "XGB_Tree_8_2"."Score_3" AS "Score_3", "XGB_Tree_8_2"."Score_4" AS "Score_4", "XGB_Tree_8_2"."Score_5" AS "Score_5", "XGB_Tree_8_2"."Score_6" AS "Score_6", "XGB_Tree_8_2"."Score_7" AS "Score_7", "XGB_Tree_8_2"."Score_8" AS "Score_8", "XGB_Tree_8_2"."Score_9" AS "Score_9" 
FROM "XGB_Tree_8_2" UNION ALL SELECT "XGB_Tree_9_2"."KEY" AS "KEY", "XGB_Tree_9_2"."Score_0" AS "Score_0", "XGB_Tree_9_2"."Score_1" AS "Score_1", "XGB_Tree_9_2"."Score_2" AS "Score_2", "XGB_Tree_9_2"."Score_3" AS "Score_3", "XGB_Tree_9_2"."Score_4" AS "Score_4", "XGB_Tree_9_2"."Score_5" AS "Score_5", "XGB_Tree_9_2"."Score_6" AS "Score_6", "XGB_Tree_9_2"."Score_7" AS "Score_7", "XGB_Tree_9_2"."Score_8" AS "Score_8", "XGB_Tree_9_2"."Score_9" AS "Score_9" 
FROM "XGB_Tree_9_2" UNION ALL SELECT "XGB_Tree_0_3"."KEY" AS "KEY", "XGB_Tree_0_3"."Score_0" AS "Score_0", "XGB_Tree_0_3"."Score_1" AS "Score_1", "XGB_Tree_0_3"."Score_2" AS "Score_2", "XGB_Tree_0_3"."Score_3" AS "Score_3", "XGB_Tree_0_3"."Score_4" AS "Score_4", "XGB_Tree_0_3"."Score_5" AS "Score_5", "XGB_Tree_0_3"."Score_6" AS "Score_6", "XGB_Tree_0_3"."Score_7" AS "Score_7", "XGB_Tree_0_3"."Score_8" AS "Score_8", "XGB_Tree_0_3"."Score_9" AS "Score_9" 
FROM "XGB_Tree_0_3" UNION ALL SELECT "XGB_Tree_1_3"."KEY" AS "KEY", "XGB_Tree_1_3"."Score_0" AS "Score_0", "XGB_Tree_1_3"."Score_1" AS "Score_1", "XGB_Tree_1_3"."Score_2" AS "Score_2", "XGB_Tree_1_3"."Score_3" AS "Score_3", "XGB_Tree_1_3"."Score_4" AS "Score_4", "XGB_Tree_1_3"."Score_5" AS "Score_5", "XGB_Tree_1_3"."Score_6" AS "Score_6", "XGB_Tree_1_3"."Score_7" AS "Score_7", "XGB_Tree_1_3"."Score_8" AS "Score_8", "XGB_Tree_1_3"."Score_9" AS "Score_9" 
FROM "XGB_Tree_1_3" UNION ALL SELECT "XGB_Tree_2_3"."KEY" AS "KEY", "XGB_Tree_2_3"."Score_0" AS "Score_0", "XGB_Tree_2_3"."Score_1" AS "Score_1", "XGB_Tree_2_3"."Score_2" AS "Score_2", "XGB_Tree_2_3"."Score_3" AS "Score_3", "XGB_Tree_2_3"."Score_4" AS "Score_4", "XGB_Tree_2_3"."Score_5" AS "Score_5", "XGB_Tree_2_3"."Score_6" AS "Score_6", "XGB_Tree_2_3"."Score_7" AS "Score_7", "XGB_Tree_2_3"."Score_8" AS "Score_8", "XGB_Tree_2_3"."Score_9" AS "Score_9" 
FROM "XGB_Tree_2_3" UNION ALL SELECT "XGB_Tree_3_3"."KEY" AS "KEY", "XGB_Tree_3_3"."Score_0" AS "Score_0", "XGB_Tree_3_3"."Score_1" AS "Score_1", "XGB_Tree_3_3"."Score_2" AS "Score_2", "XGB_Tree_3_3"."Score_3" AS "Score_3", "XGB_Tree_3_3"."Score_4" AS "Score_4", "XGB_Tree_3_3"."Score_5" AS "Score_5", "XGB_Tree_3_3"."Score_6" AS "Score_6", "XGB_Tree_3_3"."Score_7" AS "Score_7", "XGB_Tree_3_3"."Score_8" AS "Score_8", "XGB_Tree_3_3"."Score_9" AS "Score_9" 
FROM "XGB_Tree_3_3" UNION ALL SELECT "XGB_Tree_4_3"."KEY" AS "KEY", "XGB_Tree_4_3"."Score_0" AS "Score_0", "XGB_Tree_4_3"."Score_1" AS "Score_1", "XGB_Tree_4_3"."Score_2" AS "Score_2", "XGB_Tree_4_3"."Score_3" AS "Score_3", "XGB_Tree_4_3"."Score_4" AS "Score_4", "XGB_Tree_4_3"."Score_5" AS "Score_5", "XGB_Tree_4_3"."Score_6" AS "Score_6", "XGB_Tree_4_3"."Score_7" AS "Score_7", "XGB_Tree_4_3"."Score_8" AS "Score_8", "XGB_Tree_4_3"."Score_9" AS "Score_9" 
FROM "XGB_Tree_4_3" UNION ALL SELECT "XGB_Tree_5_3"."KEY" AS "KEY", "XGB_Tree_5_3"."Score_0" AS "Score_0", "XGB_Tree_5_3"."Score_1" AS "Score_1", "XGB_Tree_5_3"."Score_2" AS "Score_2", "XGB_Tree_5_3"."Score_3" AS "Score_3", "XGB_Tree_5_3"."Score_4" AS "Score_4", "XGB_Tree_5_3"."Score_5" AS "Score_5", "XGB_Tree_5_3"."Score_6" AS "Score_6", "XGB_Tree_5_3"."Score_7" AS "Score_7", "XGB_Tree_5_3"."Score_8" AS "Score_8", "XGB_Tree_5_3"."Score_9" AS "Score_9" 
FROM "XGB_Tree_5_3" UNION ALL SELECT "XGB_Tree_6_3"."KEY" AS "KEY", "XGB_Tree_6_3"."Score_0" AS "Score_0", "XGB_Tree_6_3"."Score_1" AS "Score_1", "XGB_Tree_6_3"."Score_2" AS "Score_2", "XGB_Tree_6_3"."Score_3" AS "Score_3", "XGB_Tree_6_3"."Score_4" AS "Score_4", "XGB_Tree_6_3"."Score_5" AS "Score_5", "XGB_Tree_6_3"."Score_6" AS "Score_6", "XGB_Tree_6_3"."Score_7" AS "Score_7", "XGB_Tree_6_3"."Score_8" AS "Score_8", "XGB_Tree_6_3"."Score_9" AS "Score_9" 
FROM "XGB_Tree_6_3" UNION ALL SELECT "XGB_Tree_7_3"."KEY" AS "KEY", "XGB_Tree_7_3"."Score_0" AS "Score_0", "XGB_Tree_7_3"."Score_1" AS "Score_1", "XGB_Tree_7_3"."Score_2" AS "Score_2", "XGB_Tree_7_3"."Score_3" AS "Score_3", "XGB_Tree_7_3"."Score_4" AS "Score_4", "XGB_Tree_7_3"."Score_5" AS "Score_5", "XGB_Tree_7_3"."Score_6" AS "Score_6", "XGB_Tree_7_3"."Score_7" AS "Score_7", "XGB_Tree_7_3"."Score_8" AS "Score_8", "XGB_Tree_7_3"."Score_9" AS "Score_9" 
FROM "XGB_Tree_7_3" UNION ALL SELECT "XGB_Tree_8_3"."KEY" AS "KEY", "XGB_Tree_8_3"."Score_0" AS "Score_0", "XGB_Tree_8_3"."Score_1" AS "Score_1", "XGB_Tree_8_3"."Score_2" AS "Score_2", "XGB_Tree_8_3"."Score_3" AS "Score_3", "XGB_Tree_8_3"."Score_4" AS "Score_4", "XGB_Tree_8_3"."Score_5" AS "Score_5", "XGB_Tree_8_3"."Score_6" AS "Score_6", "XGB_Tree_8_3"."Score_7" AS "Score_7", "XGB_Tree_8_3"."Score_8" AS "Score_8", "XGB_Tree_8_3"."Score_9" AS "Score_9" 
FROM "XGB_Tree_8_3" UNION ALL SELECT "XGB_Tree_9_3"."KEY" AS "KEY", "XGB_Tree_9_3"."Score_0" AS "Score_0", "XGB_Tree_9_3"."Score_1" AS "Score_1", "XGB_Tree_9_3"."Score_2" AS "Score_2", "XGB_Tree_9_3"."Score_3" AS "Score_3", "XGB_Tree_9_3"."Score_4" AS "Score_4", "XGB_Tree_9_3"."Score_5" AS "Score_5", "XGB_Tree_9_3"."Score_6" AS "Score_6", "XGB_Tree_9_3"."Score_7" AS "Score_7", "XGB_Tree_9_3"."Score_8" AS "Score_8", "XGB_Tree_9_3"."Score_9" AS "Score_9" 
FROM "XGB_Tree_9_3" UNION ALL SELECT "XGB_Tree_0_4"."KEY" AS "KEY", "XGB_Tree_0_4"."Score_0" AS "Score_0", "XGB_Tree_0_4"."Score_1" AS "Score_1", "XGB_Tree_0_4"."Score_2" AS "Score_2", "XGB_Tree_0_4"."Score_3" AS "Score_3", "XGB_Tree_0_4"."Score_4" AS "Score_4", "XGB_Tree_0_4"."Score_5" AS "Score_5", "XGB_Tree_0_4"."Score_6" AS "Score_6", "XGB_Tree_0_4"."Score_7" AS "Score_7", "XGB_Tree_0_4"."Score_8" AS "Score_8", "XGB_Tree_0_4"."Score_9" AS "Score_9" 
FROM "XGB_Tree_0_4" UNION ALL SELECT "XGB_Tree_1_4"."KEY" AS "KEY", "XGB_Tree_1_4"."Score_0" AS "Score_0", "XGB_Tree_1_4"."Score_1" AS "Score_1", "XGB_Tree_1_4"."Score_2" AS "Score_2", "XGB_Tree_1_4"."Score_3" AS "Score_3", "XGB_Tree_1_4"."Score_4" AS "Score_4", "XGB_Tree_1_4"."Score_5" AS "Score_5", "XGB_Tree_1_4"."Score_6" AS "Score_6", "XGB_Tree_1_4"."Score_7" AS "Score_7", "XGB_Tree_1_4"."Score_8" AS "Score_8", "XGB_Tree_1_4"."Score_9" AS "Score_9" 
FROM "XGB_Tree_1_4" UNION ALL SELECT "XGB_Tree_2_4"."KEY" AS "KEY", "XGB_Tree_2_4"."Score_0" AS "Score_0", "XGB_Tree_2_4"."Score_1" AS "Score_1", "XGB_Tree_2_4"."Score_2" AS "Score_2", "XGB_Tree_2_4"."Score_3" AS "Score_3", "XGB_Tree_2_4"."Score_4" AS "Score_4", "XGB_Tree_2_4"."Score_5" AS "Score_5", "XGB_Tree_2_4"."Score_6" AS "Score_6", "XGB_Tree_2_4"."Score_7" AS "Score_7", "XGB_Tree_2_4"."Score_8" AS "Score_8", "XGB_Tree_2_4"."Score_9" AS "Score_9" 
FROM "XGB_Tree_2_4" UNION ALL SELECT "XGB_Tree_3_4"."KEY" AS "KEY", "XGB_Tree_3_4"."Score_0" AS "Score_0", "XGB_Tree_3_4"."Score_1" AS "Score_1", "XGB_Tree_3_4"."Score_2" AS "Score_2", "XGB_Tree_3_4"."Score_3" AS "Score_3", "XGB_Tree_3_4"."Score_4" AS "Score_4", "XGB_Tree_3_4"."Score_5" AS "Score_5", "XGB_Tree_3_4"."Score_6" AS "Score_6", "XGB_Tree_3_4"."Score_7" AS "Score_7", "XGB_Tree_3_4"."Score_8" AS "Score_8", "XGB_Tree_3_4"."Score_9" AS "Score_9" 
FROM "XGB_Tree_3_4" UNION ALL SELECT "XGB_Tree_4_4"."KEY" AS "KEY", "XGB_Tree_4_4"."Score_0" AS "Score_0", "XGB_Tree_4_4"."Score_1" AS "Score_1", "XGB_Tree_4_4"."Score_2" AS "Score_2", "XGB_Tree_4_4"."Score_3" AS "Score_3", "XGB_Tree_4_4"."Score_4" AS "Score_4", "XGB_Tree_4_4"."Score_5" AS "Score_5", "XGB_Tree_4_4"."Score_6" AS "Score_6", "XGB_Tree_4_4"."Score_7" AS "Score_7", "XGB_Tree_4_4"."Score_8" AS "Score_8", "XGB_Tree_4_4"."Score_9" AS "Score_9" 
FROM "XGB_Tree_4_4" UNION ALL SELECT "XGB_Tree_5_4"."KEY" AS "KEY", "XGB_Tree_5_4"."Score_0" AS "Score_0", "XGB_Tree_5_4"."Score_1" AS "Score_1", "XGB_Tree_5_4"."Score_2" AS "Score_2", "XGB_Tree_5_4"."Score_3" AS "Score_3", "XGB_Tree_5_4"."Score_4" AS "Score_4", "XGB_Tree_5_4"."Score_5" AS "Score_5", "XGB_Tree_5_4"."Score_6" AS "Score_6", "XGB_Tree_5_4"."Score_7" AS "Score_7", "XGB_Tree_5_4"."Score_8" AS "Score_8", "XGB_Tree_5_4"."Score_9" AS "Score_9" 
FROM "XGB_Tree_5_4" UNION ALL SELECT "XGB_Tree_6_4"."KEY" AS "KEY", "XGB_Tree_6_4"."Score_0" AS "Score_0", "XGB_Tree_6_4"."Score_1" AS "Score_1", "XGB_Tree_6_4"."Score_2" AS "Score_2", "XGB_Tree_6_4"."Score_3" AS "Score_3", "XGB_Tree_6_4"."Score_4" AS "Score_4", "XGB_Tree_6_4"."Score_5" AS "Score_5", "XGB_Tree_6_4"."Score_6" AS "Score_6", "XGB_Tree_6_4"."Score_7" AS "Score_7", "XGB_Tree_6_4"."Score_8" AS "Score_8", "XGB_Tree_6_4"."Score_9" AS "Score_9" 
FROM "XGB_Tree_6_4" UNION ALL SELECT "XGB_Tree_7_4"."KEY" AS "KEY", "XGB_Tree_7_4"."Score_0" AS "Score_0", "XGB_Tree_7_4"."Score_1" AS "Score_1", "XGB_Tree_7_4"."Score_2" AS "Score_2", "XGB_Tree_7_4"."Score_3" AS "Score_3", "XGB_Tree_7_4"."Score_4" AS "Score_4", "XGB_Tree_7_4"."Score_5" AS "Score_5", "XGB_Tree_7_4"."Score_6" AS "Score_6", "XGB_Tree_7_4"."Score_7" AS "Score_7", "XGB_Tree_7_4"."Score_8" AS "Score_8", "XGB_Tree_7_4"."Score_9" AS "Score_9" 
FROM "XGB_Tree_7_4" UNION ALL SELECT "XGB_Tree_8_4"."KEY" AS "KEY", "XGB_Tree_8_4"."Score_0" AS "Score_0", "XGB_Tree_8_4"."Score_1" AS "Score_1", "XGB_Tree_8_4"."Score_2" AS "Score_2", "XGB_Tree_8_4"."Score_3" AS "Score_3", "XGB_Tree_8_4"."Score_4" AS "Score_4", "XGB_Tree_8_4"."Score_5" AS "Score_5", "XGB_Tree_8_4"."Score_6" AS "Score_6", "XGB_Tree_8_4"."Score_7" AS "Score_7", "XGB_Tree_8_4"."Score_8" AS "Score_8", "XGB_Tree_8_4"."Score_9" AS "Score_9" 
FROM "XGB_Tree_8_4" UNION ALL SELECT "XGB_Tree_9_4"."KEY" AS "KEY", "XGB_Tree_9_4"."Score_0" AS "Score_0", "XGB_Tree_9_4"."Score_1" AS "Score_1", "XGB_Tree_9_4"."Score_2" AS "Score_2", "XGB_Tree_9_4"."Score_3" AS "Score_3", "XGB_Tree_9_4"."Score_4" AS "Score_4", "XGB_Tree_9_4"."Score_5" AS "Score_5", "XGB_Tree_9_4"."Score_6" AS "Score_6", "XGB_Tree_9_4"."Score_7" AS "Score_7", "XGB_Tree_9_4"."Score_8" AS "Score_8", "XGB_Tree_9_4"."Score_9" AS "Score_9" 
FROM "XGB_Tree_9_4" UNION ALL SELECT "XGB_Tree_0_5"."KEY" AS "KEY", "XGB_Tree_0_5"."Score_0" AS "Score_0", "XGB_Tree_0_5"."Score_1" AS "Score_1", "XGB_Tree_0_5"."Score_2" AS "Score_2", "XGB_Tree_0_5"."Score_3" AS "Score_3", "XGB_Tree_0_5"."Score_4" AS "Score_4", "XGB_Tree_0_5"."Score_5" AS "Score_5", "XGB_Tree_0_5"."Score_6" AS "Score_6", "XGB_Tree_0_5"."Score_7" AS "Score_7", "XGB_Tree_0_5"."Score_8" AS "Score_8", "XGB_Tree_0_5"."Score_9" AS "Score_9" 
FROM "XGB_Tree_0_5" UNION ALL SELECT "XGB_Tree_1_5"."KEY" AS "KEY", "XGB_Tree_1_5"."Score_0" AS "Score_0", "XGB_Tree_1_5"."Score_1" AS "Score_1", "XGB_Tree_1_5"."Score_2" AS "Score_2", "XGB_Tree_1_5"."Score_3" AS "Score_3", "XGB_Tree_1_5"."Score_4" AS "Score_4", "XGB_Tree_1_5"."Score_5" AS "Score_5", "XGB_Tree_1_5"."Score_6" AS "Score_6", "XGB_Tree_1_5"."Score_7" AS "Score_7", "XGB_Tree_1_5"."Score_8" AS "Score_8", "XGB_Tree_1_5"."Score_9" AS "Score_9" 
FROM "XGB_Tree_1_5" UNION ALL SELECT "XGB_Tree_2_5"."KEY" AS "KEY", "XGB_Tree_2_5"."Score_0" AS "Score_0", "XGB_Tree_2_5"."Score_1" AS "Score_1", "XGB_Tree_2_5"."Score_2" AS "Score_2", "XGB_Tree_2_5"."Score_3" AS "Score_3", "XGB_Tree_2_5"."Score_4" AS "Score_4", "XGB_Tree_2_5"."Score_5" AS "Score_5", "XGB_Tree_2_5"."Score_6" AS "Score_6", "XGB_Tree_2_5"."Score_7" AS "Score_7", "XGB_Tree_2_5"."Score_8" AS "Score_8", "XGB_Tree_2_5"."Score_9" AS "Score_9" 
FROM "XGB_Tree_2_5" UNION ALL SELECT "XGB_Tree_3_5"."KEY" AS "KEY", "XGB_Tree_3_5"."Score_0" AS "Score_0", "XGB_Tree_3_5"."Score_1" AS "Score_1", "XGB_Tree_3_5"."Score_2" AS "Score_2", "XGB_Tree_3_5"."Score_3" AS "Score_3", "XGB_Tree_3_5"."Score_4" AS "Score_4", "XGB_Tree_3_5"."Score_5" AS "Score_5", "XGB_Tree_3_5"."Score_6" AS "Score_6", "XGB_Tree_3_5"."Score_7" AS "Score_7", "XGB_Tree_3_5"."Score_8" AS "Score_8", "XGB_Tree_3_5"."Score_9" AS "Score_9" 
FROM "XGB_Tree_3_5" UNION ALL SELECT "XGB_Tree_4_5"."KEY" AS "KEY", "XGB_Tree_4_5"."Score_0" AS "Score_0", "XGB_Tree_4_5"."Score_1" AS "Score_1", "XGB_Tree_4_5"."Score_2" AS "Score_2", "XGB_Tree_4_5"."Score_3" AS "Score_3", "XGB_Tree_4_5"."Score_4" AS "Score_4", "XGB_Tree_4_5"."Score_5" AS "Score_5", "XGB_Tree_4_5"."Score_6" AS "Score_6", "XGB_Tree_4_5"."Score_7" AS "Score_7", "XGB_Tree_4_5"."Score_8" AS "Score_8", "XGB_Tree_4_5"."Score_9" AS "Score_9" 
FROM "XGB_Tree_4_5" UNION ALL SELECT "XGB_Tree_5_5"."KEY" AS "KEY", "XGB_Tree_5_5"."Score_0" AS "Score_0", "XGB_Tree_5_5"."Score_1" AS "Score_1", "XGB_Tree_5_5"."Score_2" AS "Score_2", "XGB_Tree_5_5"."Score_3" AS "Score_3", "XGB_Tree_5_5"."Score_4" AS "Score_4", "XGB_Tree_5_5"."Score_5" AS "Score_5", "XGB_Tree_5_5"."Score_6" AS "Score_6", "XGB_Tree_5_5"."Score_7" AS "Score_7", "XGB_Tree_5_5"."Score_8" AS "Score_8", "XGB_Tree_5_5"."Score_9" AS "Score_9" 
FROM "XGB_Tree_5_5" UNION ALL SELECT "XGB_Tree_6_5"."KEY" AS "KEY", "XGB_Tree_6_5"."Score_0" AS "Score_0", "XGB_Tree_6_5"."Score_1" AS "Score_1", "XGB_Tree_6_5"."Score_2" AS "Score_2", "XGB_Tree_6_5"."Score_3" AS "Score_3", "XGB_Tree_6_5"."Score_4" AS "Score_4", "XGB_Tree_6_5"."Score_5" AS "Score_5", "XGB_Tree_6_5"."Score_6" AS "Score_6", "XGB_Tree_6_5"."Score_7" AS "Score_7", "XGB_Tree_6_5"."Score_8" AS "Score_8", "XGB_Tree_6_5"."Score_9" AS "Score_9" 
FROM "XGB_Tree_6_5" UNION ALL SELECT "XGB_Tree_7_5"."KEY" AS "KEY", "XGB_Tree_7_5"."Score_0" AS "Score_0", "XGB_Tree_7_5"."Score_1" AS "Score_1", "XGB_Tree_7_5"."Score_2" AS "Score_2", "XGB_Tree_7_5"."Score_3" AS "Score_3", "XGB_Tree_7_5"."Score_4" AS "Score_4", "XGB_Tree_7_5"."Score_5" AS "Score_5", "XGB_Tree_7_5"."Score_6" AS "Score_6", "XGB_Tree_7_5"."Score_7" AS "Score_7", "XGB_Tree_7_5"."Score_8" AS "Score_8", "XGB_Tree_7_5"."Score_9" AS "Score_9" 
FROM "XGB_Tree_7_5" UNION ALL SELECT "XGB_Tree_8_5"."KEY" AS "KEY", "XGB_Tree_8_5"."Score_0" AS "Score_0", "XGB_Tree_8_5"."Score_1" AS "Score_1", "XGB_Tree_8_5"."Score_2" AS "Score_2", "XGB_Tree_8_5"."Score_3" AS "Score_3", "XGB_Tree_8_5"."Score_4" AS "Score_4", "XGB_Tree_8_5"."Score_5" AS "Score_5", "XGB_Tree_8_5"."Score_6" AS "Score_6", "XGB_Tree_8_5"."Score_7" AS "Score_7", "XGB_Tree_8_5"."Score_8" AS "Score_8", "XGB_Tree_8_5"."Score_9" AS "Score_9" 
FROM "XGB_Tree_8_5" UNION ALL SELECT "XGB_Tree_9_5"."KEY" AS "KEY", "XGB_Tree_9_5"."Score_0" AS "Score_0", "XGB_Tree_9_5"."Score_1" AS "Score_1", "XGB_Tree_9_5"."Score_2" AS "Score_2", "XGB_Tree_9_5"."Score_3" AS "Score_3", "XGB_Tree_9_5"."Score_4" AS "Score_4", "XGB_Tree_9_5"."Score_5" AS "Score_5", "XGB_Tree_9_5"."Score_6" AS "Score_6", "XGB_Tree_9_5"."Score_7" AS "Score_7", "XGB_Tree_9_5"."Score_8" AS "Score_8", "XGB_Tree_9_5"."Score_9" AS "Score_9" 
FROM "XGB_Tree_9_5" UNION ALL SELECT "XGB_Tree_0_6"."KEY" AS "KEY", "XGB_Tree_0_6"."Score_0" AS "Score_0", "XGB_Tree_0_6"."Score_1" AS "Score_1", "XGB_Tree_0_6"."Score_2" AS "Score_2", "XGB_Tree_0_6"."Score_3" AS "Score_3", "XGB_Tree_0_6"."Score_4" AS "Score_4", "XGB_Tree_0_6"."Score_5" AS "Score_5", "XGB_Tree_0_6"."Score_6" AS "Score_6", "XGB_Tree_0_6"."Score_7" AS "Score_7", "XGB_Tree_0_6"."Score_8" AS "Score_8", "XGB_Tree_0_6"."Score_9" AS "Score_9" 
FROM "XGB_Tree_0_6" UNION ALL SELECT "XGB_Tree_1_6"."KEY" AS "KEY", "XGB_Tree_1_6"."Score_0" AS "Score_0", "XGB_Tree_1_6"."Score_1" AS "Score_1", "XGB_Tree_1_6"."Score_2" AS "Score_2", "XGB_Tree_1_6"."Score_3" AS "Score_3", "XGB_Tree_1_6"."Score_4" AS "Score_4", "XGB_Tree_1_6"."Score_5" AS "Score_5", "XGB_Tree_1_6"."Score_6" AS "Score_6", "XGB_Tree_1_6"."Score_7" AS "Score_7", "XGB_Tree_1_6"."Score_8" AS "Score_8", "XGB_Tree_1_6"."Score_9" AS "Score_9" 
FROM "XGB_Tree_1_6" UNION ALL SELECT "XGB_Tree_2_6"."KEY" AS "KEY", "XGB_Tree_2_6"."Score_0" AS "Score_0", "XGB_Tree_2_6"."Score_1" AS "Score_1", "XGB_Tree_2_6"."Score_2" AS "Score_2", "XGB_Tree_2_6"."Score_3" AS "Score_3", "XGB_Tree_2_6"."Score_4" AS "Score_4", "XGB_Tree_2_6"."Score_5" AS "Score_5", "XGB_Tree_2_6"."Score_6" AS "Score_6", "XGB_Tree_2_6"."Score_7" AS "Score_7", "XGB_Tree_2_6"."Score_8" AS "Score_8", "XGB_Tree_2_6"."Score_9" AS "Score_9" 
FROM "XGB_Tree_2_6" UNION ALL SELECT "XGB_Tree_3_6"."KEY" AS "KEY", "XGB_Tree_3_6"."Score_0" AS "Score_0", "XGB_Tree_3_6"."Score_1" AS "Score_1", "XGB_Tree_3_6"."Score_2" AS "Score_2", "XGB_Tree_3_6"."Score_3" AS "Score_3", "XGB_Tree_3_6"."Score_4" AS "Score_4", "XGB_Tree_3_6"."Score_5" AS "Score_5", "XGB_Tree_3_6"."Score_6" AS "Score_6", "XGB_Tree_3_6"."Score_7" AS "Score_7", "XGB_Tree_3_6"."Score_8" AS "Score_8", "XGB_Tree_3_6"."Score_9" AS "Score_9" 
FROM "XGB_Tree_3_6" UNION ALL SELECT "XGB_Tree_4_6"."KEY" AS "KEY", "XGB_Tree_4_6"."Score_0" AS "Score_0", "XGB_Tree_4_6"."Score_1" AS "Score_1", "XGB_Tree_4_6"."Score_2" AS "Score_2", "XGB_Tree_4_6"."Score_3" AS "Score_3", "XGB_Tree_4_6"."Score_4" AS "Score_4", "XGB_Tree_4_6"."Score_5" AS "Score_5", "XGB_Tree_4_6"."Score_6" AS "Score_6", "XGB_Tree_4_6"."Score_7" AS "Score_7", "XGB_Tree_4_6"."Score_8" AS "Score_8", "XGB_Tree_4_6"."Score_9" AS "Score_9" 
FROM "XGB_Tree_4_6" UNION ALL SELECT "XGB_Tree_5_6"."KEY" AS "KEY", "XGB_Tree_5_6"."Score_0" AS "Score_0", "XGB_Tree_5_6"."Score_1" AS "Score_1", "XGB_Tree_5_6"."Score_2" AS "Score_2", "XGB_Tree_5_6"."Score_3" AS "Score_3", "XGB_Tree_5_6"."Score_4" AS "Score_4", "XGB_Tree_5_6"."Score_5" AS "Score_5", "XGB_Tree_5_6"."Score_6" AS "Score_6", "XGB_Tree_5_6"."Score_7" AS "Score_7", "XGB_Tree_5_6"."Score_8" AS "Score_8", "XGB_Tree_5_6"."Score_9" AS "Score_9" 
FROM "XGB_Tree_5_6" UNION ALL SELECT "XGB_Tree_6_6"."KEY" AS "KEY", "XGB_Tree_6_6"."Score_0" AS "Score_0", "XGB_Tree_6_6"."Score_1" AS "Score_1", "XGB_Tree_6_6"."Score_2" AS "Score_2", "XGB_Tree_6_6"."Score_3" AS "Score_3", "XGB_Tree_6_6"."Score_4" AS "Score_4", "XGB_Tree_6_6"."Score_5" AS "Score_5", "XGB_Tree_6_6"."Score_6" AS "Score_6", "XGB_Tree_6_6"."Score_7" AS "Score_7", "XGB_Tree_6_6"."Score_8" AS "Score_8", "XGB_Tree_6_6"."Score_9" AS "Score_9" 
FROM "XGB_Tree_6_6" UNION ALL SELECT "XGB_Tree_7_6"."KEY" AS "KEY", "XGB_Tree_7_6"."Score_0" AS "Score_0", "XGB_Tree_7_6"."Score_1" AS "Score_1", "XGB_Tree_7_6"."Score_2" AS "Score_2", "XGB_Tree_7_6"."Score_3" AS "Score_3", "XGB_Tree_7_6"."Score_4" AS "Score_4", "XGB_Tree_7_6"."Score_5" AS "Score_5", "XGB_Tree_7_6"."Score_6" AS "Score_6", "XGB_Tree_7_6"."Score_7" AS "Score_7", "XGB_Tree_7_6"."Score_8" AS "Score_8", "XGB_Tree_7_6"."Score_9" AS "Score_9" 
FROM "XGB_Tree_7_6" UNION ALL SELECT "XGB_Tree_8_6"."KEY" AS "KEY", "XGB_Tree_8_6"."Score_0" AS "Score_0", "XGB_Tree_8_6"."Score_1" AS "Score_1", "XGB_Tree_8_6"."Score_2" AS "Score_2", "XGB_Tree_8_6"."Score_3" AS "Score_3", "XGB_Tree_8_6"."Score_4" AS "Score_4", "XGB_Tree_8_6"."Score_5" AS "Score_5", "XGB_Tree_8_6"."Score_6" AS "Score_6", "XGB_Tree_8_6"."Score_7" AS "Score_7", "XGB_Tree_8_6"."Score_8" AS "Score_8", "XGB_Tree_8_6"."Score_9" AS "Score_9" 
FROM "XGB_Tree_8_6" UNION ALL SELECT "XGB_Tree_9_6"."KEY" AS "KEY", "XGB_Tree_9_6"."Score_0" AS "Score_0", "XGB_Tree_9_6"."Score_1" AS "Score_1", "XGB_Tree_9_6"."Score_2" AS "Score_2", "XGB_Tree_9_6"."Score_3" AS "Score_3", "XGB_Tree_9_6"."Score_4" AS "Score_4", "XGB_Tree_9_6"."Score_5" AS "Score_5", "XGB_Tree_9_6"."Score_6" AS "Score_6", "XGB_Tree_9_6"."Score_7" AS "Score_7", "XGB_Tree_9_6"."Score_8" AS "Score_8", "XGB_Tree_9_6"."Score_9" AS "Score_9" 
FROM "XGB_Tree_9_6" UNION ALL SELECT "XGB_Tree_0_7"."KEY" AS "KEY", "XGB_Tree_0_7"."Score_0" AS "Score_0", "XGB_Tree_0_7"."Score_1" AS "Score_1", "XGB_Tree_0_7"."Score_2" AS "Score_2", "XGB_Tree_0_7"."Score_3" AS "Score_3", "XGB_Tree_0_7"."Score_4" AS "Score_4", "XGB_Tree_0_7"."Score_5" AS "Score_5", "XGB_Tree_0_7"."Score_6" AS "Score_6", "XGB_Tree_0_7"."Score_7" AS "Score_7", "XGB_Tree_0_7"."Score_8" AS "Score_8", "XGB_Tree_0_7"."Score_9" AS "Score_9" 
FROM "XGB_Tree_0_7" UNION ALL SELECT "XGB_Tree_1_7"."KEY" AS "KEY", "XGB_Tree_1_7"."Score_0" AS "Score_0", "XGB_Tree_1_7"."Score_1" AS "Score_1", "XGB_Tree_1_7"."Score_2" AS "Score_2", "XGB_Tree_1_7"."Score_3" AS "Score_3", "XGB_Tree_1_7"."Score_4" AS "Score_4", "XGB_Tree_1_7"."Score_5" AS "Score_5", "XGB_Tree_1_7"."Score_6" AS "Score_6", "XGB_Tree_1_7"."Score_7" AS "Score_7", "XGB_Tree_1_7"."Score_8" AS "Score_8", "XGB_Tree_1_7"."Score_9" AS "Score_9" 
FROM "XGB_Tree_1_7" UNION ALL SELECT "XGB_Tree_2_7"."KEY" AS "KEY", "XGB_Tree_2_7"."Score_0" AS "Score_0", "XGB_Tree_2_7"."Score_1" AS "Score_1", "XGB_Tree_2_7"."Score_2" AS "Score_2", "XGB_Tree_2_7"."Score_3" AS "Score_3", "XGB_Tree_2_7"."Score_4" AS "Score_4", "XGB_Tree_2_7"."Score_5" AS "Score_5", "XGB_Tree_2_7"."Score_6" AS "Score_6", "XGB_Tree_2_7"."Score_7" AS "Score_7", "XGB_Tree_2_7"."Score_8" AS "Score_8", "XGB_Tree_2_7"."Score_9" AS "Score_9" 
FROM "XGB_Tree_2_7" UNION ALL SELECT "XGB_Tree_3_7"."KEY" AS "KEY", "XGB_Tree_3_7"."Score_0" AS "Score_0", "XGB_Tree_3_7"."Score_1" AS "Score_1", "XGB_Tree_3_7"."Score_2" AS "Score_2", "XGB_Tree_3_7"."Score_3" AS "Score_3", "XGB_Tree_3_7"."Score_4" AS "Score_4", "XGB_Tree_3_7"."Score_5" AS "Score_5", "XGB_Tree_3_7"."Score_6" AS "Score_6", "XGB_Tree_3_7"."Score_7" AS "Score_7", "XGB_Tree_3_7"."Score_8" AS "Score_8", "XGB_Tree_3_7"."Score_9" AS "Score_9" 
FROM "XGB_Tree_3_7" UNION ALL SELECT "XGB_Tree_4_7"."KEY" AS "KEY", "XGB_Tree_4_7"."Score_0" AS "Score_0", "XGB_Tree_4_7"."Score_1" AS "Score_1", "XGB_Tree_4_7"."Score_2" AS "Score_2", "XGB_Tree_4_7"."Score_3" AS "Score_3", "XGB_Tree_4_7"."Score_4" AS "Score_4", "XGB_Tree_4_7"."Score_5" AS "Score_5", "XGB_Tree_4_7"."Score_6" AS "Score_6", "XGB_Tree_4_7"."Score_7" AS "Score_7", "XGB_Tree_4_7"."Score_8" AS "Score_8", "XGB_Tree_4_7"."Score_9" AS "Score_9" 
FROM "XGB_Tree_4_7" UNION ALL SELECT "XGB_Tree_5_7"."KEY" AS "KEY", "XGB_Tree_5_7"."Score_0" AS "Score_0", "XGB_Tree_5_7"."Score_1" AS "Score_1", "XGB_Tree_5_7"."Score_2" AS "Score_2", "XGB_Tree_5_7"."Score_3" AS "Score_3", "XGB_Tree_5_7"."Score_4" AS "Score_4", "XGB_Tree_5_7"."Score_5" AS "Score_5", "XGB_Tree_5_7"."Score_6" AS "Score_6", "XGB_Tree_5_7"."Score_7" AS "Score_7", "XGB_Tree_5_7"."Score_8" AS "Score_8", "XGB_Tree_5_7"."Score_9" AS "Score_9" 
FROM "XGB_Tree_5_7" UNION ALL SELECT "XGB_Tree_6_7"."KEY" AS "KEY", "XGB_Tree_6_7"."Score_0" AS "Score_0", "XGB_Tree_6_7"."Score_1" AS "Score_1", "XGB_Tree_6_7"."Score_2" AS "Score_2", "XGB_Tree_6_7"."Score_3" AS "Score_3", "XGB_Tree_6_7"."Score_4" AS "Score_4", "XGB_Tree_6_7"."Score_5" AS "Score_5", "XGB_Tree_6_7"."Score_6" AS "Score_6", "XGB_Tree_6_7"."Score_7" AS "Score_7", "XGB_Tree_6_7"."Score_8" AS "Score_8", "XGB_Tree_6_7"."Score_9" AS "Score_9" 
FROM "XGB_Tree_6_7" UNION ALL SELECT "XGB_Tree_7_7"."KEY" AS "KEY", "XGB_Tree_7_7"."Score_0" AS "Score_0", "XGB_Tree_7_7"."Score_1" AS "Score_1", "XGB_Tree_7_7"."Score_2" AS "Score_2", "XGB_Tree_7_7"."Score_3" AS "Score_3", "XGB_Tree_7_7"."Score_4" AS "Score_4", "XGB_Tree_7_7"."Score_5" AS "Score_5", "XGB_Tree_7_7"."Score_6" AS "Score_6", "XGB_Tree_7_7"."Score_7" AS "Score_7", "XGB_Tree_7_7"."Score_8" AS "Score_8", "XGB_Tree_7_7"."Score_9" AS "Score_9" 
FROM "XGB_Tree_7_7" UNION ALL SELECT "XGB_Tree_8_7"."KEY" AS "KEY", "XGB_Tree_8_7"."Score_0" AS "Score_0", "XGB_Tree_8_7"."Score_1" AS "Score_1", "XGB_Tree_8_7"."Score_2" AS "Score_2", "XGB_Tree_8_7"."Score_3" AS "Score_3", "XGB_Tree_8_7"."Score_4" AS "Score_4", "XGB_Tree_8_7"."Score_5" AS "Score_5", "XGB_Tree_8_7"."Score_6" AS "Score_6", "XGB_Tree_8_7"."Score_7" AS "Score_7", "XGB_Tree_8_7"."Score_8" AS "Score_8", "XGB_Tree_8_7"."Score_9" AS "Score_9" 
FROM "XGB_Tree_8_7" UNION ALL SELECT "XGB_Tree_9_7"."KEY" AS "KEY", "XGB_Tree_9_7"."Score_0" AS "Score_0", "XGB_Tree_9_7"."Score_1" AS "Score_1", "XGB_Tree_9_7"."Score_2" AS "Score_2", "XGB_Tree_9_7"."Score_3" AS "Score_3", "XGB_Tree_9_7"."Score_4" AS "Score_4", "XGB_Tree_9_7"."Score_5" AS "Score_5", "XGB_Tree_9_7"."Score_6" AS "Score_6", "XGB_Tree_9_7"."Score_7" AS "Score_7", "XGB_Tree_9_7"."Score_8" AS "Score_8", "XGB_Tree_9_7"."Score_9" AS "Score_9" 
FROM "XGB_Tree_9_7" UNION ALL SELECT "XGB_Tree_0_8"."KEY" AS "KEY", "XGB_Tree_0_8"."Score_0" AS "Score_0", "XGB_Tree_0_8"."Score_1" AS "Score_1", "XGB_Tree_0_8"."Score_2" AS "Score_2", "XGB_Tree_0_8"."Score_3" AS "Score_3", "XGB_Tree_0_8"."Score_4" AS "Score_4", "XGB_Tree_0_8"."Score_5" AS "Score_5", "XGB_Tree_0_8"."Score_6" AS "Score_6", "XGB_Tree_0_8"."Score_7" AS "Score_7", "XGB_Tree_0_8"."Score_8" AS "Score_8", "XGB_Tree_0_8"."Score_9" AS "Score_9" 
FROM "XGB_Tree_0_8" UNION ALL SELECT "XGB_Tree_1_8"."KEY" AS "KEY", "XGB_Tree_1_8"."Score_0" AS "Score_0", "XGB_Tree_1_8"."Score_1" AS "Score_1", "XGB_Tree_1_8"."Score_2" AS "Score_2", "XGB_Tree_1_8"."Score_3" AS "Score_3", "XGB_Tree_1_8"."Score_4" AS "Score_4", "XGB_Tree_1_8"."Score_5" AS "Score_5", "XGB_Tree_1_8"."Score_6" AS "Score_6", "XGB_Tree_1_8"."Score_7" AS "Score_7", "XGB_Tree_1_8"."Score_8" AS "Score_8", "XGB_Tree_1_8"."Score_9" AS "Score_9" 
FROM "XGB_Tree_1_8" UNION ALL SELECT "XGB_Tree_2_8"."KEY" AS "KEY", "XGB_Tree_2_8"."Score_0" AS "Score_0", "XGB_Tree_2_8"."Score_1" AS "Score_1", "XGB_Tree_2_8"."Score_2" AS "Score_2", "XGB_Tree_2_8"."Score_3" AS "Score_3", "XGB_Tree_2_8"."Score_4" AS "Score_4", "XGB_Tree_2_8"."Score_5" AS "Score_5", "XGB_Tree_2_8"."Score_6" AS "Score_6", "XGB_Tree_2_8"."Score_7" AS "Score_7", "XGB_Tree_2_8"."Score_8" AS "Score_8", "XGB_Tree_2_8"."Score_9" AS "Score_9" 
FROM "XGB_Tree_2_8" UNION ALL SELECT "XGB_Tree_3_8"."KEY" AS "KEY", "XGB_Tree_3_8"."Score_0" AS "Score_0", "XGB_Tree_3_8"."Score_1" AS "Score_1", "XGB_Tree_3_8"."Score_2" AS "Score_2", "XGB_Tree_3_8"."Score_3" AS "Score_3", "XGB_Tree_3_8"."Score_4" AS "Score_4", "XGB_Tree_3_8"."Score_5" AS "Score_5", "XGB_Tree_3_8"."Score_6" AS "Score_6", "XGB_Tree_3_8"."Score_7" AS "Score_7", "XGB_Tree_3_8"."Score_8" AS "Score_8", "XGB_Tree_3_8"."Score_9" AS "Score_9" 
FROM "XGB_Tree_3_8" UNION ALL SELECT "XGB_Tree_4_8"."KEY" AS "KEY", "XGB_Tree_4_8"."Score_0" AS "Score_0", "XGB_Tree_4_8"."Score_1" AS "Score_1", "XGB_Tree_4_8"."Score_2" AS "Score_2", "XGB_Tree_4_8"."Score_3" AS "Score_3", "XGB_Tree_4_8"."Score_4" AS "Score_4", "XGB_Tree_4_8"."Score_5" AS "Score_5", "XGB_Tree_4_8"."Score_6" AS "Score_6", "XGB_Tree_4_8"."Score_7" AS "Score_7", "XGB_Tree_4_8"."Score_8" AS "Score_8", "XGB_Tree_4_8"."Score_9" AS "Score_9" 
FROM "XGB_Tree_4_8" UNION ALL SELECT "XGB_Tree_5_8"."KEY" AS "KEY", "XGB_Tree_5_8"."Score_0" AS "Score_0", "XGB_Tree_5_8"."Score_1" AS "Score_1", "XGB_Tree_5_8"."Score_2" AS "Score_2", "XGB_Tree_5_8"."Score_3" AS "Score_3", "XGB_Tree_5_8"."Score_4" AS "Score_4", "XGB_Tree_5_8"."Score_5" AS "Score_5", "XGB_Tree_5_8"."Score_6" AS "Score_6", "XGB_Tree_5_8"."Score_7" AS "Score_7", "XGB_Tree_5_8"."Score_8" AS "Score_8", "XGB_Tree_5_8"."Score_9" AS "Score_9" 
FROM "XGB_Tree_5_8" UNION ALL SELECT "XGB_Tree_6_8"."KEY" AS "KEY", "XGB_Tree_6_8"."Score_0" AS "Score_0", "XGB_Tree_6_8"."Score_1" AS "Score_1", "XGB_Tree_6_8"."Score_2" AS "Score_2", "XGB_Tree_6_8"."Score_3" AS "Score_3", "XGB_Tree_6_8"."Score_4" AS "Score_4", "XGB_Tree_6_8"."Score_5" AS "Score_5", "XGB_Tree_6_8"."Score_6" AS "Score_6", "XGB_Tree_6_8"."Score_7" AS "Score_7", "XGB_Tree_6_8"."Score_8" AS "Score_8", "XGB_Tree_6_8"."Score_9" AS "Score_9" 
FROM "XGB_Tree_6_8" UNION ALL SELECT "XGB_Tree_7_8"."KEY" AS "KEY", "XGB_Tree_7_8"."Score_0" AS "Score_0", "XGB_Tree_7_8"."Score_1" AS "Score_1", "XGB_Tree_7_8"."Score_2" AS "Score_2", "XGB_Tree_7_8"."Score_3" AS "Score_3", "XGB_Tree_7_8"."Score_4" AS "Score_4", "XGB_Tree_7_8"."Score_5" AS "Score_5", "XGB_Tree_7_8"."Score_6" AS "Score_6", "XGB_Tree_7_8"."Score_7" AS "Score_7", "XGB_Tree_7_8"."Score_8" AS "Score_8", "XGB_Tree_7_8"."Score_9" AS "Score_9" 
FROM "XGB_Tree_7_8" UNION ALL SELECT "XGB_Tree_8_8"."KEY" AS "KEY", "XGB_Tree_8_8"."Score_0" AS "Score_0", "XGB_Tree_8_8"."Score_1" AS "Score_1", "XGB_Tree_8_8"."Score_2" AS "Score_2", "XGB_Tree_8_8"."Score_3" AS "Score_3", "XGB_Tree_8_8"."Score_4" AS "Score_4", "XGB_Tree_8_8"."Score_5" AS "Score_5", "XGB_Tree_8_8"."Score_6" AS "Score_6", "XGB_Tree_8_8"."Score_7" AS "Score_7", "XGB_Tree_8_8"."Score_8" AS "Score_8", "XGB_Tree_8_8"."Score_9" AS "Score_9" 
FROM "XGB_Tree_8_8" UNION ALL SELECT "XGB_Tree_9_8"."KEY" AS "KEY", "XGB_Tree_9_8"."Score_0" AS "Score_0", "XGB_Tree_9_8"."Score_1" AS "Score_1", "XGB_Tree_9_8"."Score_2" AS "Score_2", "XGB_Tree_9_8"."Score_3" AS "Score_3", "XGB_Tree_9_8"."Score_4" AS "Score_4", "XGB_Tree_9_8"."Score_5" AS "Score_5", "XGB_Tree_9_8"."Score_6" AS "Score_6", "XGB_Tree_9_8"."Score_7" AS "Score_7", "XGB_Tree_9_8"."Score_8" AS "Score_8", "XGB_Tree_9_8"."Score_9" AS "Score_9" 
FROM "XGB_Tree_9_8" UNION ALL SELECT "XGB_Tree_0_9"."KEY" AS "KEY", "XGB_Tree_0_9"."Score_0" AS "Score_0", "XGB_Tree_0_9"."Score_1" AS "Score_1", "XGB_Tree_0_9"."Score_2" AS "Score_2", "XGB_Tree_0_9"."Score_3" AS "Score_3", "XGB_Tree_0_9"."Score_4" AS "Score_4", "XGB_Tree_0_9"."Score_5" AS "Score_5", "XGB_Tree_0_9"."Score_6" AS "Score_6", "XGB_Tree_0_9"."Score_7" AS "Score_7", "XGB_Tree_0_9"."Score_8" AS "Score_8", "XGB_Tree_0_9"."Score_9" AS "Score_9" 
FROM "XGB_Tree_0_9" UNION ALL SELECT "XGB_Tree_1_9"."KEY" AS "KEY", "XGB_Tree_1_9"."Score_0" AS "Score_0", "XGB_Tree_1_9"."Score_1" AS "Score_1", "XGB_Tree_1_9"."Score_2" AS "Score_2", "XGB_Tree_1_9"."Score_3" AS "Score_3", "XGB_Tree_1_9"."Score_4" AS "Score_4", "XGB_Tree_1_9"."Score_5" AS "Score_5", "XGB_Tree_1_9"."Score_6" AS "Score_6", "XGB_Tree_1_9"."Score_7" AS "Score_7", "XGB_Tree_1_9"."Score_8" AS "Score_8", "XGB_Tree_1_9"."Score_9" AS "Score_9" 
FROM "XGB_Tree_1_9" UNION ALL SELECT "XGB_Tree_2_9"."KEY" AS "KEY", "XGB_Tree_2_9"."Score_0" AS "Score_0", "XGB_Tree_2_9"."Score_1" AS "Score_1", "XGB_Tree_2_9"."Score_2" AS "Score_2", "XGB_Tree_2_9"."Score_3" AS "Score_3", "XGB_Tree_2_9"."Score_4" AS "Score_4", "XGB_Tree_2_9"."Score_5" AS "Score_5", "XGB_Tree_2_9"."Score_6" AS "Score_6", "XGB_Tree_2_9"."Score_7" AS "Score_7", "XGB_Tree_2_9"."Score_8" AS "Score_8", "XGB_Tree_2_9"."Score_9" AS "Score_9" 
FROM "XGB_Tree_2_9" UNION ALL SELECT "XGB_Tree_3_9"."KEY" AS "KEY", "XGB_Tree_3_9"."Score_0" AS "Score_0", "XGB_Tree_3_9"."Score_1" AS "Score_1", "XGB_Tree_3_9"."Score_2" AS "Score_2", "XGB_Tree_3_9"."Score_3" AS "Score_3", "XGB_Tree_3_9"."Score_4" AS "Score_4", "XGB_Tree_3_9"."Score_5" AS "Score_5", "XGB_Tree_3_9"."Score_6" AS "Score_6", "XGB_Tree_3_9"."Score_7" AS "Score_7", "XGB_Tree_3_9"."Score_8" AS "Score_8", "XGB_Tree_3_9"."Score_9" AS "Score_9" 
FROM "XGB_Tree_3_9" UNION ALL SELECT "XGB_Tree_4_9"."KEY" AS "KEY", "XGB_Tree_4_9"."Score_0" AS "Score_0", "XGB_Tree_4_9"."Score_1" AS "Score_1", "XGB_Tree_4_9"."Score_2" AS "Score_2", "XGB_Tree_4_9"."Score_3" AS "Score_3", "XGB_Tree_4_9"."Score_4" AS "Score_4", "XGB_Tree_4_9"."Score_5" AS "Score_5", "XGB_Tree_4_9"."Score_6" AS "Score_6", "XGB_Tree_4_9"."Score_7" AS "Score_7", "XGB_Tree_4_9"."Score_8" AS "Score_8", "XGB_Tree_4_9"."Score_9" AS "Score_9" 
FROM "XGB_Tree_4_9" UNION ALL SELECT "XGB_Tree_5_9"."KEY" AS "KEY", "XGB_Tree_5_9"."Score_0" AS "Score_0", "XGB_Tree_5_9"."Score_1" AS "Score_1", "XGB_Tree_5_9"."Score_2" AS "Score_2", "XGB_Tree_5_9"."Score_3" AS "Score_3", "XGB_Tree_5_9"."Score_4" AS "Score_4", "XGB_Tree_5_9"."Score_5" AS "Score_5", "XGB_Tree_5_9"."Score_6" AS "Score_6", "XGB_Tree_5_9"."Score_7" AS "Score_7", "XGB_Tree_5_9"."Score_8" AS "Score_8", "XGB_Tree_5_9"."Score_9" AS "Score_9" 
FROM "XGB_Tree_5_9" UNION ALL SELECT "XGB_Tree_6_9"."KEY" AS "KEY", "XGB_Tree_6_9"."Score_0" AS "Score_0", "XGB_Tree_6_9"."Score_1" AS "Score_1", "XGB_Tree_6_9"."Score_2" AS "Score_2", "XGB_Tree_6_9"."Score_3" AS "Score_3", "XGB_Tree_6_9"."Score_4" AS "Score_4", "XGB_Tree_6_9"."Score_5" AS "Score_5", "XGB_Tree_6_9"."Score_6" AS "Score_6", "XGB_Tree_6_9"."Score_7" AS "Score_7", "XGB_Tree_6_9"."Score_8" AS "Score_8", "XGB_Tree_6_9"."Score_9" AS "Score_9" 
FROM "XGB_Tree_6_9" UNION ALL SELECT "XGB_Tree_7_9"."KEY" AS "KEY", "XGB_Tree_7_9"."Score_0" AS "Score_0", "XGB_Tree_7_9"."Score_1" AS "Score_1", "XGB_Tree_7_9"."Score_2" AS "Score_2", "XGB_Tree_7_9"."Score_3" AS "Score_3", "XGB_Tree_7_9"."Score_4" AS "Score_4", "XGB_Tree_7_9"."Score_5" AS "Score_5", "XGB_Tree_7_9"."Score_6" AS "Score_6", "XGB_Tree_7_9"."Score_7" AS "Score_7", "XGB_Tree_7_9"."Score_8" AS "Score_8", "XGB_Tree_7_9"."Score_9" AS "Score_9" 
FROM "XGB_Tree_7_9" UNION ALL SELECT "XGB_Tree_8_9"."KEY" AS "KEY", "XGB_Tree_8_9"."Score_0" AS "Score_0", "XGB_Tree_8_9"."Score_1" AS "Score_1", "XGB_Tree_8_9"."Score_2" AS "Score_2", "XGB_Tree_8_9"."Score_3" AS "Score_3", "XGB_Tree_8_9"."Score_4" AS "Score_4", "XGB_Tree_8_9"."Score_5" AS "Score_5", "XGB_Tree_8_9"."Score_6" AS "Score_6", "XGB_Tree_8_9"."Score_7" AS "Score_7", "XGB_Tree_8_9"."Score_8" AS "Score_8", "XGB_Tree_8_9"."Score_9" AS "Score_9" 
FROM "XGB_Tree_8_9" UNION ALL SELECT "XGB_Tree_9_9"."KEY" AS "KEY", "XGB_Tree_9_9"."Score_0" AS "Score_0", "XGB_Tree_9_9"."Score_1" AS "Score_1", "XGB_Tree_9_9"."Score_2" AS "Score_2", "XGB_Tree_9_9"."Score_3" AS "Score_3", "XGB_Tree_9_9"."Score_4" AS "Score_4", "XGB_Tree_9_9"."Score_5" AS "Score_5", "XGB_Tree_9_9"."Score_6" AS "Score_6", "XGB_Tree_9_9"."Score_7" AS "Score_7", "XGB_Tree_9_9"."Score_8" AS "Score_8", "XGB_Tree_9_9"."Score_9" AS "Score_9" 
FROM "XGB_Tree_9_9") AS ensemble_score_union), 
"XGB_Sum_Scores" AS 
(SELECT "T"."KEY" AS "KEY", "T"."Score_0" AS "Score_0", "T"."Score_1" AS "Score_1", "T"."Score_2" AS "Score_2", "T"."Score_3" AS "Score_3", "T"."Score_4" AS "Score_4", "T"."Score_5" AS "Score_5", "T"."Score_6" AS "Score_6", "T"."Score_7" AS "Score_7", "T"."Score_8" AS "Score_8", "T"."Score_9" AS "Score_9" 
FROM (SELECT "Score_Union_CTE"."KEY" AS "KEY", sum("Score_Union_CTE"."Score_0") AS "Score_0", sum("Score_Union_CTE"."Score_1") AS "Score_1", sum("Score_Union_CTE"."Score_2") AS "Score_2", sum("Score_Union_CTE"."Score_3") AS "Score_3", sum("Score_Union_CTE"."Score_4") AS "Score_4", sum("Score_Union_CTE"."Score_5") AS "Score_5", sum("Score_Union_CTE"."Score_6") AS "Score_6", sum("Score_Union_CTE"."Score_7") AS "Score_7", sum("Score_Union_CTE"."Score_8") AS "Score_8", sum("Score_Union_CTE"."Score_9") AS "Score_9" 
FROM "Score_Union_CTE" GROUP BY "Score_Union_CTE"."KEY") AS "T"), 
orig_cte AS 
(SELECT "XGB_Sum_Scores"."KEY" AS "KEY", "XGB_Sum_Scores"."Score_0" AS "Score_0", "XGB_Sum_Scores"."Score_1" AS "Score_1", "XGB_Sum_Scores"."Score_2" AS "Score_2", "XGB_Sum_Scores"."Score_3" AS "Score_3", "XGB_Sum_Scores"."Score_4" AS "Score_4", "XGB_Sum_Scores"."Score_5" AS "Score_5", "XGB_Sum_Scores"."Score_6" AS "Score_6", "XGB_Sum_Scores"."Score_7" AS "Score_7", "XGB_Sum_Scores"."Score_8" AS "Score_8", "XGB_Sum_Scores"."Score_9" AS "Score_9", CAST(NULL AS FLOAT) AS "Proba_0", CAST(NULL AS FLOAT) AS "Proba_1", CAST(NULL AS FLOAT) AS "Proba_2", CAST(NULL AS FLOAT) AS "Proba_3", CAST(NULL AS FLOAT) AS "Proba_4", CAST(NULL AS FLOAT) AS "Proba_5", CAST(NULL AS FLOAT) AS "Proba_6", CAST(NULL AS FLOAT) AS "Proba_7", CAST(NULL AS FLOAT) AS "Proba_8", CAST(NULL AS FLOAT) AS "Proba_9", CAST(NULL AS FLOAT) AS "LogProba_0", CAST(NULL AS FLOAT) AS "LogProba_1", CAST(NULL AS FLOAT) AS "LogProba_2", CAST(NULL AS FLOAT) AS "LogProba_3", CAST(NULL AS FLOAT) AS "LogProba_4", CAST(NULL AS FLOAT) AS "LogProba_5", CAST(NULL AS FLOAT) AS "LogProba_6", CAST(NULL AS FLOAT) AS "LogProba_7", CAST(NULL AS FLOAT) AS "LogProba_8", CAST(NULL AS FLOAT) AS "LogProba_9", CAST(NULL AS INTEGER) AS "Decision" 
FROM "XGB_Sum_Scores"), 
score_class_union AS 
(SELECT scu."KEY_u" AS "KEY_u", scu.class AS class, scu."LogProba" AS "LogProba", scu."Proba" AS "Proba", scu."Score" AS "Score" 
FROM (SELECT orig_cte."KEY" AS "KEY_u", 0 AS class, orig_cte."LogProba_0" AS "LogProba", orig_cte."Proba_0" AS "Proba", orig_cte."Score_0" AS "Score" 
FROM orig_cte UNION ALL SELECT orig_cte."KEY" AS "KEY_u", 1 AS class, orig_cte."LogProba_1" AS "LogProba", orig_cte."Proba_1" AS "Proba", orig_cte."Score_1" AS "Score" 
FROM orig_cte UNION ALL SELECT orig_cte."KEY" AS "KEY_u", 2 AS class, orig_cte."LogProba_2" AS "LogProba", orig_cte."Proba_2" AS "Proba", orig_cte."Score_2" AS "Score" 
FROM orig_cte UNION ALL SELECT orig_cte."KEY" AS "KEY_u", 3 AS class, orig_cte."LogProba_3" AS "LogProba", orig_cte."Proba_3" AS "Proba", orig_cte."Score_3" AS "Score" 
FROM orig_cte UNION ALL SELECT orig_cte."KEY" AS "KEY_u", 4 AS class, orig_cte."LogProba_4" AS "LogProba", orig_cte."Proba_4" AS "Proba", orig_cte."Score_4" AS "Score" 
FROM orig_cte UNION ALL SELECT orig_cte."KEY" AS "KEY_u", 5 AS class, orig_cte."LogProba_5" AS "LogProba", orig_cte."Proba_5" AS "Proba", orig_cte."Score_5" AS "Score" 
FROM orig_cte UNION ALL SELECT orig_cte."KEY" AS "KEY_u", 6 AS class, orig_cte."LogProba_6" AS "LogProba", orig_cte."Proba_6" AS "Proba", orig_cte."Score_6" AS "Score" 
FROM orig_cte UNION ALL SELECT orig_cte."KEY" AS "KEY_u", 7 AS class, orig_cte."LogProba_7" AS "LogProba", orig_cte."Proba_7" AS "Proba", orig_cte."Score_7" AS "Score" 
FROM orig_cte UNION ALL SELECT orig_cte."KEY" AS "KEY_u", 8 AS class, orig_cte."LogProba_8" AS "LogProba", orig_cte."Proba_8" AS "Proba", orig_cte."Score_8" AS "Score" 
FROM orig_cte UNION ALL SELECT orig_cte."KEY" AS "KEY_u", 9 AS class, orig_cte."LogProba_9" AS "LogProba", orig_cte."Proba_9" AS "Proba", orig_cte."Score_9" AS "Score" 
FROM orig_cte) AS scu), 
score_max AS 
(SELECT orig_cte."KEY" AS "KEY", orig_cte."Score_0" AS "Score_0", orig_cte."Score_1" AS "Score_1", orig_cte."Score_2" AS "Score_2", orig_cte."Score_3" AS "Score_3", orig_cte."Score_4" AS "Score_4", orig_cte."Score_5" AS "Score_5", orig_cte."Score_6" AS "Score_6", orig_cte."Score_7" AS "Score_7", orig_cte."Score_8" AS "Score_8", orig_cte."Score_9" AS "Score_9", orig_cte."Proba_0" AS "Proba_0", orig_cte."Proba_1" AS "Proba_1", orig_cte."Proba_2" AS "Proba_2", orig_cte."Proba_3" AS "Proba_3", orig_cte."Proba_4" AS "Proba_4", orig_cte."Proba_5" AS "Proba_5", orig_cte."Proba_6" AS "Proba_6", orig_cte."Proba_7" AS "Proba_7", orig_cte."Proba_8" AS "Proba_8", orig_cte."Proba_9" AS "Proba_9", orig_cte."LogProba_0" AS "LogProba_0", orig_cte."LogProba_1" AS "LogProba_1", orig_cte."LogProba_2" AS "LogProba_2", orig_cte."LogProba_3" AS "LogProba_3", orig_cte."LogProba_4" AS "LogProba_4", orig_cte."LogProba_5" AS "LogProba_5", orig_cte."LogProba_6" AS "LogProba_6", orig_cte."LogProba_7" AS "LogProba_7", orig_cte."LogProba_8" AS "LogProba_8", orig_cte."LogProba_9" AS "LogProba_9", orig_cte."Decision" AS "Decision", max_select."KEY_m" AS "KEY_m", max_select."max_Score" AS "max_Score" 
FROM orig_cte LEFT OUTER JOIN (SELECT score_class_union."KEY_u" AS "KEY_m", max(score_class_union."Score") AS "max_Score" 
FROM score_class_union GROUP BY score_class_union."KEY_u") AS max_select ON orig_cte."KEY" = max_select."KEY_m"), 
score_soft_max_deltas AS 
(SELECT score_max."KEY" AS "KEY", score_max."Score_0" AS "Score_0", score_max."Score_1" AS "Score_1", score_max."Score_2" AS "Score_2", score_max."Score_3" AS "Score_3", score_max."Score_4" AS "Score_4", score_max."Score_5" AS "Score_5", score_max."Score_6" AS "Score_6", score_max."Score_7" AS "Score_7", score_max."Score_8" AS "Score_8", score_max."Score_9" AS "Score_9", score_max."Proba_0" AS "Proba_0", score_max."Proba_1" AS "Proba_1", score_max."Proba_2" AS "Proba_2", score_max."Proba_3" AS "Proba_3", score_max."Proba_4" AS "Proba_4", score_max."Proba_5" AS "Proba_5", score_max."Proba_6" AS "Proba_6", score_max."Proba_7" AS "Proba_7", score_max."Proba_8" AS "Proba_8", score_max."Proba_9" AS "Proba_9", score_max."LogProba_0" AS "LogProba_0", score_max."LogProba_1" AS "LogProba_1", score_max."LogProba_2" AS "LogProba_2", score_max."LogProba_3" AS "LogProba_3", score_max."LogProba_4" AS "LogProba_4", score_max."LogProba_5" AS "LogProba_5", score_max."LogProba_6" AS "LogProba_6", score_max."LogProba_7" AS "LogProba_7", score_max."LogProba_8" AS "LogProba_8", score_max."LogProba_9" AS "LogProba_9", score_max."Decision" AS "Decision", score_max."KEY_m" AS "KEY_m", score_max."max_Score" AS "max_Score", exp(CASE WHEN (score_max."Score_0" - score_max."max_Score" >= -709.782712893) THEN score_max."Score_0" - score_max."max_Score" ELSE -709.782712893 END) AS "exp_delta_Score_0", exp(CASE WHEN (score_max."Score_1" - score_max."max_Score" >= -709.782712893) THEN score_max."Score_1" - score_max."max_Score" ELSE -709.782712893 END) AS "exp_delta_Score_1", exp(CASE WHEN (score_max."Score_2" - score_max."max_Score" >= -709.782712893) THEN score_max."Score_2" - score_max."max_Score" ELSE -709.782712893 END) AS "exp_delta_Score_2", exp(CASE WHEN (score_max."Score_3" - score_max."max_Score" >= -709.782712893) THEN score_max."Score_3" - score_max."max_Score" ELSE -709.782712893 END) AS "exp_delta_Score_3", exp(CASE WHEN (score_max."Score_4" - score_max."max_Score" >= -709.782712893) THEN score_max."Score_4" - score_max."max_Score" ELSE -709.782712893 END) AS "exp_delta_Score_4", exp(CASE WHEN (score_max."Score_5" - score_max."max_Score" >= -709.782712893) THEN score_max."Score_5" - score_max."max_Score" ELSE -709.782712893 END) AS "exp_delta_Score_5", exp(CASE WHEN (score_max."Score_6" - score_max."max_Score" >= -709.782712893) THEN score_max."Score_6" - score_max."max_Score" ELSE -709.782712893 END) AS "exp_delta_Score_6", exp(CASE WHEN (score_max."Score_7" - score_max."max_Score" >= -709.782712893) THEN score_max."Score_7" - score_max."max_Score" ELSE -709.782712893 END) AS "exp_delta_Score_7", exp(CASE WHEN (score_max."Score_8" - score_max."max_Score" >= -709.782712893) THEN score_max."Score_8" - score_max."max_Score" ELSE -709.782712893 END) AS "exp_delta_Score_8", exp(CASE WHEN (score_max."Score_9" - score_max."max_Score" >= -709.782712893) THEN score_max."Score_9" - score_max."max_Score" ELSE -709.782712893 END) AS "exp_delta_Score_9" 
FROM score_max), 
score_class_union_soft AS 
(SELECT soft_scu."KEY" AS "KEY", soft_scu.class AS class, soft_scu."exp_delta_Score" AS "exp_delta_Score" 
FROM (SELECT score_soft_max_deltas."KEY" AS "KEY", 0 AS class, score_soft_max_deltas."exp_delta_Score_0" AS "exp_delta_Score" 
FROM score_soft_max_deltas UNION ALL SELECT score_soft_max_deltas."KEY" AS "KEY", 1 AS class, score_soft_max_deltas."exp_delta_Score_1" AS "exp_delta_Score" 
FROM score_soft_max_deltas UNION ALL SELECT score_soft_max_deltas."KEY" AS "KEY", 2 AS class, score_soft_max_deltas."exp_delta_Score_2" AS "exp_delta_Score" 
FROM score_soft_max_deltas UNION ALL SELECT score_soft_max_deltas."KEY" AS "KEY", 3 AS class, score_soft_max_deltas."exp_delta_Score_3" AS "exp_delta_Score" 
FROM score_soft_max_deltas UNION ALL SELECT score_soft_max_deltas."KEY" AS "KEY", 4 AS class, score_soft_max_deltas."exp_delta_Score_4" AS "exp_delta_Score" 
FROM score_soft_max_deltas UNION ALL SELECT score_soft_max_deltas."KEY" AS "KEY", 5 AS class, score_soft_max_deltas."exp_delta_Score_5" AS "exp_delta_Score" 
FROM score_soft_max_deltas UNION ALL SELECT score_soft_max_deltas."KEY" AS "KEY", 6 AS class, score_soft_max_deltas."exp_delta_Score_6" AS "exp_delta_Score" 
FROM score_soft_max_deltas UNION ALL SELECT score_soft_max_deltas."KEY" AS "KEY", 7 AS class, score_soft_max_deltas."exp_delta_Score_7" AS "exp_delta_Score" 
FROM score_soft_max_deltas UNION ALL SELECT score_soft_max_deltas."KEY" AS "KEY", 8 AS class, score_soft_max_deltas."exp_delta_Score_8" AS "exp_delta_Score" 
FROM score_soft_max_deltas UNION ALL SELECT score_soft_max_deltas."KEY" AS "KEY", 9 AS class, score_soft_max_deltas."exp_delta_Score_9" AS "exp_delta_Score" 
FROM score_soft_max_deltas) AS soft_scu), 
score_soft_max AS 
(SELECT score_soft_max_deltas."KEY" AS "KEY", score_soft_max_deltas."Score_0" AS "Score_0", score_soft_max_deltas."Score_1" AS "Score_1", score_soft_max_deltas."Score_2" AS "Score_2", score_soft_max_deltas."Score_3" AS "Score_3", score_soft_max_deltas."Score_4" AS "Score_4", score_soft_max_deltas."Score_5" AS "Score_5", score_soft_max_deltas."Score_6" AS "Score_6", score_soft_max_deltas."Score_7" AS "Score_7", score_soft_max_deltas."Score_8" AS "Score_8", score_soft_max_deltas."Score_9" AS "Score_9", score_soft_max_deltas."Proba_0" AS "Proba_0", score_soft_max_deltas."Proba_1" AS "Proba_1", score_soft_max_deltas."Proba_2" AS "Proba_2", score_soft_max_deltas."Proba_3" AS "Proba_3", score_soft_max_deltas."Proba_4" AS "Proba_4", score_soft_max_deltas."Proba_5" AS "Proba_5", score_soft_max_deltas."Proba_6" AS "Proba_6", score_soft_max_deltas."Proba_7" AS "Proba_7", score_soft_max_deltas."Proba_8" AS "Proba_8", score_soft_max_deltas."Proba_9" AS "Proba_9", score_soft_max_deltas."LogProba_0" AS "LogProba_0", score_soft_max_deltas."LogProba_1" AS "LogProba_1", score_soft_max_deltas."LogProba_2" AS "LogProba_2", score_soft_max_deltas."LogProba_3" AS "LogProba_3", score_soft_max_deltas."LogProba_4" AS "LogProba_4", score_soft_max_deltas."LogProba_5" AS "LogProba_5", score_soft_max_deltas."LogProba_6" AS "LogProba_6", score_soft_max_deltas."LogProba_7" AS "LogProba_7", score_soft_max_deltas."LogProba_8" AS "LogProba_8", score_soft_max_deltas."LogProba_9" AS "LogProba_9", score_soft_max_deltas."Decision" AS "Decision", score_soft_max_deltas."KEY_m" AS "KEY_m", score_soft_max_deltas."max_Score" AS "max_Score", score_soft_max_deltas."exp_delta_Score_0" AS "exp_delta_Score_0", score_soft_max_deltas."exp_delta_Score_1" AS "exp_delta_Score_1", score_soft_max_deltas."exp_delta_Score_2" AS "exp_delta_Score_2", score_soft_max_deltas."exp_delta_Score_3" AS "exp_delta_Score_3", score_soft_max_deltas."exp_delta_Score_4" AS "exp_delta_Score_4", score_soft_max_deltas."exp_delta_Score_5" AS "exp_delta_Score_5", score_soft_max_deltas."exp_delta_Score_6" AS "exp_delta_Score_6", score_soft_max_deltas."exp_delta_Score_7" AS "exp_delta_Score_7", score_soft_max_deltas."exp_delta_Score_8" AS "exp_delta_Score_8", score_soft_max_deltas."exp_delta_Score_9" AS "exp_delta_Score_9", sum_exp_t."KEY_sum" AS "KEY_sum", sum_exp_t."sum_ExpDeltaScore" AS "sum_ExpDeltaScore" 
FROM score_soft_max_deltas LEFT OUTER JOIN (SELECT score_class_union_soft."KEY" AS "KEY_sum", sum(score_class_union_soft."exp_delta_Score") AS "sum_ExpDeltaScore" 
FROM score_class_union_soft GROUP BY score_class_union_soft."KEY") AS sum_exp_t ON score_soft_max_deltas."KEY" = sum_exp_t."KEY_sum"), 
union_with_max AS 
(SELECT score_class_union."KEY_u" AS "KEY_u", score_class_union.class AS class, score_class_union."LogProba" AS "LogProba", score_class_union."Proba" AS "Proba", score_class_union."Score" AS "Score", score_soft_max."KEY" AS "KEY", score_soft_max."Score_0" AS "Score_0", score_soft_max."Score_1" AS "Score_1", score_soft_max."Score_2" AS "Score_2", score_soft_max."Score_3" AS "Score_3", score_soft_max."Score_4" AS "Score_4", score_soft_max."Score_5" AS "Score_5", score_soft_max."Score_6" AS "Score_6", score_soft_max."Score_7" AS "Score_7", score_soft_max."Score_8" AS "Score_8", score_soft_max."Score_9" AS "Score_9", score_soft_max."Proba_0" AS "Proba_0", score_soft_max."Proba_1" AS "Proba_1", score_soft_max."Proba_2" AS "Proba_2", score_soft_max."Proba_3" AS "Proba_3", score_soft_max."Proba_4" AS "Proba_4", score_soft_max."Proba_5" AS "Proba_5", score_soft_max."Proba_6" AS "Proba_6", score_soft_max."Proba_7" AS "Proba_7", score_soft_max."Proba_8" AS "Proba_8", score_soft_max."Proba_9" AS "Proba_9", score_soft_max."LogProba_0" AS "LogProba_0", score_soft_max."LogProba_1" AS "LogProba_1", score_soft_max."LogProba_2" AS "LogProba_2", score_soft_max."LogProba_3" AS "LogProba_3", score_soft_max."LogProba_4" AS "LogProba_4", score_soft_max."LogProba_5" AS "LogProba_5", score_soft_max."LogProba_6" AS "LogProba_6", score_soft_max."LogProba_7" AS "LogProba_7", score_soft_max."LogProba_8" AS "LogProba_8", score_soft_max."LogProba_9" AS "LogProba_9", score_soft_max."Decision" AS "Decision", score_soft_max."KEY_m" AS "KEY_m", score_soft_max."max_Score" AS "max_Score", score_soft_max."exp_delta_Score_0" AS "exp_delta_Score_0", score_soft_max."exp_delta_Score_1" AS "exp_delta_Score_1", score_soft_max."exp_delta_Score_2" AS "exp_delta_Score_2", score_soft_max."exp_delta_Score_3" AS "exp_delta_Score_3", score_soft_max."exp_delta_Score_4" AS "exp_delta_Score_4", score_soft_max."exp_delta_Score_5" AS "exp_delta_Score_5", score_soft_max."exp_delta_Score_6" AS "exp_delta_Score_6", score_soft_max."exp_delta_Score_7" AS "exp_delta_Score_7", score_soft_max."exp_delta_Score_8" AS "exp_delta_Score_8", score_soft_max."exp_delta_Score_9" AS "exp_delta_Score_9", score_soft_max."KEY_sum" AS "KEY_sum", score_soft_max."sum_ExpDeltaScore" AS "sum_ExpDeltaScore" 
FROM score_class_union LEFT OUTER JOIN score_soft_max ON score_class_union."KEY_u" = score_soft_max."KEY"), 
arg_max_cte AS 
(SELECT score_soft_max."KEY" AS "KEY", score_soft_max."Score_0" AS "Score_0", score_soft_max."Score_1" AS "Score_1", score_soft_max."Score_2" AS "Score_2", score_soft_max."Score_3" AS "Score_3", score_soft_max."Score_4" AS "Score_4", score_soft_max."Score_5" AS "Score_5", score_soft_max."Score_6" AS "Score_6", score_soft_max."Score_7" AS "Score_7", score_soft_max."Score_8" AS "Score_8", score_soft_max."Score_9" AS "Score_9", score_soft_max."Proba_0" AS "Proba_0", score_soft_max."Proba_1" AS "Proba_1", score_soft_max."Proba_2" AS "Proba_2", score_soft_max."Proba_3" AS "Proba_3", score_soft_max."Proba_4" AS "Proba_4", score_soft_max."Proba_5" AS "Proba_5", score_soft_max."Proba_6" AS "Proba_6", score_soft_max."Proba_7" AS "Proba_7", score_soft_max."Proba_8" AS "Proba_8", score_soft_max."Proba_9" AS "Proba_9", score_soft_max."LogProba_0" AS "LogProba_0", score_soft_max."LogProba_1" AS "LogProba_1", score_soft_max."LogProba_2" AS "LogProba_2", score_soft_max."LogProba_3" AS "LogProba_3", score_soft_max."LogProba_4" AS "LogProba_4", score_soft_max."LogProba_5" AS "LogProba_5", score_soft_max."LogProba_6" AS "LogProba_6", score_soft_max."LogProba_7" AS "LogProba_7", score_soft_max."LogProba_8" AS "LogProba_8", score_soft_max."LogProba_9" AS "LogProba_9", score_soft_max."Decision" AS "Decision", score_soft_max."KEY_m" AS "KEY_m", score_soft_max."max_Score" AS "max_Score", score_soft_max."exp_delta_Score_0" AS "exp_delta_Score_0", score_soft_max."exp_delta_Score_1" AS "exp_delta_Score_1", score_soft_max."exp_delta_Score_2" AS "exp_delta_Score_2", score_soft_max."exp_delta_Score_3" AS "exp_delta_Score_3", score_soft_max."exp_delta_Score_4" AS "exp_delta_Score_4", score_soft_max."exp_delta_Score_5" AS "exp_delta_Score_5", score_soft_max."exp_delta_Score_6" AS "exp_delta_Score_6", score_soft_max."exp_delta_Score_7" AS "exp_delta_Score_7", score_soft_max."exp_delta_Score_8" AS "exp_delta_Score_8", score_soft_max."exp_delta_Score_9" AS "exp_delta_Score_9", score_soft_max."KEY_sum" AS "KEY_sum", score_soft_max."sum_ExpDeltaScore" AS "sum_ExpDeltaScore", "arg_max_t_Score"."KEY_Score" AS "KEY_Score", "arg_max_t_Score"."arg_max_Score" AS "arg_max_Score", soft_max_comp."KEY_softmax" AS "KEY_softmax", soft_max_comp."SoftProba_0" AS "SoftProba_0", soft_max_comp."SoftProba_1" AS "SoftProba_1", soft_max_comp."SoftProba_2" AS "SoftProba_2", soft_max_comp."SoftProba_3" AS "SoftProba_3", soft_max_comp."SoftProba_4" AS "SoftProba_4", soft_max_comp."SoftProba_5" AS "SoftProba_5", soft_max_comp."SoftProba_6" AS "SoftProba_6", soft_max_comp."SoftProba_7" AS "SoftProba_7", soft_max_comp."SoftProba_8" AS "SoftProba_8", soft_max_comp."SoftProba_9" AS "SoftProba_9" 
FROM score_soft_max LEFT OUTER JOIN (SELECT union_with_max."KEY" AS "KEY_Score", min(union_with_max.class) AS "arg_max_Score" 
FROM union_with_max 
WHERE union_with_max."max_Score" <= union_with_max."Score" GROUP BY union_with_max."KEY") AS "arg_max_t_Score" ON score_soft_max."KEY" = "arg_max_t_Score"."KEY_Score" LEFT OUTER JOIN (SELECT score_soft_max."KEY" AS "KEY_softmax", score_soft_max."exp_delta_Score_0" / score_soft_max."sum_ExpDeltaScore" AS "SoftProba_0", score_soft_max."exp_delta_Score_1" / score_soft_max."sum_ExpDeltaScore" AS "SoftProba_1", score_soft_max."exp_delta_Score_2" / score_soft_max."sum_ExpDeltaScore" AS "SoftProba_2", score_soft_max."exp_delta_Score_3" / score_soft_max."sum_ExpDeltaScore" AS "SoftProba_3", score_soft_max."exp_delta_Score_4" / score_soft_max."sum_ExpDeltaScore" AS "SoftProba_4", score_soft_max."exp_delta_Score_5" / score_soft_max."sum_ExpDeltaScore" AS "SoftProba_5", score_soft_max."exp_delta_Score_6" / score_soft_max."sum_ExpDeltaScore" AS "SoftProba_6", score_soft_max."exp_delta_Score_7" / score_soft_max."sum_ExpDeltaScore" AS "SoftProba_7", score_soft_max."exp_delta_Score_8" / score_soft_max."sum_ExpDeltaScore" AS "SoftProba_8", score_soft_max."exp_delta_Score_9" / score_soft_max."sum_ExpDeltaScore" AS "SoftProba_9" 
FROM score_soft_max) AS soft_max_comp ON soft_max_comp."KEY_softmax" = "arg_max_t_Score"."KEY_Score")
 SELECT arg_max_cte."KEY" AS "KEY", CAST(NULL AS FLOAT) AS "Score_0", CAST(NULL AS FLOAT) AS "Score_1", CAST(NULL AS FLOAT) AS "Score_2", CAST(NULL AS FLOAT) AS "Score_3", CAST(NULL AS FLOAT) AS "Score_4", CAST(NULL AS FLOAT) AS "Score_5", CAST(NULL AS FLOAT) AS "Score_6", CAST(NULL AS FLOAT) AS "Score_7", CAST(NULL AS FLOAT) AS "Score_8", CAST(NULL AS FLOAT) AS "Score_9", arg_max_cte."SoftProba_0" AS "Proba_0", arg_max_cte."SoftProba_1" AS "Proba_1", arg_max_cte."SoftProba_2" AS "Proba_2", arg_max_cte."SoftProba_3" AS "Proba_3", arg_max_cte."SoftProba_4" AS "Proba_4", arg_max_cte."SoftProba_5" AS "Proba_5", arg_max_cte."SoftProba_6" AS "Proba_6", arg_max_cte."SoftProba_7" AS "Proba_7", arg_max_cte."SoftProba_8" AS "Proba_8", arg_max_cte."SoftProba_9" AS "Proba_9", CASE WHEN (arg_max_cte."SoftProba_0" IS NULL OR arg_max_cte."SoftProba_0" > 0.0) THEN ln(arg_max_cte."SoftProba_0") ELSE -1.79769313486231e+308 END AS "LogProba_0", CASE WHEN (arg_max_cte."SoftProba_1" IS NULL OR arg_max_cte."SoftProba_1" > 0.0) THEN ln(arg_max_cte."SoftProba_1") ELSE -1.79769313486231e+308 END AS "LogProba_1", CASE WHEN (arg_max_cte."SoftProba_2" IS NULL OR arg_max_cte."SoftProba_2" > 0.0) THEN ln(arg_max_cte."SoftProba_2") ELSE -1.79769313486231e+308 END AS "LogProba_2", CASE WHEN (arg_max_cte."SoftProba_3" IS NULL OR arg_max_cte."SoftProba_3" > 0.0) THEN ln(arg_max_cte."SoftProba_3") ELSE -1.79769313486231e+308 END AS "LogProba_3", CASE WHEN (arg_max_cte."SoftProba_4" IS NULL OR arg_max_cte."SoftProba_4" > 0.0) THEN ln(arg_max_cte."SoftProba_4") ELSE -1.79769313486231e+308 END AS "LogProba_4", CASE WHEN (arg_max_cte."SoftProba_5" IS NULL OR arg_max_cte."SoftProba_5" > 0.0) THEN ln(arg_max_cte."SoftProba_5") ELSE -1.79769313486231e+308 END AS "LogProba_5", CASE WHEN (arg_max_cte."SoftProba_6" IS NULL OR arg_max_cte."SoftProba_6" > 0.0) THEN ln(arg_max_cte."SoftProba_6") ELSE -1.79769313486231e+308 END AS "LogProba_6", CASE WHEN (arg_max_cte."SoftProba_7" IS NULL OR arg_max_cte."SoftProba_7" > 0.0) THEN ln(arg_max_cte."SoftProba_7") ELSE -1.79769313486231e+308 END AS "LogProba_7", CASE WHEN (arg_max_cte."SoftProba_8" IS NULL OR arg_max_cte."SoftProba_8" > 0.0) THEN ln(arg_max_cte."SoftProba_8") ELSE -1.79769313486231e+308 END AS "LogProba_8", CASE WHEN (arg_max_cte."SoftProba_9" IS NULL OR arg_max_cte."SoftProba_9" > 0.0) THEN ln(arg_max_cte."SoftProba_9") ELSE -1.79769313486231e+308 END AS "LogProba_9", CAST(arg_max_cte."arg_max_Score" AS BIGINT) AS "Decision" 
FROM arg_max_cte