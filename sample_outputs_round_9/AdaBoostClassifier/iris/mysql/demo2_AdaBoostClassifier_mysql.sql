-- This SQL code was generated by scikit2sql (development version).
-- Copyright 2017

WITH `DT_node_lookup` AS 
(SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_2` <= 2.700000047683716) THEN 1 ELSE 2 END AS node_id_2 
FROM iris AS `ADS`), 
`DT_node_data` AS 
(SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Proba_0` AS `Proba_0`, `Values`.`LogProba_0` AS `LogProba_0`, `Values`.`Proba_1` AS `Proba_1`, `Values`.`LogProba_1` AS `LogProba_1`, `Values`.`Proba_2` AS `Proba_2`, `Values`.`LogProba_2` AS `LogProba_2`, `Values`.`Decision` AS `Decision`, `Values`.`DecisionProba` AS `DecisionProba` 
FROM (SELECT 0 AS node_id, 'Feature_2' AS feature, 2.700000047683716 AS threshold, 37 AS count, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.3783783783783784 AS `Proba_0`, -0.971860583029 AS `LogProba_0`, 0.43243243243243246 AS `Proba_1`, -0.838329190404 AS `LogProba_1`, 0.1891891891891892 AS `Proba_2`, -1.66500776359 AS `LogProba_2`, 1 AS `Decision`, 0.432432432432 AS `DecisionProba` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 14 AS count, 1 AS depth, 0 AS parent_id, 1.0 AS `Proba_0`, 0.0 AS `LogProba_0`, 0.0 AS `Proba_1`, -1.79769313486231e+308 AS `LogProba_1`, 0.0 AS `Proba_2`, -1.79769313486231e+308 AS `LogProba_2`, 0 AS `Decision`, 1.0 AS `DecisionProba` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 23 AS count, 1 AS depth, 0 AS parent_id, 0.0 AS `Proba_0`, -1.79769313486231e+308 AS `LogProba_0`, 0.6956521739130435 AS `Proba_1`, -0.362905493689 AS `LogProba_1`, 0.3043478260869565 AS `Proba_2`, -1.18958406687 AS `LogProba_2`, 1 AS `Decision`, 0.695652173913 AS `DecisionProba`) AS `Values`), 
`DT_Output` AS 
(SELECT `DT_node_lookup`.`KEY` AS `KEY`, `DT_node_lookup`.node_id_2 AS node_id_2, `DT_node_data`.node_id AS node_id, `DT_node_data`.feature AS feature, `DT_node_data`.threshold AS threshold, `DT_node_data`.count AS count, `DT_node_data`.depth AS depth, `DT_node_data`.parent_id AS parent_id, `DT_node_data`.`Proba_0` AS `Proba_0`, `DT_node_data`.`LogProba_0` AS `LogProba_0`, `DT_node_data`.`Proba_1` AS `Proba_1`, `DT_node_data`.`LogProba_1` AS `LogProba_1`, `DT_node_data`.`Proba_2` AS `Proba_2`, `DT_node_data`.`LogProba_2` AS `LogProba_2`, `DT_node_data`.`Decision` AS `Decision`, `DT_node_data`.`DecisionProba` AS `DecisionProba` 
FROM `DT_node_lookup` LEFT OUTER JOIN `DT_node_data` ON `DT_node_lookup`.node_id_2 = `DT_node_data`.node_id), 
`AdaBoost_Estim_0` AS 
(SELECT `DT_Output`.`KEY` AS `KEY`, (2.0 * (CASE WHEN (`DT_Output`.`Proba_0` <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN (`DT_Output`.`Proba_0` IS NULL OR `DT_Output`.`Proba_0` > 0.0) THEN ln(`DT_Output`.`Proba_0`) ELSE -1.79769313486231e+308 END END - (CASE WHEN (`DT_Output`.`Proba_0` <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN (`DT_Output`.`Proba_0` IS NULL OR `DT_Output`.`Proba_0` > 0.0) THEN ln(`DT_Output`.`Proba_0`) ELSE -1.79769313486231e+308 END END + CASE WHEN (`DT_Output`.`Proba_1` <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN (`DT_Output`.`Proba_1` IS NULL OR `DT_Output`.`Proba_1` > 0.0) THEN ln(`DT_Output`.`Proba_1`) ELSE -1.79769313486231e+308 END END + CASE WHEN (`DT_Output`.`Proba_2` <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN (`DT_Output`.`Proba_2` IS NULL OR `DT_Output`.`Proba_2` > 0.0) THEN ln(`DT_Output`.`Proba_2`) ELSE -1.79769313486231e+308 END END) / 3)) / 4.0 AS `Score_0`, 2.0 * (CASE WHEN (`DT_Output`.`Proba_0` <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN (`DT_Output`.`Proba_0` IS NULL OR `DT_Output`.`Proba_0` > 0.0) THEN ln(`DT_Output`.`Proba_0`) ELSE -1.79769313486231e+308 END END - (CASE WHEN (`DT_Output`.`Proba_0` <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN (`DT_Output`.`Proba_0` IS NULL OR `DT_Output`.`Proba_0` > 0.0) THEN ln(`DT_Output`.`Proba_0`) ELSE -1.79769313486231e+308 END END + CASE WHEN (`DT_Output`.`Proba_1` <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN (`DT_Output`.`Proba_1` IS NULL OR `DT_Output`.`Proba_1` > 0.0) THEN ln(`DT_Output`.`Proba_1`) ELSE -1.79769313486231e+308 END END + CASE WHEN (`DT_Output`.`Proba_2` <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN (`DT_Output`.`Proba_2` IS NULL OR `DT_Output`.`Proba_2` > 0.0) THEN ln(`DT_Output`.`Proba_2`) ELSE -1.79769313486231e+308 END END) / 3) AS `Proba_0`, (2.0 * (CASE WHEN (`DT_Output`.`Proba_1` <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN (`DT_Output`.`Proba_1` IS NULL OR `DT_Output`.`Proba_1` > 0.0) THEN ln(`DT_Output`.`Proba_1`) ELSE -1.79769313486231e+308 END END - (CASE WHEN (`DT_Output`.`Proba_0` <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN (`DT_Output`.`Proba_0` IS NULL OR `DT_Output`.`Proba_0` > 0.0) THEN ln(`DT_Output`.`Proba_0`) ELSE -1.79769313486231e+308 END END + CASE WHEN (`DT_Output`.`Proba_1` <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN (`DT_Output`.`Proba_1` IS NULL OR `DT_Output`.`Proba_1` > 0.0) THEN ln(`DT_Output`.`Proba_1`) ELSE -1.79769313486231e+308 END END + CASE WHEN (`DT_Output`.`Proba_2` <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN (`DT_Output`.`Proba_2` IS NULL OR `DT_Output`.`Proba_2` > 0.0) THEN ln(`DT_Output`.`Proba_2`) ELSE -1.79769313486231e+308 END END) / 3)) / 4.0 AS `Score_1`, 2.0 * (CASE WHEN (`DT_Output`.`Proba_1` <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN (`DT_Output`.`Proba_1` IS NULL OR `DT_Output`.`Proba_1` > 0.0) THEN ln(`DT_Output`.`Proba_1`) ELSE -1.79769313486231e+308 END END - (CASE WHEN (`DT_Output`.`Proba_0` <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN (`DT_Output`.`Proba_0` IS NULL OR `DT_Output`.`Proba_0` > 0.0) THEN ln(`DT_Output`.`Proba_0`) ELSE -1.79769313486231e+308 END END + CASE WHEN (`DT_Output`.`Proba_1` <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN (`DT_Output`.`Proba_1` IS NULL OR `DT_Output`.`Proba_1` > 0.0) THEN ln(`DT_Output`.`Proba_1`) ELSE -1.79769313486231e+308 END END + CASE WHEN (`DT_Output`.`Proba_2` <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN (`DT_Output`.`Proba_2` IS NULL OR `DT_Output`.`Proba_2` > 0.0) THEN ln(`DT_Output`.`Proba_2`) ELSE -1.79769313486231e+308 END END) / 3) AS `Proba_1`, (2.0 * (CASE WHEN (`DT_Output`.`Proba_2` <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN (`DT_Output`.`Proba_2` IS NULL OR `DT_Output`.`Proba_2` > 0.0) THEN ln(`DT_Output`.`Proba_2`) ELSE -1.79769313486231e+308 END END - (CASE WHEN (`DT_Output`.`Proba_0` <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN (`DT_Output`.`Proba_0` IS NULL OR `DT_Output`.`Proba_0` > 0.0) THEN ln(`DT_Output`.`Proba_0`) ELSE -1.79769313486231e+308 END END + CASE WHEN (`DT_Output`.`Proba_1` <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN (`DT_Output`.`Proba_1` IS NULL OR `DT_Output`.`Proba_1` > 0.0) THEN ln(`DT_Output`.`Proba_1`) ELSE -1.79769313486231e+308 END END + CASE WHEN (`DT_Output`.`Proba_2` <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN (`DT_Output`.`Proba_2` IS NULL OR `DT_Output`.`Proba_2` > 0.0) THEN ln(`DT_Output`.`Proba_2`) ELSE -1.79769313486231e+308 END END) / 3)) / 4.0 AS `Score_2`, 2.0 * (CASE WHEN (`DT_Output`.`Proba_2` <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN (`DT_Output`.`Proba_2` IS NULL OR `DT_Output`.`Proba_2` > 0.0) THEN ln(`DT_Output`.`Proba_2`) ELSE -1.79769313486231e+308 END END - (CASE WHEN (`DT_Output`.`Proba_0` <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN (`DT_Output`.`Proba_0` IS NULL OR `DT_Output`.`Proba_0` > 0.0) THEN ln(`DT_Output`.`Proba_0`) ELSE -1.79769313486231e+308 END END + CASE WHEN (`DT_Output`.`Proba_1` <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN (`DT_Output`.`Proba_1` IS NULL OR `DT_Output`.`Proba_1` > 0.0) THEN ln(`DT_Output`.`Proba_1`) ELSE -1.79769313486231e+308 END END + CASE WHEN (`DT_Output`.`Proba_2` <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN (`DT_Output`.`Proba_2` IS NULL OR `DT_Output`.`Proba_2` > 0.0) THEN ln(`DT_Output`.`Proba_2`) ELSE -1.79769313486231e+308 END END) / 3) AS `Proba_2` 
FROM `DT_Output`), 
`DT_node_lookup_1` AS 
(SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_2` <= 4.949999809265137) THEN 1 ELSE 2 END AS node_id_2 
FROM iris AS `ADS`), 
`DT_node_data_1` AS 
(SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Proba_0` AS `Proba_0`, `Values`.`LogProba_0` AS `LogProba_0`, `Values`.`Proba_1` AS `Proba_1`, `Values`.`LogProba_1` AS `LogProba_1`, `Values`.`Proba_2` AS `Proba_2`, `Values`.`LogProba_2` AS `LogProba_2`, `Values`.`Decision` AS `Decision`, `Values`.`DecisionProba` AS `DecisionProba` 
FROM (SELECT 0 AS node_id, 'Feature_2' AS feature, 4.949999809265137 AS threshold, 37 AS count, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 3.092156640624244e-06 AS `Proba_0`, -12.6866417686 AS `LogProba_0`, 0.4999984539216797 AS `Proba_1`, -0.693150272721 AS `LogProba_1`, 0.49999845392167974 AS `Proba_2`, -0.693150272721 AS `LogProba_2`, 2 AS `Decision`, 0.499998453922 AS `DecisionProba` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 29 AS count, 1 AS depth, 0 AS parent_id, 6.596577715993251e-06 AS `Proba_0`, -11.9289595713 AS `LogProba_0`, 0.999993403422284 AS `Proba_1`, -6.59659947347e-06 AS `LogProba_1`, 0.0 AS `Proba_2`, -1.79769313486231e+308 AS `LogProba_2`, 1 AS `Decision`, 0.999993403422 AS `DecisionProba` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 8 AS count, 1 AS depth, 0 AS parent_id, 0.0 AS `Proba_0`, -1.79769313486231e+308 AS `LogProba_0`, 0.0588235294117647 AS `Proba_1`, -2.83321334406 AS `LogProba_1`, 0.9411764705882352 AS `Proba_2`, -0.0606246218164 AS `LogProba_2`, 2 AS `Decision`, 0.941176470588 AS `DecisionProba`) AS `Values`), 
`DT_Output_1` AS 
(SELECT `DT_node_lookup_1`.`KEY` AS `KEY`, `DT_node_lookup_1`.node_id_2 AS node_id_2, `DT_node_data_1`.node_id AS node_id, `DT_node_data_1`.feature AS feature, `DT_node_data_1`.threshold AS threshold, `DT_node_data_1`.count AS count, `DT_node_data_1`.depth AS depth, `DT_node_data_1`.parent_id AS parent_id, `DT_node_data_1`.`Proba_0` AS `Proba_0`, `DT_node_data_1`.`LogProba_0` AS `LogProba_0`, `DT_node_data_1`.`Proba_1` AS `Proba_1`, `DT_node_data_1`.`LogProba_1` AS `LogProba_1`, `DT_node_data_1`.`Proba_2` AS `Proba_2`, `DT_node_data_1`.`LogProba_2` AS `LogProba_2`, `DT_node_data_1`.`Decision` AS `Decision`, `DT_node_data_1`.`DecisionProba` AS `DecisionProba` 
FROM `DT_node_lookup_1` LEFT OUTER JOIN `DT_node_data_1` ON `DT_node_lookup_1`.node_id_2 = `DT_node_data_1`.node_id), 
`AdaBoost_Estim_1` AS 
(SELECT `DT_Output_1`.`KEY` AS `KEY`, (2.0 * (CASE WHEN (`DT_Output_1`.`Proba_0` <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN (`DT_Output_1`.`Proba_0` IS NULL OR `DT_Output_1`.`Proba_0` > 0.0) THEN ln(`DT_Output_1`.`Proba_0`) ELSE -1.79769313486231e+308 END END - (CASE WHEN (`DT_Output_1`.`Proba_0` <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN (`DT_Output_1`.`Proba_0` IS NULL OR `DT_Output_1`.`Proba_0` > 0.0) THEN ln(`DT_Output_1`.`Proba_0`) ELSE -1.79769313486231e+308 END END + CASE WHEN (`DT_Output_1`.`Proba_1` <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN (`DT_Output_1`.`Proba_1` IS NULL OR `DT_Output_1`.`Proba_1` > 0.0) THEN ln(`DT_Output_1`.`Proba_1`) ELSE -1.79769313486231e+308 END END + CASE WHEN (`DT_Output_1`.`Proba_2` <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN (`DT_Output_1`.`Proba_2` IS NULL OR `DT_Output_1`.`Proba_2` > 0.0) THEN ln(`DT_Output_1`.`Proba_2`) ELSE -1.79769313486231e+308 END END) / 3)) / 4.0 AS `Score_0`, 2.0 * (CASE WHEN (`DT_Output_1`.`Proba_0` <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN (`DT_Output_1`.`Proba_0` IS NULL OR `DT_Output_1`.`Proba_0` > 0.0) THEN ln(`DT_Output_1`.`Proba_0`) ELSE -1.79769313486231e+308 END END - (CASE WHEN (`DT_Output_1`.`Proba_0` <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN (`DT_Output_1`.`Proba_0` IS NULL OR `DT_Output_1`.`Proba_0` > 0.0) THEN ln(`DT_Output_1`.`Proba_0`) ELSE -1.79769313486231e+308 END END + CASE WHEN (`DT_Output_1`.`Proba_1` <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN (`DT_Output_1`.`Proba_1` IS NULL OR `DT_Output_1`.`Proba_1` > 0.0) THEN ln(`DT_Output_1`.`Proba_1`) ELSE -1.79769313486231e+308 END END + CASE WHEN (`DT_Output_1`.`Proba_2` <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN (`DT_Output_1`.`Proba_2` IS NULL OR `DT_Output_1`.`Proba_2` > 0.0) THEN ln(`DT_Output_1`.`Proba_2`) ELSE -1.79769313486231e+308 END END) / 3) AS `Proba_0`, (2.0 * (CASE WHEN (`DT_Output_1`.`Proba_1` <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN (`DT_Output_1`.`Proba_1` IS NULL OR `DT_Output_1`.`Proba_1` > 0.0) THEN ln(`DT_Output_1`.`Proba_1`) ELSE -1.79769313486231e+308 END END - (CASE WHEN (`DT_Output_1`.`Proba_0` <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN (`DT_Output_1`.`Proba_0` IS NULL OR `DT_Output_1`.`Proba_0` > 0.0) THEN ln(`DT_Output_1`.`Proba_0`) ELSE -1.79769313486231e+308 END END + CASE WHEN (`DT_Output_1`.`Proba_1` <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN (`DT_Output_1`.`Proba_1` IS NULL OR `DT_Output_1`.`Proba_1` > 0.0) THEN ln(`DT_Output_1`.`Proba_1`) ELSE -1.79769313486231e+308 END END + CASE WHEN (`DT_Output_1`.`Proba_2` <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN (`DT_Output_1`.`Proba_2` IS NULL OR `DT_Output_1`.`Proba_2` > 0.0) THEN ln(`DT_Output_1`.`Proba_2`) ELSE -1.79769313486231e+308 END END) / 3)) / 4.0 AS `Score_1`, 2.0 * (CASE WHEN (`DT_Output_1`.`Proba_1` <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN (`DT_Output_1`.`Proba_1` IS NULL OR `DT_Output_1`.`Proba_1` > 0.0) THEN ln(`DT_Output_1`.`Proba_1`) ELSE -1.79769313486231e+308 END END - (CASE WHEN (`DT_Output_1`.`Proba_0` <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN (`DT_Output_1`.`Proba_0` IS NULL OR `DT_Output_1`.`Proba_0` > 0.0) THEN ln(`DT_Output_1`.`Proba_0`) ELSE -1.79769313486231e+308 END END + CASE WHEN (`DT_Output_1`.`Proba_1` <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN (`DT_Output_1`.`Proba_1` IS NULL OR `DT_Output_1`.`Proba_1` > 0.0) THEN ln(`DT_Output_1`.`Proba_1`) ELSE -1.79769313486231e+308 END END + CASE WHEN (`DT_Output_1`.`Proba_2` <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN (`DT_Output_1`.`Proba_2` IS NULL OR `DT_Output_1`.`Proba_2` > 0.0) THEN ln(`DT_Output_1`.`Proba_2`) ELSE -1.79769313486231e+308 END END) / 3) AS `Proba_1`, (2.0 * (CASE WHEN (`DT_Output_1`.`Proba_2` <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN (`DT_Output_1`.`Proba_2` IS NULL OR `DT_Output_1`.`Proba_2` > 0.0) THEN ln(`DT_Output_1`.`Proba_2`) ELSE -1.79769313486231e+308 END END - (CASE WHEN (`DT_Output_1`.`Proba_0` <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN (`DT_Output_1`.`Proba_0` IS NULL OR `DT_Output_1`.`Proba_0` > 0.0) THEN ln(`DT_Output_1`.`Proba_0`) ELSE -1.79769313486231e+308 END END + CASE WHEN (`DT_Output_1`.`Proba_1` <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN (`DT_Output_1`.`Proba_1` IS NULL OR `DT_Output_1`.`Proba_1` > 0.0) THEN ln(`DT_Output_1`.`Proba_1`) ELSE -1.79769313486231e+308 END END + CASE WHEN (`DT_Output_1`.`Proba_2` <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN (`DT_Output_1`.`Proba_2` IS NULL OR `DT_Output_1`.`Proba_2` > 0.0) THEN ln(`DT_Output_1`.`Proba_2`) ELSE -1.79769313486231e+308 END END) / 3)) / 4.0 AS `Score_2`, 2.0 * (CASE WHEN (`DT_Output_1`.`Proba_2` <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN (`DT_Output_1`.`Proba_2` IS NULL OR `DT_Output_1`.`Proba_2` > 0.0) THEN ln(`DT_Output_1`.`Proba_2`) ELSE -1.79769313486231e+308 END END - (CASE WHEN (`DT_Output_1`.`Proba_0` <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN (`DT_Output_1`.`Proba_0` IS NULL OR `DT_Output_1`.`Proba_0` > 0.0) THEN ln(`DT_Output_1`.`Proba_0`) ELSE -1.79769313486231e+308 END END + CASE WHEN (`DT_Output_1`.`Proba_1` <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN (`DT_Output_1`.`Proba_1` IS NULL OR `DT_Output_1`.`Proba_1` > 0.0) THEN ln(`DT_Output_1`.`Proba_1`) ELSE -1.79769313486231e+308 END END + CASE WHEN (`DT_Output_1`.`Proba_2` <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN (`DT_Output_1`.`Proba_2` IS NULL OR `DT_Output_1`.`Proba_2` > 0.0) THEN ln(`DT_Output_1`.`Proba_2`) ELSE -1.79769313486231e+308 END END) / 3) AS `Proba_2` 
FROM `DT_Output_1`), 
`DT_node_lookup_2` AS 
(SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_2` <= 5.150000095367432) THEN 1 ELSE 2 END AS node_id_2 
FROM iris AS `ADS`), 
`DT_node_data_2` AS 
(SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Proba_0` AS `Proba_0`, `Values`.`LogProba_0` AS `LogProba_0`, `Values`.`Proba_1` AS `Proba_1`, `Values`.`LogProba_1` AS `LogProba_1`, `Values`.`Proba_2` AS `Proba_2`, `Values`.`LogProba_2` AS `LogProba_2`, `Values`.`Decision` AS `Decision`, `Values`.`DecisionProba` AS `DecisionProba` 
FROM (SELECT 0 AS node_id, 'Feature_2' AS feature, 5.150000095367432 AS threshold, 37 AS count, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.020805963552855817 AS `Proba_0`, -3.8725156241 AS `LogProba_0`, 0.5000000000000002 AS `Proba_1`, -0.69314718056 AS `LogProba_1`, 0.479194036447144 AS `Proba_2`, -0.735649677068 AS `LogProba_2`, 1 AS `Decision`, 0.5 AS `DecisionProba` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 32 AS count, 1 AS depth, 0 AS parent_id, 0.03163353640935247 AS `Proba_0`, -3.45353744237 AS `LogProba_0`, 0.7602035908836932 AS `Proba_1`, -0.274168998834 AS `LogProba_1`, 0.20816287270695438 AS `Proba_2`, -1.56943446384 AS `LogProba_2`, 1 AS `Decision`, 0.760203590884 AS `DecisionProba` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 5 AS count, 1 AS depth, 0 AS parent_id, 0.0 AS `Proba_0`, -1.79769313486231e+308 AS `LogProba_0`, 0.0 AS `Proba_1`, -1.79769313486231e+308 AS `LogProba_1`, 1.0 AS `Proba_2`, 0.0 AS `LogProba_2`, 2 AS `Decision`, 1.0 AS `DecisionProba`) AS `Values`), 
`DT_Output_2` AS 
(SELECT `DT_node_lookup_2`.`KEY` AS `KEY`, `DT_node_lookup_2`.node_id_2 AS node_id_2, `DT_node_data_2`.node_id AS node_id, `DT_node_data_2`.feature AS feature, `DT_node_data_2`.threshold AS threshold, `DT_node_data_2`.count AS count, `DT_node_data_2`.depth AS depth, `DT_node_data_2`.parent_id AS parent_id, `DT_node_data_2`.`Proba_0` AS `Proba_0`, `DT_node_data_2`.`LogProba_0` AS `LogProba_0`, `DT_node_data_2`.`Proba_1` AS `Proba_1`, `DT_node_data_2`.`LogProba_1` AS `LogProba_1`, `DT_node_data_2`.`Proba_2` AS `Proba_2`, `DT_node_data_2`.`LogProba_2` AS `LogProba_2`, `DT_node_data_2`.`Decision` AS `Decision`, `DT_node_data_2`.`DecisionProba` AS `DecisionProba` 
FROM `DT_node_lookup_2` LEFT OUTER JOIN `DT_node_data_2` ON `DT_node_lookup_2`.node_id_2 = `DT_node_data_2`.node_id), 
`AdaBoost_Estim_2` AS 
(SELECT `DT_Output_2`.`KEY` AS `KEY`, (2.0 * (CASE WHEN (`DT_Output_2`.`Proba_0` <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN (`DT_Output_2`.`Proba_0` IS NULL OR `DT_Output_2`.`Proba_0` > 0.0) THEN ln(`DT_Output_2`.`Proba_0`) ELSE -1.79769313486231e+308 END END - (CASE WHEN (`DT_Output_2`.`Proba_0` <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN (`DT_Output_2`.`Proba_0` IS NULL OR `DT_Output_2`.`Proba_0` > 0.0) THEN ln(`DT_Output_2`.`Proba_0`) ELSE -1.79769313486231e+308 END END + CASE WHEN (`DT_Output_2`.`Proba_1` <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN (`DT_Output_2`.`Proba_1` IS NULL OR `DT_Output_2`.`Proba_1` > 0.0) THEN ln(`DT_Output_2`.`Proba_1`) ELSE -1.79769313486231e+308 END END + CASE WHEN (`DT_Output_2`.`Proba_2` <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN (`DT_Output_2`.`Proba_2` IS NULL OR `DT_Output_2`.`Proba_2` > 0.0) THEN ln(`DT_Output_2`.`Proba_2`) ELSE -1.79769313486231e+308 END END) / 3)) / 4.0 AS `Score_0`, 2.0 * (CASE WHEN (`DT_Output_2`.`Proba_0` <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN (`DT_Output_2`.`Proba_0` IS NULL OR `DT_Output_2`.`Proba_0` > 0.0) THEN ln(`DT_Output_2`.`Proba_0`) ELSE -1.79769313486231e+308 END END - (CASE WHEN (`DT_Output_2`.`Proba_0` <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN (`DT_Output_2`.`Proba_0` IS NULL OR `DT_Output_2`.`Proba_0` > 0.0) THEN ln(`DT_Output_2`.`Proba_0`) ELSE -1.79769313486231e+308 END END + CASE WHEN (`DT_Output_2`.`Proba_1` <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN (`DT_Output_2`.`Proba_1` IS NULL OR `DT_Output_2`.`Proba_1` > 0.0) THEN ln(`DT_Output_2`.`Proba_1`) ELSE -1.79769313486231e+308 END END + CASE WHEN (`DT_Output_2`.`Proba_2` <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN (`DT_Output_2`.`Proba_2` IS NULL OR `DT_Output_2`.`Proba_2` > 0.0) THEN ln(`DT_Output_2`.`Proba_2`) ELSE -1.79769313486231e+308 END END) / 3) AS `Proba_0`, (2.0 * (CASE WHEN (`DT_Output_2`.`Proba_1` <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN (`DT_Output_2`.`Proba_1` IS NULL OR `DT_Output_2`.`Proba_1` > 0.0) THEN ln(`DT_Output_2`.`Proba_1`) ELSE -1.79769313486231e+308 END END - (CASE WHEN (`DT_Output_2`.`Proba_0` <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN (`DT_Output_2`.`Proba_0` IS NULL OR `DT_Output_2`.`Proba_0` > 0.0) THEN ln(`DT_Output_2`.`Proba_0`) ELSE -1.79769313486231e+308 END END + CASE WHEN (`DT_Output_2`.`Proba_1` <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN (`DT_Output_2`.`Proba_1` IS NULL OR `DT_Output_2`.`Proba_1` > 0.0) THEN ln(`DT_Output_2`.`Proba_1`) ELSE -1.79769313486231e+308 END END + CASE WHEN (`DT_Output_2`.`Proba_2` <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN (`DT_Output_2`.`Proba_2` IS NULL OR `DT_Output_2`.`Proba_2` > 0.0) THEN ln(`DT_Output_2`.`Proba_2`) ELSE -1.79769313486231e+308 END END) / 3)) / 4.0 AS `Score_1`, 2.0 * (CASE WHEN (`DT_Output_2`.`Proba_1` <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN (`DT_Output_2`.`Proba_1` IS NULL OR `DT_Output_2`.`Proba_1` > 0.0) THEN ln(`DT_Output_2`.`Proba_1`) ELSE -1.79769313486231e+308 END END - (CASE WHEN (`DT_Output_2`.`Proba_0` <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN (`DT_Output_2`.`Proba_0` IS NULL OR `DT_Output_2`.`Proba_0` > 0.0) THEN ln(`DT_Output_2`.`Proba_0`) ELSE -1.79769313486231e+308 END END + CASE WHEN (`DT_Output_2`.`Proba_1` <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN (`DT_Output_2`.`Proba_1` IS NULL OR `DT_Output_2`.`Proba_1` > 0.0) THEN ln(`DT_Output_2`.`Proba_1`) ELSE -1.79769313486231e+308 END END + CASE WHEN (`DT_Output_2`.`Proba_2` <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN (`DT_Output_2`.`Proba_2` IS NULL OR `DT_Output_2`.`Proba_2` > 0.0) THEN ln(`DT_Output_2`.`Proba_2`) ELSE -1.79769313486231e+308 END END) / 3) AS `Proba_1`, (2.0 * (CASE WHEN (`DT_Output_2`.`Proba_2` <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN (`DT_Output_2`.`Proba_2` IS NULL OR `DT_Output_2`.`Proba_2` > 0.0) THEN ln(`DT_Output_2`.`Proba_2`) ELSE -1.79769313486231e+308 END END - (CASE WHEN (`DT_Output_2`.`Proba_0` <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN (`DT_Output_2`.`Proba_0` IS NULL OR `DT_Output_2`.`Proba_0` > 0.0) THEN ln(`DT_Output_2`.`Proba_0`) ELSE -1.79769313486231e+308 END END + CASE WHEN (`DT_Output_2`.`Proba_1` <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN (`DT_Output_2`.`Proba_1` IS NULL OR `DT_Output_2`.`Proba_1` > 0.0) THEN ln(`DT_Output_2`.`Proba_1`) ELSE -1.79769313486231e+308 END END + CASE WHEN (`DT_Output_2`.`Proba_2` <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN (`DT_Output_2`.`Proba_2` IS NULL OR `DT_Output_2`.`Proba_2` > 0.0) THEN ln(`DT_Output_2`.`Proba_2`) ELSE -1.79769313486231e+308 END END) / 3)) / 4.0 AS `Score_2`, 2.0 * (CASE WHEN (`DT_Output_2`.`Proba_2` <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN (`DT_Output_2`.`Proba_2` IS NULL OR `DT_Output_2`.`Proba_2` > 0.0) THEN ln(`DT_Output_2`.`Proba_2`) ELSE -1.79769313486231e+308 END END - (CASE WHEN (`DT_Output_2`.`Proba_0` <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN (`DT_Output_2`.`Proba_0` IS NULL OR `DT_Output_2`.`Proba_0` > 0.0) THEN ln(`DT_Output_2`.`Proba_0`) ELSE -1.79769313486231e+308 END END + CASE WHEN (`DT_Output_2`.`Proba_1` <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN (`DT_Output_2`.`Proba_1` IS NULL OR `DT_Output_2`.`Proba_1` > 0.0) THEN ln(`DT_Output_2`.`Proba_1`) ELSE -1.79769313486231e+308 END END + CASE WHEN (`DT_Output_2`.`Proba_2` <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN (`DT_Output_2`.`Proba_2` IS NULL OR `DT_Output_2`.`Proba_2` > 0.0) THEN ln(`DT_Output_2`.`Proba_2`) ELSE -1.79769313486231e+308 END END) / 3) AS `Proba_2` 
FROM `DT_Output_2`), 
`DT_node_lookup_3` AS 
(SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_3` <= 0.699999988079071) THEN 1 ELSE 2 END AS node_id_2 
FROM iris AS `ADS`), 
`DT_node_data_3` AS 
(SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Proba_0` AS `Proba_0`, `Values`.`LogProba_0` AS `LogProba_0`, `Values`.`Proba_1` AS `Proba_1`, `Values`.`LogProba_1` AS `LogProba_1`, `Values`.`Proba_2` AS `Proba_2`, `Values`.`LogProba_2` AS `LogProba_2`, `Values`.`Decision` AS `Decision`, `Values`.`DecisionProba` AS `DecisionProba` 
FROM (SELECT 0 AS node_id, 'Feature_3' AS feature, 0.699999988079071 AS threshold, 37 AS count, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.33333333332093873 AS `Proba_0`, -1.09861228871 AS `LogProba_0`, 0.33333333332093873 AS `Proba_1`, -1.09861228871 AS `LogProba_1`, 0.3333333333581226 AS `Proba_2`, -1.09861228859 AS `LogProba_2`, 2 AS `Decision`, 0.333333333358 AS `DecisionProba` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 14 AS count, 1 AS depth, 0 AS parent_id, 1.0 AS `Proba_0`, 0.0 AS `LogProba_0`, 0.0 AS `Proba_1`, -1.79769313486231e+308 AS `LogProba_1`, 0.0 AS `Proba_2`, -1.79769313486231e+308 AS `LogProba_2`, 0 AS `Decision`, 1.0 AS `DecisionProba` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 23 AS count, 1 AS depth, 0 AS parent_id, 0.0 AS `Proba_0`, -1.79769313486231e+308 AS `LogProba_0`, 0.49999999997211214 AS `Proba_1`, -0.693147180616 AS `LogProba_1`, 0.5000000000278879 AS `Proba_2`, -0.693147180504 AS `LogProba_2`, 2 AS `Decision`, 0.500000000028 AS `DecisionProba`) AS `Values`), 
`DT_Output_3` AS 
(SELECT `DT_node_lookup_3`.`KEY` AS `KEY`, `DT_node_lookup_3`.node_id_2 AS node_id_2, `DT_node_data_3`.node_id AS node_id, `DT_node_data_3`.feature AS feature, `DT_node_data_3`.threshold AS threshold, `DT_node_data_3`.count AS count, `DT_node_data_3`.depth AS depth, `DT_node_data_3`.parent_id AS parent_id, `DT_node_data_3`.`Proba_0` AS `Proba_0`, `DT_node_data_3`.`LogProba_0` AS `LogProba_0`, `DT_node_data_3`.`Proba_1` AS `Proba_1`, `DT_node_data_3`.`LogProba_1` AS `LogProba_1`, `DT_node_data_3`.`Proba_2` AS `Proba_2`, `DT_node_data_3`.`LogProba_2` AS `LogProba_2`, `DT_node_data_3`.`Decision` AS `Decision`, `DT_node_data_3`.`DecisionProba` AS `DecisionProba` 
FROM `DT_node_lookup_3` LEFT OUTER JOIN `DT_node_data_3` ON `DT_node_lookup_3`.node_id_2 = `DT_node_data_3`.node_id), 
`AdaBoost_Estim_3` AS 
(SELECT `DT_Output_3`.`KEY` AS `KEY`, (2.0 * (CASE WHEN (`DT_Output_3`.`Proba_0` <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN (`DT_Output_3`.`Proba_0` IS NULL OR `DT_Output_3`.`Proba_0` > 0.0) THEN ln(`DT_Output_3`.`Proba_0`) ELSE -1.79769313486231e+308 END END - (CASE WHEN (`DT_Output_3`.`Proba_0` <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN (`DT_Output_3`.`Proba_0` IS NULL OR `DT_Output_3`.`Proba_0` > 0.0) THEN ln(`DT_Output_3`.`Proba_0`) ELSE -1.79769313486231e+308 END END + CASE WHEN (`DT_Output_3`.`Proba_1` <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN (`DT_Output_3`.`Proba_1` IS NULL OR `DT_Output_3`.`Proba_1` > 0.0) THEN ln(`DT_Output_3`.`Proba_1`) ELSE -1.79769313486231e+308 END END + CASE WHEN (`DT_Output_3`.`Proba_2` <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN (`DT_Output_3`.`Proba_2` IS NULL OR `DT_Output_3`.`Proba_2` > 0.0) THEN ln(`DT_Output_3`.`Proba_2`) ELSE -1.79769313486231e+308 END END) / 3)) / 4.0 AS `Score_0`, 2.0 * (CASE WHEN (`DT_Output_3`.`Proba_0` <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN (`DT_Output_3`.`Proba_0` IS NULL OR `DT_Output_3`.`Proba_0` > 0.0) THEN ln(`DT_Output_3`.`Proba_0`) ELSE -1.79769313486231e+308 END END - (CASE WHEN (`DT_Output_3`.`Proba_0` <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN (`DT_Output_3`.`Proba_0` IS NULL OR `DT_Output_3`.`Proba_0` > 0.0) THEN ln(`DT_Output_3`.`Proba_0`) ELSE -1.79769313486231e+308 END END + CASE WHEN (`DT_Output_3`.`Proba_1` <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN (`DT_Output_3`.`Proba_1` IS NULL OR `DT_Output_3`.`Proba_1` > 0.0) THEN ln(`DT_Output_3`.`Proba_1`) ELSE -1.79769313486231e+308 END END + CASE WHEN (`DT_Output_3`.`Proba_2` <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN (`DT_Output_3`.`Proba_2` IS NULL OR `DT_Output_3`.`Proba_2` > 0.0) THEN ln(`DT_Output_3`.`Proba_2`) ELSE -1.79769313486231e+308 END END) / 3) AS `Proba_0`, (2.0 * (CASE WHEN (`DT_Output_3`.`Proba_1` <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN (`DT_Output_3`.`Proba_1` IS NULL OR `DT_Output_3`.`Proba_1` > 0.0) THEN ln(`DT_Output_3`.`Proba_1`) ELSE -1.79769313486231e+308 END END - (CASE WHEN (`DT_Output_3`.`Proba_0` <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN (`DT_Output_3`.`Proba_0` IS NULL OR `DT_Output_3`.`Proba_0` > 0.0) THEN ln(`DT_Output_3`.`Proba_0`) ELSE -1.79769313486231e+308 END END + CASE WHEN (`DT_Output_3`.`Proba_1` <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN (`DT_Output_3`.`Proba_1` IS NULL OR `DT_Output_3`.`Proba_1` > 0.0) THEN ln(`DT_Output_3`.`Proba_1`) ELSE -1.79769313486231e+308 END END + CASE WHEN (`DT_Output_3`.`Proba_2` <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN (`DT_Output_3`.`Proba_2` IS NULL OR `DT_Output_3`.`Proba_2` > 0.0) THEN ln(`DT_Output_3`.`Proba_2`) ELSE -1.79769313486231e+308 END END) / 3)) / 4.0 AS `Score_1`, 2.0 * (CASE WHEN (`DT_Output_3`.`Proba_1` <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN (`DT_Output_3`.`Proba_1` IS NULL OR `DT_Output_3`.`Proba_1` > 0.0) THEN ln(`DT_Output_3`.`Proba_1`) ELSE -1.79769313486231e+308 END END - (CASE WHEN (`DT_Output_3`.`Proba_0` <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN (`DT_Output_3`.`Proba_0` IS NULL OR `DT_Output_3`.`Proba_0` > 0.0) THEN ln(`DT_Output_3`.`Proba_0`) ELSE -1.79769313486231e+308 END END + CASE WHEN (`DT_Output_3`.`Proba_1` <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN (`DT_Output_3`.`Proba_1` IS NULL OR `DT_Output_3`.`Proba_1` > 0.0) THEN ln(`DT_Output_3`.`Proba_1`) ELSE -1.79769313486231e+308 END END + CASE WHEN (`DT_Output_3`.`Proba_2` <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN (`DT_Output_3`.`Proba_2` IS NULL OR `DT_Output_3`.`Proba_2` > 0.0) THEN ln(`DT_Output_3`.`Proba_2`) ELSE -1.79769313486231e+308 END END) / 3) AS `Proba_1`, (2.0 * (CASE WHEN (`DT_Output_3`.`Proba_2` <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN (`DT_Output_3`.`Proba_2` IS NULL OR `DT_Output_3`.`Proba_2` > 0.0) THEN ln(`DT_Output_3`.`Proba_2`) ELSE -1.79769313486231e+308 END END - (CASE WHEN (`DT_Output_3`.`Proba_0` <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN (`DT_Output_3`.`Proba_0` IS NULL OR `DT_Output_3`.`Proba_0` > 0.0) THEN ln(`DT_Output_3`.`Proba_0`) ELSE -1.79769313486231e+308 END END + CASE WHEN (`DT_Output_3`.`Proba_1` <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN (`DT_Output_3`.`Proba_1` IS NULL OR `DT_Output_3`.`Proba_1` > 0.0) THEN ln(`DT_Output_3`.`Proba_1`) ELSE -1.79769313486231e+308 END END + CASE WHEN (`DT_Output_3`.`Proba_2` <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN (`DT_Output_3`.`Proba_2` IS NULL OR `DT_Output_3`.`Proba_2` > 0.0) THEN ln(`DT_Output_3`.`Proba_2`) ELSE -1.79769313486231e+308 END END) / 3)) / 4.0 AS `Score_2`, 2.0 * (CASE WHEN (`DT_Output_3`.`Proba_2` <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN (`DT_Output_3`.`Proba_2` IS NULL OR `DT_Output_3`.`Proba_2` > 0.0) THEN ln(`DT_Output_3`.`Proba_2`) ELSE -1.79769313486231e+308 END END - (CASE WHEN (`DT_Output_3`.`Proba_0` <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN (`DT_Output_3`.`Proba_0` IS NULL OR `DT_Output_3`.`Proba_0` > 0.0) THEN ln(`DT_Output_3`.`Proba_0`) ELSE -1.79769313486231e+308 END END + CASE WHEN (`DT_Output_3`.`Proba_1` <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN (`DT_Output_3`.`Proba_1` IS NULL OR `DT_Output_3`.`Proba_1` > 0.0) THEN ln(`DT_Output_3`.`Proba_1`) ELSE -1.79769313486231e+308 END END + CASE WHEN (`DT_Output_3`.`Proba_2` <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN (`DT_Output_3`.`Proba_2` IS NULL OR `DT_Output_3`.`Proba_2` > 0.0) THEN ln(`DT_Output_3`.`Proba_2`) ELSE -1.79769313486231e+308 END END) / 3) AS `Proba_2` 
FROM `DT_Output_3`), 
`Score_Union_CTE` AS 
(SELECT ensemble_score_union.`KEY` AS `KEY`, ensemble_score_union.`Score_0` AS `Score_0`, ensemble_score_union.`Proba_0` AS `Proba_0`, ensemble_score_union.`Score_1` AS `Score_1`, ensemble_score_union.`Proba_1` AS `Proba_1`, ensemble_score_union.`Score_2` AS `Score_2`, ensemble_score_union.`Proba_2` AS `Proba_2` 
FROM (SELECT `AdaBoost_Estim_0`.`KEY` AS `KEY`, `AdaBoost_Estim_0`.`Score_0` AS `Score_0`, `AdaBoost_Estim_0`.`Proba_0` AS `Proba_0`, `AdaBoost_Estim_0`.`Score_1` AS `Score_1`, `AdaBoost_Estim_0`.`Proba_1` AS `Proba_1`, `AdaBoost_Estim_0`.`Score_2` AS `Score_2`, `AdaBoost_Estim_0`.`Proba_2` AS `Proba_2` 
FROM `AdaBoost_Estim_0` UNION ALL SELECT `AdaBoost_Estim_1`.`KEY` AS `KEY`, `AdaBoost_Estim_1`.`Score_0` AS `Score_0`, `AdaBoost_Estim_1`.`Proba_0` AS `Proba_0`, `AdaBoost_Estim_1`.`Score_1` AS `Score_1`, `AdaBoost_Estim_1`.`Proba_1` AS `Proba_1`, `AdaBoost_Estim_1`.`Score_2` AS `Score_2`, `AdaBoost_Estim_1`.`Proba_2` AS `Proba_2` 
FROM `AdaBoost_Estim_1` UNION ALL SELECT `AdaBoost_Estim_2`.`KEY` AS `KEY`, `AdaBoost_Estim_2`.`Score_0` AS `Score_0`, `AdaBoost_Estim_2`.`Proba_0` AS `Proba_0`, `AdaBoost_Estim_2`.`Score_1` AS `Score_1`, `AdaBoost_Estim_2`.`Proba_1` AS `Proba_1`, `AdaBoost_Estim_2`.`Score_2` AS `Score_2`, `AdaBoost_Estim_2`.`Proba_2` AS `Proba_2` 
FROM `AdaBoost_Estim_2` UNION ALL SELECT `AdaBoost_Estim_3`.`KEY` AS `KEY`, `AdaBoost_Estim_3`.`Score_0` AS `Score_0`, `AdaBoost_Estim_3`.`Proba_0` AS `Proba_0`, `AdaBoost_Estim_3`.`Score_1` AS `Score_1`, `AdaBoost_Estim_3`.`Proba_1` AS `Proba_1`, `AdaBoost_Estim_3`.`Score_2` AS `Score_2`, `AdaBoost_Estim_3`.`Proba_2` AS `Proba_2` 
FROM `AdaBoost_Estim_3`) AS ensemble_score_union), 
`ADA_Sum_Scores` AS 
(SELECT `T`.`KEY` AS `KEY`, `T`.`Score_0` AS `Score_0`, `T`.`Proba_0` AS `Proba_0`, `T`.`Score_1` AS `Score_1`, `T`.`Proba_1` AS `Proba_1`, `T`.`Score_2` AS `Score_2`, `T`.`Proba_2` AS `Proba_2` 
FROM (SELECT `Score_Union_CTE`.`KEY` AS `KEY`, sum(`Score_Union_CTE`.`Score_0`) AS `Score_0`, sum(`Score_Union_CTE`.`Proba_0`) AS `Proba_0`, sum(`Score_Union_CTE`.`Score_1`) AS `Score_1`, sum(`Score_Union_CTE`.`Proba_1`) AS `Proba_1`, sum(`Score_Union_CTE`.`Score_2`) AS `Score_2`, sum(`Score_Union_CTE`.`Proba_2`) AS `Proba_2` 
FROM `Score_Union_CTE` GROUP BY `Score_Union_CTE`.`KEY`) AS `T`), 
`AdaBoost_AVG_Scores_BN` AS 
(SELECT `ADA_Sum_Scores`.`KEY` AS `KEY`, `ADA_Sum_Scores`.`Score_0` AS `Score_0`, `ADA_Sum_Scores`.`Proba_0` AS `Proba_0`, `ADA_Sum_Scores`.`Score_1` AS `Score_1`, `ADA_Sum_Scores`.`Proba_1` AS `Proba_1`, `ADA_Sum_Scores`.`Score_2` AS `Score_2`, `ADA_Sum_Scores`.`Proba_2` AS `Proba_2` 
FROM `ADA_Sum_Scores`), 
`AdaBoost_AVG_Scores` AS 
(SELECT `AdaBoost_AVG_Scores_BN`.`KEY` AS `KEY`, `AdaBoost_AVG_Scores_BN`.`Score_0` AS `Score_0`, exp((`AdaBoost_AVG_Scores_BN`.`Proba_0` / 4.0) / 2) / (exp((`AdaBoost_AVG_Scores_BN`.`Proba_0` / 4.0) / 2) + exp((`AdaBoost_AVG_Scores_BN`.`Proba_1` / 4.0) / 2) + exp((`AdaBoost_AVG_Scores_BN`.`Proba_2` / 4.0) / 2)) AS `Proba_0`, NULL AS `LogProba_0`, `AdaBoost_AVG_Scores_BN`.`Score_1` AS `Score_1`, exp((`AdaBoost_AVG_Scores_BN`.`Proba_1` / 4.0) / 2) / (exp((`AdaBoost_AVG_Scores_BN`.`Proba_0` / 4.0) / 2) + exp((`AdaBoost_AVG_Scores_BN`.`Proba_1` / 4.0) / 2) + exp((`AdaBoost_AVG_Scores_BN`.`Proba_2` / 4.0) / 2)) AS `Proba_1`, NULL AS `LogProba_1`, `AdaBoost_AVG_Scores_BN`.`Score_2` AS `Score_2`, exp((`AdaBoost_AVG_Scores_BN`.`Proba_2` / 4.0) / 2) / (exp((`AdaBoost_AVG_Scores_BN`.`Proba_0` / 4.0) / 2) + exp((`AdaBoost_AVG_Scores_BN`.`Proba_1` / 4.0) / 2) + exp((`AdaBoost_AVG_Scores_BN`.`Proba_2` / 4.0) / 2)) AS `Proba_2`, NULL AS `LogProba_2` 
FROM `AdaBoost_AVG_Scores_BN`), 
orig_cte AS 
(SELECT `AdaBoost_AVG_Scores`.`KEY` AS `KEY`, `AdaBoost_AVG_Scores`.`Score_0` AS `Score_0`, `AdaBoost_AVG_Scores`.`Score_1` AS `Score_1`, `AdaBoost_AVG_Scores`.`Score_2` AS `Score_2`, `AdaBoost_AVG_Scores`.`Proba_0` AS `Proba_0`, `AdaBoost_AVG_Scores`.`Proba_1` AS `Proba_1`, `AdaBoost_AVG_Scores`.`Proba_2` AS `Proba_2`, `AdaBoost_AVG_Scores`.`LogProba_0` AS `LogProba_0`, `AdaBoost_AVG_Scores`.`LogProba_1` AS `LogProba_1`, `AdaBoost_AVG_Scores`.`LogProba_2` AS `LogProba_2`, CAST(NULL AS SIGNED INTEGER) AS `Decision`, NULL AS `DecisionProba` 
FROM `AdaBoost_AVG_Scores`), 
score_class_union AS 
(SELECT scu.`KEY_u` AS `KEY_u`, scu.class AS class, scu.`LogProba` AS `LogProba`, scu.`Proba` AS `Proba`, scu.`Score` AS `Score` 
FROM (SELECT orig_cte.`KEY` AS `KEY_u`, 0 AS class, orig_cte.`LogProba_0` AS `LogProba`, orig_cte.`Proba_0` AS `Proba`, orig_cte.`Score_0` AS `Score` 
FROM orig_cte UNION ALL SELECT orig_cte.`KEY` AS `KEY_u`, 1 AS class, orig_cte.`LogProba_1` AS `LogProba`, orig_cte.`Proba_1` AS `Proba`, orig_cte.`Score_1` AS `Score` 
FROM orig_cte UNION ALL SELECT orig_cte.`KEY` AS `KEY_u`, 2 AS class, orig_cte.`LogProba_2` AS `LogProba`, orig_cte.`Proba_2` AS `Proba`, orig_cte.`Score_2` AS `Score` 
FROM orig_cte) AS scu), 
score_max AS 
(SELECT orig_cte.`KEY` AS `KEY`, orig_cte.`Score_0` AS `Score_0`, orig_cte.`Score_1` AS `Score_1`, orig_cte.`Score_2` AS `Score_2`, orig_cte.`Proba_0` AS `Proba_0`, orig_cte.`Proba_1` AS `Proba_1`, orig_cte.`Proba_2` AS `Proba_2`, orig_cte.`LogProba_0` AS `LogProba_0`, orig_cte.`LogProba_1` AS `LogProba_1`, orig_cte.`LogProba_2` AS `LogProba_2`, orig_cte.`Decision` AS `Decision`, orig_cte.`DecisionProba` AS `DecisionProba`, max_select.`KEY_m` AS `KEY_m`, max_select.`max_Score` AS `max_Score` 
FROM orig_cte LEFT OUTER JOIN (SELECT score_class_union.`KEY_u` AS `KEY_m`, max(score_class_union.`Score`) AS `max_Score` 
FROM score_class_union GROUP BY score_class_union.`KEY_u`) AS max_select ON orig_cte.`KEY` = max_select.`KEY_m`), 
union_with_max AS 
(SELECT score_class_union.`KEY_u` AS `KEY_u`, score_class_union.class AS class, score_class_union.`LogProba` AS `LogProba`, score_class_union.`Proba` AS `Proba`, score_class_union.`Score` AS `Score`, score_max.`KEY` AS `KEY`, score_max.`Score_0` AS `Score_0`, score_max.`Score_1` AS `Score_1`, score_max.`Score_2` AS `Score_2`, score_max.`Proba_0` AS `Proba_0`, score_max.`Proba_1` AS `Proba_1`, score_max.`Proba_2` AS `Proba_2`, score_max.`LogProba_0` AS `LogProba_0`, score_max.`LogProba_1` AS `LogProba_1`, score_max.`LogProba_2` AS `LogProba_2`, score_max.`Decision` AS `Decision`, score_max.`DecisionProba` AS `DecisionProba`, score_max.`KEY_m` AS `KEY_m`, score_max.`max_Score` AS `max_Score` 
FROM score_class_union LEFT OUTER JOIN score_max ON score_class_union.`KEY_u` = score_max.`KEY`), 
arg_max_cte AS 
(SELECT score_max.`KEY` AS `KEY`, score_max.`Score_0` AS `Score_0`, score_max.`Score_1` AS `Score_1`, score_max.`Score_2` AS `Score_2`, score_max.`Proba_0` AS `Proba_0`, score_max.`Proba_1` AS `Proba_1`, score_max.`Proba_2` AS `Proba_2`, score_max.`LogProba_0` AS `LogProba_0`, score_max.`LogProba_1` AS `LogProba_1`, score_max.`LogProba_2` AS `LogProba_2`, score_max.`Decision` AS `Decision`, score_max.`DecisionProba` AS `DecisionProba`, score_max.`KEY_m` AS `KEY_m`, score_max.`max_Score` AS `max_Score`, `arg_max_t_Score`.`KEY_Score` AS `KEY_Score`, `arg_max_t_Score`.`arg_max_Score` AS `arg_max_Score` 
FROM score_max LEFT OUTER JOIN (SELECT union_with_max.`KEY` AS `KEY_Score`, min(union_with_max.class) AS `arg_max_Score` 
FROM union_with_max 
WHERE union_with_max.`max_Score` <= union_with_max.`Score` GROUP BY union_with_max.`KEY`) AS `arg_max_t_Score` ON score_max.`KEY` = `arg_max_t_Score`.`KEY_Score`)
 SELECT arg_max_cte.`KEY` AS `KEY`, arg_max_cte.`Score_0` AS `Score_0`, arg_max_cte.`Score_1` AS `Score_1`, arg_max_cte.`Score_2` AS `Score_2`, arg_max_cte.`Proba_0` AS `Proba_0`, arg_max_cte.`Proba_1` AS `Proba_1`, arg_max_cte.`Proba_2` AS `Proba_2`, CASE WHEN (arg_max_cte.`Proba_0` IS NULL OR arg_max_cte.`Proba_0` > 0.0) THEN ln(arg_max_cte.`Proba_0`) ELSE -1.79769313486231e+308 END AS `LogProba_0`, CASE WHEN (arg_max_cte.`Proba_1` IS NULL OR arg_max_cte.`Proba_1` > 0.0) THEN ln(arg_max_cte.`Proba_1`) ELSE -1.79769313486231e+308 END AS `LogProba_1`, CASE WHEN (arg_max_cte.`Proba_2` IS NULL OR arg_max_cte.`Proba_2` > 0.0) THEN ln(arg_max_cte.`Proba_2`) ELSE -1.79769313486231e+308 END AS `LogProba_2`, arg_max_cte.`arg_max_Score` AS `Decision`, CASE WHEN (arg_max_cte.`arg_max_Score` = 0) THEN arg_max_cte.`Proba_0` WHEN (arg_max_cte.`arg_max_Score` = 1) THEN arg_max_cte.`Proba_1` WHEN (arg_max_cte.`arg_max_Score` = 2) THEN arg_max_cte.`Proba_2` END AS `DecisionProba` 
FROM arg_max_cte