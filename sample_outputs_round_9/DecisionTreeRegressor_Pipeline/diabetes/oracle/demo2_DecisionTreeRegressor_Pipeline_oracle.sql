-- This SQL code was generated by scikit2sql (development version).
-- Copyright 2017

WITH "ADS_imp_1_OUT" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_0" IS NULL) THEN 0.0047225988377 ELSE "ADS"."Feature_0" END AS impter_2, CASE WHEN ("ADS"."Feature_1" IS NULL) THEN -0.0073794958196 ELSE "ADS"."Feature_1" END AS impter_3, CASE WHEN ("ADS"."Feature_2" IS NULL) THEN -6.24253146871e-05 ELSE "ADS"."Feature_2" END AS impter_4, CASE WHEN ("ADS"."Feature_3" IS NULL) THEN -0.00643221528123 ELSE "ADS"."Feature_3" END AS impter_5, CASE WHEN ("ADS"."Feature_4" IS NULL) THEN -0.00213184962584 ELSE "ADS"."Feature_4" END AS impter_6, CASE WHEN ("ADS"."Feature_5" IS NULL) THEN -0.000838461125138 ELSE "ADS"."Feature_5" END AS impter_7, CASE WHEN ("ADS"."Feature_6" IS NULL) THEN 0.000444113651192 ELSE "ADS"."Feature_6" END AS impter_8, CASE WHEN ("ADS"."Feature_7" IS NULL) THEN -0.0032531275266 ELSE "ADS"."Feature_7" END AS impter_9, CASE WHEN ("ADS"."Feature_8" IS NULL) THEN -0.0029539764781 ELSE "ADS"."Feature_8" END AS impter_10, CASE WHEN ("ADS"."Feature_9" IS NULL) THEN -0.000211620600092 ELSE "ADS"."Feature_9" END AS impter_11 
FROM diabetes "ADS"), 
"ADS_sca_2_OUT" AS 
(SELECT "ADS_imp_1_OUT"."KEY" AS "KEY", (CAST("ADS_imp_1_OUT".impter_2 AS FLOAT) - 0.0047225988377) / 0.0488123078699 AS scaler_2, (CAST("ADS_imp_1_OUT".impter_3 AS FLOAT) - -0.0073794958196) / 0.0465126383467 AS scaler_3, (CAST("ADS_imp_1_OUT".impter_4 AS FLOAT) - -6.24253146871e-05) / 0.046971645538 AS scaler_4, (CAST("ADS_imp_1_OUT".impter_5 AS FLOAT) - -0.00643221528123) / 0.0474148680367 AS scaler_5, (CAST("ADS_imp_1_OUT".impter_6 AS FLOAT) - -0.00213184962584) / 0.0460146493101 AS scaler_6, (CAST("ADS_imp_1_OUT".impter_7 AS FLOAT) - -0.000838461125138) / 0.0459634748503 AS scaler_7, (CAST("ADS_imp_1_OUT".impter_8 AS FLOAT) - 0.000444113651192) / 0.0423673337055 AS scaler_8, (CAST("ADS_imp_1_OUT".impter_9 AS FLOAT) - -0.0032531275266) / 0.0441563504693 AS scaler_9, (CAST("ADS_imp_1_OUT".impter_10 AS FLOAT) - -0.0029539764781) / 0.044965109506 AS scaler_10, (CAST("ADS_imp_1_OUT".impter_11 AS FLOAT) - -0.000211620600092) / 0.0487263122756 AS scaler_11 
FROM "ADS_imp_1_OUT"), 
"DT_node_lookup" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_10 <= 0.1007402241230011) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_5 <= 1.2867660522460938) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_8 <= 1.5286153554916382) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_5 <= -1.6176990270614624) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_10 <= -0.7904924750328064) THEN 5 ELSE 6 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_11 <= -0.9953616857528687) THEN 8 ELSE 9 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_7 <= 0.306460440158844) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_5 <= -0.5648304224014282) THEN 12 ELSE 13 END ELSE 14 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_10 <= -0.4728976786136627) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_7 <= -0.2726432681083679) THEN 17 ELSE 18 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_11 <= 1.8523929119110107) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_7 <= -0.2964887022972107) THEN 21 ELSE 22 END ELSE 23 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_4 <= -0.3602524399757385) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_11 <= 0.6197826862335205) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_8 <= 0.8334311246871948) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_5 <= 0.1854896992444992) THEN 28 ELSE 29 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_11 <= -0.5278199315071106) THEN 31 ELSE 32 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_4 <= -0.784753680229187) THEN 34 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_2 <= 1.0553895235061646) THEN 36 ELSE 37 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_4 <= 1.4983747005462646) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_11 <= 0.7897979021072388) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_10 <= 1.1320881843566895) THEN 41 ELSE 42 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_3 <= 0.22356796264648438) THEN 44 ELSE 45 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_8 <= -0.9479784965515137) THEN 47 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_4 <= 1.5442668199539185) THEN 49 ELSE 50 END END END END END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 0 AS node_id, 'scaler_10' AS feature, 0.1007402241230011 AS threshold, 110 AS count, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 148.85454545454544 AS "Estimator" FROM DUAL UNION ALL SELECT 1 AS node_id, 'scaler_5' AS feature, 1.2867660522460938 AS threshold, 62 AS count, 1 AS depth, 0 AS parent_id, 110.37096774193549 AS "Estimator" FROM DUAL UNION ALL SELECT 2 AS node_id, 'scaler_8' AS feature, 1.5286153554916382 AS threshold, 57 AS count, 2 AS depth, 1 AS parent_id, 103.10526315789474 AS "Estimator" FROM DUAL UNION ALL SELECT 3 AS node_id, 'scaler_5' AS feature, -1.6176990270614624 AS threshold, 51 AS count, 3 AS depth, 2 AS parent_id, 108.6078431372549 AS "Estimator" FROM DUAL UNION ALL SELECT 4 AS node_id, 'scaler_10' AS feature, -0.7904924750328064 AS threshold, 4 AS count, 4 AS depth, 3 AS parent_id, 62.0 AS "Estimator" FROM DUAL UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 5 AS depth, 4 AS parent_id, 57.0 AS "Estimator" FROM DUAL UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 4 AS parent_id, 77.0 AS "Estimator" FROM DUAL UNION ALL SELECT 7 AS node_id, 'scaler_11' AS feature, -0.9953616857528687 AS threshold, 47 AS count, 4 AS depth, 3 AS parent_id, 112.57446808510639 AS "Estimator" FROM DUAL UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 12 AS count, 5 AS depth, 7 AS parent_id, 136.91666666666666 AS "Estimator" FROM DUAL UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 35 AS count, 5 AS depth, 7 AS parent_id, 104.22857142857143 AS "Estimator" FROM DUAL UNION ALL SELECT 10 AS node_id, 'scaler_7' AS feature, 0.306460440158844 AS threshold, 6 AS count, 3 AS depth, 2 AS parent_id, 56.333333333333336 AS "Estimator" FROM DUAL UNION ALL SELECT 11 AS node_id, 'scaler_5' AS feature, -0.5648304224014282 AS threshold, 5 AS count, 4 AS depth, 10 AS parent_id, 51.4 AS "Estimator" FROM DUAL UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 5 AS depth, 11 AS parent_id, 46.0 AS "Estimator" FROM DUAL UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 5 AS depth, 11 AS parent_id, 59.5 AS "Estimator" FROM DUAL UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 10 AS parent_id, 81.0 AS "Estimator" FROM DUAL UNION ALL SELECT 15 AS node_id, 'scaler_10' AS feature, -0.4728976786136627 AS threshold, 5 AS count, 2 AS depth, 1 AS parent_id, 193.2 AS "Estimator" FROM DUAL UNION ALL SELECT 16 AS node_id, 'scaler_7' AS feature, -0.2726432681083679 AS threshold, 2 AS count, 3 AS depth, 15 AS parent_id, 278.0 AS "Estimator" FROM DUAL UNION ALL SELECT 17 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 16 AS parent_id, 293.0 AS "Estimator" FROM DUAL UNION ALL SELECT 18 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 16 AS parent_id, 263.0 AS "Estimator" FROM DUAL UNION ALL SELECT 19 AS node_id, 'scaler_11' AS feature, 1.8523929119110107 AS threshold, 3 AS count, 3 AS depth, 15 AS parent_id, 136.66666666666666 AS "Estimator" FROM DUAL UNION ALL SELECT 20 AS node_id, 'scaler_7' AS feature, -0.2964887022972107 AS threshold, 2 AS count, 4 AS depth, 19 AS parent_id, 127.5 AS "Estimator" FROM DUAL UNION ALL SELECT 21 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 20 AS parent_id, 124.0 AS "Estimator" FROM DUAL UNION ALL SELECT 22 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 20 AS parent_id, 131.0 AS "Estimator" FROM DUAL UNION ALL SELECT 23 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 19 AS parent_id, 155.0 AS "Estimator" FROM DUAL UNION ALL SELECT 24 AS node_id, 'scaler_4' AS feature, -0.3602524399757385 AS threshold, 48 AS count, 1 AS depth, 0 AS parent_id, 198.5625 AS "Estimator" FROM DUAL UNION ALL SELECT 25 AS node_id, 'scaler_11' AS feature, 0.6197826862335205 AS threshold, 9 AS count, 2 AS depth, 24 AS parent_id, 121.33333333333333 AS "Estimator" FROM DUAL UNION ALL SELECT 26 AS node_id, 'scaler_8' AS feature, 0.8334311246871948 AS threshold, 5 AS count, 3 AS depth, 25 AS parent_id, 72.2 AS "Estimator" FROM DUAL UNION ALL SELECT 27 AS node_id, 'scaler_5' AS feature, 0.1854896992444992 AS threshold, 3 AS count, 4 AS depth, 26 AS parent_id, 64.33333333333333 AS "Estimator" FROM DUAL UNION ALL SELECT 28 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 27 AS parent_id, 58.0 AS "Estimator" FROM DUAL UNION ALL SELECT 29 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 5 AS depth, 27 AS parent_id, 67.5 AS "Estimator" FROM DUAL UNION ALL SELECT 30 AS node_id, 'scaler_11' AS feature, -0.5278199315071106 AS threshold, 2 AS count, 4 AS depth, 26 AS parent_id, 84.0 AS "Estimator" FROM DUAL UNION ALL SELECT 31 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 30 AS parent_id, 78.0 AS "Estimator" FROM DUAL UNION ALL SELECT 32 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 30 AS parent_id, 90.0 AS "Estimator" FROM DUAL UNION ALL SELECT 33 AS node_id, 'scaler_4' AS feature, -0.784753680229187 AS threshold, 4 AS count, 3 AS depth, 25 AS parent_id, 182.75 AS "Estimator" FROM DUAL UNION ALL SELECT 34 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 33 AS parent_id, 206.0 AS "Estimator" FROM DUAL UNION ALL SELECT 35 AS node_id, 'scaler_2' AS feature, 1.0553895235061646 AS threshold, 3 AS count, 4 AS depth, 33 AS parent_id, 175.0 AS "Estimator" FROM DUAL UNION ALL SELECT 36 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 35 AS parent_id, 185.0 AS "Estimator" FROM DUAL UNION ALL SELECT 37 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 5 AS depth, 35 AS parent_id, 170.0 AS "Estimator" FROM DUAL UNION ALL SELECT 38 AS node_id, 'scaler_4' AS feature, 1.4983747005462646 AS threshold, 39 AS count, 2 AS depth, 24 AS parent_id, 216.3846153846154 AS "Estimator" FROM DUAL UNION ALL SELECT 39 AS node_id, 'scaler_11' AS feature, 0.7897979021072388 AS threshold, 33 AS count, 3 AS depth, 38 AS parent_id, 204.6060606060606 AS "Estimator" FROM DUAL UNION ALL SELECT 40 AS node_id, 'scaler_10' AS feature, 1.1320881843566895 AS threshold, 24 AS count, 4 AS depth, 39 AS parent_id, 191.20833333333334 AS "Estimator" FROM DUAL UNION ALL SELECT 41 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 18 AS count, 5 AS depth, 40 AS parent_id, 178.72222222222223 AS "Estimator" FROM DUAL UNION ALL SELECT 42 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 6 AS count, 5 AS depth, 40 AS parent_id, 228.66666666666666 AS "Estimator" FROM DUAL UNION ALL SELECT 43 AS node_id, 'scaler_3' AS feature, 0.22356796264648438 AS threshold, 9 AS count, 4 AS depth, 39 AS parent_id, 240.33333333333334 AS "Estimator" FROM DUAL UNION ALL SELECT 44 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS count, 5 AS depth, 43 AS parent_id, 214.4 AS "Estimator" FROM DUAL UNION ALL SELECT 45 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS count, 5 AS depth, 43 AS parent_id, 272.75 AS "Estimator" FROM DUAL UNION ALL SELECT 46 AS node_id, 'scaler_8' AS feature, -0.9479784965515137 AS threshold, 6 AS count, 3 AS depth, 38 AS parent_id, 281.1666666666667 AS "Estimator" FROM DUAL UNION ALL SELECT 47 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 46 AS parent_id, 346.0 AS "Estimator" FROM DUAL UNION ALL SELECT 48 AS node_id, 'scaler_4' AS feature, 1.5442668199539185 AS threshold, 5 AS count, 4 AS depth, 46 AS parent_id, 268.2 AS "Estimator" FROM DUAL UNION ALL SELECT 49 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 48 AS parent_id, 252.0 AS "Estimator" FROM DUAL UNION ALL SELECT 50 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS count, 5 AS depth, 48 AS parent_id, 272.25 AS "Estimator" FROM DUAL) "Values"), 
"DT_Output" AS 
(SELECT "DT_node_lookup"."KEY" AS "KEY", "DT_node_lookup".node_id_2 AS node_id_2, "DT_node_data".node_id AS node_id, "DT_node_data".feature AS feature, "DT_node_data".threshold AS threshold, "DT_node_data".count AS count, "DT_node_data".depth AS depth, "DT_node_data".parent_id AS parent_id, "DT_node_data"."Estimator" AS "Estimator" 
FROM "DT_node_lookup" LEFT OUTER JOIN "DT_node_data" ON "DT_node_lookup".node_id_2 = "DT_node_data".node_id)
 SELECT "DT_Output"."KEY" AS "KEY", "DT_Output"."Estimator" AS "Estimator" 
FROM "DT_Output"