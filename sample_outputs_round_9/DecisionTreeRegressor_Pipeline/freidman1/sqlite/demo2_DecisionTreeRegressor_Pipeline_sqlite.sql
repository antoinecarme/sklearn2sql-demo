-- This SQL code was generated by scikit2sql (development version).
-- Copyright 2017

WITH "ADS_imp_1_OUT" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_0" IS NULL) THEN 0.571437811354 ELSE "ADS"."Feature_0" END AS impter_2, CASE WHEN ("ADS"."Feature_1" IS NULL) THEN 0.382666238013 ELSE "ADS"."Feature_1" END AS impter_3, CASE WHEN ("ADS"."Feature_2" IS NULL) THEN 0.572691272422 ELSE "ADS"."Feature_2" END AS impter_4, CASE WHEN ("ADS"."Feature_3" IS NULL) THEN 0.49696190088 ELSE "ADS"."Feature_3" END AS impter_5, CASE WHEN ("ADS"."Feature_4" IS NULL) THEN 0.451024542384 ELSE "ADS"."Feature_4" END AS impter_6, CASE WHEN ("ADS"."Feature_5" IS NULL) THEN 0.481756971335 ELSE "ADS"."Feature_5" END AS impter_7, CASE WHEN ("ADS"."Feature_6" IS NULL) THEN 0.500052942379 ELSE "ADS"."Feature_6" END AS impter_8, CASE WHEN ("ADS"."Feature_7" IS NULL) THEN 0.479198857297 ELSE "ADS"."Feature_7" END AS impter_9, CASE WHEN ("ADS"."Feature_8" IS NULL) THEN 0.507387853051 ELSE "ADS"."Feature_8" END AS impter_10, CASE WHEN ("ADS"."Feature_9" IS NULL) THEN 0.628661567941 ELSE "ADS"."Feature_9" END AS impter_11 
FROM freidman1 AS "ADS"), 
"ADS_sca_2_OUT" AS 
(SELECT "ADS_imp_1_OUT"."KEY" AS "KEY", (CAST("ADS_imp_1_OUT".impter_2 AS FLOAT) - 0.571437811354) / 0.271926055138 AS scaler_2, (CAST("ADS_imp_1_OUT".impter_3 AS FLOAT) - 0.382666238013) / 0.24530412971 AS scaler_3, (CAST("ADS_imp_1_OUT".impter_4 AS FLOAT) - 0.572691272422) / 0.305022968027 AS scaler_4, (CAST("ADS_imp_1_OUT".impter_5 AS FLOAT) - 0.49696190088) / 0.312889400468 AS scaler_5, (CAST("ADS_imp_1_OUT".impter_6 AS FLOAT) - 0.451024542384) / 0.24602253009 AS scaler_6, (CAST("ADS_imp_1_OUT".impter_7 AS FLOAT) - 0.481756971335) / 0.286861434558 AS scaler_7, (CAST("ADS_imp_1_OUT".impter_8 AS FLOAT) - 0.500052942379) / 0.284593201265 AS scaler_8, (CAST("ADS_imp_1_OUT".impter_9 AS FLOAT) - 0.479198857297) / 0.318231552426 AS scaler_9, (CAST("ADS_imp_1_OUT".impter_10 AS FLOAT) - 0.507387853051) / 0.213964399112 AS scaler_10, (CAST("ADS_imp_1_OUT".impter_11 AS FLOAT) - 0.628661567941) / 0.260134905409 AS scaler_11 
FROM "ADS_imp_1_OUT"), 
"DT_node_lookup" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_5 <= -0.9624107480049133) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_9 <= 1.2099848985671997) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_3 <= -0.01863822713494301) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_6 <= -0.525618314743042) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_2 <= -0.20943006873130798) THEN 5 ELSE 6 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_6 <= 0.10292446613311768) THEN 8 ELSE 9 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_5 <= -1.4292501211166382) THEN 11 ELSE 12 END END ELSE 13 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_3 <= -0.45597419142723083) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_8 <= 0.21346363425254822) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_7 <= 0.8998661041259766) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_8 <= -0.6909001469612122) THEN 18 ELSE 19 END ELSE 20 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_3 <= -0.6007001996040344) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_10 <= 0.8281632661819458) THEN 23 ELSE 24 END ELSE 25 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_4 <= 1.3240382671356201) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_10 <= -0.12862390279769897) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_2 <= 0.38619062304496765) THEN 29 ELSE 30 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_10 <= 0.7955230474472046) THEN 32 ELSE 33 END END ELSE 34 END END END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 0 AS node_id, 'scaler_5' AS feature, -0.9624107480049133 AS threshold, 25 AS count, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 14.601553901356935 AS "Estimator" UNION ALL SELECT 1 AS node_id, 'scaler_9' AS feature, 1.2099848985671997 AS threshold, 7 AS count, 1 AS depth, 0 AS parent_id, 8.538311403252441 AS "Estimator" UNION ALL SELECT 2 AS node_id, 'scaler_3' AS feature, -0.01863822713494301 AS threshold, 6 AS count, 2 AS depth, 1 AS parent_id, 7.343609640129497 AS "Estimator" UNION ALL SELECT 3 AS node_id, 'scaler_6' AS feature, -0.525618314743042 AS threshold, 4 AS count, 3 AS depth, 2 AS parent_id, 6.048706751432121 AS "Estimator" UNION ALL SELECT 4 AS node_id, 'scaler_2' AS feature, -0.20943006873130798 AS threshold, 2 AS count, 4 AS depth, 3 AS parent_id, 5.543831518879064 AS "Estimator" UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 4 AS parent_id, 5.794379036456321 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 4 AS parent_id, 5.293284001301807 AS "Estimator" UNION ALL SELECT 7 AS node_id, 'scaler_6' AS feature, 0.10292446613311768 AS threshold, 2 AS count, 4 AS depth, 3 AS parent_id, 6.553581983985179 AS "Estimator" UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 7 AS parent_id, 6.2457102486321485 AS "Estimator" UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 7 AS parent_id, 6.861453719338209 AS "Estimator" UNION ALL SELECT 10 AS node_id, 'scaler_5' AS feature, -1.4292501211166382 AS threshold, 2 AS count, 3 AS depth, 2 AS parent_id, 9.933415417524246 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 10 AS parent_id, 10.131789617052231 AS "Estimator" UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 10 AS parent_id, 9.735041217996262 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 2 AS depth, 1 AS parent_id, 15.706521981990113 AS "Estimator" UNION ALL SELECT 14 AS node_id, 'scaler_3' AS feature, -0.45597419142723083 AS threshold, 18 AS count, 1 AS depth, 0 AS parent_id, 16.95948153950868 AS "Estimator" UNION ALL SELECT 15 AS node_id, 'scaler_8' AS feature, 0.21346363425254822 AS threshold, 6 AS count, 2 AS depth, 14 AS parent_id, 13.236972405410782 AS "Estimator" UNION ALL SELECT 16 AS node_id, 'scaler_7' AS feature, 0.8998661041259766 AS threshold, 3 AS count, 3 AS depth, 15 AS parent_id, 10.184052845897567 AS "Estimator" UNION ALL SELECT 17 AS node_id, 'scaler_8' AS feature, -0.6909001469612122 AS threshold, 2 AS count, 4 AS depth, 16 AS parent_id, 11.15598984450725 AS "Estimator" UNION ALL SELECT 18 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 17 AS parent_id, 12.109886588685942 AS "Estimator" UNION ALL SELECT 19 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 17 AS parent_id, 10.20209310032856 AS "Estimator" UNION ALL SELECT 20 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 16 AS parent_id, 8.240178848678195 AS "Estimator" UNION ALL SELECT 21 AS node_id, 'scaler_3' AS feature, -0.6007001996040344 AS threshold, 3 AS count, 3 AS depth, 15 AS parent_id, 16.289891964924 AS "Estimator" UNION ALL SELECT 22 AS node_id, 'scaler_10' AS feature, 0.8281632661819458 AS threshold, 2 AS count, 4 AS depth, 21 AS parent_id, 17.409245496013313 AS "Estimator" UNION ALL SELECT 23 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 22 AS parent_id, 16.324769596540094 AS "Estimator" UNION ALL SELECT 24 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 22 AS parent_id, 18.493721395486528 AS "Estimator" UNION ALL SELECT 25 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 21 AS parent_id, 14.051184902745373 AS "Estimator" UNION ALL SELECT 26 AS node_id, 'scaler_4' AS feature, 1.3240382671356201 AS threshold, 12 AS count, 2 AS depth, 14 AS parent_id, 18.820736106557636 AS "Estimator" UNION ALL SELECT 27 AS node_id, 'scaler_10' AS feature, -0.12862390279769897 AS threshold, 11 AS count, 3 AS depth, 26 AS parent_id, 18.23643407252446 AS "Estimator" UNION ALL SELECT 28 AS node_id, 'scaler_2' AS feature, 0.38619062304496765 AS threshold, 7 AS count, 4 AS depth, 27 AS parent_id, 17.629596226911758 AS "Estimator" UNION ALL SELECT 29 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 5 AS depth, 28 AS parent_id, 16.92008643558917 AS "Estimator" UNION ALL SELECT 30 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS count, 5 AS depth, 28 AS parent_id, 18.161728570403696 AS "Estimator" UNION ALL SELECT 31 AS node_id, 'scaler_10' AS feature, 0.7955230474472046 AS threshold, 4 AS count, 4 AS depth, 27 AS parent_id, 19.29840030234668 AS "Estimator" UNION ALL SELECT 32 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 5 AS depth, 31 AS parent_id, 20.330419049387785 AS "Estimator" UNION ALL SELECT 33 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 5 AS depth, 31 AS parent_id, 18.26638155530557 AS "Estimator" UNION ALL SELECT 34 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 26 AS parent_id, 25.24805848092261 AS "Estimator") AS "Values"), 
"DT_Output" AS 
(SELECT "DT_node_lookup"."KEY" AS "KEY", "DT_node_lookup".node_id_2 AS node_id_2, "DT_node_data".node_id AS node_id, "DT_node_data".feature AS feature, "DT_node_data".threshold AS threshold, "DT_node_data".count AS count, "DT_node_data".depth AS depth, "DT_node_data".parent_id AS parent_id, "DT_node_data"."Estimator" AS "Estimator" 
FROM "DT_node_lookup" LEFT OUTER JOIN "DT_node_data" ON "DT_node_lookup".node_id_2 = "DT_node_data".node_id)
 SELECT "DT_Output"."KEY" AS "KEY", "DT_Output"."Estimator" AS "Estimator" 
FROM "DT_Output"