-- This SQL code was generated by scikit2sql (development version).
-- Copyright 2017

WITH `RawScores` AS 
(SELECT `ADS`.`KEY` AS `KEY`, NULL AS `LogProba_0`, NULL AS `Proba_0`, -2.44346124161 + (-0.5 * -15.1371759627 - (0.5 * (CAST(`ADS`.`Feature_0` AS DOUBLE) - 0.0) * (CAST(`ADS`.`Feature_0` AS DOUBLE) - 0.0)) / 4.2445156522e-08) + (-0.5 * -15.1371759627 - (0.5 * (CAST(`ADS`.`Feature_1` AS DOUBLE) - 0.0) * (CAST(`ADS`.`Feature_1` AS DOUBLE) - 0.0)) / 4.2445156522e-08) + (-0.5 * 3.88389304192 - (0.5 * (CAST(`ADS`.`Feature_2` AS DOUBLE) - 4.51282051282) * (CAST(`ADS`.`Feature_2` AS DOUBLE) - 4.51282051282)) / 7.73701516408) + (-0.5 * 3.25715211853 - (0.5 * (CAST(`ADS`.`Feature_3` AS DOUBLE) - 13.3846153846) * (CAST(`ADS`.`Feature_3` AS DOUBLE) - 13.3846153846)) / 4.13412233041) + (-0.5 * 4.31795066992 - (0.5 * (CAST(`ADS`.`Feature_4` AS DOUBLE) - 10.8205128205) * (CAST(`ADS`.`Feature_4` AS DOUBLE) - 10.8205128205)) / 11.9421433692) + (-0.5 * 3.97434004627 - (0.5 * (CAST(`ADS`.`Feature_5` AS DOUBLE) - 2.69230769231) * (CAST(`ADS`.`Feature_5` AS DOUBLE) - 2.69230769231)) / 8.46942805033) + (-0.5 * -15.1371759627 - (0.5 * (CAST(`ADS`.`Feature_6` AS DOUBLE) - 0.0) * (CAST(`ADS`.`Feature_6` AS DOUBLE) - 0.0)) / 4.2445156522e-08) + (-0.5 * -15.1371759627 - (0.5 * (CAST(`ADS`.`Feature_7` AS DOUBLE) - 0.0) * (CAST(`ADS`.`Feature_7` AS DOUBLE) - 0.0)) / 4.2445156522e-08) + (-0.5 * -15.1371759627 - (0.5 * (CAST(`ADS`.`Feature_8` AS DOUBLE) - 0.0) * (CAST(`ADS`.`Feature_8` AS DOUBLE) - 0.0)) / 4.2445156522e-08) + (-0.5 * 2.09349229594 - (0.5 * (CAST(`ADS`.`Feature_9` AS DOUBLE) - 0.794871794872) * (CAST(`ADS`.`Feature_9` AS DOUBLE) - 0.794871794872)) / 1.29125579524) + (-0.5 * 4.21053269197 - (0.5 * (CAST(`ADS`.`Feature_10` AS DOUBLE) - 12.6923076923) * (CAST(`ADS`.`Feature_10` AS DOUBLE) - 12.6923076923)) / 10.7258383067) + (-0.5 * 4.26921555837 - (0.5 * (CAST(`ADS`.`Feature_11` AS DOUBLE) - 13.5641025641) * (CAST(`ADS`.`Feature_11` AS DOUBLE) - 13.5641025641)) / 11.3740960319) + (-0.5 * 4.45365433215 - (0.5 * (CAST(`ADS`.`Feature_12` AS DOUBLE) - 12.4102564103) * (CAST(`ADS`.`Feature_12` AS DOUBLE) - 12.4102564103)) / 13.6778435664) + (-0.5 * 4.61276426546 - (0.5 * (CAST(`ADS`.`Feature_13` AS DOUBLE) - 11.4102564103) * (CAST(`ADS`.`Feature_13` AS DOUBLE) - 11.4102564103)) / 16.0368179254) + (-0.5 * 2.8087954516 - (0.5 * (CAST(`ADS`.`Feature_14` AS DOUBLE) - 0.974358974359) * (CAST(`ADS`.`Feature_14` AS DOUBLE) - 0.974358974359)) / 2.64036822127) + (-0.5 * -15.1371759627 - (0.5 * (CAST(`ADS`.`Feature_15` AS DOUBLE) - 0.0) * (CAST(`ADS`.`Feature_15` AS DOUBLE) - 0.0)) / 4.2445156522e-08) + (-0.5 * -15.1371759627 - (0.5 * (CAST(`ADS`.`Feature_16` AS DOUBLE) - 0.0) * (CAST(`ADS`.`Feature_16` AS DOUBLE) - 0.0)) / 4.2445156522e-08) + (-0.5 * 3.91055681641 - (0.5 * (CAST(`ADS`.`Feature_17` AS DOUBLE) - 3.94871794872) * (CAST(`ADS`.`Feature_17` AS DOUBLE) - 3.94871794872)) / 7.94608814238) + (-0.5 * 3.26001062449 - (0.5 * (CAST(`ADS`.`Feature_18` AS DOUBLE) - 14.4615384615) * (CAST(`ADS`.`Feature_18` AS DOUBLE) - 14.4615384615)) / 4.14595664994) + (-0.5 * 5.07682620333 - (0.5 * (CAST(`ADS`.`Feature_19` AS DOUBLE) - 6.07692307692) * (CAST(`ADS`.`Feature_19` AS DOUBLE) - 6.07692307692)) / 25.5069033955) + (-0.5 * 4.46958142477 - (0.5 * (CAST(`ADS`.`Feature_20` AS DOUBLE) - 3.0) * (CAST(`ADS`.`Feature_20` AS DOUBLE) - 3.0)) / 13.8974359399) + (-0.5 * 3.92485098891 - (0.5 * (CAST(`ADS`.`Feature_21` AS DOUBLE) - 12.7948717949) * (CAST(`ADS`.`Feature_21` AS DOUBLE) - 12.7948717949)) / 8.06048656447) + (-0.5 * 3.86588689661 - (0.5 * (CAST(`ADS`.`Feature_22` AS DOUBLE) - 3.79487179487) * (CAST(`ADS`.`Feature_22` AS DOUBLE) - 3.79487179487)) / 7.59894810293) + (-0.5 * -15.1371759627 - (0.5 * (CAST(`ADS`.`Feature_23` AS DOUBLE) - 0.0) * (CAST(`ADS`.`Feature_23` AS DOUBLE) - 0.0)) / 4.2445156522e-08) + (-0.5 * -15.1371759627 - (0.5 * (CAST(`ADS`.`Feature_24` AS DOUBLE) - 0.0) * (CAST(`ADS`.`Feature_24` AS DOUBLE) - 0.0)) / 4.2445156522e-08) + (-0.5 * 3.84755057577 - (0.5 * (CAST(`ADS`.`Feature_25` AS DOUBLE) - 4.97435897436) * (CAST(`ADS`.`Feature_25` AS DOUBLE) - 4.97435897436)) / 7.46088104179) + (-0.5 * 4.06567627028 - (0.5 * (CAST(`ADS`.`Feature_26` AS DOUBLE) - 12.9487179487) * (CAST(`ADS`.`Feature_26` AS DOUBLE) - 12.9487179487)) / 9.27942147571) + (-0.5 * 4.5197718308 - (0.5 * (CAST(`ADS`.`Feature_27` AS DOUBLE) - 2.28205128205) * (CAST(`ADS`.`Feature_27` AS DOUBLE) - 2.28205128205)) / 14.612754809) + (-0.5 * 0.297651353551 - (0.5 * (CAST(`ADS`.`Feature_28` AS DOUBLE) - 0.128205128205) * (CAST(`ADS`.`Feature_28` AS DOUBLE) - 0.128205128205)) / 0.214332718316) + (-0.5 * 4.34692562285 - (0.5 * (CAST(`ADS`.`Feature_29` AS DOUBLE) - 10.2564102564) * (CAST(`ADS`.`Feature_29` AS DOUBLE) - 10.2564102564)) / 12.2932281818) + (-0.5 * 3.69042873847 - (0.5 * (CAST(`ADS`.`Feature_30` AS DOUBLE) - 6.66666666667) * (CAST(`ADS`.`Feature_30` AS DOUBLE) - 6.66666666667)) / 6.37606841851) + (-0.5 * -15.1371759627 - (0.5 * (CAST(`ADS`.`Feature_31` AS DOUBLE) - 0.0) * (CAST(`ADS`.`Feature_31` AS DOUBLE) - 0.0)) / 4.2445156522e-08) + (-0.5 * -15.1371759627 - (0.5 * (CAST(`ADS`.`Feature_32` AS DOUBLE) - 0.0) * (CAST(`ADS`.`Feature_32` AS DOUBLE) - 0.0)) / 4.2445156522e-08) + (-0.5 * 3.74617693279 - (0.5 * (CAST(`ADS`.`Feature_33` AS DOUBLE) - 5.76923076923) * (CAST(`ADS`.`Feature_33` AS DOUBLE) - 5.76923076923)) / 6.74161739945) + (-0.5 * 4.23988794338 - (0.5 * (CAST(`ADS`.`Feature_34` AS DOUBLE) - 12.0769230769) * (CAST(`ADS`.`Feature_34` AS DOUBLE) - 12.0769230769)) / 11.045364934) + (-0.5 * 3.77917436329 - (0.5 * (CAST(`ADS`.`Feature_35` AS DOUBLE) - 1.17948717949) * (CAST(`ADS`.`Feature_35` AS DOUBLE) - 1.17948717949)) / 6.96778439484) + (-0.5 * 0.435009744182 - (0.5 * (CAST(`ADS`.`Feature_36` AS DOUBLE) - 0.102564102564) * (CAST(`ADS`.`Feature_36` AS DOUBLE) - 0.102564102564)) / 0.245890903721) + (-0.5 * 4.13015279403 - (0.5 * (CAST(`ADS`.`Feature_37` AS DOUBLE) - 10.0) * (CAST(`ADS`.`Feature_37` AS DOUBLE) - 10.0)) / 9.89743593988) + (-0.5 * 3.75394848924 - (0.5 * (CAST(`ADS`.`Feature_38` AS DOUBLE) - 6.97435897436) * (CAST(`ADS`.`Feature_38` AS DOUBLE) - 6.97435897436)) / 6.79421437512) + (-0.5 * -15.1371759627 - (0.5 * (CAST(`ADS`.`Feature_39` AS DOUBLE) - 0.0) * (CAST(`ADS`.`Feature_39` AS DOUBLE) - 0.0)) / 4.2445156522e-08) + (-0.5 * -15.1371759627 - (0.5 * (CAST(`ADS`.`Feature_40` AS DOUBLE) - 0.0) * (CAST(`ADS`.`Feature_40` AS DOUBLE) - 0.0)) / 4.2445156522e-08) + (-0.5 * 3.49569806785 - (0.5 * (CAST(`ADS`.`Feature_41` AS DOUBLE) - 3.66666666667) * (CAST(`ADS`.`Feature_41` AS DOUBLE) - 3.66666666667)) / 5.24786329031) + (-0.5 * 3.39120023384 - (0.5 * (CAST(`ADS`.`Feature_42` AS DOUBLE) - 13.7948717949) * (CAST(`ADS`.`Feature_42` AS DOUBLE) - 13.7948717949)) / 4.72715323114) + (-0.5 * 4.07876859491 - (0.5 * (CAST(`ADS`.`Feature_43` AS DOUBLE) - 2.33333333333) * (CAST(`ADS`.`Feature_43` AS DOUBLE) - 2.33333333333)) / 9.40170944415) + (-0.5 * 4.40237115738 - (0.5 * (CAST(`ADS`.`Feature_44` AS DOUBLE) - 2.07692307692) * (CAST(`ADS`.`Feature_44` AS DOUBLE) - 2.07692307692)) / 12.9940828827) + (-0.5 * 3.68898409887 - (0.5 * (CAST(`ADS`.`Feature_45` AS DOUBLE) - 12.6923076923) * (CAST(`ADS`.`Feature_45` AS DOUBLE) - 12.6923076923)) / 6.36686394777) + (-0.5 * 4.20253215699 - (0.5 * (CAST(`ADS`.`Feature_46` AS DOUBLE) - 5.35897435897) * (CAST(`ADS`.`Feature_46` AS DOUBLE) - 5.35897435897)) / 10.6403682213) + (-0.5 * -15.1371759627 - (0.5 * (CAST(`ADS`.`Feature_47` AS DOUBLE) - 0.0) * (CAST(`ADS`.`Feature_47` AS DOUBLE) - 0.0)) / 4.2445156522e-08) + (-0.5 * -15.1371759627 - (0.5 * (CAST(`ADS`.`Feature_48` AS DOUBLE) - 0.0) * (CAST(`ADS`.`Feature_48` AS DOUBLE) - 0.0)) / 4.2445156522e-08) + (-0.5 * 2.51778780785 - (0.5 * (CAST(`ADS`.`Feature_49` AS DOUBLE) - 1.02564102564) * (CAST(`ADS`.`Feature_49` AS DOUBLE) - 1.02564102564)) / 1.97370155461) + (-0.5 * 3.41971875527 - (0.5 * (CAST(`ADS`.`Feature_50` AS DOUBLE) - 13.4615384615) * (CAST(`ADS`.`Feature_50` AS DOUBLE) - 13.4615384615)) / 4.86390536789) + (-0.5 * 4.53335681044 - (0.5 * (CAST(`ADS`.`Feature_51` AS DOUBLE) - 10.4615384615) * (CAST(`ADS`.`Feature_51` AS DOUBLE) - 10.4615384615)) / 14.8126233166) + (-0.5 * 4.25594875147 - (0.5 * (CAST(`ADS`.`Feature_52` AS DOUBLE) - 11.4871794872) * (CAST(`ADS`.`Feature_52` AS DOUBLE) - 11.4871794872)) / 11.2241946513) + (-0.5 * 3.67860410124 - (0.5 * (CAST(`ADS`.`Feature_53` AS DOUBLE) - 13.4871794872) * (CAST(`ADS`.`Feature_53` AS DOUBLE) - 13.4871794872)) / 6.30111772818) + (-0.5 * 3.6594314926 - (0.5 * (CAST(`ADS`.`Feature_54` AS DOUBLE) - 1.84615384615) * (CAST(`ADS`.`Feature_54` AS DOUBLE) - 1.84615384615)) / 6.18145960852) + (-0.5 * -15.1371759627 - (0.5 * (CAST(`ADS`.`Feature_55` AS DOUBLE) - 0.0) * (CAST(`ADS`.`Feature_55` AS DOUBLE) - 0.0)) / 4.2445156522e-08) + (-0.5 * -15.1371759627 - (0.5 * (CAST(`ADS`.`Feature_56` AS DOUBLE) - 0.0) * (CAST(`ADS`.`Feature_56` AS DOUBLE) - 0.0)) / 4.2445156522e-08) + (-0.5 * -15.1371759627 - (0.5 * (CAST(`ADS`.`Feature_57` AS DOUBLE) - 0.0) * (CAST(`ADS`.`Feature_57` AS DOUBLE) - 0.0)) / 4.2445156522e-08) + (-0.5 * 3.66155644026 - (0.5 * (CAST(`ADS`.`Feature_58` AS DOUBLE) - 4.4358974359) * (CAST(`ADS`.`Feature_58` AS DOUBLE) - 4.4358974359)) / 6.19460885244) + (-0.5 * 2.93055463379 - (0.5 * (CAST(`ADS`.`Feature_59` AS DOUBLE) - 13.6923076923) * (CAST(`ADS`.`Feature_59` AS DOUBLE) - 13.6923076923)) / 2.98224856316) + (-0.5 * 3.34421650428 - (0.5 * (CAST(`ADS`.`Feature_60` AS DOUBLE) - 13.0512820513) * (CAST(`ADS`.`Feature_60` AS DOUBLE) - 13.0512820513)) / 4.51019070648) + (-0.5 * 4.43384785949 - (0.5 * (CAST(`ADS`.`Feature_61` AS DOUBLE) - 4.35897435897) * (CAST(`ADS`.`Feature_61` AS DOUBLE) - 4.35897435897)) / 13.4095989905) + (-0.5 * -0.547603342104 - (0.5 * (CAST(`ADS`.`Feature_62` AS DOUBLE) - 0.102564102564) * (CAST(`ADS`.`Feature_62` AS DOUBLE) - 0.102564102564)) / 0.0920447498745) + (-0.5 * -15.1371759627 - (0.5 * (CAST(`ADS`.`Feature_63` AS DOUBLE) - 0.0) * (CAST(`ADS`.`Feature_63` AS DOUBLE) - 0.0)) / 4.2445156522e-08) AS `Score_0`, NULL AS `LogProba_1`, NULL AS `Proba_1`, -2.08167119701 + (-0.5 * -15.1371759627 - (0.5 * (CAST(`ADS`.`Feature_0` AS DOUBLE) - 0.0) * (CAST(`ADS`.`Feature_0` AS DOUBLE) - 0.0)) / 4.2445156522e-08) + (-0.5 * -2.20549070969 - (0.5 * (CAST(`ADS`.`Feature_1` AS DOUBLE) - 0.0178571428571) * (CAST(`ADS`.`Feature_1` AS DOUBLE) - 0.0178571428571)) / 0.0175383077513) + (-0.5 * 4.51463929546 - (0.5 * (CAST(`ADS`.`Feature_2` AS DOUBLE) - 2.875) * (CAST(`ADS`.`Feature_2` AS DOUBLE) - 2.875)) / 14.537946471) + (-0.5 * 5.25417038941 - (0.5 * (CAST(`ADS`.`Feature_3` AS DOUBLE) - 9.83928571429) * (CAST(`ADS`.`Feature_3` AS DOUBLE) - 9.83928571429)) / 30.456313818) + (-0.5 * 5.06508542771 - (0.5 * (CAST(`ADS`.`Feature_4` AS DOUBLE) - 10.4285714286) * (CAST(`ADS`.`Feature_4` AS DOUBLE) - 10.4285714286)) / 25.2091837159) + (-0.5 * 5.25493440735 - (0.5 * (CAST(`ADS`.`Feature_5` AS DOUBLE) - 5.35714285714) * (CAST(`ADS`.`Feature_5` AS DOUBLE) - 5.35714285714)) / 30.4795918792) + (-0.5 * 3.04353850794 - (0.5 * (CAST(`ADS`.`Feature_6` AS DOUBLE) - 0.732142857143) * (CAST(`ADS`.`Feature_6` AS DOUBLE) - 0.732142857143)) / 3.33896687918) + (-0.5 * -15.1371759627 - (0.5 * (CAST(`ADS`.`Feature_7` AS DOUBLE) - 0.0) * (CAST(`ADS`.`Feature_7` AS DOUBLE) - 0.0)) / 4.2445156522e-08) + (-0.5 * -15.1371759627 - (0.5 * (CAST(`ADS`.`Feature_8` AS DOUBLE) - 0.0) * (CAST(`ADS`.`Feature_8` AS DOUBLE) - 0.0)) / 4.2445156522e-08) + (-0.5 * 0.419175637708 - (0.5 * (CAST(`ADS`.`Feature_9` AS DOUBLE) - 0.160714285714) * (CAST(`ADS`.`Feature_9` AS DOUBLE) - 0.160714285714)) / 0.24202810367) + (-0.5 * 5.00469399956 - (0.5 * (CAST(`ADS`.`Feature_10` AS DOUBLE) - 4.98214285714) * (CAST(`ADS`.`Feature_10` AS DOUBLE) - 4.98214285714)) / 23.731824022) + (-0.5 * 4.36889780868 - (0.5 * (CAST(`ADS`.`Feature_11` AS DOUBLE) - 13.9285714286) * (CAST(`ADS`.`Feature_11` AS DOUBLE) - 13.9285714286)) / 12.5663265731) + (-0.5 * 5.09870486101 - (0.5 * (CAST(`ADS`.`Feature_12` AS DOUBLE) - 13.5178571429) * (CAST(`ADS`.`Feature_12` AS DOUBLE) - 13.5178571429)) / 26.0711097363) + (-0.5 * 5.54876228989 - (0.5 * (CAST(`ADS`.`Feature_13` AS DOUBLE) - 7.30357142857) * (CAST(`ADS`.`Feature_13` AS DOUBLE) - 7.30357142857)) / 40.8899872873) + (-0.5 * 3.2515359382 - (0.5 * (CAST(`ADS`.`Feature_14` AS DOUBLE) - 0.821428571429) * (CAST(`ADS`.`Feature_14` AS DOUBLE) - 0.821428571429)) / 4.1109694302) + (-0.5 * -15.1371759627 - (0.5 * (CAST(`ADS`.`Feature_15` AS DOUBLE) - 0.0) * (CAST(`ADS`.`Feature_15` AS DOUBLE) - 0.0)) / 4.2445156522e-08) + (-0.5 * -15.1371759627 - (0.5 * (CAST(`ADS`.`Feature_16` AS DOUBLE) - 0.0) * (CAST(`ADS`.`Feature_16` AS DOUBLE) - 0.0)) / 4.2445156522e-08) + (-0.5 * 3.35986288321 - (0.5 * (CAST(`ADS`.`Feature_17` AS DOUBLE) - 1.08928571429) * (CAST(`ADS`.`Feature_17` AS DOUBLE) - 1.08928571429)) / 4.58131381796) + (-0.5 * 5.35631879116 - (0.5 * (CAST(`ADS`.`Feature_18` AS DOUBLE) - 8.26785714286) * (CAST(`ADS`.`Feature_18` AS DOUBLE) - 8.26785714286)) / 33.731824022) + (-0.5 * 2.11441632459 - (0.5 * (CAST(`ADS`.`Feature_19` AS DOUBLE) - 15.5535714286) * (CAST(`ADS`.`Feature_19` AS DOUBLE) - 15.5535714286)) / 1.31855871591) + (-0.5 * 4.68094565173 - (0.5 * (CAST(`ADS`.`Feature_20` AS DOUBLE) - 13.7857142857) * (CAST(`ADS`.`Feature_20` AS DOUBLE) - 13.7857142857)) / 17.1683673894) + (-0.5 * 5.31525373819 - (0.5 * (CAST(`ADS`.`Feature_21` AS DOUBLE) - 5.98214285714) * (CAST(`ADS`.`Feature_21` AS DOUBLE) - 5.98214285714)) / 32.3746811649) + (-0.5 * 2.77923367782 - (0.5 * (CAST(`ADS`.`Feature_22` AS DOUBLE) - 0.410714285714) * (CAST(`ADS`.`Feature_22` AS DOUBLE) - 0.410714285714)) / 2.5634566751) + (-0.5 * -15.1371759627 - (0.5 * (CAST(`ADS`.`Feature_23` AS DOUBLE) - 0.0) * (CAST(`ADS`.`Feature_23` AS DOUBLE) - 0.0)) / 4.2445156522e-08) + (-0.5 * -15.1371759627 - (0.5 * (CAST(`ADS`.`Feature_24` AS DOUBLE) - 0.0) * (CAST(`ADS`.`Feature_24` AS DOUBLE) - 0.0)) / 4.2445156522e-08) + (-0.5 * 4.44844849963 - (0.5 * (CAST(`ADS`.`Feature_25` AS DOUBLE) - 2.51785714286) * (CAST(`ADS`.`Feature_25` AS DOUBLE) - 2.51785714286)) / 13.606824022) + (-0.5 * 5.21548852662 - (0.5 * (CAST(`ADS`.`Feature_26` AS DOUBLE) - 10.0535714286) * (CAST(`ADS`.`Feature_26` AS DOUBLE) - 10.0535714286)) / 29.3007015731) + (-0.5 * 4.12140415709 - (0.5 * (CAST(`ADS`.`Feature_27` AS DOUBLE) - 14.7142857143) * (CAST(`ADS`.`Feature_27` AS DOUBLE) - 14.7142857143)) / 9.81122453224) + (-0.5 * 4.31314451186 - (0.5 * (CAST(`ADS`.`Feature_28` AS DOUBLE) - 13.8392857143) * (CAST(`ADS`.`Feature_28` AS DOUBLE) - 13.8392857143)) / 11.8848852465) + (-0.5 * 5.28607121827 - (0.5 * (CAST(`ADS`.`Feature_29` AS DOUBLE) - 5.05357142857) * (CAST(`ADS`.`Feature_29` AS DOUBLE) - 5.05357142857)) / 31.4435587159) + (-0.5 * 2.41608714977 - (0.5 * (CAST(`ADS`.`Feature_30` AS DOUBLE) - 0.303571428571) * (CAST(`ADS`.`Feature_30` AS DOUBLE) - 0.303571428571)) / 1.7828444302) + (-0.5 * -15.1371759627 - (0.5 * (CAST(`ADS`.`Feature_31` AS DOUBLE) - 0.0) * (CAST(`ADS`.`Feature_31` AS DOUBLE) - 0.0)) / 4.2445156522e-08) + (-0.5 * -15.1371759627 - (0.5 * (CAST(`ADS`.`Feature_32` AS DOUBLE) - 0.0) * (CAST(`ADS`.`Feature_32` AS DOUBLE) - 0.0)) / 4.2445156522e-08) + (-0.5 * 2.99501094004 - (0.5 * (CAST(`ADS`.`Feature_33` AS DOUBLE) - 0.875) * (CAST(`ADS`.`Feature_33` AS DOUBLE) - 0.875)) / 3.18080361387) + (-0.5 * 5.23283692427 - (0.5 * (CAST(`ADS`.`Feature_34` AS DOUBLE) - 6.16071428571) * (CAST(`ADS`.`Feature_34` AS DOUBLE) - 6.16071428571)) / 29.8134566751) + (-0.5 * 5.23914885148 - (0.5 * (CAST(`ADS`.`Feature_35` AS DOUBLE) - 11.875) * (CAST(`ADS`.`Feature_35` AS DOUBLE) - 11.875)) / 30.0022321853) + (-0.5 * 4.2002460958 - (0.5 * (CAST(`ADS`.`Feature_36` AS DOUBLE) - 13.75) * (CAST(`ADS`.`Feature_36` AS DOUBLE) - 13.75)) / 10.616071471) + (-0.5 * 5.18893292629 - (0.5 * (CAST(`ADS`.`Feature_37` AS DOUBLE) - 4.69642857143) * (CAST(`ADS`.`Feature_37` AS DOUBLE) - 4.69642857143)) / 28.5328444302) + (-0.5 * 2.73146302196 - (0.5 * (CAST(`ADS`.`Feature_38` AS DOUBLE) - 0.357142857143) * (CAST(`ADS`.`Feature_38` AS DOUBLE) - 0.357142857143)) / 2.44387759347) + (-0.5 * -15.1371759627 - (0.5 * (CAST(`ADS`.`Feature_39` AS DOUBLE) - 0.0) * (CAST(`ADS`.`Feature_39` AS DOUBLE) - 0.0)) / 4.2445156522e-08) + (-0.5 * -15.1371759627 - (0.5 * (CAST(`ADS`.`Feature_40` AS DOUBLE) - 0.0) * (CAST(`ADS`.`Feature_40` AS DOUBLE) - 0.0)) / 4.2445156522e-08) + (-0.5 * -0.092528603565 - (0.5 * (CAST(`ADS`.`Feature_41` AS DOUBLE) - 0.125) * (CAST(`ADS`.`Feature_41` AS DOUBLE) - 0.125)) / 0.145089328159) + (-0.5 * 5.37786542355 - (0.5 * (CAST(`ADS`.`Feature_42` AS DOUBLE) - 4.875) * (CAST(`ADS`.`Feature_42` AS DOUBLE) - 4.875)) / 34.4665178996) + (-0.5 * 5.49931060046 - (0.5 * (CAST(`ADS`.`Feature_43` AS DOUBLE) - 10.3928571429) * (CAST(`ADS`.`Feature_43` AS DOUBLE) - 10.3928571429)) / 38.9170918792) + (-0.5 * 4.23565638087 - (0.5 * (CAST(`ADS`.`Feature_44` AS DOUBLE) - 13.9642857143) * (CAST(`ADS`.`Feature_44` AS DOUBLE) - 13.9642857143)) / 10.9987245322) + (-0.5 * 5.30646882174 - (0.5 * (CAST(`ADS`.`Feature_45` AS DOUBLE) - 5.375) * (CAST(`ADS`.`Feature_45` AS DOUBLE) - 5.375)) / 32.0915178996) + (-0.5 * 2.56055830232 - (0.5 * (CAST(`ADS`.`Feature_46` AS DOUBLE) - 0.392857142857) * (CAST(`ADS`.`Feature_46` AS DOUBLE) - 0.392857142857)) / 2.05994902204) + (-0.5 * -15.1371759627 - (0.5 * (CAST(`ADS`.`Feature_47` AS DOUBLE) - 0.0) * (CAST(`ADS`.`Feature_47` AS DOUBLE) - 0.0)) / 4.2445156522e-08) + (-0.5 * -15.1371759627 - (0.5 * (CAST(`ADS`.`Feature_48` AS DOUBLE) - 0.0) * (CAST(`ADS`.`Feature_48` AS DOUBLE) - 0.0)) / 4.2445156522e-08) + (-0.5 * 0.0861231764788 - (0.5 * (CAST(`ADS`.`Feature_49` AS DOUBLE) - 0.0714285714286) * (CAST(`ADS`.`Feature_49` AS DOUBLE) - 0.0714285714286)) / 0.1734694302) + (-0.5 * 5.12931083051 - (0.5 * (CAST(`ADS`.`Feature_50` AS DOUBLE) - 5.10714285714) * (CAST(`ADS`.`Feature_50` AS DOUBLE) - 5.10714285714)) / 26.8813775935) + (-0.5 * 5.26483460219 - (0.5 * (CAST(`ADS`.`Feature_51` AS DOUBLE) - 11.3035714286) * (CAST(`ADS`.`Feature_51` AS DOUBLE) - 11.3035714286)) / 30.7828444302) + (-0.5 * 4.04861536757 - (0.5 * (CAST(`ADS`.`Feature_52` AS DOUBLE) - 14.1428571429) * (CAST(`ADS`.`Feature_52` AS DOUBLE) - 14.1428571429)) / 9.12244902204) + (-0.5 * 5.56307861074 - (0.5 * (CAST(`ADS`.`Feature_53` AS DOUBLE) - 7.85714285714) * (CAST(`ADS`.`Feature_53` AS DOUBLE) - 7.85714285714)) / 41.4795918792) + (-0.5 * 4.70413312747 - (0.5 * (CAST(`ADS`.`Feature_54` AS DOUBLE) - 2.51785714286) * (CAST(`ADS`.`Feature_54` AS DOUBLE) - 2.51785714286)) / 17.5711097363) + (-0.5 * 3.49001277212 - (0.5 * (CAST(`ADS`.`Feature_55` AS DOUBLE) - 0.821428571429) * (CAST(`ADS`.`Feature_55` AS DOUBLE) - 0.821428571429)) / 5.21811228734) + (-0.5 * -15.1371759627 - (0.5 * (CAST(`ADS`.`Feature_56` AS DOUBLE) - 0.0) * (CAST(`ADS`.`Feature_56` AS DOUBLE) - 0.0)) / 4.2445156522e-08) + (-0.5 * -15.1371759627 - (0.5 * (CAST(`ADS`.`Feature_57` AS DOUBLE) - 0.0) * (CAST(`ADS`.`Feature_57` AS DOUBLE) - 0.0)) / 4.2445156522e-08) + (-0.5 * 4.24543676259 - (0.5 * (CAST(`ADS`.`Feature_58` AS DOUBLE) - 2.51785714286) * (CAST(`ADS`.`Feature_58` AS DOUBLE) - 2.51785714286)) / 11.106824022) + (-0.5 * 5.22671092011 - (0.5 * (CAST(`ADS`.`Feature_59` AS DOUBLE) - 9.60714285714) * (CAST(`ADS`.`Feature_59` AS DOUBLE) - 9.60714285714)) / 29.6313775935) + (-0.5 * 3.6888596222 - (0.5 * (CAST(`ADS`.`Feature_60` AS DOUBLE) - 13.75) * (CAST(`ADS`.`Feature_60` AS DOUBLE) - 13.75)) / 6.36607147102) + (-0.5 * 5.43920000541 - (0.5 * (CAST(`ADS`.`Feature_61` AS DOUBLE) - 9.17857142857) * (CAST(`ADS`.`Feature_61` AS DOUBLE) - 9.17857142857)) / 36.6466837159) + (-0.5 * 5.43076769967 - (0.5 * (CAST(`ADS`.`Feature_62` AS DOUBLE) - 3.98214285714) * (CAST(`ADS`.`Feature_62` AS DOUBLE) - 3.98214285714)) / 36.3389668792) + (-0.5 * 4.79775413281 - (0.5 * (CAST(`ADS`.`Feature_63` AS DOUBLE) - 1.91071428571) * (CAST(`ADS`.`Feature_63` AS DOUBLE) - 1.91071428571)) / 19.2955995322) AS `Score_1`, NULL AS `LogProba_2`, NULL AS `Proba_2`, -1.93263561785 + (-0.5 * -15.1371759627 - (0.5 * (CAST(`ADS`.`Feature_0` AS DOUBLE) - 0.0) * (CAST(`ADS`.`Feature_0` AS DOUBLE) - 0.0)) / 4.2445156522e-08) + (-0.5 * 2.28634879043 - (0.5 * (CAST(`ADS`.`Feature_1` AS DOUBLE) - 0.815384615385) * (CAST(`ADS`.`Feature_1` AS DOUBLE) - 0.815384615385)) / 1.56591720221) + (-0.5 * 4.96447149472 - (0.5 * (CAST(`ADS`.`Feature_2` AS DOUBLE) - 9.13846153846) * (CAST(`ADS`.`Feature_2` AS DOUBLE) - 9.13846153846)) / 22.7962130602) + (-0.5 * 4.30547502149 - (0.5 * (CAST(`ADS`.`Feature_3` AS DOUBLE) - 14.0769230769) * (CAST(`ADS`.`Feature_3` AS DOUBLE) - 14.0769230769)) / 11.7940828827) + (-0.5 * 5.20264777813 - (0.5 * (CAST(`ADS`.`Feature_4` AS DOUBLE) - 8.89230769231) * (CAST(`ADS`.`Feature_4` AS DOUBLE) - 8.89230769231)) / 28.9268639478) + (-0.5 * 4.72529904972 - (0.5 * (CAST(`ADS`.`Feature_5` AS DOUBLE) - 2.26153846154) * (CAST(`ADS`.`Feature_5` AS DOUBLE) - 2.26153846154)) / 17.946982291) + (-0.5 * 1.16418446759 - (0.5 * (CAST(`ADS`.`Feature_6` AS DOUBLE) - 0.169230769231) * (CAST(`ADS`.`Feature_6` AS DOUBLE) - 0.169230769231)) / 0.509822527652) + (-0.5 * -15.1371759627 - (0.5 * (CAST(`ADS`.`Feature_7` AS DOUBLE) - 0.0) * (CAST(`ADS`.`Feature_7` AS DOUBLE) - 0.0)) / 4.2445156522e-08) + (-0.5 * -0.965719328392 - (0.5 * (CAST(`ADS`.`Feature_8` AS DOUBLE) - 0.0307692307692) * (CAST(`ADS`.`Feature_8` AS DOUBLE) - 0.0307692307692)) / 0.0605917584215) + (-0.5 * 4.75901331292 - (0.5 * (CAST(`ADS`.`Feature_9` AS DOUBLE) - 4.66153846154) * (CAST(`ADS`.`Feature_9` AS DOUBLE) - 4.66153846154)) / 18.5623669064) + (-0.5 * 4.73931166749 - (0.5 * (CAST(`ADS`.`Feature_10` AS DOUBLE) - 13.2769230769) * (CAST(`ADS`.`Feature_10` AS DOUBLE) - 13.2769230769)) / 18.2002367288) + (-0.5 * 4.0405829824 - (0.5 * (CAST(`ADS`.`Feature_11` AS DOUBLE) - 12.6769230769) * (CAST(`ADS`.`Feature_11` AS DOUBLE) - 12.6769230769)) / 9.04946749807) + (-0.5 * 4.44089105042 - (0.5 * (CAST(`ADS`.`Feature_12` AS DOUBLE) - 12.4153846154) * (CAST(`ADS`.`Feature_12` AS DOUBLE) - 12.4153846154)) / 13.5043787407) + (-0.5 * 5.31211225204 - (0.5 * (CAST(`ADS`.`Feature_13` AS DOUBLE) - 5.13846153846) * (CAST(`ADS`.`Feature_13` AS DOUBLE) - 5.13846153846)) / 32.2731361371) + (-0.5 * 3.07541054823 - (0.5 * (CAST(`ADS`.`Feature_14` AS DOUBLE) - 0.446153846154) * (CAST(`ADS`.`Feature_14` AS DOUBLE) - 0.446153846154)) / 3.44710063416) + (-0.5 * -15.1371759627 - (0.5 * (CAST(`ADS`.`Feature_15` AS DOUBLE) - 0.0) * (CAST(`ADS`.`Feature_15` AS DOUBLE) - 0.0)) / 4.2445156522e-08) + (-0.5 * -15.1371759627 - (0.5 * (CAST(`ADS`.`Feature_16` AS DOUBLE) - 0.0) * (CAST(`ADS`.`Feature_16` AS DOUBLE) - 0.0)) / 4.2445156522e-08) + (-0.5 * 4.96588254681 - (0.5 * (CAST(`ADS`.`Feature_17` AS DOUBLE) - 4.30769230769) * (CAST(`ADS`.`Feature_17` AS DOUBLE) - 4.30769230769)) / 22.8284024093) + (-0.5 * 5.08881101082 - (0.5 * (CAST(`ADS`.`Feature_18` AS DOUBLE) - 7.96923076923) * (CAST(`ADS`.`Feature_18` AS DOUBLE) - 7.96923076923)) / 25.8144379123) + (-0.5 * 4.85171660101 - (0.5 * (CAST(`ADS`.`Feature_19` AS DOUBLE) - 5.13846153846) * (CAST(`ADS`.`Feature_19` AS DOUBLE) - 5.13846153846)) / 20.3654438294) + (-0.5 * 4.72331887719 - (0.5 * (CAST(`ADS`.`Feature_20` AS DOUBLE) - 11.4923076923) * (CAST(`ADS`.`Feature_20` AS DOUBLE) - 11.4923076923)) / 17.9114793324) + (-0.5 * 5.28310832176 - (0.5 * (CAST(`ADS`.`Feature_21` AS DOUBLE) - 5.81538461538) * (CAST(`ADS`.`Feature_21` AS DOUBLE) - 5.81538461538)) / 31.3505325868) + (-0.5 * 3.12836409442 - (0.5 * (CAST(`ADS`.`Feature_22` AS DOUBLE) - 0.492307692308) * (CAST(`ADS`.`Feature_22` AS DOUBLE) - 0.492307692308)) / 3.63455625546) + (-0.5 * -15.1371759627 - (0.5 * (CAST(`ADS`.`Feature_23` AS DOUBLE) - 0.0) * (CAST(`ADS`.`Feature_23` AS DOUBLE) - 0.0)) / 4.2445156522e-08) + (-0.5 * -15.1371759627 - (0.5 * (CAST(`ADS`.`Feature_24` AS DOUBLE) - 0.0) * (CAST(`ADS`.`Feature_24` AS DOUBLE) - 0.0)) / 4.2445156522e-08) + (-0.5 * 3.49758053442 - (0.5 * (CAST(`ADS`.`Feature_25` AS DOUBLE) - 0.938461538462) * (CAST(`ADS`.`Feature_25` AS DOUBLE) - 0.938461538462)) / 5.25775152174) + (-0.5 * 4.12095960975 - (0.5 * (CAST(`ADS`.`Feature_26` AS DOUBLE) - 2.09230769231) * (CAST(`ADS`.`Feature_26` AS DOUBLE) - 2.09230769231)) / 9.80686394777) + (-0.5 * 5.02685718197 - (0.5 * (CAST(`ADS`.`Feature_27` AS DOUBLE) - 4.83076923077) * (CAST(`ADS`.`Feature_27` AS DOUBLE) - 4.83076923077)) / 24.2636686815) + (-0.5 * 4.59005173457 - (0.5 * (CAST(`ADS`.`Feature_28` AS DOUBLE) - 11.7846153846) * (CAST(`ADS`.`Feature_28` AS DOUBLE) - 11.7846153846)) / 15.676686433) + (-0.5 * 5.06346169946 - (0.5 * (CAST(`ADS`.`Feature_29` AS DOUBLE) - 4.43076923077) * (CAST(`ADS`.`Feature_29` AS DOUBLE) - 4.43076923077)) / 25.1682840661) + (-0.5 * 2.20087520175 - (0.5 * (CAST(`ADS`.`Feature_30` AS DOUBLE) - 0.292307692308) * (CAST(`ADS`.`Feature_30` AS DOUBLE) - 0.292307692308)) / 1.43763317854) + (-0.5 * -15.1371759627 - (0.5 * (CAST(`ADS`.`Feature_31` AS DOUBLE) - 0.0) * (CAST(`ADS`.`Feature_31` AS DOUBLE) - 0.0)) / 4.2445156522e-08) + (-0.5 * -15.1371759627 - (0.5 * (CAST(`ADS`.`Feature_32` AS DOUBLE) - 0.0) * (CAST(`ADS`.`Feature_32` AS DOUBLE) - 0.0)) / 4.2445156522e-08) + (-0.5 * 0.567444257382 - (0.5 * (CAST(`ADS`.`Feature_33` AS DOUBLE) - 0.107692307692) * (CAST(`ADS`.`Feature_33` AS DOUBLE) - 0.107692307692)) / 0.280710101617) + (-0.5 * 3.88196732761 - (0.5 * (CAST(`ADS`.`Feature_34` AS DOUBLE) - 1.43076923077) * (CAST(`ADS`.`Feature_34` AS DOUBLE) - 1.43076923077)) / 7.72213021996) + (-0.5 * 5.44096656091 - (0.5 * (CAST(`ADS`.`Feature_35` AS DOUBLE) - 8.49230769231) * (CAST(`ADS`.`Feature_35` AS DOUBLE) - 8.49230769231)) / 36.7114793324) + (-0.5 * 4.81971443691 - (0.5 * (CAST(`ADS`.`Feature_36` AS DOUBLE) - 10.4461538462) * (CAST(`ADS`.`Feature_36` AS DOUBLE) - 10.4461538462)) / 19.7240237111) + (-0.5 * 4.70073369414 - (0.5 * (CAST(`ADS`.`Feature_37` AS DOUBLE) - 2.50769230769) * (CAST(`ADS`.`Feature_37` AS DOUBLE) - 2.50769230769)) / 17.5114793324) + (-0.5 * 0.473819012783 - (0.5 * (CAST(`ADS`.`Feature_38` AS DOUBLE) - 0.0769230769231) * (CAST(`ADS`.`Feature_38` AS DOUBLE) - 0.0769230769231)) / 0.25562134422) + (-0.5 * -15.1371759627 - (0.5 * (CAST(`ADS`.`Feature_39` AS DOUBLE) - 0.0) * (CAST(`ADS`.`Feature_39` AS DOUBLE) - 0.0)) / 4.2445156522e-08) + (-0.5 * -15.1371759627 - (0.5 * (CAST(`ADS`.`Feature_40` AS DOUBLE) - 0.0) * (CAST(`ADS`.`Feature_40` AS DOUBLE) - 0.0)) / 4.2445156522e-08) + (-0.5 * 3.21561421939 - (0.5 * (CAST(`ADS`.`Feature_41` AS DOUBLE) - 0.815384615385) * (CAST(`ADS`.`Feature_41` AS DOUBLE) - 0.815384615385)) / 3.96591720221) + (-0.5 * 5.32464758022 - (0.5 * (CAST(`ADS`.`Feature_42` AS DOUBLE) - 5.52307692308) * (CAST(`ADS`.`Feature_42` AS DOUBLE) - 5.52307692308)) / 32.6802367288) + (-0.5 * 4.78776985008 - (0.5 * (CAST(`ADS`.`Feature_43` AS DOUBLE) - 11.8615384615) * (CAST(`ADS`.`Feature_43` AS DOUBLE) - 11.8615384615)) / 19.1039053679) + (-0.5 * 5.34068355857 - (0.5 * (CAST(`ADS`.`Feature_44` AS DOUBLE) - 7.66153846154) * (CAST(`ADS`.`Feature_44` AS DOUBLE) - 7.66153846154)) / 33.2085207525) + (-0.5 * 4.27582028861 - (0.5 * (CAST(`ADS`.`Feature_45` AS DOUBLE) - 2.47692307692) * (CAST(`ADS`.`Feature_45` AS DOUBLE) - 2.47692307692)) / 11.4494674981) + (-0.5 * 3.3967812927 - (0.5 * (CAST(`ADS`.`Feature_46` AS DOUBLE) - 1.01538461538) * (CAST(`ADS`.`Feature_46` AS DOUBLE) - 1.01538461538)) / 4.7536095099) + (-0.5 * -15.1371759627 - (0.5 * (CAST(`ADS`.`Feature_47` AS DOUBLE) - 0.0) * (CAST(`ADS`.`Feature_47` AS DOUBLE) - 0.0)) / 4.2445156522e-08) + (-0.5 * -0.154789501348 - (0.5 * (CAST(`ADS`.`Feature_48` AS DOUBLE) - 0.0461538461538) * (CAST(`ADS`.`Feature_48` AS DOUBLE) - 0.0461538461538)) / 0.136331403392) + (-0.5 * 4.06466683367 - (0.5 * (CAST(`ADS`.`Feature_49` AS DOUBLE) - 1.66153846154) * (CAST(`ADS`.`Feature_49` AS DOUBLE) - 1.66153846154)) / 9.27005921404) + (-0.5 * 4.89839931076 - (0.5 * (CAST(`ADS`.`Feature_50` AS DOUBLE) - 11.2769230769) * (CAST(`ADS`.`Feature_50` AS DOUBLE) - 11.2769230769)) / 21.3386982673) + (-0.5 * 3.4477409321 - (0.5 * (CAST(`ADS`.`Feature_51` AS DOUBLE) - 14.6307692308) * (CAST(`ADS`.`Feature_51` AS DOUBLE) - 14.6307692308)) / 5.00213021996) + (-0.5 * 4.26826713188 - (0.5 * (CAST(`ADS`.`Feature_52` AS DOUBLE) - 13.0769230769) * (CAST(`ADS`.`Feature_52` AS DOUBLE) - 13.0769230769)) / 11.3633136519) + (-0.5 * 4.57102967044 - (0.5 * (CAST(`ADS`.`Feature_53` AS DOUBLE) - 11.4153846154) * (CAST(`ADS`.`Feature_53` AS DOUBLE) - 11.4153846154)) / 15.3813018176) + (-0.5 * 4.92741220014 - (0.5 * (CAST(`ADS`.`Feature_54` AS DOUBLE) - 7.69230769231) * (CAST(`ADS`.`Feature_54` AS DOUBLE) - 7.69230769231)) / 21.9668639478) + (-0.5 * 2.84665529375 - (0.5 * (CAST(`ADS`.`Feature_55` AS DOUBLE) - 0.892307692308) * (CAST(`ADS`.`Feature_55` AS DOUBLE) - 0.892307692308)) / 2.74224856316) + (-0.5 * -2.35201158798 - (0.5 * (CAST(`ADS`.`Feature_56` AS DOUBLE) - 0.0153846153846) * (CAST(`ADS`.`Feature_56` AS DOUBLE) - 0.0153846153846)) / 0.0151479714392) + (-0.5 * 2.64562011082 - (0.5 * (CAST(`ADS`.`Feature_57` AS DOUBLE) - 0.815384615385) * (CAST(`ADS`.`Feature_57` AS DOUBLE) - 0.815384615385)) / 2.24284027913) + (-0.5 * 5.09966274184 - (0.5 * (CAST(`ADS`.`Feature_58` AS DOUBLE) - 9.49230769231) * (CAST(`ADS`.`Feature_58` AS DOUBLE) - 9.49230769231)) / 26.096094717) + (-0.5 * 4.37717477502 - (0.5 * (CAST(`ADS`.`Feature_59` AS DOUBLE) - 13.6) * (CAST(`ADS`.`Feature_59` AS DOUBLE) - 13.6)) / 12.6707692732) + (-0.5 * 4.18408827012 - (0.5 * (CAST(`ADS`.`Feature_60` AS DOUBLE) - 12.7846153846) * (CAST(`ADS`.`Feature_60` AS DOUBLE) - 12.7846153846)) / 10.4459172022) + (-0.5 * 4.71322529386 - (0.5 * (CAST(`ADS`.`Feature_61` AS DOUBLE) - 11.6615384615) * (CAST(`ADS`.`Feature_61` AS DOUBLE) - 11.6615384615)) / 17.7315976756) + (-0.5 * 5.26459223744 - (0.5 * (CAST(`ADS`.`Feature_62` AS DOUBLE) - 8.2) * (CAST(`ADS`.`Feature_62` AS DOUBLE) - 8.2)) / 30.7753846578) + (-0.5 * 4.73996168506 - (0.5 * (CAST(`ADS`.`Feature_63` AS DOUBLE) - 2.41538461538) * (CAST(`ADS`.`Feature_63` AS DOUBLE) - 2.41538461538)) / 18.2120710484) AS `Score_2`, NULL AS `LogProba_3`, NULL AS `Proba_3`, -2.36935326946 + (-0.5 * -15.1371759627 - (0.5 * (CAST(`ADS`.`Feature_0` AS DOUBLE) - 0.0) * (CAST(`ADS`.`Feature_0` AS DOUBLE) - 0.0)) / 4.2445156522e-08) + (-0.5 * 1.77951749622 - (0.5 * (CAST(`ADS`.`Feature_1` AS DOUBLE) - 0.761904761905) * (CAST(`ADS`.`Feature_1` AS DOUBLE) - 0.761904761905)) / 0.943310700042) + (-0.5 * 4.43901183884 - (0.5 * (CAST(`ADS`.`Feature_2` AS DOUBLE) - 9.2619047619) * (CAST(`ADS`.`Feature_2` AS DOUBLE) - 9.2619047619)) / 13.4790249858) + (-0.5 * 3.42762119782 - (0.5 * (CAST(`ADS`.`Feature_3` AS DOUBLE) - 14.380952381) * (CAST(`ADS`.`Feature_3` AS DOUBLE) - 14.380952381)) / 4.90249437351) + (-0.5 * 3.0459232088 - (0.5 * (CAST(`ADS`.`Feature_4` AS DOUBLE) - 14.7142857143) * (CAST(`ADS`.`Feature_4` AS DOUBLE) - 14.7142857143)) / 3.34693881796) + (-0.5 * 4.7464742718 - (0.5 * (CAST(`ADS`.`Feature_5` AS DOUBLE) - 8.38095238095) * (CAST(`ADS`.`Feature_5` AS DOUBLE) - 8.38095238095)) / 18.3310658021) + (-0.5 * 3.61794717234 - (0.5 * (CAST(`ADS`.`Feature_6` AS DOUBLE) - 0.785714285714) * (CAST(`ADS`.`Feature_6` AS DOUBLE) - 0.785714285714)) / 5.93027215129) + (-0.5 * -1.92388827728 - (0.5 * (CAST(`ADS`.`Feature_7` AS DOUBLE) - 0.0238095238095) * (CAST(`ADS`.`Feature_7` AS DOUBLE) - 0.0238095238095)) / 0.0232426728306) + (-0.5 * -15.1371759627 - (0.5 * (CAST(`ADS`.`Feature_8` AS DOUBLE) - 0.0) * (CAST(`ADS`.`Feature_8` AS DOUBLE) - 0.0)) / 4.2445156522e-08) + (-0.5 * 4.62009193003 - (0.5 * (CAST(`ADS`.`Feature_9` AS DOUBLE) - 4.5) * (CAST(`ADS`.`Feature_9` AS DOUBLE) - 4.5)) / 16.1547619472) + (-0.5 * 4.513510268 - (0.5 * (CAST(`ADS`.`Feature_10` AS DOUBLE) - 12.380952381) * (CAST(`ADS`.`Feature_10` AS DOUBLE) - 12.380952381)) / 14.5215419926) + (-0.5 * 4.10491722638 - (0.5 * (CAST(`ADS`.`Feature_11` AS DOUBLE) - 8.66666666667) * (CAST(`ADS`.`Feature_11` AS DOUBLE) - 8.66666666667)) / 9.65079369324) + (-0.5 * 4.67055672382 - (0.5 * (CAST(`ADS`.`Feature_12` AS DOUBLE) - 11.0952380952) * (CAST(`ADS`.`Feature_12` AS DOUBLE) - 11.0952380952)) / 16.9909297477) + (-0.5 * 4.66988921162 - (0.5 * (CAST(`ADS`.`Feature_13` AS DOUBLE) - 12.8571428571) * (CAST(`ADS`.`Feature_13` AS DOUBLE) - 12.8571428571)) / 16.9795918792) + (-0.5 * 4.46491722696 - (0.5 * (CAST(`ADS`.`Feature_14` AS DOUBLE) - 2.30952380952) * (CAST(`ADS`.`Feature_14` AS DOUBLE) - 2.30952380952)) / 13.8327664824) + (-0.5 * -1.92388827728 - (0.5 * (CAST(`ADS`.`Feature_15` AS DOUBLE) - 0.0238095238095) * (CAST(`ADS`.`Feature_15` AS DOUBLE) - 0.0238095238095)) / 0.0232426728306) + (-0.5 * -15.1371759627 - (0.5 * (CAST(`ADS`.`Feature_16` AS DOUBLE) - 0.0) * (CAST(`ADS`.`Feature_16` AS DOUBLE) - 0.0)) / 4.2445156522e-08) + (-0.5 * 3.79000368683 - (0.5 * (CAST(`ADS`.`Feature_17` AS DOUBLE) - 1.83333333333) * (CAST(`ADS`.`Feature_17` AS DOUBLE) - 1.83333333333)) / 7.0436508361) + (-0.5 * 4.40630893108 - (0.5 * (CAST(`ADS`.`Feature_18` AS DOUBLE) - 2.95238095238) * (CAST(`ADS`.`Feature_18` AS DOUBLE) - 2.95238095238)) / 13.0453515164) + (-0.5 * 4.16648125618 - (0.5 * (CAST(`ADS`.`Feature_19` AS DOUBLE) - 2.78571428571) * (CAST(`ADS`.`Feature_19` AS DOUBLE) - 2.78571428571)) / 10.2636054846) + (-0.5 * 4.68447252717 - (0.5 * (CAST(`ADS`.`Feature_20` AS DOUBLE) - 12.0952380952) * (CAST(`ADS`.`Feature_20` AS DOUBLE) - 12.0952380952)) / 17.2290249858) + (-0.5 * 5.0003385001 - (0.5 * (CAST(`ADS`.`Feature_21` AS DOUBLE) - 9.45238095238) * (CAST(`ADS`.`Feature_21` AS DOUBLE) - 9.45238095238)) / 23.6286848497) + (-0.5 * 3.41235728377 - (0.5 * (CAST(`ADS`.`Feature_22` AS DOUBLE) - 1.07142857143) * (CAST(`ADS`.`Feature_22` AS DOUBLE) - 1.07142857143)) / 4.82823133496) + (-0.5 * -15.1371759627 - (0.5 * (CAST(`ADS`.`Feature_23` AS DOUBLE) - 0.0) * (CAST(`ADS`.`Feature_23` AS DOUBLE) - 0.0)) / 4.2445156522e-08) + (-0.5 * -15.1371759627 - (0.5 * (CAST(`ADS`.`Feature_24` AS DOUBLE) - 0.0) * (CAST(`ADS`.`Feature_24` AS DOUBLE) - 0.0)) / 4.2445156522e-08) + (-0.5 * 1.65962888573 - (0.5 * (CAST(`ADS`.`Feature_25` AS DOUBLE) - 0.142857142857) * (CAST(`ADS`.`Feature_25` AS DOUBLE) - 0.142857142857)) / 0.836734736323) + (-0.5 * 3.80842452577 - (0.5 * (CAST(`ADS`.`Feature_26` AS DOUBLE) - 1.33333333333) * (CAST(`ADS`.`Feature_26` AS DOUBLE) - 1.33333333333)) / 7.17460321705) + (-0.5 * 5.20033283551 - (0.5 * (CAST(`ADS`.`Feature_27` AS DOUBLE) - 8.7380952381) * (CAST(`ADS`.`Feature_27` AS DOUBLE) - 8.7380952381)) / 28.8599773667) + (-0.5 * 4.48101578996 - (0.5 * (CAST(`ADS`.`Feature_28` AS DOUBLE) - 13.880952381) * (CAST(`ADS`.`Feature_28` AS DOUBLE) - 13.880952381)) / 14.0572562783) + (-0.5 * 4.657695782 - (0.5 * (CAST(`ADS`.`Feature_29` AS DOUBLE) - 5.5) * (CAST(`ADS`.`Feature_29` AS DOUBLE) - 5.5)) / 16.7738095663) + (-0.5 * -1.92388827728 - (0.5 * (CAST(`ADS`.`Feature_30` AS DOUBLE) - 0.0238095238095) * (CAST(`ADS`.`Feature_30` AS DOUBLE) - 0.0238095238095)) / 0.0232426728306) + (-0.5 * -15.1371759627 - (0.5 * (CAST(`ADS`.`Feature_31` AS DOUBLE) - 0.0) * (CAST(`ADS`.`Feature_31` AS DOUBLE) - 0.0)) / 4.2445156522e-08) + (-0.5 * -15.1371759627 - (0.5 * (CAST(`ADS`.`Feature_32` AS DOUBLE) - 0.0) * (CAST(`ADS`.`Feature_32` AS DOUBLE) - 0.0)) / 4.2445156522e-08) + (-0.5 * -1.92388827728 - (0.5 * (CAST(`ADS`.`Feature_33` AS DOUBLE) - 0.0238095238095) * (CAST(`ADS`.`Feature_33` AS DOUBLE) - 0.0238095238095)) / 0.0232426728306) + (-0.5 * 3.71376994702 - (0.5 * (CAST(`ADS`.`Feature_34` AS DOUBLE) - 1.2619047619) * (CAST(`ADS`.`Feature_34` AS DOUBLE) - 1.2619047619)) / 6.52664403337) + (-0.5 * 5.34191478522 - (0.5 * (CAST(`ADS`.`Feature_35` AS DOUBLE) - 6.47619047619) * (CAST(`ADS`.`Feature_35` AS DOUBLE) - 6.47619047619)) / 33.249433149) + (-0.5 * 4.73405832343 - (0.5 * (CAST(`ADS`.`Feature_36` AS DOUBLE) - 12.4523809524) * (CAST(`ADS`.`Feature_36` AS DOUBLE) - 12.4523809524)) / 18.1048753259) + (-0.5 * 5.00493433842 - (0.5 * (CAST(`ADS`.`Feature_37` AS DOUBLE) - 10.6904761905) * (CAST(`ADS`.`Feature_37` AS DOUBLE) - 10.6904761905)) / 23.7375283871) + (-0.5 * 3.48163972959 - (0.5 * (CAST(`ADS`.`Feature_38` AS DOUBLE) - 1.66666666667) * (CAST(`ADS`.`Feature_38` AS DOUBLE) - 1.66666666667)) / 5.17460321705) + (-0.5 * -15.1371759627 - (0.5 * (CAST(`ADS`.`Feature_39` AS DOUBLE) - 0.0) * (CAST(`ADS`.`Feature_39` AS DOUBLE) - 0.0)) / 4.2445156522e-08) + (-0.5 * -15.1371759627 - (0.5 * (CAST(`ADS`.`Feature_40` AS DOUBLE) - 0.0) * (CAST(`ADS`.`Feature_40` AS DOUBLE) - 0.0)) / 4.2445156522e-08) + (-0.5 * 1.65962888573 - (0.5 * (CAST(`ADS`.`Feature_41` AS DOUBLE) - 0.142857142857) * (CAST(`ADS`.`Feature_41` AS DOUBLE) - 0.142857142857)) / 0.836734736323) + (-0.5 * 3.76316793445 - (0.5 * (CAST(`ADS`.`Feature_42` AS DOUBLE) - 1.0) * (CAST(`ADS`.`Feature_42` AS DOUBLE) - 1.0)) / 6.85714289959) + (-0.5 * 4.53940567297 - (0.5 * (CAST(`ADS`.`Feature_43` AS DOUBLE) - 1.61904761905) * (CAST(`ADS`.`Feature_43` AS DOUBLE) - 1.61904761905)) / 14.9024943735) + (-0.5 * 5.42248196191 - (0.5 * (CAST(`ADS`.`Feature_44` AS DOUBLE) - 5.64285714286) * (CAST(`ADS`.`Feature_44` AS DOUBLE) - 5.64285714286)) / 36.0391156887) + (-0.5 * 4.28842268348 - (0.5 * (CAST(`ADS`.`Feature_45` AS DOUBLE) - 11.6904761905) * (CAST(`ADS`.`Feature_45` AS DOUBLE) - 11.6904761905)) / 11.5946712443) + (-0.5 * 5.02299207741 - (0.5 * (CAST(`ADS`.`Feature_46` AS DOUBLE) - 6.14285714286) * (CAST(`ADS`.`Feature_46` AS DOUBLE) - 6.14285714286)) / 24.1700680697) + (-0.5 * -15.1371759627 - (0.5 * (CAST(`ADS`.`Feature_47` AS DOUBLE) - 0.0) * (CAST(`ADS`.`Feature_47` AS DOUBLE) - 0.0)) / 4.2445156522e-08) + (-0.5 * -15.1371759627 - (0.5 * (CAST(`ADS`.`Feature_48` AS DOUBLE) - 0.0) * (CAST(`ADS`.`Feature_48` AS DOUBLE) - 0.0)) / 4.2445156522e-08) + (-0.5 * 1.84070756633 - (0.5 * (CAST(`ADS`.`Feature_49` AS DOUBLE) - 0.404761904762) * (CAST(`ADS`.`Feature_49` AS DOUBLE) - 0.404761904762)) / 1.00283450957) + (-0.5 * 5.03634191744 - (0.5 * (CAST(`ADS`.`Feature_50` AS DOUBLE) - 5.92857142857) * (CAST(`ADS`.`Feature_50` AS DOUBLE) - 5.92857142857)) / 24.4948980016) + (-0.5 * 4.70904314894 - (0.5 * (CAST(`ADS`.`Feature_51` AS DOUBLE) - 6.2380952381) * (CAST(`ADS`.`Feature_51` AS DOUBLE) - 6.2380952381)) / 17.6575964143) + (-0.5 * 5.24932034443 - (0.5 * (CAST(`ADS`.`Feature_52` AS DOUBLE) - 8.69047619048) * (CAST(`ADS`.`Feature_52` AS DOUBLE) - 8.69047619048)) / 30.3089569585) + (-0.5 * 4.50869701644 - (0.5 * (CAST(`ADS`.`Feature_53` AS DOUBLE) - 11.9761904762) * (CAST(`ADS`.`Feature_53` AS DOUBLE) - 11.9761904762)) / 14.4518141014) + (-0.5 * 5.02853536774 - (0.5 * (CAST(`ADS`.`Feature_54` AS DOUBLE) - 5.92857142857) * (CAST(`ADS`.`Feature_54` AS DOUBLE) - 5.92857142857)) / 24.3044218112) + (-0.5 * -15.1371759627 - (0.5 * (CAST(`ADS`.`Feature_55` AS DOUBLE) - 0.0) * (CAST(`ADS`.`Feature_55` AS DOUBLE) - 0.0)) / 4.2445156522e-08) + (-0.5 * -15.1371759627 - (0.5 * (CAST(`ADS`.`Feature_56` AS DOUBLE) - 0.0) * (CAST(`ADS`.`Feature_56` AS DOUBLE) - 0.0)) / 4.2445156522e-08) + (-0.5 * 2.15447381771 - (0.5 * (CAST(`ADS`.`Feature_57` AS DOUBLE) - 0.642857142857) * (CAST(`ADS`.`Feature_57` AS DOUBLE) - 0.642857142857)) / 1.37244902204) + (-0.5 * 4.73155024926 - (0.5 * (CAST(`ADS`.`Feature_58` AS DOUBLE) - 10.5) * (CAST(`ADS`.`Feature_58` AS DOUBLE) - 10.5)) / 18.059523852) + (-0.5 * 2.87752861271 - (0.5 * (CAST(`ADS`.`Feature_59` AS DOUBLE) - 15.0714285714) * (CAST(`ADS`.`Feature_59` AS DOUBLE) - 15.0714285714)) / 2.82823133496) + (-0.5 * 4.15894116394 - (0.5 * (CAST(`ADS`.`Feature_60` AS DOUBLE) - 13.8333333333) * (CAST(`ADS`.`Feature_60` AS DOUBLE) - 13.8333333333)) / 10.186507979) + (-0.5 * 5.02776535615 - (0.5 * (CAST(`ADS`.`Feature_61` AS DOUBLE) - 8.0) * (CAST(`ADS`.`Feature_61` AS DOUBLE) - 8.0)) / 24.2857143282) + (-0.5 * 3.2510186879 - (0.5 * (CAST(`ADS`.`Feature_62` AS DOUBLE) - 1.28571428571) * (CAST(`ADS`.`Feature_62` AS DOUBLE) - 1.28571428571)) / 4.10884357986) + (-0.5 * -15.1371759627 - (0.5 * (CAST(`ADS`.`Feature_63` AS DOUBLE) - 0.0) * (CAST(`ADS`.`Feature_63` AS DOUBLE) - 0.0)) / 4.2445156522e-08) AS `Score_3`, NULL AS `LogProba_4`, NULL AS `Proba_4`, -2.52350394929 + (-0.5 * -15.1371759627 - (0.5 * (CAST(`ADS`.`Feature_0` AS DOUBLE) - 0.0) * (CAST(`ADS`.`Feature_0` AS DOUBLE) - 0.0)) / 4.2445156522e-08) + (-0.5 * -15.1371759627 - (0.5 * (CAST(`ADS`.`Feature_1` AS DOUBLE) - 0.0) * (CAST(`ADS`.`Feature_1` AS DOUBLE) - 0.0)) / 4.2445156522e-08) + (-0.5 * 3.18562950733 - (0.5 * (CAST(`ADS`.`Feature_2` AS DOUBLE) - 0.611111111111) * (CAST(`ADS`.`Feature_2` AS DOUBLE) - 0.611111111111)) / 3.84876547454) + (-0.5 * 5.01679857754 - (0.5 * (CAST(`ADS`.`Feature_3` AS DOUBLE) - 6.75) * (CAST(`ADS`.`Feature_3` AS DOUBLE) - 6.75)) / 24.0208333758) + (-0.5 * 4.66722492691 - (0.5 * (CAST(`ADS`.`Feature_4` AS DOUBLE) - 11.8055555556) * (CAST(`ADS`.`Feature_4` AS DOUBLE) - 11.8055555556)) / 16.9344136227) + (-0.5 * 3.71488882825 - (0.5 * (CAST(`ADS`.`Feature_5` AS DOUBLE) - 1.72222222222) * (CAST(`ADS`.`Feature_5` AS DOUBLE) - 1.72222222222)) / 6.53395065973) + (-0.5 * 1.8097062331 - (0.5 * (CAST(`ADS`.`Feature_6` AS DOUBLE) - 0.166666666667) * (CAST(`ADS`.`Feature_6` AS DOUBLE) - 0.166666666667)) / 0.972222264667) + (-0.5 * -15.1371759627 - (0.5 * (CAST(`ADS`.`Feature_7` AS DOUBLE) - 0.0) * (CAST(`ADS`.`Feature_7` AS DOUBLE) - 0.0)) / 4.2445156522e-08) + (-0.5 * -15.1371759627 - (0.5 * (CAST(`ADS`.`Feature_8` AS DOUBLE) - 0.0) * (CAST(`ADS`.`Feature_8` AS DOUBLE) - 0.0)) / 4.2445156522e-08) + (-0.5 * 1.47323401394 - (0.5 * (CAST(`ADS`.`Feature_9` AS DOUBLE) - 0.166666666667) * (CAST(`ADS`.`Feature_9` AS DOUBLE) - 0.166666666667)) / 0.69444448689) + (-0.5 * 4.71387127186 - (0.5 * (CAST(`ADS`.`Feature_10` AS DOUBLE) - 3.41666666667) * (CAST(`ADS`.`Feature_10` AS DOUBLE) - 3.41666666667)) / 17.743055598) + (-0.5 * 4.45616238678 - (0.5 * (CAST(`ADS`.`Feature_11` AS DOUBLE) - 12.6944444444) * (CAST(`ADS`.`Feature_11` AS DOUBLE) - 12.6944444444)) / 13.7121914005) + (-0.5 * 5.14674593136 - (0.5 * (CAST(`ADS`.`Feature_12` AS DOUBLE) - 8.41666666667) * (CAST(`ADS`.`Feature_12` AS DOUBLE) - 8.41666666667)) / 27.3541667091) + (-0.5 * 4.31730319409 - (0.5 * (CAST(`ADS`.`Feature_13` AS DOUBLE) - 1.69444444444) * (CAST(`ADS`.`Feature_13` AS DOUBLE) - 1.69444444444)) / 11.9344136227) + (-0.5 * 3.85647695447 - (0.5 * (CAST(`ADS`.`Feature_14` AS DOUBLE) - 0.833333333333) * (CAST(`ADS`.`Feature_14` AS DOUBLE) - 0.833333333333)) / 7.52777782022) + (-0.5 * -1.10965229637 - (0.5 * (CAST(`ADS`.`Feature_15` AS DOUBLE) - 0.0555555555556) * (CAST(`ADS`.`Feature_15` AS DOUBLE) - 0.0555555555556)) / 0.0524691782476) + (-0.5 * -15.1371759627 - (0.5 * (CAST(`ADS`.`Feature_16` AS DOUBLE) - 0.0) * (CAST(`ADS`.`Feature_16` AS DOUBLE) - 0.0)) / 4.2445156522e-08) + (-0.5 * 2.89124230423 - (0.5 * (CAST(`ADS`.`Feature_17` AS DOUBLE) - 0.722222222222) * (CAST(`ADS`.`Feature_17` AS DOUBLE) - 0.722222222222)) / 2.86728399306) + (-0.5 * 5.12438269588 - (0.5 * (CAST(`ADS`.`Feature_18` AS DOUBLE) - 10.0277777778) * (CAST(`ADS`.`Feature_18` AS DOUBLE) - 10.0277777778)) / 26.7492284375) + (-0.5 * 4.42605872855 - (0.5 * (CAST(`ADS`.`Feature_19` AS DOUBLE) - 11.5) * (CAST(`ADS`.`Feature_19` AS DOUBLE) - 11.5)) / 13.305555598) + (-0.5 * 5.18582993504 - (0.5 * (CAST(`ADS`.`Feature_20` AS DOUBLE) - 4.66666666667) * (CAST(`ADS`.`Feature_20` AS DOUBLE) - 4.66666666667)) / 28.4444444869) + (-0.5 * 5.09273355746 - (0.5 * (CAST(`ADS`.`Feature_21` AS DOUBLE) - 5.52777777778) * (CAST(`ADS`.`Feature_21` AS DOUBLE) - 5.52777777778)) / 25.9158951042) + (-0.5 * 5.16510891744 - (0.5 * (CAST(`ADS`.`Feature_22` AS DOUBLE) - 3.83333333333) * (CAST(`ADS`.`Feature_22` AS DOUBLE) - 3.83333333333)) / 27.8611111536) + (-0.5 * 1.12446427502 - (0.5 * (CAST(`ADS`.`Feature_23` AS DOUBLE) - 0.194444444444) * (CAST(`ADS`.`Feature_23` AS DOUBLE) - 0.194444444444)) / 0.489969178248) + (-0.5 * -15.1371759627 - (0.5 * (CAST(`ADS`.`Feature_24` AS DOUBLE) - 0.0) * (CAST(`ADS`.`Feature_24` AS DOUBLE) - 0.0)) / 4.2445156522e-08) + (-0.5 * 3.89705291604 - (0.5 * (CAST(`ADS`.`Feature_25` AS DOUBLE) - 4.22222222222) * (CAST(`ADS`.`Feature_25` AS DOUBLE) - 4.22222222222)) / 7.83950621528) + (-0.5 * 3.97866918774 - (0.5 * (CAST(`ADS`.`Feature_26` AS DOUBLE) - 14.2222222222) * (CAST(`ADS`.`Feature_26` AS DOUBLE) - 14.2222222222)) / 8.50617288195) + (-0.5 * 4.97695449716 - (0.5 * (CAST(`ADS`.`Feature_27` AS DOUBLE) - 7.02777777778) * (CAST(`ADS`.`Feature_27` AS DOUBLE) - 7.02777777778)) / 23.0825617708) + (-0.5 * 5.38496802885 - (0.5 * (CAST(`ADS`.`Feature_28` AS DOUBLE) - 7.19444444444) * (CAST(`ADS`.`Feature_28` AS DOUBLE) - 7.19444444444)) / 34.7121914005) + (-0.5 * 5.01679857754 - (0.5 * (CAST(`ADS`.`Feature_29` AS DOUBLE) - 10.4166666667) * (CAST(`ADS`.`Feature_29` AS DOUBLE) - 10.4166666667)) / 24.0208333758) + (-0.5 * 5.19253483741 - (0.5 * (CAST(`ADS`.`Feature_30` AS DOUBLE) - 5.44444444444) * (CAST(`ADS`.`Feature_30` AS DOUBLE) - 5.44444444444)) / 28.6358025116) + (-0.5 * -15.1371759627 - (0.5 * (CAST(`ADS`.`Feature_31` AS DOUBLE) - 0.0) * (CAST(`ADS`.`Feature_31` AS DOUBLE) - 0.0)) / 4.2445156522e-08) + (-0.5 * -15.1371759627 - (0.5 * (CAST(`ADS`.`Feature_32` AS DOUBLE) - 0.0) * (CAST(`ADS`.`Feature_32` AS DOUBLE) - 0.0)) / 4.2445156522e-08) + (-0.5 * 4.54731519561 - (0.5 * (CAST(`ADS`.`Feature_33` AS DOUBLE) - 9.08333333333) * (CAST(`ADS`.`Feature_33` AS DOUBLE) - 9.08333333333)) / 15.0208333758) + (-0.5 * 3.85144174888 - (0.5 * (CAST(`ADS`.`Feature_34` AS DOUBLE) - 14.3055555556) * (CAST(`ADS`.`Feature_34` AS DOUBLE) - 14.3055555556)) / 7.48996917825) + (-0.5 * 5.3713608543 - (0.5 * (CAST(`ADS`.`Feature_35` AS DOUBLE) - 9.25) * (CAST(`ADS`.`Feature_35` AS DOUBLE) - 9.25)) / 34.243055598) + (-0.5 * 4.88339107787 - (0.5 * (CAST(`ADS`.`Feature_36` AS DOUBLE) - 12.75) * (CAST(`ADS`.`Feature_36` AS DOUBLE) - 12.75)) / 21.0208333758) + (-0.5 * 4.63089609612 - (0.5 * (CAST(`ADS`.`Feature_37` AS DOUBLE) - 13.0555555556) * (CAST(`ADS`.`Feature_37` AS DOUBLE) - 13.0555555556)) / 16.330246956) + (-0.5 * 4.27234288859 - (0.5 * (CAST(`ADS`.`Feature_38` AS DOUBLE) - 4.75) * (CAST(`ADS`.`Feature_38` AS DOUBLE) - 4.75)) / 11.4097222647) + (-0.5 * -15.1371759627 - (0.5 * (CAST(`ADS`.`Feature_39` AS DOUBLE) - 0.0) * (CAST(`ADS`.`Feature_39` AS DOUBLE) - 0.0)) / 4.2445156522e-08) + (-0.5 * 1.19879718754 - (0.5 * (CAST(`ADS`.`Feature_40` AS DOUBLE) - 0.166666666667) * (CAST(`ADS`.`Feature_40` AS DOUBLE) - 0.166666666667)) / 0.527777820223) + (-0.5 * 5.17601631361 - (0.5 * (CAST(`ADS`.`Feature_41` AS DOUBLE) - 7.66666666667) * (CAST(`ADS`.`Feature_41` AS DOUBLE) - 7.66666666667)) / 28.1666667091) + (-0.5 * 4.97216282482 - (0.5 * (CAST(`ADS`.`Feature_42` AS DOUBLE) - 12.1666666667) * (CAST(`ADS`.`Feature_42` AS DOUBLE) - 12.1666666667)) / 22.9722222647) + (-0.5 * 4.83680638658 - (0.5 * (CAST(`ADS`.`Feature_43` AS DOUBLE) - 12.8611111111) * (CAST(`ADS`.`Feature_43` AS DOUBLE) - 12.8611111111)) / 20.0640432523) + (-0.5 * 3.61238467194 - (0.5 * (CAST(`ADS`.`Feature_44` AS DOUBLE) - 14.8611111111) * (CAST(`ADS`.`Feature_44` AS DOUBLE) - 14.8611111111)) / 5.89737658566) + (-0.5 * 4.72011397648 - (0.5 * (CAST(`ADS`.`Feature_45` AS DOUBLE) - 11.75) * (CAST(`ADS`.`Feature_45` AS DOUBLE) - 11.75)) / 17.8541667091) + (-0.5 * 3.39975092346 - (0.5 * (CAST(`ADS`.`Feature_46` AS DOUBLE) - 1.69444444444) * (CAST(`ADS`.`Feature_46` AS DOUBLE) - 1.69444444444)) / 4.76774695603) + (-0.5 * -15.1371759627 - (0.5 * (CAST(`ADS`.`Feature_47` AS DOUBLE) - 0.0) * (CAST(`ADS`.`Feature_47` AS DOUBLE) - 0.0)) / 4.2445156522e-08) + (-0.5 * -1.77381117733 - (0.5 * (CAST(`ADS`.`Feature_48` AS DOUBLE) - 0.0277777777778) * (CAST(`ADS`.`Feature_48` AS DOUBLE) - 0.0277777777778)) / 0.0270062152847) + (-0.5 * 4.10360285787 - (0.5 * (CAST(`ADS`.`Feature_49` AS DOUBLE) - 1.52777777778) * (CAST(`ADS`.`Feature_49` AS DOUBLE) - 1.52777777778)) / 9.6381173264) + (-0.5 * 5.10762788993 - (0.5 * (CAST(`ADS`.`Feature_50` AS DOUBLE) - 3.47222222222) * (CAST(`ADS`.`Feature_50` AS DOUBLE) - 3.47222222222)) / 26.3047839931) + (-0.5 * 5.31633551409 - (0.5 * (CAST(`ADS`.`Feature_51` AS DOUBLE) - 7.58333333333) * (CAST(`ADS`.`Feature_51` AS DOUBLE) - 7.58333333333)) / 32.4097222647) + (-0.5 * 4.24491949336 - (0.5 * (CAST(`ADS`.`Feature_52` AS DOUBLE) - 13.6944444444) * (CAST(`ADS`.`Feature_52` AS DOUBLE) - 13.6944444444)) / 11.1010802894) + (-0.5 * 4.83772893132 - (0.5 * (CAST(`ADS`.`Feature_53` AS DOUBLE) - 4.47222222222) * (CAST(`ADS`.`Feature_53` AS DOUBLE) - 4.47222222222)) / 20.0825617708) + (-0.5 * -1.77381117733 - (0.5 * (CAST(`ADS`.`Feature_54` AS DOUBLE) - 0.0277777777778) * (CAST(`ADS`.`Feature_54` AS DOUBLE) - 0.0277777777778)) / 0.0270062152847) + (-0.5 * -15.1371759627 - (0.5 * (CAST(`ADS`.`Feature_55` AS DOUBLE) - 0.0) * (CAST(`ADS`.`Feature_55` AS DOUBLE) - 0.0)) / 4.2445156522e-08) + (-0.5 * -15.1371759627 - (0.5 * (CAST(`ADS`.`Feature_56` AS DOUBLE) - 0.0) * (CAST(`ADS`.`Feature_56` AS DOUBLE) - 0.0)) / 4.2445156522e-08) + (-0.5 * -1.77381117733 - (0.5 * (CAST(`ADS`.`Feature_57` AS DOUBLE) - 0.0277777777778) * (CAST(`ADS`.`Feature_57` AS DOUBLE) - 0.0277777777778)) / 0.0270062152847) + (-0.5 * 3.58331247137 - (0.5 * (CAST(`ADS`.`Feature_58` AS DOUBLE) - 0.777777777778) * (CAST(`ADS`.`Feature_58` AS DOUBLE) - 0.777777777778)) / 5.72839510417) + (-0.5 * 5.17305334849 - (0.5 * (CAST(`ADS`.`Feature_59` AS DOUBLE) - 7.5) * (CAST(`ADS`.`Feature_59` AS DOUBLE) - 7.5)) / 28.0833333758) + (-0.5 * 4.65179691535 - (0.5 * (CAST(`ADS`.`Feature_60` AS DOUBLE) - 12.1388888889) * (CAST(`ADS`.`Feature_60` AS DOUBLE) - 12.1388888889)) / 16.6751543634) + (-0.5 * 3.95145161959 - (0.5 * (CAST(`ADS`.`Feature_61` AS DOUBLE) - 2.0) * (CAST(`ADS`.`Feature_61` AS DOUBLE) - 2.0)) / 8.27777782022) + (-0.5 * -15.1371759627 - (0.5 * (CAST(`ADS`.`Feature_62` AS DOUBLE) - 0.0) * (CAST(`ADS`.`Feature_62` AS DOUBLE) - 0.0)) / 4.2445156522e-08) + (-0.5 * -15.1371759627 - (0.5 * (CAST(`ADS`.`Feature_63` AS DOUBLE) - 0.0) * (CAST(`ADS`.`Feature_63` AS DOUBLE) - 0.0)) / 4.2445156522e-08) AS `Score_4`, NULL AS `LogProba_5`, NULL AS `Proba_5`, -2.55167482625 + (-0.5 * -15.1371759627 - (0.5 * (CAST(`ADS`.`Feature_0` AS DOUBLE) - 0.0) * (CAST(`ADS`.`Feature_0` AS DOUBLE) - 0.0)) / 4.2445156522e-08) + (-0.5 * 2.60192008837 - (0.5 * (CAST(`ADS`.`Feature_1` AS DOUBLE) - 0.714285714286) * (CAST(`ADS`.`Feature_1` AS DOUBLE) - 0.714285714286)) / 2.14693881796) + (-0.5 * 4.4536926286 - (0.5 * (CAST(`ADS`.`Feature_2` AS DOUBLE) - 10.5142857143) * (CAST(`ADS`.`Feature_2` AS DOUBLE) - 10.5142857143)) / 13.6783673894) + (-0.5 * 3.67952749339 - (0.5 * (CAST(`ADS`.`Feature_3` AS DOUBLE) - 13.0857142857) * (CAST(`ADS`.`Feature_3` AS DOUBLE) - 13.0857142857)) / 6.30693881796) + (-0.5 * 3.87607135862 - (0.5 * (CAST(`ADS`.`Feature_4` AS DOUBLE) - 13.5428571429) * (CAST(`ADS`.`Feature_4` AS DOUBLE) - 13.5428571429)) / 7.67673473632) + (-0.5 * 4.50940441141 - (0.5 * (CAST(`ADS`.`Feature_5` AS DOUBLE) - 12.2285714286) * (CAST(`ADS`.`Feature_5` AS DOUBLE) - 12.2285714286)) / 14.4620408588) + (-0.5 * 4.73754785993 - (0.5 * (CAST(`ADS`.`Feature_6` AS DOUBLE) - 4.34285714286) * (CAST(`ADS`.`Feature_6` AS DOUBLE) - 4.34285714286)) / 18.1681633078) + (-0.5 * -15.1371759627 - (0.5 * (CAST(`ADS`.`Feature_7` AS DOUBLE) - 0.0) * (CAST(`ADS`.`Feature_7` AS DOUBLE) - 0.0)) / 4.2445156522e-08) + (-0.5 * -15.1371759627 - (0.5 * (CAST(`ADS`.`Feature_8` AS DOUBLE) - 0.0) * (CAST(`ADS`.`Feature_8` AS DOUBLE) - 0.0)) / 4.2445156522e-08) + (-0.5 * 4.03881357159 - (0.5 * (CAST(`ADS`.`Feature_9` AS DOUBLE) - 2.62857142857) * (CAST(`ADS`.`Feature_9` AS DOUBLE) - 2.62857142857)) / 9.0334694302) + (-0.5 * 3.36233494172 - (0.5 * (CAST(`ADS`.`Feature_10` AS DOUBLE) - 14.4857142857) * (CAST(`ADS`.`Feature_10` AS DOUBLE) - 14.4857142857)) / 4.59265310367) + (-0.5 * 4.54761292365 - (0.5 * (CAST(`ADS`.`Feature_11` AS DOUBLE) - 12.0571428571) * (CAST(`ADS`.`Feature_11` AS DOUBLE) - 12.0571428571)) / 15.0253061649) + (-0.5 * 4.3292930999 - (0.5 * (CAST(`ADS`.`Feature_12` AS DOUBLE) - 8.48571428571) * (CAST(`ADS`.`Feature_12` AS DOUBLE) - 8.48571428571)) / 12.0783673894) + (-0.5 * 4.51334785631 - (0.5 * (CAST(`ADS`.`Feature_13` AS DOUBLE) - 6.37142857143) * (CAST(`ADS`.`Feature_13` AS DOUBLE) - 6.37142857143)) / 14.5191837159) + (-0.5 * 4.5167156188 - (0.5 * (CAST(`ADS`.`Feature_14` AS DOUBLE) - 2.65714285714) * (CAST(`ADS`.`Feature_14` AS DOUBLE) - 2.65714285714)) / 14.5681633078) + (-0.5 * 0.303130243529 - (0.5 * (CAST(`ADS`.`Feature_15` AS DOUBLE) - 0.114285714286) * (CAST(`ADS`.`Feature_15` AS DOUBLE) - 0.114285714286)) / 0.215510246527) + (-0.5 * -15.1371759627 - (0.5 * (CAST(`ADS`.`Feature_16` AS DOUBLE) - 0.0) * (CAST(`ADS`.`Feature_16` AS DOUBLE) - 0.0)) / 4.2445156522e-08) + (-0.5 * 4.29281530991 - (0.5 * (CAST(`ADS`.`Feature_17` AS DOUBLE) - 3.8) * (CAST(`ADS`.`Feature_17` AS DOUBLE) - 3.8)) / 11.6457143282) + (-0.5 * 3.27703492715 - (0.5 * (CAST(`ADS`.`Feature_18` AS DOUBLE) - 14.2) * (CAST(`ADS`.`Feature_18` AS DOUBLE) - 14.2)) / 4.21714289959) + (-0.5 * 4.83873901989 - (0.5 * (CAST(`ADS`.`Feature_19` AS DOUBLE) - 5.2) * (CAST(`ADS`.`Feature_19` AS DOUBLE) - 5.2)) / 20.1028571853) + (-0.5 * 3.73000502638 - (0.5 * (CAST(`ADS`.`Feature_20` AS DOUBLE) - 1.37142857143) * (CAST(`ADS`.`Feature_20` AS DOUBLE) - 1.37142857143)) / 6.6334694302) + (-0.5 * 1.63892829547 - (0.5 * (CAST(`ADS`.`Feature_21` AS DOUBLE) - 0.257142857143) * (CAST(`ADS`.`Feature_21` AS DOUBLE) - 0.257142857143)) / 0.81959187918) + (-0.5 * -15.1371759627 - (0.5 * (CAST(`ADS`.`Feature_22` AS DOUBLE) - 0.0) * (CAST(`ADS`.`Feature_22` AS DOUBLE) - 0.0)) / 4.2445156522e-08) + (-0.5 * -15.1371759627 - (0.5 * (CAST(`ADS`.`Feature_23` AS DOUBLE) - 0.0) * (CAST(`ADS`.`Feature_23` AS DOUBLE) - 0.0)) / 4.2445156522e-08) + (-0.5 * -15.1371759627 - (0.5 * (CAST(`ADS`.`Feature_24` AS DOUBLE) - 0.0) * (CAST(`ADS`.`Feature_24` AS DOUBLE) - 0.0)) / 4.2445156522e-08) + (-0.5 * 4.27969157684 - (0.5 * (CAST(`ADS`.`Feature_25` AS DOUBLE) - 4.85714285714) * (CAST(`ADS`.`Feature_25` AS DOUBLE) - 4.85714285714)) / 11.4938775935) + (-0.5 * 4.3255011127 - (0.5 * (CAST(`ADS`.`Feature_26` AS DOUBLE) - 13.7142857143) * (CAST(`ADS`.`Feature_26` AS DOUBLE) - 13.7142857143)) / 12.0326531037) + (-0.5 * 4.77407596151 - (0.5 * (CAST(`ADS`.`Feature_27` AS DOUBLE) - 11.6857142857) * (CAST(`ADS`.`Feature_27` AS DOUBLE) - 11.6857142857)) / 18.8440816751) + (-0.5 * 5.22465810643 - (0.5 * (CAST(`ADS`.`Feature_28` AS DOUBLE) - 8.97142857143) * (CAST(`ADS`.`Feature_28` AS DOUBLE) - 8.97142857143)) / 29.5706122873) + (-0.5 * 5.1614143887 - (0.5 * (CAST(`ADS`.`Feature_29` AS DOUBLE) - 5.11428571429) * (CAST(`ADS`.`Feature_29` AS DOUBLE) - 5.11428571429)) / 27.7583673894) + (-0.5 * 1.93947545028 - (0.5 * (CAST(`ADS`.`Feature_30` AS DOUBLE) - 0.485714285714) * (CAST(`ADS`.`Feature_30` AS DOUBLE) - 0.485714285714)) / 1.10693881796) + (-0.5 * -15.1371759627 - (0.5 * (CAST(`ADS`.`Feature_31` AS DOUBLE) - 0.0) * (CAST(`ADS`.`Feature_31` AS DOUBLE) - 0.0)) / 4.2445156522e-08) + (-0.5 * -15.1371759627 - (0.5 * (CAST(`ADS`.`Feature_32` AS DOUBLE) - 0.0) * (CAST(`ADS`.`Feature_32` AS DOUBLE) - 0.0)) / 4.2445156522e-08) + (-0.5 * 3.74757073774 - (0.5 * (CAST(`ADS`.`Feature_33` AS DOUBLE) - 1.85714285714) * (CAST(`ADS`.`Feature_33` AS DOUBLE) - 1.85714285714)) / 6.75102045061) + (-0.5 * 5.39371480512 - (0.5 * (CAST(`ADS`.`Feature_34` AS DOUBLE) - 7.2) * (CAST(`ADS`.`Feature_34` AS DOUBLE) - 7.2)) / 35.0171428996) + (-0.5 * 5.42198540148 - (0.5 * (CAST(`ADS`.`Feature_35` AS DOUBLE) - 9.08571428571) * (CAST(`ADS`.`Feature_35` AS DOUBLE) - 9.08571428571)) / 36.0212245322) + (-0.5 * 5.02338603301 - (0.5 * (CAST(`ADS`.`Feature_36` AS DOUBLE) - 8.14285714286) * (CAST(`ADS`.`Feature_36` AS DOUBLE) - 8.14285714286)) / 24.1795918792) + (-0.5 * 5.60019663221 - (0.5 * (CAST(`ADS`.`Feature_37` AS DOUBLE) - 8.25714285714) * (CAST(`ADS`.`Feature_37` AS DOUBLE) - 8.25714285714)) / 43.0481633078) + (-0.5 * 4.39709575245 - (0.5 * (CAST(`ADS`.`Feature_38` AS DOUBLE) - 2.6) * (CAST(`ADS`.`Feature_38` AS DOUBLE) - 2.6)) / 12.9257143282) + (-0.5 * -15.1371759627 - (0.5 * (CAST(`ADS`.`Feature_39` AS DOUBLE) - 0.0) * (CAST(`ADS`.`Feature_39` AS DOUBLE) - 0.0)) / 4.2445156522e-08) + (-0.5 * -15.1371759627 - (0.5 * (CAST(`ADS`.`Feature_40` AS DOUBLE) - 0.0) * (CAST(`ADS`.`Feature_40` AS DOUBLE) - 0.0)) / 4.2445156522e-08) + (-0.5 * 2.19797474724 - (0.5 * (CAST(`ADS`.`Feature_41` AS DOUBLE) - 0.371428571429) * (CAST(`ADS`.`Feature_41` AS DOUBLE) - 0.371428571429)) / 1.4334694302) + (-0.5 * 4.06626627587 - (0.5 * (CAST(`ADS`.`Feature_42` AS DOUBLE) - 1.17142857143) * (CAST(`ADS`.`Feature_42` AS DOUBLE) - 1.17142857143)) / 9.28489800163) + (-0.5 * 5.04257945328 - (0.5 * (CAST(`ADS`.`Feature_43` AS DOUBLE) - 3.54285714286) * (CAST(`ADS`.`Feature_43` AS DOUBLE) - 3.54285714286)) / 24.6481633078) + (-0.5 * 5.35458733645 - (0.5 * (CAST(`ADS`.`Feature_44` AS DOUBLE) - 6.57142857143) * (CAST(`ADS`.`Feature_44` AS DOUBLE) - 6.57142857143)) / 33.6734694302) + (-0.5 * 5.46061671915 - (0.5 * (CAST(`ADS`.`Feature_45` AS DOUBLE) - 8.4) * (CAST(`ADS`.`Feature_45` AS DOUBLE) - 8.4)) / 37.4400000424) + (-0.5 * 4.4524983134 - (0.5 * (CAST(`ADS`.`Feature_46` AS DOUBLE) - 2.62857142857) * (CAST(`ADS`.`Feature_46` AS DOUBLE) - 2.62857142857)) / 13.6620408588) + (-0.5 * -15.1371759627 - (0.5 * (CAST(`ADS`.`Feature_47` AS DOUBLE) - 0.0) * (CAST(`ADS`.`Feature_47` AS DOUBLE) - 0.0)) / 4.2445156522e-08) + (-0.5 * -15.1371759627 - (0.5 * (CAST(`ADS`.`Feature_48` AS DOUBLE) - 0.0) * (CAST(`ADS`.`Feature_48` AS DOUBLE) - 0.0)) / 4.2445156522e-08) + (-0.5 * 3.42736214484 - (0.5 * (CAST(`ADS`.`Feature_49` AS DOUBLE) - 1.31428571429) * (CAST(`ADS`.`Feature_49` AS DOUBLE) - 1.31428571429)) / 4.90122453224) + (-0.5 * 5.00862536644 - (0.5 * (CAST(`ADS`.`Feature_50` AS DOUBLE) - 6.94285714286) * (CAST(`ADS`.`Feature_50` AS DOUBLE) - 6.94285714286)) / 23.8253061649) + (-0.5 * 4.8867050926 - (0.5 * (CAST(`ADS`.`Feature_51` AS DOUBLE) - 8.22857142857) * (CAST(`ADS`.`Feature_51` AS DOUBLE) - 8.22857142857)) / 21.0906122873) + (-0.5 * 4.8471499065 - (0.5 * (CAST(`ADS`.`Feature_52` AS DOUBLE) - 10.6857142857) * (CAST(`ADS`.`Feature_52` AS DOUBLE) - 10.6857142857)) / 20.2726531037) + (-0.5 * 5.29860042872 - (0.5 * (CAST(`ADS`.`Feature_53` AS DOUBLE) - 7.4) * (CAST(`ADS`.`Feature_53` AS DOUBLE) - 7.4)) / 31.8400000424) + (-0.5 * 3.55830858604 - (0.5 * (CAST(`ADS`.`Feature_54` AS DOUBLE) - 0.885714285714) * (CAST(`ADS`.`Feature_54` AS DOUBLE) - 0.885714285714)) / 5.58693881796) + (-0.5 * -15.1371759627 - (0.5 * (CAST(`ADS`.`Feature_55` AS DOUBLE) - 0.0) * (CAST(`ADS`.`Feature_55` AS DOUBLE) - 0.0)) / 4.2445156522e-08) + (-0.5 * -15.1371759627 - (0.5 * (CAST(`ADS`.`Feature_56` AS DOUBLE) - 0.0) * (CAST(`ADS`.`Feature_56` AS DOUBLE) - 0.0)) / 4.2445156522e-08) + (-0.5 * 2.34788605576 - (0.5 * (CAST(`ADS`.`Feature_57` AS DOUBLE) - 0.857142857143) * (CAST(`ADS`.`Feature_57` AS DOUBLE) - 0.857142857143)) / 1.66530616489) + (-0.5 * 4.51053269766 - (0.5 * (CAST(`ADS`.`Feature_58` AS DOUBLE) - 10.9142857143) * (CAST(`ADS`.`Feature_58` AS DOUBLE) - 10.9142857143)) / 14.4783673894) + (-0.5 * 2.96835710763 - (0.5 * (CAST(`ADS`.`Feature_59` AS DOUBLE) - 14.6) * (CAST(`ADS`.`Feature_59` AS DOUBLE) - 14.6)) / 3.09714289959) + (-0.5 * 5.2175102716 - (0.5 * (CAST(`ADS`.`Feature_60` AS DOUBLE) - 8.8) * (CAST(`ADS`.`Feature_60` AS DOUBLE) - 8.8)) / 29.3600000424) + (-0.5 * 4.29561525573 - (0.5 * (CAST(`ADS`.`Feature_61` AS DOUBLE) - 2.08571428571) * (CAST(`ADS`.`Feature_61` AS DOUBLE) - 2.08571428571)) / 11.6783673894) + (-0.5 * -0.160830954988 - (0.5 * (CAST(`ADS`.`Feature_62` AS DOUBLE) - 0.0857142857143) * (CAST(`ADS`.`Feature_62` AS DOUBLE) - 0.0857142857143)) / 0.135510246527) + (-0.5 * -15.1371759627 - (0.5 * (CAST(`ADS`.`Feature_63` AS DOUBLE) - 0.0) * (CAST(`ADS`.`Feature_63` AS DOUBLE) - 0.0)) / 4.2445156522e-08) AS `Score_5`, NULL AS `LogProba_6`, NULL AS `Proba_6`, -2.44346124161 + (-0.5 * -15.1371759627 - (0.5 * (CAST(`ADS`.`Feature_0` AS DOUBLE) - 0.0) * (CAST(`ADS`.`Feature_0` AS DOUBLE) - 0.0)) / 4.2445156522e-08) + (-0.5 * -15.1371759627 - (0.5 * (CAST(`ADS`.`Feature_1` AS DOUBLE) - 0.0) * (CAST(`ADS`.`Feature_1` AS DOUBLE) - 0.0)) / 4.2445156522e-08) + (-0.5 * 3.18118295254 - (0.5 * (CAST(`ADS`.`Feature_2` AS DOUBLE) - 1.25641025641) * (CAST(`ADS`.`Feature_2` AS DOUBLE) - 1.25641025641)) / 3.83168972029) + (-0.5 * 3.8267146338 - (0.5 * (CAST(`ADS`.`Feature_3` AS DOUBLE) - 11.641025641) * (CAST(`ADS`.`Feature_3` AS DOUBLE) - 11.641025641)) / 7.30703488794) + (-0.5 * 5.30742718617 - (0.5 * (CAST(`ADS`.`Feature_4` AS DOUBLE) - 8.92307692308) * (CAST(`ADS`.`Feature_4` AS DOUBLE) - 8.92307692308)) / 32.1222880109) + (-0.5 * 3.22417143814 - (0.5 * (CAST(`ADS`.`Feature_5` AS DOUBLE) - 1.0) * (CAST(`ADS`.`Feature_5` AS DOUBLE) - 1.0)) / 4.00000004245) + (-0.5 * -15.1371759627 - (0.5 * (CAST(`ADS`.`Feature_6` AS DOUBLE) - 0.0) * (CAST(`ADS`.`Feature_6` AS DOUBLE) - 0.0)) / 4.2445156522e-08) + (-0.5 * -15.1371759627 - (0.5 * (CAST(`ADS`.`Feature_7` AS DOUBLE) - 0.0) * (CAST(`ADS`.`Feature_7` AS DOUBLE) - 0.0)) / 4.2445156522e-08) + (-0.5 * -15.1371759627 - (0.5 * (CAST(`ADS`.`Feature_8` AS DOUBLE) - 0.0) * (CAST(`ADS`.`Feature_8` AS DOUBLE) - 0.0)) / 4.2445156522e-08) + (-0.5 * -15.1371759627 - (0.5 * (CAST(`ADS`.`Feature_9` AS DOUBLE) - 0.0) * (CAST(`ADS`.`Feature_9` AS DOUBLE) - 0.0)) / 4.2445156522e-08) + (-0.5 * 4.52944325925 - (0.5 * (CAST(`ADS`.`Feature_10` AS DOUBLE) - 7.41025641026) * (CAST(`ADS`.`Feature_10` AS DOUBLE) - 7.41025641026)) / 14.7547666434) + (-0.5 * 3.15581234793 - (0.5 * (CAST(`ADS`.`Feature_11` AS DOUBLE) - 14.5384615385) * (CAST(`ADS`.`Feature_11` AS DOUBLE) - 14.5384615385)) / 3.73570023968) + (-0.5 * 4.82190402049 - (0.5 * (CAST(`ADS`.`Feature_12` AS DOUBLE) - 5.76923076923) * (CAST(`ADS`.`Feature_12` AS DOUBLE) - 5.76923076923)) / 19.7672584251) + (-0.5 * 2.55313180008 - (0.5 * (CAST(`ADS`.`Feature_13` AS DOUBLE) - 0.512820512821) * (CAST(`ADS`.`Feature_13` AS DOUBLE) - 0.512820512821)) / 2.04470747177) + (-0.5 * -15.1371759627 - (0.5 * (CAST(`ADS`.`Feature_14` AS DOUBLE) - 0.0) * (CAST(`ADS`.`Feature_14` AS DOUBLE) - 0.0)) / 4.2445156522e-08) + (-0.5 * -15.1371759627 - (0.5 * (CAST(`ADS`.`Feature_15` AS DOUBLE) - 0.0) * (CAST(`ADS`.`Feature_15` AS DOUBLE) - 0.0)) / 4.2445156522e-08) + (-0.5 * -15.1371759627 - (0.5 * (CAST(`ADS`.`Feature_16` AS DOUBLE) - 0.0) * (CAST(`ADS`.`Feature_16` AS DOUBLE) - 0.0)) / 4.2445156522e-08) + (-0.5 * 2.29230976033 - (0.5 * (CAST(`ADS`.`Feature_17` AS DOUBLE) - 0.74358974359) * (CAST(`ADS`.`Feature_17` AS DOUBLE) - 0.74358974359)) / 1.57527946388) + (-0.5 * 4.48646896369 - (0.5 * (CAST(`ADS`.`Feature_18` AS DOUBLE) - 12.3846153846) * (CAST(`ADS`.`Feature_18` AS DOUBLE) - 12.3846153846)) / 14.1341223304) + (-0.5 * 5.02726246452 - (0.5 * (CAST(`ADS`.`Feature_19` AS DOUBLE) - 9.33333333333) * (CAST(`ADS`.`Feature_19` AS DOUBLE) - 9.33333333333)) / 24.2735043159) + (-0.5 * 3.02313542154 - (0.5 * (CAST(`ADS`.`Feature_20` AS DOUBLE) - 0.897435897436) * (CAST(`ADS`.`Feature_20` AS DOUBLE) - 0.897435897436)) / 3.27153192936) + (-0.5 * -1.8516583672 - (0.5 * (CAST(`ADS`.`Feature_21` AS DOUBLE) - 0.025641025641) * (CAST(`ADS`.`Feature_21` AS DOUBLE) - 0.025641025641)) / 0.0249836058903) + (-0.5 * -15.1371759627 - (0.5 * (CAST(`ADS`.`Feature_22` AS DOUBLE) - 0.0) * (CAST(`ADS`.`Feature_22` AS DOUBLE) - 0.0)) / 4.2445156522e-08) + (-0.5 * -15.1371759627 - (0.5 * (CAST(`ADS`.`Feature_23` AS DOUBLE) - 0.0) * (CAST(`ADS`.`Feature_23` AS DOUBLE) - 0.0)) / 4.2445156522e-08) + (-0.5 * -15.1371759627 - (0.5 * (CAST(`ADS`.`Feature_24` AS DOUBLE) - 0.0) * (CAST(`ADS`.`Feature_24` AS DOUBLE) - 0.0)) / 4.2445156522e-08) + (-0.5 * 3.56186392813 - (0.5 * (CAST(`ADS`.`Feature_25` AS DOUBLE) - 1.66666666667) * (CAST(`ADS`.`Feature_25` AS DOUBLE) - 1.66666666667)) / 5.60683764928) + (-0.5 * 4.2341572687 - (0.5 * (CAST(`ADS`.`Feature_26` AS DOUBLE) - 13.6923076923) * (CAST(`ADS`.`Feature_26` AS DOUBLE) - 13.6923076923)) / 10.9822485632) + (-0.5 * 5.15817667561 - (0.5 * (CAST(`ADS`.`Feature_27` AS DOUBLE) - 7.84615384615) * (CAST(`ADS`.`Feature_27` AS DOUBLE) - 7.84615384615)) / 27.6686390957) + (-0.5 * 4.97214135969 - (0.5 * (CAST(`ADS`.`Feature_28` AS DOUBLE) - 3.28205128205) * (CAST(`ADS`.`Feature_28` AS DOUBLE) - 3.28205128205)) / 22.971729168) + (-0.5 * 4.42498342641 - (0.5 * (CAST(`ADS`.`Feature_29` AS DOUBLE) - 1.79487179487) * (CAST(`ADS`.`Feature_29` AS DOUBLE) - 1.79487179487)) / 13.2912557952) + (-0.5 * 1.5192590146 - (0.5 * (CAST(`ADS`.`Feature_30` AS DOUBLE) - 0.205128205128) * (CAST(`ADS`.`Feature_30` AS DOUBLE) - 0.205128205128)) / 0.727153231137) + (-0.5 * -15.1371759627 - (0.5 * (CAST(`ADS`.`Feature_31` AS DOUBLE) - 0.0) * (CAST(`ADS`.`Feature_31` AS DOUBLE) - 0.0)) / 4.2445156522e-08) + (-0.5 * -15.1371759627 - (0.5 * (CAST(`ADS`.`Feature_32` AS DOUBLE) - 0.0) * (CAST(`ADS`.`Feature_32` AS DOUBLE) - 0.0)) / 4.2445156522e-08) + (-0.5 * 3.96356963081 - (0.5 * (CAST(`ADS`.`Feature_33` AS DOUBLE) - 2.92307692308) * (CAST(`ADS`.`Feature_33` AS DOUBLE) - 2.92307692308)) / 8.3786982673) + (-0.5 * 3.26412520535 - (0.5 * (CAST(`ADS`.`Feature_34` AS DOUBLE) - 14.7948717949) * (CAST(`ADS`.`Feature_34` AS DOUBLE) - 14.7948717949)) / 4.16305066703) + (-0.5 * 4.54711000259 - (0.5 * (CAST(`ADS`.`Feature_35` AS DOUBLE) - 11.5384615385) * (CAST(`ADS`.`Feature_35` AS DOUBLE) - 11.5384615385)) / 15.0177515217) + (-0.5 * 5.07981174113 - (0.5 * (CAST(`ADS`.`Feature_36` AS DOUBLE) - 11.8205128205) * (CAST(`ADS`.`Feature_36` AS DOUBLE) - 11.8205128205)) / 25.5831690102) + (-0.5 * 5.14948968481 - (0.5 * (CAST(`ADS`.`Feature_37` AS DOUBLE) - 10.1794871795) * (CAST(`ADS`.`Feature_37` AS DOUBLE) - 10.1794871795)) / 27.4293228564) + (-0.5 * 3.99112128827 - (0.5 * (CAST(`ADS`.`Feature_38` AS DOUBLE) - 2.71794871795) * (CAST(`ADS`.`Feature_38` AS DOUBLE) - 2.71794871795)) / 8.61275480905) + (-0.5 * -15.1371759627 - (0.5 * (CAST(`ADS`.`Feature_39` AS DOUBLE) - 0.0) * (CAST(`ADS`.`Feature_39` AS DOUBLE) - 0.0)) / 4.2445156522e-08) + (-0.5 * -15.1371759627 - (0.5 * (CAST(`ADS`.`Feature_40` AS DOUBLE) - 0.0) * (CAST(`ADS`.`Feature_40` AS DOUBLE) - 0.0)) / 4.2445156522e-08) + (-0.5 * 2.89006327302 - (0.5 * (CAST(`ADS`.`Feature_41` AS DOUBLE) - 1.53846153846) * (CAST(`ADS`.`Feature_41` AS DOUBLE) - 1.53846153846)) / 2.86390536789) + (-0.5 * 3.06524276275 - (0.5 * (CAST(`ADS`.`Feature_42` AS DOUBLE) - 14.8461538462) * (CAST(`ADS`.`Feature_42` AS DOUBLE) - 14.8461538462)) / 3.41222883929) + (-0.5 * 5.10026318393 - (0.5 * (CAST(`ADS`.`Feature_43` AS DOUBLE) - 10.7948717949) * (CAST(`ADS`.`Feature_43` AS DOUBLE) - 10.7948717949)) / 26.1117686158) + (-0.5 * 5.14285217308 - (0.5 * (CAST(`ADS`.`Feature_44` AS DOUBLE) - 6.33333333333) * (CAST(`ADS`.`Feature_44` AS DOUBLE) - 6.33333333333)) / 27.2478632903) + (-0.5 * 4.52944325925 - (0.5 * (CAST(`ADS`.`Feature_45` AS DOUBLE) - 9.74358974359) * (CAST(`ADS`.`Feature_45` AS DOUBLE) - 9.74358974359)) / 14.7547666434) + (-0.5 * 4.74613165612 - (0.5 * (CAST(`ADS`.`Feature_46` AS DOUBLE) - 9.33333333333) * (CAST(`ADS`.`Feature_46` AS DOUBLE) - 9.33333333333)) / 18.3247863672) + (-0.5 * 0.201113446579 - (0.5 * (CAST(`ADS`.`Feature_47` AS DOUBLE) - 0.102564102564) * (CAST(`ADS`.`Feature_47` AS DOUBLE) - 0.102564102564)) / 0.194608852439) + (-0.5 * -15.1371759627 - (0.5 * (CAST(`ADS`.`Feature_48` AS DOUBLE) - 0.0) * (CAST(`ADS`.`Feature_48` AS DOUBLE) - 0.0)) / 4.2445156522e-08) + (-0.5 * 1.23938246446 - (0.5 * (CAST(`ADS`.`Feature_49` AS DOUBLE) - 0.25641025641) * (CAST(`ADS`.`Feature_49` AS DOUBLE) - 0.25641025641)) / 0.549638438237) + (-0.5 * 4.15572963571 - (0.5 * (CAST(`ADS`.`Feature_50` AS DOUBLE) - 11.0) * (CAST(`ADS`.`Feature_50` AS DOUBLE) - 11.0)) / 10.1538461963) + (-0.5 * 4.14531558694 - (0.5 * (CAST(`ADS`.`Feature_51` AS DOUBLE) - 11.9487179487) * (CAST(`ADS`.`Feature_51` AS DOUBLE) - 11.9487179487)) / 10.0486522449) + (-0.5 * 4.28185214233 - (0.5 * (CAST(`ADS`.`Feature_52` AS DOUBLE) - 5.38461538462) * (CAST(`ADS`.`Feature_52` AS DOUBLE) - 5.38461538462)) / 11.518737715) + (-0.5 * 4.50289302723 - (0.5 * (CAST(`ADS`.`Feature_53` AS DOUBLE) - 11.2051282051) * (CAST(`ADS`.`Feature_53` AS DOUBLE) - 11.2051282051)) / 14.3681788722) + (-0.5 * 4.61791659744 - (0.5 * (CAST(`ADS`.`Feature_54` AS DOUBLE) - 11.3333333333) * (CAST(`ADS`.`Feature_54` AS DOUBLE) - 11.3333333333)) / 16.1196581621) + (-0.5 * 2.50099198174 - (0.5 * (CAST(`ADS`.`Feature_55` AS DOUBLE) - 0.461538461538) * (CAST(`ADS`.`Feature_55` AS DOUBLE) - 0.461538461538)) / 1.94082844481) + (-0.5 * -15.1371759627 - (0.5 * (CAST(`ADS`.`Feature_56` AS DOUBLE) - 0.0) * (CAST(`ADS`.`Feature_56` AS DOUBLE) - 0.0)) / 4.2445156522e-08) + (-0.5 * -15.1371759627 - (0.5 * (CAST(`ADS`.`Feature_57` AS DOUBLE) - 0.0) * (CAST(`ADS`.`Feature_57` AS DOUBLE) - 0.0)) / 4.2445156522e-08) + (-0.5 * 2.827542917 - (0.5 * (CAST(`ADS`.`Feature_58` AS DOUBLE) - 1.76923076923) * (CAST(`ADS`.`Feature_58` AS DOUBLE) - 1.76923076923)) / 2.69033534817) + (-0.5 * 3.79749948331 - (0.5 * (CAST(`ADS`.`Feature_59` AS DOUBLE) - 11.0769230769) * (CAST(`ADS`.`Feature_59` AS DOUBLE) - 11.0769230769)) / 7.09664698525) + (-0.5 * 1.55653040727 - (0.5 * (CAST(`ADS`.`Feature_60` AS DOUBLE) - 15.4102564103) * (CAST(`ADS`.`Feature_60` AS DOUBLE) - 15.4102564103)) / 0.754766643366) + (-0.5 * 4.05370178656 - (0.5 * (CAST(`ADS`.`Feature_61` AS DOUBLE) - 13.1025641026) * (CAST(`ADS`.`Feature_61` AS DOUBLE) - 13.1025641026)) / 9.1689678268) + (-0.5 * 4.47590071011 - (0.5 * (CAST(`ADS`.`Feature_62` AS DOUBLE) - 4.58974358974) * (CAST(`ADS`.`Feature_62` AS DOUBLE) - 4.58974358974)) / 13.9855358741) + (-0.5 * -0.807114400957 - (0.5 * (CAST(`ADS`.`Feature_63` AS DOUBLE) - 0.0769230769231) * (CAST(`ADS`.`Feature_63` AS DOUBLE) - 0.0769230769231)) / 0.0710059596049) AS `Score_6`, NULL AS `LogProba_7`, NULL AS `Proba_7`, -2.11803884118 + (-0.5 * -15.1371759627 - (0.5 * (CAST(`ADS`.`Feature_0` AS DOUBLE) - 0.0) * (CAST(`ADS`.`Feature_0` AS DOUBLE) - 0.0)) / 4.2445156522e-08) + (-0.5 * 0.916946061585 - (0.5 * (CAST(`ADS`.`Feature_1` AS DOUBLE) - 0.166666666667) * (CAST(`ADS`.`Feature_1` AS DOUBLE) - 0.166666666667)) / 0.398148190593) + (-0.5 * 4.4970136419 - (0.5 * (CAST(`ADS`.`Feature_2` AS DOUBLE) - 5.22222222222) * (CAST(`ADS`.`Feature_2` AS DOUBLE) - 5.22222222222)) / 14.2839506597) + (-0.5 * 4.19599030533 - (0.5 * (CAST(`ADS`.`Feature_3` AS DOUBLE) - 13.0555555556) * (CAST(`ADS`.`Feature_3` AS DOUBLE) - 13.0555555556)) / 10.5709876968) + (-0.5 * 3.65831375624 - (0.5 * (CAST(`ADS`.`Feature_4` AS DOUBLE) - 14.462962963) * (CAST(`ADS`.`Feature_4` AS DOUBLE) - 14.462962963)) / 6.17455422626) + (-0.5 * 5.09892377151 - (0.5 * (CAST(`ADS`.`Feature_5` AS DOUBLE) - 11.8148148148) * (CAST(`ADS`.`Feature_5` AS DOUBLE) - 11.8148148148)) / 26.0768176007) + (-0.5 * 5.56117948505 - (0.5 * (CAST(`ADS`.`Feature_6` AS DOUBLE) - 6.31481481481) * (CAST(`ADS`.`Feature_6` AS DOUBLE) - 6.31481481481)) / 41.4008916748) + (-0.5 * 4.12079121501 - (0.5 * (CAST(`ADS`.`Feature_7` AS DOUBLE) - 1.51851851852) * (CAST(`ADS`.`Feature_7` AS DOUBLE) - 1.51851851852)) / 9.80521266247) + (-0.5 * -15.1371759627 - (0.5 * (CAST(`ADS`.`Feature_8` AS DOUBLE) - 0.0) * (CAST(`ADS`.`Feature_8` AS DOUBLE) - 0.0)) / 4.2445156522e-08) + (-0.5 * 3.07513739165 - (0.5 * (CAST(`ADS`.`Feature_9` AS DOUBLE) - 1.12962962963) * (CAST(`ADS`.`Feature_9` AS DOUBLE) - 1.12962962963)) / 3.44615916453) + (-0.5 * 4.59979954069 - (0.5 * (CAST(`ADS`.`Feature_10` AS DOUBLE) - 11.0555555556) * (CAST(`ADS`.`Feature_10` AS DOUBLE) - 11.0555555556)) / 15.830246956) + (-0.5 * 4.22021993012 - (0.5 * (CAST(`ADS`.`Feature_11` AS DOUBLE) - 11.2777777778) * (CAST(`ADS`.`Feature_11` AS DOUBLE) - 11.2777777778)) / 10.830246956) + (-0.5 * 4.28317198378 - (0.5 * (CAST(`ADS`.`Feature_12` AS DOUBLE) - 10.7222222222) * (CAST(`ADS`.`Feature_12` AS DOUBLE) - 10.7222222222)) / 11.5339506597) + (-0.5 * 4.50745067909 - (0.5 * (CAST(`ADS`.`Feature_13` AS DOUBLE) - 12.462962963) * (CAST(`ADS`.`Feature_13` AS DOUBLE) - 12.462962963)) / 14.4338134855) + (-0.5 * 5.40519513795 - (0.5 * (CAST(`ADS`.`Feature_14` AS DOUBLE) - 6.2037037037) * (CAST(`ADS`.`Feature_14` AS DOUBLE) - 6.2037037037)) / 35.4214678065) + (-0.5 * 3.35760637417 - (0.5 * (CAST(`ADS`.`Feature_15` AS DOUBLE) - 0.722222222222) * (CAST(`ADS`.`Feature_15` AS DOUBLE) - 0.722222222222)) / 4.57098769677) + (-0.5 * -15.1371759627 - (0.5 * (CAST(`ADS`.`Feature_16` AS DOUBLE) - 0.0) * (CAST(`ADS`.`Feature_16` AS DOUBLE) - 0.0)) / 4.2445156522e-08) + (-0.5 * 2.77076457738 - (0.5 * (CAST(`ADS`.`Feature_17` AS DOUBLE) - 0.703703703704) * (CAST(`ADS`.`Feature_17` AS DOUBLE) - 0.703703703704)) / 2.54183817688) + (-0.5 * 5.3374248548 - (0.5 * (CAST(`ADS`.`Feature_18` AS DOUBLE) - 5.46296296296) * (CAST(`ADS`.`Feature_18` AS DOUBLE) - 5.46296296296)) / 33.1004801522) + (-0.5 * 4.36694717595 - (0.5 * (CAST(`ADS`.`Feature_19` AS DOUBLE) - 2.2962962963) * (CAST(`ADS`.`Feature_19` AS DOUBLE) - 2.2962962963)) / 12.5418381769) + (-0.5 * 5.30340933183 - (0.5 * (CAST(`ADS`.`Feature_20` AS DOUBLE) - 6.68518518519) * (CAST(`ADS`.`Feature_20` AS DOUBLE) - 6.68518518519)) / 31.9934842674) + (-0.5 * 4.90073261131 - (0.5 * (CAST(`ADS`.`Feature_21` AS DOUBLE) - 10.9814814815) * (CAST(`ADS`.`Feature_21` AS DOUBLE) - 10.9814814815)) / 21.3885459958) + (-0.5 * 4.75585168761 - (0.5 * (CAST(`ADS`.`Feature_22` AS DOUBLE) - 3.42592592593) * (CAST(`ADS`.`Feature_22` AS DOUBLE) - 3.42592592593)) / 18.5037723333) + (-0.5 * 1.20978275756 - (0.5 * (CAST(`ADS`.`Feature_23` AS DOUBLE) - 0.148148148148) * (CAST(`ADS`.`Feature_23` AS DOUBLE) - 0.148148148148)) / 0.533607724201) + (-0.5 * -15.1371759627 - (0.5 * (CAST(`ADS`.`Feature_24` AS DOUBLE) - 0.0) * (CAST(`ADS`.`Feature_24` AS DOUBLE) - 0.0)) / 4.2445156522e-08) + (-0.5 * 3.30389753901 - (0.5 * (CAST(`ADS`.`Feature_25` AS DOUBLE) - 1.03703703704) * (CAST(`ADS`.`Feature_25` AS DOUBLE) - 1.03703703704)) / 4.33196163367) + (-0.5 * 5.1446909094 - (0.5 * (CAST(`ADS`.`Feature_26` AS DOUBLE) - 4.87037037037) * (CAST(`ADS`.`Feature_26` AS DOUBLE) - 4.87037037037)) / 27.2980110164) + (-0.5 * 5.12493702406 - (0.5 * (CAST(`ADS`.`Feature_27` AS DOUBLE) - 6.2962962963) * (CAST(`ADS`.`Feature_27` AS DOUBLE) - 6.2962962963)) / 26.7640603991) + (-0.5 * 4.98564137675 - (0.5 * (CAST(`ADS`.`Feature_28` AS DOUBLE) - 11.7777777778) * (CAST(`ADS`.`Feature_28` AS DOUBLE) - 11.7777777778)) / 23.2839506597) + (-0.5 * 4.82321601191 - (0.5 * (CAST(`ADS`.`Feature_29` AS DOUBLE) - 12.6111111111) * (CAST(`ADS`.`Feature_29` AS DOUBLE) - 12.6111111111)) / 19.793209919) + (-0.5 * 4.85793385851 - (0.5 * (CAST(`ADS`.`Feature_30` AS DOUBLE) - 5.37037037037) * (CAST(`ADS`.`Feature_30` AS DOUBLE) - 5.37037037037)) / 20.4924554608) + (-0.5 * -15.1371759627 - (0.5 * (CAST(`ADS`.`Feature_31` AS DOUBLE) - 0.0) * (CAST(`ADS`.`Feature_31` AS DOUBLE) - 0.0)) / 4.2445156522e-08) + (-0.5 * -15.1371759627 - (0.5 * (CAST(`ADS`.`Feature_32` AS DOUBLE) - 0.0) * (CAST(`ADS`.`Feature_32` AS DOUBLE) - 0.0)) / 4.2445156522e-08) + (-0.5 * 3.51467873132 - (0.5 * (CAST(`ADS`.`Feature_33` AS DOUBLE) - 1.14814814815) * (CAST(`ADS`.`Feature_33` AS DOUBLE) - 1.14814814815)) / 5.34842253902) + (-0.5 * 5.24727121668 - (0.5 * (CAST(`ADS`.`Feature_34` AS DOUBLE) - 7.55555555556) * (CAST(`ADS`.`Feature_34` AS DOUBLE) - 7.55555555556)) / 30.2469136227) + (-0.5 * 4.85694602222 - (0.5 * (CAST(`ADS`.`Feature_35` AS DOUBLE) - 13.1666666667) * (CAST(`ADS`.`Feature_35` AS DOUBLE) - 13.1666666667)) / 20.4722222647) + (-0.5 * 3.96621491839 - (0.5 * (CAST(`ADS`.`Feature_36` AS DOUBLE) - 14.3148148148) * (CAST(`ADS`.`Feature_36` AS DOUBLE) - 14.3148148148)) / 8.40089167482) + (-0.5 * 4.96197480769 - (0.5 * (CAST(`ADS`.`Feature_37` AS DOUBLE) - 11.037037037) * (CAST(`ADS`.`Feature_37` AS DOUBLE) - 11.037037037)) / 22.7393690411) + (-0.5 * 4.29299483855 - (0.5 * (CAST(`ADS`.`Feature_38` AS DOUBLE) - 4.01851851852) * (CAST(`ADS`.`Feature_38` AS DOUBLE) - 4.01851851852)) / 11.6478052551) + (-0.5 * -15.1371759627 - (0.5 * (CAST(`ADS`.`Feature_39` AS DOUBLE) - 0.0) * (CAST(`ADS`.`Feature_39` AS DOUBLE) - 0.0)) / 4.2445156522e-08) + (-0.5 * -15.1371759627 - (0.5 * (CAST(`ADS`.`Feature_40` AS DOUBLE) - 0.0) * (CAST(`ADS`.`Feature_40` AS DOUBLE) - 0.0)) / 4.2445156522e-08) + (-0.5 * 2.19534048085 - (0.5 * (CAST(`ADS`.`Feature_41` AS DOUBLE) - 0.425925925926) * (CAST(`ADS`.`Feature_41` AS DOUBLE) - 0.425925925926)) / 1.42969825918) + (-0.5 * 4.88840729035 - (0.5 * (CAST(`ADS`.`Feature_42` AS DOUBLE) - 4.27777777778) * (CAST(`ADS`.`Feature_42` AS DOUBLE) - 4.27777777778)) / 21.1265432523) + (-0.5 * 4.93668329472 - (0.5 * (CAST(`ADS`.`Feature_43` AS DOUBLE) - 11.7037037037) * (CAST(`ADS`.`Feature_43` AS DOUBLE) - 11.7037037037)) / 22.1714678065) + (-0.5 * 5.08221472347 - (0.5 * (CAST(`ADS`.`Feature_44` AS DOUBLE) - 9.85185185185) * (CAST(`ADS`.`Feature_44` AS DOUBLE) - 9.85185185185)) / 25.6447188353) + (-0.5 * 4.73517872974 - (0.5 * (CAST(`ADS`.`Feature_45` AS DOUBLE) - 3.2037037037) * (CAST(`ADS`.`Feature_45` AS DOUBLE) - 3.2037037037)) / 18.1251715102) + (-0.5 * 1.66293566747 - (0.5 * (CAST(`ADS`.`Feature_46` AS DOUBLE) - 0.444444444444) * (CAST(`ADS`.`Feature_46` AS DOUBLE) - 0.444444444444)) / 0.839506215285) + (-0.5 * -15.1371759627 - (0.5 * (CAST(`ADS`.`Feature_47` AS DOUBLE) - 0.0) * (CAST(`ADS`.`Feature_47` AS DOUBLE) - 0.0)) / 4.2445156522e-08) + (-0.5 * -15.1371759627 - (0.5 * (CAST(`ADS`.`Feature_48` AS DOUBLE) - 0.0) * (CAST(`ADS`.`Feature_48` AS DOUBLE) - 0.0)) / 4.2445156522e-08) + (-0.5 * -0.575570145182 - (0.5 * (CAST(`ADS`.`Feature_49` AS DOUBLE) - 0.0555555555556) * (CAST(`ADS`.`Feature_49` AS DOUBLE) - 0.0555555555556)) / 0.0895062152847) + (-0.5 * 4.77252165024 - (0.5 * (CAST(`ADS`.`Feature_50` AS DOUBLE) - 3.66666666667) * (CAST(`ADS`.`Feature_50` AS DOUBLE) - 3.66666666667)) / 18.8148148573) + (-0.5 * 4.70831358888 - (0.5 * (CAST(`ADS`.`Feature_51` AS DOUBLE) - 11.8518518519) * (CAST(`ADS`.`Feature_51` AS DOUBLE) - 11.8518518519)) / 17.6447188353) + (-0.5 * 5.05488558136 - (0.5 * (CAST(`ADS`.`Feature_52` AS DOUBLE) - 5.48148148148) * (CAST(`ADS`.`Feature_52` AS DOUBLE) - 5.48148148148)) / 24.9533608106) + (-0.5 * 1.54146939293 - (0.5 * (CAST(`ADS`.`Feature_53` AS DOUBLE) - 0.185185185185) * (CAST(`ADS`.`Feature_53` AS DOUBLE) - 0.185185185185)) / 0.743484267411) + (-0.5 * -15.1371759627 - (0.5 * (CAST(`ADS`.`Feature_54` AS DOUBLE) - 0.0) * (CAST(`ADS`.`Feature_54` AS DOUBLE) - 0.0)) / 4.2445156522e-08) + (-0.5 * -15.1371759627 - (0.5 * (CAST(`ADS`.`Feature_55` AS DOUBLE) - 0.0) * (CAST(`ADS`.`Feature_55` AS DOUBLE) - 0.0)) / 4.2445156522e-08) + (-0.5 * -15.1371759627 - (0.5 * (CAST(`ADS`.`Feature_56` AS DOUBLE) - 0.0) * (CAST(`ADS`.`Feature_56` AS DOUBLE) - 0.0)) / 4.2445156522e-08) + (-0.5 * 0.627252240974 - (0.5 * (CAST(`ADS`.`Feature_57` AS DOUBLE) - 0.12962962963) * (CAST(`ADS`.`Feature_57` AS DOUBLE) - 0.12962962963)) / 0.298011016382) + (-0.5 * 5.02147392089 - (0.5 * (CAST(`ADS`.`Feature_58` AS DOUBLE) - 6.57407407407) * (CAST(`ADS`.`Feature_58` AS DOUBLE) - 6.57407407407)) / 24.1334019629) + (-0.5 * 4.8531698679 - (0.5 * (CAST(`ADS`.`Feature_59` AS DOUBLE) - 11.2222222222) * (CAST(`ADS`.`Feature_59` AS DOUBLE) - 11.2222222222)) / 20.3950617708) + (-0.5 * 4.36850453203 - (0.5 * (CAST(`ADS`.`Feature_60` AS DOUBLE) - 2.35185185185) * (CAST(`ADS`.`Feature_60` AS DOUBLE) - 2.35185185185)) / 12.561385502) + (-0.5 * -2.16979677789 - (0.5 * (CAST(`ADS`.`Feature_61` AS DOUBLE) - 0.0185185185185) * (CAST(`ADS`.`Feature_61` AS DOUBLE) - 0.0185185185185)) / 0.0181756254356) + (-0.5 * -15.1371759627 - (0.5 * (CAST(`ADS`.`Feature_62` AS DOUBLE) - 0.0) * (CAST(`ADS`.`Feature_62` AS DOUBLE) - 0.0)) / 4.2445156522e-08) + (-0.5 * -15.1371759627 - (0.5 * (CAST(`ADS`.`Feature_63` AS DOUBLE) - 0.0) * (CAST(`ADS`.`Feature_63` AS DOUBLE) - 0.0)) / 4.2445156522e-08) AS `Score_7`, NULL AS `LogProba_8`, NULL AS `Proba_8`, -2.30036039797 + (-0.5 * -15.1371759627 - (0.5 * (CAST(`ADS`.`Feature_0` AS DOUBLE) - 0.0) * (CAST(`ADS`.`Feature_0` AS DOUBLE) - 0.0)) / 4.2445156522e-08) + (-0.5 * -0.238113307721 - (0.5 * (CAST(`ADS`.`Feature_1` AS DOUBLE) - 0.0888888888889) * (CAST(`ADS`.`Feature_1` AS DOUBLE) - 0.0888888888889)) / 0.125432141211) + (-0.5 * 4.52311765752 - (0.5 * (CAST(`ADS`.`Feature_2` AS DOUBLE) - 4.77777777778) * (CAST(`ADS`.`Feature_2` AS DOUBLE) - 4.77777777778)) / 14.6617284375) + (-0.5 * 4.05331609784 - (0.5 * (CAST(`ADS`.`Feature_3` AS DOUBLE) - 11.8888888889) * (CAST(`ADS`.`Feature_3` AS DOUBLE) - 11.8888888889)) / 9.16543214121) + (-0.5 * 4.41412043372 - (0.5 * (CAST(`ADS`.`Feature_4` AS DOUBLE) - 12.6888888889) * (CAST(`ADS`.`Feature_4` AS DOUBLE) - 12.6888888889)) / 13.1476543634) + (-0.5 * 4.8965261785 - (0.5 * (CAST(`ADS`.`Feature_5` AS DOUBLE) - 6.11111111111) * (CAST(`ADS`.`Feature_5` AS DOUBLE) - 6.11111111111)) / 21.2987654745) + (-0.5 * 2.04298239351 - (0.5 * (CAST(`ADS`.`Feature_6` AS DOUBLE) - 0.488888888889) * (CAST(`ADS`.`Feature_6` AS DOUBLE) - 0.488888888889)) / 1.22765436343) + (-0.5 * -15.1371759627 - (0.5 * (CAST(`ADS`.`Feature_7` AS DOUBLE) - 0.0) * (CAST(`ADS`.`Feature_7` AS DOUBLE) - 0.0)) / 4.2445156522e-08) + (-0.5 * -1.99125632577 - (0.5 * (CAST(`ADS`.`Feature_8` AS DOUBLE) - 0.0222222222222) * (CAST(`ADS`.`Feature_8` AS DOUBLE) - 0.0222222222222)) / 0.0217284375069) + (-0.5 * 3.71811460705 - (0.5 * (CAST(`ADS`.`Feature_9` AS DOUBLE) - 1.57777777778) * (CAST(`ADS`.`Feature_9` AS DOUBLE) - 1.57777777778)) / 6.55506177084) + (-0.5 * 4.58597069013 - (0.5 * (CAST(`ADS`.`Feature_10` AS DOUBLE) - 12.3777777778) * (CAST(`ADS`.`Feature_10` AS DOUBLE) - 12.3777777778)) / 15.6128395486) + (-0.5 * 4.46786339932 - (0.5 * (CAST(`ADS`.`Feature_11` AS DOUBLE) - 12.3555555556) * (CAST(`ADS`.`Feature_11` AS DOUBLE) - 12.3555555556)) / 13.8735802894) + (-0.5 * 4.97124341802 - (0.5 * (CAST(`ADS`.`Feature_12` AS DOUBLE) - 9.6) * (CAST(`ADS`.`Feature_12` AS DOUBLE) - 9.6)) / 22.9511111536) + (-0.5 * 5.01868430606 - (0.5 * (CAST(`ADS`.`Feature_13` AS DOUBLE) - 10.5777777778) * (CAST(`ADS`.`Feature_13` AS DOUBLE) - 10.5777777778)) / 24.066172882) + (-0.5 * 4.37552452546 - (0.5 * (CAST(`ADS`.`Feature_14` AS DOUBLE) - 2.71111111111) * (CAST(`ADS`.`Feature_14` AS DOUBLE) - 2.71111111111)) / 12.6498765857) + (-0.5 * -15.1371759627 - (0.5 * (CAST(`ADS`.`Feature_15` AS DOUBLE) - 0.0) * (CAST(`ADS`.`Feature_15` AS DOUBLE) - 0.0)) / 4.2445156522e-08) + (-0.5 * -15.1371759627 - (0.5 * (CAST(`ADS`.`Feature_16` AS DOUBLE) - 0.0) * (CAST(`ADS`.`Feature_16` AS DOUBLE) - 0.0)) / 4.2445156522e-08) + (-0.5 * 4.47566375086 - (0.5 * (CAST(`ADS`.`Feature_17` AS DOUBLE) - 2.8) * (CAST(`ADS`.`Feature_17` AS DOUBLE) - 2.8)) / 13.9822222647) + (-0.5 * 4.9008294496 - (0.5 * (CAST(`ADS`.`Feature_18` AS DOUBLE) - 11.3777777778) * (CAST(`ADS`.`Feature_18` AS DOUBLE) - 11.3777777778)) / 21.3906173264) + (-0.5 * 5.2768696456 - (0.5 * (CAST(`ADS`.`Feature_19` AS DOUBLE) - 9.0) * (CAST(`ADS`.`Feature_19` AS DOUBLE) - 9.0)) / 31.155555598) + (-0.5 * 5.1289655957 - (0.5 * (CAST(`ADS`.`Feature_20` AS DOUBLE) - 8.48888888889) * (CAST(`ADS`.`Feature_20` AS DOUBLE) - 8.48888888889)) / 26.8720988079) + (-0.5 * 4.76079967223 - (0.5 * (CAST(`ADS`.`Feature_21` AS DOUBLE) - 11.4) * (CAST(`ADS`.`Feature_21` AS DOUBLE) - 11.4)) / 18.595555598) + (-0.5 * 4.08753010054 - (0.5 * (CAST(`ADS`.`Feature_22` AS DOUBLE) - 2.26666666667) * (CAST(`ADS`.`Feature_22` AS DOUBLE) - 2.26666666667)) / 9.48444448689) + (-0.5 * -15.1371759627 - (0.5 * (CAST(`ADS`.`Feature_23` AS DOUBLE) - 0.0) * (CAST(`ADS`.`Feature_23` AS DOUBLE) - 0.0)) / 4.2445156522e-08) + (-0.5 * -15.1371759627 - (0.5 * (CAST(`ADS`.`Feature_24` AS DOUBLE) - 0.0) * (CAST(`ADS`.`Feature_24` AS DOUBLE) - 0.0)) / 4.2445156522e-08) + (-0.5 * 3.40484554635 - (0.5 * (CAST(`ADS`.`Feature_25` AS DOUBLE) - 1.31111111111) * (CAST(`ADS`.`Feature_25` AS DOUBLE) - 1.31111111111)) / 4.79209880788) + (-0.5 * 5.1441757078 - (0.5 * (CAST(`ADS`.`Feature_26` AS DOUBLE) - 7.77777777778) * (CAST(`ADS`.`Feature_26` AS DOUBLE) - 7.77777777778)) / 27.2839506597) + (-0.5 * 4.35254227019 - (0.5 * (CAST(`ADS`.`Feature_27` AS DOUBLE) - 13.2444444444) * (CAST(`ADS`.`Feature_27` AS DOUBLE) - 13.2444444444)) / 12.3624691782) + (-0.5 * 4.16340678739 - (0.5 * (CAST(`ADS`.`Feature_28` AS DOUBLE) - 13.8888888889) * (CAST(`ADS`.`Feature_28` AS DOUBLE) - 13.8888888889)) / 10.2320988079) + (-0.5 * 5.10948120653 - (0.5 * (CAST(`ADS`.`Feature_29` AS DOUBLE) - 6.84444444444) * (CAST(`ADS`.`Feature_29` AS DOUBLE) - 6.84444444444)) / 26.3535802894) + (-0.5 * 1.62333841489 - (0.5 * (CAST(`ADS`.`Feature_30` AS DOUBLE) - 0.355555555556) * (CAST(`ADS`.`Feature_30` AS DOUBLE) - 0.355555555556)) / 0.806913622692) + (-0.5 * -15.1371759627 - (0.5 * (CAST(`ADS`.`Feature_31` AS DOUBLE) - 0.0) * (CAST(`ADS`.`Feature_31` AS DOUBLE) - 0.0)) / 4.2445156522e-08) + (-0.5 * -15.1371759627 - (0.5 * (CAST(`ADS`.`Feature_32` AS DOUBLE) - 0.0) * (CAST(`ADS`.`Feature_32` AS DOUBLE) - 0.0)) / 4.2445156522e-08) + (-0.5 * -0.238113307721 - (0.5 * (CAST(`ADS`.`Feature_33` AS DOUBLE) - 0.0888888888889) * (CAST(`ADS`.`Feature_33` AS DOUBLE) - 0.0888888888889)) / 0.125432141211) + (-0.5 * 4.78462656688 - (0.5 * (CAST(`ADS`.`Feature_34` AS DOUBLE) - 6.57777777778) * (CAST(`ADS`.`Feature_34` AS DOUBLE) - 6.57777777778)) / 19.0439506597) + (-0.5 * 4.12623802176 - (0.5 * (CAST(`ADS`.`Feature_35` AS DOUBLE) - 14.0888888889) * (CAST(`ADS`.`Feature_35` AS DOUBLE) - 14.0888888889)) / 9.85876547454) + (-0.5 * 3.89950659621 - (0.5 * (CAST(`ADS`.`Feature_36` AS DOUBLE) - 13.6888888889) * (CAST(`ADS`.`Feature_36` AS DOUBLE) - 13.6888888889)) / 7.85876547454) + (-0.5 * 5.00380000269 - (0.5 * (CAST(`ADS`.`Feature_37` AS DOUBLE) - 5.57777777778) * (CAST(`ADS`.`Feature_37` AS DOUBLE) - 5.57777777778)) / 23.7106173264) + (-0.5 * 0.508686408297 - (0.5 * (CAST(`ADS`.`Feature_38` AS DOUBLE) - 0.155555555556) * (CAST(`ADS`.`Feature_38` AS DOUBLE) - 0.155555555556)) / 0.26469140047) + (-0.5 * -15.1371759627 - (0.5 * (CAST(`ADS`.`Feature_39` AS DOUBLE) - 0.0) * (CAST(`ADS`.`Feature_39` AS DOUBLE) - 0.0)) / 4.2445156522e-08) + (-0.5 * -15.1371759627 - (0.5 * (CAST(`ADS`.`Feature_40` AS DOUBLE) - 0.0) * (CAST(`ADS`.`Feature_40` AS DOUBLE) - 0.0)) / 4.2445156522e-08) + (-0.5 * 2.71868135628 - (0.5 * (CAST(`ADS`.`Feature_41` AS DOUBLE) - 0.822222222222) * (CAST(`ADS`.`Feature_41` AS DOUBLE) - 0.822222222222)) / 2.41283954862) + (-0.5 * 5.17704142902 - (0.5 * (CAST(`ADS`.`Feature_42` AS DOUBLE) - 10.2666666667) * (CAST(`ADS`.`Feature_42` AS DOUBLE) - 10.2666666667)) / 28.195555598) + (-0.5 * 5.04979541242 - (0.5 * (CAST(`ADS`.`Feature_43` AS DOUBLE) - 8.46666666667) * (CAST(`ADS`.`Feature_43` AS DOUBLE) - 8.46666666667)) / 24.8266667091) + (-0.5 * 5.13782071593 - (0.5 * (CAST(`ADS`.`Feature_44` AS DOUBLE) - 9.33333333333) * (CAST(`ADS`.`Feature_44` AS DOUBLE) - 9.33333333333)) / 27.1111111536) + (-0.5 * 5.04012152823 - (0.5 * (CAST(`ADS`.`Feature_45` AS DOUBLE) - 10.1111111111) * (CAST(`ADS`.`Feature_45` AS DOUBLE) - 10.1111111111)) / 24.5876543634) + (-0.5 * 3.71206955317 - (0.5 * (CAST(`ADS`.`Feature_46` AS DOUBLE) - 1.53333333333) * (CAST(`ADS`.`Feature_46` AS DOUBLE) - 1.53333333333)) / 6.515555598) + (-0.5 * -15.1371759627 - (0.5 * (CAST(`ADS`.`Feature_47` AS DOUBLE) - 0.0) * (CAST(`ADS`.`Feature_47` AS DOUBLE) - 0.0)) / 4.2445156522e-08) + (-0.5 * -15.1371759627 - (0.5 * (CAST(`ADS`.`Feature_48` AS DOUBLE) - 0.0) * (CAST(`ADS`.`Feature_48` AS DOUBLE) - 0.0)) / 4.2445156522e-08) + (-0.5 * 3.37662755982 - (0.5 * (CAST(`ADS`.`Feature_49` AS DOUBLE) - 1.08888888889) * (CAST(`ADS`.`Feature_49` AS DOUBLE) - 1.08888888889)) / 4.65876547454) + (-0.5 * 4.87600639176 - (0.5 * (CAST(`ADS`.`Feature_50` AS DOUBLE) - 11.0222222222) * (CAST(`ADS`.`Feature_50` AS DOUBLE) - 11.0222222222)) / 20.866172882) + (-0.5 * 4.7120413751 - (0.5 * (CAST(`ADS`.`Feature_51` AS DOUBLE) - 8.57777777778) * (CAST(`ADS`.`Feature_51` AS DOUBLE) - 8.57777777778)) / 17.7106173264) + (-0.5 * 5.17928075816 - (0.5 * (CAST(`ADS`.`Feature_52` AS DOUBLE) - 9.08888888889) * (CAST(`ADS`.`Feature_52` AS DOUBLE) - 9.08888888889)) / 28.2587654745) + (-0.5 * 4.99526617137 - (0.5 * (CAST(`ADS`.`Feature_53` AS DOUBLE) - 11.1555555556) * (CAST(`ADS`.`Feature_53` AS DOUBLE) - 11.1555555556)) / 23.5091358449) + (-0.5 * 3.94915218448 - (0.5 * (CAST(`ADS`.`Feature_54` AS DOUBLE) - 1.91111111111) * (CAST(`ADS`.`Feature_54` AS DOUBLE) - 1.91111111111)) / 8.25876547454) + (-0.5 * -15.1371759627 - (0.5 * (CAST(`ADS`.`Feature_55` AS DOUBLE) - 0.0) * (CAST(`ADS`.`Feature_55` AS DOUBLE) - 0.0)) / 4.2445156522e-08) + (-0.5 * -15.1371759627 - (0.5 * (CAST(`ADS`.`Feature_56` AS DOUBLE) - 0.0) * (CAST(`ADS`.`Feature_56` AS DOUBLE) - 0.0)) / 4.2445156522e-08) + (-0.5 * 0.324871231605 - (0.5 * (CAST(`ADS`.`Feature_57` AS DOUBLE) - 0.155555555556) * (CAST(`ADS`.`Feature_57` AS DOUBLE) - 0.155555555556)) / 0.220246956025) + (-0.5 * 4.52715127642 - (0.5 * (CAST(`ADS`.`Feature_58` AS DOUBLE) - 4.88888888889) * (CAST(`ADS`.`Feature_58` AS DOUBLE) - 4.88888888889)) / 14.7209876968) + (-0.5 * 4.10610073628 - (0.5 * (CAST(`ADS`.`Feature_59` AS DOUBLE) - 12.9333333333) * (CAST(`ADS`.`Feature_59` AS DOUBLE) - 12.9333333333)) / 9.66222226467) + (-0.5 * 4.09788966688 - (0.5 * (CAST(`ADS`.`Feature_60` AS DOUBLE) - 13.7111111111) * (CAST(`ADS`.`Feature_60` AS DOUBLE) - 13.7111111111)) / 9.58320991899) + (-0.5 * 4.92162021923 - (0.5 * (CAST(`ADS`.`Feature_61` AS DOUBLE) - 6.4) * (CAST(`ADS`.`Feature_61` AS DOUBLE) - 6.4)) / 21.8400000424) + (-0.5 * 1.25982076181 - (0.5 * (CAST(`ADS`.`Feature_62` AS DOUBLE) - 0.288888888889) * (CAST(`ADS`.`Feature_62` AS DOUBLE) - 0.288888888889)) / 0.560987696766) + (-0.5 * -15.1371759627 - (0.5 * (CAST(`ADS`.`Feature_63` AS DOUBLE) - 0.0) * (CAST(`ADS`.`Feature_63` AS DOUBLE) - 0.0)) / 4.2445156522e-08) AS `Score_8`, NULL AS `LogProba_9`, NULL AS `Proba_9`, -2.46943672802 + (-0.5 * -15.1371759627 - (0.5 * (CAST(`ADS`.`Feature_0` AS DOUBLE) - 0.0) * (CAST(`ADS`.`Feature_0` AS DOUBLE) - 0.0)) / 4.2445156522e-08) + (-0.5 * -0.0807086892639 - (0.5 * (CAST(`ADS`.`Feature_1` AS DOUBLE) - 0.105263157895) * (CAST(`ADS`.`Feature_1` AS DOUBLE) - 0.105263157895)) / 0.146814446877) + (-0.5 * 4.53403784925 - (0.5 * (CAST(`ADS`.`Feature_2` AS DOUBLE) - 5.42105263158) * (CAST(`ADS`.`Feature_2` AS DOUBLE) - 5.42105263158)) / 14.8227147239) + (-0.5 * 4.8267995041 - (0.5 * (CAST(`ADS`.`Feature_3` AS DOUBLE) - 11.3684210526) * (CAST(`ADS`.`Feature_3` AS DOUBLE) - 11.3684210526)) / 19.8642659704) + (-0.5 * 4.33562793296 - (0.5 * (CAST(`ADS`.`Feature_4` AS DOUBLE) - 10.9473684211) * (CAST(`ADS`.`Feature_4` AS DOUBLE) - 10.9473684211)) / 12.1551246962) + (-0.5 * 5.28817235324 - (0.5 * (CAST(`ADS`.`Feature_5` AS DOUBLE) - 6.26315789474) * (CAST(`ADS`.`Feature_5` AS DOUBLE) - 6.26315789474)) / 31.5096953333) + (-0.5 * 4.9396898199 - (0.5 * (CAST(`ADS`.`Feature_6` AS DOUBLE) - 2.15789473684) * (CAST(`ADS`.`Feature_6` AS DOUBLE) - 2.15789473684)) / 22.2382271893) + (-0.5 * -0.238797883154 - (0.5 * (CAST(`ADS`.`Feature_7` AS DOUBLE) - 0.0789473684211) * (CAST(`ADS`.`Feature_7` AS DOUBLE) - 0.0789473684211)) / 0.125346302833) + (-0.5 * -15.1371759627 - (0.5 * (CAST(`ADS`.`Feature_8` AS DOUBLE) - 0.0) * (CAST(`ADS`.`Feature_8` AS DOUBLE) - 0.0)) / 4.2445156522e-08) + (-0.5 * 4.0959978099 - (0.5 * (CAST(`ADS`.`Feature_9` AS DOUBLE) - 2.52631578947) * (CAST(`ADS`.`Feature_9` AS DOUBLE) - 2.52631578947)) / 9.56509699535) + (-0.5 * 4.6606071065 - (0.5 * (CAST(`ADS`.`Feature_10` AS DOUBLE) - 12.5789473684) * (CAST(`ADS`.`Feature_10` AS DOUBLE) - 12.5789473684)) / 16.8227147239) + (-0.5 * 4.87155740464 - (0.5 * (CAST(`ADS`.`Feature_11` AS DOUBLE) - 9.55263157895) * (CAST(`ADS`.`Feature_11` AS DOUBLE) - 9.55263157895)) / 20.7735457488) + (-0.5 * 4.66442821761 - (0.5 * (CAST(`ADS`.`Feature_12` AS DOUBLE) - 10.1842105263) * (CAST(`ADS`.`Feature_12` AS DOUBLE) - 10.1842105263)) / 16.887119156) + (-0.5 * 4.93909796567 - (0.5 * (CAST(`ADS`.`Feature_13` AS DOUBLE) - 11.3421052632) * (CAST(`ADS`.`Feature_13` AS DOUBLE) - 11.3421052632)) / 22.2250692945) + (-0.5 * 5.34592277733 - (0.5 * (CAST(`ADS`.`Feature_14` AS DOUBLE) - 3.34210526316) * (CAST(`ADS`.`Feature_14` AS DOUBLE) - 3.34210526316)) / 33.3829640314) + (-0.5 * 0.713307646087 - (0.5 * (CAST(`ADS`.`Feature_15` AS DOUBLE) - 0.131578947368) * (CAST(`ADS`.`Feature_15` AS DOUBLE) - 0.131578947368)) / 0.324792286212) + (-0.5 * -15.1371759627 - (0.5 * (CAST(`ADS`.`Feature_16` AS DOUBLE) - 0.0) * (CAST(`ADS`.`Feature_16` AS DOUBLE) - 0.0)) / 4.2445156522e-08) + (-0.5 * 4.52370620859 - (0.5 * (CAST(`ADS`.`Feature_17` AS DOUBLE) - 3.52631578947) * (CAST(`ADS`.`Feature_17` AS DOUBLE) - 3.52631578947)) / 14.6703601532) + (-0.5 * 4.34136577002 - (0.5 * (CAST(`ADS`.`Feature_18` AS DOUBLE) - 12.3421052632) * (CAST(`ADS`.`Feature_18` AS DOUBLE) - 12.3421052632)) / 12.2250692945) + (-0.5 * 5.2872048524 - (0.5 * (CAST(`ADS`.`Feature_19` AS DOUBLE) - 6.31578947368) * (CAST(`ADS`.`Feature_19` AS DOUBLE) - 6.31578947368)) / 31.4792244192) + (-0.5 * 4.94775387947 - (0.5 * (CAST(`ADS`.`Feature_20` AS DOUBLE) - 9.05263157895) * (CAST(`ADS`.`Feature_20` AS DOUBLE) - 9.05263157895)) / 22.4182825909) + (-0.5 * 4.47202525773 - (0.5 * (CAST(`ADS`.`Feature_21` AS DOUBLE) - 13.4473684211) * (CAST(`ADS`.`Feature_21` AS DOUBLE) - 13.4473684211)) / 13.9314404857) + (-0.5 * 4.82264222026 - (0.5 * (CAST(`ADS`.`Feature_22` AS DOUBLE) - 3.81578947368) * (CAST(`ADS`.`Feature_22` AS DOUBLE) - 3.81578947368)) / 19.7818559981) + (-0.5 * 0.370847420993 - (0.5 * (CAST(`ADS`.`Feature_23` AS DOUBLE) - 0.0789473684211) * (CAST(`ADS`.`Feature_23` AS DOUBLE) - 0.0789473684211)) / 0.230609460728) + (-0.5 * -15.1371759627 - (0.5 * (CAST(`ADS`.`Feature_24` AS DOUBLE) - 0.0) * (CAST(`ADS`.`Feature_24` AS DOUBLE) - 0.0)) / 4.2445156522e-08) + (-0.5 * 3.7450570887 - (0.5 * (CAST(`ADS`.`Feature_25` AS DOUBLE) - 2.05263157895) * (CAST(`ADS`.`Feature_25` AS DOUBLE) - 2.05263157895)) / 6.73407206461) + (-0.5 * 4.97481550155 - (0.5 * (CAST(`ADS`.`Feature_26` AS DOUBLE) - 9.42105263158) * (CAST(`ADS`.`Feature_26` AS DOUBLE) - 9.42105263158)) / 23.0332410397) + (-0.5 * 4.38454831378 - (0.5 * (CAST(`ADS`.`Feature_27` AS DOUBLE) - 11.8421052632) * (CAST(`ADS`.`Feature_27` AS DOUBLE) - 11.8421052632)) / 12.7645429787) + (-0.5 * 4.54153165888 - (0.5 * (CAST(`ADS`.`Feature_28` AS DOUBLE) - 12.5) * (CAST(`ADS`.`Feature_28` AS DOUBLE) - 12.5)) / 14.9342105688) + (-0.5 * 4.29919276242 - (0.5 * (CAST(`ADS`.`Feature_29` AS DOUBLE) - 13.7368421053) * (CAST(`ADS`.`Feature_29` AS DOUBLE) - 13.7368421053)) / 11.7202216491) + (-0.5 * 4.08353999394 - (0.5 * (CAST(`ADS`.`Feature_30` AS DOUBLE) - 3.97368421053) * (CAST(`ADS`.`Feature_30` AS DOUBLE) - 3.97368421053)) / 9.44667594272) + (-0.5 * -15.1371759627 - (0.5 * (CAST(`ADS`.`Feature_31` AS DOUBLE) - 0.0) * (CAST(`ADS`.`Feature_31` AS DOUBLE) - 0.0)) / 4.2445156522e-08) + (-0.5 * -15.1371759627 - (0.5 * (CAST(`ADS`.`Feature_32` AS DOUBLE) - 0.0) * (CAST(`ADS`.`Feature_32` AS DOUBLE) - 0.0)) / 4.2445156522e-08) + (-0.5 * 0.711173173837 - (0.5 * (CAST(`ADS`.`Feature_33` AS DOUBLE) - 0.210526315789) * (CAST(`ADS`.`Feature_33` AS DOUBLE) - 0.210526315789)) / 0.324099765437) + (-0.5 * 4.86594110266 - (0.5 * (CAST(`ADS`.`Feature_34` AS DOUBLE) - 3.02631578947) * (CAST(`ADS`.`Feature_34` AS DOUBLE) - 3.02631578947)) / 20.6572022585) + (-0.5 * 5.08332199528 - (0.5 * (CAST(`ADS`.`Feature_35` AS DOUBLE) - 4.89473684211) * (CAST(`ADS`.`Feature_35` AS DOUBLE) - 4.89473684211)) / 25.6731302364) + (-0.5 * 4.81632086472 - (0.5 * (CAST(`ADS`.`Feature_36` AS DOUBLE) - 4.02631578947) * (CAST(`ADS`.`Feature_36` AS DOUBLE) - 4.02631578947)) / 19.6572022585) + (-0.5 * 4.20929805116 - (0.5 * (CAST(`ADS`.`Feature_37` AS DOUBLE) - 11.6052631579) * (CAST(`ADS`.`Feature_37` AS DOUBLE) - 11.6052631579)) / 10.7126039206) + (-0.5 * 4.11180046594 - (0.5 * (CAST(`ADS`.`Feature_38` AS DOUBLE) - 4.57894736842) * (CAST(`ADS`.`Feature_38` AS DOUBLE) - 4.57894736842)) / 9.71745156599) + (-0.5 * -15.1371759627 - (0.5 * (CAST(`ADS`.`Feature_39` AS DOUBLE) - 0.0) * (CAST(`ADS`.`Feature_39` AS DOUBLE) - 0.0)) / 4.2445156522e-08) + (-0.5 * -15.1371759627 - (0.5 * (CAST(`ADS`.`Feature_40` AS DOUBLE) - 0.0) * (CAST(`ADS`.`Feature_40` AS DOUBLE) - 0.0)) / 4.2445156522e-08) + (-0.5 * 2.34133491994 - (0.5 * (CAST(`ADS`.`Feature_41` AS DOUBLE) - 0.236842105263) * (CAST(`ADS`.`Feature_41` AS DOUBLE) - 0.236842105263)) / 1.65443217541) + (-0.5 * 1.41388973931 - (0.5 * (CAST(`ADS`.`Feature_42` AS DOUBLE) - 0.236842105263) * (CAST(`ADS`.`Feature_42` AS DOUBLE) - 0.236842105263)) / 0.654432175409) + (-0.5 * 2.61722737596 - (0.5 * (CAST(`ADS`.`Feature_43` AS DOUBLE) - 0.368421052632) * (CAST(`ADS`.`Feature_43` AS DOUBLE) - 0.368421052632)) / 2.18005544411) + (-0.5 * 4.69097450992 - (0.5 * (CAST(`ADS`.`Feature_44` AS DOUBLE) - 2.02631578947) * (CAST(`ADS`.`Feature_44` AS DOUBLE) - 2.02631578947)) / 17.3414127848) + (-0.5 * 4.66405907014 - (0.5 * (CAST(`ADS`.`Feature_45` AS DOUBLE) - 9.52631578947) * (CAST(`ADS`.`Feature_45` AS DOUBLE) - 9.52631578947)) / 16.880886469) + (-0.5 * 4.60925314499 - (0.5 * (CAST(`ADS`.`Feature_46` AS DOUBLE) - 5.42105263158) * (CAST(`ADS`.`Feature_46` AS DOUBLE) - 5.42105263158)) / 15.9806094607) + (-0.5 * -15.1371759627 - (0.5 * (CAST(`ADS`.`Feature_47` AS DOUBLE) - 0.0) * (CAST(`ADS`.`Feature_47` AS DOUBLE) - 0.0)) / 4.2445156522e-08) + (-0.5 * -15.1371759627 - (0.5 * (CAST(`ADS`.`Feature_48` AS DOUBLE) - 0.0) * (CAST(`ADS`.`Feature_48` AS DOUBLE) - 0.0)) / 4.2445156522e-08) + (-0.5 * 2.40616117538 - (0.5 * (CAST(`ADS`.`Feature_49` AS DOUBLE) - 0.394736842105) * (CAST(`ADS`.`Feature_49` AS DOUBLE) - 0.394736842105)) / 1.76523549951) + (-0.5 * 5.05830293757 - (0.5 * (CAST(`ADS`.`Feature_50` AS DOUBLE) - 5.47368421053) * (CAST(`ADS`.`Feature_50` AS DOUBLE) - 5.47368421053)) / 25.0387812059) + (-0.5 * 4.81811597616 - (0.5 * (CAST(`ADS`.`Feature_51` AS DOUBLE) - 4.78947368421) * (CAST(`ADS`.`Feature_51` AS DOUBLE) - 4.78947368421)) / 19.6925208181) + (-0.5 * 5.11478657761 - (0.5 * (CAST(`ADS`.`Feature_52` AS DOUBLE) - 6.07894736842) * (CAST(`ADS`.`Feature_52` AS DOUBLE) - 6.07894736842)) / 26.4937673555) + (-0.5 * 5.17747405175 - (0.5 * (CAST(`ADS`.`Feature_53` AS DOUBLE) - 10.0526315789) * (CAST(`ADS`.`Feature_53` AS DOUBLE) - 10.0526315789)) / 28.2077562751) + (-0.5 * 5.21904603496 - (0.5 * (CAST(`ADS`.`Feature_54` AS DOUBLE) - 5.44736842105) * (CAST(`ADS`.`Feature_54` AS DOUBLE) - 5.44736842105)) / 29.4051246962) + (-0.5 * 0.713307646087 - (0.5 * (CAST(`ADS`.`Feature_55` AS DOUBLE) - 0.131578947368) * (CAST(`ADS`.`Feature_55` AS DOUBLE) - 0.131578947368)) / 0.324792286212) + (-0.5 * -15.1371759627 - (0.5 * (CAST(`ADS`.`Feature_56` AS DOUBLE) - 0.0) * (CAST(`ADS`.`Feature_56` AS DOUBLE) - 0.0)) / 4.2445156522e-08) + (-0.5 * -1.16062828277 - (0.5 * (CAST(`ADS`.`Feature_57` AS DOUBLE) - 0.0526315789474) * (CAST(`ADS`.`Feature_57` AS DOUBLE) - 0.0526315789474)) / 0.04986153829) + (-0.5 * 4.77264705952 - (0.5 * (CAST(`ADS`.`Feature_58` AS DOUBLE) - 5.84210526316) * (CAST(`ADS`.`Feature_58` AS DOUBLE) - 5.84210526316)) / 18.8171745577) + (-0.5 * 4.91866821382 - (0.5 * (CAST(`ADS`.`Feature_59` AS DOUBLE) - 11.5263157895) * (CAST(`ADS`.`Feature_59` AS DOUBLE) - 11.5263157895)) / 21.7756233111) + (-0.5 * 4.67876012691 - (0.5 * (CAST(`ADS`.`Feature_60` AS DOUBLE) - 13.0263157895) * (CAST(`ADS`.`Feature_60` AS DOUBLE) - 13.0263157895)) / 17.130886469) + (-0.5 * 5.25029930306 - (0.5 * (CAST(`ADS`.`Feature_61` AS DOUBLE) - 8.76315789474) * (CAST(`ADS`.`Feature_61` AS DOUBLE) - 8.76315789474)) / 30.3386427017) + (-0.5 * 4.83017547528 - (0.5 * (CAST(`ADS`.`Feature_62` AS DOUBLE) - 2.55263157895) * (CAST(`ADS`.`Feature_62` AS DOUBLE) - 2.55263157895)) / 19.9314404857) + (-0.5 * 0.459858782975 - (0.5 * (CAST(`ADS`.`Feature_63` AS DOUBLE) - 0.105263157895) * (CAST(`ADS`.`Feature_63` AS DOUBLE) - 0.105263157895)) / 0.252077604772) AS `Score_9` 
FROM digits AS `ADS`), 
orig_cte AS 
(SELECT `RawScores`.`KEY` AS `KEY`, `RawScores`.`Score_0` AS `Score_0`, `RawScores`.`Score_1` AS `Score_1`, `RawScores`.`Score_2` AS `Score_2`, `RawScores`.`Score_3` AS `Score_3`, `RawScores`.`Score_4` AS `Score_4`, `RawScores`.`Score_5` AS `Score_5`, `RawScores`.`Score_6` AS `Score_6`, `RawScores`.`Score_7` AS `Score_7`, `RawScores`.`Score_8` AS `Score_8`, `RawScores`.`Score_9` AS `Score_9`, `RawScores`.`Proba_0` AS `Proba_0`, `RawScores`.`Proba_1` AS `Proba_1`, `RawScores`.`Proba_2` AS `Proba_2`, `RawScores`.`Proba_3` AS `Proba_3`, `RawScores`.`Proba_4` AS `Proba_4`, `RawScores`.`Proba_5` AS `Proba_5`, `RawScores`.`Proba_6` AS `Proba_6`, `RawScores`.`Proba_7` AS `Proba_7`, `RawScores`.`Proba_8` AS `Proba_8`, `RawScores`.`Proba_9` AS `Proba_9`, `RawScores`.`LogProba_0` AS `LogProba_0`, `RawScores`.`LogProba_1` AS `LogProba_1`, `RawScores`.`LogProba_2` AS `LogProba_2`, `RawScores`.`LogProba_3` AS `LogProba_3`, `RawScores`.`LogProba_4` AS `LogProba_4`, `RawScores`.`LogProba_5` AS `LogProba_5`, `RawScores`.`LogProba_6` AS `LogProba_6`, `RawScores`.`LogProba_7` AS `LogProba_7`, `RawScores`.`LogProba_8` AS `LogProba_8`, `RawScores`.`LogProba_9` AS `LogProba_9`, CAST(NULL AS SIGNED INTEGER) AS `Decision`, NULL AS `DecisionProba` 
FROM `RawScores`), 
score_class_union AS 
(SELECT scu.`KEY_u` AS `KEY_u`, scu.class AS class, scu.`LogProba` AS `LogProba`, scu.`Proba` AS `Proba`, scu.`Score` AS `Score` 
FROM (SELECT orig_cte.`KEY` AS `KEY_u`, 0 AS class, orig_cte.`LogProba_0` AS `LogProba`, orig_cte.`Proba_0` AS `Proba`, orig_cte.`Score_0` AS `Score` 
FROM orig_cte UNION ALL SELECT orig_cte.`KEY` AS `KEY_u`, 1 AS class, orig_cte.`LogProba_1` AS `LogProba`, orig_cte.`Proba_1` AS `Proba`, orig_cte.`Score_1` AS `Score` 
FROM orig_cte UNION ALL SELECT orig_cte.`KEY` AS `KEY_u`, 2 AS class, orig_cte.`LogProba_2` AS `LogProba`, orig_cte.`Proba_2` AS `Proba`, orig_cte.`Score_2` AS `Score` 
FROM orig_cte UNION ALL SELECT orig_cte.`KEY` AS `KEY_u`, 3 AS class, orig_cte.`LogProba_3` AS `LogProba`, orig_cte.`Proba_3` AS `Proba`, orig_cte.`Score_3` AS `Score` 
FROM orig_cte UNION ALL SELECT orig_cte.`KEY` AS `KEY_u`, 4 AS class, orig_cte.`LogProba_4` AS `LogProba`, orig_cte.`Proba_4` AS `Proba`, orig_cte.`Score_4` AS `Score` 
FROM orig_cte UNION ALL SELECT orig_cte.`KEY` AS `KEY_u`, 5 AS class, orig_cte.`LogProba_5` AS `LogProba`, orig_cte.`Proba_5` AS `Proba`, orig_cte.`Score_5` AS `Score` 
FROM orig_cte UNION ALL SELECT orig_cte.`KEY` AS `KEY_u`, 6 AS class, orig_cte.`LogProba_6` AS `LogProba`, orig_cte.`Proba_6` AS `Proba`, orig_cte.`Score_6` AS `Score` 
FROM orig_cte UNION ALL SELECT orig_cte.`KEY` AS `KEY_u`, 7 AS class, orig_cte.`LogProba_7` AS `LogProba`, orig_cte.`Proba_7` AS `Proba`, orig_cte.`Score_7` AS `Score` 
FROM orig_cte UNION ALL SELECT orig_cte.`KEY` AS `KEY_u`, 8 AS class, orig_cte.`LogProba_8` AS `LogProba`, orig_cte.`Proba_8` AS `Proba`, orig_cte.`Score_8` AS `Score` 
FROM orig_cte UNION ALL SELECT orig_cte.`KEY` AS `KEY_u`, 9 AS class, orig_cte.`LogProba_9` AS `LogProba`, orig_cte.`Proba_9` AS `Proba`, orig_cte.`Score_9` AS `Score` 
FROM orig_cte) AS scu), 
score_max AS 
(SELECT orig_cte.`KEY` AS `KEY`, orig_cte.`Score_0` AS `Score_0`, orig_cte.`Score_1` AS `Score_1`, orig_cte.`Score_2` AS `Score_2`, orig_cte.`Score_3` AS `Score_3`, orig_cte.`Score_4` AS `Score_4`, orig_cte.`Score_5` AS `Score_5`, orig_cte.`Score_6` AS `Score_6`, orig_cte.`Score_7` AS `Score_7`, orig_cte.`Score_8` AS `Score_8`, orig_cte.`Score_9` AS `Score_9`, orig_cte.`Proba_0` AS `Proba_0`, orig_cte.`Proba_1` AS `Proba_1`, orig_cte.`Proba_2` AS `Proba_2`, orig_cte.`Proba_3` AS `Proba_3`, orig_cte.`Proba_4` AS `Proba_4`, orig_cte.`Proba_5` AS `Proba_5`, orig_cte.`Proba_6` AS `Proba_6`, orig_cte.`Proba_7` AS `Proba_7`, orig_cte.`Proba_8` AS `Proba_8`, orig_cte.`Proba_9` AS `Proba_9`, orig_cte.`LogProba_0` AS `LogProba_0`, orig_cte.`LogProba_1` AS `LogProba_1`, orig_cte.`LogProba_2` AS `LogProba_2`, orig_cte.`LogProba_3` AS `LogProba_3`, orig_cte.`LogProba_4` AS `LogProba_4`, orig_cte.`LogProba_5` AS `LogProba_5`, orig_cte.`LogProba_6` AS `LogProba_6`, orig_cte.`LogProba_7` AS `LogProba_7`, orig_cte.`LogProba_8` AS `LogProba_8`, orig_cte.`LogProba_9` AS `LogProba_9`, orig_cte.`Decision` AS `Decision`, orig_cte.`DecisionProba` AS `DecisionProba`, max_select.`KEY_m` AS `KEY_m`, max_select.`max_Score` AS `max_Score` 
FROM orig_cte LEFT OUTER JOIN (SELECT score_class_union.`KEY_u` AS `KEY_m`, max(score_class_union.`Score`) AS `max_Score` 
FROM score_class_union GROUP BY score_class_union.`KEY_u`) AS max_select ON orig_cte.`KEY` = max_select.`KEY_m`), 
score_soft_max_deltas AS 
(SELECT score_max.`KEY` AS `KEY`, score_max.`Score_0` AS `Score_0`, score_max.`Score_1` AS `Score_1`, score_max.`Score_2` AS `Score_2`, score_max.`Score_3` AS `Score_3`, score_max.`Score_4` AS `Score_4`, score_max.`Score_5` AS `Score_5`, score_max.`Score_6` AS `Score_6`, score_max.`Score_7` AS `Score_7`, score_max.`Score_8` AS `Score_8`, score_max.`Score_9` AS `Score_9`, score_max.`Proba_0` AS `Proba_0`, score_max.`Proba_1` AS `Proba_1`, score_max.`Proba_2` AS `Proba_2`, score_max.`Proba_3` AS `Proba_3`, score_max.`Proba_4` AS `Proba_4`, score_max.`Proba_5` AS `Proba_5`, score_max.`Proba_6` AS `Proba_6`, score_max.`Proba_7` AS `Proba_7`, score_max.`Proba_8` AS `Proba_8`, score_max.`Proba_9` AS `Proba_9`, score_max.`LogProba_0` AS `LogProba_0`, score_max.`LogProba_1` AS `LogProba_1`, score_max.`LogProba_2` AS `LogProba_2`, score_max.`LogProba_3` AS `LogProba_3`, score_max.`LogProba_4` AS `LogProba_4`, score_max.`LogProba_5` AS `LogProba_5`, score_max.`LogProba_6` AS `LogProba_6`, score_max.`LogProba_7` AS `LogProba_7`, score_max.`LogProba_8` AS `LogProba_8`, score_max.`LogProba_9` AS `LogProba_9`, score_max.`Decision` AS `Decision`, score_max.`DecisionProba` AS `DecisionProba`, score_max.`KEY_m` AS `KEY_m`, score_max.`max_Score` AS `max_Score`, exp(score_max.`Score_0` - score_max.`max_Score`) AS `exp_delta_Score_0`, exp(score_max.`Score_1` - score_max.`max_Score`) AS `exp_delta_Score_1`, exp(score_max.`Score_2` - score_max.`max_Score`) AS `exp_delta_Score_2`, exp(score_max.`Score_3` - score_max.`max_Score`) AS `exp_delta_Score_3`, exp(score_max.`Score_4` - score_max.`max_Score`) AS `exp_delta_Score_4`, exp(score_max.`Score_5` - score_max.`max_Score`) AS `exp_delta_Score_5`, exp(score_max.`Score_6` - score_max.`max_Score`) AS `exp_delta_Score_6`, exp(score_max.`Score_7` - score_max.`max_Score`) AS `exp_delta_Score_7`, exp(score_max.`Score_8` - score_max.`max_Score`) AS `exp_delta_Score_8`, exp(score_max.`Score_9` - score_max.`max_Score`) AS `exp_delta_Score_9` 
FROM score_max), 
score_class_union_soft AS 
(SELECT soft_scu.`KEY` AS `KEY`, soft_scu.class AS class, soft_scu.`exp_delta_Score` AS `exp_delta_Score` 
FROM (SELECT score_soft_max_deltas.`KEY` AS `KEY`, 0 AS class, score_soft_max_deltas.`exp_delta_Score_0` AS `exp_delta_Score` 
FROM score_soft_max_deltas UNION ALL SELECT score_soft_max_deltas.`KEY` AS `KEY`, 1 AS class, score_soft_max_deltas.`exp_delta_Score_1` AS `exp_delta_Score` 
FROM score_soft_max_deltas UNION ALL SELECT score_soft_max_deltas.`KEY` AS `KEY`, 2 AS class, score_soft_max_deltas.`exp_delta_Score_2` AS `exp_delta_Score` 
FROM score_soft_max_deltas UNION ALL SELECT score_soft_max_deltas.`KEY` AS `KEY`, 3 AS class, score_soft_max_deltas.`exp_delta_Score_3` AS `exp_delta_Score` 
FROM score_soft_max_deltas UNION ALL SELECT score_soft_max_deltas.`KEY` AS `KEY`, 4 AS class, score_soft_max_deltas.`exp_delta_Score_4` AS `exp_delta_Score` 
FROM score_soft_max_deltas UNION ALL SELECT score_soft_max_deltas.`KEY` AS `KEY`, 5 AS class, score_soft_max_deltas.`exp_delta_Score_5` AS `exp_delta_Score` 
FROM score_soft_max_deltas UNION ALL SELECT score_soft_max_deltas.`KEY` AS `KEY`, 6 AS class, score_soft_max_deltas.`exp_delta_Score_6` AS `exp_delta_Score` 
FROM score_soft_max_deltas UNION ALL SELECT score_soft_max_deltas.`KEY` AS `KEY`, 7 AS class, score_soft_max_deltas.`exp_delta_Score_7` AS `exp_delta_Score` 
FROM score_soft_max_deltas UNION ALL SELECT score_soft_max_deltas.`KEY` AS `KEY`, 8 AS class, score_soft_max_deltas.`exp_delta_Score_8` AS `exp_delta_Score` 
FROM score_soft_max_deltas UNION ALL SELECT score_soft_max_deltas.`KEY` AS `KEY`, 9 AS class, score_soft_max_deltas.`exp_delta_Score_9` AS `exp_delta_Score` 
FROM score_soft_max_deltas) AS soft_scu), 
score_soft_max AS 
(SELECT score_soft_max_deltas.`KEY` AS `KEY`, score_soft_max_deltas.`Score_0` AS `Score_0`, score_soft_max_deltas.`Score_1` AS `Score_1`, score_soft_max_deltas.`Score_2` AS `Score_2`, score_soft_max_deltas.`Score_3` AS `Score_3`, score_soft_max_deltas.`Score_4` AS `Score_4`, score_soft_max_deltas.`Score_5` AS `Score_5`, score_soft_max_deltas.`Score_6` AS `Score_6`, score_soft_max_deltas.`Score_7` AS `Score_7`, score_soft_max_deltas.`Score_8` AS `Score_8`, score_soft_max_deltas.`Score_9` AS `Score_9`, score_soft_max_deltas.`Proba_0` AS `Proba_0`, score_soft_max_deltas.`Proba_1` AS `Proba_1`, score_soft_max_deltas.`Proba_2` AS `Proba_2`, score_soft_max_deltas.`Proba_3` AS `Proba_3`, score_soft_max_deltas.`Proba_4` AS `Proba_4`, score_soft_max_deltas.`Proba_5` AS `Proba_5`, score_soft_max_deltas.`Proba_6` AS `Proba_6`, score_soft_max_deltas.`Proba_7` AS `Proba_7`, score_soft_max_deltas.`Proba_8` AS `Proba_8`, score_soft_max_deltas.`Proba_9` AS `Proba_9`, score_soft_max_deltas.`LogProba_0` AS `LogProba_0`, score_soft_max_deltas.`LogProba_1` AS `LogProba_1`, score_soft_max_deltas.`LogProba_2` AS `LogProba_2`, score_soft_max_deltas.`LogProba_3` AS `LogProba_3`, score_soft_max_deltas.`LogProba_4` AS `LogProba_4`, score_soft_max_deltas.`LogProba_5` AS `LogProba_5`, score_soft_max_deltas.`LogProba_6` AS `LogProba_6`, score_soft_max_deltas.`LogProba_7` AS `LogProba_7`, score_soft_max_deltas.`LogProba_8` AS `LogProba_8`, score_soft_max_deltas.`LogProba_9` AS `LogProba_9`, score_soft_max_deltas.`Decision` AS `Decision`, score_soft_max_deltas.`DecisionProba` AS `DecisionProba`, score_soft_max_deltas.`KEY_m` AS `KEY_m`, score_soft_max_deltas.`max_Score` AS `max_Score`, score_soft_max_deltas.`exp_delta_Score_0` AS `exp_delta_Score_0`, score_soft_max_deltas.`exp_delta_Score_1` AS `exp_delta_Score_1`, score_soft_max_deltas.`exp_delta_Score_2` AS `exp_delta_Score_2`, score_soft_max_deltas.`exp_delta_Score_3` AS `exp_delta_Score_3`, score_soft_max_deltas.`exp_delta_Score_4` AS `exp_delta_Score_4`, score_soft_max_deltas.`exp_delta_Score_5` AS `exp_delta_Score_5`, score_soft_max_deltas.`exp_delta_Score_6` AS `exp_delta_Score_6`, score_soft_max_deltas.`exp_delta_Score_7` AS `exp_delta_Score_7`, score_soft_max_deltas.`exp_delta_Score_8` AS `exp_delta_Score_8`, score_soft_max_deltas.`exp_delta_Score_9` AS `exp_delta_Score_9`, sum_exp_t.`KEY_sum` AS `KEY_sum`, sum_exp_t.`sum_ExpDeltaScore` AS `sum_ExpDeltaScore` 
FROM score_soft_max_deltas LEFT OUTER JOIN (SELECT score_class_union_soft.`KEY` AS `KEY_sum`, sum(score_class_union_soft.`exp_delta_Score`) AS `sum_ExpDeltaScore` 
FROM score_class_union_soft GROUP BY score_class_union_soft.`KEY`) AS sum_exp_t ON score_soft_max_deltas.`KEY` = sum_exp_t.`KEY_sum`), 
union_with_max AS 
(SELECT score_class_union.`KEY_u` AS `KEY_u`, score_class_union.class AS class, score_class_union.`LogProba` AS `LogProba`, score_class_union.`Proba` AS `Proba`, score_class_union.`Score` AS `Score`, score_soft_max.`KEY` AS `KEY`, score_soft_max.`Score_0` AS `Score_0`, score_soft_max.`Score_1` AS `Score_1`, score_soft_max.`Score_2` AS `Score_2`, score_soft_max.`Score_3` AS `Score_3`, score_soft_max.`Score_4` AS `Score_4`, score_soft_max.`Score_5` AS `Score_5`, score_soft_max.`Score_6` AS `Score_6`, score_soft_max.`Score_7` AS `Score_7`, score_soft_max.`Score_8` AS `Score_8`, score_soft_max.`Score_9` AS `Score_9`, score_soft_max.`Proba_0` AS `Proba_0`, score_soft_max.`Proba_1` AS `Proba_1`, score_soft_max.`Proba_2` AS `Proba_2`, score_soft_max.`Proba_3` AS `Proba_3`, score_soft_max.`Proba_4` AS `Proba_4`, score_soft_max.`Proba_5` AS `Proba_5`, score_soft_max.`Proba_6` AS `Proba_6`, score_soft_max.`Proba_7` AS `Proba_7`, score_soft_max.`Proba_8` AS `Proba_8`, score_soft_max.`Proba_9` AS `Proba_9`, score_soft_max.`LogProba_0` AS `LogProba_0`, score_soft_max.`LogProba_1` AS `LogProba_1`, score_soft_max.`LogProba_2` AS `LogProba_2`, score_soft_max.`LogProba_3` AS `LogProba_3`, score_soft_max.`LogProba_4` AS `LogProba_4`, score_soft_max.`LogProba_5` AS `LogProba_5`, score_soft_max.`LogProba_6` AS `LogProba_6`, score_soft_max.`LogProba_7` AS `LogProba_7`, score_soft_max.`LogProba_8` AS `LogProba_8`, score_soft_max.`LogProba_9` AS `LogProba_9`, score_soft_max.`Decision` AS `Decision`, score_soft_max.`DecisionProba` AS `DecisionProba`, score_soft_max.`KEY_m` AS `KEY_m`, score_soft_max.`max_Score` AS `max_Score`, score_soft_max.`exp_delta_Score_0` AS `exp_delta_Score_0`, score_soft_max.`exp_delta_Score_1` AS `exp_delta_Score_1`, score_soft_max.`exp_delta_Score_2` AS `exp_delta_Score_2`, score_soft_max.`exp_delta_Score_3` AS `exp_delta_Score_3`, score_soft_max.`exp_delta_Score_4` AS `exp_delta_Score_4`, score_soft_max.`exp_delta_Score_5` AS `exp_delta_Score_5`, score_soft_max.`exp_delta_Score_6` AS `exp_delta_Score_6`, score_soft_max.`exp_delta_Score_7` AS `exp_delta_Score_7`, score_soft_max.`exp_delta_Score_8` AS `exp_delta_Score_8`, score_soft_max.`exp_delta_Score_9` AS `exp_delta_Score_9`, score_soft_max.`KEY_sum` AS `KEY_sum`, score_soft_max.`sum_ExpDeltaScore` AS `sum_ExpDeltaScore` 
FROM score_class_union LEFT OUTER JOIN score_soft_max ON score_class_union.`KEY_u` = score_soft_max.`KEY`), 
arg_max_cte AS 
(SELECT score_soft_max.`KEY` AS `KEY`, score_soft_max.`Score_0` AS `Score_0`, score_soft_max.`Score_1` AS `Score_1`, score_soft_max.`Score_2` AS `Score_2`, score_soft_max.`Score_3` AS `Score_3`, score_soft_max.`Score_4` AS `Score_4`, score_soft_max.`Score_5` AS `Score_5`, score_soft_max.`Score_6` AS `Score_6`, score_soft_max.`Score_7` AS `Score_7`, score_soft_max.`Score_8` AS `Score_8`, score_soft_max.`Score_9` AS `Score_9`, score_soft_max.`Proba_0` AS `Proba_0`, score_soft_max.`Proba_1` AS `Proba_1`, score_soft_max.`Proba_2` AS `Proba_2`, score_soft_max.`Proba_3` AS `Proba_3`, score_soft_max.`Proba_4` AS `Proba_4`, score_soft_max.`Proba_5` AS `Proba_5`, score_soft_max.`Proba_6` AS `Proba_6`, score_soft_max.`Proba_7` AS `Proba_7`, score_soft_max.`Proba_8` AS `Proba_8`, score_soft_max.`Proba_9` AS `Proba_9`, score_soft_max.`LogProba_0` AS `LogProba_0`, score_soft_max.`LogProba_1` AS `LogProba_1`, score_soft_max.`LogProba_2` AS `LogProba_2`, score_soft_max.`LogProba_3` AS `LogProba_3`, score_soft_max.`LogProba_4` AS `LogProba_4`, score_soft_max.`LogProba_5` AS `LogProba_5`, score_soft_max.`LogProba_6` AS `LogProba_6`, score_soft_max.`LogProba_7` AS `LogProba_7`, score_soft_max.`LogProba_8` AS `LogProba_8`, score_soft_max.`LogProba_9` AS `LogProba_9`, score_soft_max.`Decision` AS `Decision`, score_soft_max.`DecisionProba` AS `DecisionProba`, score_soft_max.`KEY_m` AS `KEY_m`, score_soft_max.`max_Score` AS `max_Score`, score_soft_max.`exp_delta_Score_0` AS `exp_delta_Score_0`, score_soft_max.`exp_delta_Score_1` AS `exp_delta_Score_1`, score_soft_max.`exp_delta_Score_2` AS `exp_delta_Score_2`, score_soft_max.`exp_delta_Score_3` AS `exp_delta_Score_3`, score_soft_max.`exp_delta_Score_4` AS `exp_delta_Score_4`, score_soft_max.`exp_delta_Score_5` AS `exp_delta_Score_5`, score_soft_max.`exp_delta_Score_6` AS `exp_delta_Score_6`, score_soft_max.`exp_delta_Score_7` AS `exp_delta_Score_7`, score_soft_max.`exp_delta_Score_8` AS `exp_delta_Score_8`, score_soft_max.`exp_delta_Score_9` AS `exp_delta_Score_9`, score_soft_max.`KEY_sum` AS `KEY_sum`, score_soft_max.`sum_ExpDeltaScore` AS `sum_ExpDeltaScore`, `arg_max_t_Score`.`KEY_Score` AS `KEY_Score`, `arg_max_t_Score`.`arg_max_Score` AS `arg_max_Score`, soft_max_comp.`KEY_softmax` AS `KEY_softmax`, soft_max_comp.`SoftProba_0` AS `SoftProba_0`, soft_max_comp.`SoftProba_1` AS `SoftProba_1`, soft_max_comp.`SoftProba_2` AS `SoftProba_2`, soft_max_comp.`SoftProba_3` AS `SoftProba_3`, soft_max_comp.`SoftProba_4` AS `SoftProba_4`, soft_max_comp.`SoftProba_5` AS `SoftProba_5`, soft_max_comp.`SoftProba_6` AS `SoftProba_6`, soft_max_comp.`SoftProba_7` AS `SoftProba_7`, soft_max_comp.`SoftProba_8` AS `SoftProba_8`, soft_max_comp.`SoftProba_9` AS `SoftProba_9` 
FROM score_soft_max LEFT OUTER JOIN (SELECT union_with_max.`KEY` AS `KEY_Score`, min(union_with_max.class) AS `arg_max_Score` 
FROM union_with_max 
WHERE union_with_max.`max_Score` <= union_with_max.`Score` GROUP BY union_with_max.`KEY`) AS `arg_max_t_Score` ON score_soft_max.`KEY` = `arg_max_t_Score`.`KEY_Score` LEFT OUTER JOIN (SELECT score_soft_max.`KEY` AS `KEY_softmax`, score_soft_max.`exp_delta_Score_0` / score_soft_max.`sum_ExpDeltaScore` AS `SoftProba_0`, score_soft_max.`exp_delta_Score_1` / score_soft_max.`sum_ExpDeltaScore` AS `SoftProba_1`, score_soft_max.`exp_delta_Score_2` / score_soft_max.`sum_ExpDeltaScore` AS `SoftProba_2`, score_soft_max.`exp_delta_Score_3` / score_soft_max.`sum_ExpDeltaScore` AS `SoftProba_3`, score_soft_max.`exp_delta_Score_4` / score_soft_max.`sum_ExpDeltaScore` AS `SoftProba_4`, score_soft_max.`exp_delta_Score_5` / score_soft_max.`sum_ExpDeltaScore` AS `SoftProba_5`, score_soft_max.`exp_delta_Score_6` / score_soft_max.`sum_ExpDeltaScore` AS `SoftProba_6`, score_soft_max.`exp_delta_Score_7` / score_soft_max.`sum_ExpDeltaScore` AS `SoftProba_7`, score_soft_max.`exp_delta_Score_8` / score_soft_max.`sum_ExpDeltaScore` AS `SoftProba_8`, score_soft_max.`exp_delta_Score_9` / score_soft_max.`sum_ExpDeltaScore` AS `SoftProba_9` 
FROM score_soft_max) AS soft_max_comp ON soft_max_comp.`KEY_softmax` = `arg_max_t_Score`.`KEY_Score`)
 SELECT arg_max_cte.`KEY` AS `KEY`, NULL AS `Score_0`, NULL AS `Score_1`, NULL AS `Score_2`, NULL AS `Score_3`, NULL AS `Score_4`, NULL AS `Score_5`, NULL AS `Score_6`, NULL AS `Score_7`, NULL AS `Score_8`, NULL AS `Score_9`, arg_max_cte.`SoftProba_0` AS `Proba_0`, arg_max_cte.`SoftProba_1` AS `Proba_1`, arg_max_cte.`SoftProba_2` AS `Proba_2`, arg_max_cte.`SoftProba_3` AS `Proba_3`, arg_max_cte.`SoftProba_4` AS `Proba_4`, arg_max_cte.`SoftProba_5` AS `Proba_5`, arg_max_cte.`SoftProba_6` AS `Proba_6`, arg_max_cte.`SoftProba_7` AS `Proba_7`, arg_max_cte.`SoftProba_8` AS `Proba_8`, arg_max_cte.`SoftProba_9` AS `Proba_9`, CASE WHEN (arg_max_cte.`SoftProba_0` IS NULL OR arg_max_cte.`SoftProba_0` > 0.0) THEN ln(arg_max_cte.`SoftProba_0`) ELSE -1.79769313486231e+308 END AS `LogProba_0`, CASE WHEN (arg_max_cte.`SoftProba_1` IS NULL OR arg_max_cte.`SoftProba_1` > 0.0) THEN ln(arg_max_cte.`SoftProba_1`) ELSE -1.79769313486231e+308 END AS `LogProba_1`, CASE WHEN (arg_max_cte.`SoftProba_2` IS NULL OR arg_max_cte.`SoftProba_2` > 0.0) THEN ln(arg_max_cte.`SoftProba_2`) ELSE -1.79769313486231e+308 END AS `LogProba_2`, CASE WHEN (arg_max_cte.`SoftProba_3` IS NULL OR arg_max_cte.`SoftProba_3` > 0.0) THEN ln(arg_max_cte.`SoftProba_3`) ELSE -1.79769313486231e+308 END AS `LogProba_3`, CASE WHEN (arg_max_cte.`SoftProba_4` IS NULL OR arg_max_cte.`SoftProba_4` > 0.0) THEN ln(arg_max_cte.`SoftProba_4`) ELSE -1.79769313486231e+308 END AS `LogProba_4`, CASE WHEN (arg_max_cte.`SoftProba_5` IS NULL OR arg_max_cte.`SoftProba_5` > 0.0) THEN ln(arg_max_cte.`SoftProba_5`) ELSE -1.79769313486231e+308 END AS `LogProba_5`, CASE WHEN (arg_max_cte.`SoftProba_6` IS NULL OR arg_max_cte.`SoftProba_6` > 0.0) THEN ln(arg_max_cte.`SoftProba_6`) ELSE -1.79769313486231e+308 END AS `LogProba_6`, CASE WHEN (arg_max_cte.`SoftProba_7` IS NULL OR arg_max_cte.`SoftProba_7` > 0.0) THEN ln(arg_max_cte.`SoftProba_7`) ELSE -1.79769313486231e+308 END AS `LogProba_7`, CASE WHEN (arg_max_cte.`SoftProba_8` IS NULL OR arg_max_cte.`SoftProba_8` > 0.0) THEN ln(arg_max_cte.`SoftProba_8`) ELSE -1.79769313486231e+308 END AS `LogProba_8`, CASE WHEN (arg_max_cte.`SoftProba_9` IS NULL OR arg_max_cte.`SoftProba_9` > 0.0) THEN ln(arg_max_cte.`SoftProba_9`) ELSE -1.79769313486231e+308 END AS `LogProba_9`, arg_max_cte.`arg_max_Score` AS `Decision`, CASE WHEN (arg_max_cte.`SoftProba_0` <= CASE WHEN (arg_max_cte.`SoftProba_1` <= CASE WHEN (arg_max_cte.`SoftProba_2` <= CASE WHEN (arg_max_cte.`SoftProba_3` <= CASE WHEN (arg_max_cte.`SoftProba_4` <= CASE WHEN (arg_max_cte.`SoftProba_5` <= CASE WHEN (arg_max_cte.`SoftProba_6` <= CASE WHEN (arg_max_cte.`SoftProba_7` <= CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END) THEN CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END ELSE arg_max_cte.`SoftProba_7` END) THEN CASE WHEN (arg_max_cte.`SoftProba_7` <= CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END) THEN CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END ELSE arg_max_cte.`SoftProba_7` END ELSE arg_max_cte.`SoftProba_6` END) THEN CASE WHEN (arg_max_cte.`SoftProba_6` <= CASE WHEN (arg_max_cte.`SoftProba_7` <= CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END) THEN CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END ELSE arg_max_cte.`SoftProba_7` END) THEN CASE WHEN (arg_max_cte.`SoftProba_7` <= CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END) THEN CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END ELSE arg_max_cte.`SoftProba_7` END ELSE arg_max_cte.`SoftProba_6` END ELSE arg_max_cte.`SoftProba_5` END) THEN CASE WHEN (arg_max_cte.`SoftProba_5` <= CASE WHEN (arg_max_cte.`SoftProba_6` <= CASE WHEN (arg_max_cte.`SoftProba_7` <= CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END) THEN CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END ELSE arg_max_cte.`SoftProba_7` END) THEN CASE WHEN (arg_max_cte.`SoftProba_7` <= CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END) THEN CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END ELSE arg_max_cte.`SoftProba_7` END ELSE arg_max_cte.`SoftProba_6` END) THEN CASE WHEN (arg_max_cte.`SoftProba_6` <= CASE WHEN (arg_max_cte.`SoftProba_7` <= CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END) THEN CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END ELSE arg_max_cte.`SoftProba_7` END) THEN CASE WHEN (arg_max_cte.`SoftProba_7` <= CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END) THEN CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END ELSE arg_max_cte.`SoftProba_7` END ELSE arg_max_cte.`SoftProba_6` END ELSE arg_max_cte.`SoftProba_5` END ELSE arg_max_cte.`SoftProba_4` END) THEN CASE WHEN (arg_max_cte.`SoftProba_4` <= CASE WHEN (arg_max_cte.`SoftProba_5` <= CASE WHEN (arg_max_cte.`SoftProba_6` <= CASE WHEN (arg_max_cte.`SoftProba_7` <= CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END) THEN CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END ELSE arg_max_cte.`SoftProba_7` END) THEN CASE WHEN (arg_max_cte.`SoftProba_7` <= CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END) THEN CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END ELSE arg_max_cte.`SoftProba_7` END ELSE arg_max_cte.`SoftProba_6` END) THEN CASE WHEN (arg_max_cte.`SoftProba_6` <= CASE WHEN (arg_max_cte.`SoftProba_7` <= CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END) THEN CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END ELSE arg_max_cte.`SoftProba_7` END) THEN CASE WHEN (arg_max_cte.`SoftProba_7` <= CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END) THEN CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END ELSE arg_max_cte.`SoftProba_7` END ELSE arg_max_cte.`SoftProba_6` END ELSE arg_max_cte.`SoftProba_5` END) THEN CASE WHEN (arg_max_cte.`SoftProba_5` <= CASE WHEN (arg_max_cte.`SoftProba_6` <= CASE WHEN (arg_max_cte.`SoftProba_7` <= CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END) THEN CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END ELSE arg_max_cte.`SoftProba_7` END) THEN CASE WHEN (arg_max_cte.`SoftProba_7` <= CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END) THEN CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END ELSE arg_max_cte.`SoftProba_7` END ELSE arg_max_cte.`SoftProba_6` END) THEN CASE WHEN (arg_max_cte.`SoftProba_6` <= CASE WHEN (arg_max_cte.`SoftProba_7` <= CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END) THEN CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END ELSE arg_max_cte.`SoftProba_7` END) THEN CASE WHEN (arg_max_cte.`SoftProba_7` <= CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END) THEN CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END ELSE arg_max_cte.`SoftProba_7` END ELSE arg_max_cte.`SoftProba_6` END ELSE arg_max_cte.`SoftProba_5` END ELSE arg_max_cte.`SoftProba_4` END ELSE arg_max_cte.`SoftProba_3` END) THEN CASE WHEN (arg_max_cte.`SoftProba_3` <= CASE WHEN (arg_max_cte.`SoftProba_4` <= CASE WHEN (arg_max_cte.`SoftProba_5` <= CASE WHEN (arg_max_cte.`SoftProba_6` <= CASE WHEN (arg_max_cte.`SoftProba_7` <= CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END) THEN CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END ELSE arg_max_cte.`SoftProba_7` END) THEN CASE WHEN (arg_max_cte.`SoftProba_7` <= CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END) THEN CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END ELSE arg_max_cte.`SoftProba_7` END ELSE arg_max_cte.`SoftProba_6` END) THEN CASE WHEN (arg_max_cte.`SoftProba_6` <= CASE WHEN (arg_max_cte.`SoftProba_7` <= CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END) THEN CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END ELSE arg_max_cte.`SoftProba_7` END) THEN CASE WHEN (arg_max_cte.`SoftProba_7` <= CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END) THEN CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END ELSE arg_max_cte.`SoftProba_7` END ELSE arg_max_cte.`SoftProba_6` END ELSE arg_max_cte.`SoftProba_5` END) THEN CASE WHEN (arg_max_cte.`SoftProba_5` <= CASE WHEN (arg_max_cte.`SoftProba_6` <= CASE WHEN (arg_max_cte.`SoftProba_7` <= CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END) THEN CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END ELSE arg_max_cte.`SoftProba_7` END) THEN CASE WHEN (arg_max_cte.`SoftProba_7` <= CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END) THEN CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END ELSE arg_max_cte.`SoftProba_7` END ELSE arg_max_cte.`SoftProba_6` END) THEN CASE WHEN (arg_max_cte.`SoftProba_6` <= CASE WHEN (arg_max_cte.`SoftProba_7` <= CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END) THEN CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END ELSE arg_max_cte.`SoftProba_7` END) THEN CASE WHEN (arg_max_cte.`SoftProba_7` <= CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END) THEN CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END ELSE arg_max_cte.`SoftProba_7` END ELSE arg_max_cte.`SoftProba_6` END ELSE arg_max_cte.`SoftProba_5` END ELSE arg_max_cte.`SoftProba_4` END) THEN CASE WHEN (arg_max_cte.`SoftProba_4` <= CASE WHEN (arg_max_cte.`SoftProba_5` <= CASE WHEN (arg_max_cte.`SoftProba_6` <= CASE WHEN (arg_max_cte.`SoftProba_7` <= CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END) THEN CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END ELSE arg_max_cte.`SoftProba_7` END) THEN CASE WHEN (arg_max_cte.`SoftProba_7` <= CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END) THEN CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END ELSE arg_max_cte.`SoftProba_7` END ELSE arg_max_cte.`SoftProba_6` END) THEN CASE WHEN (arg_max_cte.`SoftProba_6` <= CASE WHEN (arg_max_cte.`SoftProba_7` <= CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END) THEN CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END ELSE arg_max_cte.`SoftProba_7` END) THEN CASE WHEN (arg_max_cte.`SoftProba_7` <= CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END) THEN CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END ELSE arg_max_cte.`SoftProba_7` END ELSE arg_max_cte.`SoftProba_6` END ELSE arg_max_cte.`SoftProba_5` END) THEN CASE WHEN (arg_max_cte.`SoftProba_5` <= CASE WHEN (arg_max_cte.`SoftProba_6` <= CASE WHEN (arg_max_cte.`SoftProba_7` <= CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END) THEN CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END ELSE arg_max_cte.`SoftProba_7` END) THEN CASE WHEN (arg_max_cte.`SoftProba_7` <= CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END) THEN CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END ELSE arg_max_cte.`SoftProba_7` END ELSE arg_max_cte.`SoftProba_6` END) THEN CASE WHEN (arg_max_cte.`SoftProba_6` <= CASE WHEN (arg_max_cte.`SoftProba_7` <= CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END) THEN CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END ELSE arg_max_cte.`SoftProba_7` END) THEN CASE WHEN (arg_max_cte.`SoftProba_7` <= CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END) THEN CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END ELSE arg_max_cte.`SoftProba_7` END ELSE arg_max_cte.`SoftProba_6` END ELSE arg_max_cte.`SoftProba_5` END ELSE arg_max_cte.`SoftProba_4` END ELSE arg_max_cte.`SoftProba_3` END ELSE arg_max_cte.`SoftProba_2` END) THEN CASE WHEN (arg_max_cte.`SoftProba_2` <= CASE WHEN (arg_max_cte.`SoftProba_3` <= CASE WHEN (arg_max_cte.`SoftProba_4` <= CASE WHEN (arg_max_cte.`SoftProba_5` <= CASE WHEN (arg_max_cte.`SoftProba_6` <= CASE WHEN (arg_max_cte.`SoftProba_7` <= CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END) THEN CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END ELSE arg_max_cte.`SoftProba_7` END) THEN CASE WHEN (arg_max_cte.`SoftProba_7` <= CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END) THEN CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END ELSE arg_max_cte.`SoftProba_7` END ELSE arg_max_cte.`SoftProba_6` END) THEN CASE WHEN (arg_max_cte.`SoftProba_6` <= CASE WHEN (arg_max_cte.`SoftProba_7` <= CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END) THEN CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END ELSE arg_max_cte.`SoftProba_7` END) THEN CASE WHEN (arg_max_cte.`SoftProba_7` <= CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END) THEN CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END ELSE arg_max_cte.`SoftProba_7` END ELSE arg_max_cte.`SoftProba_6` END ELSE arg_max_cte.`SoftProba_5` END) THEN CASE WHEN (arg_max_cte.`SoftProba_5` <= CASE WHEN (arg_max_cte.`SoftProba_6` <= CASE WHEN (arg_max_cte.`SoftProba_7` <= CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END) THEN CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END ELSE arg_max_cte.`SoftProba_7` END) THEN CASE WHEN (arg_max_cte.`SoftProba_7` <= CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END) THEN CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END ELSE arg_max_cte.`SoftProba_7` END ELSE arg_max_cte.`SoftProba_6` END) THEN CASE WHEN (arg_max_cte.`SoftProba_6` <= CASE WHEN (arg_max_cte.`SoftProba_7` <= CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END) THEN CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END ELSE arg_max_cte.`SoftProba_7` END) THEN CASE WHEN (arg_max_cte.`SoftProba_7` <= CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END) THEN CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END ELSE arg_max_cte.`SoftProba_7` END ELSE arg_max_cte.`SoftProba_6` END ELSE arg_max_cte.`SoftProba_5` END ELSE arg_max_cte.`SoftProba_4` END) THEN CASE WHEN (arg_max_cte.`SoftProba_4` <= CASE WHEN (arg_max_cte.`SoftProba_5` <= CASE WHEN (arg_max_cte.`SoftProba_6` <= CASE WHEN (arg_max_cte.`SoftProba_7` <= CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END) THEN CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END ELSE arg_max_cte.`SoftProba_7` END) THEN CASE WHEN (arg_max_cte.`SoftProba_7` <= CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END) THEN CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END ELSE arg_max_cte.`SoftProba_7` END ELSE arg_max_cte.`SoftProba_6` END) THEN CASE WHEN (arg_max_cte.`SoftProba_6` <= CASE WHEN (arg_max_cte.`SoftProba_7` <= CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END) THEN CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END ELSE arg_max_cte.`SoftProba_7` END) THEN CASE WHEN (arg_max_cte.`SoftProba_7` <= CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END) THEN CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END ELSE arg_max_cte.`SoftProba_7` END ELSE arg_max_cte.`SoftProba_6` END ELSE arg_max_cte.`SoftProba_5` END) THEN CASE WHEN (arg_max_cte.`SoftProba_5` <= CASE WHEN (arg_max_cte.`SoftProba_6` <= CASE WHEN (arg_max_cte.`SoftProba_7` <= CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END) THEN CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END ELSE arg_max_cte.`SoftProba_7` END) THEN CASE WHEN (arg_max_cte.`SoftProba_7` <= CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END) THEN CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END ELSE arg_max_cte.`SoftProba_7` END ELSE arg_max_cte.`SoftProba_6` END) THEN CASE WHEN (arg_max_cte.`SoftProba_6` <= CASE WHEN (arg_max_cte.`SoftProba_7` <= CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END) THEN CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END ELSE arg_max_cte.`SoftProba_7` END) THEN CASE WHEN (arg_max_cte.`SoftProba_7` <= CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END) THEN CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END ELSE arg_max_cte.`SoftProba_7` END ELSE arg_max_cte.`SoftProba_6` END ELSE arg_max_cte.`SoftProba_5` END ELSE arg_max_cte.`SoftProba_4` END ELSE arg_max_cte.`SoftProba_3` END) THEN CASE WHEN (arg_max_cte.`SoftProba_3` <= CASE WHEN (arg_max_cte.`SoftProba_4` <= CASE WHEN (arg_max_cte.`SoftProba_5` <= CASE WHEN (arg_max_cte.`SoftProba_6` <= CASE WHEN (arg_max_cte.`SoftProba_7` <= CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END) THEN CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END ELSE arg_max_cte.`SoftProba_7` END) THEN CASE WHEN (arg_max_cte.`SoftProba_7` <= CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END) THEN CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END ELSE arg_max_cte.`SoftProba_7` END ELSE arg_max_cte.`SoftProba_6` END) THEN CASE WHEN (arg_max_cte.`SoftProba_6` <= CASE WHEN (arg_max_cte.`SoftProba_7` <= CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END) THEN CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END ELSE arg_max_cte.`SoftProba_7` END) THEN CASE WHEN (arg_max_cte.`SoftProba_7` <= CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END) THEN CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END ELSE arg_max_cte.`SoftProba_7` END ELSE arg_max_cte.`SoftProba_6` END ELSE arg_max_cte.`SoftProba_5` END) THEN CASE WHEN (arg_max_cte.`SoftProba_5` <= CASE WHEN (arg_max_cte.`SoftProba_6` <= CASE WHEN (arg_max_cte.`SoftProba_7` <= CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END) THEN CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END ELSE arg_max_cte.`SoftProba_7` END) THEN CASE WHEN (arg_max_cte.`SoftProba_7` <= CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END) THEN CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END ELSE arg_max_cte.`SoftProba_7` END ELSE arg_max_cte.`SoftProba_6` END) THEN CASE WHEN (arg_max_cte.`SoftProba_6` <= CASE WHEN (arg_max_cte.`SoftProba_7` <= CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END) THEN CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END ELSE arg_max_cte.`SoftProba_7` END) THEN CASE WHEN (arg_max_cte.`SoftProba_7` <= CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END) THEN CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END ELSE arg_max_cte.`SoftProba_7` END ELSE arg_max_cte.`SoftProba_6` END ELSE arg_max_cte.`SoftProba_5` END ELSE arg_max_cte.`SoftProba_4` END) THEN CASE WHEN (arg_max_cte.`SoftProba_4` <= CASE WHEN (arg_max_cte.`SoftProba_5` <= CASE WHEN (arg_max_cte.`SoftProba_6` <= CASE WHEN (arg_max_cte.`SoftProba_7` <= CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END) THEN CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END ELSE arg_max_cte.`SoftProba_7` END) THEN CASE WHEN (arg_max_cte.`SoftProba_7` <= CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END) THEN CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END ELSE arg_max_cte.`SoftProba_7` END ELSE arg_max_cte.`SoftProba_6` END) THEN CASE WHEN (arg_max_cte.`SoftProba_6` <= CASE WHEN (arg_max_cte.`SoftProba_7` <= CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END) THEN CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END ELSE arg_max_cte.`SoftProba_7` END) THEN CASE WHEN (arg_max_cte.`SoftProba_7` <= CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END) THEN CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END ELSE arg_max_cte.`SoftProba_7` END ELSE arg_max_cte.`SoftProba_6` END ELSE arg_max_cte.`SoftProba_5` END) THEN CASE WHEN (arg_max_cte.`SoftProba_5` <= CASE WHEN (arg_max_cte.`SoftProba_6` <= CASE WHEN (arg_max_cte.`SoftProba_7` <= CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END) THEN CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END ELSE arg_max_cte.`SoftProba_7` END) THEN CASE WHEN (arg_max_cte.`SoftProba_7` <= CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END) THEN CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END ELSE arg_max_cte.`SoftProba_7` END ELSE arg_max_cte.`SoftProba_6` END) THEN CASE WHEN (arg_max_cte.`SoftProba_6` <= CASE WHEN (arg_max_cte.`SoftProba_7` <= CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END) THEN CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END ELSE arg_max_cte.`SoftProba_7` END) THEN CASE WHEN (arg_max_cte.`SoftProba_7` <= CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END) THEN CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END ELSE arg_max_cte.`SoftProba_7` END ELSE arg_max_cte.`SoftProba_6` END ELSE arg_max_cte.`SoftProba_5` END ELSE arg_max_cte.`SoftProba_4` END ELSE arg_max_cte.`SoftProba_3` END ELSE arg_max_cte.`SoftProba_2` END ELSE arg_max_cte.`SoftProba_1` END) THEN CASE WHEN (arg_max_cte.`SoftProba_1` <= CASE WHEN (arg_max_cte.`SoftProba_2` <= CASE WHEN (arg_max_cte.`SoftProba_3` <= CASE WHEN (arg_max_cte.`SoftProba_4` <= CASE WHEN (arg_max_cte.`SoftProba_5` <= CASE WHEN (arg_max_cte.`SoftProba_6` <= CASE WHEN (arg_max_cte.`SoftProba_7` <= CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END) THEN CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END ELSE arg_max_cte.`SoftProba_7` END) THEN CASE WHEN (arg_max_cte.`SoftProba_7` <= CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END) THEN CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END ELSE arg_max_cte.`SoftProba_7` END ELSE arg_max_cte.`SoftProba_6` END) THEN CASE WHEN (arg_max_cte.`SoftProba_6` <= CASE WHEN (arg_max_cte.`SoftProba_7` <= CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END) THEN CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END ELSE arg_max_cte.`SoftProba_7` END) THEN CASE WHEN (arg_max_cte.`SoftProba_7` <= CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END) THEN CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END ELSE arg_max_cte.`SoftProba_7` END ELSE arg_max_cte.`SoftProba_6` END ELSE arg_max_cte.`SoftProba_5` END) THEN CASE WHEN (arg_max_cte.`SoftProba_5` <= CASE WHEN (arg_max_cte.`SoftProba_6` <= CASE WHEN (arg_max_cte.`SoftProba_7` <= CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END) THEN CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END ELSE arg_max_cte.`SoftProba_7` END) THEN CASE WHEN (arg_max_cte.`SoftProba_7` <= CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END) THEN CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END ELSE arg_max_cte.`SoftProba_7` END ELSE arg_max_cte.`SoftProba_6` END) THEN CASE WHEN (arg_max_cte.`SoftProba_6` <= CASE WHEN (arg_max_cte.`SoftProba_7` <= CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END) THEN CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END ELSE arg_max_cte.`SoftProba_7` END) THEN CASE WHEN (arg_max_cte.`SoftProba_7` <= CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END) THEN CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END ELSE arg_max_cte.`SoftProba_7` END ELSE arg_max_cte.`SoftProba_6` END ELSE arg_max_cte.`SoftProba_5` END ELSE arg_max_cte.`SoftProba_4` END) THEN CASE WHEN (arg_max_cte.`SoftProba_4` <= CASE WHEN (arg_max_cte.`SoftProba_5` <= CASE WHEN (arg_max_cte.`SoftProba_6` <= CASE WHEN (arg_max_cte.`SoftProba_7` <= CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END) THEN CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END ELSE arg_max_cte.`SoftProba_7` END) THEN CASE WHEN (arg_max_cte.`SoftProba_7` <= CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END) THEN CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END ELSE arg_max_cte.`SoftProba_7` END ELSE arg_max_cte.`SoftProba_6` END) THEN CASE WHEN (arg_max_cte.`SoftProba_6` <= CASE WHEN (arg_max_cte.`SoftProba_7` <= CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END) THEN CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END ELSE arg_max_cte.`SoftProba_7` END) THEN CASE WHEN (arg_max_cte.`SoftProba_7` <= CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END) THEN CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END ELSE arg_max_cte.`SoftProba_7` END ELSE arg_max_cte.`SoftProba_6` END ELSE arg_max_cte.`SoftProba_5` END) THEN CASE WHEN (arg_max_cte.`SoftProba_5` <= CASE WHEN (arg_max_cte.`SoftProba_6` <= CASE WHEN (arg_max_cte.`SoftProba_7` <= CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END) THEN CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END ELSE arg_max_cte.`SoftProba_7` END) THEN CASE WHEN (arg_max_cte.`SoftProba_7` <= CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END) THEN CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END ELSE arg_max_cte.`SoftProba_7` END ELSE arg_max_cte.`SoftProba_6` END) THEN CASE WHEN (arg_max_cte.`SoftProba_6` <= CASE WHEN (arg_max_cte.`SoftProba_7` <= CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END) THEN CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END ELSE arg_max_cte.`SoftProba_7` END) THEN CASE WHEN (arg_max_cte.`SoftProba_7` <= CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END) THEN CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END ELSE arg_max_cte.`SoftProba_7` END ELSE arg_max_cte.`SoftProba_6` END ELSE arg_max_cte.`SoftProba_5` END ELSE arg_max_cte.`SoftProba_4` END ELSE arg_max_cte.`SoftProba_3` END) THEN CASE WHEN (arg_max_cte.`SoftProba_3` <= CASE WHEN (arg_max_cte.`SoftProba_4` <= CASE WHEN (arg_max_cte.`SoftProba_5` <= CASE WHEN (arg_max_cte.`SoftProba_6` <= CASE WHEN (arg_max_cte.`SoftProba_7` <= CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END) THEN CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END ELSE arg_max_cte.`SoftProba_7` END) THEN CASE WHEN (arg_max_cte.`SoftProba_7` <= CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END) THEN CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END ELSE arg_max_cte.`SoftProba_7` END ELSE arg_max_cte.`SoftProba_6` END) THEN CASE WHEN (arg_max_cte.`SoftProba_6` <= CASE WHEN (arg_max_cte.`SoftProba_7` <= CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END) THEN CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END ELSE arg_max_cte.`SoftProba_7` END) THEN CASE WHEN (arg_max_cte.`SoftProba_7` <= CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END) THEN CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END ELSE arg_max_cte.`SoftProba_7` END ELSE arg_max_cte.`SoftProba_6` END ELSE arg_max_cte.`SoftProba_5` END) THEN CASE WHEN (arg_max_cte.`SoftProba_5` <= CASE WHEN (arg_max_cte.`SoftProba_6` <= CASE WHEN (arg_max_cte.`SoftProba_7` <= CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END) THEN CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END ELSE arg_max_cte.`SoftProba_7` END) THEN CASE WHEN (arg_max_cte.`SoftProba_7` <= CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END) THEN CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END ELSE arg_max_cte.`SoftProba_7` END ELSE arg_max_cte.`SoftProba_6` END) THEN CASE WHEN (arg_max_cte.`SoftProba_6` <= CASE WHEN (arg_max_cte.`SoftProba_7` <= CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END) THEN CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END ELSE arg_max_cte.`SoftProba_7` END) THEN CASE WHEN (arg_max_cte.`SoftProba_7` <= CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END) THEN CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END ELSE arg_max_cte.`SoftProba_7` END ELSE arg_max_cte.`SoftProba_6` END ELSE arg_max_cte.`SoftProba_5` END ELSE arg_max_cte.`SoftProba_4` END) THEN CASE WHEN (arg_max_cte.`SoftProba_4` <= CASE WHEN (arg_max_cte.`SoftProba_5` <= CASE WHEN (arg_max_cte.`SoftProba_6` <= CASE WHEN (arg_max_cte.`SoftProba_7` <= CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END) THEN CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END ELSE arg_max_cte.`SoftProba_7` END) THEN CASE WHEN (arg_max_cte.`SoftProba_7` <= CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END) THEN CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END ELSE arg_max_cte.`SoftProba_7` END ELSE arg_max_cte.`SoftProba_6` END) THEN CASE WHEN (arg_max_cte.`SoftProba_6` <= CASE WHEN (arg_max_cte.`SoftProba_7` <= CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END) THEN CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END ELSE arg_max_cte.`SoftProba_7` END) THEN CASE WHEN (arg_max_cte.`SoftProba_7` <= CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END) THEN CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END ELSE arg_max_cte.`SoftProba_7` END ELSE arg_max_cte.`SoftProba_6` END ELSE arg_max_cte.`SoftProba_5` END) THEN CASE WHEN (arg_max_cte.`SoftProba_5` <= CASE WHEN (arg_max_cte.`SoftProba_6` <= CASE WHEN (arg_max_cte.`SoftProba_7` <= CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END) THEN CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END ELSE arg_max_cte.`SoftProba_7` END) THEN CASE WHEN (arg_max_cte.`SoftProba_7` <= CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END) THEN CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END ELSE arg_max_cte.`SoftProba_7` END ELSE arg_max_cte.`SoftProba_6` END) THEN CASE WHEN (arg_max_cte.`SoftProba_6` <= CASE WHEN (arg_max_cte.`SoftProba_7` <= CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END) THEN CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END ELSE arg_max_cte.`SoftProba_7` END) THEN CASE WHEN (arg_max_cte.`SoftProba_7` <= CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END) THEN CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END ELSE arg_max_cte.`SoftProba_7` END ELSE arg_max_cte.`SoftProba_6` END ELSE arg_max_cte.`SoftProba_5` END ELSE arg_max_cte.`SoftProba_4` END ELSE arg_max_cte.`SoftProba_3` END ELSE arg_max_cte.`SoftProba_2` END) THEN CASE WHEN (arg_max_cte.`SoftProba_2` <= CASE WHEN (arg_max_cte.`SoftProba_3` <= CASE WHEN (arg_max_cte.`SoftProba_4` <= CASE WHEN (arg_max_cte.`SoftProba_5` <= CASE WHEN (arg_max_cte.`SoftProba_6` <= CASE WHEN (arg_max_cte.`SoftProba_7` <= CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END) THEN CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END ELSE arg_max_cte.`SoftProba_7` END) THEN CASE WHEN (arg_max_cte.`SoftProba_7` <= CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END) THEN CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END ELSE arg_max_cte.`SoftProba_7` END ELSE arg_max_cte.`SoftProba_6` END) THEN CASE WHEN (arg_max_cte.`SoftProba_6` <= CASE WHEN (arg_max_cte.`SoftProba_7` <= CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END) THEN CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END ELSE arg_max_cte.`SoftProba_7` END) THEN CASE WHEN (arg_max_cte.`SoftProba_7` <= CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END) THEN CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END ELSE arg_max_cte.`SoftProba_7` END ELSE arg_max_cte.`SoftProba_6` END ELSE arg_max_cte.`SoftProba_5` END) THEN CASE WHEN (arg_max_cte.`SoftProba_5` <= CASE WHEN (arg_max_cte.`SoftProba_6` <= CASE WHEN (arg_max_cte.`SoftProba_7` <= CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END) THEN CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END ELSE arg_max_cte.`SoftProba_7` END) THEN CASE WHEN (arg_max_cte.`SoftProba_7` <= CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END) THEN CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END ELSE arg_max_cte.`SoftProba_7` END ELSE arg_max_cte.`SoftProba_6` END) THEN CASE WHEN (arg_max_cte.`SoftProba_6` <= CASE WHEN (arg_max_cte.`SoftProba_7` <= CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END) THEN CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END ELSE arg_max_cte.`SoftProba_7` END) THEN CASE WHEN (arg_max_cte.`SoftProba_7` <= CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END) THEN CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END ELSE arg_max_cte.`SoftProba_7` END ELSE arg_max_cte.`SoftProba_6` END ELSE arg_max_cte.`SoftProba_5` END ELSE arg_max_cte.`SoftProba_4` END) THEN CASE WHEN (arg_max_cte.`SoftProba_4` <= CASE WHEN (arg_max_cte.`SoftProba_5` <= CASE WHEN (arg_max_cte.`SoftProba_6` <= CASE WHEN (arg_max_cte.`SoftProba_7` <= CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END) THEN CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END ELSE arg_max_cte.`SoftProba_7` END) THEN CASE WHEN (arg_max_cte.`SoftProba_7` <= CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END) THEN CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END ELSE arg_max_cte.`SoftProba_7` END ELSE arg_max_cte.`SoftProba_6` END) THEN CASE WHEN (arg_max_cte.`SoftProba_6` <= CASE WHEN (arg_max_cte.`SoftProba_7` <= CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END) THEN CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END ELSE arg_max_cte.`SoftProba_7` END) THEN CASE WHEN (arg_max_cte.`SoftProba_7` <= CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END) THEN CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END ELSE arg_max_cte.`SoftProba_7` END ELSE arg_max_cte.`SoftProba_6` END ELSE arg_max_cte.`SoftProba_5` END) THEN CASE WHEN (arg_max_cte.`SoftProba_5` <= CASE WHEN (arg_max_cte.`SoftProba_6` <= CASE WHEN (arg_max_cte.`SoftProba_7` <= CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END) THEN CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END ELSE arg_max_cte.`SoftProba_7` END) THEN CASE WHEN (arg_max_cte.`SoftProba_7` <= CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END) THEN CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END ELSE arg_max_cte.`SoftProba_7` END ELSE arg_max_cte.`SoftProba_6` END) THEN CASE WHEN (arg_max_cte.`SoftProba_6` <= CASE WHEN (arg_max_cte.`SoftProba_7` <= CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END) THEN CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END ELSE arg_max_cte.`SoftProba_7` END) THEN CASE WHEN (arg_max_cte.`SoftProba_7` <= CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END) THEN CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END ELSE arg_max_cte.`SoftProba_7` END ELSE arg_max_cte.`SoftProba_6` END ELSE arg_max_cte.`SoftProba_5` END ELSE arg_max_cte.`SoftProba_4` END ELSE arg_max_cte.`SoftProba_3` END) THEN CASE WHEN (arg_max_cte.`SoftProba_3` <= CASE WHEN (arg_max_cte.`SoftProba_4` <= CASE WHEN (arg_max_cte.`SoftProba_5` <= CASE WHEN (arg_max_cte.`SoftProba_6` <= CASE WHEN (arg_max_cte.`SoftProba_7` <= CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END) THEN CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END ELSE arg_max_cte.`SoftProba_7` END) THEN CASE WHEN (arg_max_cte.`SoftProba_7` <= CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END) THEN CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END ELSE arg_max_cte.`SoftProba_7` END ELSE arg_max_cte.`SoftProba_6` END) THEN CASE WHEN (arg_max_cte.`SoftProba_6` <= CASE WHEN (arg_max_cte.`SoftProba_7` <= CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END) THEN CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END ELSE arg_max_cte.`SoftProba_7` END) THEN CASE WHEN (arg_max_cte.`SoftProba_7` <= CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END) THEN CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END ELSE arg_max_cte.`SoftProba_7` END ELSE arg_max_cte.`SoftProba_6` END ELSE arg_max_cte.`SoftProba_5` END) THEN CASE WHEN (arg_max_cte.`SoftProba_5` <= CASE WHEN (arg_max_cte.`SoftProba_6` <= CASE WHEN (arg_max_cte.`SoftProba_7` <= CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END) THEN CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END ELSE arg_max_cte.`SoftProba_7` END) THEN CASE WHEN (arg_max_cte.`SoftProba_7` <= CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END) THEN CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END ELSE arg_max_cte.`SoftProba_7` END ELSE arg_max_cte.`SoftProba_6` END) THEN CASE WHEN (arg_max_cte.`SoftProba_6` <= CASE WHEN (arg_max_cte.`SoftProba_7` <= CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END) THEN CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END ELSE arg_max_cte.`SoftProba_7` END) THEN CASE WHEN (arg_max_cte.`SoftProba_7` <= CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END) THEN CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END ELSE arg_max_cte.`SoftProba_7` END ELSE arg_max_cte.`SoftProba_6` END ELSE arg_max_cte.`SoftProba_5` END ELSE arg_max_cte.`SoftProba_4` END) THEN CASE WHEN (arg_max_cte.`SoftProba_4` <= CASE WHEN (arg_max_cte.`SoftProba_5` <= CASE WHEN (arg_max_cte.`SoftProba_6` <= CASE WHEN (arg_max_cte.`SoftProba_7` <= CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END) THEN CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END ELSE arg_max_cte.`SoftProba_7` END) THEN CASE WHEN (arg_max_cte.`SoftProba_7` <= CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END) THEN CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END ELSE arg_max_cte.`SoftProba_7` END ELSE arg_max_cte.`SoftProba_6` END) THEN CASE WHEN (arg_max_cte.`SoftProba_6` <= CASE WHEN (arg_max_cte.`SoftProba_7` <= CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END) THEN CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END ELSE arg_max_cte.`SoftProba_7` END) THEN CASE WHEN (arg_max_cte.`SoftProba_7` <= CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END) THEN CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END ELSE arg_max_cte.`SoftProba_7` END ELSE arg_max_cte.`SoftProba_6` END ELSE arg_max_cte.`SoftProba_5` END) THEN CASE WHEN (arg_max_cte.`SoftProba_5` <= CASE WHEN (arg_max_cte.`SoftProba_6` <= CASE WHEN (arg_max_cte.`SoftProba_7` <= CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END) THEN CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END ELSE arg_max_cte.`SoftProba_7` END) THEN CASE WHEN (arg_max_cte.`SoftProba_7` <= CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END) THEN CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END ELSE arg_max_cte.`SoftProba_7` END ELSE arg_max_cte.`SoftProba_6` END) THEN CASE WHEN (arg_max_cte.`SoftProba_6` <= CASE WHEN (arg_max_cte.`SoftProba_7` <= CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END) THEN CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END ELSE arg_max_cte.`SoftProba_7` END) THEN CASE WHEN (arg_max_cte.`SoftProba_7` <= CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END) THEN CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END ELSE arg_max_cte.`SoftProba_7` END ELSE arg_max_cte.`SoftProba_6` END ELSE arg_max_cte.`SoftProba_5` END ELSE arg_max_cte.`SoftProba_4` END ELSE arg_max_cte.`SoftProba_3` END ELSE arg_max_cte.`SoftProba_2` END ELSE arg_max_cte.`SoftProba_1` END ELSE arg_max_cte.`SoftProba_0` END AS `DecisionProba` 
FROM arg_max_cte