-- This SQL code was generated by scikit2sql (development version).
-- Copyright 2017

WITH `ADS_imp_1_OUT` AS 
(SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_0` IS NULL) THEN -0.0542737413 ELSE `ADS`.`Feature_0` END AS impter_2, CASE WHEN (`ADS`.`Feature_1` IS NULL) THEN -0.218756529519 ELSE `ADS`.`Feature_1` END AS impter_3, CASE WHEN (`ADS`.`Feature_2` IS NULL) THEN -0.0305703479087 ELSE `ADS`.`Feature_2` END AS impter_4, CASE WHEN (`ADS`.`Feature_3` IS NULL) THEN -0.331249604917 ELSE `ADS`.`Feature_3` END AS impter_5, CASE WHEN (`ADS`.`Feature_4` IS NULL) THEN 0.366763606826 ELSE `ADS`.`Feature_4` END AS impter_6, CASE WHEN (`ADS`.`Feature_5` IS NULL) THEN -0.0741510747659 ELSE `ADS`.`Feature_5` END AS impter_7, CASE WHEN (`ADS`.`Feature_6` IS NULL) THEN 0.412718121967 ELSE `ADS`.`Feature_6` END AS impter_8, CASE WHEN (`ADS`.`Feature_7` IS NULL) THEN -0.0169856025995 ELSE `ADS`.`Feature_7` END AS impter_9, CASE WHEN (`ADS`.`Feature_8` IS NULL) THEN 0.0847843992289 ELSE `ADS`.`Feature_8` END AS impter_10, CASE WHEN (`ADS`.`Feature_9` IS NULL) THEN -0.13181660797 ELSE `ADS`.`Feature_9` END AS impter_11, CASE WHEN (`ADS`.`Feature_10` IS NULL) THEN 1.44017259497 ELSE `ADS`.`Feature_10` END AS impter_12, CASE WHEN (`ADS`.`Feature_11` IS NULL) THEN 0.55076799394 ELSE `ADS`.`Feature_11` END AS impter_13, CASE WHEN (`ADS`.`Feature_12` IS NULL) THEN -0.0654596306858 ELSE `ADS`.`Feature_12` END AS impter_14, CASE WHEN (`ADS`.`Feature_13` IS NULL) THEN 0.171642529155 ELSE `ADS`.`Feature_13` END AS impter_15, CASE WHEN (`ADS`.`Feature_14` IS NULL) THEN 0.0828986327221 ELSE `ADS`.`Feature_14` END AS impter_16, CASE WHEN (`ADS`.`Feature_15` IS NULL) THEN -1.85751133848 ELSE `ADS`.`Feature_15` END AS impter_17, CASE WHEN (`ADS`.`Feature_16` IS NULL) THEN -0.0663115994037 ELSE `ADS`.`Feature_16` END AS impter_18, CASE WHEN (`ADS`.`Feature_17` IS NULL) THEN 1.14029211354 ELSE `ADS`.`Feature_17` END AS impter_19, CASE WHEN (`ADS`.`Feature_18` IS NULL) THEN 0.888873615763 ELSE `ADS`.`Feature_18` END AS impter_20, CASE WHEN (`ADS`.`Feature_19` IS NULL) THEN 0.0957726287612 ELSE `ADS`.`Feature_19` END AS impter_21, CASE WHEN (`ADS`.`Feature_20` IS NULL) THEN 0.244738494487 ELSE `ADS`.`Feature_20` END AS impter_22, CASE WHEN (`ADS`.`Feature_21` IS NULL) THEN -0.609092391916 ELSE `ADS`.`Feature_21` END AS impter_23, CASE WHEN (`ADS`.`Feature_22` IS NULL) THEN 0.0503892472753 ELSE `ADS`.`Feature_22` END AS impter_24, CASE WHEN (`ADS`.`Feature_23` IS NULL) THEN 0.0273013863534 ELSE `ADS`.`Feature_23` END AS impter_25, CASE WHEN (`ADS`.`Feature_24` IS NULL) THEN 0.380717162276 ELSE `ADS`.`Feature_24` END AS impter_26, CASE WHEN (`ADS`.`Feature_25` IS NULL) THEN -0.20661251308 ELSE `ADS`.`Feature_25` END AS impter_27, CASE WHEN (`ADS`.`Feature_26` IS NULL) THEN 0.668654570611 ELSE `ADS`.`Feature_26` END AS impter_28, CASE WHEN (`ADS`.`Feature_27` IS NULL) THEN -0.160942763602 ELSE `ADS`.`Feature_27` END AS impter_29, CASE WHEN (`ADS`.`Feature_28` IS NULL) THEN 0.0940928528227 ELSE `ADS`.`Feature_28` END AS impter_30, CASE WHEN (`ADS`.`Feature_29` IS NULL) THEN 1.63077561616 ELSE `ADS`.`Feature_29` END AS impter_31, CASE WHEN (`ADS`.`Feature_30` IS NULL) THEN -1.75138858195 ELSE `ADS`.`Feature_30` END AS impter_32, CASE WHEN (`ADS`.`Feature_31` IS NULL) THEN 1.0423288999 ELSE `ADS`.`Feature_31` END AS impter_33, CASE WHEN (`ADS`.`Feature_32` IS NULL) THEN 0.770807238983 ELSE `ADS`.`Feature_32` END AS impter_34, CASE WHEN (`ADS`.`Feature_33` IS NULL) THEN -0.688081590363 ELSE `ADS`.`Feature_33` END AS impter_35, CASE WHEN (`ADS`.`Feature_34` IS NULL) THEN -1.27741961295 ELSE `ADS`.`Feature_34` END AS impter_36, CASE WHEN (`ADS`.`Feature_35` IS NULL) THEN -0.112813132236 ELSE `ADS`.`Feature_35` END AS impter_37, CASE WHEN (`ADS`.`Feature_36` IS NULL) THEN -0.000301506162037 ELSE `ADS`.`Feature_36` END AS impter_38, CASE WHEN (`ADS`.`Feature_37` IS NULL) THEN -0.0384177367383 ELSE `ADS`.`Feature_37` END AS impter_39, CASE WHEN (`ADS`.`Feature_38` IS NULL) THEN 0.00192035150554 ELSE `ADS`.`Feature_38` END AS impter_40, CASE WHEN (`ADS`.`Feature_39` IS NULL) THEN -0.108901644136 ELSE `ADS`.`Feature_39` END AS impter_41, CASE WHEN (`ADS`.`Feature_40` IS NULL) THEN -0.172777499083 ELSE `ADS`.`Feature_40` END AS impter_42, CASE WHEN (`ADS`.`Feature_41` IS NULL) THEN 0.756450798532 ELSE `ADS`.`Feature_41` END AS impter_43, CASE WHEN (`ADS`.`Feature_42` IS NULL) THEN -0.0766321841653 ELSE `ADS`.`Feature_42` END AS impter_44, CASE WHEN (`ADS`.`Feature_43` IS NULL) THEN 1.49221532559 ELSE `ADS`.`Feature_43` END AS impter_45, CASE WHEN (`ADS`.`Feature_44` IS NULL) THEN 0.0809334318631 ELSE `ADS`.`Feature_44` END AS impter_46, CASE WHEN (`ADS`.`Feature_45` IS NULL) THEN -0.0511240194687 ELSE `ADS`.`Feature_45` END AS impter_47, CASE WHEN (`ADS`.`Feature_46` IS NULL) THEN 0.0991431280775 ELSE `ADS`.`Feature_46` END AS impter_48, CASE WHEN (`ADS`.`Feature_47` IS NULL) THEN 2.99950997083 ELSE `ADS`.`Feature_47` END AS impter_49, CASE WHEN (`ADS`.`Feature_48` IS NULL) THEN 0.46343653733 ELSE `ADS`.`Feature_48` END AS impter_50, CASE WHEN (`ADS`.`Feature_49` IS NULL) THEN 1.00327288337 ELSE `ADS`.`Feature_49` END AS impter_51, CASE WHEN (`ADS`.`Feature_50` IS NULL) THEN -0.345317889003 ELSE `ADS`.`Feature_50` END AS impter_52, CASE WHEN (`ADS`.`Feature_51` IS NULL) THEN -0.074907381624 ELSE `ADS`.`Feature_51` END AS impter_53, CASE WHEN (`ADS`.`Feature_52` IS NULL) THEN 0.668197689036 ELSE `ADS`.`Feature_52` END AS impter_54, CASE WHEN (`ADS`.`Feature_53` IS NULL) THEN -0.0213201023454 ELSE `ADS`.`Feature_53` END AS impter_55, CASE WHEN (`ADS`.`Feature_54` IS NULL) THEN -0.40214128931 ELSE `ADS`.`Feature_54` END AS impter_56, CASE WHEN (`ADS`.`Feature_55` IS NULL) THEN 0.462322711545 ELSE `ADS`.`Feature_55` END AS impter_57, CASE WHEN (`ADS`.`Feature_56` IS NULL) THEN -1.85433259836 ELSE `ADS`.`Feature_56` END AS impter_58, CASE WHEN (`ADS`.`Feature_57` IS NULL) THEN -0.0714861710124 ELSE `ADS`.`Feature_57` END AS impter_59, CASE WHEN (`ADS`.`Feature_58` IS NULL) THEN 0.295346518526 ELSE `ADS`.`Feature_58` END AS impter_60, CASE WHEN (`ADS`.`Feature_59` IS NULL) THEN 0.707152602525 ELSE `ADS`.`Feature_59` END AS impter_61, CASE WHEN (`ADS`.`Feature_60` IS NULL) THEN -0.999290987436 ELSE `ADS`.`Feature_60` END AS impter_62, CASE WHEN (`ADS`.`Feature_61` IS NULL) THEN 0.0895853339294 ELSE `ADS`.`Feature_61` END AS impter_63, CASE WHEN (`ADS`.`Feature_62` IS NULL) THEN -9.29088785315 ELSE `ADS`.`Feature_62` END AS impter_64, CASE WHEN (`ADS`.`Feature_63` IS NULL) THEN -0.00420751817254 ELSE `ADS`.`Feature_63` END AS impter_65, CASE WHEN (`ADS`.`Feature_64` IS NULL) THEN -0.178981366682 ELSE `ADS`.`Feature_64` END AS impter_66, CASE WHEN (`ADS`.`Feature_65` IS NULL) THEN 0.104619597019 ELSE `ADS`.`Feature_65` END AS impter_67, CASE WHEN (`ADS`.`Feature_66` IS NULL) THEN 0.317321472946 ELSE `ADS`.`Feature_66` END AS impter_68, CASE WHEN (`ADS`.`Feature_67` IS NULL) THEN 0.507737105695 ELSE `ADS`.`Feature_67` END AS impter_69, CASE WHEN (`ADS`.`Feature_68` IS NULL) THEN 0.636354957302 ELSE `ADS`.`Feature_68` END AS impter_70, CASE WHEN (`ADS`.`Feature_69` IS NULL) THEN -1.26959924734 ELSE `ADS`.`Feature_69` END AS impter_71, CASE WHEN (`ADS`.`Feature_70` IS NULL) THEN 0.168554896467 ELSE `ADS`.`Feature_70` END AS impter_72, CASE WHEN (`ADS`.`Feature_71` IS NULL) THEN 0.382817250313 ELSE `ADS`.`Feature_71` END AS impter_73, CASE WHEN (`ADS`.`Feature_72` IS NULL) THEN 0.356291795624 ELSE `ADS`.`Feature_72` END AS impter_74, CASE WHEN (`ADS`.`Feature_73` IS NULL) THEN -0.662337874026 ELSE `ADS`.`Feature_73` END AS impter_75, CASE WHEN (`ADS`.`Feature_74` IS NULL) THEN -1.11003423439 ELSE `ADS`.`Feature_74` END AS impter_76, CASE WHEN (`ADS`.`Feature_75` IS NULL) THEN -0.0453679904887 ELSE `ADS`.`Feature_75` END AS impter_77, CASE WHEN (`ADS`.`Feature_76` IS NULL) THEN 0.956315095738 ELSE `ADS`.`Feature_76` END AS impter_78, CASE WHEN (`ADS`.`Feature_77` IS NULL) THEN 0.120281875009 ELSE `ADS`.`Feature_77` END AS impter_79, CASE WHEN (`ADS`.`Feature_78` IS NULL) THEN 0.316221585917 ELSE `ADS`.`Feature_78` END AS impter_80, CASE WHEN (`ADS`.`Feature_79` IS NULL) THEN -1.2868164842 ELSE `ADS`.`Feature_79` END AS impter_81, CASE WHEN (`ADS`.`Feature_80` IS NULL) THEN -0.382487328823 ELSE `ADS`.`Feature_80` END AS impter_82, CASE WHEN (`ADS`.`Feature_81` IS NULL) THEN 0.168238944463 ELSE `ADS`.`Feature_81` END AS impter_83, CASE WHEN (`ADS`.`Feature_82` IS NULL) THEN 0.0165491301864 ELSE `ADS`.`Feature_82` END AS impter_84, CASE WHEN (`ADS`.`Feature_83` IS NULL) THEN 1.4745932382 ELSE `ADS`.`Feature_83` END AS impter_85, CASE WHEN (`ADS`.`Feature_84` IS NULL) THEN -0.4513845299 ELSE `ADS`.`Feature_84` END AS impter_86, CASE WHEN (`ADS`.`Feature_85` IS NULL) THEN 0.807426393278 ELSE `ADS`.`Feature_85` END AS impter_87, CASE WHEN (`ADS`.`Feature_86` IS NULL) THEN -0.151058515856 ELSE `ADS`.`Feature_86` END AS impter_88, CASE WHEN (`ADS`.`Feature_87` IS NULL) THEN 0.155661783653 ELSE `ADS`.`Feature_87` END AS impter_89, CASE WHEN (`ADS`.`Feature_88` IS NULL) THEN 0.184085967694 ELSE `ADS`.`Feature_88` END AS impter_90, CASE WHEN (`ADS`.`Feature_89` IS NULL) THEN -0.0219093592328 ELSE `ADS`.`Feature_89` END AS impter_91, CASE WHEN (`ADS`.`Feature_90` IS NULL) THEN -0.362059992861 ELSE `ADS`.`Feature_90` END AS impter_92, CASE WHEN (`ADS`.`Feature_91` IS NULL) THEN 0.143072216148 ELSE `ADS`.`Feature_91` END AS impter_93, CASE WHEN (`ADS`.`Feature_92` IS NULL) THEN 0.0357397227366 ELSE `ADS`.`Feature_92` END AS impter_94, CASE WHEN (`ADS`.`Feature_93` IS NULL) THEN 0.430791347498 ELSE `ADS`.`Feature_93` END AS impter_95, CASE WHEN (`ADS`.`Feature_94` IS NULL) THEN 0.822593425438 ELSE `ADS`.`Feature_94` END AS impter_96, CASE WHEN (`ADS`.`Feature_95` IS NULL) THEN -0.302430192744 ELSE `ADS`.`Feature_95` END AS impter_97, CASE WHEN (`ADS`.`Feature_96` IS NULL) THEN -0.217429237531 ELSE `ADS`.`Feature_96` END AS impter_98, CASE WHEN (`ADS`.`Feature_97` IS NULL) THEN 0.0563057530387 ELSE `ADS`.`Feature_97` END AS impter_99, CASE WHEN (`ADS`.`Feature_98` IS NULL) THEN 1.12193378849 ELSE `ADS`.`Feature_98` END AS impter_100, CASE WHEN (`ADS`.`Feature_99` IS NULL) THEN -2.8087439791 ELSE `ADS`.`Feature_99` END AS impter_101 
FROM `FourClass_100` AS `ADS`), 
`ADS_sca_2_OUT` AS 
(SELECT `ADS_imp_1_OUT`.`KEY` AS `KEY`, (CAST(`ADS_imp_1_OUT`.impter_2 AS DOUBLE) - -0.0542737413) / 0.841226478247 AS scaler_2, (CAST(`ADS_imp_1_OUT`.impter_3 AS DOUBLE) - -0.218756529519) / 0.895975553726 AS scaler_3, (CAST(`ADS_imp_1_OUT`.impter_4 AS DOUBLE) - -0.0305703479087) / 1.02237915624 AS scaler_4, (CAST(`ADS_imp_1_OUT`.impter_5 AS DOUBLE) - -0.331249604917) / 4.26418776375 AS scaler_5, (CAST(`ADS_imp_1_OUT`.impter_6 AS DOUBLE) - 0.366763606826) / 3.53829894255 AS scaler_6, (CAST(`ADS_imp_1_OUT`.impter_7 AS DOUBLE) - -0.0741510747659) / 0.963174682697 AS scaler_7, (CAST(`ADS_imp_1_OUT`.impter_8 AS DOUBLE) - 0.412718121967) / 4.9472758423 AS scaler_8, (CAST(`ADS_imp_1_OUT`.impter_9 AS DOUBLE) - -0.0169856025995) / 0.994830601441 AS scaler_9, (CAST(`ADS_imp_1_OUT`.impter_10 AS DOUBLE) - 0.0847843992289) / 0.980176464339 AS scaler_10, (CAST(`ADS_imp_1_OUT`.impter_11 AS DOUBLE) - -0.13181660797) / 0.950866788502 AS scaler_11, (CAST(`ADS_imp_1_OUT`.impter_12 AS DOUBLE) - 1.44017259497) / 4.14930369821 AS scaler_12, (CAST(`ADS_imp_1_OUT`.impter_13 AS DOUBLE) - 0.55076799394) / 3.17598517548 AS scaler_13, (CAST(`ADS_imp_1_OUT`.impter_14 AS DOUBLE) - -0.0654596306858) / 0.824661514279 AS scaler_14, (CAST(`ADS_imp_1_OUT`.impter_15 AS DOUBLE) - 0.171642529155) / 0.840967567066 AS scaler_15, (CAST(`ADS_imp_1_OUT`.impter_16 AS DOUBLE) - 0.0828986327221) / 0.839419166269 AS scaler_16, (CAST(`ADS_imp_1_OUT`.impter_17 AS DOUBLE) - -1.85751133848) / 4.88766775585 AS scaler_17, (CAST(`ADS_imp_1_OUT`.impter_18 AS DOUBLE) - -0.0663115994037) / 0.866138364171 AS scaler_18, (CAST(`ADS_imp_1_OUT`.impter_19 AS DOUBLE) - 1.14029211354) / 3.88280400787 AS scaler_19, (CAST(`ADS_imp_1_OUT`.impter_20 AS DOUBLE) - 0.888873615763) / 3.84999760442 AS scaler_20, (CAST(`ADS_imp_1_OUT`.impter_21 AS DOUBLE) - 0.0957726287612) / 0.989315601632 AS scaler_21, (CAST(`ADS_imp_1_OUT`.impter_22 AS DOUBLE) - 0.244738494487) / 4.53782548903 AS scaler_22, (CAST(`ADS_imp_1_OUT`.impter_23 AS DOUBLE) - -0.609092391916) / 5.07872746188 AS scaler_23, (CAST(`ADS_imp_1_OUT`.impter_24 AS DOUBLE) - 0.0503892472753) / 1.13868448059 AS scaler_24, (CAST(`ADS_imp_1_OUT`.impter_25 AS DOUBLE) - 0.0273013863534) / 1.03226914948 AS scaler_25, (CAST(`ADS_imp_1_OUT`.impter_26 AS DOUBLE) - 0.380717162276) / 3.90060812668 AS scaler_26, (CAST(`ADS_imp_1_OUT`.impter_27 AS DOUBLE) - -0.20661251308) / 0.93768679925 AS scaler_27, (CAST(`ADS_imp_1_OUT`.impter_28 AS DOUBLE) - 0.668654570611) / 4.84609072226 AS scaler_28, (CAST(`ADS_imp_1_OUT`.impter_29 AS DOUBLE) - -0.160942763602) / 0.94820847069 AS scaler_29, (CAST(`ADS_imp_1_OUT`.impter_30 AS DOUBLE) - 0.0940928528227) / 4.64000461396 AS scaler_30, (CAST(`ADS_imp_1_OUT`.impter_31 AS DOUBLE) - 1.63077561616) / 3.55507198159 AS scaler_31, (CAST(`ADS_imp_1_OUT`.impter_32 AS DOUBLE) - -1.75138858195) / 4.3216605591 AS scaler_32, (CAST(`ADS_imp_1_OUT`.impter_33 AS DOUBLE) - 1.0423288999) / 4.572611642 AS scaler_33, (CAST(`ADS_imp_1_OUT`.impter_34 AS DOUBLE) - 0.770807238983) / 3.7134805867 AS scaler_34, (CAST(`ADS_imp_1_OUT`.impter_35 AS DOUBLE) - -0.688081590363) / 4.65813812968 AS scaler_35, (CAST(`ADS_imp_1_OUT`.impter_36 AS DOUBLE) - -1.27741961295) / 3.59778109771 AS scaler_36, (CAST(`ADS_imp_1_OUT`.impter_37 AS DOUBLE) - -0.112813132236) / 1.03307933825 AS scaler_37, (CAST(`ADS_imp_1_OUT`.impter_38 AS DOUBLE) - -0.000301506162037) / 0.850545923605 AS scaler_38, (CAST(`ADS_imp_1_OUT`.impter_39 AS DOUBLE) - -0.0384177367383) / 0.916256798368 AS scaler_39, (CAST(`ADS_imp_1_OUT`.impter_40 AS DOUBLE) - 0.00192035150554) / 0.923042193633 AS scaler_40, (CAST(`ADS_imp_1_OUT`.impter_41 AS DOUBLE) - -0.108901644136) / 0.714252376902 AS scaler_41, (CAST(`ADS_imp_1_OUT`.impter_42 AS DOUBLE) - -0.172777499083) / 1.10698153118 AS scaler_42, (CAST(`ADS_imp_1_OUT`.impter_43 AS DOUBLE) - 0.756450798532) / 3.5933252592 AS scaler_43, (CAST(`ADS_imp_1_OUT`.impter_44 AS DOUBLE) - -0.0766321841653) / 0.862712072529 AS scaler_44, (CAST(`ADS_imp_1_OUT`.impter_45 AS DOUBLE) - 1.49221532559) / 4.8801181801 AS scaler_45, (CAST(`ADS_imp_1_OUT`.impter_46 AS DOUBLE) - 0.0809334318631) / 1.02051375812 AS scaler_46, (CAST(`ADS_imp_1_OUT`.impter_47 AS DOUBLE) - -0.0511240194687) / 4.13192813822 AS scaler_47, (CAST(`ADS_imp_1_OUT`.impter_48 AS DOUBLE) - 0.0991431280775) / 1.09665873113 AS scaler_48, (CAST(`ADS_imp_1_OUT`.impter_49 AS DOUBLE) - 2.99950997083) / 17.1415128457 AS scaler_49, (CAST(`ADS_imp_1_OUT`.impter_50 AS DOUBLE) - 0.46343653733) / 4.39626438239 AS scaler_50, (CAST(`ADS_imp_1_OUT`.impter_51 AS DOUBLE) - 1.00327288337) / 4.37518201893 AS scaler_51, (CAST(`ADS_imp_1_OUT`.impter_52 AS DOUBLE) - -0.345317889003) / 3.99958888717 AS scaler_52, (CAST(`ADS_imp_1_OUT`.impter_53 AS DOUBLE) - -0.074907381624) / 0.951056156436 AS scaler_53, (CAST(`ADS_imp_1_OUT`.impter_54 AS DOUBLE) - 0.668197689036) / 4.13012403726 AS scaler_54, (CAST(`ADS_imp_1_OUT`.impter_55 AS DOUBLE) - -0.0213201023454) / 1.01908351284 AS scaler_55, (CAST(`ADS_imp_1_OUT`.impter_56 AS DOUBLE) - -0.40214128931) / 0.894915916931 AS scaler_56, (CAST(`ADS_imp_1_OUT`.impter_57 AS DOUBLE) - 0.462322711545) / 4.10023517171 AS scaler_57, (CAST(`ADS_imp_1_OUT`.impter_58 AS DOUBLE) - -1.85433259836) / 4.46821707817 AS scaler_58, (CAST(`ADS_imp_1_OUT`.impter_59 AS DOUBLE) - -0.0714861710124) / 0.761413799215 AS scaler_59, (CAST(`ADS_imp_1_OUT`.impter_60 AS DOUBLE) - 0.295346518526) / 1.06376235447 AS scaler_60, (CAST(`ADS_imp_1_OUT`.impter_61 AS DOUBLE) - 0.707152602525) / 4.30840892885 AS scaler_61, (CAST(`ADS_imp_1_OUT`.impter_62 AS DOUBLE) - -0.999290987436) / 3.20121113123 AS scaler_62, (CAST(`ADS_imp_1_OUT`.impter_63 AS DOUBLE) - 0.0895853339294) / 1.11287992197 AS scaler_63, (CAST(`ADS_imp_1_OUT`.impter_64 AS DOUBLE) - -9.29088785315) / 18.9817375238 AS scaler_64, (CAST(`ADS_imp_1_OUT`.impter_65 AS DOUBLE) - -0.00420751817254) / 0.917648325278 AS scaler_65, (CAST(`ADS_imp_1_OUT`.impter_66 AS DOUBLE) - -0.178981366682) / 1.04680502643 AS scaler_66, (CAST(`ADS_imp_1_OUT`.impter_67 AS DOUBLE) - 0.104619597019) / 0.967281928282 AS scaler_67, (CAST(`ADS_imp_1_OUT`.impter_68 AS DOUBLE) - 0.317321472946) / 1.06062019986 AS scaler_68, (CAST(`ADS_imp_1_OUT`.impter_69 AS DOUBLE) - 0.507737105695) / 5.41062442387 AS scaler_69, (CAST(`ADS_imp_1_OUT`.impter_70 AS DOUBLE) - 0.636354957302) / 3.31142222219 AS scaler_70, (CAST(`ADS_imp_1_OUT`.impter_71 AS DOUBLE) - -1.26959924734) / 4.18780358925 AS scaler_71, (CAST(`ADS_imp_1_OUT`.impter_72 AS DOUBLE) - 0.168554896467) / 1.27264496517 AS scaler_72, (CAST(`ADS_imp_1_OUT`.impter_73 AS DOUBLE) - 0.382817250313) / 4.21777214548 AS scaler_73, (CAST(`ADS_imp_1_OUT`.impter_74 AS DOUBLE) - 0.356291795624) / 4.27892458714 AS scaler_74, (CAST(`ADS_imp_1_OUT`.impter_75 AS DOUBLE) - -0.662337874026) / 3.14279619311 AS scaler_75, (CAST(`ADS_imp_1_OUT`.impter_76 AS DOUBLE) - -1.11003423439) / 4.17863710103 AS scaler_76, (CAST(`ADS_imp_1_OUT`.impter_77 AS DOUBLE) - -0.0453679904887) / 0.913270004578 AS scaler_77, (CAST(`ADS_imp_1_OUT`.impter_78 AS DOUBLE) - 0.956315095738) / 4.5149243782 AS scaler_78, (CAST(`ADS_imp_1_OUT`.impter_79 AS DOUBLE) - 0.120281875009) / 1.18234319918 AS scaler_79, (CAST(`ADS_imp_1_OUT`.impter_80 AS DOUBLE) - 0.316221585917) / 4.65444240801 AS scaler_80, (CAST(`ADS_imp_1_OUT`.impter_81 AS DOUBLE) - -1.2868164842) / 4.48931766249 AS scaler_81, (CAST(`ADS_imp_1_OUT`.impter_82 AS DOUBLE) - -0.382487328823) / 4.79389970723 AS scaler_82, (CAST(`ADS_imp_1_OUT`.impter_83 AS DOUBLE) - 0.168238944463) / 1.13425397882 AS scaler_83, (CAST(`ADS_imp_1_OUT`.impter_84 AS DOUBLE) - 0.0165491301864) / 1.05293513352 AS scaler_84, (CAST(`ADS_imp_1_OUT`.impter_85 AS DOUBLE) - 1.4745932382) / 3.10625058311 AS scaler_85, (CAST(`ADS_imp_1_OUT`.impter_86 AS DOUBLE) - -0.4513845299) / 4.06938678288 AS scaler_86, (CAST(`ADS_imp_1_OUT`.impter_87 AS DOUBLE) - 0.807426393278) / 4.5194432744 AS scaler_87, (CAST(`ADS_imp_1_OUT`.impter_88 AS DOUBLE) - -0.151058515856) / 1.06279296846 AS scaler_88, (CAST(`ADS_imp_1_OUT`.impter_89 AS DOUBLE) - 0.155661783653) / 1.0854880061 AS scaler_89, (CAST(`ADS_imp_1_OUT`.impter_90 AS DOUBLE) - 0.184085967694) / 0.860092382294 AS scaler_90, (CAST(`ADS_imp_1_OUT`.impter_91 AS DOUBLE) - -0.0219093592328) / 1.09657170629 AS scaler_91, (CAST(`ADS_imp_1_OUT`.impter_92 AS DOUBLE) - -0.362059992861) / 3.80775739097 AS scaler_92, (CAST(`ADS_imp_1_OUT`.impter_93 AS DOUBLE) - 0.143072216148) / 4.52894107306 AS scaler_93, (CAST(`ADS_imp_1_OUT`.impter_94 AS DOUBLE) - 0.0357397227366) / 4.51430329801 AS scaler_94, (CAST(`ADS_imp_1_OUT`.impter_95 AS DOUBLE) - 0.430791347498) / 1.00630345361 AS scaler_95, (CAST(`ADS_imp_1_OUT`.impter_96 AS DOUBLE) - 0.822593425438) / 3.48327194839 AS scaler_96, (CAST(`ADS_imp_1_OUT`.impter_97 AS DOUBLE) - -0.302430192744) / 1.10859655925 AS scaler_97, (CAST(`ADS_imp_1_OUT`.impter_98 AS DOUBLE) - -0.217429237531) / 1.11157531881 AS scaler_98, (CAST(`ADS_imp_1_OUT`.impter_99 AS DOUBLE) - 0.0563057530387) / 0.952249066111 AS scaler_99, (CAST(`ADS_imp_1_OUT`.impter_100 AS DOUBLE) - 1.12193378849) / 4.25494688198 AS scaler_100, (CAST(`ADS_imp_1_OUT`.impter_101 AS DOUBLE) - -2.8087439791) / 4.1863751857 AS scaler_101 
FROM `ADS_imp_1_OUT`), 
`IL` AS 
(SELECT `ADS_sca_2_OUT`.`KEY` AS `KEY`, CAST(`ADS_sca_2_OUT`.scaler_2 AS DOUBLE) AS scaler_2, CAST(`ADS_sca_2_OUT`.scaler_3 AS DOUBLE) AS scaler_3, CAST(`ADS_sca_2_OUT`.scaler_4 AS DOUBLE) AS scaler_4, CAST(`ADS_sca_2_OUT`.scaler_5 AS DOUBLE) AS scaler_5, CAST(`ADS_sca_2_OUT`.scaler_6 AS DOUBLE) AS scaler_6, CAST(`ADS_sca_2_OUT`.scaler_7 AS DOUBLE) AS scaler_7, CAST(`ADS_sca_2_OUT`.scaler_8 AS DOUBLE) AS scaler_8, CAST(`ADS_sca_2_OUT`.scaler_9 AS DOUBLE) AS scaler_9, CAST(`ADS_sca_2_OUT`.scaler_10 AS DOUBLE) AS scaler_10, CAST(`ADS_sca_2_OUT`.scaler_11 AS DOUBLE) AS scaler_11, CAST(`ADS_sca_2_OUT`.scaler_12 AS DOUBLE) AS scaler_12, CAST(`ADS_sca_2_OUT`.scaler_13 AS DOUBLE) AS scaler_13, CAST(`ADS_sca_2_OUT`.scaler_14 AS DOUBLE) AS scaler_14, CAST(`ADS_sca_2_OUT`.scaler_15 AS DOUBLE) AS scaler_15, CAST(`ADS_sca_2_OUT`.scaler_16 AS DOUBLE) AS scaler_16, CAST(`ADS_sca_2_OUT`.scaler_17 AS DOUBLE) AS scaler_17, CAST(`ADS_sca_2_OUT`.scaler_18 AS DOUBLE) AS scaler_18, CAST(`ADS_sca_2_OUT`.scaler_19 AS DOUBLE) AS scaler_19, CAST(`ADS_sca_2_OUT`.scaler_20 AS DOUBLE) AS scaler_20, CAST(`ADS_sca_2_OUT`.scaler_21 AS DOUBLE) AS scaler_21, CAST(`ADS_sca_2_OUT`.scaler_22 AS DOUBLE) AS scaler_22, CAST(`ADS_sca_2_OUT`.scaler_23 AS DOUBLE) AS scaler_23, CAST(`ADS_sca_2_OUT`.scaler_24 AS DOUBLE) AS scaler_24, CAST(`ADS_sca_2_OUT`.scaler_25 AS DOUBLE) AS scaler_25, CAST(`ADS_sca_2_OUT`.scaler_26 AS DOUBLE) AS scaler_26, CAST(`ADS_sca_2_OUT`.scaler_27 AS DOUBLE) AS scaler_27, CAST(`ADS_sca_2_OUT`.scaler_28 AS DOUBLE) AS scaler_28, CAST(`ADS_sca_2_OUT`.scaler_29 AS DOUBLE) AS scaler_29, CAST(`ADS_sca_2_OUT`.scaler_30 AS DOUBLE) AS scaler_30, CAST(`ADS_sca_2_OUT`.scaler_31 AS DOUBLE) AS scaler_31, CAST(`ADS_sca_2_OUT`.scaler_32 AS DOUBLE) AS scaler_32, CAST(`ADS_sca_2_OUT`.scaler_33 AS DOUBLE) AS scaler_33, CAST(`ADS_sca_2_OUT`.scaler_34 AS DOUBLE) AS scaler_34, CAST(`ADS_sca_2_OUT`.scaler_35 AS DOUBLE) AS scaler_35, CAST(`ADS_sca_2_OUT`.scaler_36 AS DOUBLE) AS scaler_36, CAST(`ADS_sca_2_OUT`.scaler_37 AS DOUBLE) AS scaler_37, CAST(`ADS_sca_2_OUT`.scaler_38 AS DOUBLE) AS scaler_38, CAST(`ADS_sca_2_OUT`.scaler_39 AS DOUBLE) AS scaler_39, CAST(`ADS_sca_2_OUT`.scaler_40 AS DOUBLE) AS scaler_40, CAST(`ADS_sca_2_OUT`.scaler_41 AS DOUBLE) AS scaler_41, CAST(`ADS_sca_2_OUT`.scaler_42 AS DOUBLE) AS scaler_42, CAST(`ADS_sca_2_OUT`.scaler_43 AS DOUBLE) AS scaler_43, CAST(`ADS_sca_2_OUT`.scaler_44 AS DOUBLE) AS scaler_44, CAST(`ADS_sca_2_OUT`.scaler_45 AS DOUBLE) AS scaler_45, CAST(`ADS_sca_2_OUT`.scaler_46 AS DOUBLE) AS scaler_46, CAST(`ADS_sca_2_OUT`.scaler_47 AS DOUBLE) AS scaler_47, CAST(`ADS_sca_2_OUT`.scaler_48 AS DOUBLE) AS scaler_48, CAST(`ADS_sca_2_OUT`.scaler_49 AS DOUBLE) AS scaler_49, CAST(`ADS_sca_2_OUT`.scaler_50 AS DOUBLE) AS scaler_50, CAST(`ADS_sca_2_OUT`.scaler_51 AS DOUBLE) AS scaler_51, CAST(`ADS_sca_2_OUT`.scaler_52 AS DOUBLE) AS scaler_52, CAST(`ADS_sca_2_OUT`.scaler_53 AS DOUBLE) AS scaler_53, CAST(`ADS_sca_2_OUT`.scaler_54 AS DOUBLE) AS scaler_54, CAST(`ADS_sca_2_OUT`.scaler_55 AS DOUBLE) AS scaler_55, CAST(`ADS_sca_2_OUT`.scaler_56 AS DOUBLE) AS scaler_56, CAST(`ADS_sca_2_OUT`.scaler_57 AS DOUBLE) AS scaler_57, CAST(`ADS_sca_2_OUT`.scaler_58 AS DOUBLE) AS scaler_58, CAST(`ADS_sca_2_OUT`.scaler_59 AS DOUBLE) AS scaler_59, CAST(`ADS_sca_2_OUT`.scaler_60 AS DOUBLE) AS scaler_60, CAST(`ADS_sca_2_OUT`.scaler_61 AS DOUBLE) AS scaler_61, CAST(`ADS_sca_2_OUT`.scaler_62 AS DOUBLE) AS scaler_62, CAST(`ADS_sca_2_OUT`.scaler_63 AS DOUBLE) AS scaler_63, CAST(`ADS_sca_2_OUT`.scaler_64 AS DOUBLE) AS scaler_64, CAST(`ADS_sca_2_OUT`.scaler_65 AS DOUBLE) AS scaler_65, CAST(`ADS_sca_2_OUT`.scaler_66 AS DOUBLE) AS scaler_66, CAST(`ADS_sca_2_OUT`.scaler_67 AS DOUBLE) AS scaler_67, CAST(`ADS_sca_2_OUT`.scaler_68 AS DOUBLE) AS scaler_68, CAST(`ADS_sca_2_OUT`.scaler_69 AS DOUBLE) AS scaler_69, CAST(`ADS_sca_2_OUT`.scaler_70 AS DOUBLE) AS scaler_70, CAST(`ADS_sca_2_OUT`.scaler_71 AS DOUBLE) AS scaler_71, CAST(`ADS_sca_2_OUT`.scaler_72 AS DOUBLE) AS scaler_72, CAST(`ADS_sca_2_OUT`.scaler_73 AS DOUBLE) AS scaler_73, CAST(`ADS_sca_2_OUT`.scaler_74 AS DOUBLE) AS scaler_74, CAST(`ADS_sca_2_OUT`.scaler_75 AS DOUBLE) AS scaler_75, CAST(`ADS_sca_2_OUT`.scaler_76 AS DOUBLE) AS scaler_76, CAST(`ADS_sca_2_OUT`.scaler_77 AS DOUBLE) AS scaler_77, CAST(`ADS_sca_2_OUT`.scaler_78 AS DOUBLE) AS scaler_78, CAST(`ADS_sca_2_OUT`.scaler_79 AS DOUBLE) AS scaler_79, CAST(`ADS_sca_2_OUT`.scaler_80 AS DOUBLE) AS scaler_80, CAST(`ADS_sca_2_OUT`.scaler_81 AS DOUBLE) AS scaler_81, CAST(`ADS_sca_2_OUT`.scaler_82 AS DOUBLE) AS scaler_82, CAST(`ADS_sca_2_OUT`.scaler_83 AS DOUBLE) AS scaler_83, CAST(`ADS_sca_2_OUT`.scaler_84 AS DOUBLE) AS scaler_84, CAST(`ADS_sca_2_OUT`.scaler_85 AS DOUBLE) AS scaler_85, CAST(`ADS_sca_2_OUT`.scaler_86 AS DOUBLE) AS scaler_86, CAST(`ADS_sca_2_OUT`.scaler_87 AS DOUBLE) AS scaler_87, CAST(`ADS_sca_2_OUT`.scaler_88 AS DOUBLE) AS scaler_88, CAST(`ADS_sca_2_OUT`.scaler_89 AS DOUBLE) AS scaler_89, CAST(`ADS_sca_2_OUT`.scaler_90 AS DOUBLE) AS scaler_90, CAST(`ADS_sca_2_OUT`.scaler_91 AS DOUBLE) AS scaler_91, CAST(`ADS_sca_2_OUT`.scaler_92 AS DOUBLE) AS scaler_92, CAST(`ADS_sca_2_OUT`.scaler_93 AS DOUBLE) AS scaler_93, CAST(`ADS_sca_2_OUT`.scaler_94 AS DOUBLE) AS scaler_94, CAST(`ADS_sca_2_OUT`.scaler_95 AS DOUBLE) AS scaler_95, CAST(`ADS_sca_2_OUT`.scaler_96 AS DOUBLE) AS scaler_96, CAST(`ADS_sca_2_OUT`.scaler_97 AS DOUBLE) AS scaler_97, CAST(`ADS_sca_2_OUT`.scaler_98 AS DOUBLE) AS scaler_98, CAST(`ADS_sca_2_OUT`.scaler_99 AS DOUBLE) AS scaler_99, CAST(`ADS_sca_2_OUT`.scaler_100 AS DOUBLE) AS scaler_100, CAST(`ADS_sca_2_OUT`.scaler_101 AS DOUBLE) AS scaler_101 
FROM `ADS_sca_2_OUT`), 
`HL_BA_1` AS 
(SELECT `IL`.`KEY` AS `KEY`, 0.0376821981303 * `IL`.scaler_2 + 1.15955652709 * `IL`.scaler_3 + -2.50776665429 * `IL`.scaler_4 + -1.86856643415 * `IL`.scaler_5 + 0.316549869454 * `IL`.scaler_6 + -0.0491498325582 * `IL`.scaler_7 + 0.755669491718 * `IL`.scaler_8 + 2.24788203549 * `IL`.scaler_9 + -0.456303264603 * `IL`.scaler_10 + -0.732431226382 * `IL`.scaler_11 + -0.572331717453 * `IL`.scaler_12 + -1.36914104936 * `IL`.scaler_13 + -0.465721512235 * `IL`.scaler_14 + 0.0699898854327 * `IL`.scaler_15 + 1.29087106846 * `IL`.scaler_16 + 0.569567816405 * `IL`.scaler_17 + -0.763348475696 * `IL`.scaler_18 + -1.97388036663 * `IL`.scaler_19 + 0.124832446421 * `IL`.scaler_20 + -0.916527396208 * `IL`.scaler_21 + -3.59060739738 * `IL`.scaler_22 + -0.0776794644494 * `IL`.scaler_23 + -0.210785511983 * `IL`.scaler_24 + 1.06997785416 * `IL`.scaler_25 + 0.221392965039 * `IL`.scaler_26 + -2.39189509598 * `IL`.scaler_27 + 1.6541763005 * `IL`.scaler_28 + 0.661523145447 * `IL`.scaler_29 + 1.14057017812 * `IL`.scaler_30 + 1.65684821298 * `IL`.scaler_31 + 0.0167092900291 * `IL`.scaler_32 + 1.20796405374 * `IL`.scaler_33 + 2.07410903103 * `IL`.scaler_34 + 1.66353643037 * `IL`.scaler_35 + 0.0484999755028 * `IL`.scaler_36 + 0.767662543562 * `IL`.scaler_37 + 0.930682908633 * `IL`.scaler_38 + 1.1160663304 * `IL`.scaler_39 + 0.848464455931 * `IL`.scaler_40 + 3.18246446071 * `IL`.scaler_41 + 1.56057908304 * `IL`.scaler_42 + -1.1434378888 * `IL`.scaler_43 + 0.79884850878 * `IL`.scaler_44 + 0.816966283324 * `IL`.scaler_45 + -0.726253363009 * `IL`.scaler_46 + 0.499869377256 * `IL`.scaler_47 + 0.447605257619 * `IL`.scaler_48 + 1.29904641451 * `IL`.scaler_49 + 2.2450222079 * `IL`.scaler_50 + -0.286063330701 * `IL`.scaler_51 + 0.927830757268 * `IL`.scaler_52 + 0.0822676465414 * `IL`.scaler_53 + -0.437935212368 * `IL`.scaler_54 + 1.15756440739 * `IL`.scaler_55 + -1.64003496135 * `IL`.scaler_56 + -0.11755027725 * `IL`.scaler_57 + 2.49278401502 * `IL`.scaler_58 + 0.0453643517828 * `IL`.scaler_59 + 0.894883247464 * `IL`.scaler_60 + -0.670465046888 * `IL`.scaler_61 + 1.29909282123 * `IL`.scaler_62 + -1.42656834749 * `IL`.scaler_63 + -0.254478120746 * `IL`.scaler_64 + 0.474719615653 * `IL`.scaler_65 + 0.781585017399 * `IL`.scaler_66 + 2.51249287812 * `IL`.scaler_67 + 0.702933940249 * `IL`.scaler_68 + 0.336984922253 * `IL`.scaler_69 + 0.393786040501 * `IL`.scaler_70 + 2.38901106639 * `IL`.scaler_71 + -1.69348932889 * `IL`.scaler_72 + 0.132826107431 * `IL`.scaler_73 + 0.38725520134 * `IL`.scaler_74 + 0.959844710436 * `IL`.scaler_75 + -1.29711877054 * `IL`.scaler_76 + -1.35910888609 * `IL`.scaler_77 + 1.50090221091 * `IL`.scaler_78 + 1.57304487734 * `IL`.scaler_79 + 0.275650940385 * `IL`.scaler_80 + 1.60748053995 * `IL`.scaler_81 + -1.01440747763 * `IL`.scaler_82 + 1.06235499318 * `IL`.scaler_83 + 0.625085921309 * `IL`.scaler_84 + 1.31138968465 * `IL`.scaler_85 + -1.53191307215 * `IL`.scaler_86 + 0.66529310595 * `IL`.scaler_87 + -3.09956431443 * `IL`.scaler_88 + -0.953564548787 * `IL`.scaler_89 + 0.0454643055349 * `IL`.scaler_90 + 1.66648329126 * `IL`.scaler_91 + 1.47074411391 * `IL`.scaler_92 + 0.96119074775 * `IL`.scaler_93 + -0.547977251824 * `IL`.scaler_94 + -1.90865833356 * `IL`.scaler_95 + 1.06273310634 * `IL`.scaler_96 + 0.230767136281 * `IL`.scaler_97 + -0.482778575792 * `IL`.scaler_98 + 1.57963523317 * `IL`.scaler_99 + 1.35202669253 * `IL`.scaler_100 + -0.452947745449 * `IL`.scaler_101 + -1.92885506353 AS `NEUR_1_1`, 1.63061354594 * `IL`.scaler_2 + 1.52703965583 * `IL`.scaler_3 + -1.54248950619 * `IL`.scaler_4 + 0.569297597274 * `IL`.scaler_5 + 1.99270946349 * `IL`.scaler_6 + -0.394846787154 * `IL`.scaler_7 + -2.54109783209 * `IL`.scaler_8 + -0.640926735555 * `IL`.scaler_9 + 0.677815050592 * `IL`.scaler_10 + -0.756902511105 * `IL`.scaler_11 + 1.44252350004 * `IL`.scaler_12 + -0.0689478243387 * `IL`.scaler_13 + 3.13572082706 * `IL`.scaler_14 + 2.94984056435 * `IL`.scaler_15 + -1.38885509123 * `IL`.scaler_16 + -0.754589880969 * `IL`.scaler_17 + -1.4026255909 * `IL`.scaler_18 + 0.153238982517 * `IL`.scaler_19 + -1.57868540471 * `IL`.scaler_20 + -0.246995869591 * `IL`.scaler_21 + 3.05241878912 * `IL`.scaler_22 + -1.04000450843 * `IL`.scaler_23 + -3.11017528548 * `IL`.scaler_24 + 0.0294134229332 * `IL`.scaler_25 + 1.07609589638 * `IL`.scaler_26 + 1.01802353548 * `IL`.scaler_27 + -2.53035909569 * `IL`.scaler_28 + -3.90445860241 * `IL`.scaler_29 + 0.162755844229 * `IL`.scaler_30 + -1.93013403712 * `IL`.scaler_31 + 0.605915010524 * `IL`.scaler_32 + 0.81389140479 * `IL`.scaler_33 + -2.64322069052 * `IL`.scaler_34 + -3.45190750801 * `IL`.scaler_35 + 1.53317478584 * `IL`.scaler_36 + -0.22620048885 * `IL`.scaler_37 + 3.14576610296 * `IL`.scaler_38 + 1.36524736958 * `IL`.scaler_39 + -0.691320635483 * `IL`.scaler_40 + -4.96883761571 * `IL`.scaler_41 + 0.337010952712 * `IL`.scaler_42 + -0.565191999322 * `IL`.scaler_43 + 2.62227729962 * `IL`.scaler_44 + -0.0971580121649 * `IL`.scaler_45 + -0.23391835128 * `IL`.scaler_46 + -0.852362298819 * `IL`.scaler_47 + 2.62079920048 * `IL`.scaler_48 + 0.692138672695 * `IL`.scaler_49 + -1.7177716385 * `IL`.scaler_50 + -1.37928057426 * `IL`.scaler_51 + 1.00473082554 * `IL`.scaler_52 + -0.707046791025 * `IL`.scaler_53 + 1.65067295017 * `IL`.scaler_54 + -1.1728475931 * `IL`.scaler_55 + 1.5296612064 * `IL`.scaler_56 + -0.224369932966 * `IL`.scaler_57 + 0.638274701008 * `IL`.scaler_58 + -0.430435062455 * `IL`.scaler_59 + 1.39104822856 * `IL`.scaler_60 + -0.138093063651 * `IL`.scaler_61 + 0.153913552111 * `IL`.scaler_62 + 3.10600858655 * `IL`.scaler_63 + 2.49835698313 * `IL`.scaler_64 + 1.0419245271 * `IL`.scaler_65 + -0.728365394665 * `IL`.scaler_66 + -0.743770481243 * `IL`.scaler_67 + 2.3420096731 * `IL`.scaler_68 + -1.41515455207 * `IL`.scaler_69 + -1.41069687681 * `IL`.scaler_70 + 1.09544436691 * `IL`.scaler_71 + 3.02065526754 * `IL`.scaler_72 + 0.686539224628 * `IL`.scaler_73 + -2.27088349686 * `IL`.scaler_74 + 1.85019690448 * `IL`.scaler_75 + 1.44934450347 * `IL`.scaler_76 + 0.649873186339 * `IL`.scaler_77 + 0.748435994313 * `IL`.scaler_78 + 0.957403139591 * `IL`.scaler_79 + -0.852272518896 * `IL`.scaler_80 + -0.461577912302 * `IL`.scaler_81 + 0.632653014712 * `IL`.scaler_82 + 1.02284970194 * `IL`.scaler_83 + -0.599721971382 * `IL`.scaler_84 + -1.26752301554 * `IL`.scaler_85 + 4.38058810046 * `IL`.scaler_86 + -1.25923368835 * `IL`.scaler_87 + 0.937033019131 * `IL`.scaler_88 + 1.47809205138 * `IL`.scaler_89 + 0.796296306165 * `IL`.scaler_90 + -4.35442556245 * `IL`.scaler_91 + -0.0204574119809 * `IL`.scaler_92 + -1.43695407784 * `IL`.scaler_93 + 0.0230604567151 * `IL`.scaler_94 + -0.602488225251 * `IL`.scaler_95 + -3.26830801132 * `IL`.scaler_96 + -0.815285176916 * `IL`.scaler_97 + -2.00529837998 * `IL`.scaler_98 + 0.887547509572 * `IL`.scaler_99 + -0.198071329373 * `IL`.scaler_100 + 1.34443057148 * `IL`.scaler_101 + -0.232273773721 AS `NEUR_1_2`, -0.638242164674 * `IL`.scaler_2 + -0.156705049888 * `IL`.scaler_3 + 0.513384260683 * `IL`.scaler_4 + 0.22155913354 * `IL`.scaler_5 + 1.68735522175 * `IL`.scaler_6 + 0.918520208437 * `IL`.scaler_7 + 1.8233167435 * `IL`.scaler_8 + -0.592033444063 * `IL`.scaler_9 + 1.98577183292 * `IL`.scaler_10 + 0.765668061816 * `IL`.scaler_11 + 2.77682015087 * `IL`.scaler_12 + 0.0180985158654 * `IL`.scaler_13 + -0.939785784725 * `IL`.scaler_14 + -0.158912182771 * `IL`.scaler_15 + 1.36611685749 * `IL`.scaler_16 + -0.641021719639 * `IL`.scaler_17 + 0.708350624959 * `IL`.scaler_18 + -0.0694704320537 * `IL`.scaler_19 + 2.57971351054 * `IL`.scaler_20 + -0.465652557 * `IL`.scaler_21 + 2.94329118347 * `IL`.scaler_22 + -0.282289972026 * `IL`.scaler_23 + 1.55650239711 * `IL`.scaler_24 + 1.44682582591 * `IL`.scaler_25 + 0.935807086705 * `IL`.scaler_26 + -0.798358881204 * `IL`.scaler_27 + 3.08929311311 * `IL`.scaler_28 + 0.0203625347342 * `IL`.scaler_29 + -0.129709060152 * `IL`.scaler_30 + 0.849818702475 * `IL`.scaler_31 + -0.828871784872 * `IL`.scaler_32 + 0.623383734324 * `IL`.scaler_33 + 1.53638027784 * `IL`.scaler_34 + -0.624435747657 * `IL`.scaler_35 + -2.34829411269 * `IL`.scaler_36 + 0.856874313528 * `IL`.scaler_37 + -1.43932631724 * `IL`.scaler_38 + 1.12984042703 * `IL`.scaler_39 + 1.10595135319 * `IL`.scaler_40 + 1.98035957843 * `IL`.scaler_41 + 0.303005932067 * `IL`.scaler_42 + -0.768485562189 * `IL`.scaler_43 + 0.455785622445 * `IL`.scaler_44 + 0.088542889831 * `IL`.scaler_45 + -0.821293293178 * `IL`.scaler_46 + -3.51698891159 * `IL`.scaler_47 + 1.17807544631 * `IL`.scaler_48 + 3.3602835243 * `IL`.scaler_49 + -1.00829965246 * `IL`.scaler_50 + 0.597786929858 * `IL`.scaler_51 + -1.35927086651 * `IL`.scaler_52 + -1.74244454788 * `IL`.scaler_53 + -2.10027281904 * `IL`.scaler_54 + 0.75499077038 * `IL`.scaler_55 + 0.770165249825 * `IL`.scaler_56 + -0.305818030918 * `IL`.scaler_57 + -2.47040804872 * `IL`.scaler_58 + -1.58758368167 * `IL`.scaler_59 + -1.28583111283 * `IL`.scaler_60 + 1.85570118723 * `IL`.scaler_61 + 0.165550720615 * `IL`.scaler_62 + -1.38060571818 * `IL`.scaler_63 + -2.60544820942 * `IL`.scaler_64 + -1.77199842397 * `IL`.scaler_65 + -1.40936787159 * `IL`.scaler_66 + 0.523967778574 * `IL`.scaler_67 + 0.206997014669 * `IL`.scaler_68 + 1.6416259979 * `IL`.scaler_69 + 0.466013896841 * `IL`.scaler_70 + 2.87904011381 * `IL`.scaler_71 + 0.416782157048 * `IL`.scaler_72 + -2.20452211789 * `IL`.scaler_73 + -0.769512833197 * `IL`.scaler_74 + 1.63026172004 * `IL`.scaler_75 + -2.26073917312 * `IL`.scaler_76 + -0.257454009455 * `IL`.scaler_77 + 0.0570230124051 * `IL`.scaler_78 + 0.82744686553 * `IL`.scaler_79 + 0.482318342799 * `IL`.scaler_80 + -0.721063405321 * `IL`.scaler_81 + 0.98140396307 * `IL`.scaler_82 + -0.458348857904 * `IL`.scaler_83 + -0.655730198587 * `IL`.scaler_84 + -0.211460940992 * `IL`.scaler_85 + -2.38464731209 * `IL`.scaler_86 + -0.201578244056 * `IL`.scaler_87 + -0.649196662291 * `IL`.scaler_88 + 1.14627451157 * `IL`.scaler_89 + 2.08412681962 * `IL`.scaler_90 + -0.241899774726 * `IL`.scaler_91 + -0.138703104879 * `IL`.scaler_92 + 3.16234017567 * `IL`.scaler_93 + -2.06756078598 * `IL`.scaler_94 + 1.09222210869 * `IL`.scaler_95 + 0.337611583271 * `IL`.scaler_96 + -2.22933690735 * `IL`.scaler_97 + 0.797668452605 * `IL`.scaler_98 + 1.70373375566 * `IL`.scaler_99 + 2.13564690499 * `IL`.scaler_100 + 0.638598853457 * `IL`.scaler_101 + 1.15048047568 AS `NEUR_1_3` 
FROM `IL`), 
`HL_1_relu` AS 
(SELECT `HL_BA_1`.`KEY` AS `KEY`, CASE WHEN (`HL_BA_1`.`NEUR_1_1` >= 0.0) THEN `HL_BA_1`.`NEUR_1_1` ELSE 0.0 END AS `NEUR_1_1`, CASE WHEN (`HL_BA_1`.`NEUR_1_2` >= 0.0) THEN `HL_BA_1`.`NEUR_1_2` ELSE 0.0 END AS `NEUR_1_2`, CASE WHEN (`HL_BA_1`.`NEUR_1_3` >= 0.0) THEN `HL_BA_1`.`NEUR_1_3` ELSE 0.0 END AS `NEUR_1_3` 
FROM `HL_BA_1`), 
`HL_BA_2` AS 
(SELECT `HL_1_relu`.`KEY` AS `KEY`, -0.466216638286 * `HL_1_relu`.`NEUR_1_1` + -5.39608701666 * `HL_1_relu`.`NEUR_1_2` + 2.80161914533 * `HL_1_relu`.`NEUR_1_3` + -3.09546315111 AS `NEUR_2_1`, 7.96672085546 * `HL_1_relu`.`NEUR_1_1` + -6.36315553897 * `HL_1_relu`.`NEUR_1_2` + 4.29736618044 * `HL_1_relu`.`NEUR_1_3` + 4.11081503763 AS `NEUR_2_2`, -1.15582516199 * `HL_1_relu`.`NEUR_1_1` + 0.727716137724 * `HL_1_relu`.`NEUR_1_2` + 0.854972031153 * `HL_1_relu`.`NEUR_1_3` + -4.63301099249 AS `NEUR_2_3`, -0.915935091206 * `HL_1_relu`.`NEUR_1_1` + 9.50621733124 * `HL_1_relu`.`NEUR_1_2` + -2.23769019572 * `HL_1_relu`.`NEUR_1_3` + 2.42705589816 AS `NEUR_2_4`, -0.608349483141 * `HL_1_relu`.`NEUR_1_1` + -0.377050360536 * `HL_1_relu`.`NEUR_1_2` + -0.671900166399 * `HL_1_relu`.`NEUR_1_3` + -0.018078316227 AS `NEUR_2_5` 
FROM `HL_1_relu`), 
`HL_2_relu` AS 
(SELECT `HL_BA_2`.`KEY` AS `KEY`, CASE WHEN (`HL_BA_2`.`NEUR_2_1` >= 0.0) THEN `HL_BA_2`.`NEUR_2_1` ELSE 0.0 END AS `NEUR_2_1`, CASE WHEN (`HL_BA_2`.`NEUR_2_2` >= 0.0) THEN `HL_BA_2`.`NEUR_2_2` ELSE 0.0 END AS `NEUR_2_2`, CASE WHEN (`HL_BA_2`.`NEUR_2_3` >= 0.0) THEN `HL_BA_2`.`NEUR_2_3` ELSE 0.0 END AS `NEUR_2_3`, CASE WHEN (`HL_BA_2`.`NEUR_2_4` >= 0.0) THEN `HL_BA_2`.`NEUR_2_4` ELSE 0.0 END AS `NEUR_2_4`, CASE WHEN (`HL_BA_2`.`NEUR_2_5` >= 0.0) THEN `HL_BA_2`.`NEUR_2_5` ELSE 0.0 END AS `NEUR_2_5` 
FROM `HL_BA_2`), 
`OL_BA` AS 
(SELECT `HL_2_relu`.`KEY` AS `KEY`, -1.86760837317 * `HL_2_relu`.`NEUR_2_1` + -7.81947139269 * `HL_2_relu`.`NEUR_2_2` + -1.11405374738 * `HL_2_relu`.`NEUR_2_3` + 4.45357177904 * `HL_2_relu`.`NEUR_2_4` + 0.588923508679 * `HL_2_relu`.`NEUR_2_5` + -4.49057586034 AS `NEUR_3_1`, -0.817131927555 * `HL_2_relu`.`NEUR_2_1` + 4.51081430019 * `HL_2_relu`.`NEUR_2_2` + -3.53153069828 * `HL_2_relu`.`NEUR_2_3` + -7.00954265604 * `HL_2_relu`.`NEUR_2_4` + 0.395456138612 * `HL_2_relu`.`NEUR_2_5` + 9.81572392962 AS `NEUR_3_2`, 2.92331296488 * `HL_2_relu`.`NEUR_2_1` + 4.56762264107 * `HL_2_relu`.`NEUR_2_2` + -1.52616254457 * `HL_2_relu`.`NEUR_2_3` + -1.74190507579 * `HL_2_relu`.`NEUR_2_4` + 0.662420881796 * `HL_2_relu`.`NEUR_2_5` + -3.20234502185 AS `NEUR_3_3`, 0.376694242725 * `HL_2_relu`.`NEUR_2_1` + -0.894908165842 * `HL_2_relu`.`NEUR_2_2` + 5.38101917903 * `HL_2_relu`.`NEUR_2_3` + 4.02255755303 * `HL_2_relu`.`NEUR_2_4` + -0.484732619115 * `HL_2_relu`.`NEUR_2_5` + -3.44025326709 AS `NEUR_3_4` 
FROM `HL_2_relu`), 
`OL_softmax` AS 
(SELECT `OL_BA`.`KEY` AS `KEY`, `OL_BA`.`NEUR_3_1` AS `NEUR_3_1`, `OL_BA`.`NEUR_3_2` AS `NEUR_3_2`, `OL_BA`.`NEUR_3_3` AS `NEUR_3_3`, `OL_BA`.`NEUR_3_4` AS `NEUR_3_4` 
FROM `OL_BA`), 
orig_cte AS 
(SELECT `OL_softmax`.`KEY` AS `KEY`, `OL_softmax`.`NEUR_3_1` AS `Score_0`, `OL_softmax`.`NEUR_3_2` AS `Score_1`, `OL_softmax`.`NEUR_3_3` AS `Score_2`, `OL_softmax`.`NEUR_3_4` AS `Score_3`, NULL AS `Proba_0`, NULL AS `Proba_1`, NULL AS `Proba_2`, NULL AS `Proba_3`, NULL AS `LogProba_0`, NULL AS `LogProba_1`, NULL AS `LogProba_2`, NULL AS `LogProba_3`, CAST(NULL AS SIGNED INTEGER) AS `Decision`, NULL AS `DecisionProba` 
FROM `OL_softmax`), 
score_class_union AS 
(SELECT scu.`KEY_u` AS `KEY_u`, scu.class AS class, scu.`LogProba` AS `LogProba`, scu.`Proba` AS `Proba`, scu.`Score` AS `Score` 
FROM (SELECT orig_cte.`KEY` AS `KEY_u`, 0 AS class, orig_cte.`LogProba_0` AS `LogProba`, orig_cte.`Proba_0` AS `Proba`, orig_cte.`Score_0` AS `Score` 
FROM orig_cte UNION ALL SELECT orig_cte.`KEY` AS `KEY_u`, 1 AS class, orig_cte.`LogProba_1` AS `LogProba`, orig_cte.`Proba_1` AS `Proba`, orig_cte.`Score_1` AS `Score` 
FROM orig_cte UNION ALL SELECT orig_cte.`KEY` AS `KEY_u`, 2 AS class, orig_cte.`LogProba_2` AS `LogProba`, orig_cte.`Proba_2` AS `Proba`, orig_cte.`Score_2` AS `Score` 
FROM orig_cte UNION ALL SELECT orig_cte.`KEY` AS `KEY_u`, 3 AS class, orig_cte.`LogProba_3` AS `LogProba`, orig_cte.`Proba_3` AS `Proba`, orig_cte.`Score_3` AS `Score` 
FROM orig_cte) AS scu), 
score_max AS 
(SELECT orig_cte.`KEY` AS `KEY`, orig_cte.`Score_0` AS `Score_0`, orig_cte.`Score_1` AS `Score_1`, orig_cte.`Score_2` AS `Score_2`, orig_cte.`Score_3` AS `Score_3`, orig_cte.`Proba_0` AS `Proba_0`, orig_cte.`Proba_1` AS `Proba_1`, orig_cte.`Proba_2` AS `Proba_2`, orig_cte.`Proba_3` AS `Proba_3`, orig_cte.`LogProba_0` AS `LogProba_0`, orig_cte.`LogProba_1` AS `LogProba_1`, orig_cte.`LogProba_2` AS `LogProba_2`, orig_cte.`LogProba_3` AS `LogProba_3`, orig_cte.`Decision` AS `Decision`, orig_cte.`DecisionProba` AS `DecisionProba`, max_select.`KEY_m` AS `KEY_m`, max_select.`max_Score` AS `max_Score` 
FROM orig_cte LEFT OUTER JOIN (SELECT score_class_union.`KEY_u` AS `KEY_m`, max(score_class_union.`Score`) AS `max_Score` 
FROM score_class_union GROUP BY score_class_union.`KEY_u`) AS max_select ON orig_cte.`KEY` = max_select.`KEY_m`), 
score_soft_max_deltas AS 
(SELECT score_max.`KEY` AS `KEY`, score_max.`Score_0` AS `Score_0`, score_max.`Score_1` AS `Score_1`, score_max.`Score_2` AS `Score_2`, score_max.`Score_3` AS `Score_3`, score_max.`Proba_0` AS `Proba_0`, score_max.`Proba_1` AS `Proba_1`, score_max.`Proba_2` AS `Proba_2`, score_max.`Proba_3` AS `Proba_3`, score_max.`LogProba_0` AS `LogProba_0`, score_max.`LogProba_1` AS `LogProba_1`, score_max.`LogProba_2` AS `LogProba_2`, score_max.`LogProba_3` AS `LogProba_3`, score_max.`Decision` AS `Decision`, score_max.`DecisionProba` AS `DecisionProba`, score_max.`KEY_m` AS `KEY_m`, score_max.`max_Score` AS `max_Score`, exp(score_max.`Score_0` - score_max.`max_Score`) AS `exp_delta_Score_0`, exp(score_max.`Score_1` - score_max.`max_Score`) AS `exp_delta_Score_1`, exp(score_max.`Score_2` - score_max.`max_Score`) AS `exp_delta_Score_2`, exp(score_max.`Score_3` - score_max.`max_Score`) AS `exp_delta_Score_3` 
FROM score_max), 
score_class_union_soft AS 
(SELECT soft_scu.`KEY` AS `KEY`, soft_scu.class AS class, soft_scu.`exp_delta_Score` AS `exp_delta_Score` 
FROM (SELECT score_soft_max_deltas.`KEY` AS `KEY`, 0 AS class, score_soft_max_deltas.`exp_delta_Score_0` AS `exp_delta_Score` 
FROM score_soft_max_deltas UNION ALL SELECT score_soft_max_deltas.`KEY` AS `KEY`, 1 AS class, score_soft_max_deltas.`exp_delta_Score_1` AS `exp_delta_Score` 
FROM score_soft_max_deltas UNION ALL SELECT score_soft_max_deltas.`KEY` AS `KEY`, 2 AS class, score_soft_max_deltas.`exp_delta_Score_2` AS `exp_delta_Score` 
FROM score_soft_max_deltas UNION ALL SELECT score_soft_max_deltas.`KEY` AS `KEY`, 3 AS class, score_soft_max_deltas.`exp_delta_Score_3` AS `exp_delta_Score` 
FROM score_soft_max_deltas) AS soft_scu), 
score_soft_max AS 
(SELECT score_soft_max_deltas.`KEY` AS `KEY`, score_soft_max_deltas.`Score_0` AS `Score_0`, score_soft_max_deltas.`Score_1` AS `Score_1`, score_soft_max_deltas.`Score_2` AS `Score_2`, score_soft_max_deltas.`Score_3` AS `Score_3`, score_soft_max_deltas.`Proba_0` AS `Proba_0`, score_soft_max_deltas.`Proba_1` AS `Proba_1`, score_soft_max_deltas.`Proba_2` AS `Proba_2`, score_soft_max_deltas.`Proba_3` AS `Proba_3`, score_soft_max_deltas.`LogProba_0` AS `LogProba_0`, score_soft_max_deltas.`LogProba_1` AS `LogProba_1`, score_soft_max_deltas.`LogProba_2` AS `LogProba_2`, score_soft_max_deltas.`LogProba_3` AS `LogProba_3`, score_soft_max_deltas.`Decision` AS `Decision`, score_soft_max_deltas.`DecisionProba` AS `DecisionProba`, score_soft_max_deltas.`KEY_m` AS `KEY_m`, score_soft_max_deltas.`max_Score` AS `max_Score`, score_soft_max_deltas.`exp_delta_Score_0` AS `exp_delta_Score_0`, score_soft_max_deltas.`exp_delta_Score_1` AS `exp_delta_Score_1`, score_soft_max_deltas.`exp_delta_Score_2` AS `exp_delta_Score_2`, score_soft_max_deltas.`exp_delta_Score_3` AS `exp_delta_Score_3`, sum_exp_t.`KEY_sum` AS `KEY_sum`, sum_exp_t.`sum_ExpDeltaScore` AS `sum_ExpDeltaScore` 
FROM score_soft_max_deltas LEFT OUTER JOIN (SELECT score_class_union_soft.`KEY` AS `KEY_sum`, sum(score_class_union_soft.`exp_delta_Score`) AS `sum_ExpDeltaScore` 
FROM score_class_union_soft GROUP BY score_class_union_soft.`KEY`) AS sum_exp_t ON score_soft_max_deltas.`KEY` = sum_exp_t.`KEY_sum`), 
union_with_max AS 
(SELECT score_class_union.`KEY_u` AS `KEY_u`, score_class_union.class AS class, score_class_union.`LogProba` AS `LogProba`, score_class_union.`Proba` AS `Proba`, score_class_union.`Score` AS `Score`, score_soft_max.`KEY` AS `KEY`, score_soft_max.`Score_0` AS `Score_0`, score_soft_max.`Score_1` AS `Score_1`, score_soft_max.`Score_2` AS `Score_2`, score_soft_max.`Score_3` AS `Score_3`, score_soft_max.`Proba_0` AS `Proba_0`, score_soft_max.`Proba_1` AS `Proba_1`, score_soft_max.`Proba_2` AS `Proba_2`, score_soft_max.`Proba_3` AS `Proba_3`, score_soft_max.`LogProba_0` AS `LogProba_0`, score_soft_max.`LogProba_1` AS `LogProba_1`, score_soft_max.`LogProba_2` AS `LogProba_2`, score_soft_max.`LogProba_3` AS `LogProba_3`, score_soft_max.`Decision` AS `Decision`, score_soft_max.`DecisionProba` AS `DecisionProba`, score_soft_max.`KEY_m` AS `KEY_m`, score_soft_max.`max_Score` AS `max_Score`, score_soft_max.`exp_delta_Score_0` AS `exp_delta_Score_0`, score_soft_max.`exp_delta_Score_1` AS `exp_delta_Score_1`, score_soft_max.`exp_delta_Score_2` AS `exp_delta_Score_2`, score_soft_max.`exp_delta_Score_3` AS `exp_delta_Score_3`, score_soft_max.`KEY_sum` AS `KEY_sum`, score_soft_max.`sum_ExpDeltaScore` AS `sum_ExpDeltaScore` 
FROM score_class_union LEFT OUTER JOIN score_soft_max ON score_class_union.`KEY_u` = score_soft_max.`KEY`), 
arg_max_cte AS 
(SELECT score_soft_max.`KEY` AS `KEY`, score_soft_max.`Score_0` AS `Score_0`, score_soft_max.`Score_1` AS `Score_1`, score_soft_max.`Score_2` AS `Score_2`, score_soft_max.`Score_3` AS `Score_3`, score_soft_max.`Proba_0` AS `Proba_0`, score_soft_max.`Proba_1` AS `Proba_1`, score_soft_max.`Proba_2` AS `Proba_2`, score_soft_max.`Proba_3` AS `Proba_3`, score_soft_max.`LogProba_0` AS `LogProba_0`, score_soft_max.`LogProba_1` AS `LogProba_1`, score_soft_max.`LogProba_2` AS `LogProba_2`, score_soft_max.`LogProba_3` AS `LogProba_3`, score_soft_max.`Decision` AS `Decision`, score_soft_max.`DecisionProba` AS `DecisionProba`, score_soft_max.`KEY_m` AS `KEY_m`, score_soft_max.`max_Score` AS `max_Score`, score_soft_max.`exp_delta_Score_0` AS `exp_delta_Score_0`, score_soft_max.`exp_delta_Score_1` AS `exp_delta_Score_1`, score_soft_max.`exp_delta_Score_2` AS `exp_delta_Score_2`, score_soft_max.`exp_delta_Score_3` AS `exp_delta_Score_3`, score_soft_max.`KEY_sum` AS `KEY_sum`, score_soft_max.`sum_ExpDeltaScore` AS `sum_ExpDeltaScore`, `arg_max_t_Score`.`KEY_Score` AS `KEY_Score`, `arg_max_t_Score`.`arg_max_Score` AS `arg_max_Score`, soft_max_comp.`KEY_softmax` AS `KEY_softmax`, soft_max_comp.`SoftProba_0` AS `SoftProba_0`, soft_max_comp.`SoftProba_1` AS `SoftProba_1`, soft_max_comp.`SoftProba_2` AS `SoftProba_2`, soft_max_comp.`SoftProba_3` AS `SoftProba_3` 
FROM score_soft_max LEFT OUTER JOIN (SELECT union_with_max.`KEY` AS `KEY_Score`, min(union_with_max.class) AS `arg_max_Score` 
FROM union_with_max 
WHERE union_with_max.`max_Score` <= union_with_max.`Score` GROUP BY union_with_max.`KEY`) AS `arg_max_t_Score` ON score_soft_max.`KEY` = `arg_max_t_Score`.`KEY_Score` LEFT OUTER JOIN (SELECT score_soft_max.`KEY` AS `KEY_softmax`, score_soft_max.`exp_delta_Score_0` / score_soft_max.`sum_ExpDeltaScore` AS `SoftProba_0`, score_soft_max.`exp_delta_Score_1` / score_soft_max.`sum_ExpDeltaScore` AS `SoftProba_1`, score_soft_max.`exp_delta_Score_2` / score_soft_max.`sum_ExpDeltaScore` AS `SoftProba_2`, score_soft_max.`exp_delta_Score_3` / score_soft_max.`sum_ExpDeltaScore` AS `SoftProba_3` 
FROM score_soft_max) AS soft_max_comp ON soft_max_comp.`KEY_softmax` = `arg_max_t_Score`.`KEY_Score`)
 SELECT arg_max_cte.`KEY` AS `KEY`, NULL AS `Score_0`, NULL AS `Score_1`, NULL AS `Score_2`, NULL AS `Score_3`, arg_max_cte.`SoftProba_0` AS `Proba_0`, arg_max_cte.`SoftProba_1` AS `Proba_1`, arg_max_cte.`SoftProba_2` AS `Proba_2`, arg_max_cte.`SoftProba_3` AS `Proba_3`, CASE WHEN (arg_max_cte.`SoftProba_0` IS NULL OR arg_max_cte.`SoftProba_0` > 0.0) THEN ln(arg_max_cte.`SoftProba_0`) ELSE -1.79769313486231e+308 END AS `LogProba_0`, CASE WHEN (arg_max_cte.`SoftProba_1` IS NULL OR arg_max_cte.`SoftProba_1` > 0.0) THEN ln(arg_max_cte.`SoftProba_1`) ELSE -1.79769313486231e+308 END AS `LogProba_1`, CASE WHEN (arg_max_cte.`SoftProba_2` IS NULL OR arg_max_cte.`SoftProba_2` > 0.0) THEN ln(arg_max_cte.`SoftProba_2`) ELSE -1.79769313486231e+308 END AS `LogProba_2`, CASE WHEN (arg_max_cte.`SoftProba_3` IS NULL OR arg_max_cte.`SoftProba_3` > 0.0) THEN ln(arg_max_cte.`SoftProba_3`) ELSE -1.79769313486231e+308 END AS `LogProba_3`, arg_max_cte.`arg_max_Score` AS `Decision`, CASE WHEN (arg_max_cte.`SoftProba_0` <= CASE WHEN (arg_max_cte.`SoftProba_1` <= CASE WHEN (arg_max_cte.`SoftProba_2` <= arg_max_cte.`SoftProba_3`) THEN arg_max_cte.`SoftProba_3` ELSE arg_max_cte.`SoftProba_2` END) THEN CASE WHEN (arg_max_cte.`SoftProba_2` <= arg_max_cte.`SoftProba_3`) THEN arg_max_cte.`SoftProba_3` ELSE arg_max_cte.`SoftProba_2` END ELSE arg_max_cte.`SoftProba_1` END) THEN CASE WHEN (arg_max_cte.`SoftProba_1` <= CASE WHEN (arg_max_cte.`SoftProba_2` <= arg_max_cte.`SoftProba_3`) THEN arg_max_cte.`SoftProba_3` ELSE arg_max_cte.`SoftProba_2` END) THEN CASE WHEN (arg_max_cte.`SoftProba_2` <= arg_max_cte.`SoftProba_3`) THEN arg_max_cte.`SoftProba_3` ELSE arg_max_cte.`SoftProba_2` END ELSE arg_max_cte.`SoftProba_1` END ELSE arg_max_cte.`SoftProba_0` END AS `DecisionProba` 
FROM arg_max_cte