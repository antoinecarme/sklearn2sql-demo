-- This SQL code was generated by scikit2sql (development version).
-- Copyright 2017

WITH `ADS_imp_1_OUT` AS 
(SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_0` IS NULL) THEN -0.0166601472776 ELSE `ADS`.`Feature_0` END AS impter_2, CASE WHEN (`ADS`.`Feature_1` IS NULL) THEN 0.516272913818 ELSE `ADS`.`Feature_1` END AS impter_3, CASE WHEN (`ADS`.`Feature_2` IS NULL) THEN 0.045854831728 ELSE `ADS`.`Feature_2` END AS impter_4, CASE WHEN (`ADS`.`Feature_3` IS NULL) THEN 0.393876252945 ELSE `ADS`.`Feature_3` END AS impter_5, CASE WHEN (`ADS`.`Feature_4` IS NULL) THEN -0.480683431081 ELSE `ADS`.`Feature_4` END AS impter_6, CASE WHEN (`ADS`.`Feature_5` IS NULL) THEN -0.0754525765206 ELSE `ADS`.`Feature_5` END AS impter_7, CASE WHEN (`ADS`.`Feature_6` IS NULL) THEN -0.116142518808 ELSE `ADS`.`Feature_6` END AS impter_8, CASE WHEN (`ADS`.`Feature_7` IS NULL) THEN -0.397193027446 ELSE `ADS`.`Feature_7` END AS impter_9, CASE WHEN (`ADS`.`Feature_8` IS NULL) THEN 0.289223217606 ELSE `ADS`.`Feature_8` END AS impter_10, CASE WHEN (`ADS`.`Feature_9` IS NULL) THEN 0.0715919221158 ELSE `ADS`.`Feature_9` END AS impter_11 
FROM `FourClass_10` AS `ADS`), 
`ADS_sca_2_OUT` AS 
(SELECT `ADS_imp_1_OUT`.`KEY` AS `KEY`, (CAST(`ADS_imp_1_OUT`.impter_2 AS DOUBLE) - -0.0166601472776) / 1.04538177897 AS scaler_2, (CAST(`ADS_imp_1_OUT`.impter_3 AS DOUBLE) - 0.516272913818) / 1.31450310589 AS scaler_3, (CAST(`ADS_imp_1_OUT`.impter_4 AS DOUBLE) - 0.045854831728) / 1.56219218195 AS scaler_4, (CAST(`ADS_imp_1_OUT`.impter_5 AS DOUBLE) - 0.393876252945) / 2.3960998534 AS scaler_5, (CAST(`ADS_imp_1_OUT`.impter_6 AS DOUBLE) - -0.480683431081) / 1.20344059845 AS scaler_6, (CAST(`ADS_imp_1_OUT`.impter_7 AS DOUBLE) - -0.0754525765206) / 0.838068867257 AS scaler_7, (CAST(`ADS_imp_1_OUT`.impter_8 AS DOUBLE) - -0.116142518808) / 1.05306709377 AS scaler_8, (CAST(`ADS_imp_1_OUT`.impter_9 AS DOUBLE) - -0.397193027446) / 1.78314721805 AS scaler_9, (CAST(`ADS_imp_1_OUT`.impter_10 AS DOUBLE) - 0.289223217606) / 0.92879323246 AS scaler_10, (CAST(`ADS_imp_1_OUT`.impter_11 AS DOUBLE) - 0.0715919221158) / 0.976280049427 AS scaler_11 
FROM `ADS_imp_1_OUT`), 
`DT_node_lookup` AS 
(SELECT `ADS_sca_2_OUT`.`KEY` AS `KEY`, CASE WHEN (`ADS_sca_2_OUT`.scaler_5 <= -0.9666231870651245) THEN 1 ELSE CASE WHEN (`ADS_sca_2_OUT`.scaler_9 <= -0.4246441721916199) THEN 3 ELSE CASE WHEN (`ADS_sca_2_OUT`.scaler_5 <= 0.20080628991127014) THEN 5 ELSE CASE WHEN (`ADS_sca_2_OUT`.scaler_11 <= -0.059681810438632965) THEN CASE WHEN (`ADS_sca_2_OUT`.scaler_3 <= 1.3563446998596191) THEN 8 ELSE 9 END ELSE CASE WHEN (`ADS_sca_2_OUT`.scaler_4 <= 1.7347118854522705) THEN 11 ELSE 12 END END END END END AS node_id_2 
FROM `ADS_sca_2_OUT`), 
`DT_node_data` AS 
(SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Proba_0.0` AS `Proba_0.0`, `Values`.`LogProba_0.0` AS `LogProba_0.0`, `Values`.`Proba_1.0` AS `Proba_1.0`, `Values`.`LogProba_1.0` AS `LogProba_1.0`, `Values`.`Proba_2.0` AS `Proba_2.0`, `Values`.`LogProba_2.0` AS `LogProba_2.0`, `Values`.`Proba_3.0` AS `Proba_3.0`, `Values`.`LogProba_3.0` AS `LogProba_3.0`, `Values`.`Decision` AS `Decision`, `Values`.`DecisionProba` AS `DecisionProba` 
FROM (SELECT 0 AS node_id, 'scaler_5' AS feature, -0.9666231870651245 AS threshold, 15 AS count, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.2 AS `Proba_0.0`, -1.60943791243 AS `LogProba_0.0`, 0.2 AS `Proba_1.0`, -1.60943791243 AS `LogProba_1.0`, 0.2 AS `Proba_2.0`, -1.60943791243 AS `LogProba_2.0`, 0.4 AS `Proba_3.0`, -0.916290731874 AS `LogProba_3.0`, 3 AS `Decision`, 0.4 AS `DecisionProba` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS count, 1 AS depth, 0 AS parent_id, 0.0 AS `Proba_0.0`, -1.79769313486231e+308 AS `LogProba_0.0`, 0.0 AS `Proba_1.0`, -1.79769313486231e+308 AS `LogProba_1.0`, 1.0 AS `Proba_2.0`, 0.0 AS `LogProba_2.0`, 0.0 AS `Proba_3.0`, -1.79769313486231e+308 AS `LogProba_3.0`, 2 AS `Decision`, 1.0 AS `DecisionProba` UNION ALL SELECT 2 AS node_id, 'scaler_9' AS feature, -0.4246441721916199 AS threshold, 13 AS count, 1 AS depth, 0 AS parent_id, 0.25 AS `Proba_0.0`, -1.38629436112 AS `LogProba_0.0`, 0.25 AS `Proba_1.0`, -1.38629436112 AS `LogProba_1.0`, 0.0 AS `Proba_2.0`, -1.79769313486231e+308 AS `LogProba_2.0`, 0.5 AS `Proba_3.0`, -0.69314718056 AS `LogProba_3.0`, 3 AS `Decision`, 0.5 AS `DecisionProba` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS count, 2 AS depth, 2 AS parent_id, 0.0 AS `Proba_0.0`, -1.79769313486231e+308 AS `LogProba_0.0`, 0.0 AS `Proba_1.0`, -1.79769313486231e+308 AS `LogProba_1.0`, 0.0 AS `Proba_2.0`, -1.79769313486231e+308 AS `LogProba_2.0`, 1.0 AS `Proba_3.0`, 0.0 AS `LogProba_3.0`, 3 AS `Decision`, 1.0 AS `DecisionProba` UNION ALL SELECT 4 AS node_id, 'scaler_5' AS feature, 0.20080628991127014 AS threshold, 10 AS count, 2 AS depth, 2 AS parent_id, 0.35714285714285715 AS `Proba_0.0`, -1.02961941718 AS `LogProba_0.0`, 0.35714285714285715 AS `Proba_1.0`, -1.02961941718 AS `LogProba_1.0`, 0.0 AS `Proba_2.0`, -1.79769313486231e+308 AS `LogProba_2.0`, 0.2857142857142857 AS `Proba_3.0`, -1.2527629685 AS `LogProba_3.0`, 0 AS `Decision`, 0.357142857143 AS `DecisionProba` UNION ALL SELECT 5 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS count, 3 AS depth, 4 AS parent_id, 1.0 AS `Proba_0.0`, 0.0 AS `LogProba_0.0`, 0.0 AS `Proba_1.0`, -1.79769313486231e+308 AS `LogProba_1.0`, 0.0 AS `Proba_2.0`, -1.79769313486231e+308 AS `LogProba_2.0`, 0.0 AS `Proba_3.0`, -1.79769313486231e+308 AS `LogProba_3.0`, 0 AS `Decision`, 1.0 AS `DecisionProba` UNION ALL SELECT 6 AS node_id, 'scaler_11' AS feature, -0.059681810438632965 AS threshold, 7 AS count, 3 AS depth, 4 AS parent_id, 0.0 AS `Proba_0.0`, -1.79769313486231e+308 AS `LogProba_0.0`, 0.5555555555555556 AS `Proba_1.0`, -0.587786664902 AS `LogProba_1.0`, 0.0 AS `Proba_2.0`, -1.79769313486231e+308 AS `LogProba_2.0`, 0.4444444444444444 AS `Proba_3.0`, -0.810930216216 AS `LogProba_3.0`, 1 AS `Decision`, 0.555555555556 AS `DecisionProba` UNION ALL SELECT 7 AS node_id, 'scaler_3' AS feature, 1.3563446998596191 AS threshold, 4 AS count, 4 AS depth, 6 AS parent_id, 0.0 AS `Proba_0.0`, -1.79769313486231e+308 AS `LogProba_0.0`, 0.8 AS `Proba_1.0`, -0.223143551314 AS `LogProba_1.0`, 0.0 AS `Proba_2.0`, -1.79769313486231e+308 AS `LogProba_2.0`, 0.2 AS `Proba_3.0`, -1.60943791243 AS `LogProba_3.0`, 1 AS `Decision`, 0.8 AS `DecisionProba` UNION ALL SELECT 8 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS count, 5 AS depth, 7 AS parent_id, 0.0 AS `Proba_0.0`, -1.79769313486231e+308 AS `LogProba_0.0`, 1.0 AS `Proba_1.0`, 0.0 AS `LogProba_1.0`, 0.0 AS `Proba_2.0`, -1.79769313486231e+308 AS `LogProba_2.0`, 0.0 AS `Proba_3.0`, -1.79769313486231e+308 AS `LogProba_3.0`, 1 AS `Decision`, 1.0 AS `DecisionProba` UNION ALL SELECT 9 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS count, 5 AS depth, 7 AS parent_id, 0.0 AS `Proba_0.0`, -1.79769313486231e+308 AS `LogProba_0.0`, 0.0 AS `Proba_1.0`, -1.79769313486231e+308 AS `LogProba_1.0`, 0.0 AS `Proba_2.0`, -1.79769313486231e+308 AS `LogProba_2.0`, 1.0 AS `Proba_3.0`, 0.0 AS `LogProba_3.0`, 3 AS `Decision`, 1.0 AS `DecisionProba` UNION ALL SELECT 10 AS node_id, 'scaler_4' AS feature, 1.7347118854522705 AS threshold, 3 AS count, 4 AS depth, 6 AS parent_id, 0.0 AS `Proba_0.0`, -1.79769313486231e+308 AS `LogProba_0.0`, 0.25 AS `Proba_1.0`, -1.38629436112 AS `LogProba_1.0`, 0.0 AS `Proba_2.0`, -1.79769313486231e+308 AS `LogProba_2.0`, 0.75 AS `Proba_3.0`, -0.287682072452 AS `LogProba_3.0`, 3 AS `Decision`, 0.75 AS `DecisionProba` UNION ALL SELECT 11 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS count, 5 AS depth, 10 AS parent_id, 0.0 AS `Proba_0.0`, -1.79769313486231e+308 AS `LogProba_0.0`, 0.0 AS `Proba_1.0`, -1.79769313486231e+308 AS `LogProba_1.0`, 0.0 AS `Proba_2.0`, -1.79769313486231e+308 AS `LogProba_2.0`, 1.0 AS `Proba_3.0`, 0.0 AS `LogProba_3.0`, 3 AS `Decision`, 1.0 AS `DecisionProba` UNION ALL SELECT 12 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS count, 5 AS depth, 10 AS parent_id, 0.0 AS `Proba_0.0`, -1.79769313486231e+308 AS `LogProba_0.0`, 1.0 AS `Proba_1.0`, 0.0 AS `LogProba_1.0`, 0.0 AS `Proba_2.0`, -1.79769313486231e+308 AS `LogProba_2.0`, 0.0 AS `Proba_3.0`, -1.79769313486231e+308 AS `LogProba_3.0`, 1 AS `Decision`, 1.0 AS `DecisionProba`) AS `Values`), 
`DT_Output` AS 
(SELECT `DT_node_lookup`.`KEY` AS `KEY`, `DT_node_lookup`.node_id_2 AS node_id_2, `DT_node_data`.node_id AS node_id, `DT_node_data`.feature AS feature, `DT_node_data`.threshold AS threshold, `DT_node_data`.count AS count, `DT_node_data`.depth AS depth, `DT_node_data`.parent_id AS parent_id, `DT_node_data`.`Proba_0.0` AS `Proba_0.0`, `DT_node_data`.`LogProba_0.0` AS `LogProba_0.0`, `DT_node_data`.`Proba_1.0` AS `Proba_1.0`, `DT_node_data`.`LogProba_1.0` AS `LogProba_1.0`, `DT_node_data`.`Proba_2.0` AS `Proba_2.0`, `DT_node_data`.`LogProba_2.0` AS `LogProba_2.0`, `DT_node_data`.`Proba_3.0` AS `Proba_3.0`, `DT_node_data`.`LogProba_3.0` AS `LogProba_3.0`, `DT_node_data`.`Decision` AS `Decision`, `DT_node_data`.`DecisionProba` AS `DecisionProba` 
FROM `DT_node_lookup` LEFT OUTER JOIN `DT_node_data` ON `DT_node_lookup`.node_id_2 = `DT_node_data`.node_id), 
`RF_Tree_0` AS 
(SELECT `DT_Output`.`KEY` AS `KEY`, NULL AS `Score_0`, `DT_Output`.`Proba_0.0` AS `Proba_0`, `DT_Output`.`LogProba_0.0` AS `LogProba_0`, NULL AS `Score_1`, `DT_Output`.`Proba_1.0` AS `Proba_1`, `DT_Output`.`LogProba_1.0` AS `LogProba_1`, NULL AS `Score_2`, `DT_Output`.`Proba_2.0` AS `Proba_2`, `DT_Output`.`LogProba_2.0` AS `LogProba_2`, NULL AS `Score_3`, `DT_Output`.`Proba_3.0` AS `Proba_3`, `DT_Output`.`LogProba_3.0` AS `LogProba_3` 
FROM `DT_Output`), 
`DT_node_lookup_1` AS 
(SELECT `ADS_sca_2_OUT`.`KEY` AS `KEY`, CASE WHEN (`ADS_sca_2_OUT`.scaler_4 <= 0.936489462852478) THEN CASE WHEN (`ADS_sca_2_OUT`.scaler_5 <= -0.22610318660736084) THEN CASE WHEN (`ADS_sca_2_OUT`.scaler_7 <= 0.05939260125160217) THEN 3 ELSE 4 END ELSE CASE WHEN (`ADS_sca_2_OUT`.scaler_10 <= -0.8330446481704712) THEN CASE WHEN (`ADS_sca_2_OUT`.scaler_6 <= -0.5352433919906616) THEN 7 ELSE CASE WHEN (`ADS_sca_2_OUT`.scaler_8 <= -0.5040141344070435) THEN 9 ELSE 10 END END ELSE 11 END END ELSE CASE WHEN (`ADS_sca_2_OUT`.scaler_2 <= -0.28399658203125) THEN 13 ELSE CASE WHEN (`ADS_sca_2_OUT`.scaler_3 <= 1.3563446998596191) THEN 15 ELSE 16 END END END AS node_id_2 
FROM `ADS_sca_2_OUT`), 
`DT_node_data_1` AS 
(SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Proba_0.0` AS `Proba_0.0`, `Values`.`LogProba_0.0` AS `LogProba_0.0`, `Values`.`Proba_1.0` AS `Proba_1.0`, `Values`.`LogProba_1.0` AS `LogProba_1.0`, `Values`.`Proba_2.0` AS `Proba_2.0`, `Values`.`LogProba_2.0` AS `LogProba_2.0`, `Values`.`Proba_3.0` AS `Proba_3.0`, `Values`.`LogProba_3.0` AS `LogProba_3.0`, `Values`.`Decision` AS `Decision`, `Values`.`DecisionProba` AS `DecisionProba` 
FROM (SELECT 0 AS node_id, 'scaler_4' AS feature, 0.936489462852478 AS threshold, 16 AS count, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.32 AS `Proba_0.0`, -1.13943428319 AS `LogProba_0.0`, 0.24 AS `Proba_1.0`, -1.42711635564 AS `LogProba_1.0`, 0.12 AS `Proba_2.0`, -2.1202635362 AS `LogProba_2.0`, 0.32 AS `Proba_3.0`, -1.13943428319 AS `LogProba_3.0`, 0 AS `Decision`, 0.32 AS `DecisionProba` UNION ALL SELECT 1 AS node_id, 'scaler_5' AS feature, -0.22610318660736084 AS threshold, 12 AS count, 1 AS depth, 0 AS parent_id, 0.42105263157894735 AS `Proba_0.0`, -0.864997437487 AS `LogProba_0.0`, 0.05263157894736842 AS `Proba_1.0`, -2.94443897917 AS `LogProba_1.0`, 0.15789473684210525 AS `Proba_2.0`, -1.8458266905 AS `LogProba_2.0`, 0.3684210526315789 AS `Proba_3.0`, -0.998528830111 AS `LogProba_3.0`, 0 AS `Decision`, 0.421052631579 AS `DecisionProba` UNION ALL SELECT 2 AS node_id, 'scaler_7' AS feature, 0.05939260125160217 AS threshold, 6 AS count, 2 AS depth, 1 AS parent_id, 0.7 AS `Proba_0.0`, -0.356674943939 AS `LogProba_0.0`, 0.0 AS `Proba_1.0`, -1.79769313486231e+308 AS `LogProba_1.0`, 0.3 AS `Proba_2.0`, -1.20397280433 AS `LogProba_2.0`, 0.0 AS `Proba_3.0`, -1.79769313486231e+308 AS `LogProba_3.0`, 0 AS `Decision`, 0.7 AS `DecisionProba` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS count, 3 AS depth, 2 AS parent_id, 1.0 AS `Proba_0.0`, 0.0 AS `LogProba_0.0`, 0.0 AS `Proba_1.0`, -1.79769313486231e+308 AS `LogProba_1.0`, 0.0 AS `Proba_2.0`, -1.79769313486231e+308 AS `LogProba_2.0`, 0.0 AS `Proba_3.0`, -1.79769313486231e+308 AS `LogProba_3.0`, 0 AS `Decision`, 1.0 AS `DecisionProba` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS count, 3 AS depth, 2 AS parent_id, 0.0 AS `Proba_0.0`, -1.79769313486231e+308 AS `LogProba_0.0`, 0.0 AS `Proba_1.0`, -1.79769313486231e+308 AS `LogProba_1.0`, 1.0 AS `Proba_2.0`, 0.0 AS `LogProba_2.0`, 0.0 AS `Proba_3.0`, -1.79769313486231e+308 AS `LogProba_3.0`, 2 AS `Decision`, 1.0 AS `DecisionProba` UNION ALL SELECT 5 AS node_id, 'scaler_10' AS feature, -0.8330446481704712 AS threshold, 6 AS count, 2 AS depth, 1 AS parent_id, 0.1111111111111111 AS `Proba_0.0`, -2.19722457734 AS `LogProba_0.0`, 0.1111111111111111 AS `Proba_1.0`, -2.19722457734 AS `LogProba_1.0`, 0.0 AS `Proba_2.0`, -1.79769313486231e+308 AS `LogProba_2.0`, 0.7777777777777778 AS `Proba_3.0`, -0.251314428281 AS `LogProba_3.0`, 3 AS `Decision`, 0.777777777778 AS `DecisionProba` UNION ALL SELECT 6 AS node_id, 'scaler_6' AS feature, -0.5352433919906616 AS threshold, 4 AS count, 3 AS depth, 5 AS parent_id, 0.25 AS `Proba_0.0`, -1.38629436112 AS `LogProba_0.0`, 0.25 AS `Proba_1.0`, -1.38629436112 AS `LogProba_1.0`, 0.0 AS `Proba_2.0`, -1.79769313486231e+308 AS `LogProba_2.0`, 0.5 AS `Proba_3.0`, -0.69314718056 AS `LogProba_3.0`, 3 AS `Decision`, 0.5 AS `DecisionProba` UNION ALL SELECT 7 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS count, 4 AS depth, 6 AS parent_id, 0.0 AS `Proba_0.0`, -1.79769313486231e+308 AS `LogProba_0.0`, 0.0 AS `Proba_1.0`, -1.79769313486231e+308 AS `LogProba_1.0`, 0.0 AS `Proba_2.0`, -1.79769313486231e+308 AS `LogProba_2.0`, 1.0 AS `Proba_3.0`, 0.0 AS `LogProba_3.0`, 3 AS `Decision`, 1.0 AS `DecisionProba` UNION ALL SELECT 8 AS node_id, 'scaler_8' AS feature, -0.5040141344070435 AS threshold, 2 AS count, 4 AS depth, 6 AS parent_id, 0.5 AS `Proba_0.0`, -0.69314718056 AS `LogProba_0.0`, 0.5 AS `Proba_1.0`, -0.69314718056 AS `LogProba_1.0`, 0.0 AS `Proba_2.0`, -1.79769313486231e+308 AS `LogProba_2.0`, 0.0 AS `Proba_3.0`, -1.79769313486231e+308 AS `LogProba_3.0`, 0 AS `Decision`, 0.5 AS `DecisionProba` UNION ALL SELECT 9 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS count, 5 AS depth, 8 AS parent_id, 1.0 AS `Proba_0.0`, 0.0 AS `LogProba_0.0`, 0.0 AS `Proba_1.0`, -1.79769313486231e+308 AS `LogProba_1.0`, 0.0 AS `Proba_2.0`, -1.79769313486231e+308 AS `LogProba_2.0`, 0.0 AS `Proba_3.0`, -1.79769313486231e+308 AS `LogProba_3.0`, 0 AS `Decision`, 1.0 AS `DecisionProba` UNION ALL SELECT 10 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS count, 5 AS depth, 8 AS parent_id, 0.0 AS `Proba_0.0`, -1.79769313486231e+308 AS `LogProba_0.0`, 1.0 AS `Proba_1.0`, 0.0 AS `LogProba_1.0`, 0.0 AS `Proba_2.0`, -1.79769313486231e+308 AS `LogProba_2.0`, 0.0 AS `Proba_3.0`, -1.79769313486231e+308 AS `LogProba_3.0`, 1 AS `Decision`, 1.0 AS `DecisionProba` UNION ALL SELECT 11 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS count, 3 AS depth, 5 AS parent_id, 0.0 AS `Proba_0.0`, -1.79769313486231e+308 AS `LogProba_0.0`, 0.0 AS `Proba_1.0`, -1.79769313486231e+308 AS `LogProba_1.0`, 0.0 AS `Proba_2.0`, -1.79769313486231e+308 AS `LogProba_2.0`, 1.0 AS `Proba_3.0`, 0.0 AS `LogProba_3.0`, 3 AS `Decision`, 1.0 AS `DecisionProba` UNION ALL SELECT 12 AS node_id, 'scaler_2' AS feature, -0.28399658203125 AS threshold, 4 AS count, 1 AS depth, 0 AS parent_id, 0.0 AS `Proba_0.0`, -1.79769313486231e+308 AS `LogProba_0.0`, 0.8333333333333334 AS `Proba_1.0`, -0.182321556794 AS `LogProba_1.0`, 0.0 AS `Proba_2.0`, -1.79769313486231e+308 AS `LogProba_2.0`, 0.16666666666666666 AS `Proba_3.0`, -1.79175946923 AS `LogProba_3.0`, 1 AS `Decision`, 0.833333333333 AS `DecisionProba` UNION ALL SELECT 13 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS count, 2 AS depth, 12 AS parent_id, 0.0 AS `Proba_0.0`, -1.79769313486231e+308 AS `LogProba_0.0`, 1.0 AS `Proba_1.0`, 0.0 AS `LogProba_1.0`, 0.0 AS `Proba_2.0`, -1.79769313486231e+308 AS `LogProba_2.0`, 0.0 AS `Proba_3.0`, -1.79769313486231e+308 AS `LogProba_3.0`, 1 AS `Decision`, 1.0 AS `DecisionProba` UNION ALL SELECT 14 AS node_id, 'scaler_3' AS feature, 1.3563446998596191 AS threshold, 2 AS count, 2 AS depth, 12 AS parent_id, 0.0 AS `Proba_0.0`, -1.79769313486231e+308 AS `LogProba_0.0`, 0.6666666666666666 AS `Proba_1.0`, -0.405465108108 AS `LogProba_1.0`, 0.0 AS `Proba_2.0`, -1.79769313486231e+308 AS `LogProba_2.0`, 0.3333333333333333 AS `Proba_3.0`, -1.09861228867 AS `LogProba_3.0`, 1 AS `Decision`, 0.666666666667 AS `DecisionProba` UNION ALL SELECT 15 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS count, 3 AS depth, 14 AS parent_id, 0.0 AS `Proba_0.0`, -1.79769313486231e+308 AS `LogProba_0.0`, 1.0 AS `Proba_1.0`, 0.0 AS `LogProba_1.0`, 0.0 AS `Proba_2.0`, -1.79769313486231e+308 AS `LogProba_2.0`, 0.0 AS `Proba_3.0`, -1.79769313486231e+308 AS `LogProba_3.0`, 1 AS `Decision`, 1.0 AS `DecisionProba` UNION ALL SELECT 16 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS count, 3 AS depth, 14 AS parent_id, 0.0 AS `Proba_0.0`, -1.79769313486231e+308 AS `LogProba_0.0`, 0.0 AS `Proba_1.0`, -1.79769313486231e+308 AS `LogProba_1.0`, 0.0 AS `Proba_2.0`, -1.79769313486231e+308 AS `LogProba_2.0`, 1.0 AS `Proba_3.0`, 0.0 AS `LogProba_3.0`, 3 AS `Decision`, 1.0 AS `DecisionProba`) AS `Values`), 
`DT_Output_1` AS 
(SELECT `DT_node_lookup_1`.`KEY` AS `KEY`, `DT_node_lookup_1`.node_id_2 AS node_id_2, `DT_node_data_1`.node_id AS node_id, `DT_node_data_1`.feature AS feature, `DT_node_data_1`.threshold AS threshold, `DT_node_data_1`.count AS count, `DT_node_data_1`.depth AS depth, `DT_node_data_1`.parent_id AS parent_id, `DT_node_data_1`.`Proba_0.0` AS `Proba_0.0`, `DT_node_data_1`.`LogProba_0.0` AS `LogProba_0.0`, `DT_node_data_1`.`Proba_1.0` AS `Proba_1.0`, `DT_node_data_1`.`LogProba_1.0` AS `LogProba_1.0`, `DT_node_data_1`.`Proba_2.0` AS `Proba_2.0`, `DT_node_data_1`.`LogProba_2.0` AS `LogProba_2.0`, `DT_node_data_1`.`Proba_3.0` AS `Proba_3.0`, `DT_node_data_1`.`LogProba_3.0` AS `LogProba_3.0`, `DT_node_data_1`.`Decision` AS `Decision`, `DT_node_data_1`.`DecisionProba` AS `DecisionProba` 
FROM `DT_node_lookup_1` LEFT OUTER JOIN `DT_node_data_1` ON `DT_node_lookup_1`.node_id_2 = `DT_node_data_1`.node_id), 
`RF_Tree_1` AS 
(SELECT `DT_Output_1`.`KEY` AS `KEY`, NULL AS `Score_0`, `DT_Output_1`.`Proba_0.0` AS `Proba_0`, `DT_Output_1`.`LogProba_0.0` AS `LogProba_0`, NULL AS `Score_1`, `DT_Output_1`.`Proba_1.0` AS `Proba_1`, `DT_Output_1`.`LogProba_1.0` AS `LogProba_1`, NULL AS `Score_2`, `DT_Output_1`.`Proba_2.0` AS `Proba_2`, `DT_Output_1`.`LogProba_2.0` AS `LogProba_2`, NULL AS `Score_3`, `DT_Output_1`.`Proba_3.0` AS `Proba_3`, `DT_Output_1`.`LogProba_3.0` AS `LogProba_3` 
FROM `DT_Output_1`), 
`DT_node_lookup_2` AS 
(SELECT `ADS_sca_2_OUT`.`KEY` AS `KEY`, CASE WHEN (`ADS_sca_2_OUT`.scaler_8 <= 0.2521088421344757) THEN CASE WHEN (`ADS_sca_2_OUT`.scaler_10 <= -0.5995696783065796) THEN CASE WHEN (`ADS_sca_2_OUT`.scaler_6 <= -0.5352433919906616) THEN 3 ELSE 4 END ELSE CASE WHEN (`ADS_sca_2_OUT`.scaler_2 <= 0.1348501294851303) THEN 6 ELSE 7 END END ELSE CASE WHEN (`ADS_sca_2_OUT`.scaler_10 <= -0.4656198024749756) THEN 9 ELSE 10 END END AS node_id_2 
FROM `ADS_sca_2_OUT`), 
`DT_node_data_2` AS 
(SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Proba_0.0` AS `Proba_0.0`, `Values`.`LogProba_0.0` AS `LogProba_0.0`, `Values`.`Proba_1.0` AS `Proba_1.0`, `Values`.`LogProba_1.0` AS `LogProba_1.0`, `Values`.`Proba_2.0` AS `Proba_2.0`, `Values`.`LogProba_2.0` AS `LogProba_2.0`, `Values`.`Proba_3.0` AS `Proba_3.0`, `Values`.`LogProba_3.0` AS `LogProba_3.0`, `Values`.`Decision` AS `Decision`, `Values`.`DecisionProba` AS `DecisionProba` 
FROM (SELECT 0 AS node_id, 'scaler_8' AS feature, 0.2521088421344757 AS threshold, 16 AS count, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.04 AS `Proba_0.0`, -3.21887582487 AS `LogProba_0.0`, 0.24 AS `Proba_1.0`, -1.42711635564 AS `LogProba_1.0`, 0.44 AS `Proba_2.0`, -0.82098055207 AS `LogProba_2.0`, 0.28 AS `Proba_3.0`, -1.27296567581 AS `LogProba_3.0`, 2 AS `Decision`, 0.44 AS `DecisionProba` UNION ALL SELECT 1 AS node_id, 'scaler_10' AS feature, -0.5995696783065796 AS threshold, 9 AS count, 1 AS depth, 0 AS parent_id, 0.0 AS `Proba_0.0`, -1.79769313486231e+308 AS `LogProba_0.0`, 0.46153846153846156 AS `Proba_1.0`, -0.773189888233 AS `LogProba_1.0`, 0.0 AS `Proba_2.0`, -1.79769313486231e+308 AS `LogProba_2.0`, 0.5384615384615384 AS `Proba_3.0`, -0.619039208406 AS `LogProba_3.0`, 3 AS `Decision`, 0.538461538462 AS `DecisionProba` UNION ALL SELECT 2 AS node_id, 'scaler_6' AS feature, -0.5352433919906616 AS threshold, 3 AS count, 2 AS depth, 1 AS parent_id, 0.0 AS `Proba_0.0`, -1.79769313486231e+308 AS `LogProba_0.0`, 0.8 AS `Proba_1.0`, -0.223143551314 AS `LogProba_1.0`, 0.0 AS `Proba_2.0`, -1.79769313486231e+308 AS `LogProba_2.0`, 0.2 AS `Proba_3.0`, -1.60943791243 AS `LogProba_3.0`, 1 AS `Decision`, 0.8 AS `DecisionProba` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS count, 3 AS depth, 2 AS parent_id, 0.0 AS `Proba_0.0`, -1.79769313486231e+308 AS `LogProba_0.0`, 0.0 AS `Proba_1.0`, -1.79769313486231e+308 AS `LogProba_1.0`, 0.0 AS `Proba_2.0`, -1.79769313486231e+308 AS `LogProba_2.0`, 1.0 AS `Proba_3.0`, 0.0 AS `LogProba_3.0`, 3 AS `Decision`, 1.0 AS `DecisionProba` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS count, 3 AS depth, 2 AS parent_id, 0.0 AS `Proba_0.0`, -1.79769313486231e+308 AS `LogProba_0.0`, 1.0 AS `Proba_1.0`, 0.0 AS `LogProba_1.0`, 0.0 AS `Proba_2.0`, -1.79769313486231e+308 AS `LogProba_2.0`, 0.0 AS `Proba_3.0`, -1.79769313486231e+308 AS `LogProba_3.0`, 1 AS `Decision`, 1.0 AS `DecisionProba` UNION ALL SELECT 5 AS node_id, 'scaler_2' AS feature, 0.1348501294851303 AS threshold, 6 AS count, 2 AS depth, 1 AS parent_id, 0.0 AS `Proba_0.0`, -1.79769313486231e+308 AS `LogProba_0.0`, 0.25 AS `Proba_1.0`, -1.38629436112 AS `LogProba_1.0`, 0.0 AS `Proba_2.0`, -1.79769313486231e+308 AS `LogProba_2.0`, 0.75 AS `Proba_3.0`, -0.287682072452 AS `LogProba_3.0`, 3 AS `Decision`, 0.75 AS `DecisionProba` UNION ALL SELECT 6 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 4 AS count, 3 AS depth, 5 AS parent_id, 0.0 AS `Proba_0.0`, -1.79769313486231e+308 AS `LogProba_0.0`, 0.0 AS `Proba_1.0`, -1.79769313486231e+308 AS `LogProba_1.0`, 0.0 AS `Proba_2.0`, -1.79769313486231e+308 AS `LogProba_2.0`, 1.0 AS `Proba_3.0`, 0.0 AS `LogProba_3.0`, 3 AS `Decision`, 1.0 AS `DecisionProba` UNION ALL SELECT 7 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS count, 3 AS depth, 5 AS parent_id, 0.0 AS `Proba_0.0`, -1.79769313486231e+308 AS `LogProba_0.0`, 1.0 AS `Proba_1.0`, 0.0 AS `LogProba_1.0`, 0.0 AS `Proba_2.0`, -1.79769313486231e+308 AS `LogProba_2.0`, 0.0 AS `Proba_3.0`, -1.79769313486231e+308 AS `LogProba_3.0`, 1 AS `Decision`, 1.0 AS `DecisionProba` UNION ALL SELECT 8 AS node_id, 'scaler_10' AS feature, -0.4656198024749756 AS threshold, 7 AS count, 1 AS depth, 0 AS parent_id, 0.08333333333333333 AS `Proba_0.0`, -2.48490664979 AS `LogProba_0.0`, 0.0 AS `Proba_1.0`, -1.79769313486231e+308 AS `LogProba_1.0`, 0.9166666666666666 AS `Proba_2.0`, -0.0870113769896 AS `LogProba_2.0`, 0.0 AS `Proba_3.0`, -1.79769313486231e+308 AS `LogProba_3.0`, 2 AS `Decision`, 0.916666666667 AS `DecisionProba` UNION ALL SELECT 9 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS count, 2 AS depth, 8 AS parent_id, 1.0 AS `Proba_0.0`, 0.0 AS `LogProba_0.0`, 0.0 AS `Proba_1.0`, -1.79769313486231e+308 AS `LogProba_1.0`, 0.0 AS `Proba_2.0`, -1.79769313486231e+308 AS `LogProba_2.0`, 0.0 AS `Proba_3.0`, -1.79769313486231e+308 AS `LogProba_3.0`, 0 AS `Decision`, 1.0 AS `DecisionProba` UNION ALL SELECT 10 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 6 AS count, 2 AS depth, 8 AS parent_id, 0.0 AS `Proba_0.0`, -1.79769313486231e+308 AS `LogProba_0.0`, 0.0 AS `Proba_1.0`, -1.79769313486231e+308 AS `LogProba_1.0`, 1.0 AS `Proba_2.0`, 0.0 AS `LogProba_2.0`, 0.0 AS `Proba_3.0`, -1.79769313486231e+308 AS `LogProba_3.0`, 2 AS `Decision`, 1.0 AS `DecisionProba`) AS `Values`), 
`DT_Output_2` AS 
(SELECT `DT_node_lookup_2`.`KEY` AS `KEY`, `DT_node_lookup_2`.node_id_2 AS node_id_2, `DT_node_data_2`.node_id AS node_id, `DT_node_data_2`.feature AS feature, `DT_node_data_2`.threshold AS threshold, `DT_node_data_2`.count AS count, `DT_node_data_2`.depth AS depth, `DT_node_data_2`.parent_id AS parent_id, `DT_node_data_2`.`Proba_0.0` AS `Proba_0.0`, `DT_node_data_2`.`LogProba_0.0` AS `LogProba_0.0`, `DT_node_data_2`.`Proba_1.0` AS `Proba_1.0`, `DT_node_data_2`.`LogProba_1.0` AS `LogProba_1.0`, `DT_node_data_2`.`Proba_2.0` AS `Proba_2.0`, `DT_node_data_2`.`LogProba_2.0` AS `LogProba_2.0`, `DT_node_data_2`.`Proba_3.0` AS `Proba_3.0`, `DT_node_data_2`.`LogProba_3.0` AS `LogProba_3.0`, `DT_node_data_2`.`Decision` AS `Decision`, `DT_node_data_2`.`DecisionProba` AS `DecisionProba` 
FROM `DT_node_lookup_2` LEFT OUTER JOIN `DT_node_data_2` ON `DT_node_lookup_2`.node_id_2 = `DT_node_data_2`.node_id), 
`RF_Tree_2` AS 
(SELECT `DT_Output_2`.`KEY` AS `KEY`, NULL AS `Score_0`, `DT_Output_2`.`Proba_0.0` AS `Proba_0`, `DT_Output_2`.`LogProba_0.0` AS `LogProba_0`, NULL AS `Score_1`, `DT_Output_2`.`Proba_1.0` AS `Proba_1`, `DT_Output_2`.`LogProba_1.0` AS `LogProba_1`, NULL AS `Score_2`, `DT_Output_2`.`Proba_2.0` AS `Proba_2`, `DT_Output_2`.`LogProba_2.0` AS `LogProba_2`, NULL AS `Score_3`, `DT_Output_2`.`Proba_3.0` AS `Proba_3`, `DT_Output_2`.`LogProba_3.0` AS `LogProba_3` 
FROM `DT_Output_2`), 
`DT_node_lookup_3` AS 
(SELECT `ADS_sca_2_OUT`.`KEY` AS `KEY`, CASE WHEN (`ADS_sca_2_OUT`.scaler_5 <= -0.48106110095977783) THEN CASE WHEN (`ADS_sca_2_OUT`.scaler_2 <= 1.7123074531555176) THEN 2 ELSE 3 END ELSE CASE WHEN (`ADS_sca_2_OUT`.scaler_3 <= 0.18443679809570312) THEN CASE WHEN (`ADS_sca_2_OUT`.scaler_6 <= -0.566226601600647) THEN 6 ELSE 7 END ELSE CASE WHEN (`ADS_sca_2_OUT`.scaler_2 <= 0.08243580162525177) THEN 9 ELSE 10 END END END AS node_id_2 
FROM `ADS_sca_2_OUT`), 
`DT_node_data_3` AS 
(SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Proba_0.0` AS `Proba_0.0`, `Values`.`LogProba_0.0` AS `LogProba_0.0`, `Values`.`Proba_1.0` AS `Proba_1.0`, `Values`.`LogProba_1.0` AS `LogProba_1.0`, `Values`.`Proba_2.0` AS `Proba_2.0`, `Values`.`LogProba_2.0` AS `LogProba_2.0`, `Values`.`Proba_3.0` AS `Proba_3.0`, `Values`.`LogProba_3.0` AS `LogProba_3.0`, `Values`.`Decision` AS `Decision`, `Values`.`DecisionProba` AS `DecisionProba` 
FROM (SELECT 0 AS node_id, 'scaler_5' AS feature, -0.48106110095977783 AS threshold, 19 AS count, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.2 AS `Proba_0.0`, -1.60943791243 AS `LogProba_0.0`, 0.16 AS `Proba_1.0`, -1.83258146375 AS `LogProba_1.0`, 0.24 AS `Proba_2.0`, -1.42711635564 AS `LogProba_2.0`, 0.4 AS `Proba_3.0`, -0.916290731874 AS `LogProba_3.0`, 3 AS `Decision`, 0.4 AS `DecisionProba` UNION ALL SELECT 1 AS node_id, 'scaler_2' AS feature, 1.7123074531555176 AS threshold, 7 AS count, 1 AS depth, 0 AS parent_id, 0.25 AS `Proba_0.0`, -1.38629436112 AS `LogProba_0.0`, 0.0 AS `Proba_1.0`, -1.79769313486231e+308 AS `LogProba_1.0`, 0.75 AS `Proba_2.0`, -0.287682072452 AS `LogProba_2.0`, 0.0 AS `Proba_3.0`, -1.79769313486231e+308 AS `LogProba_3.0`, 2 AS `Decision`, 0.75 AS `DecisionProba` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 6 AS count, 2 AS depth, 1 AS parent_id, 0.0 AS `Proba_0.0`, -1.79769313486231e+308 AS `LogProba_0.0`, 0.0 AS `Proba_1.0`, -1.79769313486231e+308 AS `LogProba_1.0`, 1.0 AS `Proba_2.0`, 0.0 AS `LogProba_2.0`, 0.0 AS `Proba_3.0`, -1.79769313486231e+308 AS `LogProba_3.0`, 2 AS `Decision`, 1.0 AS `DecisionProba` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS count, 2 AS depth, 1 AS parent_id, 1.0 AS `Proba_0.0`, 0.0 AS `LogProba_0.0`, 0.0 AS `Proba_1.0`, -1.79769313486231e+308 AS `LogProba_1.0`, 0.0 AS `Proba_2.0`, -1.79769313486231e+308 AS `LogProba_2.0`, 0.0 AS `Proba_3.0`, -1.79769313486231e+308 AS `LogProba_3.0`, 0 AS `Decision`, 1.0 AS `DecisionProba` UNION ALL SELECT 4 AS node_id, 'scaler_3' AS feature, 0.18443679809570312 AS threshold, 12 AS count, 1 AS depth, 0 AS parent_id, 0.17647058823529413 AS `Proba_0.0`, -1.73460105539 AS `LogProba_0.0`, 0.23529411764705882 AS `Proba_1.0`, -1.44691898294 AS `LogProba_1.0`, 0.0 AS `Proba_2.0`, -1.79769313486231e+308 AS `LogProba_2.0`, 0.5882352941176471 AS `Proba_3.0`, -0.530628251062 AS `LogProba_3.0`, 3 AS `Decision`, 0.588235294118 AS `DecisionProba` UNION ALL SELECT 5 AS node_id, 'scaler_6' AS feature, -0.566226601600647 AS threshold, 4 AS count, 2 AS depth, 4 AS parent_id, 0.75 AS `Proba_0.0`, -0.287682072452 AS `LogProba_0.0`, 0.0 AS `Proba_1.0`, -1.79769313486231e+308 AS `LogProba_1.0`, 0.0 AS `Proba_2.0`, -1.79769313486231e+308 AS `LogProba_2.0`, 0.25 AS `Proba_3.0`, -1.38629436112 AS `LogProba_3.0`, 0 AS `Decision`, 0.75 AS `DecisionProba` UNION ALL SELECT 6 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS count, 3 AS depth, 5 AS parent_id, 0.0 AS `Proba_0.0`, -1.79769313486231e+308 AS `LogProba_0.0`, 0.0 AS `Proba_1.0`, -1.79769313486231e+308 AS `LogProba_1.0`, 0.0 AS `Proba_2.0`, -1.79769313486231e+308 AS `LogProba_2.0`, 1.0 AS `Proba_3.0`, 0.0 AS `LogProba_3.0`, 3 AS `Decision`, 1.0 AS `DecisionProba` UNION ALL SELECT 7 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS count, 3 AS depth, 5 AS parent_id, 1.0 AS `Proba_0.0`, 0.0 AS `LogProba_0.0`, 0.0 AS `Proba_1.0`, -1.79769313486231e+308 AS `LogProba_1.0`, 0.0 AS `Proba_2.0`, -1.79769313486231e+308 AS `LogProba_2.0`, 0.0 AS `Proba_3.0`, -1.79769313486231e+308 AS `LogProba_3.0`, 0 AS `Decision`, 1.0 AS `DecisionProba` UNION ALL SELECT 8 AS node_id, 'scaler_2' AS feature, 0.08243580162525177 AS threshold, 8 AS count, 2 AS depth, 4 AS parent_id, 0.0 AS `Proba_0.0`, -1.79769313486231e+308 AS `LogProba_0.0`, 0.3076923076923077 AS `Proba_1.0`, -1.17865499634 AS `LogProba_1.0`, 0.0 AS `Proba_2.0`, -1.79769313486231e+308 AS `LogProba_2.0`, 0.6923076923076923 AS `Proba_3.0`, -0.367724780125 AS `LogProba_3.0`, 3 AS `Decision`, 0.692307692308 AS `DecisionProba` UNION ALL SELECT 9 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 5 AS count, 3 AS depth, 8 AS parent_id, 0.0 AS `Proba_0.0`, -1.79769313486231e+308 AS `LogProba_0.0`, 0.0 AS `Proba_1.0`, -1.79769313486231e+308 AS `LogProba_1.0`, 0.0 AS `Proba_2.0`, -1.79769313486231e+308 AS `LogProba_2.0`, 1.0 AS `Proba_3.0`, 0.0 AS `LogProba_3.0`, 3 AS `Decision`, 1.0 AS `DecisionProba` UNION ALL SELECT 10 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS count, 3 AS depth, 8 AS parent_id, 0.0 AS `Proba_0.0`, -1.79769313486231e+308 AS `LogProba_0.0`, 1.0 AS `Proba_1.0`, 0.0 AS `LogProba_1.0`, 0.0 AS `Proba_2.0`, -1.79769313486231e+308 AS `LogProba_2.0`, 0.0 AS `Proba_3.0`, -1.79769313486231e+308 AS `LogProba_3.0`, 1 AS `Decision`, 1.0 AS `DecisionProba`) AS `Values`), 
`DT_Output_3` AS 
(SELECT `DT_node_lookup_3`.`KEY` AS `KEY`, `DT_node_lookup_3`.node_id_2 AS node_id_2, `DT_node_data_3`.node_id AS node_id, `DT_node_data_3`.feature AS feature, `DT_node_data_3`.threshold AS threshold, `DT_node_data_3`.count AS count, `DT_node_data_3`.depth AS depth, `DT_node_data_3`.parent_id AS parent_id, `DT_node_data_3`.`Proba_0.0` AS `Proba_0.0`, `DT_node_data_3`.`LogProba_0.0` AS `LogProba_0.0`, `DT_node_data_3`.`Proba_1.0` AS `Proba_1.0`, `DT_node_data_3`.`LogProba_1.0` AS `LogProba_1.0`, `DT_node_data_3`.`Proba_2.0` AS `Proba_2.0`, `DT_node_data_3`.`LogProba_2.0` AS `LogProba_2.0`, `DT_node_data_3`.`Proba_3.0` AS `Proba_3.0`, `DT_node_data_3`.`LogProba_3.0` AS `LogProba_3.0`, `DT_node_data_3`.`Decision` AS `Decision`, `DT_node_data_3`.`DecisionProba` AS `DecisionProba` 
FROM `DT_node_lookup_3` LEFT OUTER JOIN `DT_node_data_3` ON `DT_node_lookup_3`.node_id_2 = `DT_node_data_3`.node_id), 
`RF_Tree_3` AS 
(SELECT `DT_Output_3`.`KEY` AS `KEY`, NULL AS `Score_0`, `DT_Output_3`.`Proba_0.0` AS `Proba_0`, `DT_Output_3`.`LogProba_0.0` AS `LogProba_0`, NULL AS `Score_1`, `DT_Output_3`.`Proba_1.0` AS `Proba_1`, `DT_Output_3`.`LogProba_1.0` AS `LogProba_1`, NULL AS `Score_2`, `DT_Output_3`.`Proba_2.0` AS `Proba_2`, `DT_Output_3`.`LogProba_2.0` AS `LogProba_2`, NULL AS `Score_3`, `DT_Output_3`.`Proba_3.0` AS `Proba_3`, `DT_Output_3`.`LogProba_3.0` AS `LogProba_3` 
FROM `DT_Output_3`), 
`Score_Union_CTE` AS 
(SELECT ensemble_score_union.`KEY` AS `KEY`, ensemble_score_union.`Score_0` AS `Score_0`, ensemble_score_union.`Proba_0` AS `Proba_0`, ensemble_score_union.`LogProba_0` AS `LogProba_0`, ensemble_score_union.`Score_1` AS `Score_1`, ensemble_score_union.`Proba_1` AS `Proba_1`, ensemble_score_union.`LogProba_1` AS `LogProba_1`, ensemble_score_union.`Score_2` AS `Score_2`, ensemble_score_union.`Proba_2` AS `Proba_2`, ensemble_score_union.`LogProba_2` AS `LogProba_2`, ensemble_score_union.`Score_3` AS `Score_3`, ensemble_score_union.`Proba_3` AS `Proba_3`, ensemble_score_union.`LogProba_3` AS `LogProba_3` 
FROM (SELECT `RF_Tree_0`.`KEY` AS `KEY`, `RF_Tree_0`.`Score_0` AS `Score_0`, `RF_Tree_0`.`Proba_0` AS `Proba_0`, `RF_Tree_0`.`LogProba_0` AS `LogProba_0`, `RF_Tree_0`.`Score_1` AS `Score_1`, `RF_Tree_0`.`Proba_1` AS `Proba_1`, `RF_Tree_0`.`LogProba_1` AS `LogProba_1`, `RF_Tree_0`.`Score_2` AS `Score_2`, `RF_Tree_0`.`Proba_2` AS `Proba_2`, `RF_Tree_0`.`LogProba_2` AS `LogProba_2`, `RF_Tree_0`.`Score_3` AS `Score_3`, `RF_Tree_0`.`Proba_3` AS `Proba_3`, `RF_Tree_0`.`LogProba_3` AS `LogProba_3` 
FROM `RF_Tree_0` UNION ALL SELECT `RF_Tree_1`.`KEY` AS `KEY`, `RF_Tree_1`.`Score_0` AS `Score_0`, `RF_Tree_1`.`Proba_0` AS `Proba_0`, `RF_Tree_1`.`LogProba_0` AS `LogProba_0`, `RF_Tree_1`.`Score_1` AS `Score_1`, `RF_Tree_1`.`Proba_1` AS `Proba_1`, `RF_Tree_1`.`LogProba_1` AS `LogProba_1`, `RF_Tree_1`.`Score_2` AS `Score_2`, `RF_Tree_1`.`Proba_2` AS `Proba_2`, `RF_Tree_1`.`LogProba_2` AS `LogProba_2`, `RF_Tree_1`.`Score_3` AS `Score_3`, `RF_Tree_1`.`Proba_3` AS `Proba_3`, `RF_Tree_1`.`LogProba_3` AS `LogProba_3` 
FROM `RF_Tree_1` UNION ALL SELECT `RF_Tree_2`.`KEY` AS `KEY`, `RF_Tree_2`.`Score_0` AS `Score_0`, `RF_Tree_2`.`Proba_0` AS `Proba_0`, `RF_Tree_2`.`LogProba_0` AS `LogProba_0`, `RF_Tree_2`.`Score_1` AS `Score_1`, `RF_Tree_2`.`Proba_1` AS `Proba_1`, `RF_Tree_2`.`LogProba_1` AS `LogProba_1`, `RF_Tree_2`.`Score_2` AS `Score_2`, `RF_Tree_2`.`Proba_2` AS `Proba_2`, `RF_Tree_2`.`LogProba_2` AS `LogProba_2`, `RF_Tree_2`.`Score_3` AS `Score_3`, `RF_Tree_2`.`Proba_3` AS `Proba_3`, `RF_Tree_2`.`LogProba_3` AS `LogProba_3` 
FROM `RF_Tree_2` UNION ALL SELECT `RF_Tree_3`.`KEY` AS `KEY`, `RF_Tree_3`.`Score_0` AS `Score_0`, `RF_Tree_3`.`Proba_0` AS `Proba_0`, `RF_Tree_3`.`LogProba_0` AS `LogProba_0`, `RF_Tree_3`.`Score_1` AS `Score_1`, `RF_Tree_3`.`Proba_1` AS `Proba_1`, `RF_Tree_3`.`LogProba_1` AS `LogProba_1`, `RF_Tree_3`.`Score_2` AS `Score_2`, `RF_Tree_3`.`Proba_2` AS `Proba_2`, `RF_Tree_3`.`LogProba_2` AS `LogProba_2`, `RF_Tree_3`.`Score_3` AS `Score_3`, `RF_Tree_3`.`Proba_3` AS `Proba_3`, `RF_Tree_3`.`LogProba_3` AS `LogProba_3` 
FROM `RF_Tree_3`) AS ensemble_score_union), 
`RF_AVG_Scores` AS 
(SELECT `T`.`KEY` AS `KEY`, `T`.`Score_0` AS `Score_0`, `T`.`Proba_0` AS `Proba_0`, `T`.`LogProba_0` AS `LogProba_0`, `T`.`Score_1` AS `Score_1`, `T`.`Proba_1` AS `Proba_1`, `T`.`LogProba_1` AS `LogProba_1`, `T`.`Score_2` AS `Score_2`, `T`.`Proba_2` AS `Proba_2`, `T`.`LogProba_2` AS `LogProba_2`, `T`.`Score_3` AS `Score_3`, `T`.`Proba_3` AS `Proba_3`, `T`.`LogProba_3` AS `LogProba_3` 
FROM (SELECT `Score_Union_CTE`.`KEY` AS `KEY`, avg(`Score_Union_CTE`.`Score_0`) AS `Score_0`, avg(`Score_Union_CTE`.`Proba_0`) AS `Proba_0`, avg(`Score_Union_CTE`.`LogProba_0`) AS `LogProba_0`, avg(`Score_Union_CTE`.`Score_1`) AS `Score_1`, avg(`Score_Union_CTE`.`Proba_1`) AS `Proba_1`, avg(`Score_Union_CTE`.`LogProba_1`) AS `LogProba_1`, avg(`Score_Union_CTE`.`Score_2`) AS `Score_2`, avg(`Score_Union_CTE`.`Proba_2`) AS `Proba_2`, avg(`Score_Union_CTE`.`LogProba_2`) AS `LogProba_2`, avg(`Score_Union_CTE`.`Score_3`) AS `Score_3`, avg(`Score_Union_CTE`.`Proba_3`) AS `Proba_3`, avg(`Score_Union_CTE`.`LogProba_3`) AS `LogProba_3` 
FROM `Score_Union_CTE` GROUP BY `Score_Union_CTE`.`KEY`) AS `T`), 
orig_cte AS 
(SELECT `RF_AVG_Scores`.`KEY` AS `KEY`, `RF_AVG_Scores`.`Score_0` AS `Score_0`, `RF_AVG_Scores`.`Score_1` AS `Score_1`, `RF_AVG_Scores`.`Score_2` AS `Score_2`, `RF_AVG_Scores`.`Score_3` AS `Score_3`, `RF_AVG_Scores`.`Proba_0` AS `Proba_0`, `RF_AVG_Scores`.`Proba_1` AS `Proba_1`, `RF_AVG_Scores`.`Proba_2` AS `Proba_2`, `RF_AVG_Scores`.`Proba_3` AS `Proba_3`, `RF_AVG_Scores`.`LogProba_0` AS `LogProba_0`, `RF_AVG_Scores`.`LogProba_1` AS `LogProba_1`, `RF_AVG_Scores`.`LogProba_2` AS `LogProba_2`, `RF_AVG_Scores`.`LogProba_3` AS `LogProba_3`, CAST(NULL AS SIGNED INTEGER) AS `Decision`, NULL AS `DecisionProba` 
FROM `RF_AVG_Scores`), 
score_class_union AS 
(SELECT scu.`KEY_u` AS `KEY_u`, scu.class AS class, scu.`LogProba` AS `LogProba`, scu.`Proba` AS `Proba`, scu.`Score` AS `Score` 
FROM (SELECT orig_cte.`KEY` AS `KEY_u`, 0 AS class, orig_cte.`LogProba_0` AS `LogProba`, orig_cte.`Proba_0` AS `Proba`, orig_cte.`Score_0` AS `Score` 
FROM orig_cte UNION ALL SELECT orig_cte.`KEY` AS `KEY_u`, 1 AS class, orig_cte.`LogProba_1` AS `LogProba`, orig_cte.`Proba_1` AS `Proba`, orig_cte.`Score_1` AS `Score` 
FROM orig_cte UNION ALL SELECT orig_cte.`KEY` AS `KEY_u`, 2 AS class, orig_cte.`LogProba_2` AS `LogProba`, orig_cte.`Proba_2` AS `Proba`, orig_cte.`Score_2` AS `Score` 
FROM orig_cte UNION ALL SELECT orig_cte.`KEY` AS `KEY_u`, 3 AS class, orig_cte.`LogProba_3` AS `LogProba`, orig_cte.`Proba_3` AS `Proba`, orig_cte.`Score_3` AS `Score` 
FROM orig_cte) AS scu), 
score_max AS 
(SELECT orig_cte.`KEY` AS `KEY`, orig_cte.`Score_0` AS `Score_0`, orig_cte.`Score_1` AS `Score_1`, orig_cte.`Score_2` AS `Score_2`, orig_cte.`Score_3` AS `Score_3`, orig_cte.`Proba_0` AS `Proba_0`, orig_cte.`Proba_1` AS `Proba_1`, orig_cte.`Proba_2` AS `Proba_2`, orig_cte.`Proba_3` AS `Proba_3`, orig_cte.`LogProba_0` AS `LogProba_0`, orig_cte.`LogProba_1` AS `LogProba_1`, orig_cte.`LogProba_2` AS `LogProba_2`, orig_cte.`LogProba_3` AS `LogProba_3`, orig_cte.`Decision` AS `Decision`, orig_cte.`DecisionProba` AS `DecisionProba`, max_select.`KEY_m` AS `KEY_m`, max_select.`max_Proba` AS `max_Proba` 
FROM orig_cte LEFT OUTER JOIN (SELECT score_class_union.`KEY_u` AS `KEY_m`, max(score_class_union.`Proba`) AS `max_Proba` 
FROM score_class_union GROUP BY score_class_union.`KEY_u`) AS max_select ON orig_cte.`KEY` = max_select.`KEY_m`), 
union_with_max AS 
(SELECT score_class_union.`KEY_u` AS `KEY_u`, score_class_union.class AS class, score_class_union.`LogProba` AS `LogProba`, score_class_union.`Proba` AS `Proba`, score_class_union.`Score` AS `Score`, score_max.`KEY` AS `KEY`, score_max.`Score_0` AS `Score_0`, score_max.`Score_1` AS `Score_1`, score_max.`Score_2` AS `Score_2`, score_max.`Score_3` AS `Score_3`, score_max.`Proba_0` AS `Proba_0`, score_max.`Proba_1` AS `Proba_1`, score_max.`Proba_2` AS `Proba_2`, score_max.`Proba_3` AS `Proba_3`, score_max.`LogProba_0` AS `LogProba_0`, score_max.`LogProba_1` AS `LogProba_1`, score_max.`LogProba_2` AS `LogProba_2`, score_max.`LogProba_3` AS `LogProba_3`, score_max.`Decision` AS `Decision`, score_max.`DecisionProba` AS `DecisionProba`, score_max.`KEY_m` AS `KEY_m`, score_max.`max_Proba` AS `max_Proba` 
FROM score_class_union LEFT OUTER JOIN score_max ON score_class_union.`KEY_u` = score_max.`KEY`), 
arg_max_cte AS 
(SELECT score_max.`KEY` AS `KEY`, score_max.`Score_0` AS `Score_0`, score_max.`Score_1` AS `Score_1`, score_max.`Score_2` AS `Score_2`, score_max.`Score_3` AS `Score_3`, score_max.`Proba_0` AS `Proba_0`, score_max.`Proba_1` AS `Proba_1`, score_max.`Proba_2` AS `Proba_2`, score_max.`Proba_3` AS `Proba_3`, score_max.`LogProba_0` AS `LogProba_0`, score_max.`LogProba_1` AS `LogProba_1`, score_max.`LogProba_2` AS `LogProba_2`, score_max.`LogProba_3` AS `LogProba_3`, score_max.`Decision` AS `Decision`, score_max.`DecisionProba` AS `DecisionProba`, score_max.`KEY_m` AS `KEY_m`, score_max.`max_Proba` AS `max_Proba`, `arg_max_t_Proba`.`KEY_Proba` AS `KEY_Proba`, `arg_max_t_Proba`.`arg_max_Proba` AS `arg_max_Proba` 
FROM score_max LEFT OUTER JOIN (SELECT union_with_max.`KEY` AS `KEY_Proba`, min(union_with_max.class) AS `arg_max_Proba` 
FROM union_with_max 
WHERE union_with_max.`max_Proba` <= union_with_max.`Proba` GROUP BY union_with_max.`KEY`) AS `arg_max_t_Proba` ON score_max.`KEY` = `arg_max_t_Proba`.`KEY_Proba`)
 SELECT arg_max_cte.`KEY` AS `KEY`, arg_max_cte.`Score_0` AS `Score_0`, arg_max_cte.`Score_1` AS `Score_1`, arg_max_cte.`Score_2` AS `Score_2`, arg_max_cte.`Score_3` AS `Score_3`, arg_max_cte.`Proba_0` AS `Proba_0`, arg_max_cte.`Proba_1` AS `Proba_1`, arg_max_cte.`Proba_2` AS `Proba_2`, arg_max_cte.`Proba_3` AS `Proba_3`, CASE WHEN (arg_max_cte.`Proba_0` IS NULL OR arg_max_cte.`Proba_0` > 0.0) THEN ln(arg_max_cte.`Proba_0`) ELSE -1.79769313486231e+308 END AS `LogProba_0`, CASE WHEN (arg_max_cte.`Proba_1` IS NULL OR arg_max_cte.`Proba_1` > 0.0) THEN ln(arg_max_cte.`Proba_1`) ELSE -1.79769313486231e+308 END AS `LogProba_1`, CASE WHEN (arg_max_cte.`Proba_2` IS NULL OR arg_max_cte.`Proba_2` > 0.0) THEN ln(arg_max_cte.`Proba_2`) ELSE -1.79769313486231e+308 END AS `LogProba_2`, CASE WHEN (arg_max_cte.`Proba_3` IS NULL OR arg_max_cte.`Proba_3` > 0.0) THEN ln(arg_max_cte.`Proba_3`) ELSE -1.79769313486231e+308 END AS `LogProba_3`, arg_max_cte.`arg_max_Proba` AS `Decision`, arg_max_cte.`max_Proba` AS `DecisionProba` 
FROM arg_max_cte