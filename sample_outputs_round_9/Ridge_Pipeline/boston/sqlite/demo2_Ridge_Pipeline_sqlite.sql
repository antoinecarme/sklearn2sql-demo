-- This SQL code was generated by scikit2sql (development version).
-- Copyright 2017

WITH "ADS_imp_1_OUT" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_0" IS NULL) THEN 3.41760984127 ELSE "ADS"."Feature_0" END AS impter_2, CASE WHEN ("ADS"."Feature_1" IS NULL) THEN 10.1031746032 ELSE "ADS"."Feature_1" END AS impter_3, CASE WHEN ("ADS"."Feature_2" IS NULL) THEN 11.0184920635 ELSE "ADS"."Feature_2" END AS impter_4, CASE WHEN ("ADS"."Feature_3" IS NULL) THEN 0.0634920634921 ELSE "ADS"."Feature_3" END AS impter_5, CASE WHEN ("ADS"."Feature_4" IS NULL) THEN 0.559064285714 ELSE "ADS"."Feature_4" END AS impter_6, CASE WHEN ("ADS"."Feature_5" IS NULL) THEN 6.29800793651 ELSE "ADS"."Feature_5" END AS impter_7, CASE WHEN ("ADS"."Feature_6" IS NULL) THEN 66.1579365079 ELSE "ADS"."Feature_6" END AS impter_8, CASE WHEN ("ADS"."Feature_7" IS NULL) THEN 3.82041984127 ELSE "ADS"."Feature_7" END AS impter_9, CASE WHEN ("ADS"."Feature_8" IS NULL) THEN 10.5476190476 ELSE "ADS"."Feature_8" END AS impter_10, CASE WHEN ("ADS"."Feature_9" IS NULL) THEN 424.571428571 ELSE "ADS"."Feature_9" END AS impter_11, CASE WHEN ("ADS"."Feature_10" IS NULL) THEN 18.4182539683 ELSE "ADS"."Feature_10" END AS impter_12, CASE WHEN ("ADS"."Feature_11" IS NULL) THEN 351.427301587 ELSE "ADS"."Feature_11" END AS impter_13, CASE WHEN ("ADS"."Feature_12" IS NULL) THEN 12.3455555556 ELSE "ADS"."Feature_12" END AS impter_14 
FROM boston AS "ADS"), 
"ADS_sca_2_OUT" AS 
(SELECT "ADS_imp_1_OUT"."KEY" AS "KEY", (CAST("ADS_imp_1_OUT".impter_2 AS FLOAT) - 3.41760984127) / 6.42585416131 AS scaler_2, (CAST("ADS_imp_1_OUT".impter_3 AS FLOAT) - 10.1031746032) / 21.7677420303 AS scaler_3, (CAST("ADS_imp_1_OUT".impter_4 AS FLOAT) - 11.0184920635) / 6.65396743656 AS scaler_4, (CAST("ADS_imp_1_OUT".impter_5 AS FLOAT) - 0.0634920634921) / 0.243845896758 AS scaler_5, (CAST("ADS_imp_1_OUT".impter_6 AS FLOAT) - 0.559064285714) / 0.122487734705 AS scaler_6, (CAST("ADS_imp_1_OUT".impter_7 AS FLOAT) - 6.29800793651) / 0.688204340456 AS scaler_7, (CAST("ADS_imp_1_OUT".impter_8 AS FLOAT) - 66.1579365079) / 28.5095927971 AS scaler_8, (CAST("ADS_imp_1_OUT".impter_9 AS FLOAT) - 3.82041984127) / 1.98176364603 AS scaler_9, (CAST("ADS_imp_1_OUT".impter_10 AS FLOAT) - 10.5476190476) / 8.9598816096 AS scaler_10, (CAST("ADS_imp_1_OUT".impter_11 AS FLOAT) - 424.571428571) / 169.896627234 AS scaler_11, (CAST("ADS_imp_1_OUT".impter_12 AS FLOAT) - 18.4182539683) / 2.05995071576 AS scaler_12, (CAST("ADS_imp_1_OUT".impter_13 AS FLOAT) - 351.427301587) / 103.875515352 AS scaler_13, (CAST("ADS_imp_1_OUT".impter_14 AS FLOAT) - 12.3455555556) / 7.04758818991 AS scaler_14 
FROM "ADS_imp_1_OUT"), 
linear_model_cte AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", 0.043309902665411217 * "ADS_sca_2_OUT".scaler_2 + 1.0214938097284458 * "ADS_sca_2_OUT".scaler_3 + 0.9723064290244824 * "ADS_sca_2_OUT".scaler_4 + 0.3029914326710565 * "ADS_sca_2_OUT".scaler_5 + -0.6994434027208875 * "ADS_sca_2_OUT".scaler_6 + 2.95736373302838 * "ADS_sca_2_OUT".scaler_7 + -0.11477776481240473 * "ADS_sca_2_OUT".scaler_8 + -2.340309078939216 * "ADS_sca_2_OUT".scaler_9 + 1.8444769689025784 * "ADS_sca_2_OUT".scaler_10 + -2.3587052711589727 * "ADS_sca_2_OUT".scaler_11 + -1.9159282039268883 * "ADS_sca_2_OUT".scaler_12 + 1.8721684135317556 * "ADS_sca_2_OUT".scaler_13 + -4.013262324526376 * "ADS_sca_2_OUT".scaler_14 + 22.3619047619 AS "Estimator" 
FROM "ADS_sca_2_OUT")
 SELECT linear_model_cte."KEY" AS "KEY", linear_model_cte."Estimator" AS "Estimator" 
FROM linear_model_cte