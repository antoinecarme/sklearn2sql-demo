-- This SQL code was generated by scikit2sql (development version).
-- Copyright 2017

WITH "SV_data_0_1" AS 
(SELECT "Values".sv_idx AS sv_idx, "Values".dual_coeff AS dual_coeff, "Values".sv_0 AS sv_0, "Values".sv_1 AS sv_1, "Values".sv_2 AS sv_2, "Values".sv_3 AS sv_3, "Values".sv_4 AS sv_4, "Values".sv_5 AS sv_5, "Values".sv_6 AS sv_6, "Values".sv_7 AS sv_7, "Values".sv_8 AS sv_8, "Values".sv_9 AS sv_9 
FROM (SELECT 0 AS sv_idx, 0.0755038769985 AS dual_coeff, 1.58342267689 AS sv_0, 0.95702124876 AS sv_1, 0.302573623471 AS sv_2, -1.23434347354 AS sv_3, 1.02050334361 AS sv_4, -0.260498566987 AS sv_5, 0.937998335121 AS sv_6, -3.62718337507 AS sv_7, -0.248179493237 AS sv_8, 1.18814586239 AS sv_9 UNION ALL SELECT 1 AS sv_idx, 0.0 AS dual_coeff, -2.00832204994 AS sv_0, 0.645603036725 AS sv_1, -0.644199123075 AS sv_2, 0.153841086912 AS sv_3, 1.55176291576 AS sv_4, -0.286080252964 AS sv_5, 0.0538735532671 AS sv_6, 1.1125525174 AS sv_7, 0.786512492701 AS sv_8, 1.36879310668 AS sv_9 UNION ALL SELECT 2 AS sv_idx, 0.0 AS dual_coeff, 2.81077022815 AS sv_0, -0.201158831548 AS sv_1, -1.50766789014 AS sv_2, -1.63809413215 AS sv_3, -0.340941107273 AS sv_4, -0.234873636352 AS sv_5, 0.701031172677 AS sv_6, -0.270023389946 AS sv_7, 1.99614765177 AS sv_8, 0.869311275668 AS sv_9 UNION ALL SELECT 3 AS sv_idx, 0.329700984563 AS dual_coeff, -0.168261988038 AS sv_0, -0.231802161756 AS sv_1, 1.21796040423 AS sv_2, 1.48320064569 AS sv_3, 0.854260454302 AS sv_4, -0.387010233854 AS sv_5, -0.716935868036 AS sv_6, 1.3802210748 AS sv_7, -0.754282569202 AS sv_8, -1.75311962365 AS sv_9 UNION ALL SELECT 4 AS sv_idx, 0.116812666358 AS dual_coeff, -0.604295155104 AS sv_0, -1.05330703267 AS sv_1, 0.2959483112 AS sv_2, 0.206679948399 AS sv_3, 0.0934547248693 AS sv_4, 0.433591560638 AS sv_5, -0.308688088583 AS sv_6, 1.51828896682 AS sv_7, 1.20932143725 AS sv_8, 0.515610598609 AS sv_9 UNION ALL SELECT 5 AS sv_idx, -0.0686656175902 AS dual_coeff, -0.890806535112 AS sv_0, 0.646413753832 AS sv_1, 1.84464561075 AS sv_2, 3.01093779084 AS sv_3, 0.948001227823 AS sv_4, -1.35333653557 AS sv_5, -1.29910530899 AS sv_6, 1.75994868555 AS sv_7, -0.506360699271 AS sv_8, 0.646864407001 AS sv_9 UNION ALL SELECT 6 AS sv_idx, -0.29874614255 AS dual_coeff, 0.362141924693 AS sv_0, 1.1485510551 AS sv_1, 0.381384199136 AS sv_2, 1.83383472517 AS sv_3, -0.766983073168 AS sv_4, -0.419320738817 AS sv_5, -0.742584426393 AS sv_6, 0.493851471812 AS sv_7, 0.547080062802 AS sv_8, -1.27386810897 AS sv_9 UNION ALL SELECT 7 AS sv_idx, -0.0358438009778 AS dual_coeff, 0.122401886536 AS sv_0, 1.51961908305 AS sv_1, -0.299666316236 AS sv_2, 1.54337636585 AS sv_3, -1.09261833748 AS sv_4, 0.85872940674 AS sv_5, -0.576870481186 AS sv_6, 0.381639848946 AS sv_7, -1.4901396844 AS sv_8, -0.197535430353 AS sv_9 UNION ALL SELECT 8 AS sv_idx, -0.118761966802 AS dual_coeff, -0.513567547036 AS sv_0, -1.49952213925 AS sv_1, 3.68100072455 AS sv_2, 1.60930902808 AS sv_3, 0.0246840487071 AS sv_4, 1.0965351527 AS sv_5, -0.870556030109 AS sv_6, -0.93818040463 AS sv_7, -0.320582689182 AS sv_8, 1.46903207689 AS sv_9) AS "Values"), 
kernel_dp_0_1 AS 
(SELECT t."KEY" AS "KEY", t.dot_product AS dot_product 
FROM (SELECT full_join_data_sv."KEY" AS "KEY", sum(full_join_data_sv.dot_prod1) + 0.853286487473 AS dot_product 
FROM (SELECT "ADS"."KEY" AS "KEY", "SV_data_0_1".dual_coeff * ("ADS"."Feature_0" * "SV_data_0_1".sv_0 + "ADS"."Feature_1" * "SV_data_0_1".sv_1 + "ADS"."Feature_2" * "SV_data_0_1".sv_2 + "ADS"."Feature_3" * "SV_data_0_1".sv_3 + "ADS"."Feature_4" * "SV_data_0_1".sv_4 + "ADS"."Feature_5" * "SV_data_0_1".sv_5 + "ADS"."Feature_6" * "SV_data_0_1".sv_6 + "ADS"."Feature_7" * "SV_data_0_1".sv_7 + "ADS"."Feature_8" * "SV_data_0_1".sv_8 + "ADS"."Feature_9" * "SV_data_0_1".sv_9) AS dot_prod1 
FROM "FourClass_10" AS "ADS", "SV_data_0_1") AS full_join_data_sv GROUP BY full_join_data_sv."KEY") AS t), 
kernel_cte_0_1 AS 
(SELECT kernel_dp_0_1."KEY" AS "KEY", 0 AS "OVO_Class1", 1 AS "OVO_Class2", CASE WHEN (-kernel_dp_0_1.dot_product > 0.0) THEN 1 ELSE 0 END AS "OVO_Decision", coalesce(-kernel_dp_0_1.dot_product, 1.0 / (1.0 + exp((-kernel_dp_0_1.dot_product) * -0.757162436917 + -0.137520372642))) AS "OVO_Confidence" 
FROM kernel_dp_0_1), 
"SV_data_0_2" AS 
(SELECT "Values".sv_idx AS sv_idx, "Values".dual_coeff AS dual_coeff, "Values".sv_0 AS sv_0, "Values".sv_1 AS sv_1, "Values".sv_2 AS sv_2, "Values".sv_3 AS sv_3, "Values".sv_4 AS sv_4, "Values".sv_5 AS sv_5, "Values".sv_6 AS sv_6, "Values".sv_7 AS sv_7, "Values".sv_8 AS sv_8, "Values".sv_9 AS sv_9 
FROM (SELECT 0 AS sv_idx, 0.0814088308883 AS dual_coeff, 1.58342267689 AS sv_0, 0.95702124876 AS sv_1, 0.302573623471 AS sv_2, -1.23434347354 AS sv_3, 1.02050334361 AS sv_4, -0.260498566987 AS sv_5, 0.937998335121 AS sv_6, -3.62718337507 AS sv_7, -0.248179493237 AS sv_8, 1.18814586239 AS sv_9 UNION ALL SELECT 1 AS sv_idx, 0.032889172064 AS dual_coeff, -2.00832204994 AS sv_0, 0.645603036725 AS sv_1, -0.644199123075 AS sv_2, 0.153841086912 AS sv_3, 1.55176291576 AS sv_4, -0.286080252964 AS sv_5, 0.0538735532671 AS sv_6, 1.1125525174 AS sv_7, 0.786512492701 AS sv_8, 1.36879310668 AS sv_9 UNION ALL SELECT 2 AS sv_idx, 0.136642598488 AS dual_coeff, 2.81077022815 AS sv_0, -0.201158831548 AS sv_1, -1.50766789014 AS sv_2, -1.63809413215 AS sv_3, -0.340941107273 AS sv_4, -0.234873636352 AS sv_5, 0.701031172677 AS sv_6, -0.270023389946 AS sv_7, 1.99614765177 AS sv_8, 0.869311275668 AS sv_9 UNION ALL SELECT 3 AS sv_idx, 0.0 AS dual_coeff, -0.168261988038 AS sv_0, -0.231802161756 AS sv_1, 1.21796040423 AS sv_2, 1.48320064569 AS sv_3, 0.854260454302 AS sv_4, -0.387010233854 AS sv_5, -0.716935868036 AS sv_6, 1.3802210748 AS sv_7, -0.754282569202 AS sv_8, -1.75311962365 AS sv_9 UNION ALL SELECT 4 AS sv_idx, 0.0705353299711 AS dual_coeff, -0.604295155104 AS sv_0, -1.05330703267 AS sv_1, 0.2959483112 AS sv_2, 0.206679948399 AS sv_3, 0.0934547248693 AS sv_4, 0.433591560638 AS sv_5, -0.308688088583 AS sv_6, 1.51828896682 AS sv_7, 1.20932143725 AS sv_8, 0.515610598609 AS sv_9 UNION ALL SELECT 9 AS sv_idx, -0.137190000768 AS dual_coeff, 0.735939446916 AS sv_0, -1.17415539915 AS sv_1, -1.27566390387 AS sv_2, -1.38660749101 AS sv_3, -2.70746344111 AS sv_4, 0.643359212181 AS sv_5, 0.291705102267 AS sv_6, 0.109165945969 AS sv_7, 0.228854816092 AS sv_8, 0.107158511968 AS sv_9 UNION ALL SELECT 10 AS sv_idx, -0.0 AS dual_coeff, -1.41131305713 AS sv_0, -1.07787438529 AS sv_1, 0.0870533895613 AS sv_2, -3.63597761004 AS sv_3, 0.590949568646 AS sv_4, -1.27100776692 AS sv_5, 1.77036786366 AS sv_6, -4.63830005504 AS sv_7, 0.999564916 AS sv_8, 0.64300723933 AS sv_9 UNION ALL SELECT 11 AS sv_idx, -0.184285930644 AS dual_coeff, -0.0323406977307 AS sv_0, -0.281843952891 AS sv_1, -1.62884042002 AS sv_2, -2.87341252622 AS sv_3, 1.21144045347 AS sv_4, -0.144661843645 AS sv_5, 1.39881651817 AS sv_6, -1.36974854644 AS sv_7, -0.0327725302032 AS sv_8, 0.458287938766 AS sv_9) AS "Values"), 
kernel_dp_0_2 AS 
(SELECT t_1."KEY" AS "KEY", t_1.dot_product AS dot_product 
FROM (SELECT full_join_data_sv_1."KEY" AS "KEY", sum(full_join_data_sv_1.dot_prod1) + 0.624013235826 AS dot_product 
FROM (SELECT "ADS"."KEY" AS "KEY", "SV_data_0_2".dual_coeff * ("ADS"."Feature_0" * "SV_data_0_2".sv_0 + "ADS"."Feature_1" * "SV_data_0_2".sv_1 + "ADS"."Feature_2" * "SV_data_0_2".sv_2 + "ADS"."Feature_3" * "SV_data_0_2".sv_3 + "ADS"."Feature_4" * "SV_data_0_2".sv_4 + "ADS"."Feature_5" * "SV_data_0_2".sv_5 + "ADS"."Feature_6" * "SV_data_0_2".sv_6 + "ADS"."Feature_7" * "SV_data_0_2".sv_7 + "ADS"."Feature_8" * "SV_data_0_2".sv_8 + "ADS"."Feature_9" * "SV_data_0_2".sv_9) AS dot_prod1 
FROM "FourClass_10" AS "ADS", "SV_data_0_2") AS full_join_data_sv_1 GROUP BY full_join_data_sv_1."KEY") AS t_1), 
kernel_cte_0_2 AS 
(SELECT kernel_dp_0_2."KEY" AS "KEY", 0 AS "OVO_Class1", 2 AS "OVO_Class2", CASE WHEN (-kernel_dp_0_2.dot_product > 0.0) THEN 1 ELSE 0 END AS "OVO_Decision", coalesce(-kernel_dp_0_2.dot_product, 1.0 / (1.0 + exp((-kernel_dp_0_2.dot_product) * -1.70817128112 + 0.00902887143558))) AS "OVO_Confidence" 
FROM kernel_dp_0_2), 
"SV_data_0_3" AS 
(SELECT "Values".sv_idx AS sv_idx, "Values".dual_coeff AS dual_coeff, "Values".sv_0 AS sv_0, "Values".sv_1 AS sv_1, "Values".sv_2 AS sv_2, "Values".sv_3 AS sv_3, "Values".sv_4 AS sv_4, "Values".sv_5 AS sv_5, "Values".sv_6 AS sv_6, "Values".sv_7 AS sv_7, "Values".sv_8 AS sv_8, "Values".sv_9 AS sv_9 
FROM (SELECT 0 AS sv_idx, 0.286299407711 AS dual_coeff, 1.58342267689 AS sv_0, 0.95702124876 AS sv_1, 0.302573623471 AS sv_2, -1.23434347354 AS sv_3, 1.02050334361 AS sv_4, -0.260498566987 AS sv_5, 0.937998335121 AS sv_6, -3.62718337507 AS sv_7, -0.248179493237 AS sv_8, 1.18814586239 AS sv_9 UNION ALL SELECT 1 AS sv_idx, 0.0379373220911 AS dual_coeff, -2.00832204994 AS sv_0, 0.645603036725 AS sv_1, -0.644199123075 AS sv_2, 0.153841086912 AS sv_3, 1.55176291576 AS sv_4, -0.286080252964 AS sv_5, 0.0538735532671 AS sv_6, 1.1125525174 AS sv_7, 0.786512492701 AS sv_8, 1.36879310668 AS sv_9 UNION ALL SELECT 2 AS sv_idx, 0.0 AS dual_coeff, 2.81077022815 AS sv_0, -0.201158831548 AS sv_1, -1.50766789014 AS sv_2, -1.63809413215 AS sv_3, -0.340941107273 AS sv_4, -0.234873636352 AS sv_5, 0.701031172677 AS sv_6, -0.270023389946 AS sv_7, 1.99614765177 AS sv_8, 0.869311275668 AS sv_9 UNION ALL SELECT 3 AS sv_idx, 0.0947606261284 AS dual_coeff, -0.168261988038 AS sv_0, -0.231802161756 AS sv_1, 1.21796040423 AS sv_2, 1.48320064569 AS sv_3, 0.854260454302 AS sv_4, -0.387010233854 AS sv_5, -0.716935868036 AS sv_6, 1.3802210748 AS sv_7, -0.754282569202 AS sv_8, -1.75311962365 AS sv_9 UNION ALL SELECT 4 AS sv_idx, 0.0587606416773 AS dual_coeff, -0.604295155104 AS sv_0, -1.05330703267 AS sv_1, 0.2959483112 AS sv_2, 0.206679948399 AS sv_3, 0.0934547248693 AS sv_4, 0.433591560638 AS sv_5, -0.308688088583 AS sv_6, 1.51828896682 AS sv_7, 1.20932143725 AS sv_8, 0.515610598609 AS sv_9 UNION ALL SELECT 12 AS sv_idx, -0.0 AS dual_coeff, -0.016853103608 AS sv_0, 2.31674638008 AS sv_1, -0.914589488818 AS sv_2, 0.678559483209 AS sv_3, -1.15701570105 AS sv_4, 0.8644006299 AS sv_5, 0.00698491643433 AS sv_6, -1.37061178539 AS sv_7, -0.922595206617 AS sv_8, -1.76544973669 AS sv_9 UNION ALL SELECT 13 AS sv_idx, -0.379567954456 AS dual_coeff, 0.016631584362 AS sv_0, 0.913454121043 AS sv_1, 0.673397490805 AS sv_2, -0.130980761584 AS sv_3, -0.61540934478 AS sv_4, -0.548574995285 AS sv_5, 0.304101409215 AS sv_6, -3.02401050302 AS sv_7, -0.080428118335 AS sv_8, 0.639202058719 AS sv_9 UNION ALL SELECT 14 AS sv_idx, -0.0 AS dual_coeff, -1.29393614355 AS sv_0, 0.533433709928 AS sv_1, -0.171110363273 AS sv_2, -0.114457340212 AS sv_3, -2.41766167361 AS sv_4, -2.12779475251 AS sv_5, 0.0750466900375 AS sv_6, -1.90925946876 AS sv_7, -1.65330000804 AS sv_8, 0.0155955855361 AS sv_9 UNION ALL SELECT 15 AS sv_idx, -0.024398261157 AS dual_coeff, -0.291573587963 AS sv_0, 0.871828315414 AS sv_1, 1.83061563443 AS sv_2, 2.86104823526 AS sv_3, -0.32082169175 AS sv_4, 0.552204344225 AS sv_5, -1.21602751255 AS sv_6, 0.557278901596 AS sv_7, 0.471519880982 AS sv_8, 0.224186959113 AS sv_9 UNION ALL SELECT 16 AS sv_idx, -0.0737917819948 AS dual_coeff, 0.432931082919 AS sv_0, 1.99181128119 AS sv_1, -1.17821636441 AS sv_2, 1.60507074498 AS sv_3, -0.810536975719 AS sv_4, -0.963038774874 AS sv_5, -0.576157983043 AS sv_6, 1.35979038448 AS sv_7, 0.548504911133 AS sv_8, 0.749179211488 AS sv_9) AS "Values"), 
kernel_dp_0_3 AS 
(SELECT t_2."KEY" AS "KEY", t_2.dot_product AS dot_product 
FROM (SELECT full_join_data_sv_2."KEY" AS "KEY", sum(full_join_data_sv_2.dot_prod1) + 0.546935552782 AS dot_product 
FROM (SELECT "ADS"."KEY" AS "KEY", "SV_data_0_3".dual_coeff * ("ADS"."Feature_0" * "SV_data_0_3".sv_0 + "ADS"."Feature_1" * "SV_data_0_3".sv_1 + "ADS"."Feature_2" * "SV_data_0_3".sv_2 + "ADS"."Feature_3" * "SV_data_0_3".sv_3 + "ADS"."Feature_4" * "SV_data_0_3".sv_4 + "ADS"."Feature_5" * "SV_data_0_3".sv_5 + "ADS"."Feature_6" * "SV_data_0_3".sv_6 + "ADS"."Feature_7" * "SV_data_0_3".sv_7 + "ADS"."Feature_8" * "SV_data_0_3".sv_8 + "ADS"."Feature_9" * "SV_data_0_3".sv_9) AS dot_prod1 
FROM "FourClass_10" AS "ADS", "SV_data_0_3") AS full_join_data_sv_2 GROUP BY full_join_data_sv_2."KEY") AS t_2), 
kernel_cte_0_3 AS 
(SELECT kernel_dp_0_3."KEY" AS "KEY", 0 AS "OVO_Class1", 3 AS "OVO_Class2", CASE WHEN (-kernel_dp_0_3.dot_product > 0.0) THEN 1 ELSE 0 END AS "OVO_Decision", coalesce(-kernel_dp_0_3.dot_product, 1.0 / (1.0 + exp((-kernel_dp_0_3.dot_product) * -1.52873551785 + -0.167645147236))) AS "OVO_Confidence" 
FROM kernel_dp_0_3), 
"SV_data_1_2" AS 
(SELECT "Values".sv_idx AS sv_idx, "Values".dual_coeff AS dual_coeff, "Values".sv_0 AS sv_0, "Values".sv_1 AS sv_1, "Values".sv_2 AS sv_2, "Values".sv_3 AS sv_3, "Values".sv_4 AS sv_4, "Values".sv_5 AS sv_5, "Values".sv_6 AS sv_6, "Values".sv_7 AS sv_7, "Values".sv_8 AS sv_8, "Values".sv_9 AS sv_9 
FROM (SELECT 5 AS sv_idx, 0.0 AS dual_coeff, -0.890806535112 AS sv_0, 0.646413753832 AS sv_1, 1.84464561075 AS sv_2, 3.01093779084 AS sv_3, 0.948001227823 AS sv_4, -1.35333653557 AS sv_5, -1.29910530899 AS sv_6, 1.75994868555 AS sv_7, -0.506360699271 AS sv_8, 0.646864407001 AS sv_9 UNION ALL SELECT 6 AS sv_idx, 0.0215004749711 AS dual_coeff, 0.362141924693 AS sv_0, 1.1485510551 AS sv_1, 0.381384199136 AS sv_2, 1.83383472517 AS sv_3, -0.766983073168 AS sv_4, -0.419320738817 AS sv_5, -0.742584426393 AS sv_6, 0.493851471812 AS sv_7, 0.547080062802 AS sv_8, -1.27386810897 AS sv_9 UNION ALL SELECT 7 AS sv_idx, 0.058422207099 AS dual_coeff, 0.122401886536 AS sv_0, 1.51961908305 AS sv_1, -0.299666316236 AS sv_2, 1.54337636585 AS sv_3, -1.09261833748 AS sv_4, 0.85872940674 AS sv_5, -0.576870481186 AS sv_6, 0.381639848946 AS sv_7, -1.4901396844 AS sv_8, -0.197535430353 AS sv_9 UNION ALL SELECT 8 AS sv_idx, 0.0104930139988 AS dual_coeff, -0.513567547036 AS sv_0, -1.49952213925 AS sv_1, 3.68100072455 AS sv_2, 1.60930902808 AS sv_3, 0.0246840487071 AS sv_4, 1.0965351527 AS sv_5, -0.870556030109 AS sv_6, -0.93818040463 AS sv_7, -0.320582689182 AS sv_8, 1.46903207689 AS sv_9 UNION ALL SELECT 9 AS sv_idx, -0.0766471260604 AS dual_coeff, 0.735939446916 AS sv_0, -1.17415539915 AS sv_1, -1.27566390387 AS sv_2, -1.38660749101 AS sv_3, -2.70746344111 AS sv_4, 0.643359212181 AS sv_5, 0.291705102267 AS sv_6, 0.109165945969 AS sv_7, 0.228854816092 AS sv_8, 0.107158511968 AS sv_9 UNION ALL SELECT 10 AS sv_idx, -0.0 AS dual_coeff, -1.41131305713 AS sv_0, -1.07787438529 AS sv_1, 0.0870533895613 AS sv_2, -3.63597761004 AS sv_3, 0.590949568646 AS sv_4, -1.27100776692 AS sv_5, 1.77036786366 AS sv_6, -4.63830005504 AS sv_7, 0.999564916 AS sv_8, 0.64300723933 AS sv_9 UNION ALL SELECT 11 AS sv_idx, -0.0137685700085 AS dual_coeff, -0.0323406977307 AS sv_0, -0.281843952891 AS sv_1, -1.62884042002 AS sv_2, -2.87341252622 AS sv_3, 1.21144045347 AS sv_4, -0.144661843645 AS sv_5, 1.39881651817 AS sv_6, -1.36974854644 AS sv_7, -0.0327725302032 AS sv_8, 0.458287938766 AS sv_9) AS "Values"), 
kernel_dp_1_2 AS 
(SELECT t_3."KEY" AS "KEY", t_3.dot_product AS dot_product 
FROM (SELECT full_join_data_sv_3."KEY" AS "KEY", sum(full_join_data_sv_3.dot_prod1) + 0.203450160513 AS dot_product 
FROM (SELECT "ADS"."KEY" AS "KEY", "SV_data_1_2".dual_coeff * ("ADS"."Feature_0" * "SV_data_1_2".sv_0 + "ADS"."Feature_1" * "SV_data_1_2".sv_1 + "ADS"."Feature_2" * "SV_data_1_2".sv_2 + "ADS"."Feature_3" * "SV_data_1_2".sv_3 + "ADS"."Feature_4" * "SV_data_1_2".sv_4 + "ADS"."Feature_5" * "SV_data_1_2".sv_5 + "ADS"."Feature_6" * "SV_data_1_2".sv_6 + "ADS"."Feature_7" * "SV_data_1_2".sv_7 + "ADS"."Feature_8" * "SV_data_1_2".sv_8 + "ADS"."Feature_9" * "SV_data_1_2".sv_9) AS dot_prod1 
FROM "FourClass_10" AS "ADS", "SV_data_1_2") AS full_join_data_sv_3 GROUP BY full_join_data_sv_3."KEY") AS t_3), 
kernel_cte_1_2 AS 
(SELECT kernel_dp_1_2."KEY" AS "KEY", 1 AS "OVO_Class1", 2 AS "OVO_Class2", CASE WHEN (-kernel_dp_1_2.dot_product > 0.0) THEN 1 ELSE 0 END AS "OVO_Decision", coalesce(-kernel_dp_1_2.dot_product, 1.0 / (1.0 + exp((-kernel_dp_1_2.dot_product) * -1.47348500519 + 0.130708134296))) AS "OVO_Confidence" 
FROM kernel_dp_1_2), 
"SV_data_1_3" AS 
(SELECT "Values".sv_idx AS sv_idx, "Values".dual_coeff AS dual_coeff, "Values".sv_0 AS sv_0, "Values".sv_1 AS sv_1, "Values".sv_2 AS sv_2, "Values".sv_3 AS sv_3, "Values".sv_4 AS sv_4, "Values".sv_5 AS sv_5, "Values".sv_6 AS sv_6, "Values".sv_7 AS sv_7, "Values".sv_8 AS sv_8, "Values".sv_9 AS sv_9 
FROM (SELECT 5 AS sv_idx, 0.0644591242371 AS dual_coeff, -0.890806535112 AS sv_0, 0.646413753832 AS sv_1, 1.84464561075 AS sv_2, 3.01093779084 AS sv_3, 0.948001227823 AS sv_4, -1.35333653557 AS sv_5, -1.29910530899 AS sv_6, 1.75994868555 AS sv_7, -0.506360699271 AS sv_8, 0.646864407001 AS sv_9 UNION ALL SELECT 6 AS sv_idx, 1.0 AS dual_coeff, 0.362141924693 AS sv_0, 1.1485510551 AS sv_1, 0.381384199136 AS sv_2, 1.83383472517 AS sv_3, -0.766983073168 AS sv_4, -0.419320738817 AS sv_5, -0.742584426393 AS sv_6, 0.493851471812 AS sv_7, 0.547080062802 AS sv_8, -1.27386810897 AS sv_9 UNION ALL SELECT 7 AS sv_idx, 0.978535159255 AS dual_coeff, 0.122401886536 AS sv_0, 1.51961908305 AS sv_1, -0.299666316236 AS sv_2, 1.54337636585 AS sv_3, -1.09261833748 AS sv_4, 0.85872940674 AS sv_5, -0.576870481186 AS sv_6, 0.381639848946 AS sv_7, -1.4901396844 AS sv_8, -0.197535430353 AS sv_9 UNION ALL SELECT 8 AS sv_idx, 0.1784916512 AS dual_coeff, -0.513567547036 AS sv_0, -1.49952213925 AS sv_1, 3.68100072455 AS sv_2, 1.60930902808 AS sv_3, 0.0246840487071 AS sv_4, 1.0965351527 AS sv_5, -0.870556030109 AS sv_6, -0.93818040463 AS sv_7, -0.320582689182 AS sv_8, 1.46903207689 AS sv_9 UNION ALL SELECT 12 AS sv_idx, -0.664521131396 AS dual_coeff, -0.016853103608 AS sv_0, 2.31674638008 AS sv_1, -0.914589488818 AS sv_2, 0.678559483209 AS sv_3, -1.15701570105 AS sv_4, 0.8644006299 AS sv_5, 0.00698491643433 AS sv_6, -1.37061178539 AS sv_7, -0.922595206617 AS sv_8, -1.76544973669 AS sv_9 UNION ALL SELECT 13 AS sv_idx, -0.0 AS dual_coeff, 0.016631584362 AS sv_0, 0.913454121043 AS sv_1, 0.673397490805 AS sv_2, -0.130980761584 AS sv_3, -0.61540934478 AS sv_4, -0.548574995285 AS sv_5, 0.304101409215 AS sv_6, -3.02401050302 AS sv_7, -0.080428118335 AS sv_8, 0.639202058719 AS sv_9 UNION ALL SELECT 14 AS sv_idx, -0.135960552188 AS dual_coeff, -1.29393614355 AS sv_0, 0.533433709928 AS sv_1, -0.171110363273 AS sv_2, -0.114457340212 AS sv_3, -2.41766167361 AS sv_4, -2.12779475251 AS sv_5, 0.0750466900375 AS sv_6, -1.90925946876 AS sv_7, -1.65330000804 AS sv_8, 0.0155955855361 AS sv_9 UNION ALL SELECT 15 AS sv_idx, -1.0 AS dual_coeff, -0.291573587963 AS sv_0, 0.871828315414 AS sv_1, 1.83061563443 AS sv_2, 2.86104823526 AS sv_3, -0.32082169175 AS sv_4, 0.552204344225 AS sv_5, -1.21602751255 AS sv_6, 0.557278901596 AS sv_7, 0.471519880982 AS sv_8, 0.224186959113 AS sv_9 UNION ALL SELECT 16 AS sv_idx, -0.421004251109 AS dual_coeff, 0.432931082919 AS sv_0, 1.99181128119 AS sv_1, -1.17821636441 AS sv_2, 1.60507074498 AS sv_3, -0.810536975719 AS sv_4, -0.963038774874 AS sv_5, -0.576157983043 AS sv_6, 1.35979038448 AS sv_7, 0.548504911133 AS sv_8, 0.749179211488 AS sv_9) AS "Values"), 
kernel_dp_1_3 AS 
(SELECT t_4."KEY" AS "KEY", t_4.dot_product AS dot_product 
FROM (SELECT full_join_data_sv_4."KEY" AS "KEY", sum(full_join_data_sv_4.dot_prod1) + 0.708601012196 AS dot_product 
FROM (SELECT "ADS"."KEY" AS "KEY", "SV_data_1_3".dual_coeff * ("ADS"."Feature_0" * "SV_data_1_3".sv_0 + "ADS"."Feature_1" * "SV_data_1_3".sv_1 + "ADS"."Feature_2" * "SV_data_1_3".sv_2 + "ADS"."Feature_3" * "SV_data_1_3".sv_3 + "ADS"."Feature_4" * "SV_data_1_3".sv_4 + "ADS"."Feature_5" * "SV_data_1_3".sv_5 + "ADS"."Feature_6" * "SV_data_1_3".sv_6 + "ADS"."Feature_7" * "SV_data_1_3".sv_7 + "ADS"."Feature_8" * "SV_data_1_3".sv_8 + "ADS"."Feature_9" * "SV_data_1_3".sv_9) AS dot_prod1 
FROM "FourClass_10" AS "ADS", "SV_data_1_3") AS full_join_data_sv_4 GROUP BY full_join_data_sv_4."KEY") AS t_4), 
kernel_cte_1_3 AS 
(SELECT kernel_dp_1_3."KEY" AS "KEY", 1 AS "OVO_Class1", 3 AS "OVO_Class2", CASE WHEN (-kernel_dp_1_3.dot_product > 0.0) THEN 1 ELSE 0 END AS "OVO_Decision", coalesce(-kernel_dp_1_3.dot_product, 1.0 / (1.0 + exp((-kernel_dp_1_3.dot_product) * -0.16763613351 + 0.421564818439))) AS "OVO_Confidence" 
FROM kernel_dp_1_3), 
"SV_data_2_3" AS 
(SELECT "Values".sv_idx AS sv_idx, "Values".dual_coeff AS dual_coeff, "Values".sv_0 AS sv_0, "Values".sv_1 AS sv_1, "Values".sv_2 AS sv_2, "Values".sv_3 AS sv_3, "Values".sv_4 AS sv_4, "Values".sv_5 AS sv_5, "Values".sv_6 AS sv_6, "Values".sv_7 AS sv_7, "Values".sv_8 AS sv_8, "Values".sv_9 AS sv_9 
FROM (SELECT 9 AS sv_idx, 0.0835849852449 AS dual_coeff, 0.735939446916 AS sv_0, -1.17415539915 AS sv_1, -1.27566390387 AS sv_2, -1.38660749101 AS sv_3, -2.70746344111 AS sv_4, 0.643359212181 AS sv_5, 0.291705102267 AS sv_6, 0.109165945969 AS sv_7, 0.228854816092 AS sv_8, 0.107158511968 AS sv_9 UNION ALL SELECT 10 AS sv_idx, 0.0713048521631 AS dual_coeff, -1.41131305713 AS sv_0, -1.07787438529 AS sv_1, 0.0870533895613 AS sv_2, -3.63597761004 AS sv_3, 0.590949568646 AS sv_4, -1.27100776692 AS sv_5, 1.77036786366 AS sv_6, -4.63830005504 AS sv_7, 0.999564916 AS sv_8, 0.64300723933 AS sv_9 UNION ALL SELECT 11 AS sv_idx, 0.0 AS dual_coeff, -0.0323406977307 AS sv_0, -0.281843952891 AS sv_1, -1.62884042002 AS sv_2, -2.87341252622 AS sv_3, 1.21144045347 AS sv_4, -0.144661843645 AS sv_5, 1.39881651817 AS sv_6, -1.36974854644 AS sv_7, -0.0327725302032 AS sv_8, 0.458287938766 AS sv_9 UNION ALL SELECT 12 AS sv_idx, -0.0 AS dual_coeff, -0.016853103608 AS sv_0, 2.31674638008 AS sv_1, -0.914589488818 AS sv_2, 0.678559483209 AS sv_3, -1.15701570105 AS sv_4, 0.8644006299 AS sv_5, 0.00698491643433 AS sv_6, -1.37061178539 AS sv_7, -0.922595206617 AS sv_8, -1.76544973669 AS sv_9 UNION ALL SELECT 13 AS sv_idx, -0.120224984582 AS dual_coeff, 0.016631584362 AS sv_0, 0.913454121043 AS sv_1, 0.673397490805 AS sv_2, -0.130980761584 AS sv_3, -0.61540934478 AS sv_4, -0.548574995285 AS sv_5, 0.304101409215 AS sv_6, -3.02401050302 AS sv_7, -0.080428118335 AS sv_8, 0.639202058719 AS sv_9 UNION ALL SELECT 14 AS sv_idx, -0.0346648528258 AS dual_coeff, -1.29393614355 AS sv_0, 0.533433709928 AS sv_1, -0.171110363273 AS sv_2, -0.114457340212 AS sv_3, -2.41766167361 AS sv_4, -2.12779475251 AS sv_5, 0.0750466900375 AS sv_6, -1.90925946876 AS sv_7, -1.65330000804 AS sv_8, 0.0155955855361 AS sv_9 UNION ALL SELECT 15 AS sv_idx, -0.0 AS dual_coeff, -0.291573587963 AS sv_0, 0.871828315414 AS sv_1, 1.83061563443 AS sv_2, 2.86104823526 AS sv_3, -0.32082169175 AS sv_4, 0.552204344225 AS sv_5, -1.21602751255 AS sv_6, 0.557278901596 AS sv_7, 0.471519880982 AS sv_8, 0.224186959113 AS sv_9 UNION ALL SELECT 16 AS sv_idx, -0.0 AS dual_coeff, 0.432931082919 AS sv_0, 1.99181128119 AS sv_1, -1.17821636441 AS sv_2, 1.60507074498 AS sv_3, -0.810536975719 AS sv_4, -0.963038774874 AS sv_5, -0.576157983043 AS sv_6, 1.35979038448 AS sv_7, 0.548504911133 AS sv_8, 0.749179211488 AS sv_9) AS "Values"), 
kernel_dp_2_3 AS 
(SELECT t_5."KEY" AS "KEY", t_5.dot_product AS dot_product 
FROM (SELECT full_join_data_sv_5."KEY" AS "KEY", sum(full_join_data_sv_5.dot_prod1) + -0.290845559637 AS dot_product 
FROM (SELECT "ADS"."KEY" AS "KEY", "SV_data_2_3".dual_coeff * ("ADS"."Feature_0" * "SV_data_2_3".sv_0 + "ADS"."Feature_1" * "SV_data_2_3".sv_1 + "ADS"."Feature_2" * "SV_data_2_3".sv_2 + "ADS"."Feature_3" * "SV_data_2_3".sv_3 + "ADS"."Feature_4" * "SV_data_2_3".sv_4 + "ADS"."Feature_5" * "SV_data_2_3".sv_5 + "ADS"."Feature_6" * "SV_data_2_3".sv_6 + "ADS"."Feature_7" * "SV_data_2_3".sv_7 + "ADS"."Feature_8" * "SV_data_2_3".sv_8 + "ADS"."Feature_9" * "SV_data_2_3".sv_9) AS dot_prod1 
FROM "FourClass_10" AS "ADS", "SV_data_2_3") AS full_join_data_sv_5 GROUP BY full_join_data_sv_5."KEY") AS t_5), 
kernel_cte_2_3 AS 
(SELECT kernel_dp_2_3."KEY" AS "KEY", 2 AS "OVO_Class1", 3 AS "OVO_Class2", CASE WHEN (-kernel_dp_2_3.dot_product > 0.0) THEN 1 ELSE 0 END AS "OVO_Decision", coalesce(-kernel_dp_2_3.dot_product, 1.0 / (1.0 + exp((-kernel_dp_2_3.dot_product) * -1.53339115428 + -0.135072571481))) AS "OVO_Confidence" 
FROM kernel_dp_2_3), 
"OVO_Score_Union_CTE" AS 
(SELECT ensemble_score_union."KEY" AS "KEY", ensemble_score_union."OVO_Class1" AS "OVO_Class1", ensemble_score_union."OVO_Class2" AS "OVO_Class2", ensemble_score_union."OVO_Decision" AS "OVO_Decision", ensemble_score_union."OVO_Confidence" AS "OVO_Confidence" 
FROM (SELECT kernel_cte_0_1."KEY" AS "KEY", kernel_cte_0_1."OVO_Class1" AS "OVO_Class1", kernel_cte_0_1."OVO_Class2" AS "OVO_Class2", kernel_cte_0_1."OVO_Decision" AS "OVO_Decision", kernel_cte_0_1."OVO_Confidence" AS "OVO_Confidence" 
FROM kernel_cte_0_1 UNION ALL SELECT kernel_cte_0_2."KEY" AS "KEY", kernel_cte_0_2."OVO_Class1" AS "OVO_Class1", kernel_cte_0_2."OVO_Class2" AS "OVO_Class2", kernel_cte_0_2."OVO_Decision" AS "OVO_Decision", kernel_cte_0_2."OVO_Confidence" AS "OVO_Confidence" 
FROM kernel_cte_0_2 UNION ALL SELECT kernel_cte_0_3."KEY" AS "KEY", kernel_cte_0_3."OVO_Class1" AS "OVO_Class1", kernel_cte_0_3."OVO_Class2" AS "OVO_Class2", kernel_cte_0_3."OVO_Decision" AS "OVO_Decision", kernel_cte_0_3."OVO_Confidence" AS "OVO_Confidence" 
FROM kernel_cte_0_3 UNION ALL SELECT kernel_cte_1_2."KEY" AS "KEY", kernel_cte_1_2."OVO_Class1" AS "OVO_Class1", kernel_cte_1_2."OVO_Class2" AS "OVO_Class2", kernel_cte_1_2."OVO_Decision" AS "OVO_Decision", kernel_cte_1_2."OVO_Confidence" AS "OVO_Confidence" 
FROM kernel_cte_1_2 UNION ALL SELECT kernel_cte_1_3."KEY" AS "KEY", kernel_cte_1_3."OVO_Class1" AS "OVO_Class1", kernel_cte_1_3."OVO_Class2" AS "OVO_Class2", kernel_cte_1_3."OVO_Decision" AS "OVO_Decision", kernel_cte_1_3."OVO_Confidence" AS "OVO_Confidence" 
FROM kernel_cte_1_3 UNION ALL SELECT kernel_cte_2_3."KEY" AS "KEY", kernel_cte_2_3."OVO_Class1" AS "OVO_Class1", kernel_cte_2_3."OVO_Class2" AS "OVO_Class2", kernel_cte_2_3."OVO_Decision" AS "OVO_Decision", kernel_cte_2_3."OVO_Confidence" AS "OVO_Confidence" 
FROM kernel_cte_2_3) AS ensemble_score_union), 
"OVO_Votes" AS 
(SELECT "Votes_Sel"."KEY" AS "KEY", "Votes_Sel"."OVO_Vote_0" AS "OVO_Vote_0", "Votes_Sel"."OVO_SumConfidence_0" AS "OVO_SumConfidence_0", "Votes_Sel"."OVO_Vote_1" AS "OVO_Vote_1", "Votes_Sel"."OVO_SumConfidence_1" AS "OVO_SumConfidence_1", "Votes_Sel"."OVO_Vote_2" AS "OVO_Vote_2", "Votes_Sel"."OVO_SumConfidence_2" AS "OVO_SumConfidence_2", "Votes_Sel"."OVO_Vote_3" AS "OVO_Vote_3", "Votes_Sel"."OVO_SumConfidence_3" AS "OVO_SumConfidence_3" 
FROM (SELECT "OVO_Score_Union_CTE"."KEY" AS "KEY", sum(CASE WHEN ("OVO_Score_Union_CTE"."OVO_Class1" = 0 OR "OVO_Score_Union_CTE"."OVO_Class2" = 0) THEN 1 ELSE 0 END * (CASE WHEN ("OVO_Score_Union_CTE"."OVO_Decision" = 0 AND "OVO_Score_Union_CTE"."OVO_Class1" = 0) THEN 1 ELSE 0 END + CASE WHEN ("OVO_Score_Union_CTE"."OVO_Decision" = 1 AND "OVO_Score_Union_CTE"."OVO_Class2" = 0) THEN 1 ELSE 0 END)) AS "OVO_Vote_0", sum(CASE WHEN ("OVO_Score_Union_CTE"."OVO_Class1" = 0 OR "OVO_Score_Union_CTE"."OVO_Class2" = 0) THEN 1 ELSE 0 END * "OVO_Score_Union_CTE"."OVO_Confidence" * (-CASE WHEN ("OVO_Score_Union_CTE"."OVO_Class1" = 0) THEN 1 ELSE 0 END + CASE WHEN ("OVO_Score_Union_CTE"."OVO_Class2" = 0) THEN 1 ELSE 0 END)) AS "OVO_SumConfidence_0", sum(CASE WHEN ("OVO_Score_Union_CTE"."OVO_Class1" = 1 OR "OVO_Score_Union_CTE"."OVO_Class2" = 1) THEN 1 ELSE 0 END * (CASE WHEN ("OVO_Score_Union_CTE"."OVO_Decision" = 0 AND "OVO_Score_Union_CTE"."OVO_Class1" = 1) THEN 1 ELSE 0 END + CASE WHEN ("OVO_Score_Union_CTE"."OVO_Decision" = 1 AND "OVO_Score_Union_CTE"."OVO_Class2" = 1) THEN 1 ELSE 0 END)) AS "OVO_Vote_1", sum(CASE WHEN ("OVO_Score_Union_CTE"."OVO_Class1" = 1 OR "OVO_Score_Union_CTE"."OVO_Class2" = 1) THEN 1 ELSE 0 END * "OVO_Score_Union_CTE"."OVO_Confidence" * (-CASE WHEN ("OVO_Score_Union_CTE"."OVO_Class1" = 1) THEN 1 ELSE 0 END + CASE WHEN ("OVO_Score_Union_CTE"."OVO_Class2" = 1) THEN 1 ELSE 0 END)) AS "OVO_SumConfidence_1", sum(CASE WHEN ("OVO_Score_Union_CTE"."OVO_Class1" = 2 OR "OVO_Score_Union_CTE"."OVO_Class2" = 2) THEN 1 ELSE 0 END * (CASE WHEN ("OVO_Score_Union_CTE"."OVO_Decision" = 0 AND "OVO_Score_Union_CTE"."OVO_Class1" = 2) THEN 1 ELSE 0 END + CASE WHEN ("OVO_Score_Union_CTE"."OVO_Decision" = 1 AND "OVO_Score_Union_CTE"."OVO_Class2" = 2) THEN 1 ELSE 0 END)) AS "OVO_Vote_2", sum(CASE WHEN ("OVO_Score_Union_CTE"."OVO_Class1" = 2 OR "OVO_Score_Union_CTE"."OVO_Class2" = 2) THEN 1 ELSE 0 END * "OVO_Score_Union_CTE"."OVO_Confidence" * (-CASE WHEN ("OVO_Score_Union_CTE"."OVO_Class1" = 2) THEN 1 ELSE 0 END + CASE WHEN ("OVO_Score_Union_CTE"."OVO_Class2" = 2) THEN 1 ELSE 0 END)) AS "OVO_SumConfidence_2", sum(CASE WHEN ("OVO_Score_Union_CTE"."OVO_Class1" = 3 OR "OVO_Score_Union_CTE"."OVO_Class2" = 3) THEN 1 ELSE 0 END * (CASE WHEN ("OVO_Score_Union_CTE"."OVO_Decision" = 0 AND "OVO_Score_Union_CTE"."OVO_Class1" = 3) THEN 1 ELSE 0 END + CASE WHEN ("OVO_Score_Union_CTE"."OVO_Decision" = 1 AND "OVO_Score_Union_CTE"."OVO_Class2" = 3) THEN 1 ELSE 0 END)) AS "OVO_Vote_3", sum(CASE WHEN ("OVO_Score_Union_CTE"."OVO_Class1" = 3 OR "OVO_Score_Union_CTE"."OVO_Class2" = 3) THEN 1 ELSE 0 END * "OVO_Score_Union_CTE"."OVO_Confidence" * (-CASE WHEN ("OVO_Score_Union_CTE"."OVO_Class1" = 3) THEN 1 ELSE 0 END + CASE WHEN ("OVO_Score_Union_CTE"."OVO_Class2" = 3) THEN 1 ELSE 0 END)) AS "OVO_SumConfidence_3" 
FROM "OVO_Score_Union_CTE" GROUP BY "OVO_Score_Union_CTE"."KEY") AS "Votes_Sel"), 
"OVO_SumConf_CTE" AS 
(SELECT "Values"."KEY" AS "KEY", "Values"."OVO_SumConfidence" AS "OVO_SumConfidence" 
FROM (SELECT "OVO_Votes"."KEY" AS "KEY", "OVO_Votes"."OVO_SumConfidence_0" AS "OVO_SumConfidence" 
FROM "OVO_Votes" UNION ALL SELECT "OVO_Votes"."KEY" AS "KEY", "OVO_Votes"."OVO_SumConfidence_1" AS "OVO_SumConfidence" 
FROM "OVO_Votes" UNION ALL SELECT "OVO_Votes"."KEY" AS "KEY", "OVO_Votes"."OVO_SumConfidence_2" AS "OVO_SumConfidence" 
FROM "OVO_Votes" UNION ALL SELECT "OVO_Votes"."KEY" AS "KEY", "OVO_Votes"."OVO_SumConfidence_3" AS "OVO_SumConfidence" 
FROM "OVO_Votes") AS "Values"), 
"MinMaxConf" AS 
(SELECT min("OVO_SumConf_CTE"."OVO_SumConfidence") AS "OVO_min_conf", max("OVO_SumConf_CTE"."OVO_SumConfidence") AS "OVO_max_conf" 
FROM "OVO_SumConf_CTE"), 
"OVO_Votes_WithScale" AS 
(SELECT "OVO_Votes"."KEY" AS "KEY", "OVO_Votes"."OVO_Vote_0" AS "OVO_Vote_0", "OVO_Votes"."OVO_SumConfidence_0" AS "OVO_SumConfidence_0", "OVO_Votes"."OVO_Vote_1" AS "OVO_Vote_1", "OVO_Votes"."OVO_SumConfidence_1" AS "OVO_SumConfidence_1", "OVO_Votes"."OVO_Vote_2" AS "OVO_Vote_2", "OVO_Votes"."OVO_SumConfidence_2" AS "OVO_SumConfidence_2", "OVO_Votes"."OVO_Vote_3" AS "OVO_Vote_3", "OVO_Votes"."OVO_SumConfidence_3" AS "OVO_SumConfidence_3", CASE WHEN (abs("MinMaxConf"."OVO_min_conf") >= abs("MinMaxConf"."OVO_max_conf")) THEN abs("MinMaxConf"."OVO_min_conf") ELSE abs("MinMaxConf"."OVO_max_conf") END AS max_abs_confidence, CASE WHEN ("MinMaxConf"."OVO_max_conf" - "MinMaxConf"."OVO_min_conf" <= 0.0) THEN 0.0 ELSE 0.4999999999999998 / CASE WHEN (abs("MinMaxConf"."OVO_min_conf") >= abs("MinMaxConf"."OVO_max_conf")) THEN abs("MinMaxConf"."OVO_min_conf") ELSE abs("MinMaxConf"."OVO_max_conf") END END AS "OVO_Scale" 
FROM "OVO_Votes", "MinMaxConf"), 
"KernAggregate_CTE" AS 
(SELECT "OVO_Votes_WithScale"."KEY" AS "KEY", "OVO_Votes_WithScale"."OVO_Vote_0" AS "OVO_Vote_0", "OVO_Votes_WithScale"."OVO_SumConfidence_0" AS "OVO_SumConfidence_0", "OVO_Votes_WithScale"."OVO_Vote_1" AS "OVO_Vote_1", "OVO_Votes_WithScale"."OVO_SumConfidence_1" AS "OVO_SumConfidence_1", "OVO_Votes_WithScale"."OVO_Vote_2" AS "OVO_Vote_2", "OVO_Votes_WithScale"."OVO_SumConfidence_2" AS "OVO_SumConfidence_2", "OVO_Votes_WithScale"."OVO_Vote_3" AS "OVO_Vote_3", "OVO_Votes_WithScale"."OVO_SumConfidence_3" AS "OVO_SumConfidence_3", "OVO_Votes_WithScale".max_abs_confidence AS max_abs_confidence, "OVO_Votes_WithScale"."OVO_Scale" AS "OVO_Scale", "OVO_Votes_WithScale"."OVO_Vote_0" + "OVO_Votes_WithScale"."OVO_Scale" * "OVO_Votes_WithScale"."OVO_SumConfidence_0" AS "Score_0", "OVO_Votes_WithScale"."OVO_Vote_1" + "OVO_Votes_WithScale"."OVO_Scale" * "OVO_Votes_WithScale"."OVO_SumConfidence_1" AS "Score_1", "OVO_Votes_WithScale"."OVO_Vote_2" + "OVO_Votes_WithScale"."OVO_Scale" * "OVO_Votes_WithScale"."OVO_SumConfidence_2" AS "Score_2", "OVO_Votes_WithScale"."OVO_Vote_3" + "OVO_Votes_WithScale"."OVO_Scale" * "OVO_Votes_WithScale"."OVO_SumConfidence_3" AS "Score_3" 
FROM "OVO_Votes_WithScale"), 
orig_cte AS 
(SELECT "KernAggregate_CTE"."KEY" AS "KEY", "KernAggregate_CTE"."Score_0" AS "Score_0", "KernAggregate_CTE"."Score_1" AS "Score_1", "KernAggregate_CTE"."Score_2" AS "Score_2", "KernAggregate_CTE"."Score_3" AS "Score_3", CAST(NULL AS FLOAT) AS "Proba_0", CAST(NULL AS FLOAT) AS "Proba_1", CAST(NULL AS FLOAT) AS "Proba_2", CAST(NULL AS FLOAT) AS "Proba_3", CAST(NULL AS FLOAT) AS "LogProba_0", CAST(NULL AS FLOAT) AS "LogProba_1", CAST(NULL AS FLOAT) AS "LogProba_2", CAST(NULL AS FLOAT) AS "LogProba_3", CAST(NULL AS INTEGER) AS "Decision", CAST(NULL AS FLOAT) AS "DecisionProba" 
FROM "KernAggregate_CTE"), 
score_class_union AS 
(SELECT scu."KEY_u" AS "KEY_u", scu.class AS class, scu."LogProba" AS "LogProba", scu."Proba" AS "Proba", scu."Score" AS "Score" 
FROM (SELECT orig_cte."KEY" AS "KEY_u", 0 AS class, orig_cte."LogProba_0" AS "LogProba", orig_cte."Proba_0" AS "Proba", orig_cte."Score_0" AS "Score" 
FROM orig_cte UNION ALL SELECT orig_cte."KEY" AS "KEY_u", 1 AS class, orig_cte."LogProba_1" AS "LogProba", orig_cte."Proba_1" AS "Proba", orig_cte."Score_1" AS "Score" 
FROM orig_cte UNION ALL SELECT orig_cte."KEY" AS "KEY_u", 2 AS class, orig_cte."LogProba_2" AS "LogProba", orig_cte."Proba_2" AS "Proba", orig_cte."Score_2" AS "Score" 
FROM orig_cte UNION ALL SELECT orig_cte."KEY" AS "KEY_u", 3 AS class, orig_cte."LogProba_3" AS "LogProba", orig_cte."Proba_3" AS "Proba", orig_cte."Score_3" AS "Score" 
FROM orig_cte) AS scu), 
score_max AS 
(SELECT orig_cte."KEY" AS "KEY", orig_cte."Score_0" AS "Score_0", orig_cte."Score_1" AS "Score_1", orig_cte."Score_2" AS "Score_2", orig_cte."Score_3" AS "Score_3", orig_cte."Proba_0" AS "Proba_0", orig_cte."Proba_1" AS "Proba_1", orig_cte."Proba_2" AS "Proba_2", orig_cte."Proba_3" AS "Proba_3", orig_cte."LogProba_0" AS "LogProba_0", orig_cte."LogProba_1" AS "LogProba_1", orig_cte."LogProba_2" AS "LogProba_2", orig_cte."LogProba_3" AS "LogProba_3", orig_cte."Decision" AS "Decision", orig_cte."DecisionProba" AS "DecisionProba", max_select."KEY_m" AS "KEY_m", max_select."max_Score" AS "max_Score" 
FROM orig_cte LEFT OUTER JOIN (SELECT score_class_union."KEY_u" AS "KEY_m", max(score_class_union."Score") AS "max_Score" 
FROM score_class_union GROUP BY score_class_union."KEY_u") AS max_select ON orig_cte."KEY" = max_select."KEY_m"), 
union_with_max AS 
(SELECT score_class_union."KEY_u" AS "KEY_u", score_class_union.class AS class, score_class_union."LogProba" AS "LogProba", score_class_union."Proba" AS "Proba", score_class_union."Score" AS "Score", score_max."KEY" AS "KEY", score_max."Score_0" AS "Score_0", score_max."Score_1" AS "Score_1", score_max."Score_2" AS "Score_2", score_max."Score_3" AS "Score_3", score_max."Proba_0" AS "Proba_0", score_max."Proba_1" AS "Proba_1", score_max."Proba_2" AS "Proba_2", score_max."Proba_3" AS "Proba_3", score_max."LogProba_0" AS "LogProba_0", score_max."LogProba_1" AS "LogProba_1", score_max."LogProba_2" AS "LogProba_2", score_max."LogProba_3" AS "LogProba_3", score_max."Decision" AS "Decision", score_max."DecisionProba" AS "DecisionProba", score_max."KEY_m" AS "KEY_m", score_max."max_Score" AS "max_Score" 
FROM score_class_union LEFT OUTER JOIN score_max ON score_class_union."KEY_u" = score_max."KEY"), 
arg_max_cte AS 
(SELECT score_max."KEY" AS "KEY", score_max."Score_0" AS "Score_0", score_max."Score_1" AS "Score_1", score_max."Score_2" AS "Score_2", score_max."Score_3" AS "Score_3", score_max."Proba_0" AS "Proba_0", score_max."Proba_1" AS "Proba_1", score_max."Proba_2" AS "Proba_2", score_max."Proba_3" AS "Proba_3", score_max."LogProba_0" AS "LogProba_0", score_max."LogProba_1" AS "LogProba_1", score_max."LogProba_2" AS "LogProba_2", score_max."LogProba_3" AS "LogProba_3", score_max."Decision" AS "Decision", score_max."DecisionProba" AS "DecisionProba", score_max."KEY_m" AS "KEY_m", score_max."max_Score" AS "max_Score", "arg_max_t_Score"."KEY_Score" AS "KEY_Score", "arg_max_t_Score"."arg_max_Score" AS "arg_max_Score" 
FROM score_max LEFT OUTER JOIN (SELECT union_with_max."KEY" AS "KEY_Score", min(union_with_max.class) AS "arg_max_Score" 
FROM union_with_max 
WHERE union_with_max."max_Score" <= union_with_max."Score" GROUP BY union_with_max."KEY") AS "arg_max_t_Score" ON score_max."KEY" = "arg_max_t_Score"."KEY_Score")
 SELECT arg_max_cte."KEY" AS "KEY", arg_max_cte."Score_0" AS "Score_0", arg_max_cte."Score_1" AS "Score_1", arg_max_cte."Score_2" AS "Score_2", arg_max_cte."Score_3" AS "Score_3", arg_max_cte."Proba_0" AS "Proba_0", arg_max_cte."Proba_1" AS "Proba_1", arg_max_cte."Proba_2" AS "Proba_2", arg_max_cte."Proba_3" AS "Proba_3", CASE WHEN (arg_max_cte."Proba_0" IS NULL OR arg_max_cte."Proba_0" > 0.0) THEN ln(arg_max_cte."Proba_0") ELSE -1.79769313486231e+308 END AS "LogProba_0", CASE WHEN (arg_max_cte."Proba_1" IS NULL OR arg_max_cte."Proba_1" > 0.0) THEN ln(arg_max_cte."Proba_1") ELSE -1.79769313486231e+308 END AS "LogProba_1", CASE WHEN (arg_max_cte."Proba_2" IS NULL OR arg_max_cte."Proba_2" > 0.0) THEN ln(arg_max_cte."Proba_2") ELSE -1.79769313486231e+308 END AS "LogProba_2", CASE WHEN (arg_max_cte."Proba_3" IS NULL OR arg_max_cte."Proba_3" > 0.0) THEN ln(arg_max_cte."Proba_3") ELSE -1.79769313486231e+308 END AS "LogProba_3", arg_max_cte."arg_max_Score" AS "Decision", CASE WHEN (arg_max_cte."arg_max_Score" = 0) THEN arg_max_cte."Proba_0" WHEN (arg_max_cte."arg_max_Score" = 1) THEN arg_max_cte."Proba_1" WHEN (arg_max_cte."arg_max_Score" = 2) THEN arg_max_cte."Proba_2" WHEN (arg_max_cte."arg_max_Score" = 3) THEN arg_max_cte."Proba_3" END AS "DecisionProba" 
FROM arg_max_cte