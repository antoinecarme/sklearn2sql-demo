-- This SQL code was generated by sklearn2sql (development version).
-- Copyright 2017

WITH "DT_node_lookup" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_77" <= 0.24983039498329163) THEN 1 ELSE 2 END AS node_id_2 
FROM "BinaryClass_100" AS "ADS"), 
"DT_node_data" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values"."count" AS "count", "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Proba_0" AS "Proba_0", "Values"."LogProba_0" AS "LogProba_0", "Values"."Proba_1" AS "Proba_1", "Values"."LogProba_1" AS "LogProba_1", "Values"."Decision" AS "Decision", "Values"."DecisionProba" AS "DecisionProba" 
FROM (SELECT 0 AS node_id, 'Feature_77' AS feature, 0.24983039498329163 AS threshold, 25 AS "count", 0 AS depth, NULL AS parent_id, 0.44 AS "Proba_0", -0.82098055207 AS "LogProba_0", 0.56 AS "Proba_1", -0.579818495253 AS "LogProba_1", 1 AS "Decision", 0.56 AS "DecisionProba" FROM SYSIBM.SYSDUMMY1 UNION ALL SELECT 1 AS node_id, NULL AS feature, CAST(NULL AS DOUBLE) AS threshold, 18 AS "count", 1 AS depth, 0 AS parent_id, 0.22222222222222224 AS "Proba_0", -1.50407739678 AS "LogProba_0", 0.7777777777777777 AS "Proba_1", -0.251314428281 AS "LogProba_1", 1 AS "Decision", 0.777777777778 AS "DecisionProba" FROM SYSIBM.SYSDUMMY1 UNION ALL SELECT 2 AS node_id, NULL AS feature, CAST(NULL AS DOUBLE) AS threshold, 7 AS "count", 1 AS depth, 0 AS parent_id, 1.0 AS "Proba_0", 0.0 AS "LogProba_0", 0.0 AS "Proba_1", -1.79769313486231e+308 AS "LogProba_1", 0 AS "Decision", 1.0 AS "DecisionProba" FROM SYSIBM.SYSDUMMY1) AS "Values"), 
"DT_Output" AS 
(SELECT "DT_node_lookup"."KEY" AS "KEY", "DT_node_lookup".node_id_2 AS node_id_2, "DT_node_data".node_id AS node_id, "DT_node_data".feature AS feature, "DT_node_data".threshold AS threshold, "DT_node_data"."count" AS "count", "DT_node_data".depth AS depth, "DT_node_data".parent_id AS parent_id, "DT_node_data"."Proba_0" AS "Proba_0", "DT_node_data"."LogProba_0" AS "LogProba_0", "DT_node_data"."Proba_1" AS "Proba_1", "DT_node_data"."LogProba_1" AS "LogProba_1", "DT_node_data"."Decision" AS "Decision", "DT_node_data"."DecisionProba" AS "DecisionProba" 
FROM "DT_node_lookup" LEFT OUTER JOIN "DT_node_data" ON "DT_node_lookup".node_id_2 = "DT_node_data".node_id), 
"AdaBoost_Estim_0" AS 
(SELECT "DT_Output"."KEY" AS "KEY", (1.0 * (CASE WHEN ("DT_Output"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output"."Proba_0" IS NULL OR "DT_Output"."Proba_0" > 0.0) THEN ln("DT_Output"."Proba_0") ELSE -1.79769313486231e+308 END END - (CASE WHEN ("DT_Output"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output"."Proba_0" IS NULL OR "DT_Output"."Proba_0" > 0.0) THEN ln("DT_Output"."Proba_0") ELSE -1.79769313486231e+308 END END + CASE WHEN ("DT_Output"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output"."Proba_1" IS NULL OR "DT_Output"."Proba_1" > 0.0) THEN ln("DT_Output"."Proba_1") ELSE -1.79769313486231e+308 END END) / 2)) / 4.0 AS "Score_0", 1.0 * (CASE WHEN ("DT_Output"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output"."Proba_0" IS NULL OR "DT_Output"."Proba_0" > 0.0) THEN ln("DT_Output"."Proba_0") ELSE -1.79769313486231e+308 END END - (CASE WHEN ("DT_Output"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output"."Proba_0" IS NULL OR "DT_Output"."Proba_0" > 0.0) THEN ln("DT_Output"."Proba_0") ELSE -1.79769313486231e+308 END END + CASE WHEN ("DT_Output"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output"."Proba_1" IS NULL OR "DT_Output"."Proba_1" > 0.0) THEN ln("DT_Output"."Proba_1") ELSE -1.79769313486231e+308 END END) / 2) AS "Proba_0", (1.0 * (CASE WHEN ("DT_Output"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output"."Proba_1" IS NULL OR "DT_Output"."Proba_1" > 0.0) THEN ln("DT_Output"."Proba_1") ELSE -1.79769313486231e+308 END END - (CASE WHEN ("DT_Output"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output"."Proba_0" IS NULL OR "DT_Output"."Proba_0" > 0.0) THEN ln("DT_Output"."Proba_0") ELSE -1.79769313486231e+308 END END + CASE WHEN ("DT_Output"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output"."Proba_1" IS NULL OR "DT_Output"."Proba_1" > 0.0) THEN ln("DT_Output"."Proba_1") ELSE -1.79769313486231e+308 END END) / 2)) / 4.0 AS "Score_1", 1.0 * (CASE WHEN ("DT_Output"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output"."Proba_1" IS NULL OR "DT_Output"."Proba_1" > 0.0) THEN ln("DT_Output"."Proba_1") ELSE -1.79769313486231e+308 END END - (CASE WHEN ("DT_Output"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output"."Proba_0" IS NULL OR "DT_Output"."Proba_0" > 0.0) THEN ln("DT_Output"."Proba_0") ELSE -1.79769313486231e+308 END END + CASE WHEN ("DT_Output"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output"."Proba_1" IS NULL OR "DT_Output"."Proba_1" > 0.0) THEN ln("DT_Output"."Proba_1") ELSE -1.79769313486231e+308 END END) / 2) AS "Proba_1" 
FROM "DT_Output"), 
"DT_node_lookup_1" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_67" <= -0.4679543375968933) THEN 1 ELSE 2 END AS node_id_2 
FROM "BinaryClass_100" AS "ADS"), 
"DT_node_data_1" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values"."count" AS "count", "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Proba_0" AS "Proba_0", "Values"."LogProba_0" AS "LogProba_0", "Values"."Proba_1" AS "Proba_1", "Values"."LogProba_1" AS "LogProba_1", "Values"."Decision" AS "Decision", "Values"."DecisionProba" AS "DecisionProba" 
FROM (SELECT 0 AS node_id, 'Feature_67' AS feature, -0.4679543375968933 AS threshold, 25 AS "count", 0 AS depth, NULL AS parent_id, 0.5000000034846899 AS "Proba_0", -0.693147173591 AS "LogProba_0", 0.4999999965153102 AS "Proba_1", -0.693147187529 AS "LogProba_1", 0 AS "Decision", 0.500000003485 AS "DecisionProba" FROM SYSIBM.SYSDUMMY1 UNION ALL SELECT 1 AS node_id, NULL AS feature, CAST(NULL AS DOUBLE) AS threshold, 11 AS "count", 1 AS depth, 0 AS parent_id, 0.8235294129222499 AS "Proba_0", -0.194156013035 AS "LogProba_0", 0.1764705870777501 AS "Proba_1", -1.73460106195 AS "LogProba_1", 0 AS "Decision", 0.823529412922 AS "DecisionProba" FROM SYSIBM.SYSDUMMY1 UNION ALL SELECT 2 AS node_id, NULL AS feature, CAST(NULL AS DOUBLE) AS threshold, 14 AS "count", 1 AS depth, 0 AS parent_id, 7.602959922077185e-09 AS "Proba_0", -18.694728202 AS "LogProba_0", 0.9999999923970401 AS "Proba_1", -7.6029599572e-09 AS "LogProba_1", 1 AS "Decision", 0.999999992397 AS "DecisionProba" FROM SYSIBM.SYSDUMMY1) AS "Values"), 
"DT_Output_1" AS 
(SELECT "DT_node_lookup_1"."KEY" AS "KEY", "DT_node_lookup_1".node_id_2 AS node_id_2, "DT_node_data_1".node_id AS node_id, "DT_node_data_1".feature AS feature, "DT_node_data_1".threshold AS threshold, "DT_node_data_1"."count" AS "count", "DT_node_data_1".depth AS depth, "DT_node_data_1".parent_id AS parent_id, "DT_node_data_1"."Proba_0" AS "Proba_0", "DT_node_data_1"."LogProba_0" AS "LogProba_0", "DT_node_data_1"."Proba_1" AS "Proba_1", "DT_node_data_1"."LogProba_1" AS "LogProba_1", "DT_node_data_1"."Decision" AS "Decision", "DT_node_data_1"."DecisionProba" AS "DecisionProba" 
FROM "DT_node_lookup_1" LEFT OUTER JOIN "DT_node_data_1" ON "DT_node_lookup_1".node_id_2 = "DT_node_data_1".node_id), 
"AdaBoost_Estim_1" AS 
(SELECT "DT_Output_1"."KEY" AS "KEY", (1.0 * (CASE WHEN ("DT_Output_1"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_1"."Proba_0" IS NULL OR "DT_Output_1"."Proba_0" > 0.0) THEN ln("DT_Output_1"."Proba_0") ELSE -1.79769313486231e+308 END END - (CASE WHEN ("DT_Output_1"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_1"."Proba_0" IS NULL OR "DT_Output_1"."Proba_0" > 0.0) THEN ln("DT_Output_1"."Proba_0") ELSE -1.79769313486231e+308 END END + CASE WHEN ("DT_Output_1"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_1"."Proba_1" IS NULL OR "DT_Output_1"."Proba_1" > 0.0) THEN ln("DT_Output_1"."Proba_1") ELSE -1.79769313486231e+308 END END) / 2)) / 4.0 AS "Score_0", 1.0 * (CASE WHEN ("DT_Output_1"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_1"."Proba_0" IS NULL OR "DT_Output_1"."Proba_0" > 0.0) THEN ln("DT_Output_1"."Proba_0") ELSE -1.79769313486231e+308 END END - (CASE WHEN ("DT_Output_1"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_1"."Proba_0" IS NULL OR "DT_Output_1"."Proba_0" > 0.0) THEN ln("DT_Output_1"."Proba_0") ELSE -1.79769313486231e+308 END END + CASE WHEN ("DT_Output_1"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_1"."Proba_1" IS NULL OR "DT_Output_1"."Proba_1" > 0.0) THEN ln("DT_Output_1"."Proba_1") ELSE -1.79769313486231e+308 END END) / 2) AS "Proba_0", (1.0 * (CASE WHEN ("DT_Output_1"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_1"."Proba_1" IS NULL OR "DT_Output_1"."Proba_1" > 0.0) THEN ln("DT_Output_1"."Proba_1") ELSE -1.79769313486231e+308 END END - (CASE WHEN ("DT_Output_1"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_1"."Proba_0" IS NULL OR "DT_Output_1"."Proba_0" > 0.0) THEN ln("DT_Output_1"."Proba_0") ELSE -1.79769313486231e+308 END END + CASE WHEN ("DT_Output_1"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_1"."Proba_1" IS NULL OR "DT_Output_1"."Proba_1" > 0.0) THEN ln("DT_Output_1"."Proba_1") ELSE -1.79769313486231e+308 END END) / 2)) / 4.0 AS "Score_1", 1.0 * (CASE WHEN ("DT_Output_1"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_1"."Proba_1" IS NULL OR "DT_Output_1"."Proba_1" > 0.0) THEN ln("DT_Output_1"."Proba_1") ELSE -1.79769313486231e+308 END END - (CASE WHEN ("DT_Output_1"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_1"."Proba_0" IS NULL OR "DT_Output_1"."Proba_0" > 0.0) THEN ln("DT_Output_1"."Proba_0") ELSE -1.79769313486231e+308 END END + CASE WHEN ("DT_Output_1"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_1"."Proba_1" IS NULL OR "DT_Output_1"."Proba_1" > 0.0) THEN ln("DT_Output_1"."Proba_1") ELSE -1.79769313486231e+308 END END) / 2) AS "Proba_1" 
FROM "DT_Output_1"), 
"DT_node_lookup_2" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_23" <= 0.448749840259552) THEN 1 ELSE 2 END AS node_id_2 
FROM "BinaryClass_100" AS "ADS"), 
"DT_node_data_2" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values"."count" AS "count", "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Proba_0" AS "Proba_0", "Values"."LogProba_0" AS "LogProba_0", "Values"."Proba_1" AS "Proba_1", "Values"."LogProba_1" AS "LogProba_1", "Values"."Decision" AS "Decision", "Values"."DecisionProba" AS "DecisionProba" 
FROM (SELECT 0 AS node_id, 'Feature_23' AS feature, 0.448749840259552 AS threshold, 25 AS "count", 0 AS depth, NULL AS parent_id, 0.5 AS "Proba_0", -0.69314718056 AS "LogProba_0", 0.5 AS "Proba_1", -0.69314718056 AS "LogProba_1", 0 AS "Decision", 0.5 AS "DecisionProba" FROM SYSIBM.SYSDUMMY1 UNION ALL SELECT 1 AS node_id, NULL AS feature, CAST(NULL AS DOUBLE) AS threshold, 16 AS "count", 1 AS depth, 0 AS parent_id, 0.9999192916193809 AS "Proba_0", -8.07116377157e-05 AS "LogProba_0", 8.070838061913705e-05 AS "Proba_1", -9.42466813902 AS "LogProba_1", 0 AS "Decision", 0.999919291619 AS "DecisionProba" FROM SYSIBM.SYSDUMMY1 UNION ALL SELECT 2 AS node_id, NULL AS feature, CAST(NULL AS DOUBLE) AS threshold, 9 AS "count", 1 AS depth, 0 AS parent_id, 1.991117456292795e-09 AS "Proba_0", -20.03456982 AS "LogProba_0", 0.9999999980088825 AS "Proba_1", -1.99111749509e-09 AS "LogProba_1", 1 AS "Decision", 0.999999998009 AS "DecisionProba" FROM SYSIBM.SYSDUMMY1) AS "Values"), 
"DT_Output_2" AS 
(SELECT "DT_node_lookup_2"."KEY" AS "KEY", "DT_node_lookup_2".node_id_2 AS node_id_2, "DT_node_data_2".node_id AS node_id, "DT_node_data_2".feature AS feature, "DT_node_data_2".threshold AS threshold, "DT_node_data_2"."count" AS "count", "DT_node_data_2".depth AS depth, "DT_node_data_2".parent_id AS parent_id, "DT_node_data_2"."Proba_0" AS "Proba_0", "DT_node_data_2"."LogProba_0" AS "LogProba_0", "DT_node_data_2"."Proba_1" AS "Proba_1", "DT_node_data_2"."LogProba_1" AS "LogProba_1", "DT_node_data_2"."Decision" AS "Decision", "DT_node_data_2"."DecisionProba" AS "DecisionProba" 
FROM "DT_node_lookup_2" LEFT OUTER JOIN "DT_node_data_2" ON "DT_node_lookup_2".node_id_2 = "DT_node_data_2".node_id), 
"AdaBoost_Estim_2" AS 
(SELECT "DT_Output_2"."KEY" AS "KEY", (1.0 * (CASE WHEN ("DT_Output_2"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_2"."Proba_0" IS NULL OR "DT_Output_2"."Proba_0" > 0.0) THEN ln("DT_Output_2"."Proba_0") ELSE -1.79769313486231e+308 END END - (CASE WHEN ("DT_Output_2"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_2"."Proba_0" IS NULL OR "DT_Output_2"."Proba_0" > 0.0) THEN ln("DT_Output_2"."Proba_0") ELSE -1.79769313486231e+308 END END + CASE WHEN ("DT_Output_2"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_2"."Proba_1" IS NULL OR "DT_Output_2"."Proba_1" > 0.0) THEN ln("DT_Output_2"."Proba_1") ELSE -1.79769313486231e+308 END END) / 2)) / 4.0 AS "Score_0", 1.0 * (CASE WHEN ("DT_Output_2"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_2"."Proba_0" IS NULL OR "DT_Output_2"."Proba_0" > 0.0) THEN ln("DT_Output_2"."Proba_0") ELSE -1.79769313486231e+308 END END - (CASE WHEN ("DT_Output_2"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_2"."Proba_0" IS NULL OR "DT_Output_2"."Proba_0" > 0.0) THEN ln("DT_Output_2"."Proba_0") ELSE -1.79769313486231e+308 END END + CASE WHEN ("DT_Output_2"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_2"."Proba_1" IS NULL OR "DT_Output_2"."Proba_1" > 0.0) THEN ln("DT_Output_2"."Proba_1") ELSE -1.79769313486231e+308 END END) / 2) AS "Proba_0", (1.0 * (CASE WHEN ("DT_Output_2"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_2"."Proba_1" IS NULL OR "DT_Output_2"."Proba_1" > 0.0) THEN ln("DT_Output_2"."Proba_1") ELSE -1.79769313486231e+308 END END - (CASE WHEN ("DT_Output_2"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_2"."Proba_0" IS NULL OR "DT_Output_2"."Proba_0" > 0.0) THEN ln("DT_Output_2"."Proba_0") ELSE -1.79769313486231e+308 END END + CASE WHEN ("DT_Output_2"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_2"."Proba_1" IS NULL OR "DT_Output_2"."Proba_1" > 0.0) THEN ln("DT_Output_2"."Proba_1") ELSE -1.79769313486231e+308 END END) / 2)) / 4.0 AS "Score_1", 1.0 * (CASE WHEN ("DT_Output_2"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_2"."Proba_1" IS NULL OR "DT_Output_2"."Proba_1" > 0.0) THEN ln("DT_Output_2"."Proba_1") ELSE -1.79769313486231e+308 END END - (CASE WHEN ("DT_Output_2"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_2"."Proba_0" IS NULL OR "DT_Output_2"."Proba_0" > 0.0) THEN ln("DT_Output_2"."Proba_0") ELSE -1.79769313486231e+308 END END + CASE WHEN ("DT_Output_2"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_2"."Proba_1" IS NULL OR "DT_Output_2"."Proba_1" > 0.0) THEN ln("DT_Output_2"."Proba_1") ELSE -1.79769313486231e+308 END END) / 2) AS "Proba_1" 
FROM "DT_Output_2"), 
"DT_node_lookup_3" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_0" <= -0.19578590989112854) THEN 1 ELSE 2 END AS node_id_2 
FROM "BinaryClass_100" AS "ADS"), 
"DT_node_data_3" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values"."count" AS "count", "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Proba_0" AS "Proba_0", "Values"."LogProba_0" AS "LogProba_0", "Values"."Proba_1" AS "Proba_1", "Values"."LogProba_1" AS "LogProba_1", "Values"."Decision" AS "Decision", "Values"."DecisionProba" AS "DecisionProba" 
FROM (SELECT 0 AS node_id, 'Feature_0' AS feature, -0.19578590989112854 AS threshold, 25 AS "count", 0 AS depth, NULL AS parent_id, 0.5000000000000001 AS "Proba_0", -0.69314718056 AS "LogProba_0", 0.49999999999999994 AS "Proba_1", -0.69314718056 AS "LogProba_1", 0 AS "Decision", 0.5 AS "DecisionProba" FROM SYSIBM.SYSDUMMY1 UNION ALL SELECT 1 AS node_id, NULL AS feature, CAST(NULL AS DOUBLE) AS threshold, 10 AS "count", 1 AS depth, 0 AS parent_id, 0.9999998005259889 AS "Proba_0", -1.99474030982e-07 AS "LogProba_0", 1.994740110744316e-07 AS "Proba_1", -15.4275818794 AS "LogProba_1", 0 AS "Decision", 0.999999800526 AS "DecisionProba" FROM SYSIBM.SYSDUMMY1 UNION ALL SELECT 2 AS node_id, NULL AS feature, CAST(NULL AS DOUBLE) AS threshold, 15 AS "count", 1 AS depth, 0 AS parent_id, 9.815836810642401e-05 AS "Proba_0", -9.22892838253 AS "LogProba_0", 0.9999018416318934 AS "Proba_1", -9.81631859545e-05 AS "LogProba_1", 1 AS "Decision", 0.999901841632 AS "DecisionProba" FROM SYSIBM.SYSDUMMY1) AS "Values"), 
"DT_Output_3" AS 
(SELECT "DT_node_lookup_3"."KEY" AS "KEY", "DT_node_lookup_3".node_id_2 AS node_id_2, "DT_node_data_3".node_id AS node_id, "DT_node_data_3".feature AS feature, "DT_node_data_3".threshold AS threshold, "DT_node_data_3"."count" AS "count", "DT_node_data_3".depth AS depth, "DT_node_data_3".parent_id AS parent_id, "DT_node_data_3"."Proba_0" AS "Proba_0", "DT_node_data_3"."LogProba_0" AS "LogProba_0", "DT_node_data_3"."Proba_1" AS "Proba_1", "DT_node_data_3"."LogProba_1" AS "LogProba_1", "DT_node_data_3"."Decision" AS "Decision", "DT_node_data_3"."DecisionProba" AS "DecisionProba" 
FROM "DT_node_lookup_3" LEFT OUTER JOIN "DT_node_data_3" ON "DT_node_lookup_3".node_id_2 = "DT_node_data_3".node_id), 
"AdaBoost_Estim_3" AS 
(SELECT "DT_Output_3"."KEY" AS "KEY", (1.0 * (CASE WHEN ("DT_Output_3"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_3"."Proba_0" IS NULL OR "DT_Output_3"."Proba_0" > 0.0) THEN ln("DT_Output_3"."Proba_0") ELSE -1.79769313486231e+308 END END - (CASE WHEN ("DT_Output_3"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_3"."Proba_0" IS NULL OR "DT_Output_3"."Proba_0" > 0.0) THEN ln("DT_Output_3"."Proba_0") ELSE -1.79769313486231e+308 END END + CASE WHEN ("DT_Output_3"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_3"."Proba_1" IS NULL OR "DT_Output_3"."Proba_1" > 0.0) THEN ln("DT_Output_3"."Proba_1") ELSE -1.79769313486231e+308 END END) / 2)) / 4.0 AS "Score_0", 1.0 * (CASE WHEN ("DT_Output_3"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_3"."Proba_0" IS NULL OR "DT_Output_3"."Proba_0" > 0.0) THEN ln("DT_Output_3"."Proba_0") ELSE -1.79769313486231e+308 END END - (CASE WHEN ("DT_Output_3"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_3"."Proba_0" IS NULL OR "DT_Output_3"."Proba_0" > 0.0) THEN ln("DT_Output_3"."Proba_0") ELSE -1.79769313486231e+308 END END + CASE WHEN ("DT_Output_3"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_3"."Proba_1" IS NULL OR "DT_Output_3"."Proba_1" > 0.0) THEN ln("DT_Output_3"."Proba_1") ELSE -1.79769313486231e+308 END END) / 2) AS "Proba_0", (1.0 * (CASE WHEN ("DT_Output_3"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_3"."Proba_1" IS NULL OR "DT_Output_3"."Proba_1" > 0.0) THEN ln("DT_Output_3"."Proba_1") ELSE -1.79769313486231e+308 END END - (CASE WHEN ("DT_Output_3"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_3"."Proba_0" IS NULL OR "DT_Output_3"."Proba_0" > 0.0) THEN ln("DT_Output_3"."Proba_0") ELSE -1.79769313486231e+308 END END + CASE WHEN ("DT_Output_3"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_3"."Proba_1" IS NULL OR "DT_Output_3"."Proba_1" > 0.0) THEN ln("DT_Output_3"."Proba_1") ELSE -1.79769313486231e+308 END END) / 2)) / 4.0 AS "Score_1", 1.0 * (CASE WHEN ("DT_Output_3"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_3"."Proba_1" IS NULL OR "DT_Output_3"."Proba_1" > 0.0) THEN ln("DT_Output_3"."Proba_1") ELSE -1.79769313486231e+308 END END - (CASE WHEN ("DT_Output_3"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_3"."Proba_0" IS NULL OR "DT_Output_3"."Proba_0" > 0.0) THEN ln("DT_Output_3"."Proba_0") ELSE -1.79769313486231e+308 END END + CASE WHEN ("DT_Output_3"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_3"."Proba_1" IS NULL OR "DT_Output_3"."Proba_1" > 0.0) THEN ln("DT_Output_3"."Proba_1") ELSE -1.79769313486231e+308 END END) / 2) AS "Proba_1" 
FROM "DT_Output_3"), 
"Score_Union_CTE" AS 
(SELECT ensemble_score_union."KEY" AS "KEY", ensemble_score_union."Score_0" AS "Score_0", ensemble_score_union."Proba_0" AS "Proba_0", ensemble_score_union."Score_1" AS "Score_1", ensemble_score_union."Proba_1" AS "Proba_1" 
FROM (SELECT "AdaBoost_Estim_0"."KEY" AS "KEY", "AdaBoost_Estim_0"."Score_0" AS "Score_0", "AdaBoost_Estim_0"."Proba_0" AS "Proba_0", "AdaBoost_Estim_0"."Score_1" AS "Score_1", "AdaBoost_Estim_0"."Proba_1" AS "Proba_1" 
FROM "AdaBoost_Estim_0" UNION ALL SELECT "AdaBoost_Estim_1"."KEY" AS "KEY", "AdaBoost_Estim_1"."Score_0" AS "Score_0", "AdaBoost_Estim_1"."Proba_0" AS "Proba_0", "AdaBoost_Estim_1"."Score_1" AS "Score_1", "AdaBoost_Estim_1"."Proba_1" AS "Proba_1" 
FROM "AdaBoost_Estim_1" UNION ALL SELECT "AdaBoost_Estim_2"."KEY" AS "KEY", "AdaBoost_Estim_2"."Score_0" AS "Score_0", "AdaBoost_Estim_2"."Proba_0" AS "Proba_0", "AdaBoost_Estim_2"."Score_1" AS "Score_1", "AdaBoost_Estim_2"."Proba_1" AS "Proba_1" 
FROM "AdaBoost_Estim_2" UNION ALL SELECT "AdaBoost_Estim_3"."KEY" AS "KEY", "AdaBoost_Estim_3"."Score_0" AS "Score_0", "AdaBoost_Estim_3"."Proba_0" AS "Proba_0", "AdaBoost_Estim_3"."Score_1" AS "Score_1", "AdaBoost_Estim_3"."Proba_1" AS "Proba_1" 
FROM "AdaBoost_Estim_3") AS ensemble_score_union), 
"ADA_Sum_Scores" AS 
(SELECT "T"."KEY" AS "KEY", "T"."Score_0" AS "Score_0", "T"."Proba_0" AS "Proba_0", "T"."Score_1" AS "Score_1", "T"."Proba_1" AS "Proba_1" 
FROM (SELECT "Score_Union_CTE"."KEY" AS "KEY", sum("Score_Union_CTE"."Score_0") AS "Score_0", sum("Score_Union_CTE"."Proba_0") AS "Proba_0", sum("Score_Union_CTE"."Score_1") AS "Score_1", sum("Score_Union_CTE"."Proba_1") AS "Proba_1" 
FROM "Score_Union_CTE" GROUP BY "Score_Union_CTE"."KEY") AS "T"), 
"AdaBoost_AVG_Scores_BN" AS 
(SELECT "ADA_Sum_Scores"."KEY" AS "KEY", "ADA_Sum_Scores"."Score_0" AS "Score_0", "ADA_Sum_Scores"."Proba_0" AS "Proba_0", "ADA_Sum_Scores"."Score_1" AS "Score_1", "ADA_Sum_Scores"."Proba_1" AS "Proba_1" 
FROM "ADA_Sum_Scores"), 
"AdaBoost_AVG_Scores" AS 
(SELECT "AdaBoost_AVG_Scores_BN"."KEY" AS "KEY", -("AdaBoost_AVG_Scores_BN"."Score_1" - "AdaBoost_AVG_Scores_BN"."Score_0") AS "Score_0", exp(("AdaBoost_AVG_Scores_BN"."Proba_0" / 4.0) / 1) / (exp(("AdaBoost_AVG_Scores_BN"."Proba_0" / 4.0) / 1) + exp(("AdaBoost_AVG_Scores_BN"."Proba_1" / 4.0) / 1)) AS "Proba_0", CAST(NULL AS DOUBLE) AS "LogProba_0", "AdaBoost_AVG_Scores_BN"."Score_1" - "AdaBoost_AVG_Scores_BN"."Score_0" AS "Score_1", exp(("AdaBoost_AVG_Scores_BN"."Proba_1" / 4.0) / 1) / (exp(("AdaBoost_AVG_Scores_BN"."Proba_0" / 4.0) / 1) + exp(("AdaBoost_AVG_Scores_BN"."Proba_1" / 4.0) / 1)) AS "Proba_1", CAST(NULL AS DOUBLE) AS "LogProba_1" 
FROM "AdaBoost_AVG_Scores_BN"), 
orig_cte AS 
(SELECT "AdaBoost_AVG_Scores"."KEY" AS "KEY", "AdaBoost_AVG_Scores"."Score_0" AS "Score_0", "AdaBoost_AVG_Scores"."Score_1" AS "Score_1", "AdaBoost_AVG_Scores"."Proba_0" AS "Proba_0", "AdaBoost_AVG_Scores"."Proba_1" AS "Proba_1", "AdaBoost_AVG_Scores"."LogProba_0" AS "LogProba_0", "AdaBoost_AVG_Scores"."LogProba_1" AS "LogProba_1", NULL AS "Decision", CAST(NULL AS DOUBLE) AS "DecisionProba" 
FROM "AdaBoost_AVG_Scores"), 
score_class_union AS 
(SELECT scu."KEY_u" AS "KEY_u", scu.class AS class, scu."LogProba" AS "LogProba", scu."Proba" AS "Proba", scu."Score" AS "Score" 
FROM (SELECT orig_cte."KEY" AS "KEY_u", 0 AS class, orig_cte."LogProba_0" AS "LogProba", orig_cte."Proba_0" AS "Proba", orig_cte."Score_0" AS "Score" 
FROM orig_cte UNION ALL SELECT orig_cte."KEY" AS "KEY_u", 1 AS class, orig_cte."LogProba_1" AS "LogProba", orig_cte."Proba_1" AS "Proba", orig_cte."Score_1" AS "Score" 
FROM orig_cte) AS scu), 
score_max AS 
(SELECT orig_cte."KEY" AS "KEY", orig_cte."Score_0" AS "Score_0", orig_cte."Score_1" AS "Score_1", orig_cte."Proba_0" AS "Proba_0", orig_cte."Proba_1" AS "Proba_1", orig_cte."LogProba_0" AS "LogProba_0", orig_cte."LogProba_1" AS "LogProba_1", orig_cte."Decision" AS "Decision", orig_cte."DecisionProba" AS "DecisionProba", max_select."KEY_m" AS "KEY_m", max_select."max_Score" AS "max_Score" 
FROM orig_cte LEFT OUTER JOIN (SELECT score_class_union."KEY_u" AS "KEY_m", max(score_class_union."Score") AS "max_Score" 
FROM score_class_union GROUP BY score_class_union."KEY_u") AS max_select ON orig_cte."KEY" = max_select."KEY_m"), 
union_with_max AS 
(SELECT score_class_union."KEY_u" AS "KEY_u", score_class_union.class AS class, score_class_union."LogProba" AS "LogProba", score_class_union."Proba" AS "Proba", score_class_union."Score" AS "Score", score_max."KEY" AS "KEY", score_max."Score_0" AS "Score_0", score_max."Score_1" AS "Score_1", score_max."Proba_0" AS "Proba_0", score_max."Proba_1" AS "Proba_1", score_max."LogProba_0" AS "LogProba_0", score_max."LogProba_1" AS "LogProba_1", score_max."Decision" AS "Decision", score_max."DecisionProba" AS "DecisionProba", score_max."KEY_m" AS "KEY_m", score_max."max_Score" AS "max_Score" 
FROM score_class_union LEFT OUTER JOIN score_max ON score_class_union."KEY_u" = score_max."KEY"), 
arg_max_cte AS 
(SELECT score_max."KEY" AS "KEY", score_max."Score_0" AS "Score_0", score_max."Score_1" AS "Score_1", score_max."Proba_0" AS "Proba_0", score_max."Proba_1" AS "Proba_1", score_max."LogProba_0" AS "LogProba_0", score_max."LogProba_1" AS "LogProba_1", score_max."Decision" AS "Decision", score_max."DecisionProba" AS "DecisionProba", score_max."KEY_m" AS "KEY_m", score_max."max_Score" AS "max_Score", "arg_max_t_Score"."KEY_Score" AS "KEY_Score", "arg_max_t_Score"."arg_max_Score" AS "arg_max_Score" 
FROM score_max LEFT OUTER JOIN (SELECT union_with_max."KEY" AS "KEY_Score", min(union_with_max.class) AS "arg_max_Score" 
FROM union_with_max 
WHERE union_with_max."max_Score" <= union_with_max."Score" GROUP BY union_with_max."KEY") AS "arg_max_t_Score" ON score_max."KEY" = "arg_max_t_Score"."KEY_Score")
 SELECT arg_max_cte."KEY" AS "KEY", arg_max_cte."Score_0" AS "Score_0", arg_max_cte."Score_1" AS "Score_1", arg_max_cte."Proba_0" AS "Proba_0", arg_max_cte."Proba_1" AS "Proba_1", CASE WHEN (arg_max_cte."Proba_0" IS NULL OR arg_max_cte."Proba_0" > 0.0) THEN ln(arg_max_cte."Proba_0") ELSE -1.79769313486231e+308 END AS "LogProba_0", CASE WHEN (arg_max_cte."Proba_1" IS NULL OR arg_max_cte."Proba_1" > 0.0) THEN ln(arg_max_cte."Proba_1") ELSE -1.79769313486231e+308 END AS "LogProba_1", arg_max_cte."arg_max_Score" AS "Decision", CASE WHEN (arg_max_cte."arg_max_Score" = 0) THEN arg_max_cte."Proba_0" WHEN (arg_max_cte."arg_max_Score" = 1) THEN arg_max_cte."Proba_1" END AS "DecisionProba" 
FROM arg_max_cte