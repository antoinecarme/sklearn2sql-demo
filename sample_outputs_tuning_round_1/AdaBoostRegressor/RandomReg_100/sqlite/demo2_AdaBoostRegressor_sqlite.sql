-- This SQL code was generated by sklearn2sql (development version).
-- Copyright 2017

WITH "DT_node_lookup" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_95" <= -0.30009958148002625) THEN CASE WHEN ("ADS"."Feature_6" <= 0.8881540298461914) THEN CASE WHEN ("ADS"."Feature_14" <= 0.2641434073448181) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_11" <= 0.6165139675140381) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_25" <= -1.2894821166992188) THEN CASE WHEN ("ADS"."Feature_94" <= -1.245584487915039) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_27" <= -1.3986510038375854) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "RandomReg_100" AS "ADS"), 
"DT_node_data" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 0 AS node_id, 'Feature_95' AS feature, -0.30009958148002625 AS threshold, 25 AS count, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 7.1421016305861915 AS "Estimator" UNION ALL SELECT 1 AS node_id, 'Feature_6' AS feature, 0.8881540298461914 AS threshold, 11 AS count, 1 AS depth, 0 AS parent_id, -226.89454577966245 AS "Estimator" UNION ALL SELECT 2 AS node_id, 'Feature_14' AS feature, 0.2641434073448181 AS threshold, 6 AS count, 2 AS depth, 1 AS parent_id, -188.39565069279107 AS "Estimator" UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 3 AS depth, 2 AS parent_id, -167.53786194153668 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS count, 3 AS depth, 2 AS parent_id, -198.82454506841827 AS "Estimator" UNION ALL SELECT 5 AS node_id, 'Feature_11' AS feature, 0.6165139675140381 AS threshold, 5 AS count, 2 AS depth, 1 AS parent_id, -273.0932198839081 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 5 AS parent_id, -310.56333873263117 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS count, 3 AS depth, 5 AS parent_id, -263.7256901717273 AS "Estimator" UNION ALL SELECT 8 AS node_id, 'Feature_25' AS feature, -1.2894821166992188 AS threshold, 14 AS count, 1 AS depth, 0 AS parent_id, 191.02803888149583 AS "Estimator" UNION ALL SELECT 9 AS node_id, 'Feature_94' AS feature, -1.245584487915039 AS threshold, 3 AS count, 2 AS depth, 8 AS parent_id, -20.428113940939237 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 9 AS parent_id, 62.605323392817695 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 3 AS depth, 9 AS parent_id, -61.9448326078177 AS "Estimator" UNION ALL SELECT 12 AS node_id, 'Feature_27' AS feature, -1.3986510038375854 AS threshold, 11 AS count, 2 AS depth, 8 AS parent_id, 248.69789874215994 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 3 AS depth, 12 AS parent_id, 114.45423222726873 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 9 AS count, 3 AS depth, 12 AS parent_id, 278.52982463435796 AS "Estimator") AS "Values"), 
"DT_Output" AS 
(SELECT "DT_node_lookup"."KEY" AS "KEY", "DT_node_lookup".node_id_2 AS node_id_2, "DT_node_data".node_id AS node_id, "DT_node_data".feature AS feature, "DT_node_data".threshold AS threshold, "DT_node_data".count AS count, "DT_node_data".depth AS depth, "DT_node_data".parent_id AS parent_id, "DT_node_data"."Estimator" AS "Estimator" 
FROM "DT_node_lookup" LEFT OUTER JOIN "DT_node_data" ON "DT_node_lookup".node_id_2 = "DT_node_data".node_id), 
"AdaBoost_Estim_0" AS 
(SELECT "DT_Output"."KEY" AS "KEY", "DT_Output"."Estimator" AS "Estimator", 0.22486542369 AS "Weight", 0 AS est_index 
FROM "DT_Output"), 
"DT_node_lookup_1" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_63" <= 0.025700129568576813) THEN CASE WHEN ("ADS"."Feature_95" <= -0.9759153127670288) THEN CASE WHEN ("ADS"."Feature_72" <= 0.5158208608627319) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_14" <= 0.8692867755889893) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_22" <= 0.08425188809633255) THEN CASE WHEN ("ADS"."Feature_42" <= 0.6544551849365234) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_21" <= 0.851141095161438) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "RandomReg_100" AS "ADS"), 
"DT_node_data_1" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 0 AS node_id, 'Feature_63' AS feature, 0.025700129568576813 AS threshold, 25 AS count, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, -43.18486389342259 AS "Estimator" UNION ALL SELECT 1 AS node_id, 'Feature_95' AS feature, -0.9759153127670288 AS threshold, 17 AS count, 1 AS depth, 0 AS parent_id, -143.70365926911606 AS "Estimator" UNION ALL SELECT 2 AS node_id, 'Feature_72' AS feature, 0.5158208608627319 AS threshold, 3 AS count, 2 AS depth, 1 AS parent_id, -388.8396384676269 AS "Estimator" UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 3 AS depth, 2 AS parent_id, -442.776914694759 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 2 AS parent_id, -280.96508601336274 AS "Estimator" UNION ALL SELECT 5 AS node_id, 'Feature_14' AS feature, 0.8692867755889893 AS threshold, 14 AS count, 2 AS depth, 1 AS parent_id, -91.1745208694352 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 13 AS count, 3 AS depth, 5 AS parent_id, -119.63521721624801 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 5 AS parent_id, 278.8145316391315 AS "Estimator" UNION ALL SELECT 8 AS node_id, 'Feature_22' AS feature, 0.08425188809633255 AS threshold, 8 AS count, 1 AS depth, 0 AS parent_id, 170.4175762799261 AS "Estimator" UNION ALL SELECT 9 AS node_id, 'Feature_42' AS feature, 0.6544551849365234 AS threshold, 4 AS count, 2 AS depth, 8 AS parent_id, 101.59546964266617 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 3 AS depth, 9 AS parent_id, 114.59218505928236 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 9 AS parent_id, 62.605323392817695 AS "Estimator" UNION ALL SELECT 12 AS node_id, 'Feature_21' AS feature, 0.851141095161438 AS threshold, 4 AS count, 2 AS depth, 8 AS parent_id, 239.23968291718597 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 3 AS depth, 12 AS parent_id, 220.68935869517182 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 12 AS parent_id, 294.8906555832285 AS "Estimator") AS "Values"), 
"DT_Output_1" AS 
(SELECT "DT_node_lookup_1"."KEY" AS "KEY", "DT_node_lookup_1".node_id_2 AS node_id_2, "DT_node_data_1".node_id AS node_id, "DT_node_data_1".feature AS feature, "DT_node_data_1".threshold AS threshold, "DT_node_data_1".count AS count, "DT_node_data_1".depth AS depth, "DT_node_data_1".parent_id AS parent_id, "DT_node_data_1"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_1" LEFT OUTER JOIN "DT_node_data_1" ON "DT_node_lookup_1".node_id_2 = "DT_node_data_1".node_id), 
"AdaBoost_Estim_1" AS 
(SELECT "DT_Output_1"."KEY" AS "KEY", "DT_Output_1"."Estimator" AS "Estimator", 0.260609846958 AS "Weight", 1 AS est_index 
FROM "DT_Output_1"), 
"DT_node_lookup_2" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_80" <= 0.24304252862930298) THEN CASE WHEN ("ADS"."Feature_67" <= 0.5887085199356079) THEN CASE WHEN ("ADS"."Feature_67" <= 0.3317462205886841) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_37" <= 0.44833266735076904) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_27" <= 0.4673347771167755) THEN CASE WHEN ("ADS"."Feature_38" <= 0.14188286662101746) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_82" <= -1.0747987031936646) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "RandomReg_100" AS "ADS"), 
"DT_node_data_2" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 0 AS node_id, 'Feature_80' AS feature, 0.24304252862930298 AS threshold, 25 AS count, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, -18.953246204534096 AS "Estimator" UNION ALL SELECT 1 AS node_id, 'Feature_67' AS feature, 0.5887085199356079 AS threshold, 13 AS count, 1 AS depth, 0 AS parent_id, -239.6543768566375 AS "Estimator" UNION ALL SELECT 2 AS node_id, 'Feature_67' AS feature, 0.3317462205886841 AS threshold, 10 AS count, 2 AS depth, 1 AS parent_id, -179.9220827728519 AS "Estimator" UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 6 AS count, 3 AS depth, 2 AS parent_id, -234.73967814229874 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS count, 3 AS depth, 2 AS parent_id, -97.69568971868166 AS "Estimator" UNION ALL SELECT 5 AS node_id, 'Feature_37' AS feature, 0.44833266735076904 AS threshold, 3 AS count, 2 AS depth, 1 AS parent_id, -438.7620238025891 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 5 AS parent_id, -454.8215873712685 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 3 AS depth, 5 AS parent_id, -430.7322420182495 AS "Estimator" UNION ALL SELECT 8 AS node_id, 'Feature_27' AS feature, 0.4673347771167755 AS threshold, 12 AS count, 1 AS depth, 0 AS parent_id, 220.1396453352445 AS "Estimator" UNION ALL SELECT 9 AS node_id, 'Feature_38' AS feature, 0.14188286662101746 AS threshold, 9 AS count, 2 AS depth, 8 AS parent_id, 296.33528866545527 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 7 AS count, 3 AS depth, 9 AS parent_id, 261.0562881473835 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 3 AS depth, 9 AS parent_id, 419.8117904787066 AS "Estimator" UNION ALL SELECT 12 AS node_id, 'Feature_82' AS feature, -1.0747987031936646 AS threshold, 3 AS count, 2 AS depth, 8 AS parent_id, -8.447284655387952 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 12 AS parent_id, -202.60833883427068 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 3 AS depth, 12 AS parent_id, 88.63324243405341 AS "Estimator") AS "Values"), 
"DT_Output_2" AS 
(SELECT "DT_node_lookup_2"."KEY" AS "KEY", "DT_node_lookup_2".node_id_2 AS node_id_2, "DT_node_data_2".node_id AS node_id, "DT_node_data_2".feature AS feature, "DT_node_data_2".threshold AS threshold, "DT_node_data_2".count AS count, "DT_node_data_2".depth AS depth, "DT_node_data_2".parent_id AS parent_id, "DT_node_data_2"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_2" LEFT OUTER JOIN "DT_node_data_2" ON "DT_node_lookup_2".node_id_2 = "DT_node_data_2".node_id), 
"AdaBoost_Estim_2" AS 
(SELECT "DT_Output_2"."KEY" AS "KEY", "DT_Output_2"."Estimator" AS "Estimator", 0.297929951718 AS "Weight", 2 AS est_index 
FROM "DT_Output_2"), 
"DT_node_lookup_3" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_80" <= -0.16066645085811615) THEN CASE WHEN ("ADS"."Feature_77" <= 0.301141619682312) THEN CASE WHEN ("ADS"."Feature_65" <= 0.6708670258522034) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_84" <= -1.3262145519256592) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_64" <= -0.29911768436431885) THEN CASE WHEN ("ADS"."Feature_66" <= -0.07585468888282776) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_81" <= 0.1725521683692932) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "RandomReg_100" AS "ADS"), 
"DT_node_data_3" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 0 AS node_id, 'Feature_80' AS feature, -0.16066645085811615 AS threshold, 25 AS count, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 76.91076380286675 AS "Estimator" UNION ALL SELECT 1 AS node_id, 'Feature_77' AS feature, 0.301141619682312 AS threshold, 11 AS count, 1 AS depth, 0 AS parent_id, -158.72125849825886 AS "Estimator" UNION ALL SELECT 2 AS node_id, 'Feature_65' AS feature, 0.6708670258522034 AS threshold, 5 AS count, 2 AS depth, 1 AS parent_id, -47.188925358666175 AS "Estimator" UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 3 AS depth, 2 AS parent_id, -42.10296471792358 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 3 AS depth, 2 AS parent_id, -54.81786631978007 AS "Estimator" UNION ALL SELECT 5 AS node_id, 'Feature_84' AS feature, -1.3262145519256592 AS threshold, 6 AS count, 2 AS depth, 1 AS parent_id, -251.66486944791941 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 5 AS parent_id, -454.8215873712685 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS count, 3 AS depth, 5 AS parent_id, -211.0335258632496 AS "Estimator" UNION ALL SELECT 8 AS node_id, 'Feature_64' AS feature, -0.29911768436431885 AS threshold, 14 AS count, 1 AS depth, 0 AS parent_id, 262.0502098966083 AS "Estimator" UNION ALL SELECT 9 AS node_id, 'Feature_66' AS feature, -0.07585468888282776 AS threshold, 3 AS count, 2 AS depth, 8 AS parent_id, 128.08724738026606 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 9 AS parent_id, 195.39419395402132 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 3 AS depth, 9 AS parent_id, 94.43377409338842 AS "Estimator" UNION ALL SELECT 12 AS node_id, 'Feature_81' AS feature, 0.1725521683692932 AS threshold, 11 AS count, 2 AS depth, 8 AS parent_id, 298.5855633101562 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 10 AS count, 3 AS depth, 12 AS parent_id, 286.46294059330114 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 12 AS parent_id, 419.8117904787066 AS "Estimator") AS "Values"), 
"DT_Output_3" AS 
(SELECT "DT_node_lookup_3"."KEY" AS "KEY", "DT_node_lookup_3".node_id_2 AS node_id_2, "DT_node_data_3".node_id AS node_id, "DT_node_data_3".feature AS feature, "DT_node_data_3".threshold AS threshold, "DT_node_data_3".count AS count, "DT_node_data_3".depth AS depth, "DT_node_data_3".parent_id AS parent_id, "DT_node_data_3"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_3" LEFT OUTER JOIN "DT_node_data_3" ON "DT_node_lookup_3".node_id_2 = "DT_node_data_3".node_id), 
"AdaBoost_Estim_3" AS 
(SELECT "DT_Output_3"."KEY" AS "KEY", "DT_Output_3"."Estimator" AS "Estimator", 0.216594777633 AS "Weight", 3 AS est_index 
FROM "DT_Output_3"), 
"WeightedEstimators" AS 
(SELECT ensemble_score_union."KEY" AS "KEY", ensemble_score_union."Estimator" AS "Estimator", ensemble_score_union."Weight" AS "Weight", ensemble_score_union.est_index AS est_index 
FROM (SELECT "AdaBoost_Estim_0"."KEY" AS "KEY", "AdaBoost_Estim_0"."Estimator" AS "Estimator", "AdaBoost_Estim_0"."Weight" AS "Weight", "AdaBoost_Estim_0".est_index AS est_index 
FROM "AdaBoost_Estim_0" UNION ALL SELECT "AdaBoost_Estim_1"."KEY" AS "KEY", "AdaBoost_Estim_1"."Estimator" AS "Estimator", "AdaBoost_Estim_1"."Weight" AS "Weight", "AdaBoost_Estim_1".est_index AS est_index 
FROM "AdaBoost_Estim_1" UNION ALL SELECT "AdaBoost_Estim_2"."KEY" AS "KEY", "AdaBoost_Estim_2"."Estimator" AS "Estimator", "AdaBoost_Estim_2"."Weight" AS "Weight", "AdaBoost_Estim_2".est_index AS est_index 
FROM "AdaBoost_Estim_2" UNION ALL SELECT "AdaBoost_Estim_3"."KEY" AS "KEY", "AdaBoost_Estim_3"."Estimator" AS "Estimator", "AdaBoost_Estim_3"."Weight" AS "Weight", "AdaBoost_Estim_3".est_index AS est_index 
FROM "AdaBoost_Estim_3") AS ensemble_score_union), 
"Cumulative_Frequencies" AS 
(SELECT "CW"."KEY" AS "KEY", "CW"."Estimator" AS "Estimator", "CW"."Weight" AS "Weight", "CW".est_index AS est_index, "CW".cum_weight AS cum_weight 
FROM (SELECT u1."KEY" AS "KEY", u1."Estimator" AS "Estimator", u1."Weight" AS "Weight", u1.est_index AS est_index, sum(u2."Weight") AS cum_weight 
FROM "WeightedEstimators" AS u1, "WeightedEstimators" AS u2 
WHERE u1."Estimator" >= u2."Estimator" AND u1."KEY" = u2."KEY" GROUP BY u1."KEY", u1.est_index, u1."Estimator", u1."Weight") AS "CW"), 
"Quantiles" AS 
(SELECT "CW2"."KEY" AS "KEY", "CW2"."Quantile" AS "Quantile" 
FROM (SELECT "Cumulative_Frequencies"."KEY" AS "KEY", min("Cumulative_Frequencies"."Estimator") AS "Quantile" 
FROM "Cumulative_Frequencies" 
WHERE "Cumulative_Frequencies".cum_weight >= 0.5 GROUP BY "Cumulative_Frequencies"."KEY") AS "CW2")
 SELECT "Quantiles"."KEY" AS "KEY", "Quantiles"."Quantile" AS "Estimator" 
FROM "Quantiles"