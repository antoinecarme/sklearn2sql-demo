-- This SQL code was generated by sklearn2sql (development version).
-- Copyright 2017

WITH "DT_node_lookup" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_274" <= 1.2415075302124023) THEN CASE WHEN ("ADS"."Feature_189" <= 0.02534140832722187) THEN CASE WHEN ("ADS"."Feature_339" <= 0.7861425280570984) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_244" <= -0.4242818355560303) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_216" <= 1.0437026023864746) THEN 9 ELSE 10 END END AS node_id_2 
FROM "RandomReg_500" "ADS"), 
"DT_node_data" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 0 AS node_id, 'Feature_274' AS feature, 1.2415075302124023 AS threshold, 25 AS count, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 20.95521556335629 AS "Estimator" FROM DUAL UNION ALL SELECT 1 AS node_id, 'Feature_189' AS feature, 0.02534140832722187 AS threshold, 21 AS count, 1 AS depth, 0 AS parent_id, -83.47209340384232 AS "Estimator" FROM DUAL UNION ALL SELECT 2 AS node_id, 'Feature_339' AS feature, 0.7861425280570984 AS threshold, 7 AS count, 2 AS depth, 1 AS parent_id, -251.78463687895427 AS "Estimator" FROM DUAL UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS count, 3 AS depth, 2 AS parent_id, -178.2211177455906 AS "Estimator" FROM DUAL UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 3 AS depth, 2 AS parent_id, -349.86932905677253 AS "Estimator" FROM DUAL UNION ALL SELECT 5 AS node_id, 'Feature_244' AS feature, -0.4242818355560303 AS threshold, 14 AS count, 2 AS depth, 1 AS parent_id, 0.6841783337136614 AS "Estimator" FROM DUAL UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS count, 3 AS depth, 5 AS parent_id, 126.72419771617075 AS "Estimator" FROM DUAL UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 10 AS count, 3 AS depth, 5 AS parent_id, -49.731829419269175 AS "Estimator" FROM DUAL UNION ALL SELECT 8 AS node_id, 'Feature_216' AS feature, 1.0437026023864746 AS threshold, 4 AS count, 1 AS depth, 0 AS parent_id, 569.198587641149 AS "Estimator" FROM DUAL UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 2 AS depth, 8 AS parent_id, 605.6206481037917 AS "Estimator" FROM DUAL UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 2 AS depth, 8 AS parent_id, 459.9324062532205 AS "Estimator" FROM DUAL) "Values"), 
"DT_Output" AS 
(SELECT "DT_node_lookup"."KEY" AS "KEY", "DT_node_lookup".node_id_2 AS node_id_2, "DT_node_data".node_id AS node_id, "DT_node_data".feature AS feature, "DT_node_data".threshold AS threshold, "DT_node_data".count AS count, "DT_node_data".depth AS depth, "DT_node_data".parent_id AS parent_id, "DT_node_data"."Estimator" AS "Estimator" 
FROM "DT_node_lookup" LEFT OUTER JOIN "DT_node_data" ON "DT_node_lookup".node_id_2 = "DT_node_data".node_id), 
"AdaBoost_Estim_0" AS 
(SELECT "DT_Output"."KEY" AS "KEY", "DT_Output"."Estimator" AS "Estimator", 0.176248431609 AS "Weight", 0 AS est_index 
FROM "DT_Output"), 
"DT_node_lookup_1" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_296" <= 1.1239371299743652) THEN CASE WHEN ("ADS"."Feature_99" <= 1.2143049240112305) THEN CASE WHEN ("ADS"."Feature_276" <= -0.005688520148396492) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_413" <= 0.6905743479728699) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_183" <= -1.697113275527954) THEN 9 ELSE 10 END END AS node_id_2 
FROM "RandomReg_500" "ADS"), 
"DT_node_data_1" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 0 AS node_id, 'Feature_296' AS feature, 1.1239371299743652 AS threshold, 25 AS count, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, -11.370734292512138 AS "Estimator" FROM DUAL UNION ALL SELECT 1 AS node_id, 'Feature_99' AS feature, 1.2143049240112305 AS threshold, 23 AS count, 1 AS depth, 0 AS parent_id, -58.68788746390506 AS "Estimator" FROM DUAL UNION ALL SELECT 2 AS node_id, 'Feature_276' AS feature, -0.005688520148396492 AS threshold, 18 AS count, 2 AS depth, 1 AS parent_id, 13.618081728752436 AS "Estimator" FROM DUAL UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 10 AS count, 3 AS depth, 2 AS parent_id, 95.97960087429823 AS "Estimator" FROM DUAL UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 8 AS count, 3 AS depth, 2 AS parent_id, -89.33381720317979 AS "Estimator" FROM DUAL UNION ALL SELECT 5 AS node_id, 'Feature_413' AS feature, 0.6905743479728699 AS threshold, 5 AS count, 2 AS depth, 1 AS parent_id, -318.9893765574719 AS "Estimator" FROM DUAL UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 3 AS depth, 5 AS parent_id, -202.76162269171897 AS "Estimator" FROM DUAL UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 3 AS depth, 5 AS parent_id, -396.4745458013072 AS "Estimator" FROM DUAL UNION ALL SELECT 8 AS node_id, 'Feature_183' AS feature, -1.697113275527954 AS threshold, 2 AS count, 1 AS depth, 0 AS parent_id, 532.7765271785061 AS "Estimator" FROM DUAL UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 2 AS depth, 8 AS parent_id, 605.6206481037917 AS "Estimator" FROM DUAL UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 2 AS depth, 8 AS parent_id, 459.9324062532205 AS "Estimator" FROM DUAL) "Values"), 
"DT_Output_1" AS 
(SELECT "DT_node_lookup_1"."KEY" AS "KEY", "DT_node_lookup_1".node_id_2 AS node_id_2, "DT_node_data_1".node_id AS node_id, "DT_node_data_1".feature AS feature, "DT_node_data_1".threshold AS threshold, "DT_node_data_1".count AS count, "DT_node_data_1".depth AS depth, "DT_node_data_1".parent_id AS parent_id, "DT_node_data_1"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_1" LEFT OUTER JOIN "DT_node_data_1" ON "DT_node_lookup_1".node_id_2 = "DT_node_data_1".node_id), 
"AdaBoost_Estim_1" AS 
(SELECT "DT_Output_1"."KEY" AS "KEY", "DT_Output_1"."Estimator" AS "Estimator", 0.348711609336 AS "Weight", 1 AS est_index 
FROM "DT_Output_1"), 
"DT_node_lookup_2" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_0" <= 0.8718457221984863) THEN CASE WHEN ("ADS"."Feature_20" <= 0.7184655070304871) THEN CASE WHEN ("ADS"."Feature_478" <= 1.031079888343811) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_369" <= -0.5116589665412903) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_457" <= -0.11930069327354431) THEN CASE WHEN ("ADS"."Feature_163" <= 0.28430405259132385) THEN 10 ELSE 11 END ELSE 12 END END AS node_id_2 
FROM "RandomReg_500" "ADS"), 
"DT_node_data_2" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 0 AS node_id, 'Feature_0' AS feature, 0.8718457221984863 AS threshold, 25 AS count, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, -157.16865672739632 AS "Estimator" FROM DUAL UNION ALL SELECT 1 AS node_id, 'Feature_20' AS feature, 0.7184655070304871 AS threshold, 19 AS count, 1 AS depth, 0 AS parent_id, -262.3587350801489 AS "Estimator" FROM DUAL UNION ALL SELECT 2 AS node_id, 'Feature_478' AS feature, 1.031079888343811 AS threshold, 8 AS count, 2 AS depth, 1 AS parent_id, -151.14891391716606 AS "Estimator" FROM DUAL UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS count, 3 AS depth, 2 AS parent_id, -197.90470136376413 AS "Estimator" FROM DUAL UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS count, 3 AS depth, 2 AS parent_id, -104.39312647056799 AS "Estimator" FROM DUAL UNION ALL SELECT 5 AS node_id, 'Feature_369' AS feature, -0.5116589665412903 AS threshold, 11 AS count, 2 AS depth, 1 AS parent_id, -343.23860501686374 AS "Estimator" FROM DUAL UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 5 AS parent_id, -415.6958459005518 AS "Estimator" FROM DUAL UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 10 AS count, 3 AS depth, 5 AS parent_id, -335.9928809284949 AS "Estimator" FROM DUAL UNION ALL SELECT 8 AS node_id, 'Feature_457' AS feature, -0.11930069327354431 AS threshold, 6 AS count, 1 AS depth, 0 AS parent_id, 175.93325805632014 AS "Estimator" FROM DUAL UNION ALL SELECT 9 AS node_id, 'Feature_163' AS feature, 0.28430405259132385 AS threshold, 5 AS count, 2 AS depth, 8 AS parent_id, 89.9957800468258 AS "Estimator" FROM DUAL UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 9 AS parent_id, 16.16477089946953 AS "Estimator" FROM DUAL UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS count, 3 AS depth, 9 AS parent_id, 108.45353233366487 AS "Estimator" FROM DUAL UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 2 AS depth, 8 AS parent_id, 605.6206481037917 AS "Estimator" FROM DUAL) "Values"), 
"DT_Output_2" AS 
(SELECT "DT_node_lookup_2"."KEY" AS "KEY", "DT_node_lookup_2".node_id_2 AS node_id_2, "DT_node_data_2".node_id AS node_id, "DT_node_data_2".feature AS feature, "DT_node_data_2".threshold AS threshold, "DT_node_data_2".count AS count, "DT_node_data_2".depth AS depth, "DT_node_data_2".parent_id AS parent_id, "DT_node_data_2"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_2" LEFT OUTER JOIN "DT_node_data_2" ON "DT_node_lookup_2".node_id_2 = "DT_node_data_2".node_id), 
"AdaBoost_Estim_2" AS 
(SELECT "DT_Output_2"."KEY" AS "KEY", "DT_Output_2"."Estimator" AS "Estimator", 0.269479790144 AS "Weight", 2 AS est_index 
FROM "DT_Output_2"), 
"DT_node_lookup_3" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_354" <= 1.402106761932373) THEN CASE WHEN ("ADS"."Feature_425" <= 0.6036145091056824) THEN CASE WHEN ("ADS"."Feature_393" <= -0.6011977791786194) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_496" <= 0.6304233074188232) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_178" <= 0.11394509673118591) THEN 9 ELSE 10 END END AS node_id_2 
FROM "RandomReg_500" "ADS"), 
"DT_node_data_3" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 0 AS node_id, 'Feature_354' AS feature, 1.402106761932373 AS threshold, 25 AS count, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, -6.154167995165104 AS "Estimator" FROM DUAL UNION ALL SELECT 1 AS node_id, 'Feature_425' AS feature, 0.6036145091056824 AS threshold, 20 AS count, 1 AS depth, 0 AS parent_id, -129.96022364979007 AS "Estimator" FROM DUAL UNION ALL SELECT 2 AS node_id, 'Feature_393' AS feature, -0.6011977791786194 AS threshold, 10 AS count, 2 AS depth, 1 AS parent_id, 26.775879341648658 AS "Estimator" FROM DUAL UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS count, 3 AS depth, 2 AS parent_id, 125.98052878595513 AS "Estimator" FROM DUAL UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 6 AS count, 3 AS depth, 2 AS parent_id, -39.360553621222316 AS "Estimator" FROM DUAL UNION ALL SELECT 5 AS node_id, 'Feature_496' AS feature, 0.6304233074188232 AS threshold, 10 AS count, 2 AS depth, 1 AS parent_id, -286.6963266412288 AS "Estimator" FROM DUAL UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 3 AS depth, 5 AS parent_id, -177.38486488650634 AS "Estimator" FROM DUAL UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 7 AS count, 3 AS depth, 5 AS parent_id, -333.5440959646812 AS "Estimator" FROM DUAL UNION ALL SELECT 8 AS node_id, 'Feature_178' AS feature, 0.11394509673118591 AS threshold, 5 AS count, 1 AS depth, 0 AS parent_id, 489.0700546233347 AS "Estimator" FROM DUAL UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 2 AS depth, 8 AS parent_id, 605.6206481037917 AS "Estimator" FROM DUAL UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS count, 2 AS depth, 8 AS parent_id, 459.9324062532205 AS "Estimator" FROM DUAL) "Values"), 
"DT_Output_3" AS 
(SELECT "DT_node_lookup_3"."KEY" AS "KEY", "DT_node_lookup_3".node_id_2 AS node_id_2, "DT_node_data_3".node_id AS node_id, "DT_node_data_3".feature AS feature, "DT_node_data_3".threshold AS threshold, "DT_node_data_3".count AS count, "DT_node_data_3".depth AS depth, "DT_node_data_3".parent_id AS parent_id, "DT_node_data_3"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_3" LEFT OUTER JOIN "DT_node_data_3" ON "DT_node_lookup_3".node_id_2 = "DT_node_data_3".node_id), 
"AdaBoost_Estim_3" AS 
(SELECT "DT_Output_3"."KEY" AS "KEY", "DT_Output_3"."Estimator" AS "Estimator", 0.205560168911 AS "Weight", 3 AS est_index 
FROM "DT_Output_3"), 
"WeightedEstimators" AS 
(SELECT ensemble_score_union."KEY" AS "KEY", ensemble_score_union."Estimator" AS "Estimator", ensemble_score_union."Weight" AS "Weight", ensemble_score_union.est_index AS est_index 
FROM (SELECT "AdaBoost_Estim_0"."KEY" AS "KEY", "AdaBoost_Estim_0"."Estimator" AS "Estimator", "AdaBoost_Estim_0"."Weight" AS "Weight", "AdaBoost_Estim_0".est_index AS est_index 
FROM "AdaBoost_Estim_0" UNION ALL SELECT "AdaBoost_Estim_1"."KEY" AS "KEY", "AdaBoost_Estim_1"."Estimator" AS "Estimator", "AdaBoost_Estim_1"."Weight" AS "Weight", "AdaBoost_Estim_1".est_index AS est_index 
FROM "AdaBoost_Estim_1" UNION ALL SELECT "AdaBoost_Estim_2"."KEY" AS "KEY", "AdaBoost_Estim_2"."Estimator" AS "Estimator", "AdaBoost_Estim_2"."Weight" AS "Weight", "AdaBoost_Estim_2".est_index AS est_index 
FROM "AdaBoost_Estim_2" UNION ALL SELECT "AdaBoost_Estim_3"."KEY" AS "KEY", "AdaBoost_Estim_3"."Estimator" AS "Estimator", "AdaBoost_Estim_3"."Weight" AS "Weight", "AdaBoost_Estim_3".est_index AS est_index 
FROM "AdaBoost_Estim_3") ensemble_score_union), 
"Cumulative_Frequencies" AS 
(SELECT "CW"."KEY" AS "KEY", "CW"."Estimator" AS "Estimator", "CW"."Weight" AS "Weight", "CW".est_index AS est_index, "CW".cum_weight AS cum_weight 
FROM (SELECT u1."KEY" AS "KEY", u1."Estimator" AS "Estimator", u1."Weight" AS "Weight", u1.est_index AS est_index, sum(u2."Weight") AS cum_weight 
FROM "WeightedEstimators" u1, "WeightedEstimators" u2 
WHERE u1."Estimator" >= u2."Estimator" AND u1."KEY" = u2."KEY" GROUP BY u1."KEY", u1.est_index, u1."Estimator", u1."Weight") "CW"), 
"Quantiles" AS 
(SELECT "CW2"."KEY" AS "KEY", "CW2"."Quantile" AS "Quantile" 
FROM (SELECT "Cumulative_Frequencies"."KEY" AS "KEY", min("Cumulative_Frequencies"."Estimator") AS "Quantile" 
FROM "Cumulative_Frequencies" 
WHERE "Cumulative_Frequencies".cum_weight >= 0.5 GROUP BY "Cumulative_Frequencies"."KEY") "CW2")
 SELECT "Quantiles"."KEY" AS "KEY", "Quantiles"."Quantile" AS "Estimator" 
FROM "Quantiles"