-- This SQL code was generated by sklearn2sql (development version).
-- Copyright 2017

WITH [DT_node_lookup] AS 
(SELECT [ADS].[KEY] AS [KEY], CASE WHEN ([ADS].[Feature_313] <= 5.607107162475586) THEN CASE WHEN ([ADS].[Feature_148] <= 1.1389188766479492) THEN 2 ELSE CASE WHEN ([ADS].[Feature_340] <= 0.31268006563186646) THEN 4 ELSE 5 END END ELSE 6 END AS node_id_2 
FROM [FourClass_500] AS [ADS]), 
[DT_node_data] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Proba_0] AS [Proba_0], [Values].[LogProba_0] AS [LogProba_0], [Values].[Proba_1] AS [Proba_1], [Values].[LogProba_1] AS [LogProba_1], [Values].[Proba_2] AS [Proba_2], [Values].[LogProba_2] AS [LogProba_2], [Values].[Proba_3] AS [Proba_3], [Values].[LogProba_3] AS [LogProba_3], [Values].[Decision] AS [Decision], [Values].[DecisionProba] AS [DecisionProba] 
FROM (SELECT 0 AS node_id, 'Feature_313' AS feature, 5.607107162475586 AS threshold, 15 AS count, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.2 AS [Proba_0], -1.60943791243 AS [LogProba_0], 0.36 AS [Proba_1], -1.02165124753 AS [LogProba_1], 0.12 AS [Proba_2], -2.1202635362 AS [LogProba_2], 0.32 AS [Proba_3], -1.13943428319 AS [LogProba_3], 1 AS [Decision], 0.36 AS [DecisionProba] UNION ALL SELECT 1 AS node_id, 'Feature_148' AS feature, 1.1389188766479492 AS threshold, 11 AS count, 1 AS depth, 0 AS parent_id, 0.29411764705882354 AS [Proba_0], -1.22377543162 AS [LogProba_0], 0.5294117647058824 AS [Proba_1], -0.63598876672 AS [LogProba_1], 0.17647058823529413 AS [Proba_2], -1.73460105539 AS [LogProba_2], 0.0 AS [Proba_3], -1.79769313486231e+308 AS [LogProba_3], 1 AS [Decision], 0.529411764706 AS [DecisionProba] UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS count, 2 AS depth, 1 AS parent_id, 0.0 AS [Proba_0], -1.79769313486231e+308 AS [LogProba_0], 1.0 AS [Proba_1], 0.0 AS [LogProba_1], 0.0 AS [Proba_2], -1.79769313486231e+308 AS [LogProba_2], 0.0 AS [Proba_3], -1.79769313486231e+308 AS [LogProba_3], 1 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 3 AS node_id, 'Feature_340' AS feature, 0.31268006563186646 AS threshold, 6 AS count, 2 AS depth, 1 AS parent_id, 0.625 AS [Proba_0], -0.470003629246 AS [LogProba_0], 0.0 AS [Proba_1], -1.79769313486231e+308 AS [LogProba_1], 0.375 AS [Proba_2], -0.980829253012 AS [LogProba_2], 0.0 AS [Proba_3], -1.79769313486231e+308 AS [LogProba_3], 0 AS [Decision], 0.625 AS [DecisionProba] UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 3 AS depth, 3 AS parent_id, 0.0 AS [Proba_0], -1.79769313486231e+308 AS [LogProba_0], 0.0 AS [Proba_1], -1.79769313486231e+308 AS [LogProba_1], 1.0 AS [Proba_2], 0.0 AS [LogProba_2], 0.0 AS [Proba_3], -1.79769313486231e+308 AS [LogProba_3], 2 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 3 AS depth, 3 AS parent_id, 1.0 AS [Proba_0], 0.0 AS [LogProba_0], 0.0 AS [Proba_1], -1.79769313486231e+308 AS [LogProba_1], 0.0 AS [Proba_2], -1.79769313486231e+308 AS [LogProba_2], 0.0 AS [Proba_3], -1.79769313486231e+308 AS [LogProba_3], 0 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS count, 1 AS depth, 0 AS parent_id, 0.0 AS [Proba_0], -1.79769313486231e+308 AS [LogProba_0], 0.0 AS [Proba_1], -1.79769313486231e+308 AS [LogProba_1], 0.0 AS [Proba_2], -1.79769313486231e+308 AS [LogProba_2], 1.0 AS [Proba_3], 0.0 AS [LogProba_3], 3 AS [Decision], 1.0 AS [DecisionProba]) AS [Values]), 
[DT_Output] AS 
(SELECT [DT_node_lookup].[KEY] AS [KEY], [DT_node_lookup].node_id_2 AS node_id_2, [DT_node_data].node_id AS node_id, [DT_node_data].feature AS feature, [DT_node_data].threshold AS threshold, [DT_node_data].count AS count, [DT_node_data].depth AS depth, [DT_node_data].parent_id AS parent_id, [DT_node_data].[Proba_0] AS [Proba_0], [DT_node_data].[LogProba_0] AS [LogProba_0], [DT_node_data].[Proba_1] AS [Proba_1], [DT_node_data].[LogProba_1] AS [LogProba_1], [DT_node_data].[Proba_2] AS [Proba_2], [DT_node_data].[LogProba_2] AS [LogProba_2], [DT_node_data].[Proba_3] AS [Proba_3], [DT_node_data].[LogProba_3] AS [LogProba_3], [DT_node_data].[Decision] AS [Decision], [DT_node_data].[DecisionProba] AS [DecisionProba] 
FROM [DT_node_lookup] LEFT OUTER JOIN [DT_node_data] ON [DT_node_lookup].node_id_2 = [DT_node_data].node_id), 
[BAG_Tree_0] AS 
(SELECT [DT_Output].[KEY] AS [KEY], CAST(NULL AS FLOAT) AS [Score_0], [DT_Output].[Proba_0] AS [Proba_0], [DT_Output].[LogProba_0] AS [LogProba_0], CAST(NULL AS FLOAT) AS [Score_1], [DT_Output].[Proba_1] AS [Proba_1], [DT_Output].[LogProba_1] AS [LogProba_1], CAST(NULL AS FLOAT) AS [Score_2], [DT_Output].[Proba_2] AS [Proba_2], [DT_Output].[LogProba_2] AS [LogProba_2], CAST(NULL AS FLOAT) AS [Score_3], [DT_Output].[Proba_3] AS [Proba_3], [DT_Output].[LogProba_3] AS [LogProba_3] 
FROM [DT_Output]), 
[DT_node_lookup_1] AS 
(SELECT [ADS].[KEY] AS [KEY], CASE WHEN ([ADS].[Feature_3] <= 0.901469349861145) THEN CASE WHEN ([ADS].[Feature_195] <= 4.888381004333496) THEN CASE WHEN ([ADS].[Feature_161] <= 0.517398476600647) THEN 3 ELSE CASE WHEN ([ADS].[Feature_283] <= 1.5138931274414062) THEN 5 ELSE 6 END END ELSE 7 END ELSE 8 END AS node_id_2 
FROM [FourClass_500] AS [ADS]), 
[DT_node_data_1] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Proba_0] AS [Proba_0], [Values].[LogProba_0] AS [LogProba_0], [Values].[Proba_1] AS [Proba_1], [Values].[LogProba_1] AS [LogProba_1], [Values].[Proba_2] AS [Proba_2], [Values].[LogProba_2] AS [LogProba_2], [Values].[Proba_3] AS [Proba_3], [Values].[LogProba_3] AS [LogProba_3], [Values].[Decision] AS [Decision], [Values].[DecisionProba] AS [DecisionProba] 
FROM (SELECT 0 AS node_id, 'Feature_3' AS feature, 0.901469349861145 AS threshold, 16 AS count, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.44 AS [Proba_0], -0.82098055207 AS [LogProba_0], 0.24 AS [Proba_1], -1.42711635564 AS [LogProba_1], 0.12 AS [Proba_2], -2.1202635362 AS [LogProba_2], 0.2 AS [Proba_3], -1.60943791243 AS [LogProba_3], 0 AS [Decision], 0.44 AS [DecisionProba] UNION ALL SELECT 1 AS node_id, 'Feature_195' AS feature, 4.888381004333496 AS threshold, 12 AS count, 1 AS depth, 0 AS parent_id, 0.06666666666666667 AS [Proba_0], -2.7080502011 AS [LogProba_0], 0.4 AS [Proba_1], -0.916290731874 AS [LogProba_1], 0.2 AS [Proba_2], -1.60943791243 AS [LogProba_2], 0.3333333333333333 AS [Proba_3], -1.09861228867 AS [LogProba_3], 1 AS [Decision], 0.4 AS [DecisionProba] UNION ALL SELECT 2 AS node_id, 'Feature_161' AS feature, 0.517398476600647 AS threshold, 7 AS count, 2 AS depth, 1 AS parent_id, 0.1111111111111111 AS [Proba_0], -2.19722457734 AS [LogProba_0], 0.0 AS [Proba_1], -1.79769313486231e+308 AS [LogProba_1], 0.3333333333333333 AS [Proba_2], -1.09861228867 AS [LogProba_2], 0.5555555555555556 AS [Proba_3], -0.587786664902 AS [LogProba_3], 3 AS [Decision], 0.555555555556 AS [DecisionProba] UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS count, 3 AS depth, 2 AS parent_id, 0.0 AS [Proba_0], -1.79769313486231e+308 AS [LogProba_0], 0.0 AS [Proba_1], -1.79769313486231e+308 AS [LogProba_1], 0.0 AS [Proba_2], -1.79769313486231e+308 AS [LogProba_2], 1.0 AS [Proba_3], 0.0 AS [LogProba_3], 3 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 4 AS node_id, 'Feature_283' AS feature, 1.5138931274414062 AS threshold, 3 AS count, 3 AS depth, 2 AS parent_id, 0.25 AS [Proba_0], -1.38629436112 AS [LogProba_0], 0.0 AS [Proba_1], -1.79769313486231e+308 AS [LogProba_1], 0.75 AS [Proba_2], -0.287682072452 AS [LogProba_2], 0.0 AS [Proba_3], -1.79769313486231e+308 AS [LogProba_3], 2 AS [Decision], 0.75 AS [DecisionProba] UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 4 AS depth, 4 AS parent_id, 0.0 AS [Proba_0], -1.79769313486231e+308 AS [LogProba_0], 0.0 AS [Proba_1], -1.79769313486231e+308 AS [LogProba_1], 1.0 AS [Proba_2], 0.0 AS [LogProba_2], 0.0 AS [Proba_3], -1.79769313486231e+308 AS [LogProba_3], 2 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 4 AS parent_id, 1.0 AS [Proba_0], 0.0 AS [LogProba_0], 0.0 AS [Proba_1], -1.79769313486231e+308 AS [LogProba_1], 0.0 AS [Proba_2], -1.79769313486231e+308 AS [LogProba_2], 0.0 AS [Proba_3], -1.79769313486231e+308 AS [LogProba_3], 0 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS count, 2 AS depth, 1 AS parent_id, 0.0 AS [Proba_0], -1.79769313486231e+308 AS [LogProba_0], 1.0 AS [Proba_1], 0.0 AS [LogProba_1], 0.0 AS [Proba_2], -1.79769313486231e+308 AS [LogProba_2], 0.0 AS [Proba_3], -1.79769313486231e+308 AS [LogProba_3], 1 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS count, 1 AS depth, 0 AS parent_id, 1.0 AS [Proba_0], 0.0 AS [LogProba_0], 0.0 AS [Proba_1], -1.79769313486231e+308 AS [LogProba_1], 0.0 AS [Proba_2], -1.79769313486231e+308 AS [LogProba_2], 0.0 AS [Proba_3], -1.79769313486231e+308 AS [LogProba_3], 0 AS [Decision], 1.0 AS [DecisionProba]) AS [Values]), 
[DT_Output_1] AS 
(SELECT [DT_node_lookup_1].[KEY] AS [KEY], [DT_node_lookup_1].node_id_2 AS node_id_2, [DT_node_data_1].node_id AS node_id, [DT_node_data_1].feature AS feature, [DT_node_data_1].threshold AS threshold, [DT_node_data_1].count AS count, [DT_node_data_1].depth AS depth, [DT_node_data_1].parent_id AS parent_id, [DT_node_data_1].[Proba_0] AS [Proba_0], [DT_node_data_1].[LogProba_0] AS [LogProba_0], [DT_node_data_1].[Proba_1] AS [Proba_1], [DT_node_data_1].[LogProba_1] AS [LogProba_1], [DT_node_data_1].[Proba_2] AS [Proba_2], [DT_node_data_1].[LogProba_2] AS [LogProba_2], [DT_node_data_1].[Proba_3] AS [Proba_3], [DT_node_data_1].[LogProba_3] AS [LogProba_3], [DT_node_data_1].[Decision] AS [Decision], [DT_node_data_1].[DecisionProba] AS [DecisionProba] 
FROM [DT_node_lookup_1] LEFT OUTER JOIN [DT_node_data_1] ON [DT_node_lookup_1].node_id_2 = [DT_node_data_1].node_id), 
[BAG_Tree_1] AS 
(SELECT [DT_Output_1].[KEY] AS [KEY], CAST(NULL AS FLOAT) AS [Score_0], [DT_Output_1].[Proba_0] AS [Proba_0], [DT_Output_1].[LogProba_0] AS [LogProba_0], CAST(NULL AS FLOAT) AS [Score_1], [DT_Output_1].[Proba_1] AS [Proba_1], [DT_Output_1].[LogProba_1] AS [LogProba_1], CAST(NULL AS FLOAT) AS [Score_2], [DT_Output_1].[Proba_2] AS [Proba_2], [DT_Output_1].[LogProba_2] AS [LogProba_2], CAST(NULL AS FLOAT) AS [Score_3], [DT_Output_1].[Proba_3] AS [Proba_3], [DT_Output_1].[LogProba_3] AS [LogProba_3] 
FROM [DT_Output_1]), 
[DT_node_lookup_2] AS 
(SELECT [ADS].[KEY] AS [KEY], CASE WHEN ([ADS].[Feature_260] <= 0.2520650327205658) THEN CASE WHEN ([ADS].[Feature_82] <= -0.28300195932388306) THEN CASE WHEN ([ADS].[Feature_279] <= 0.18779811263084412) THEN 3 ELSE 4 END ELSE 5 END ELSE CASE WHEN ([ADS].[Feature_102] <= -0.8977431654930115) THEN 7 ELSE 8 END END AS node_id_2 
FROM [FourClass_500] AS [ADS]), 
[DT_node_data_2] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Proba_0] AS [Proba_0], [Values].[LogProba_0] AS [LogProba_0], [Values].[Proba_1] AS [Proba_1], [Values].[LogProba_1] AS [LogProba_1], [Values].[Proba_2] AS [Proba_2], [Values].[LogProba_2] AS [LogProba_2], [Values].[Proba_3] AS [Proba_3], [Values].[LogProba_3] AS [LogProba_3], [Values].[Decision] AS [Decision], [Values].[DecisionProba] AS [DecisionProba] 
FROM (SELECT 0 AS node_id, 'Feature_260' AS feature, 0.2520650327205658 AS threshold, 16 AS count, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.4 AS [Proba_0], -0.916290731874 AS [LogProba_0], 0.36 AS [Proba_1], -1.02165124753 AS [LogProba_1], 0.08 AS [Proba_2], -2.52572864431 AS [LogProba_2], 0.16 AS [Proba_3], -1.83258146375 AS [LogProba_3], 0 AS [Decision], 0.4 AS [DecisionProba] UNION ALL SELECT 1 AS node_id, 'Feature_82' AS feature, -0.28300195932388306 AS threshold, 9 AS count, 1 AS depth, 0 AS parent_id, 0.6666666666666666 AS [Proba_0], -0.405465108108 AS [LogProba_0], 0.0 AS [Proba_1], -1.79769313486231e+308 AS [LogProba_1], 0.06666666666666667 AS [Proba_2], -2.7080502011 AS [LogProba_2], 0.26666666666666666 AS [Proba_3], -1.32175583998 AS [LogProba_3], 0 AS [Decision], 0.666666666667 AS [DecisionProba] UNION ALL SELECT 2 AS node_id, 'Feature_279' AS feature, 0.18779811263084412 AS threshold, 4 AS count, 2 AS depth, 1 AS parent_id, 0.0 AS [Proba_0], -1.79769313486231e+308 AS [LogProba_0], 0.0 AS [Proba_1], -1.79769313486231e+308 AS [LogProba_1], 0.2 AS [Proba_2], -1.60943791243 AS [LogProba_2], 0.8 AS [Proba_3], -0.223143551314 AS [LogProba_3], 3 AS [Decision], 0.8 AS [DecisionProba] UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 2 AS parent_id, 0.0 AS [Proba_0], -1.79769313486231e+308 AS [LogProba_0], 0.0 AS [Proba_1], -1.79769313486231e+308 AS [LogProba_1], 1.0 AS [Proba_2], 0.0 AS [LogProba_2], 0.0 AS [Proba_3], -1.79769313486231e+308 AS [LogProba_3], 2 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 3 AS depth, 2 AS parent_id, 0.0 AS [Proba_0], -1.79769313486231e+308 AS [LogProba_0], 0.0 AS [Proba_1], -1.79769313486231e+308 AS [LogProba_1], 0.0 AS [Proba_2], -1.79769313486231e+308 AS [LogProba_2], 1.0 AS [Proba_3], 0.0 AS [LogProba_3], 3 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS count, 2 AS depth, 1 AS parent_id, 1.0 AS [Proba_0], 0.0 AS [LogProba_0], 0.0 AS [Proba_1], -1.79769313486231e+308 AS [LogProba_1], 0.0 AS [Proba_2], -1.79769313486231e+308 AS [LogProba_2], 0.0 AS [Proba_3], -1.79769313486231e+308 AS [LogProba_3], 0 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 6 AS node_id, 'Feature_102' AS feature, -0.8977431654930115 AS threshold, 7 AS count, 1 AS depth, 0 AS parent_id, 0.0 AS [Proba_0], -1.79769313486231e+308 AS [LogProba_0], 0.9 AS [Proba_1], -0.105360515658 AS [LogProba_1], 0.1 AS [Proba_2], -2.30258509299 AS [LogProba_2], 0.0 AS [Proba_3], -1.79769313486231e+308 AS [LogProba_3], 1 AS [Decision], 0.9 AS [DecisionProba] UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 2 AS depth, 6 AS parent_id, 0.0 AS [Proba_0], -1.79769313486231e+308 AS [LogProba_0], 0.0 AS [Proba_1], -1.79769313486231e+308 AS [LogProba_1], 1.0 AS [Proba_2], 0.0 AS [LogProba_2], 0.0 AS [Proba_3], -1.79769313486231e+308 AS [LogProba_3], 2 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 6 AS count, 2 AS depth, 6 AS parent_id, 0.0 AS [Proba_0], -1.79769313486231e+308 AS [LogProba_0], 1.0 AS [Proba_1], 0.0 AS [LogProba_1], 0.0 AS [Proba_2], -1.79769313486231e+308 AS [LogProba_2], 0.0 AS [Proba_3], -1.79769313486231e+308 AS [LogProba_3], 1 AS [Decision], 1.0 AS [DecisionProba]) AS [Values]), 
[DT_Output_2] AS 
(SELECT [DT_node_lookup_2].[KEY] AS [KEY], [DT_node_lookup_2].node_id_2 AS node_id_2, [DT_node_data_2].node_id AS node_id, [DT_node_data_2].feature AS feature, [DT_node_data_2].threshold AS threshold, [DT_node_data_2].count AS count, [DT_node_data_2].depth AS depth, [DT_node_data_2].parent_id AS parent_id, [DT_node_data_2].[Proba_0] AS [Proba_0], [DT_node_data_2].[LogProba_0] AS [LogProba_0], [DT_node_data_2].[Proba_1] AS [Proba_1], [DT_node_data_2].[LogProba_1] AS [LogProba_1], [DT_node_data_2].[Proba_2] AS [Proba_2], [DT_node_data_2].[LogProba_2] AS [LogProba_2], [DT_node_data_2].[Proba_3] AS [Proba_3], [DT_node_data_2].[LogProba_3] AS [LogProba_3], [DT_node_data_2].[Decision] AS [Decision], [DT_node_data_2].[DecisionProba] AS [DecisionProba] 
FROM [DT_node_lookup_2] LEFT OUTER JOIN [DT_node_data_2] ON [DT_node_lookup_2].node_id_2 = [DT_node_data_2].node_id), 
[BAG_Tree_2] AS 
(SELECT [DT_Output_2].[KEY] AS [KEY], CAST(NULL AS FLOAT) AS [Score_0], [DT_Output_2].[Proba_0] AS [Proba_0], [DT_Output_2].[LogProba_0] AS [LogProba_0], CAST(NULL AS FLOAT) AS [Score_1], [DT_Output_2].[Proba_1] AS [Proba_1], [DT_Output_2].[LogProba_1] AS [LogProba_1], CAST(NULL AS FLOAT) AS [Score_2], [DT_Output_2].[Proba_2] AS [Proba_2], [DT_Output_2].[LogProba_2] AS [LogProba_2], CAST(NULL AS FLOAT) AS [Score_3], [DT_Output_2].[Proba_3] AS [Proba_3], [DT_Output_2].[LogProba_3] AS [LogProba_3] 
FROM [DT_Output_2]), 
[DT_node_lookup_3] AS 
(SELECT [ADS].[KEY] AS [KEY], CASE WHEN ([ADS].[Feature_149] <= -0.5841244459152222) THEN CASE WHEN ([ADS].[Feature_136] <= 0.10576342046260834) THEN 2 ELSE 3 END ELSE CASE WHEN ([ADS].[Feature_165] <= -0.8711355924606323) THEN 5 ELSE CASE WHEN ([ADS].[Feature_180] <= 0.7604273557662964) THEN 7 ELSE CASE WHEN ([ADS].[Feature_62] <= 0.024686217308044434) THEN 9 ELSE 10 END END END END AS node_id_2 
FROM [FourClass_500] AS [ADS]), 
[DT_node_data_3] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Proba_0] AS [Proba_0], [Values].[LogProba_0] AS [LogProba_0], [Values].[Proba_1] AS [Proba_1], [Values].[LogProba_1] AS [LogProba_1], [Values].[Proba_2] AS [Proba_2], [Values].[LogProba_2] AS [LogProba_2], [Values].[Proba_3] AS [Proba_3], [Values].[LogProba_3] AS [LogProba_3], [Values].[Decision] AS [Decision], [Values].[DecisionProba] AS [DecisionProba] 
FROM (SELECT 0 AS node_id, 'Feature_149' AS feature, -0.5841244459152222 AS threshold, 19 AS count, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.32 AS [Proba_0], -1.13943428319 AS [LogProba_0], 0.28 AS [Proba_1], -1.27296567581 AS [LogProba_1], 0.12 AS [Proba_2], -2.1202635362 AS [LogProba_2], 0.28 AS [Proba_3], -1.27296567581 AS [LogProba_3], 0 AS [Decision], 0.32 AS [DecisionProba] UNION ALL SELECT 1 AS node_id, 'Feature_136' AS feature, 0.10576342046260834 AS threshold, 7 AS count, 1 AS depth, 0 AS parent_id, 0.0 AS [Proba_0], -1.79769313486231e+308 AS [LogProba_0], 0.0 AS [Proba_1], -1.79769313486231e+308 AS [LogProba_1], 0.2222222222222222 AS [Proba_2], -1.50407739678 AS [LogProba_2], 0.7777777777777778 AS [Proba_3], -0.251314428281 AS [LogProba_3], 3 AS [Decision], 0.777777777778 AS [DecisionProba] UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 2 AS depth, 1 AS parent_id, 0.0 AS [Proba_0], -1.79769313486231e+308 AS [LogProba_0], 0.0 AS [Proba_1], -1.79769313486231e+308 AS [LogProba_1], 1.0 AS [Proba_2], 0.0 AS [LogProba_2], 0.0 AS [Proba_3], -1.79769313486231e+308 AS [LogProba_3], 2 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS count, 2 AS depth, 1 AS parent_id, 0.0 AS [Proba_0], -1.79769313486231e+308 AS [LogProba_0], 0.0 AS [Proba_1], -1.79769313486231e+308 AS [LogProba_1], 0.0 AS [Proba_2], -1.79769313486231e+308 AS [LogProba_2], 1.0 AS [Proba_3], 0.0 AS [LogProba_3], 3 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 4 AS node_id, 'Feature_165' AS feature, -0.8711355924606323 AS threshold, 12 AS count, 1 AS depth, 0 AS parent_id, 0.5 AS [Proba_0], -0.69314718056 AS [LogProba_0], 0.4375 AS [Proba_1], -0.826678573184 AS [LogProba_1], 0.0625 AS [Proba_2], -2.77258872224 AS [LogProba_2], 0.0 AS [Proba_3], -1.79769313486231e+308 AS [LogProba_3], 0 AS [Decision], 0.5 AS [DecisionProba] UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS count, 2 AS depth, 4 AS parent_id, 1.0 AS [Proba_0], 0.0 AS [LogProba_0], 0.0 AS [Proba_1], -1.79769313486231e+308 AS [LogProba_1], 0.0 AS [Proba_2], -1.79769313486231e+308 AS [LogProba_2], 0.0 AS [Proba_3], -1.79769313486231e+308 AS [LogProba_3], 0 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 6 AS node_id, 'Feature_180' AS feature, 0.7604273557662964 AS threshold, 8 AS count, 2 AS depth, 4 AS parent_id, 0.1111111111111111 AS [Proba_0], -2.19722457734 AS [LogProba_0], 0.7777777777777778 AS [Proba_1], -0.251314428281 AS [LogProba_1], 0.1111111111111111 AS [Proba_2], -2.19722457734 AS [LogProba_2], 0.0 AS [Proba_3], -1.79769313486231e+308 AS [LogProba_3], 1 AS [Decision], 0.777777777778 AS [DecisionProba] UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 6 AS count, 3 AS depth, 6 AS parent_id, 0.0 AS [Proba_0], -1.79769313486231e+308 AS [LogProba_0], 1.0 AS [Proba_1], 0.0 AS [LogProba_1], 0.0 AS [Proba_2], -1.79769313486231e+308 AS [LogProba_2], 0.0 AS [Proba_3], -1.79769313486231e+308 AS [LogProba_3], 1 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 8 AS node_id, 'Feature_62' AS feature, 0.024686217308044434 AS threshold, 2 AS count, 3 AS depth, 6 AS parent_id, 0.5 AS [Proba_0], -0.69314718056 AS [LogProba_0], 0.0 AS [Proba_1], -1.79769313486231e+308 AS [LogProba_1], 0.5 AS [Proba_2], -0.69314718056 AS [LogProba_2], 0.0 AS [Proba_3], -1.79769313486231e+308 AS [LogProba_3], 0 AS [Decision], 0.5 AS [DecisionProba] UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 8 AS parent_id, 1.0 AS [Proba_0], 0.0 AS [LogProba_0], 0.0 AS [Proba_1], -1.79769313486231e+308 AS [LogProba_1], 0.0 AS [Proba_2], -1.79769313486231e+308 AS [LogProba_2], 0.0 AS [Proba_3], -1.79769313486231e+308 AS [LogProba_3], 0 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 8 AS parent_id, 0.0 AS [Proba_0], -1.79769313486231e+308 AS [LogProba_0], 0.0 AS [Proba_1], -1.79769313486231e+308 AS [LogProba_1], 1.0 AS [Proba_2], 0.0 AS [LogProba_2], 0.0 AS [Proba_3], -1.79769313486231e+308 AS [LogProba_3], 2 AS [Decision], 1.0 AS [DecisionProba]) AS [Values]), 
[DT_Output_3] AS 
(SELECT [DT_node_lookup_3].[KEY] AS [KEY], [DT_node_lookup_3].node_id_2 AS node_id_2, [DT_node_data_3].node_id AS node_id, [DT_node_data_3].feature AS feature, [DT_node_data_3].threshold AS threshold, [DT_node_data_3].count AS count, [DT_node_data_3].depth AS depth, [DT_node_data_3].parent_id AS parent_id, [DT_node_data_3].[Proba_0] AS [Proba_0], [DT_node_data_3].[LogProba_0] AS [LogProba_0], [DT_node_data_3].[Proba_1] AS [Proba_1], [DT_node_data_3].[LogProba_1] AS [LogProba_1], [DT_node_data_3].[Proba_2] AS [Proba_2], [DT_node_data_3].[LogProba_2] AS [LogProba_2], [DT_node_data_3].[Proba_3] AS [Proba_3], [DT_node_data_3].[LogProba_3] AS [LogProba_3], [DT_node_data_3].[Decision] AS [Decision], [DT_node_data_3].[DecisionProba] AS [DecisionProba] 
FROM [DT_node_lookup_3] LEFT OUTER JOIN [DT_node_data_3] ON [DT_node_lookup_3].node_id_2 = [DT_node_data_3].node_id), 
[BAG_Tree_3] AS 
(SELECT [DT_Output_3].[KEY] AS [KEY], CAST(NULL AS FLOAT) AS [Score_0], [DT_Output_3].[Proba_0] AS [Proba_0], [DT_Output_3].[LogProba_0] AS [LogProba_0], CAST(NULL AS FLOAT) AS [Score_1], [DT_Output_3].[Proba_1] AS [Proba_1], [DT_Output_3].[LogProba_1] AS [LogProba_1], CAST(NULL AS FLOAT) AS [Score_2], [DT_Output_3].[Proba_2] AS [Proba_2], [DT_Output_3].[LogProba_2] AS [LogProba_2], CAST(NULL AS FLOAT) AS [Score_3], [DT_Output_3].[Proba_3] AS [Proba_3], [DT_Output_3].[LogProba_3] AS [LogProba_3] 
FROM [DT_Output_3]), 
[DT_node_lookup_4] AS 
(SELECT [ADS].[KEY] AS [KEY], CASE WHEN ([ADS].[Feature_415] <= -0.42943593859672546) THEN 1 ELSE CASE WHEN ([ADS].[Feature_43] <= -7.870142936706543) THEN 3 ELSE CASE WHEN ([ADS].[Feature_354] <= -0.10918963700532913) THEN 5 ELSE 6 END END END AS node_id_2 
FROM [FourClass_500] AS [ADS]), 
[DT_node_data_4] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Proba_0] AS [Proba_0], [Values].[LogProba_0] AS [LogProba_0], [Values].[Proba_1] AS [Proba_1], [Values].[LogProba_1] AS [LogProba_1], [Values].[Proba_2] AS [Proba_2], [Values].[LogProba_2] AS [LogProba_2], [Values].[Proba_3] AS [Proba_3], [Values].[LogProba_3] AS [LogProba_3], [Values].[Decision] AS [Decision], [Values].[DecisionProba] AS [DecisionProba] 
FROM (SELECT 0 AS node_id, 'Feature_415' AS feature, -0.42943593859672546 AS threshold, 11 AS count, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.24 AS [Proba_0], -1.42711635564 AS [LogProba_0], 0.36 AS [Proba_1], -1.02165124753 AS [LogProba_1], 0.24 AS [Proba_2], -1.42711635564 AS [LogProba_2], 0.16 AS [Proba_3], -1.83258146375 AS [LogProba_3], 1 AS [Decision], 0.36 AS [DecisionProba] UNION ALL SELECT 1 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS count, 1 AS depth, 0 AS parent_id, 0.0 AS [Proba_0], -1.79769313486231e+308 AS [LogProba_0], 1.0 AS [Proba_1], 0.0 AS [LogProba_1], 0.0 AS [Proba_2], -1.79769313486231e+308 AS [LogProba_2], 0.0 AS [Proba_3], -1.79769313486231e+308 AS [LogProba_3], 1 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 2 AS node_id, 'Feature_43' AS feature, -7.870142936706543 AS threshold, 7 AS count, 1 AS depth, 0 AS parent_id, 0.375 AS [Proba_0], -0.980829253012 AS [LogProba_0], 0.0 AS [Proba_1], -1.79769313486231e+308 AS [LogProba_1], 0.375 AS [Proba_2], -0.980829253012 AS [LogProba_2], 0.25 AS [Proba_3], -1.38629436112 AS [LogProba_3], 0 AS [Decision], 0.375 AS [DecisionProba] UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 2 AS depth, 2 AS parent_id, 0.0 AS [Proba_0], -1.79769313486231e+308 AS [LogProba_0], 0.0 AS [Proba_1], -1.79769313486231e+308 AS [LogProba_1], 1.0 AS [Proba_2], 0.0 AS [LogProba_2], 0.0 AS [Proba_3], -1.79769313486231e+308 AS [LogProba_3], 2 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 4 AS node_id, 'Feature_354' AS feature, -0.10918963700532913 AS threshold, 5 AS count, 2 AS depth, 2 AS parent_id, 0.6 AS [Proba_0], -0.510825623766 AS [LogProba_0], 0.0 AS [Proba_1], -1.79769313486231e+308 AS [LogProba_1], 0.0 AS [Proba_2], -1.79769313486231e+308 AS [LogProba_2], 0.4 AS [Proba_3], -0.916290731874 AS [LogProba_3], 0 AS [Decision], 0.6 AS [DecisionProba] UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 3 AS depth, 4 AS parent_id, 1.0 AS [Proba_0], 0.0 AS [LogProba_0], 0.0 AS [Proba_1], -1.79769313486231e+308 AS [LogProba_1], 0.0 AS [Proba_2], -1.79769313486231e+308 AS [LogProba_2], 0.0 AS [Proba_3], -1.79769313486231e+308 AS [LogProba_3], 0 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 3 AS depth, 4 AS parent_id, 0.0 AS [Proba_0], -1.79769313486231e+308 AS [LogProba_0], 0.0 AS [Proba_1], -1.79769313486231e+308 AS [LogProba_1], 0.0 AS [Proba_2], -1.79769313486231e+308 AS [LogProba_2], 1.0 AS [Proba_3], 0.0 AS [LogProba_3], 3 AS [Decision], 1.0 AS [DecisionProba]) AS [Values]), 
[DT_Output_4] AS 
(SELECT [DT_node_lookup_4].[KEY] AS [KEY], [DT_node_lookup_4].node_id_2 AS node_id_2, [DT_node_data_4].node_id AS node_id, [DT_node_data_4].feature AS feature, [DT_node_data_4].threshold AS threshold, [DT_node_data_4].count AS count, [DT_node_data_4].depth AS depth, [DT_node_data_4].parent_id AS parent_id, [DT_node_data_4].[Proba_0] AS [Proba_0], [DT_node_data_4].[LogProba_0] AS [LogProba_0], [DT_node_data_4].[Proba_1] AS [Proba_1], [DT_node_data_4].[LogProba_1] AS [LogProba_1], [DT_node_data_4].[Proba_2] AS [Proba_2], [DT_node_data_4].[LogProba_2] AS [LogProba_2], [DT_node_data_4].[Proba_3] AS [Proba_3], [DT_node_data_4].[LogProba_3] AS [LogProba_3], [DT_node_data_4].[Decision] AS [Decision], [DT_node_data_4].[DecisionProba] AS [DecisionProba] 
FROM [DT_node_lookup_4] LEFT OUTER JOIN [DT_node_data_4] ON [DT_node_lookup_4].node_id_2 = [DT_node_data_4].node_id), 
[BAG_Tree_4] AS 
(SELECT [DT_Output_4].[KEY] AS [KEY], CAST(NULL AS FLOAT) AS [Score_0], [DT_Output_4].[Proba_0] AS [Proba_0], [DT_Output_4].[LogProba_0] AS [LogProba_0], CAST(NULL AS FLOAT) AS [Score_1], [DT_Output_4].[Proba_1] AS [Proba_1], [DT_Output_4].[LogProba_1] AS [LogProba_1], CAST(NULL AS FLOAT) AS [Score_2], [DT_Output_4].[Proba_2] AS [Proba_2], [DT_Output_4].[LogProba_2] AS [LogProba_2], CAST(NULL AS FLOAT) AS [Score_3], [DT_Output_4].[Proba_3] AS [Proba_3], [DT_Output_4].[LogProba_3] AS [LogProba_3] 
FROM [DT_Output_4]), 
[DT_node_lookup_5] AS 
(SELECT [ADS].[KEY] AS [KEY], CASE WHEN ([ADS].[Feature_416] <= -3.9296445846557617) THEN CASE WHEN ([ADS].[Feature_221] <= 0.7650259733200073) THEN 2 ELSE 3 END ELSE CASE WHEN ([ADS].[Feature_138] <= 1.6440577507019043) THEN CASE WHEN ([ADS].[Feature_38] <= -0.7924376726150513) THEN 6 ELSE 7 END ELSE 8 END END AS node_id_2 
FROM [FourClass_500] AS [ADS]), 
[DT_node_data_5] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Proba_0] AS [Proba_0], [Values].[LogProba_0] AS [LogProba_0], [Values].[Proba_1] AS [Proba_1], [Values].[LogProba_1] AS [LogProba_1], [Values].[Proba_2] AS [Proba_2], [Values].[LogProba_2] AS [LogProba_2], [Values].[Proba_3] AS [Proba_3], [Values].[LogProba_3] AS [LogProba_3], [Values].[Decision] AS [Decision], [Values].[DecisionProba] AS [DecisionProba] 
FROM (SELECT 0 AS node_id, 'Feature_416' AS feature, -3.9296445846557617 AS threshold, 17 AS count, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.28 AS [Proba_0], -1.27296567581 AS [LogProba_0], 0.28 AS [Proba_1], -1.27296567581 AS [LogProba_1], 0.16 AS [Proba_2], -1.83258146375 AS [LogProba_2], 0.28 AS [Proba_3], -1.27296567581 AS [LogProba_3], 0 AS [Decision], 0.28 AS [DecisionProba] UNION ALL SELECT 1 AS node_id, 'Feature_221' AS feature, 0.7650259733200073 AS threshold, 6 AS count, 1 AS depth, 0 AS parent_id, 0.0 AS [Proba_0], -1.79769313486231e+308 AS [LogProba_0], 0.0 AS [Proba_1], -1.79769313486231e+308 AS [LogProba_1], 0.125 AS [Proba_2], -2.07944154168 AS [LogProba_2], 0.875 AS [Proba_3], -0.133531392625 AS [LogProba_3], 3 AS [Decision], 0.875 AS [DecisionProba] UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS count, 2 AS depth, 1 AS parent_id, 0.0 AS [Proba_0], -1.79769313486231e+308 AS [LogProba_0], 0.0 AS [Proba_1], -1.79769313486231e+308 AS [LogProba_1], 0.0 AS [Proba_2], -1.79769313486231e+308 AS [LogProba_2], 1.0 AS [Proba_3], 0.0 AS [LogProba_3], 3 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 2 AS depth, 1 AS parent_id, 0.0 AS [Proba_0], -1.79769313486231e+308 AS [LogProba_0], 0.0 AS [Proba_1], -1.79769313486231e+308 AS [LogProba_1], 1.0 AS [Proba_2], 0.0 AS [LogProba_2], 0.0 AS [Proba_3], -1.79769313486231e+308 AS [LogProba_3], 2 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 4 AS node_id, 'Feature_138' AS feature, 1.6440577507019043 AS threshold, 11 AS count, 1 AS depth, 0 AS parent_id, 0.4117647058823529 AS [Proba_0], -0.887303195001 AS [LogProba_0], 0.4117647058823529 AS [Proba_1], -0.887303195001 AS [LogProba_1], 0.17647058823529413 AS [Proba_2], -1.73460105539 AS [LogProba_2], 0.0 AS [Proba_3], -1.79769313486231e+308 AS [LogProba_3], 0 AS [Decision], 0.411764705882 AS [DecisionProba] UNION ALL SELECT 5 AS node_id, 'Feature_38' AS feature, -0.7924376726150513 AS threshold, 7 AS count, 2 AS depth, 4 AS parent_id, 0.0 AS [Proba_0], -1.79769313486231e+308 AS [LogProba_0], 0.7 AS [Proba_1], -0.356674943939 AS [LogProba_1], 0.3 AS [Proba_2], -1.20397280433 AS [LogProba_2], 0.0 AS [Proba_3], -1.79769313486231e+308 AS [LogProba_3], 1 AS [Decision], 0.7 AS [DecisionProba] UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 3 AS depth, 5 AS parent_id, 0.0 AS [Proba_0], -1.79769313486231e+308 AS [LogProba_0], 0.0 AS [Proba_1], -1.79769313486231e+308 AS [LogProba_1], 1.0 AS [Proba_2], 0.0 AS [LogProba_2], 0.0 AS [Proba_3], -1.79769313486231e+308 AS [LogProba_3], 2 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS count, 3 AS depth, 5 AS parent_id, 0.0 AS [Proba_0], -1.79769313486231e+308 AS [LogProba_0], 1.0 AS [Proba_1], 0.0 AS [LogProba_1], 0.0 AS [Proba_2], -1.79769313486231e+308 AS [LogProba_2], 0.0 AS [Proba_3], -1.79769313486231e+308 AS [LogProba_3], 1 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS count, 2 AS depth, 4 AS parent_id, 1.0 AS [Proba_0], 0.0 AS [LogProba_0], 0.0 AS [Proba_1], -1.79769313486231e+308 AS [LogProba_1], 0.0 AS [Proba_2], -1.79769313486231e+308 AS [LogProba_2], 0.0 AS [Proba_3], -1.79769313486231e+308 AS [LogProba_3], 0 AS [Decision], 1.0 AS [DecisionProba]) AS [Values]), 
[DT_Output_5] AS 
(SELECT [DT_node_lookup_5].[KEY] AS [KEY], [DT_node_lookup_5].node_id_2 AS node_id_2, [DT_node_data_5].node_id AS node_id, [DT_node_data_5].feature AS feature, [DT_node_data_5].threshold AS threshold, [DT_node_data_5].count AS count, [DT_node_data_5].depth AS depth, [DT_node_data_5].parent_id AS parent_id, [DT_node_data_5].[Proba_0] AS [Proba_0], [DT_node_data_5].[LogProba_0] AS [LogProba_0], [DT_node_data_5].[Proba_1] AS [Proba_1], [DT_node_data_5].[LogProba_1] AS [LogProba_1], [DT_node_data_5].[Proba_2] AS [Proba_2], [DT_node_data_5].[LogProba_2] AS [LogProba_2], [DT_node_data_5].[Proba_3] AS [Proba_3], [DT_node_data_5].[LogProba_3] AS [LogProba_3], [DT_node_data_5].[Decision] AS [Decision], [DT_node_data_5].[DecisionProba] AS [DecisionProba] 
FROM [DT_node_lookup_5] LEFT OUTER JOIN [DT_node_data_5] ON [DT_node_lookup_5].node_id_2 = [DT_node_data_5].node_id), 
[BAG_Tree_5] AS 
(SELECT [DT_Output_5].[KEY] AS [KEY], CAST(NULL AS FLOAT) AS [Score_0], [DT_Output_5].[Proba_0] AS [Proba_0], [DT_Output_5].[LogProba_0] AS [LogProba_0], CAST(NULL AS FLOAT) AS [Score_1], [DT_Output_5].[Proba_1] AS [Proba_1], [DT_Output_5].[LogProba_1] AS [LogProba_1], CAST(NULL AS FLOAT) AS [Score_2], [DT_Output_5].[Proba_2] AS [Proba_2], [DT_Output_5].[LogProba_2] AS [LogProba_2], CAST(NULL AS FLOAT) AS [Score_3], [DT_Output_5].[Proba_3] AS [Proba_3], [DT_Output_5].[LogProba_3] AS [LogProba_3] 
FROM [DT_Output_5]), 
[DT_node_lookup_6] AS 
(SELECT [ADS].[KEY] AS [KEY], CASE WHEN ([ADS].[Feature_394] <= 3.3230276107788086) THEN CASE WHEN ([ADS].[Feature_11] <= -1.2651394605636597) THEN 2 ELSE CASE WHEN ([ADS].[Feature_120] <= -1.3271598815917969) THEN CASE WHEN ([ADS].[Feature_97] <= 0.29220014810562134) THEN 5 ELSE 6 END ELSE 7 END END ELSE 8 END AS node_id_2 
FROM [FourClass_500] AS [ADS]), 
[DT_node_data_6] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Proba_0] AS [Proba_0], [Values].[LogProba_0] AS [LogProba_0], [Values].[Proba_1] AS [Proba_1], [Values].[LogProba_1] AS [LogProba_1], [Values].[Proba_2] AS [Proba_2], [Values].[LogProba_2] AS [LogProba_2], [Values].[Proba_3] AS [Proba_3], [Values].[LogProba_3] AS [LogProba_3], [Values].[Decision] AS [Decision], [Values].[DecisionProba] AS [DecisionProba] 
FROM (SELECT 0 AS node_id, 'Feature_394' AS feature, 3.3230276107788086 AS threshold, 16 AS count, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.24 AS [Proba_0], -1.42711635564 AS [LogProba_0], 0.48 AS [Proba_1], -0.73396917508 AS [LogProba_1], 0.08 AS [Proba_2], -2.52572864431 AS [LogProba_2], 0.2 AS [Proba_3], -1.60943791243 AS [LogProba_3], 1 AS [Decision], 0.48 AS [DecisionProba] UNION ALL SELECT 1 AS node_id, 'Feature_11' AS feature, -1.2651394605636597 AS threshold, 10 AS count, 1 AS depth, 0 AS parent_id, 0.42857142857142855 AS [Proba_0], -0.847297860387 AS [LogProba_0], 0.07142857142857142 AS [Proba_1], -2.63905732962 AS [LogProba_1], 0.14285714285714285 AS [Proba_2], -1.94591014906 AS [LogProba_2], 0.35714285714285715 AS [Proba_3], -1.02961941718 AS [LogProba_3], 0 AS [Decision], 0.428571428571 AS [DecisionProba] UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS count, 2 AS depth, 1 AS parent_id, 1.0 AS [Proba_0], 0.0 AS [LogProba_0], 0.0 AS [Proba_1], -1.79769313486231e+308 AS [LogProba_1], 0.0 AS [Proba_2], -1.79769313486231e+308 AS [LogProba_2], 0.0 AS [Proba_3], -1.79769313486231e+308 AS [LogProba_3], 0 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 3 AS node_id, 'Feature_120' AS feature, -1.3271598815917969 AS threshold, 6 AS count, 2 AS depth, 1 AS parent_id, 0.0 AS [Proba_0], -1.79769313486231e+308 AS [LogProba_0], 0.125 AS [Proba_1], -2.07944154168 AS [LogProba_1], 0.25 AS [Proba_2], -1.38629436112 AS [LogProba_2], 0.625 AS [Proba_3], -0.470003629246 AS [LogProba_3], 3 AS [Decision], 0.625 AS [DecisionProba] UNION ALL SELECT 4 AS node_id, 'Feature_97' AS feature, 0.29220014810562134 AS threshold, 2 AS count, 3 AS depth, 3 AS parent_id, 0.0 AS [Proba_0], -1.79769313486231e+308 AS [LogProba_0], 0.3333333333333333 AS [Proba_1], -1.09861228867 AS [LogProba_1], 0.6666666666666666 AS [Proba_2], -0.405465108108 AS [LogProba_2], 0.0 AS [Proba_3], -1.79769313486231e+308 AS [LogProba_3], 2 AS [Decision], 0.666666666667 AS [DecisionProba] UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 4 AS parent_id, 0.0 AS [Proba_0], -1.79769313486231e+308 AS [LogProba_0], 0.0 AS [Proba_1], -1.79769313486231e+308 AS [LogProba_1], 1.0 AS [Proba_2], 0.0 AS [LogProba_2], 0.0 AS [Proba_3], -1.79769313486231e+308 AS [LogProba_3], 2 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 4 AS parent_id, 0.0 AS [Proba_0], -1.79769313486231e+308 AS [LogProba_0], 1.0 AS [Proba_1], 0.0 AS [LogProba_1], 0.0 AS [Proba_2], -1.79769313486231e+308 AS [LogProba_2], 0.0 AS [Proba_3], -1.79769313486231e+308 AS [LogProba_3], 1 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS count, 3 AS depth, 3 AS parent_id, 0.0 AS [Proba_0], -1.79769313486231e+308 AS [LogProba_0], 0.0 AS [Proba_1], -1.79769313486231e+308 AS [LogProba_1], 0.0 AS [Proba_2], -1.79769313486231e+308 AS [LogProba_2], 1.0 AS [Proba_3], 0.0 AS [LogProba_3], 3 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 6 AS count, 1 AS depth, 0 AS parent_id, 0.0 AS [Proba_0], -1.79769313486231e+308 AS [LogProba_0], 1.0 AS [Proba_1], 0.0 AS [LogProba_1], 0.0 AS [Proba_2], -1.79769313486231e+308 AS [LogProba_2], 0.0 AS [Proba_3], -1.79769313486231e+308 AS [LogProba_3], 1 AS [Decision], 1.0 AS [DecisionProba]) AS [Values]), 
[DT_Output_6] AS 
(SELECT [DT_node_lookup_6].[KEY] AS [KEY], [DT_node_lookup_6].node_id_2 AS node_id_2, [DT_node_data_6].node_id AS node_id, [DT_node_data_6].feature AS feature, [DT_node_data_6].threshold AS threshold, [DT_node_data_6].count AS count, [DT_node_data_6].depth AS depth, [DT_node_data_6].parent_id AS parent_id, [DT_node_data_6].[Proba_0] AS [Proba_0], [DT_node_data_6].[LogProba_0] AS [LogProba_0], [DT_node_data_6].[Proba_1] AS [Proba_1], [DT_node_data_6].[LogProba_1] AS [LogProba_1], [DT_node_data_6].[Proba_2] AS [Proba_2], [DT_node_data_6].[LogProba_2] AS [LogProba_2], [DT_node_data_6].[Proba_3] AS [Proba_3], [DT_node_data_6].[LogProba_3] AS [LogProba_3], [DT_node_data_6].[Decision] AS [Decision], [DT_node_data_6].[DecisionProba] AS [DecisionProba] 
FROM [DT_node_lookup_6] LEFT OUTER JOIN [DT_node_data_6] ON [DT_node_lookup_6].node_id_2 = [DT_node_data_6].node_id), 
[BAG_Tree_6] AS 
(SELECT [DT_Output_6].[KEY] AS [KEY], CAST(NULL AS FLOAT) AS [Score_0], [DT_Output_6].[Proba_0] AS [Proba_0], [DT_Output_6].[LogProba_0] AS [LogProba_0], CAST(NULL AS FLOAT) AS [Score_1], [DT_Output_6].[Proba_1] AS [Proba_1], [DT_Output_6].[LogProba_1] AS [LogProba_1], CAST(NULL AS FLOAT) AS [Score_2], [DT_Output_6].[Proba_2] AS [Proba_2], [DT_Output_6].[LogProba_2] AS [LogProba_2], CAST(NULL AS FLOAT) AS [Score_3], [DT_Output_6].[Proba_3] AS [Proba_3], [DT_Output_6].[LogProba_3] AS [LogProba_3] 
FROM [DT_Output_6]), 
[DT_node_lookup_7] AS 
(SELECT [ADS].[KEY] AS [KEY], CASE WHEN ([ADS].[Feature_394] <= 3.3230276107788086) THEN CASE WHEN ([ADS].[Feature_317] <= 0.07451711595058441) THEN CASE WHEN ([ADS].[Feature_104] <= 0.7292956113815308) THEN 3 ELSE CASE WHEN ([ADS].[Feature_242] <= 0.2618817687034607) THEN 5 ELSE 6 END END ELSE 7 END ELSE CASE WHEN ([ADS].[Feature_145] <= -1.0302000045776367) THEN 9 ELSE 10 END END AS node_id_2 
FROM [FourClass_500] AS [ADS]), 
[DT_node_data_7] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Proba_0] AS [Proba_0], [Values].[LogProba_0] AS [LogProba_0], [Values].[Proba_1] AS [Proba_1], [Values].[LogProba_1] AS [LogProba_1], [Values].[Proba_2] AS [Proba_2], [Values].[LogProba_2] AS [LogProba_2], [Values].[Proba_3] AS [Proba_3], [Values].[LogProba_3] AS [LogProba_3], [Values].[Decision] AS [Decision], [Values].[DecisionProba] AS [DecisionProba] 
FROM (SELECT 0 AS node_id, 'Feature_394' AS feature, 3.3230276107788086 AS threshold, 18 AS count, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.4 AS [Proba_0], -0.916290731874 AS [LogProba_0], 0.32 AS [Proba_1], -1.13943428319 AS [LogProba_1], 0.08 AS [Proba_2], -2.52572864431 AS [LogProba_2], 0.2 AS [Proba_3], -1.60943791243 AS [LogProba_3], 0 AS [Decision], 0.4 AS [DecisionProba] UNION ALL SELECT 1 AS node_id, 'Feature_317' AS feature, 0.07451711595058441 AS threshold, 12 AS count, 1 AS depth, 0 AS parent_id, 0.5625 AS [Proba_0], -0.575364144904 AS [LogProba_0], 0.0 AS [Proba_1], -1.79769313486231e+308 AS [LogProba_1], 0.125 AS [Proba_2], -2.07944154168 AS [LogProba_2], 0.3125 AS [Proba_3], -1.16315080981 AS [LogProba_3], 0 AS [Decision], 0.5625 AS [DecisionProba] UNION ALL SELECT 2 AS node_id, 'Feature_104' AS feature, 0.7292956113815308 AS threshold, 7 AS count, 2 AS depth, 1 AS parent_id, 0.125 AS [Proba_0], -2.07944154168 AS [LogProba_0], 0.0 AS [Proba_1], -1.79769313486231e+308 AS [LogProba_1], 0.25 AS [Proba_2], -1.38629436112 AS [LogProba_2], 0.625 AS [Proba_3], -0.470003629246 AS [LogProba_3], 3 AS [Decision], 0.625 AS [DecisionProba] UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS count, 3 AS depth, 2 AS parent_id, 0.0 AS [Proba_0], -1.79769313486231e+308 AS [LogProba_0], 0.0 AS [Proba_1], -1.79769313486231e+308 AS [LogProba_1], 0.0 AS [Proba_2], -1.79769313486231e+308 AS [LogProba_2], 1.0 AS [Proba_3], 0.0 AS [LogProba_3], 3 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 4 AS node_id, 'Feature_242' AS feature, 0.2618817687034607 AS threshold, 3 AS count, 3 AS depth, 2 AS parent_id, 0.3333333333333333 AS [Proba_0], -1.09861228867 AS [LogProba_0], 0.0 AS [Proba_1], -1.79769313486231e+308 AS [LogProba_1], 0.6666666666666666 AS [Proba_2], -0.405465108108 AS [LogProba_2], 0.0 AS [Proba_3], -1.79769313486231e+308 AS [LogProba_3], 2 AS [Decision], 0.666666666667 AS [DecisionProba] UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 4 AS parent_id, 1.0 AS [Proba_0], 0.0 AS [LogProba_0], 0.0 AS [Proba_1], -1.79769313486231e+308 AS [LogProba_1], 0.0 AS [Proba_2], -1.79769313486231e+308 AS [LogProba_2], 0.0 AS [Proba_3], -1.79769313486231e+308 AS [LogProba_3], 0 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 4 AS depth, 4 AS parent_id, 0.0 AS [Proba_0], -1.79769313486231e+308 AS [LogProba_0], 0.0 AS [Proba_1], -1.79769313486231e+308 AS [LogProba_1], 1.0 AS [Proba_2], 0.0 AS [LogProba_2], 0.0 AS [Proba_3], -1.79769313486231e+308 AS [LogProba_3], 2 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS count, 2 AS depth, 1 AS parent_id, 1.0 AS [Proba_0], 0.0 AS [LogProba_0], 0.0 AS [Proba_1], -1.79769313486231e+308 AS [LogProba_1], 0.0 AS [Proba_2], -1.79769313486231e+308 AS [LogProba_2], 0.0 AS [Proba_3], -1.79769313486231e+308 AS [LogProba_3], 0 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 8 AS node_id, 'Feature_145' AS feature, -1.0302000045776367 AS threshold, 6 AS count, 1 AS depth, 0 AS parent_id, 0.1111111111111111 AS [Proba_0], -2.19722457734 AS [LogProba_0], 0.8888888888888888 AS [Proba_1], -0.117783035656 AS [LogProba_1], 0.0 AS [Proba_2], -1.79769313486231e+308 AS [LogProba_2], 0.0 AS [Proba_3], -1.79769313486231e+308 AS [LogProba_3], 1 AS [Decision], 0.888888888889 AS [DecisionProba] UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 2 AS depth, 8 AS parent_id, 1.0 AS [Proba_0], 0.0 AS [LogProba_0], 0.0 AS [Proba_1], -1.79769313486231e+308 AS [LogProba_1], 0.0 AS [Proba_2], -1.79769313486231e+308 AS [LogProba_2], 0.0 AS [Proba_3], -1.79769313486231e+308 AS [LogProba_3], 0 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS count, 2 AS depth, 8 AS parent_id, 0.0 AS [Proba_0], -1.79769313486231e+308 AS [LogProba_0], 1.0 AS [Proba_1], 0.0 AS [LogProba_1], 0.0 AS [Proba_2], -1.79769313486231e+308 AS [LogProba_2], 0.0 AS [Proba_3], -1.79769313486231e+308 AS [LogProba_3], 1 AS [Decision], 1.0 AS [DecisionProba]) AS [Values]), 
[DT_Output_7] AS 
(SELECT [DT_node_lookup_7].[KEY] AS [KEY], [DT_node_lookup_7].node_id_2 AS node_id_2, [DT_node_data_7].node_id AS node_id, [DT_node_data_7].feature AS feature, [DT_node_data_7].threshold AS threshold, [DT_node_data_7].count AS count, [DT_node_data_7].depth AS depth, [DT_node_data_7].parent_id AS parent_id, [DT_node_data_7].[Proba_0] AS [Proba_0], [DT_node_data_7].[LogProba_0] AS [LogProba_0], [DT_node_data_7].[Proba_1] AS [Proba_1], [DT_node_data_7].[LogProba_1] AS [LogProba_1], [DT_node_data_7].[Proba_2] AS [Proba_2], [DT_node_data_7].[LogProba_2] AS [LogProba_2], [DT_node_data_7].[Proba_3] AS [Proba_3], [DT_node_data_7].[LogProba_3] AS [LogProba_3], [DT_node_data_7].[Decision] AS [Decision], [DT_node_data_7].[DecisionProba] AS [DecisionProba] 
FROM [DT_node_lookup_7] LEFT OUTER JOIN [DT_node_data_7] ON [DT_node_lookup_7].node_id_2 = [DT_node_data_7].node_id), 
[BAG_Tree_7] AS 
(SELECT [DT_Output_7].[KEY] AS [KEY], CAST(NULL AS FLOAT) AS [Score_0], [DT_Output_7].[Proba_0] AS [Proba_0], [DT_Output_7].[LogProba_0] AS [LogProba_0], CAST(NULL AS FLOAT) AS [Score_1], [DT_Output_7].[Proba_1] AS [Proba_1], [DT_Output_7].[LogProba_1] AS [LogProba_1], CAST(NULL AS FLOAT) AS [Score_2], [DT_Output_7].[Proba_2] AS [Proba_2], [DT_Output_7].[LogProba_2] AS [LogProba_2], CAST(NULL AS FLOAT) AS [Score_3], [DT_Output_7].[Proba_3] AS [Proba_3], [DT_Output_7].[LogProba_3] AS [LogProba_3] 
FROM [DT_Output_7]), 
[DT_node_lookup_8] AS 
(SELECT [ADS].[KEY] AS [KEY], CASE WHEN ([ADS].[Feature_183] <= 0.5577445030212402) THEN CASE WHEN ([ADS].[Feature_490] <= -1.239060640335083) THEN 2 ELSE 3 END ELSE 4 END AS node_id_2 
FROM [FourClass_500] AS [ADS]), 
[DT_node_data_8] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Proba_0] AS [Proba_0], [Values].[LogProba_0] AS [LogProba_0], [Values].[Proba_1] AS [Proba_1], [Values].[LogProba_1] AS [LogProba_1], [Values].[Proba_2] AS [Proba_2], [Values].[LogProba_2] AS [LogProba_2], [Values].[Proba_3] AS [Proba_3], [Values].[LogProba_3] AS [LogProba_3], [Values].[Decision] AS [Decision], [Values].[DecisionProba] AS [DecisionProba] 
FROM (SELECT 0 AS node_id, 'Feature_183' AS feature, 0.5577445030212402 AS threshold, 14 AS count, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.44 AS [Proba_0], -0.82098055207 AS [LogProba_0], 0.48 AS [Proba_1], -0.73396917508 AS [LogProba_1], 0.08 AS [Proba_2], -2.52572864431 AS [LogProba_2], 0.0 AS [Proba_3], -1.79769313486231e+308 AS [LogProba_3], 1 AS [Decision], 0.48 AS [DecisionProba] UNION ALL SELECT 1 AS node_id, 'Feature_490' AS feature, -1.239060640335083 AS threshold, 8 AS count, 1 AS depth, 0 AS parent_id, 0.0 AS [Proba_0], -1.79769313486231e+308 AS [LogProba_0], 0.8571428571428571 AS [Proba_1], -0.154150679827 AS [LogProba_1], 0.14285714285714285 AS [Proba_2], -1.94591014906 AS [LogProba_2], 0.0 AS [Proba_3], -1.79769313486231e+308 AS [LogProba_3], 1 AS [Decision], 0.857142857143 AS [DecisionProba] UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 2 AS depth, 1 AS parent_id, 0.0 AS [Proba_0], -1.79769313486231e+308 AS [LogProba_0], 0.0 AS [Proba_1], -1.79769313486231e+308 AS [LogProba_1], 1.0 AS [Proba_2], 0.0 AS [LogProba_2], 0.0 AS [Proba_3], -1.79769313486231e+308 AS [LogProba_3], 2 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 6 AS count, 2 AS depth, 1 AS parent_id, 0.0 AS [Proba_0], -1.79769313486231e+308 AS [LogProba_0], 1.0 AS [Proba_1], 0.0 AS [LogProba_1], 0.0 AS [Proba_2], -1.79769313486231e+308 AS [LogProba_2], 0.0 AS [Proba_3], -1.79769313486231e+308 AS [LogProba_3], 1 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 6 AS count, 1 AS depth, 0 AS parent_id, 1.0 AS [Proba_0], 0.0 AS [LogProba_0], 0.0 AS [Proba_1], -1.79769313486231e+308 AS [LogProba_1], 0.0 AS [Proba_2], -1.79769313486231e+308 AS [LogProba_2], 0.0 AS [Proba_3], -1.79769313486231e+308 AS [LogProba_3], 0 AS [Decision], 1.0 AS [DecisionProba]) AS [Values]), 
[DT_Output_8] AS 
(SELECT [DT_node_lookup_8].[KEY] AS [KEY], [DT_node_lookup_8].node_id_2 AS node_id_2, [DT_node_data_8].node_id AS node_id, [DT_node_data_8].feature AS feature, [DT_node_data_8].threshold AS threshold, [DT_node_data_8].count AS count, [DT_node_data_8].depth AS depth, [DT_node_data_8].parent_id AS parent_id, [DT_node_data_8].[Proba_0] AS [Proba_0], [DT_node_data_8].[LogProba_0] AS [LogProba_0], [DT_node_data_8].[Proba_1] AS [Proba_1], [DT_node_data_8].[LogProba_1] AS [LogProba_1], [DT_node_data_8].[Proba_2] AS [Proba_2], [DT_node_data_8].[LogProba_2] AS [LogProba_2], [DT_node_data_8].[Proba_3] AS [Proba_3], [DT_node_data_8].[LogProba_3] AS [LogProba_3], [DT_node_data_8].[Decision] AS [Decision], [DT_node_data_8].[DecisionProba] AS [DecisionProba] 
FROM [DT_node_lookup_8] LEFT OUTER JOIN [DT_node_data_8] ON [DT_node_lookup_8].node_id_2 = [DT_node_data_8].node_id), 
[BAG_Tree_8] AS 
(SELECT [DT_Output_8].[KEY] AS [KEY], CAST(NULL AS FLOAT) AS [Score_0], [DT_Output_8].[Proba_0] AS [Proba_0], [DT_Output_8].[LogProba_0] AS [LogProba_0], CAST(NULL AS FLOAT) AS [Score_1], [DT_Output_8].[Proba_1] AS [Proba_1], [DT_Output_8].[LogProba_1] AS [LogProba_1], CAST(NULL AS FLOAT) AS [Score_2], [DT_Output_8].[Proba_2] AS [Proba_2], [DT_Output_8].[LogProba_2] AS [LogProba_2], CAST(NULL AS FLOAT) AS [Score_3], [DT_Output_8].[Proba_3] AS [Proba_3], [DT_Output_8].[LogProba_3] AS [LogProba_3] 
FROM [DT_Output_8]), 
[DT_node_lookup_9] AS 
(SELECT [ADS].[KEY] AS [KEY], CASE WHEN ([ADS].[Feature_113] <= -4.624388217926025) THEN 1 ELSE CASE WHEN ([ADS].[Feature_272] <= -0.13924390077590942) THEN 3 ELSE CASE WHEN ([ADS].[Feature_13] <= 0.04251876473426819) THEN 5 ELSE CASE WHEN ([ADS].[Feature_363] <= 1.6605886220932007) THEN 7 ELSE 8 END END END END AS node_id_2 
FROM [FourClass_500] AS [ADS]), 
[DT_node_data_9] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Proba_0] AS [Proba_0], [Values].[LogProba_0] AS [LogProba_0], [Values].[Proba_1] AS [Proba_1], [Values].[LogProba_1] AS [LogProba_1], [Values].[Proba_2] AS [Proba_2], [Values].[LogProba_2] AS [LogProba_2], [Values].[Proba_3] AS [Proba_3], [Values].[LogProba_3] AS [LogProba_3], [Values].[Decision] AS [Decision], [Values].[DecisionProba] AS [DecisionProba] 
FROM (SELECT 0 AS node_id, 'Feature_113' AS feature, -4.624388217926025 AS threshold, 17 AS count, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.32 AS [Proba_0], -1.13943428319 AS [LogProba_0], 0.28 AS [Proba_1], -1.27296567581 AS [LogProba_1], 0.12 AS [Proba_2], -2.1202635362 AS [LogProba_2], 0.28 AS [Proba_3], -1.27296567581 AS [LogProba_3], 0 AS [Decision], 0.32 AS [DecisionProba] UNION ALL SELECT 1 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS count, 1 AS depth, 0 AS parent_id, 0.0 AS [Proba_0], -1.79769313486231e+308 AS [LogProba_0], 0.0 AS [Proba_1], -1.79769313486231e+308 AS [LogProba_1], 0.0 AS [Proba_2], -1.79769313486231e+308 AS [LogProba_2], 1.0 AS [Proba_3], 0.0 AS [LogProba_3], 3 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 2 AS node_id, 'Feature_272' AS feature, -0.13924390077590942 AS threshold, 13 AS count, 1 AS depth, 0 AS parent_id, 0.4444444444444444 AS [Proba_0], -0.810930216216 AS [LogProba_0], 0.3888888888888889 AS [Proba_1], -0.944461608841 AS [LogProba_1], 0.16666666666666666 AS [Proba_2], -1.79175946923 AS [LogProba_2], 0.0 AS [Proba_3], -1.79769313486231e+308 AS [LogProba_3], 0 AS [Decision], 0.444444444444 AS [DecisionProba] UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS count, 2 AS depth, 2 AS parent_id, 1.0 AS [Proba_0], 0.0 AS [LogProba_0], 0.0 AS [Proba_1], -1.79769313486231e+308 AS [LogProba_1], 0.0 AS [Proba_2], -1.79769313486231e+308 AS [LogProba_2], 0.0 AS [Proba_3], -1.79769313486231e+308 AS [LogProba_3], 0 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 4 AS node_id, 'Feature_13' AS feature, 0.04251876473426819 AS threshold, 8 AS count, 2 AS depth, 2 AS parent_id, 0.09090909090909091 AS [Proba_0], -2.3978952728 AS [LogProba_0], 0.6363636363636364 AS [Proba_1], -0.451985123743 AS [LogProba_1], 0.2727272727272727 AS [Proba_2], -1.29928298413 AS [LogProba_2], 0.0 AS [Proba_3], -1.79769313486231e+308 AS [LogProba_3], 1 AS [Decision], 0.636363636364 AS [DecisionProba] UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS count, 3 AS depth, 4 AS parent_id, 0.0 AS [Proba_0], -1.79769313486231e+308 AS [LogProba_0], 1.0 AS [Proba_1], 0.0 AS [LogProba_1], 0.0 AS [Proba_2], -1.79769313486231e+308 AS [LogProba_2], 0.0 AS [Proba_3], -1.79769313486231e+308 AS [LogProba_3], 1 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 6 AS node_id, 'Feature_363' AS feature, 1.6605886220932007 AS threshold, 3 AS count, 3 AS depth, 4 AS parent_id, 0.25 AS [Proba_0], -1.38629436112 AS [LogProba_0], 0.0 AS [Proba_1], -1.79769313486231e+308 AS [LogProba_1], 0.75 AS [Proba_2], -0.287682072452 AS [LogProba_2], 0.0 AS [Proba_3], -1.79769313486231e+308 AS [LogProba_3], 2 AS [Decision], 0.75 AS [DecisionProba] UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 6 AS parent_id, 1.0 AS [Proba_0], 0.0 AS [LogProba_0], 0.0 AS [Proba_1], -1.79769313486231e+308 AS [LogProba_1], 0.0 AS [Proba_2], -1.79769313486231e+308 AS [LogProba_2], 0.0 AS [Proba_3], -1.79769313486231e+308 AS [LogProba_3], 0 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 4 AS depth, 6 AS parent_id, 0.0 AS [Proba_0], -1.79769313486231e+308 AS [LogProba_0], 0.0 AS [Proba_1], -1.79769313486231e+308 AS [LogProba_1], 1.0 AS [Proba_2], 0.0 AS [LogProba_2], 0.0 AS [Proba_3], -1.79769313486231e+308 AS [LogProba_3], 2 AS [Decision], 1.0 AS [DecisionProba]) AS [Values]), 
[DT_Output_9] AS 
(SELECT [DT_node_lookup_9].[KEY] AS [KEY], [DT_node_lookup_9].node_id_2 AS node_id_2, [DT_node_data_9].node_id AS node_id, [DT_node_data_9].feature AS feature, [DT_node_data_9].threshold AS threshold, [DT_node_data_9].count AS count, [DT_node_data_9].depth AS depth, [DT_node_data_9].parent_id AS parent_id, [DT_node_data_9].[Proba_0] AS [Proba_0], [DT_node_data_9].[LogProba_0] AS [LogProba_0], [DT_node_data_9].[Proba_1] AS [Proba_1], [DT_node_data_9].[LogProba_1] AS [LogProba_1], [DT_node_data_9].[Proba_2] AS [Proba_2], [DT_node_data_9].[LogProba_2] AS [LogProba_2], [DT_node_data_9].[Proba_3] AS [Proba_3], [DT_node_data_9].[LogProba_3] AS [LogProba_3], [DT_node_data_9].[Decision] AS [Decision], [DT_node_data_9].[DecisionProba] AS [DecisionProba] 
FROM [DT_node_lookup_9] LEFT OUTER JOIN [DT_node_data_9] ON [DT_node_lookup_9].node_id_2 = [DT_node_data_9].node_id), 
[BAG_Tree_9] AS 
(SELECT [DT_Output_9].[KEY] AS [KEY], CAST(NULL AS FLOAT) AS [Score_0], [DT_Output_9].[Proba_0] AS [Proba_0], [DT_Output_9].[LogProba_0] AS [LogProba_0], CAST(NULL AS FLOAT) AS [Score_1], [DT_Output_9].[Proba_1] AS [Proba_1], [DT_Output_9].[LogProba_1] AS [LogProba_1], CAST(NULL AS FLOAT) AS [Score_2], [DT_Output_9].[Proba_2] AS [Proba_2], [DT_Output_9].[LogProba_2] AS [LogProba_2], CAST(NULL AS FLOAT) AS [Score_3], [DT_Output_9].[Proba_3] AS [Proba_3], [DT_Output_9].[LogProba_3] AS [LogProba_3] 
FROM [DT_Output_9]), 
[Score_Union_CTE] AS 
(SELECT ensemble_score_union.[KEY] AS [KEY], ensemble_score_union.[Score_0] AS [Score_0], ensemble_score_union.[Proba_0] AS [Proba_0], ensemble_score_union.[LogProba_0] AS [LogProba_0], ensemble_score_union.[Score_1] AS [Score_1], ensemble_score_union.[Proba_1] AS [Proba_1], ensemble_score_union.[LogProba_1] AS [LogProba_1], ensemble_score_union.[Score_2] AS [Score_2], ensemble_score_union.[Proba_2] AS [Proba_2], ensemble_score_union.[LogProba_2] AS [LogProba_2], ensemble_score_union.[Score_3] AS [Score_3], ensemble_score_union.[Proba_3] AS [Proba_3], ensemble_score_union.[LogProba_3] AS [LogProba_3] 
FROM (SELECT [BAG_Tree_0].[KEY] AS [KEY], [BAG_Tree_0].[Score_0] AS [Score_0], [BAG_Tree_0].[Proba_0] AS [Proba_0], [BAG_Tree_0].[LogProba_0] AS [LogProba_0], [BAG_Tree_0].[Score_1] AS [Score_1], [BAG_Tree_0].[Proba_1] AS [Proba_1], [BAG_Tree_0].[LogProba_1] AS [LogProba_1], [BAG_Tree_0].[Score_2] AS [Score_2], [BAG_Tree_0].[Proba_2] AS [Proba_2], [BAG_Tree_0].[LogProba_2] AS [LogProba_2], [BAG_Tree_0].[Score_3] AS [Score_3], [BAG_Tree_0].[Proba_3] AS [Proba_3], [BAG_Tree_0].[LogProba_3] AS [LogProba_3] 
FROM [BAG_Tree_0] UNION ALL SELECT [BAG_Tree_1].[KEY] AS [KEY], [BAG_Tree_1].[Score_0] AS [Score_0], [BAG_Tree_1].[Proba_0] AS [Proba_0], [BAG_Tree_1].[LogProba_0] AS [LogProba_0], [BAG_Tree_1].[Score_1] AS [Score_1], [BAG_Tree_1].[Proba_1] AS [Proba_1], [BAG_Tree_1].[LogProba_1] AS [LogProba_1], [BAG_Tree_1].[Score_2] AS [Score_2], [BAG_Tree_1].[Proba_2] AS [Proba_2], [BAG_Tree_1].[LogProba_2] AS [LogProba_2], [BAG_Tree_1].[Score_3] AS [Score_3], [BAG_Tree_1].[Proba_3] AS [Proba_3], [BAG_Tree_1].[LogProba_3] AS [LogProba_3] 
FROM [BAG_Tree_1] UNION ALL SELECT [BAG_Tree_2].[KEY] AS [KEY], [BAG_Tree_2].[Score_0] AS [Score_0], [BAG_Tree_2].[Proba_0] AS [Proba_0], [BAG_Tree_2].[LogProba_0] AS [LogProba_0], [BAG_Tree_2].[Score_1] AS [Score_1], [BAG_Tree_2].[Proba_1] AS [Proba_1], [BAG_Tree_2].[LogProba_1] AS [LogProba_1], [BAG_Tree_2].[Score_2] AS [Score_2], [BAG_Tree_2].[Proba_2] AS [Proba_2], [BAG_Tree_2].[LogProba_2] AS [LogProba_2], [BAG_Tree_2].[Score_3] AS [Score_3], [BAG_Tree_2].[Proba_3] AS [Proba_3], [BAG_Tree_2].[LogProba_3] AS [LogProba_3] 
FROM [BAG_Tree_2] UNION ALL SELECT [BAG_Tree_3].[KEY] AS [KEY], [BAG_Tree_3].[Score_0] AS [Score_0], [BAG_Tree_3].[Proba_0] AS [Proba_0], [BAG_Tree_3].[LogProba_0] AS [LogProba_0], [BAG_Tree_3].[Score_1] AS [Score_1], [BAG_Tree_3].[Proba_1] AS [Proba_1], [BAG_Tree_3].[LogProba_1] AS [LogProba_1], [BAG_Tree_3].[Score_2] AS [Score_2], [BAG_Tree_3].[Proba_2] AS [Proba_2], [BAG_Tree_3].[LogProba_2] AS [LogProba_2], [BAG_Tree_3].[Score_3] AS [Score_3], [BAG_Tree_3].[Proba_3] AS [Proba_3], [BAG_Tree_3].[LogProba_3] AS [LogProba_3] 
FROM [BAG_Tree_3] UNION ALL SELECT [BAG_Tree_4].[KEY] AS [KEY], [BAG_Tree_4].[Score_0] AS [Score_0], [BAG_Tree_4].[Proba_0] AS [Proba_0], [BAG_Tree_4].[LogProba_0] AS [LogProba_0], [BAG_Tree_4].[Score_1] AS [Score_1], [BAG_Tree_4].[Proba_1] AS [Proba_1], [BAG_Tree_4].[LogProba_1] AS [LogProba_1], [BAG_Tree_4].[Score_2] AS [Score_2], [BAG_Tree_4].[Proba_2] AS [Proba_2], [BAG_Tree_4].[LogProba_2] AS [LogProba_2], [BAG_Tree_4].[Score_3] AS [Score_3], [BAG_Tree_4].[Proba_3] AS [Proba_3], [BAG_Tree_4].[LogProba_3] AS [LogProba_3] 
FROM [BAG_Tree_4] UNION ALL SELECT [BAG_Tree_5].[KEY] AS [KEY], [BAG_Tree_5].[Score_0] AS [Score_0], [BAG_Tree_5].[Proba_0] AS [Proba_0], [BAG_Tree_5].[LogProba_0] AS [LogProba_0], [BAG_Tree_5].[Score_1] AS [Score_1], [BAG_Tree_5].[Proba_1] AS [Proba_1], [BAG_Tree_5].[LogProba_1] AS [LogProba_1], [BAG_Tree_5].[Score_2] AS [Score_2], [BAG_Tree_5].[Proba_2] AS [Proba_2], [BAG_Tree_5].[LogProba_2] AS [LogProba_2], [BAG_Tree_5].[Score_3] AS [Score_3], [BAG_Tree_5].[Proba_3] AS [Proba_3], [BAG_Tree_5].[LogProba_3] AS [LogProba_3] 
FROM [BAG_Tree_5] UNION ALL SELECT [BAG_Tree_6].[KEY] AS [KEY], [BAG_Tree_6].[Score_0] AS [Score_0], [BAG_Tree_6].[Proba_0] AS [Proba_0], [BAG_Tree_6].[LogProba_0] AS [LogProba_0], [BAG_Tree_6].[Score_1] AS [Score_1], [BAG_Tree_6].[Proba_1] AS [Proba_1], [BAG_Tree_6].[LogProba_1] AS [LogProba_1], [BAG_Tree_6].[Score_2] AS [Score_2], [BAG_Tree_6].[Proba_2] AS [Proba_2], [BAG_Tree_6].[LogProba_2] AS [LogProba_2], [BAG_Tree_6].[Score_3] AS [Score_3], [BAG_Tree_6].[Proba_3] AS [Proba_3], [BAG_Tree_6].[LogProba_3] AS [LogProba_3] 
FROM [BAG_Tree_6] UNION ALL SELECT [BAG_Tree_7].[KEY] AS [KEY], [BAG_Tree_7].[Score_0] AS [Score_0], [BAG_Tree_7].[Proba_0] AS [Proba_0], [BAG_Tree_7].[LogProba_0] AS [LogProba_0], [BAG_Tree_7].[Score_1] AS [Score_1], [BAG_Tree_7].[Proba_1] AS [Proba_1], [BAG_Tree_7].[LogProba_1] AS [LogProba_1], [BAG_Tree_7].[Score_2] AS [Score_2], [BAG_Tree_7].[Proba_2] AS [Proba_2], [BAG_Tree_7].[LogProba_2] AS [LogProba_2], [BAG_Tree_7].[Score_3] AS [Score_3], [BAG_Tree_7].[Proba_3] AS [Proba_3], [BAG_Tree_7].[LogProba_3] AS [LogProba_3] 
FROM [BAG_Tree_7] UNION ALL SELECT [BAG_Tree_8].[KEY] AS [KEY], [BAG_Tree_8].[Score_0] AS [Score_0], [BAG_Tree_8].[Proba_0] AS [Proba_0], [BAG_Tree_8].[LogProba_0] AS [LogProba_0], [BAG_Tree_8].[Score_1] AS [Score_1], [BAG_Tree_8].[Proba_1] AS [Proba_1], [BAG_Tree_8].[LogProba_1] AS [LogProba_1], [BAG_Tree_8].[Score_2] AS [Score_2], [BAG_Tree_8].[Proba_2] AS [Proba_2], [BAG_Tree_8].[LogProba_2] AS [LogProba_2], [BAG_Tree_8].[Score_3] AS [Score_3], [BAG_Tree_8].[Proba_3] AS [Proba_3], [BAG_Tree_8].[LogProba_3] AS [LogProba_3] 
FROM [BAG_Tree_8] UNION ALL SELECT [BAG_Tree_9].[KEY] AS [KEY], [BAG_Tree_9].[Score_0] AS [Score_0], [BAG_Tree_9].[Proba_0] AS [Proba_0], [BAG_Tree_9].[LogProba_0] AS [LogProba_0], [BAG_Tree_9].[Score_1] AS [Score_1], [BAG_Tree_9].[Proba_1] AS [Proba_1], [BAG_Tree_9].[LogProba_1] AS [LogProba_1], [BAG_Tree_9].[Score_2] AS [Score_2], [BAG_Tree_9].[Proba_2] AS [Proba_2], [BAG_Tree_9].[LogProba_2] AS [LogProba_2], [BAG_Tree_9].[Score_3] AS [Score_3], [BAG_Tree_9].[Proba_3] AS [Proba_3], [BAG_Tree_9].[LogProba_3] AS [LogProba_3] 
FROM [BAG_Tree_9]) AS ensemble_score_union), 
[BAG_AVG_Scores] AS 
(SELECT [T].[KEY] AS [KEY], [T].[Score_0] AS [Score_0], [T].[Proba_0] AS [Proba_0], [T].[LogProba_0] AS [LogProba_0], [T].[Score_1] AS [Score_1], [T].[Proba_1] AS [Proba_1], [T].[LogProba_1] AS [LogProba_1], [T].[Score_2] AS [Score_2], [T].[Proba_2] AS [Proba_2], [T].[LogProba_2] AS [LogProba_2], [T].[Score_3] AS [Score_3], [T].[Proba_3] AS [Proba_3], [T].[LogProba_3] AS [LogProba_3] 
FROM (SELECT [Score_Union_CTE].[KEY] AS [KEY], avg([Score_Union_CTE].[Score_0]) AS [Score_0], avg([Score_Union_CTE].[Proba_0]) AS [Proba_0], avg([Score_Union_CTE].[LogProba_0]) AS [LogProba_0], avg([Score_Union_CTE].[Score_1]) AS [Score_1], avg([Score_Union_CTE].[Proba_1]) AS [Proba_1], avg([Score_Union_CTE].[LogProba_1]) AS [LogProba_1], avg([Score_Union_CTE].[Score_2]) AS [Score_2], avg([Score_Union_CTE].[Proba_2]) AS [Proba_2], avg([Score_Union_CTE].[LogProba_2]) AS [LogProba_2], avg([Score_Union_CTE].[Score_3]) AS [Score_3], avg([Score_Union_CTE].[Proba_3]) AS [Proba_3], avg([Score_Union_CTE].[LogProba_3]) AS [LogProba_3] 
FROM [Score_Union_CTE] GROUP BY [Score_Union_CTE].[KEY]) AS [T]), 
orig_cte AS 
(SELECT [BAG_AVG_Scores].[KEY] AS [KEY], [BAG_AVG_Scores].[Score_0] AS [Score_0], [BAG_AVG_Scores].[Score_1] AS [Score_1], [BAG_AVG_Scores].[Score_2] AS [Score_2], [BAG_AVG_Scores].[Score_3] AS [Score_3], [BAG_AVG_Scores].[Proba_0] AS [Proba_0], [BAG_AVG_Scores].[Proba_1] AS [Proba_1], [BAG_AVG_Scores].[Proba_2] AS [Proba_2], [BAG_AVG_Scores].[Proba_3] AS [Proba_3], [BAG_AVG_Scores].[LogProba_0] AS [LogProba_0], [BAG_AVG_Scores].[LogProba_1] AS [LogProba_1], [BAG_AVG_Scores].[LogProba_2] AS [LogProba_2], [BAG_AVG_Scores].[LogProba_3] AS [LogProba_3], CAST(NULL AS INTEGER) AS [Decision], CAST(NULL AS FLOAT) AS [DecisionProba] 
FROM [BAG_AVG_Scores]), 
score_class_union AS 
(SELECT scu.[KEY_u] AS [KEY_u], scu.class AS class, scu.[LogProba] AS [LogProba], scu.[Proba] AS [Proba], scu.[Score] AS [Score] 
FROM (SELECT orig_cte.[KEY] AS [KEY_u], 0 AS class, orig_cte.[LogProba_0] AS [LogProba], orig_cte.[Proba_0] AS [Proba], orig_cte.[Score_0] AS [Score] 
FROM orig_cte UNION ALL SELECT orig_cte.[KEY] AS [KEY_u], 1 AS class, orig_cte.[LogProba_1] AS [LogProba], orig_cte.[Proba_1] AS [Proba], orig_cte.[Score_1] AS [Score] 
FROM orig_cte UNION ALL SELECT orig_cte.[KEY] AS [KEY_u], 2 AS class, orig_cte.[LogProba_2] AS [LogProba], orig_cte.[Proba_2] AS [Proba], orig_cte.[Score_2] AS [Score] 
FROM orig_cte UNION ALL SELECT orig_cte.[KEY] AS [KEY_u], 3 AS class, orig_cte.[LogProba_3] AS [LogProba], orig_cte.[Proba_3] AS [Proba], orig_cte.[Score_3] AS [Score] 
FROM orig_cte) AS scu), 
score_max AS 
(SELECT orig_cte.[KEY] AS [KEY], orig_cte.[Score_0] AS [Score_0], orig_cte.[Score_1] AS [Score_1], orig_cte.[Score_2] AS [Score_2], orig_cte.[Score_3] AS [Score_3], orig_cte.[Proba_0] AS [Proba_0], orig_cte.[Proba_1] AS [Proba_1], orig_cte.[Proba_2] AS [Proba_2], orig_cte.[Proba_3] AS [Proba_3], orig_cte.[LogProba_0] AS [LogProba_0], orig_cte.[LogProba_1] AS [LogProba_1], orig_cte.[LogProba_2] AS [LogProba_2], orig_cte.[LogProba_3] AS [LogProba_3], orig_cte.[Decision] AS [Decision], orig_cte.[DecisionProba] AS [DecisionProba], max_select.[KEY_m] AS [KEY_m], max_select.[max_Proba] AS [max_Proba] 
FROM orig_cte LEFT OUTER JOIN (SELECT score_class_union.[KEY_u] AS [KEY_m], max(score_class_union.[Proba]) AS [max_Proba] 
FROM score_class_union GROUP BY score_class_union.[KEY_u]) AS max_select ON orig_cte.[KEY] = max_select.[KEY_m]), 
union_with_max AS 
(SELECT score_class_union.[KEY_u] AS [KEY_u], score_class_union.class AS class, score_class_union.[LogProba] AS [LogProba], score_class_union.[Proba] AS [Proba], score_class_union.[Score] AS [Score], score_max.[KEY] AS [KEY], score_max.[Score_0] AS [Score_0], score_max.[Score_1] AS [Score_1], score_max.[Score_2] AS [Score_2], score_max.[Score_3] AS [Score_3], score_max.[Proba_0] AS [Proba_0], score_max.[Proba_1] AS [Proba_1], score_max.[Proba_2] AS [Proba_2], score_max.[Proba_3] AS [Proba_3], score_max.[LogProba_0] AS [LogProba_0], score_max.[LogProba_1] AS [LogProba_1], score_max.[LogProba_2] AS [LogProba_2], score_max.[LogProba_3] AS [LogProba_3], score_max.[Decision] AS [Decision], score_max.[DecisionProba] AS [DecisionProba], score_max.[KEY_m] AS [KEY_m], score_max.[max_Proba] AS [max_Proba] 
FROM score_class_union LEFT OUTER JOIN score_max ON score_class_union.[KEY_u] = score_max.[KEY]), 
arg_max_cte AS 
(SELECT score_max.[KEY] AS [KEY], score_max.[Score_0] AS [Score_0], score_max.[Score_1] AS [Score_1], score_max.[Score_2] AS [Score_2], score_max.[Score_3] AS [Score_3], score_max.[Proba_0] AS [Proba_0], score_max.[Proba_1] AS [Proba_1], score_max.[Proba_2] AS [Proba_2], score_max.[Proba_3] AS [Proba_3], score_max.[LogProba_0] AS [LogProba_0], score_max.[LogProba_1] AS [LogProba_1], score_max.[LogProba_2] AS [LogProba_2], score_max.[LogProba_3] AS [LogProba_3], score_max.[Decision] AS [Decision], score_max.[DecisionProba] AS [DecisionProba], score_max.[KEY_m] AS [KEY_m], score_max.[max_Proba] AS [max_Proba], [arg_max_t_Proba].[KEY_Proba] AS [KEY_Proba], [arg_max_t_Proba].[arg_max_Proba] AS [arg_max_Proba] 
FROM score_max LEFT OUTER JOIN (SELECT union_with_max.[KEY] AS [KEY_Proba], min(union_with_max.class) AS [arg_max_Proba] 
FROM union_with_max 
WHERE union_with_max.[max_Proba] <= union_with_max.[Proba] GROUP BY union_with_max.[KEY]) AS [arg_max_t_Proba] ON score_max.[KEY] = [arg_max_t_Proba].[KEY_Proba])
 SELECT arg_max_cte.[KEY] AS [KEY], arg_max_cte.[Score_0] AS [Score_0], arg_max_cte.[Score_1] AS [Score_1], arg_max_cte.[Score_2] AS [Score_2], arg_max_cte.[Score_3] AS [Score_3], arg_max_cte.[Proba_0] AS [Proba_0], arg_max_cte.[Proba_1] AS [Proba_1], arg_max_cte.[Proba_2] AS [Proba_2], arg_max_cte.[Proba_3] AS [Proba_3], CASE WHEN (arg_max_cte.[Proba_0] IS NULL OR arg_max_cte.[Proba_0] > 0.0) THEN log(arg_max_cte.[Proba_0]) ELSE -1.79769313486231e+308 END AS [LogProba_0], CASE WHEN (arg_max_cte.[Proba_1] IS NULL OR arg_max_cte.[Proba_1] > 0.0) THEN log(arg_max_cte.[Proba_1]) ELSE -1.79769313486231e+308 END AS [LogProba_1], CASE WHEN (arg_max_cte.[Proba_2] IS NULL OR arg_max_cte.[Proba_2] > 0.0) THEN log(arg_max_cte.[Proba_2]) ELSE -1.79769313486231e+308 END AS [LogProba_2], CASE WHEN (arg_max_cte.[Proba_3] IS NULL OR arg_max_cte.[Proba_3] > 0.0) THEN log(arg_max_cte.[Proba_3]) ELSE -1.79769313486231e+308 END AS [LogProba_3], arg_max_cte.[arg_max_Proba] AS [Decision], arg_max_cte.[max_Proba] AS [DecisionProba] 
FROM arg_max_cte