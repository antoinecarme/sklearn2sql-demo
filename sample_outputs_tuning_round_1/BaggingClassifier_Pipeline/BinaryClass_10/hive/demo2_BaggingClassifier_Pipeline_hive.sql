-- This SQL code was generated by sklearn2sql (development version).
-- Copyright 2017

WITH `ADS_imp_1_OUT` AS 
(SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_0` IS NULL) THEN 0.00587058434841 ELSE `ADS`.`Feature_0` END AS `impter_2`, CASE WHEN (`ADS`.`Feature_1` IS NULL) THEN 0.206310474688 ELSE `ADS`.`Feature_1` END AS `impter_3`, CASE WHEN (`ADS`.`Feature_2` IS NULL) THEN 0.0555958221574 ELSE `ADS`.`Feature_2` END AS `impter_4`, CASE WHEN (`ADS`.`Feature_3` IS NULL) THEN 0.0384701934716 ELSE `ADS`.`Feature_3` END AS `impter_5`, CASE WHEN (`ADS`.`Feature_4` IS NULL) THEN -0.429944388318 ELSE `ADS`.`Feature_4` END AS `impter_6`, CASE WHEN (`ADS`.`Feature_5` IS NULL) THEN 0.204565353815 ELSE `ADS`.`Feature_5` END AS `impter_7`, CASE WHEN (`ADS`.`Feature_6` IS NULL) THEN 0.40838482592 ELSE `ADS`.`Feature_6` END AS `impter_8`, CASE WHEN (`ADS`.`Feature_7` IS NULL) THEN 0.0127764293619 ELSE `ADS`.`Feature_7` END AS `impter_9`, CASE WHEN (`ADS`.`Feature_8` IS NULL) THEN 0.21646556202 ELSE `ADS`.`Feature_8` END AS `impter_10`, CASE WHEN (`ADS`.`Feature_9` IS NULL) THEN -0.052903813543 ELSE `ADS`.`Feature_9` END AS `impter_11` 
FROM `BinaryClass_10` AS `ADS`), 
`ADS_sca_2_OUT` AS 
(SELECT `ADS_imp_1_OUT`.`KEY` AS `KEY`, (CAST(`ADS_imp_1_OUT`.`impter_2` AS FLOAT) - 0.00587058434841) / 1.36610141231 AS `scaler_2`, (CAST(`ADS_imp_1_OUT`.`impter_3` AS FLOAT) - 0.206310474688) / 0.924614068395 AS `scaler_3`, (CAST(`ADS_imp_1_OUT`.`impter_4` AS FLOAT) - 0.0555958221574) / 1.27201752306 AS `scaler_4`, (CAST(`ADS_imp_1_OUT`.`impter_5` AS FLOAT) - 0.0384701934716) / 1.11679928013 AS `scaler_5`, (CAST(`ADS_imp_1_OUT`.`impter_6` AS FLOAT) - -0.429944388318) / 1.02812853106 AS `scaler_6`, (CAST(`ADS_imp_1_OUT`.`impter_7` AS FLOAT) - 0.204565353815) / 1.42979903307 AS `scaler_7`, (CAST(`ADS_imp_1_OUT`.`impter_8` AS FLOAT) - 0.40838482592) / 1.06633430275 AS `scaler_8`, (CAST(`ADS_imp_1_OUT`.`impter_9` AS FLOAT) - 0.0127764293619) / 0.54624498456 AS `scaler_9`, (CAST(`ADS_imp_1_OUT`.`impter_10` AS FLOAT) - 0.21646556202) / 1.03979793567 AS `scaler_10`, (CAST(`ADS_imp_1_OUT`.`impter_11` AS FLOAT) - -0.052903813543) / 1.44168001857 AS `scaler_11` 
FROM `ADS_imp_1_OUT`), 
`DT_node_lookup` AS 
(SELECT `ADS_sca_2_OUT`.`KEY` AS `KEY`, CASE WHEN (`ADS_sca_2_OUT`.`scaler_3` <= 0.7260676622390747) THEN CASE WHEN (`ADS_sca_2_OUT`.`scaler_11` <= 0.8729202151298523) THEN CASE WHEN (`ADS_sca_2_OUT`.`scaler_7` <= 1.3775728940963745) THEN 3 ELSE 4 END ELSE 5 END ELSE 6 END AS `node_id_2` 
FROM `ADS_sca_2_OUT`), 
`DT_node_data` AS 
(SELECT `Values`.`node_id` AS `node_id`, `Values`.`feature` AS `feature`, `Values`.`threshold` AS `threshold`, `Values`.`count` AS `count`, `Values`.`depth` AS `depth`, `Values`.`parent_id` AS `parent_id`, `Values`.`Proba_0` AS `Proba_0`, `Values`.`LogProba_0` AS `LogProba_0`, `Values`.`Proba_1` AS `Proba_1`, `Values`.`LogProba_1` AS `LogProba_1`, `Values`.`Decision` AS `Decision`, `Values`.`DecisionProba` AS `DecisionProba` 
FROM (SELECT 0 AS `node_id`, 'scaler_3' AS `feature`, 0.7260676622390747 AS `threshold`, 15 AS `count`, 0 AS `depth`, CAST(NULL AS INT) AS `parent_id`, 0.72 AS `Proba_0`, -0.328504066972 AS `LogProba_0`, 0.28 AS `Proba_1`, -1.27296567581 AS `LogProba_1`, 0 AS `Decision`, 0.72 AS `DecisionProba` UNION ALL SELECT 1 AS `node_id`, 'scaler_11' AS `feature`, 0.8729202151298523 AS `threshold`, 13 AS `count`, 1 AS `depth`, 0 AS `parent_id`, 0.9 AS `Proba_0`, -0.105360515658 AS `LogProba_0`, 0.1 AS `Proba_1`, -2.30258509299 AS `LogProba_1`, 0 AS `Decision`, 0.9 AS `DecisionProba` UNION ALL SELECT 2 AS `node_id`, 'scaler_7' AS `feature`, 1.3775728940963745 AS `threshold`, 12 AS `count`, 2 AS `depth`, 1 AS `parent_id`, 0.9473684210526315 AS `Proba_0`, -0.0540672212703 AS `LogProba_0`, 0.05263157894736842 AS `Proba_1`, -2.94443897917 AS `LogProba_1`, 0 AS `Decision`, 0.947368421053 AS `DecisionProba` UNION ALL SELECT 3 AS `node_id`, CAST(NULL AS STRING) AS `feature`, CAST(NULL AS FLOAT) AS `threshold`, 11 AS `count`, 3 AS `depth`, 2 AS `parent_id`, 1.0 AS `Proba_0`, 0.0 AS `LogProba_0`, 0.0 AS `Proba_1`, -1.79769313486231e+308 AS `LogProba_1`, 0 AS `Decision`, 1.0 AS `DecisionProba` UNION ALL SELECT 4 AS `node_id`, CAST(NULL AS STRING) AS `feature`, CAST(NULL AS FLOAT) AS `threshold`, 1 AS `count`, 3 AS `depth`, 2 AS `parent_id`, 0.0 AS `Proba_0`, -1.79769313486231e+308 AS `LogProba_0`, 1.0 AS `Proba_1`, 0.0 AS `LogProba_1`, 1 AS `Decision`, 1.0 AS `DecisionProba` UNION ALL SELECT 5 AS `node_id`, CAST(NULL AS STRING) AS `feature`, CAST(NULL AS FLOAT) AS `threshold`, 1 AS `count`, 2 AS `depth`, 1 AS `parent_id`, 0.0 AS `Proba_0`, -1.79769313486231e+308 AS `LogProba_0`, 1.0 AS `Proba_1`, 0.0 AS `LogProba_1`, 1 AS `Decision`, 1.0 AS `DecisionProba` UNION ALL SELECT 6 AS `node_id`, CAST(NULL AS STRING) AS `feature`, CAST(NULL AS FLOAT) AS `threshold`, 2 AS `count`, 1 AS `depth`, 0 AS `parent_id`, 0.0 AS `Proba_0`, -1.79769313486231e+308 AS `LogProba_0`, 1.0 AS `Proba_1`, 0.0 AS `LogProba_1`, 1 AS `Decision`, 1.0 AS `DecisionProba`) AS `Values`), 
`DT_Output` AS 
(SELECT `DT_node_lookup`.`KEY` AS `KEY`, `DT_node_lookup`.`node_id_2` AS `node_id_2`, `DT_node_data`.`node_id` AS `node_id`, `DT_node_data`.`feature` AS `feature`, `DT_node_data`.`threshold` AS `threshold`, `DT_node_data`.`count` AS `count`, `DT_node_data`.`depth` AS `depth`, `DT_node_data`.`parent_id` AS `parent_id`, `DT_node_data`.`Proba_0` AS `Proba_0`, `DT_node_data`.`LogProba_0` AS `LogProba_0`, `DT_node_data`.`Proba_1` AS `Proba_1`, `DT_node_data`.`LogProba_1` AS `LogProba_1`, `DT_node_data`.`Decision` AS `Decision`, `DT_node_data`.`DecisionProba` AS `DecisionProba` 
FROM `DT_node_lookup` LEFT OUTER JOIN `DT_node_data` ON `DT_node_lookup`.`node_id_2` = `DT_node_data`.`node_id`), 
`BAG_Tree_0` AS 
(SELECT `DT_Output`.`KEY` AS `KEY`, CAST(NULL AS FLOAT) AS `Score_0`, `DT_Output`.`Proba_0` AS `Proba_0`, `DT_Output`.`LogProba_0` AS `LogProba_0`, CAST(NULL AS FLOAT) AS `Score_1`, `DT_Output`.`Proba_1` AS `Proba_1`, `DT_Output`.`LogProba_1` AS `LogProba_1` 
FROM `DT_Output`), 
`DT_node_lookup_1` AS 
(SELECT `ADS_sca_2_OUT`.`KEY` AS `KEY`, CASE WHEN (`ADS_sca_2_OUT`.`scaler_2` <= -0.7044356465339661) THEN 1 ELSE CASE WHEN (`ADS_sca_2_OUT`.`scaler_7` <= 1.5878198146820068) THEN 3 ELSE 4 END END AS `node_id_2` 
FROM `ADS_sca_2_OUT`), 
`DT_node_data_1` AS 
(SELECT `Values`.`node_id` AS `node_id`, `Values`.`feature` AS `feature`, `Values`.`threshold` AS `threshold`, `Values`.`count` AS `count`, `Values`.`depth` AS `depth`, `Values`.`parent_id` AS `parent_id`, `Values`.`Proba_0` AS `Proba_0`, `Values`.`LogProba_0` AS `LogProba_0`, `Values`.`Proba_1` AS `Proba_1`, `Values`.`LogProba_1` AS `LogProba_1`, `Values`.`Decision` AS `Decision`, `Values`.`DecisionProba` AS `DecisionProba` 
FROM (SELECT 0 AS `node_id`, 'scaler_2' AS `feature`, -0.7044356465339661 AS `threshold`, 16 AS `count`, 0 AS `depth`, CAST(NULL AS INT) AS `parent_id`, 0.56 AS `Proba_0`, -0.579818495253 AS `LogProba_0`, 0.44 AS `Proba_1`, -0.82098055207 AS `LogProba_1`, 0 AS `Decision`, 0.56 AS `DecisionProba` UNION ALL SELECT 1 AS `node_id`, CAST(NULL AS STRING) AS `feature`, CAST(NULL AS FLOAT) AS `threshold`, 4 AS `count`, 1 AS `depth`, 0 AS `parent_id`, 0.0 AS `Proba_0`, -1.79769313486231e+308 AS `LogProba_0`, 1.0 AS `Proba_1`, 0.0 AS `LogProba_1`, 1 AS `Decision`, 1.0 AS `DecisionProba` UNION ALL SELECT 2 AS `node_id`, 'scaler_7' AS `feature`, 1.5878198146820068 AS `threshold`, 12 AS `count`, 1 AS `depth`, 0 AS `parent_id`, 0.8235294117647058 AS `Proba_0`, -0.194156014441 AS `LogProba_0`, 0.17647058823529413 AS `Proba_1`, -1.73460105539 AS `LogProba_1`, 0 AS `Decision`, 0.823529411765 AS `DecisionProba` UNION ALL SELECT 3 AS `node_id`, CAST(NULL AS STRING) AS `feature`, CAST(NULL AS FLOAT) AS `threshold`, 10 AS `count`, 2 AS `depth`, 2 AS `parent_id`, 1.0 AS `Proba_0`, 0.0 AS `LogProba_0`, 0.0 AS `Proba_1`, -1.79769313486231e+308 AS `LogProba_1`, 0 AS `Decision`, 1.0 AS `DecisionProba` UNION ALL SELECT 4 AS `node_id`, CAST(NULL AS STRING) AS `feature`, CAST(NULL AS FLOAT) AS `threshold`, 2 AS `count`, 2 AS `depth`, 2 AS `parent_id`, 0.0 AS `Proba_0`, -1.79769313486231e+308 AS `LogProba_0`, 1.0 AS `Proba_1`, 0.0 AS `LogProba_1`, 1 AS `Decision`, 1.0 AS `DecisionProba`) AS `Values`), 
`DT_Output_1` AS 
(SELECT `DT_node_lookup_1`.`KEY` AS `KEY`, `DT_node_lookup_1`.`node_id_2` AS `node_id_2`, `DT_node_data_1`.`node_id` AS `node_id`, `DT_node_data_1`.`feature` AS `feature`, `DT_node_data_1`.`threshold` AS `threshold`, `DT_node_data_1`.`count` AS `count`, `DT_node_data_1`.`depth` AS `depth`, `DT_node_data_1`.`parent_id` AS `parent_id`, `DT_node_data_1`.`Proba_0` AS `Proba_0`, `DT_node_data_1`.`LogProba_0` AS `LogProba_0`, `DT_node_data_1`.`Proba_1` AS `Proba_1`, `DT_node_data_1`.`LogProba_1` AS `LogProba_1`, `DT_node_data_1`.`Decision` AS `Decision`, `DT_node_data_1`.`DecisionProba` AS `DecisionProba` 
FROM `DT_node_lookup_1` LEFT OUTER JOIN `DT_node_data_1` ON `DT_node_lookup_1`.`node_id_2` = `DT_node_data_1`.`node_id`), 
`BAG_Tree_1` AS 
(SELECT `DT_Output_1`.`KEY` AS `KEY`, CAST(NULL AS FLOAT) AS `Score_0`, `DT_Output_1`.`Proba_0` AS `Proba_0`, `DT_Output_1`.`LogProba_0` AS `LogProba_0`, CAST(NULL AS FLOAT) AS `Score_1`, `DT_Output_1`.`Proba_1` AS `Proba_1`, `DT_Output_1`.`LogProba_1` AS `LogProba_1` 
FROM `DT_Output_1`), 
`DT_node_lookup_2` AS 
(SELECT `ADS_sca_2_OUT`.`KEY` AS `KEY`, CASE WHEN (`ADS_sca_2_OUT`.`scaler_2` <= 0.31399449706077576) THEN CASE WHEN (`ADS_sca_2_OUT`.`scaler_6` <= -0.8456807136535645) THEN CASE WHEN (`ADS_sca_2_OUT`.`scaler_8` <= 0.5231852531433105) THEN 3 ELSE 4 END ELSE 5 END ELSE 6 END AS `node_id_2` 
FROM `ADS_sca_2_OUT`), 
`DT_node_data_2` AS 
(SELECT `Values`.`node_id` AS `node_id`, `Values`.`feature` AS `feature`, `Values`.`threshold` AS `threshold`, `Values`.`count` AS `count`, `Values`.`depth` AS `depth`, `Values`.`parent_id` AS `parent_id`, `Values`.`Proba_0` AS `Proba_0`, `Values`.`LogProba_0` AS `LogProba_0`, `Values`.`Proba_1` AS `Proba_1`, `Values`.`LogProba_1` AS `LogProba_1`, `Values`.`Decision` AS `Decision`, `Values`.`DecisionProba` AS `DecisionProba` 
FROM (SELECT 0 AS `node_id`, 'scaler_2' AS `feature`, 0.31399449706077576 AS `threshold`, 16 AS `count`, 0 AS `depth`, CAST(NULL AS INT) AS `parent_id`, 0.48 AS `Proba_0`, -0.73396917508 AS `LogProba_0`, 0.52 AS `Proba_1`, -0.653926467407 AS `LogProba_1`, 1 AS `Decision`, 0.52 AS `DecisionProba` UNION ALL SELECT 1 AS `node_id`, 'scaler_6' AS `feature`, -0.8456807136535645 AS `threshold`, 8 AS `count`, 1 AS `depth`, 0 AS `parent_id`, 0.13333333333333333 AS `Proba_0`, -2.01490302054 AS `LogProba_0`, 0.8666666666666667 AS `Proba_1`, -0.143100843641 AS `LogProba_1`, 1 AS `Decision`, 0.866666666667 AS `DecisionProba` UNION ALL SELECT 2 AS `node_id`, 'scaler_8' AS `feature`, 0.5231852531433105 AS `threshold`, 2 AS `count`, 2 AS `depth`, 1 AS `parent_id`, 0.6666666666666666 AS `Proba_0`, -0.405465108108 AS `LogProba_0`, 0.3333333333333333 AS `Proba_1`, -1.09861228867 AS `LogProba_1`, 0 AS `Decision`, 0.666666666667 AS `DecisionProba` UNION ALL SELECT 3 AS `node_id`, CAST(NULL AS STRING) AS `feature`, CAST(NULL AS FLOAT) AS `threshold`, 1 AS `count`, 3 AS `depth`, 2 AS `parent_id`, 0.0 AS `Proba_0`, -1.79769313486231e+308 AS `LogProba_0`, 1.0 AS `Proba_1`, 0.0 AS `LogProba_1`, 1 AS `Decision`, 1.0 AS `DecisionProba` UNION ALL SELECT 4 AS `node_id`, CAST(NULL AS STRING) AS `feature`, CAST(NULL AS FLOAT) AS `threshold`, 1 AS `count`, 3 AS `depth`, 2 AS `parent_id`, 1.0 AS `Proba_0`, 0.0 AS `LogProba_0`, 0.0 AS `Proba_1`, -1.79769313486231e+308 AS `LogProba_1`, 0 AS `Decision`, 1.0 AS `DecisionProba` UNION ALL SELECT 5 AS `node_id`, CAST(NULL AS STRING) AS `feature`, CAST(NULL AS FLOAT) AS `threshold`, 6 AS `count`, 2 AS `depth`, 1 AS `parent_id`, 0.0 AS `Proba_0`, -1.79769313486231e+308 AS `LogProba_0`, 1.0 AS `Proba_1`, 0.0 AS `LogProba_1`, 1 AS `Decision`, 1.0 AS `DecisionProba` UNION ALL SELECT 6 AS `node_id`, CAST(NULL AS STRING) AS `feature`, CAST(NULL AS FLOAT) AS `threshold`, 8 AS `count`, 1 AS `depth`, 0 AS `parent_id`, 1.0 AS `Proba_0`, 0.0 AS `LogProba_0`, 0.0 AS `Proba_1`, -1.79769313486231e+308 AS `LogProba_1`, 0 AS `Decision`, 1.0 AS `DecisionProba`) AS `Values`), 
`DT_Output_2` AS 
(SELECT `DT_node_lookup_2`.`KEY` AS `KEY`, `DT_node_lookup_2`.`node_id_2` AS `node_id_2`, `DT_node_data_2`.`node_id` AS `node_id`, `DT_node_data_2`.`feature` AS `feature`, `DT_node_data_2`.`threshold` AS `threshold`, `DT_node_data_2`.`count` AS `count`, `DT_node_data_2`.`depth` AS `depth`, `DT_node_data_2`.`parent_id` AS `parent_id`, `DT_node_data_2`.`Proba_0` AS `Proba_0`, `DT_node_data_2`.`LogProba_0` AS `LogProba_0`, `DT_node_data_2`.`Proba_1` AS `Proba_1`, `DT_node_data_2`.`LogProba_1` AS `LogProba_1`, `DT_node_data_2`.`Decision` AS `Decision`, `DT_node_data_2`.`DecisionProba` AS `DecisionProba` 
FROM `DT_node_lookup_2` LEFT OUTER JOIN `DT_node_data_2` ON `DT_node_lookup_2`.`node_id_2` = `DT_node_data_2`.`node_id`), 
`BAG_Tree_2` AS 
(SELECT `DT_Output_2`.`KEY` AS `KEY`, CAST(NULL AS FLOAT) AS `Score_0`, `DT_Output_2`.`Proba_0` AS `Proba_0`, `DT_Output_2`.`LogProba_0` AS `LogProba_0`, CAST(NULL AS FLOAT) AS `Score_1`, `DT_Output_2`.`Proba_1` AS `Proba_1`, `DT_Output_2`.`LogProba_1` AS `LogProba_1` 
FROM `DT_Output_2`), 
`DT_node_lookup_3` AS 
(SELECT `ADS_sca_2_OUT`.`KEY` AS `KEY`, CASE WHEN (`ADS_sca_2_OUT`.`scaler_11` <= 0.31296563148498535) THEN CASE WHEN (`ADS_sca_2_OUT`.`scaler_3` <= 1.463175892829895) THEN 2 ELSE 3 END ELSE 4 END AS `node_id_2` 
FROM `ADS_sca_2_OUT`), 
`DT_node_data_3` AS 
(SELECT `Values`.`node_id` AS `node_id`, `Values`.`feature` AS `feature`, `Values`.`threshold` AS `threshold`, `Values`.`count` AS `count`, `Values`.`depth` AS `depth`, `Values`.`parent_id` AS `parent_id`, `Values`.`Proba_0` AS `Proba_0`, `Values`.`LogProba_0` AS `LogProba_0`, `Values`.`Proba_1` AS `Proba_1`, `Values`.`LogProba_1` AS `LogProba_1`, `Values`.`Decision` AS `Decision`, `Values`.`DecisionProba` AS `DecisionProba` 
FROM (SELECT 0 AS `node_id`, 'scaler_11' AS `feature`, 0.31296563148498535 AS `threshold`, 19 AS `count`, 0 AS `depth`, CAST(NULL AS INT) AS `parent_id`, 0.72 AS `Proba_0`, -0.328504066972 AS `LogProba_0`, 0.28 AS `Proba_1`, -1.27296567581 AS `LogProba_1`, 0 AS `Decision`, 0.72 AS `DecisionProba` UNION ALL SELECT 1 AS `node_id`, 'scaler_3' AS `feature`, 1.463175892829895 AS `threshold`, 13 AS `count`, 1 AS `depth`, 0 AS `parent_id`, 0.9473684210526315 AS `Proba_0`, -0.0540672212703 AS `LogProba_0`, 0.05263157894736842 AS `Proba_1`, -2.94443897917 AS `LogProba_1`, 0 AS `Decision`, 0.947368421053 AS `DecisionProba` UNION ALL SELECT 2 AS `node_id`, CAST(NULL AS STRING) AS `feature`, CAST(NULL AS FLOAT) AS `threshold`, 12 AS `count`, 2 AS `depth`, 1 AS `parent_id`, 1.0 AS `Proba_0`, 0.0 AS `LogProba_0`, 0.0 AS `Proba_1`, -1.79769313486231e+308 AS `LogProba_1`, 0 AS `Decision`, 1.0 AS `DecisionProba` UNION ALL SELECT 3 AS `node_id`, CAST(NULL AS STRING) AS `feature`, CAST(NULL AS FLOAT) AS `threshold`, 1 AS `count`, 2 AS `depth`, 1 AS `parent_id`, 0.0 AS `Proba_0`, -1.79769313486231e+308 AS `LogProba_0`, 1.0 AS `Proba_1`, 0.0 AS `LogProba_1`, 1 AS `Decision`, 1.0 AS `DecisionProba` UNION ALL SELECT 4 AS `node_id`, CAST(NULL AS STRING) AS `feature`, CAST(NULL AS FLOAT) AS `threshold`, 6 AS `count`, 1 AS `depth`, 0 AS `parent_id`, 0.0 AS `Proba_0`, -1.79769313486231e+308 AS `LogProba_0`, 1.0 AS `Proba_1`, 0.0 AS `LogProba_1`, 1 AS `Decision`, 1.0 AS `DecisionProba`) AS `Values`), 
`DT_Output_3` AS 
(SELECT `DT_node_lookup_3`.`KEY` AS `KEY`, `DT_node_lookup_3`.`node_id_2` AS `node_id_2`, `DT_node_data_3`.`node_id` AS `node_id`, `DT_node_data_3`.`feature` AS `feature`, `DT_node_data_3`.`threshold` AS `threshold`, `DT_node_data_3`.`count` AS `count`, `DT_node_data_3`.`depth` AS `depth`, `DT_node_data_3`.`parent_id` AS `parent_id`, `DT_node_data_3`.`Proba_0` AS `Proba_0`, `DT_node_data_3`.`LogProba_0` AS `LogProba_0`, `DT_node_data_3`.`Proba_1` AS `Proba_1`, `DT_node_data_3`.`LogProba_1` AS `LogProba_1`, `DT_node_data_3`.`Decision` AS `Decision`, `DT_node_data_3`.`DecisionProba` AS `DecisionProba` 
FROM `DT_node_lookup_3` LEFT OUTER JOIN `DT_node_data_3` ON `DT_node_lookup_3`.`node_id_2` = `DT_node_data_3`.`node_id`), 
`BAG_Tree_3` AS 
(SELECT `DT_Output_3`.`KEY` AS `KEY`, CAST(NULL AS FLOAT) AS `Score_0`, `DT_Output_3`.`Proba_0` AS `Proba_0`, `DT_Output_3`.`LogProba_0` AS `LogProba_0`, CAST(NULL AS FLOAT) AS `Score_1`, `DT_Output_3`.`Proba_1` AS `Proba_1`, `DT_Output_3`.`LogProba_1` AS `LogProba_1` 
FROM `DT_Output_3`), 
`DT_node_lookup_4` AS 
(SELECT `ADS_sca_2_OUT`.`KEY` AS `KEY`, CASE WHEN (`ADS_sca_2_OUT`.`scaler_2` <= -0.4935952126979828) THEN 1 ELSE CASE WHEN (`ADS_sca_2_OUT`.`scaler_7` <= 1.3775728940963745) THEN 3 ELSE 4 END END AS `node_id_2` 
FROM `ADS_sca_2_OUT`), 
`DT_node_data_4` AS 
(SELECT `Values`.`node_id` AS `node_id`, `Values`.`feature` AS `feature`, `Values`.`threshold` AS `threshold`, `Values`.`count` AS `count`, `Values`.`depth` AS `depth`, `Values`.`parent_id` AS `parent_id`, `Values`.`Proba_0` AS `Proba_0`, `Values`.`LogProba_0` AS `LogProba_0`, `Values`.`Proba_1` AS `Proba_1`, `Values`.`LogProba_1` AS `LogProba_1`, `Values`.`Decision` AS `Decision`, `Values`.`DecisionProba` AS `DecisionProba` 
FROM (SELECT 0 AS `node_id`, 'scaler_2' AS `feature`, -0.4935952126979828 AS `threshold`, 11 AS `count`, 0 AS `depth`, CAST(NULL AS INT) AS `parent_id`, 0.48 AS `Proba_0`, -0.73396917508 AS `LogProba_0`, 0.52 AS `Proba_1`, -0.653926467407 AS `LogProba_1`, 1 AS `Decision`, 0.52 AS `DecisionProba` UNION ALL SELECT 1 AS `node_id`, CAST(NULL AS STRING) AS `feature`, CAST(NULL AS FLOAT) AS `threshold`, 3 AS `count`, 1 AS `depth`, 0 AS `parent_id`, 0.0 AS `Proba_0`, -1.79769313486231e+308 AS `LogProba_0`, 1.0 AS `Proba_1`, 0.0 AS `LogProba_1`, 1 AS `Decision`, 1.0 AS `DecisionProba` UNION ALL SELECT 2 AS `node_id`, 'scaler_7' AS `feature`, 1.3775728940963745 AS `threshold`, 8 AS `count`, 1 AS `depth`, 0 AS `parent_id`, 0.8571428571428571 AS `Proba_0`, -0.154150679827 AS `LogProba_0`, 0.14285714285714285 AS `Proba_1`, -1.94591014906 AS `LogProba_1`, 0 AS `Decision`, 0.857142857143 AS `DecisionProba` UNION ALL SELECT 3 AS `node_id`, CAST(NULL AS STRING) AS `feature`, CAST(NULL AS FLOAT) AS `threshold`, 7 AS `count`, 2 AS `depth`, 2 AS `parent_id`, 1.0 AS `Proba_0`, 0.0 AS `LogProba_0`, 0.0 AS `Proba_1`, -1.79769313486231e+308 AS `LogProba_1`, 0 AS `Decision`, 1.0 AS `DecisionProba` UNION ALL SELECT 4 AS `node_id`, CAST(NULL AS STRING) AS `feature`, CAST(NULL AS FLOAT) AS `threshold`, 1 AS `count`, 2 AS `depth`, 2 AS `parent_id`, 0.0 AS `Proba_0`, -1.79769313486231e+308 AS `LogProba_0`, 1.0 AS `Proba_1`, 0.0 AS `LogProba_1`, 1 AS `Decision`, 1.0 AS `DecisionProba`) AS `Values`), 
`DT_Output_4` AS 
(SELECT `DT_node_lookup_4`.`KEY` AS `KEY`, `DT_node_lookup_4`.`node_id_2` AS `node_id_2`, `DT_node_data_4`.`node_id` AS `node_id`, `DT_node_data_4`.`feature` AS `feature`, `DT_node_data_4`.`threshold` AS `threshold`, `DT_node_data_4`.`count` AS `count`, `DT_node_data_4`.`depth` AS `depth`, `DT_node_data_4`.`parent_id` AS `parent_id`, `DT_node_data_4`.`Proba_0` AS `Proba_0`, `DT_node_data_4`.`LogProba_0` AS `LogProba_0`, `DT_node_data_4`.`Proba_1` AS `Proba_1`, `DT_node_data_4`.`LogProba_1` AS `LogProba_1`, `DT_node_data_4`.`Decision` AS `Decision`, `DT_node_data_4`.`DecisionProba` AS `DecisionProba` 
FROM `DT_node_lookup_4` LEFT OUTER JOIN `DT_node_data_4` ON `DT_node_lookup_4`.`node_id_2` = `DT_node_data_4`.`node_id`), 
`BAG_Tree_4` AS 
(SELECT `DT_Output_4`.`KEY` AS `KEY`, CAST(NULL AS FLOAT) AS `Score_0`, `DT_Output_4`.`Proba_0` AS `Proba_0`, `DT_Output_4`.`LogProba_0` AS `LogProba_0`, CAST(NULL AS FLOAT) AS `Score_1`, `DT_Output_4`.`Proba_1` AS `Proba_1`, `DT_Output_4`.`LogProba_1` AS `LogProba_1` 
FROM `DT_Output_4`), 
`DT_node_lookup_5` AS 
(SELECT `ADS_sca_2_OUT`.`KEY` AS `KEY`, CASE WHEN (`ADS_sca_2_OUT`.`scaler_2` <= -0.4769802987575531) THEN 1 ELSE CASE WHEN (`ADS_sca_2_OUT`.`scaler_8` <= 1.8206772804260254) THEN 3 ELSE 4 END END AS `node_id_2` 
FROM `ADS_sca_2_OUT`), 
`DT_node_data_5` AS 
(SELECT `Values`.`node_id` AS `node_id`, `Values`.`feature` AS `feature`, `Values`.`threshold` AS `threshold`, `Values`.`count` AS `count`, `Values`.`depth` AS `depth`, `Values`.`parent_id` AS `parent_id`, `Values`.`Proba_0` AS `Proba_0`, `Values`.`LogProba_0` AS `LogProba_0`, `Values`.`Proba_1` AS `Proba_1`, `Values`.`LogProba_1` AS `LogProba_1`, `Values`.`Decision` AS `Decision`, `Values`.`DecisionProba` AS `DecisionProba` 
FROM (SELECT 0 AS `node_id`, 'scaler_2' AS `feature`, -0.4769802987575531 AS `threshold`, 17 AS `count`, 0 AS `depth`, CAST(NULL AS INT) AS `parent_id`, 0.56 AS `Proba_0`, -0.579818495253 AS `LogProba_0`, 0.44 AS `Proba_1`, -0.82098055207 AS `LogProba_1`, 0 AS `Decision`, 0.56 AS `DecisionProba` UNION ALL SELECT 1 AS `node_id`, CAST(NULL AS STRING) AS `feature`, CAST(NULL AS FLOAT) AS `threshold`, 6 AS `count`, 1 AS `depth`, 0 AS `parent_id`, 0.0 AS `Proba_0`, -1.79769313486231e+308 AS `LogProba_0`, 1.0 AS `Proba_1`, 0.0 AS `LogProba_1`, 1 AS `Decision`, 1.0 AS `DecisionProba` UNION ALL SELECT 2 AS `node_id`, 'scaler_8' AS `feature`, 1.8206772804260254 AS `threshold`, 11 AS `count`, 1 AS `depth`, 0 AS `parent_id`, 0.9333333333333333 AS `Proba_0`, -0.068992871487 AS `LogProba_0`, 0.06666666666666667 AS `Proba_1`, -2.7080502011 AS `LogProba_1`, 0 AS `Decision`, 0.933333333333 AS `DecisionProba` UNION ALL SELECT 3 AS `node_id`, CAST(NULL AS STRING) AS `feature`, CAST(NULL AS FLOAT) AS `threshold`, 10 AS `count`, 2 AS `depth`, 2 AS `parent_id`, 1.0 AS `Proba_0`, 0.0 AS `LogProba_0`, 0.0 AS `Proba_1`, -1.79769313486231e+308 AS `LogProba_1`, 0 AS `Decision`, 1.0 AS `DecisionProba` UNION ALL SELECT 4 AS `node_id`, CAST(NULL AS STRING) AS `feature`, CAST(NULL AS FLOAT) AS `threshold`, 1 AS `count`, 2 AS `depth`, 2 AS `parent_id`, 0.0 AS `Proba_0`, -1.79769313486231e+308 AS `LogProba_0`, 1.0 AS `Proba_1`, 0.0 AS `LogProba_1`, 1 AS `Decision`, 1.0 AS `DecisionProba`) AS `Values`), 
`DT_Output_5` AS 
(SELECT `DT_node_lookup_5`.`KEY` AS `KEY`, `DT_node_lookup_5`.`node_id_2` AS `node_id_2`, `DT_node_data_5`.`node_id` AS `node_id`, `DT_node_data_5`.`feature` AS `feature`, `DT_node_data_5`.`threshold` AS `threshold`, `DT_node_data_5`.`count` AS `count`, `DT_node_data_5`.`depth` AS `depth`, `DT_node_data_5`.`parent_id` AS `parent_id`, `DT_node_data_5`.`Proba_0` AS `Proba_0`, `DT_node_data_5`.`LogProba_0` AS `LogProba_0`, `DT_node_data_5`.`Proba_1` AS `Proba_1`, `DT_node_data_5`.`LogProba_1` AS `LogProba_1`, `DT_node_data_5`.`Decision` AS `Decision`, `DT_node_data_5`.`DecisionProba` AS `DecisionProba` 
FROM `DT_node_lookup_5` LEFT OUTER JOIN `DT_node_data_5` ON `DT_node_lookup_5`.`node_id_2` = `DT_node_data_5`.`node_id`), 
`BAG_Tree_5` AS 
(SELECT `DT_Output_5`.`KEY` AS `KEY`, CAST(NULL AS FLOAT) AS `Score_0`, `DT_Output_5`.`Proba_0` AS `Proba_0`, `DT_Output_5`.`LogProba_0` AS `LogProba_0`, CAST(NULL AS FLOAT) AS `Score_1`, `DT_Output_5`.`Proba_1` AS `Proba_1`, `DT_Output_5`.`LogProba_1` AS `LogProba_1` 
FROM `DT_Output_5`), 
`DT_node_lookup_6` AS 
(SELECT `ADS_sca_2_OUT`.`KEY` AS `KEY`, CASE WHEN (`ADS_sca_2_OUT`.`scaler_9` <= -0.5545529723167419) THEN 1 ELSE CASE WHEN (`ADS_sca_2_OUT`.`scaler_7` <= 1.3775728940963745) THEN 3 ELSE 4 END END AS `node_id_2` 
FROM `ADS_sca_2_OUT`), 
`DT_node_data_6` AS 
(SELECT `Values`.`node_id` AS `node_id`, `Values`.`feature` AS `feature`, `Values`.`threshold` AS `threshold`, `Values`.`count` AS `count`, `Values`.`depth` AS `depth`, `Values`.`parent_id` AS `parent_id`, `Values`.`Proba_0` AS `Proba_0`, `Values`.`LogProba_0` AS `LogProba_0`, `Values`.`Proba_1` AS `Proba_1`, `Values`.`LogProba_1` AS `LogProba_1`, `Values`.`Decision` AS `Decision`, `Values`.`DecisionProba` AS `DecisionProba` 
FROM (SELECT 0 AS `node_id`, 'scaler_9' AS `feature`, -0.5545529723167419 AS `threshold`, 16 AS `count`, 0 AS `depth`, CAST(NULL AS INT) AS `parent_id`, 0.72 AS `Proba_0`, -0.328504066972 AS `LogProba_0`, 0.28 AS `Proba_1`, -1.27296567581 AS `LogProba_1`, 0 AS `Decision`, 0.72 AS `DecisionProba` UNION ALL SELECT 1 AS `node_id`, CAST(NULL AS STRING) AS `feature`, CAST(NULL AS FLOAT) AS `threshold`, 3 AS `count`, 1 AS `depth`, 0 AS `parent_id`, 0.0 AS `Proba_0`, -1.79769313486231e+308 AS `LogProba_0`, 1.0 AS `Proba_1`, 0.0 AS `LogProba_1`, 1 AS `Decision`, 1.0 AS `DecisionProba` UNION ALL SELECT 2 AS `node_id`, 'scaler_7' AS `feature`, 1.3775728940963745 AS `threshold`, 13 AS `count`, 1 AS `depth`, 0 AS `parent_id`, 0.9473684210526315 AS `Proba_0`, -0.0540672212703 AS `LogProba_0`, 0.05263157894736842 AS `Proba_1`, -2.94443897917 AS `LogProba_1`, 0 AS `Decision`, 0.947368421053 AS `DecisionProba` UNION ALL SELECT 3 AS `node_id`, CAST(NULL AS STRING) AS `feature`, CAST(NULL AS FLOAT) AS `threshold`, 12 AS `count`, 2 AS `depth`, 2 AS `parent_id`, 1.0 AS `Proba_0`, 0.0 AS `LogProba_0`, 0.0 AS `Proba_1`, -1.79769313486231e+308 AS `LogProba_1`, 0 AS `Decision`, 1.0 AS `DecisionProba` UNION ALL SELECT 4 AS `node_id`, CAST(NULL AS STRING) AS `feature`, CAST(NULL AS FLOAT) AS `threshold`, 1 AS `count`, 2 AS `depth`, 2 AS `parent_id`, 0.0 AS `Proba_0`, -1.79769313486231e+308 AS `LogProba_0`, 1.0 AS `Proba_1`, 0.0 AS `LogProba_1`, 1 AS `Decision`, 1.0 AS `DecisionProba`) AS `Values`), 
`DT_Output_6` AS 
(SELECT `DT_node_lookup_6`.`KEY` AS `KEY`, `DT_node_lookup_6`.`node_id_2` AS `node_id_2`, `DT_node_data_6`.`node_id` AS `node_id`, `DT_node_data_6`.`feature` AS `feature`, `DT_node_data_6`.`threshold` AS `threshold`, `DT_node_data_6`.`count` AS `count`, `DT_node_data_6`.`depth` AS `depth`, `DT_node_data_6`.`parent_id` AS `parent_id`, `DT_node_data_6`.`Proba_0` AS `Proba_0`, `DT_node_data_6`.`LogProba_0` AS `LogProba_0`, `DT_node_data_6`.`Proba_1` AS `Proba_1`, `DT_node_data_6`.`LogProba_1` AS `LogProba_1`, `DT_node_data_6`.`Decision` AS `Decision`, `DT_node_data_6`.`DecisionProba` AS `DecisionProba` 
FROM `DT_node_lookup_6` LEFT OUTER JOIN `DT_node_data_6` ON `DT_node_lookup_6`.`node_id_2` = `DT_node_data_6`.`node_id`), 
`BAG_Tree_6` AS 
(SELECT `DT_Output_6`.`KEY` AS `KEY`, CAST(NULL AS FLOAT) AS `Score_0`, `DT_Output_6`.`Proba_0` AS `Proba_0`, `DT_Output_6`.`LogProba_0` AS `LogProba_0`, CAST(NULL AS FLOAT) AS `Score_1`, `DT_Output_6`.`Proba_1` AS `Proba_1`, `DT_Output_6`.`LogProba_1` AS `LogProba_1` 
FROM `DT_Output_6`), 
`DT_node_lookup_7` AS 
(SELECT `ADS_sca_2_OUT`.`KEY` AS `KEY`, CASE WHEN (`ADS_sca_2_OUT`.`scaler_9` <= -0.5501443147659302) THEN 1 ELSE 2 END AS `node_id_2` 
FROM `ADS_sca_2_OUT`), 
`DT_node_data_7` AS 
(SELECT `Values`.`node_id` AS `node_id`, `Values`.`feature` AS `feature`, `Values`.`threshold` AS `threshold`, `Values`.`count` AS `count`, `Values`.`depth` AS `depth`, `Values`.`parent_id` AS `parent_id`, `Values`.`Proba_0` AS `Proba_0`, `Values`.`LogProba_0` AS `LogProba_0`, `Values`.`Proba_1` AS `Proba_1`, `Values`.`LogProba_1` AS `LogProba_1`, `Values`.`Decision` AS `Decision`, `Values`.`DecisionProba` AS `DecisionProba` 
FROM (SELECT 0 AS `node_id`, 'scaler_9' AS `feature`, -0.5501443147659302 AS `threshold`, 18 AS `count`, 0 AS `depth`, CAST(NULL AS INT) AS `parent_id`, 0.68 AS `Proba_0`, -0.385662480812 AS `LogProba_0`, 0.32 AS `Proba_1`, -1.13943428319 AS `LogProba_1`, 0 AS `Decision`, 0.68 AS `DecisionProba` UNION ALL SELECT 1 AS `node_id`, CAST(NULL AS STRING) AS `feature`, CAST(NULL AS FLOAT) AS `threshold`, 7 AS `count`, 1 AS `depth`, 0 AS `parent_id`, 0.0 AS `Proba_0`, -1.79769313486231e+308 AS `LogProba_0`, 1.0 AS `Proba_1`, 0.0 AS `LogProba_1`, 1 AS `Decision`, 1.0 AS `DecisionProba` UNION ALL SELECT 2 AS `node_id`, CAST(NULL AS STRING) AS `feature`, CAST(NULL AS FLOAT) AS `threshold`, 11 AS `count`, 1 AS `depth`, 0 AS `parent_id`, 1.0 AS `Proba_0`, 0.0 AS `LogProba_0`, 0.0 AS `Proba_1`, -1.79769313486231e+308 AS `LogProba_1`, 0 AS `Decision`, 1.0 AS `DecisionProba`) AS `Values`), 
`DT_Output_7` AS 
(SELECT `DT_node_lookup_7`.`KEY` AS `KEY`, `DT_node_lookup_7`.`node_id_2` AS `node_id_2`, `DT_node_data_7`.`node_id` AS `node_id`, `DT_node_data_7`.`feature` AS `feature`, `DT_node_data_7`.`threshold` AS `threshold`, `DT_node_data_7`.`count` AS `count`, `DT_node_data_7`.`depth` AS `depth`, `DT_node_data_7`.`parent_id` AS `parent_id`, `DT_node_data_7`.`Proba_0` AS `Proba_0`, `DT_node_data_7`.`LogProba_0` AS `LogProba_0`, `DT_node_data_7`.`Proba_1` AS `Proba_1`, `DT_node_data_7`.`LogProba_1` AS `LogProba_1`, `DT_node_data_7`.`Decision` AS `Decision`, `DT_node_data_7`.`DecisionProba` AS `DecisionProba` 
FROM `DT_node_lookup_7` LEFT OUTER JOIN `DT_node_data_7` ON `DT_node_lookup_7`.`node_id_2` = `DT_node_data_7`.`node_id`), 
`BAG_Tree_7` AS 
(SELECT `DT_Output_7`.`KEY` AS `KEY`, CAST(NULL AS FLOAT) AS `Score_0`, `DT_Output_7`.`Proba_0` AS `Proba_0`, `DT_Output_7`.`LogProba_0` AS `LogProba_0`, CAST(NULL AS FLOAT) AS `Score_1`, `DT_Output_7`.`Proba_1` AS `Proba_1`, `DT_Output_7`.`LogProba_1` AS `LogProba_1` 
FROM `DT_Output_7`), 
`DT_node_lookup_8` AS 
(SELECT `ADS_sca_2_OUT`.`KEY` AS `KEY`, CASE WHEN (`ADS_sca_2_OUT`.`scaler_9` <= -0.5501443147659302) THEN 1 ELSE CASE WHEN (`ADS_sca_2_OUT`.`scaler_4` <= -0.8856716156005859) THEN 3 ELSE 4 END END AS `node_id_2` 
FROM `ADS_sca_2_OUT`), 
`DT_node_data_8` AS 
(SELECT `Values`.`node_id` AS `node_id`, `Values`.`feature` AS `feature`, `Values`.`threshold` AS `threshold`, `Values`.`count` AS `count`, `Values`.`depth` AS `depth`, `Values`.`parent_id` AS `parent_id`, `Values`.`Proba_0` AS `Proba_0`, `Values`.`LogProba_0` AS `LogProba_0`, `Values`.`Proba_1` AS `Proba_1`, `Values`.`LogProba_1` AS `LogProba_1`, `Values`.`Decision` AS `Decision`, `Values`.`DecisionProba` AS `DecisionProba` 
FROM (SELECT 0 AS `node_id`, 'scaler_9' AS `feature`, -0.5501443147659302 AS `threshold`, 14 AS `count`, 0 AS `depth`, CAST(NULL AS INT) AS `parent_id`, 0.48 AS `Proba_0`, -0.73396917508 AS `LogProba_0`, 0.52 AS `Proba_1`, -0.653926467407 AS `LogProba_1`, 1 AS `Decision`, 0.52 AS `DecisionProba` UNION ALL SELECT 1 AS `node_id`, CAST(NULL AS STRING) AS `feature`, CAST(NULL AS FLOAT) AS `threshold`, 5 AS `count`, 1 AS `depth`, 0 AS `parent_id`, 0.0 AS `Proba_0`, -1.79769313486231e+308 AS `LogProba_0`, 1.0 AS `Proba_1`, 0.0 AS `LogProba_1`, 1 AS `Decision`, 1.0 AS `DecisionProba` UNION ALL SELECT 2 AS `node_id`, 'scaler_4' AS `feature`, -0.8856716156005859 AS `threshold`, 9 AS `count`, 1 AS `depth`, 0 AS `parent_id`, 0.8 AS `Proba_0`, -0.223143551314 AS `LogProba_0`, 0.2 AS `Proba_1`, -1.60943791243 AS `LogProba_1`, 0 AS `Decision`, 0.8 AS `DecisionProba` UNION ALL SELECT 3 AS `node_id`, CAST(NULL AS STRING) AS `feature`, CAST(NULL AS FLOAT) AS `threshold`, 1 AS `count`, 2 AS `depth`, 2 AS `parent_id`, 0.0 AS `Proba_0`, -1.79769313486231e+308 AS `LogProba_0`, 1.0 AS `Proba_1`, 0.0 AS `LogProba_1`, 1 AS `Decision`, 1.0 AS `DecisionProba` UNION ALL SELECT 4 AS `node_id`, CAST(NULL AS STRING) AS `feature`, CAST(NULL AS FLOAT) AS `threshold`, 8 AS `count`, 2 AS `depth`, 2 AS `parent_id`, 1.0 AS `Proba_0`, 0.0 AS `LogProba_0`, 0.0 AS `Proba_1`, -1.79769313486231e+308 AS `LogProba_1`, 0 AS `Decision`, 1.0 AS `DecisionProba`) AS `Values`), 
`DT_Output_8` AS 
(SELECT `DT_node_lookup_8`.`KEY` AS `KEY`, `DT_node_lookup_8`.`node_id_2` AS `node_id_2`, `DT_node_data_8`.`node_id` AS `node_id`, `DT_node_data_8`.`feature` AS `feature`, `DT_node_data_8`.`threshold` AS `threshold`, `DT_node_data_8`.`count` AS `count`, `DT_node_data_8`.`depth` AS `depth`, `DT_node_data_8`.`parent_id` AS `parent_id`, `DT_node_data_8`.`Proba_0` AS `Proba_0`, `DT_node_data_8`.`LogProba_0` AS `LogProba_0`, `DT_node_data_8`.`Proba_1` AS `Proba_1`, `DT_node_data_8`.`LogProba_1` AS `LogProba_1`, `DT_node_data_8`.`Decision` AS `Decision`, `DT_node_data_8`.`DecisionProba` AS `DecisionProba` 
FROM `DT_node_lookup_8` LEFT OUTER JOIN `DT_node_data_8` ON `DT_node_lookup_8`.`node_id_2` = `DT_node_data_8`.`node_id`), 
`BAG_Tree_8` AS 
(SELECT `DT_Output_8`.`KEY` AS `KEY`, CAST(NULL AS FLOAT) AS `Score_0`, `DT_Output_8`.`Proba_0` AS `Proba_0`, `DT_Output_8`.`LogProba_0` AS `LogProba_0`, CAST(NULL AS FLOAT) AS `Score_1`, `DT_Output_8`.`Proba_1` AS `Proba_1`, `DT_Output_8`.`LogProba_1` AS `LogProba_1` 
FROM `DT_Output_8`), 
`DT_node_lookup_9` AS 
(SELECT `ADS_sca_2_OUT`.`KEY` AS `KEY`, CASE WHEN (`ADS_sca_2_OUT`.`scaler_2` <= -0.6878207325935364) THEN 1 ELSE CASE WHEN (`ADS_sca_2_OUT`.`scaler_7` <= 1.5878198146820068) THEN 3 ELSE 4 END END AS `node_id_2` 
FROM `ADS_sca_2_OUT`), 
`DT_node_data_9` AS 
(SELECT `Values`.`node_id` AS `node_id`, `Values`.`feature` AS `feature`, `Values`.`threshold` AS `threshold`, `Values`.`count` AS `count`, `Values`.`depth` AS `depth`, `Values`.`parent_id` AS `parent_id`, `Values`.`Proba_0` AS `Proba_0`, `Values`.`LogProba_0` AS `LogProba_0`, `Values`.`Proba_1` AS `Proba_1`, `Values`.`LogProba_1` AS `LogProba_1`, `Values`.`Decision` AS `Decision`, `Values`.`DecisionProba` AS `DecisionProba` 
FROM (SELECT 0 AS `node_id`, 'scaler_2' AS `feature`, -0.6878207325935364 AS `threshold`, 17 AS `count`, 0 AS `depth`, CAST(NULL AS INT) AS `parent_id`, 0.6 AS `Proba_0`, -0.510825623766 AS `LogProba_0`, 0.4 AS `Proba_1`, -0.916290731874 AS `LogProba_1`, 0 AS `Decision`, 0.6 AS `DecisionProba` UNION ALL SELECT 1 AS `node_id`, CAST(NULL AS STRING) AS `feature`, CAST(NULL AS FLOAT) AS `threshold`, 5 AS `count`, 1 AS `depth`, 0 AS `parent_id`, 0.0 AS `Proba_0`, -1.79769313486231e+308 AS `LogProba_0`, 1.0 AS `Proba_1`, 0.0 AS `LogProba_1`, 1 AS `Decision`, 1.0 AS `DecisionProba` UNION ALL SELECT 2 AS `node_id`, 'scaler_7' AS `feature`, 1.5878198146820068 AS `threshold`, 12 AS `count`, 1 AS `depth`, 0 AS `parent_id`, 0.8823529411764706 AS `Proba_0`, -0.125163142954 AS `LogProba_0`, 0.11764705882352941 AS `Proba_1`, -2.1400661635 AS `LogProba_1`, 0 AS `Decision`, 0.882352941176 AS `DecisionProba` UNION ALL SELECT 3 AS `node_id`, CAST(NULL AS STRING) AS `feature`, CAST(NULL AS FLOAT) AS `threshold`, 10 AS `count`, 2 AS `depth`, 2 AS `parent_id`, 1.0 AS `Proba_0`, 0.0 AS `LogProba_0`, 0.0 AS `Proba_1`, -1.79769313486231e+308 AS `LogProba_1`, 0 AS `Decision`, 1.0 AS `DecisionProba` UNION ALL SELECT 4 AS `node_id`, CAST(NULL AS STRING) AS `feature`, CAST(NULL AS FLOAT) AS `threshold`, 2 AS `count`, 2 AS `depth`, 2 AS `parent_id`, 0.0 AS `Proba_0`, -1.79769313486231e+308 AS `LogProba_0`, 1.0 AS `Proba_1`, 0.0 AS `LogProba_1`, 1 AS `Decision`, 1.0 AS `DecisionProba`) AS `Values`), 
`DT_Output_9` AS 
(SELECT `DT_node_lookup_9`.`KEY` AS `KEY`, `DT_node_lookup_9`.`node_id_2` AS `node_id_2`, `DT_node_data_9`.`node_id` AS `node_id`, `DT_node_data_9`.`feature` AS `feature`, `DT_node_data_9`.`threshold` AS `threshold`, `DT_node_data_9`.`count` AS `count`, `DT_node_data_9`.`depth` AS `depth`, `DT_node_data_9`.`parent_id` AS `parent_id`, `DT_node_data_9`.`Proba_0` AS `Proba_0`, `DT_node_data_9`.`LogProba_0` AS `LogProba_0`, `DT_node_data_9`.`Proba_1` AS `Proba_1`, `DT_node_data_9`.`LogProba_1` AS `LogProba_1`, `DT_node_data_9`.`Decision` AS `Decision`, `DT_node_data_9`.`DecisionProba` AS `DecisionProba` 
FROM `DT_node_lookup_9` LEFT OUTER JOIN `DT_node_data_9` ON `DT_node_lookup_9`.`node_id_2` = `DT_node_data_9`.`node_id`), 
`BAG_Tree_9` AS 
(SELECT `DT_Output_9`.`KEY` AS `KEY`, CAST(NULL AS FLOAT) AS `Score_0`, `DT_Output_9`.`Proba_0` AS `Proba_0`, `DT_Output_9`.`LogProba_0` AS `LogProba_0`, CAST(NULL AS FLOAT) AS `Score_1`, `DT_Output_9`.`Proba_1` AS `Proba_1`, `DT_Output_9`.`LogProba_1` AS `LogProba_1` 
FROM `DT_Output_9`), 
`Score_Union_CTE` AS 
(SELECT `ensemble_score_union`.`KEY` AS `KEY`, `ensemble_score_union`.`Score_0` AS `Score_0`, `ensemble_score_union`.`Proba_0` AS `Proba_0`, `ensemble_score_union`.`LogProba_0` AS `LogProba_0`, `ensemble_score_union`.`Score_1` AS `Score_1`, `ensemble_score_union`.`Proba_1` AS `Proba_1`, `ensemble_score_union`.`LogProba_1` AS `LogProba_1` 
FROM (SELECT `BAG_Tree_0`.`KEY` AS `KEY`, `BAG_Tree_0`.`Score_0` AS `Score_0`, `BAG_Tree_0`.`Proba_0` AS `Proba_0`, `BAG_Tree_0`.`LogProba_0` AS `LogProba_0`, `BAG_Tree_0`.`Score_1` AS `Score_1`, `BAG_Tree_0`.`Proba_1` AS `Proba_1`, `BAG_Tree_0`.`LogProba_1` AS `LogProba_1` 
FROM `BAG_Tree_0` UNION ALL SELECT `BAG_Tree_1`.`KEY` AS `KEY`, `BAG_Tree_1`.`Score_0` AS `Score_0`, `BAG_Tree_1`.`Proba_0` AS `Proba_0`, `BAG_Tree_1`.`LogProba_0` AS `LogProba_0`, `BAG_Tree_1`.`Score_1` AS `Score_1`, `BAG_Tree_1`.`Proba_1` AS `Proba_1`, `BAG_Tree_1`.`LogProba_1` AS `LogProba_1` 
FROM `BAG_Tree_1` UNION ALL SELECT `BAG_Tree_2`.`KEY` AS `KEY`, `BAG_Tree_2`.`Score_0` AS `Score_0`, `BAG_Tree_2`.`Proba_0` AS `Proba_0`, `BAG_Tree_2`.`LogProba_0` AS `LogProba_0`, `BAG_Tree_2`.`Score_1` AS `Score_1`, `BAG_Tree_2`.`Proba_1` AS `Proba_1`, `BAG_Tree_2`.`LogProba_1` AS `LogProba_1` 
FROM `BAG_Tree_2` UNION ALL SELECT `BAG_Tree_3`.`KEY` AS `KEY`, `BAG_Tree_3`.`Score_0` AS `Score_0`, `BAG_Tree_3`.`Proba_0` AS `Proba_0`, `BAG_Tree_3`.`LogProba_0` AS `LogProba_0`, `BAG_Tree_3`.`Score_1` AS `Score_1`, `BAG_Tree_3`.`Proba_1` AS `Proba_1`, `BAG_Tree_3`.`LogProba_1` AS `LogProba_1` 
FROM `BAG_Tree_3` UNION ALL SELECT `BAG_Tree_4`.`KEY` AS `KEY`, `BAG_Tree_4`.`Score_0` AS `Score_0`, `BAG_Tree_4`.`Proba_0` AS `Proba_0`, `BAG_Tree_4`.`LogProba_0` AS `LogProba_0`, `BAG_Tree_4`.`Score_1` AS `Score_1`, `BAG_Tree_4`.`Proba_1` AS `Proba_1`, `BAG_Tree_4`.`LogProba_1` AS `LogProba_1` 
FROM `BAG_Tree_4` UNION ALL SELECT `BAG_Tree_5`.`KEY` AS `KEY`, `BAG_Tree_5`.`Score_0` AS `Score_0`, `BAG_Tree_5`.`Proba_0` AS `Proba_0`, `BAG_Tree_5`.`LogProba_0` AS `LogProba_0`, `BAG_Tree_5`.`Score_1` AS `Score_1`, `BAG_Tree_5`.`Proba_1` AS `Proba_1`, `BAG_Tree_5`.`LogProba_1` AS `LogProba_1` 
FROM `BAG_Tree_5` UNION ALL SELECT `BAG_Tree_6`.`KEY` AS `KEY`, `BAG_Tree_6`.`Score_0` AS `Score_0`, `BAG_Tree_6`.`Proba_0` AS `Proba_0`, `BAG_Tree_6`.`LogProba_0` AS `LogProba_0`, `BAG_Tree_6`.`Score_1` AS `Score_1`, `BAG_Tree_6`.`Proba_1` AS `Proba_1`, `BAG_Tree_6`.`LogProba_1` AS `LogProba_1` 
FROM `BAG_Tree_6` UNION ALL SELECT `BAG_Tree_7`.`KEY` AS `KEY`, `BAG_Tree_7`.`Score_0` AS `Score_0`, `BAG_Tree_7`.`Proba_0` AS `Proba_0`, `BAG_Tree_7`.`LogProba_0` AS `LogProba_0`, `BAG_Tree_7`.`Score_1` AS `Score_1`, `BAG_Tree_7`.`Proba_1` AS `Proba_1`, `BAG_Tree_7`.`LogProba_1` AS `LogProba_1` 
FROM `BAG_Tree_7` UNION ALL SELECT `BAG_Tree_8`.`KEY` AS `KEY`, `BAG_Tree_8`.`Score_0` AS `Score_0`, `BAG_Tree_8`.`Proba_0` AS `Proba_0`, `BAG_Tree_8`.`LogProba_0` AS `LogProba_0`, `BAG_Tree_8`.`Score_1` AS `Score_1`, `BAG_Tree_8`.`Proba_1` AS `Proba_1`, `BAG_Tree_8`.`LogProba_1` AS `LogProba_1` 
FROM `BAG_Tree_8` UNION ALL SELECT `BAG_Tree_9`.`KEY` AS `KEY`, `BAG_Tree_9`.`Score_0` AS `Score_0`, `BAG_Tree_9`.`Proba_0` AS `Proba_0`, `BAG_Tree_9`.`LogProba_0` AS `LogProba_0`, `BAG_Tree_9`.`Score_1` AS `Score_1`, `BAG_Tree_9`.`Proba_1` AS `Proba_1`, `BAG_Tree_9`.`LogProba_1` AS `LogProba_1` 
FROM `BAG_Tree_9`) AS `ensemble_score_union`), 
`BAG_AVG_Scores` AS 
(SELECT `T`.`KEY` AS `KEY`, `T`.`Score_0` AS `Score_0`, `T`.`Proba_0` AS `Proba_0`, `T`.`LogProba_0` AS `LogProba_0`, `T`.`Score_1` AS `Score_1`, `T`.`Proba_1` AS `Proba_1`, `T`.`LogProba_1` AS `LogProba_1` 
FROM (SELECT `Score_Union_CTE`.`KEY` AS `KEY`, avg(`Score_Union_CTE`.`Score_0`) AS `Score_0`, avg(`Score_Union_CTE`.`Proba_0`) AS `Proba_0`, avg(`Score_Union_CTE`.`LogProba_0`) AS `LogProba_0`, avg(`Score_Union_CTE`.`Score_1`) AS `Score_1`, avg(`Score_Union_CTE`.`Proba_1`) AS `Proba_1`, avg(`Score_Union_CTE`.`LogProba_1`) AS `LogProba_1` 
FROM `Score_Union_CTE` GROUP BY `Score_Union_CTE`.`KEY`) AS `T`), 
`orig_cte` AS 
(SELECT `BAG_AVG_Scores`.`KEY` AS `KEY`, `BAG_AVG_Scores`.`Score_0` AS `Score_0`, `BAG_AVG_Scores`.`Score_1` AS `Score_1`, `BAG_AVG_Scores`.`Proba_0` AS `Proba_0`, `BAG_AVG_Scores`.`Proba_1` AS `Proba_1`, `BAG_AVG_Scores`.`LogProba_0` AS `LogProba_0`, `BAG_AVG_Scores`.`LogProba_1` AS `LogProba_1`, CAST(NULL AS INT) AS `Decision`, CAST(NULL AS FLOAT) AS `DecisionProba` 
FROM `BAG_AVG_Scores`), 
`score_class_union` AS 
(SELECT `scu`.`KEY_u` AS `KEY_u`, `scu`.`class` AS `class`, `scu`.`LogProba` AS `LogProba`, `scu`.`Proba` AS `Proba`, `scu`.`Score` AS `Score` 
FROM (SELECT `orig_cte`.`KEY` AS `KEY_u`, 0 AS `class`, `orig_cte`.`LogProba_0` AS `LogProba`, `orig_cte`.`Proba_0` AS `Proba`, `orig_cte`.`Score_0` AS `Score` 
FROM `orig_cte` UNION ALL SELECT `orig_cte`.`KEY` AS `KEY_u`, 1 AS `class`, `orig_cte`.`LogProba_1` AS `LogProba`, `orig_cte`.`Proba_1` AS `Proba`, `orig_cte`.`Score_1` AS `Score` 
FROM `orig_cte`) AS `scu`), 
`score_max` AS 
(SELECT `orig_cte`.`KEY` AS `KEY`, `orig_cte`.`Score_0` AS `Score_0`, `orig_cte`.`Score_1` AS `Score_1`, `orig_cte`.`Proba_0` AS `Proba_0`, `orig_cte`.`Proba_1` AS `Proba_1`, `orig_cte`.`LogProba_0` AS `LogProba_0`, `orig_cte`.`LogProba_1` AS `LogProba_1`, `orig_cte`.`Decision` AS `Decision`, `orig_cte`.`DecisionProba` AS `DecisionProba`, `max_select`.`KEY_m` AS `KEY_m`, `max_select`.`max_Proba` AS `max_Proba` 
FROM `orig_cte` LEFT OUTER JOIN (SELECT `score_class_union`.`KEY_u` AS `KEY_m`, max(`score_class_union`.`Proba`) AS `max_Proba` 
FROM `score_class_union` GROUP BY `score_class_union`.`KEY_u`) AS `max_select` ON `orig_cte`.`KEY` = `max_select`.`KEY_m`), 
`union_with_max` AS 
(SELECT `score_class_union`.`KEY_u` AS `KEY_u`, `score_class_union`.`class` AS `class`, `score_class_union`.`LogProba` AS `LogProba`, `score_class_union`.`Proba` AS `Proba`, `score_class_union`.`Score` AS `Score`, `score_max`.`KEY` AS `KEY`, `score_max`.`Score_0` AS `Score_0`, `score_max`.`Score_1` AS `Score_1`, `score_max`.`Proba_0` AS `Proba_0`, `score_max`.`Proba_1` AS `Proba_1`, `score_max`.`LogProba_0` AS `LogProba_0`, `score_max`.`LogProba_1` AS `LogProba_1`, `score_max`.`Decision` AS `Decision`, `score_max`.`DecisionProba` AS `DecisionProba`, `score_max`.`KEY_m` AS `KEY_m`, `score_max`.`max_Proba` AS `max_Proba` 
FROM `score_class_union` LEFT OUTER JOIN `score_max` ON `score_class_union`.`KEY_u` = `score_max`.`KEY`), 
`arg_max_cte` AS 
(SELECT `score_max`.`KEY` AS `KEY`, `score_max`.`Score_0` AS `Score_0`, `score_max`.`Score_1` AS `Score_1`, `score_max`.`Proba_0` AS `Proba_0`, `score_max`.`Proba_1` AS `Proba_1`, `score_max`.`LogProba_0` AS `LogProba_0`, `score_max`.`LogProba_1` AS `LogProba_1`, `score_max`.`Decision` AS `Decision`, `score_max`.`DecisionProba` AS `DecisionProba`, `score_max`.`KEY_m` AS `KEY_m`, `score_max`.`max_Proba` AS `max_Proba`, `arg_max_t_Proba`.`KEY_Proba` AS `KEY_Proba`, `arg_max_t_Proba`.`arg_max_Proba` AS `arg_max_Proba` 
FROM `score_max` LEFT OUTER JOIN (SELECT `union_with_max`.`KEY` AS `KEY_Proba`, min(`union_with_max`.`class`) AS `arg_max_Proba` 
FROM `union_with_max` 
WHERE `union_with_max`.`max_Proba` <= `union_with_max`.`Proba` GROUP BY `union_with_max`.`KEY`) AS `arg_max_t_Proba` ON `score_max`.`KEY` = `arg_max_t_Proba`.`KEY_Proba`)
 SELECT `arg_max_cte`.`KEY` AS `KEY`, `arg_max_cte`.`Score_0` AS `Score_0`, `arg_max_cte`.`Score_1` AS `Score_1`, `arg_max_cte`.`Proba_0` AS `Proba_0`, `arg_max_cte`.`Proba_1` AS `Proba_1`, CASE WHEN (`arg_max_cte`.`Proba_0` IS NULL OR `arg_max_cte`.`Proba_0` > 0.0) THEN log(`arg_max_cte`.`Proba_0`) ELSE -1.79769313486231e+308 END AS `LogProba_0`, CASE WHEN (`arg_max_cte`.`Proba_1` IS NULL OR `arg_max_cte`.`Proba_1` > 0.0) THEN log(`arg_max_cte`.`Proba_1`) ELSE -1.79769313486231e+308 END AS `LogProba_1`, `arg_max_cte`.`arg_max_Proba` AS `Decision`, `arg_max_cte`.`max_Proba` AS `DecisionProba` 
FROM `arg_max_cte`