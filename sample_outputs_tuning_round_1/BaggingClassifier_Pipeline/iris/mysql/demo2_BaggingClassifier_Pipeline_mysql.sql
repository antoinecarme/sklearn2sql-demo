-- This SQL code was generated by sklearn2sql (development version).
-- Copyright 2017

WITH `ADS_imp_1_OUT` AS 
(SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_0` IS NULL) THEN 5.72972972973 ELSE `ADS`.`Feature_0` END AS imputer_output_2, CASE WHEN (`ADS`.`Feature_1` IS NULL) THEN 3.00810810811 ELSE `ADS`.`Feature_1` END AS imputer_output_3, CASE WHEN (`ADS`.`Feature_2` IS NULL) THEN 3.50540540541 ELSE `ADS`.`Feature_2` END AS imputer_output_4, CASE WHEN (`ADS`.`Feature_3` IS NULL) THEN 1.04054054054 ELSE `ADS`.`Feature_3` END AS imputer_output_5 
FROM iris AS `ADS`), 
`ADS_sca_2_OUT` AS 
(SELECT `ADS_imp_1_OUT`.`KEY` AS `KEY`, (CAST(`ADS_imp_1_OUT`.imputer_output_2 AS DOUBLE) - 5.72972972973) / 0.86863199836 AS scaler_output_2, (CAST(`ADS_imp_1_OUT`.imputer_output_3 AS DOUBLE) - 3.00810810811) / 0.481202535534 AS scaler_output_3, (CAST(`ADS_imp_1_OUT`.imputer_output_4 AS DOUBLE) - 3.50540540541) / 1.71068912082 AS scaler_output_4, (CAST(`ADS_imp_1_OUT`.imputer_output_5 AS DOUBLE) - 1.04054054054) / 0.669997765006 AS scaler_output_5 
FROM `ADS_imp_1_OUT`), 
`DT_node_lookup` AS 
(SELECT `ADS_sca_2_OUT`.`KEY` AS `KEY`, CASE WHEN (`ADS_sca_2_OUT`.scaler_output_5 <= -0.5082711577415466) THEN 1 ELSE CASE WHEN (`ADS_sca_2_OUT`.scaler_output_4 <= 0.8444518446922302) THEN 3 ELSE CASE WHEN (`ADS_sca_2_OUT`.scaler_output_3 <= -0.12075603008270264) THEN 5 ELSE CASE WHEN (`ADS_sca_2_OUT`.scaler_output_3 <= 0.1909630298614502) THEN 7 ELSE 8 END END END END AS node_id_2 
FROM `ADS_sca_2_OUT`), 
`DT_node_data` AS 
(SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Proba_0` AS `Proba_0`, `Values`.`LogProba_0` AS `LogProba_0`, `Values`.`Proba_1` AS `Proba_1`, `Values`.`LogProba_1` AS `LogProba_1`, `Values`.`Proba_2` AS `Proba_2`, `Values`.`LogProba_2` AS `LogProba_2`, `Values`.`Decision` AS `Decision`, `Values`.`DecisionProba` AS `DecisionProba` 
FROM (SELECT 0 AS node_id, 'scaler_output_5' AS feature, -0.5082711577415466 AS threshold, 24 AS count, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.24324324324324326 AS `Proba_0`, -1.41369333531 AS `LogProba_0`, 0.6216216216216216 AS `Proba_1`, -0.475423696715 AS `LogProba_1`, 0.13513513513513514 AS `Proba_2`, -2.00148000021 AS `LogProba_2`, 1 AS `Decision`, 0.621621621622 AS `DecisionProba` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 7 AS count, 1 AS depth, 0 AS parent_id, 1.0 AS `Proba_0`, 0.0 AS `LogProba_0`, 0.0 AS `Proba_1`, -1.79769313486231e+308 AS `LogProba_1`, 0.0 AS `Proba_2`, -1.79769313486231e+308 AS `LogProba_2`, 0 AS `Decision`, 1.0 AS `DecisionProba` UNION ALL SELECT 2 AS node_id, 'scaler_output_4' AS feature, 0.8444518446922302 AS threshold, 17 AS count, 1 AS depth, 0 AS parent_id, 0.0 AS `Proba_0`, -1.79769313486231e+308 AS `LogProba_0`, 0.8214285714285714 AS `Proba_1`, -0.196710294246 AS `LogProba_1`, 0.17857142857142858 AS `Proba_2`, -1.72276659774 AS `LogProba_2`, 1 AS `Decision`, 0.821428571429 AS `DecisionProba` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 13 AS count, 2 AS depth, 2 AS parent_id, 0.0 AS `Proba_0`, -1.79769313486231e+308 AS `LogProba_0`, 1.0 AS `Proba_1`, 0.0 AS `LogProba_1`, 0.0 AS `Proba_2`, -1.79769313486231e+308 AS `LogProba_2`, 1 AS `Decision`, 1.0 AS `DecisionProba` UNION ALL SELECT 4 AS node_id, 'scaler_output_3' AS feature, -0.12075603008270264 AS threshold, 4 AS count, 2 AS depth, 2 AS parent_id, 0.0 AS `Proba_0`, -1.79769313486231e+308 AS `LogProba_0`, 0.16666666666666666 AS `Proba_1`, -1.79175946923 AS `LogProba_1`, 0.8333333333333334 AS `Proba_2`, -0.182321556794 AS `LogProba_2`, 2 AS `Decision`, 0.833333333333 AS `DecisionProba` UNION ALL SELECT 5 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS count, 3 AS depth, 4 AS parent_id, 0.0 AS `Proba_0`, -1.79769313486231e+308 AS `LogProba_0`, 0.0 AS `Proba_1`, -1.79769313486231e+308 AS `LogProba_1`, 1.0 AS `Proba_2`, 0.0 AS `LogProba_2`, 2 AS `Decision`, 1.0 AS `DecisionProba` UNION ALL SELECT 6 AS node_id, 'scaler_output_3' AS feature, 0.1909630298614502 AS threshold, 2 AS count, 3 AS depth, 4 AS parent_id, 0.0 AS `Proba_0`, -1.79769313486231e+308 AS `LogProba_0`, 0.5 AS `Proba_1`, -0.69314718056 AS `LogProba_1`, 0.5 AS `Proba_2`, -0.69314718056 AS `LogProba_2`, 1 AS `Decision`, 0.5 AS `DecisionProba` UNION ALL SELECT 7 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS count, 4 AS depth, 6 AS parent_id, 0.0 AS `Proba_0`, -1.79769313486231e+308 AS `LogProba_0`, 1.0 AS `Proba_1`, 0.0 AS `LogProba_1`, 0.0 AS `Proba_2`, -1.79769313486231e+308 AS `LogProba_2`, 1 AS `Decision`, 1.0 AS `DecisionProba` UNION ALL SELECT 8 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS count, 4 AS depth, 6 AS parent_id, 0.0 AS `Proba_0`, -1.79769313486231e+308 AS `LogProba_0`, 0.0 AS `Proba_1`, -1.79769313486231e+308 AS `LogProba_1`, 1.0 AS `Proba_2`, 0.0 AS `LogProba_2`, 2 AS `Decision`, 1.0 AS `DecisionProba`) AS `Values`), 
`DT_Output` AS 
(SELECT `DT_node_lookup`.`KEY` AS `KEY`, `DT_node_lookup`.node_id_2 AS node_id_2, `DT_node_data`.node_id AS node_id, `DT_node_data`.feature AS feature, `DT_node_data`.threshold AS threshold, `DT_node_data`.count AS count, `DT_node_data`.depth AS depth, `DT_node_data`.parent_id AS parent_id, `DT_node_data`.`Proba_0` AS `Proba_0`, `DT_node_data`.`LogProba_0` AS `LogProba_0`, `DT_node_data`.`Proba_1` AS `Proba_1`, `DT_node_data`.`LogProba_1` AS `LogProba_1`, `DT_node_data`.`Proba_2` AS `Proba_2`, `DT_node_data`.`LogProba_2` AS `LogProba_2`, `DT_node_data`.`Decision` AS `Decision`, `DT_node_data`.`DecisionProba` AS `DecisionProba` 
FROM `DT_node_lookup` LEFT OUTER JOIN `DT_node_data` ON `DT_node_lookup`.node_id_2 = `DT_node_data`.node_id), 
`BAG_Tree_0` AS 
(SELECT `DT_Output`.`KEY` AS `KEY`, NULL AS `Score_0`, `DT_Output`.`Proba_0` AS `Proba_0`, `DT_Output`.`LogProba_0` AS `LogProba_0`, NULL AS `Score_1`, `DT_Output`.`Proba_1` AS `Proba_1`, `DT_Output`.`LogProba_1` AS `LogProba_1`, NULL AS `Score_2`, `DT_Output`.`Proba_2` AS `Proba_2`, `DT_Output`.`LogProba_2` AS `LogProba_2` 
FROM `DT_Output`), 
`DT_node_lookup_1` AS 
(SELECT `ADS_sca_2_OUT`.`KEY` AS `KEY`, CASE WHEN (`ADS_sca_2_OUT`.scaler_output_5 <= -0.5082711577415466) THEN 1 ELSE CASE WHEN (`ADS_sca_2_OUT`.scaler_output_4 <= 0.8444518446922302) THEN 3 ELSE CASE WHEN (`ADS_sca_2_OUT`.scaler_output_5 <= 1.0588982105255127) THEN CASE WHEN (`ADS_sca_2_OUT`.scaler_output_5 <= 0.9096440076828003) THEN 6 ELSE 7 END ELSE 8 END END END AS node_id_2 
FROM `ADS_sca_2_OUT`), 
`DT_node_data_1` AS 
(SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Proba_0` AS `Proba_0`, `Values`.`LogProba_0` AS `LogProba_0`, `Values`.`Proba_1` AS `Proba_1`, `Values`.`LogProba_1` AS `LogProba_1`, `Values`.`Proba_2` AS `Proba_2`, `Values`.`LogProba_2` AS `LogProba_2`, `Values`.`Decision` AS `Decision`, `Values`.`DecisionProba` AS `DecisionProba` 
FROM (SELECT 0 AS node_id, 'scaler_output_5' AS feature, -0.5082711577415466 AS threshold, 25 AS count, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.35135135135135137 AS `Proba_0`, -1.04596855518 AS `LogProba_0`, 0.43243243243243246 AS `Proba_1`, -0.838329190404 AS `LogProba_1`, 0.21621621621621623 AS `Proba_2`, -1.53147637096 AS `LogProba_2`, 1 AS `Decision`, 0.432432432432 AS `DecisionProba` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 7 AS count, 1 AS depth, 0 AS parent_id, 1.0 AS `Proba_0`, 0.0 AS `LogProba_0`, 0.0 AS `Proba_1`, -1.79769313486231e+308 AS `LogProba_1`, 0.0 AS `Proba_2`, -1.79769313486231e+308 AS `LogProba_2`, 0 AS `Decision`, 1.0 AS `DecisionProba` UNION ALL SELECT 2 AS node_id, 'scaler_output_4' AS feature, 0.8444518446922302 AS threshold, 18 AS count, 1 AS depth, 0 AS parent_id, 0.0 AS `Proba_0`, -1.79769313486231e+308 AS `LogProba_0`, 0.6666666666666666 AS `Proba_1`, -0.405465108108 AS `LogProba_1`, 0.3333333333333333 AS `Proba_2`, -1.09861228867 AS `LogProba_2`, 1 AS `Decision`, 0.666666666667 AS `DecisionProba` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 10 AS count, 2 AS depth, 2 AS parent_id, 0.0 AS `Proba_0`, -1.79769313486231e+308 AS `LogProba_0`, 1.0 AS `Proba_1`, 0.0 AS `LogProba_1`, 0.0 AS `Proba_2`, -1.79769313486231e+308 AS `LogProba_2`, 1 AS `Decision`, 1.0 AS `DecisionProba` UNION ALL SELECT 4 AS node_id, 'scaler_output_5' AS feature, 1.0588982105255127 AS threshold, 8 AS count, 2 AS depth, 2 AS parent_id, 0.0 AS `Proba_0`, -1.79769313486231e+308 AS `LogProba_0`, 0.1111111111111111 AS `Proba_1`, -2.19722457734 AS `LogProba_1`, 0.8888888888888888 AS `Proba_2`, -0.117783035656 AS `LogProba_2`, 2 AS `Decision`, 0.888888888889 AS `DecisionProba` UNION ALL SELECT 5 AS node_id, 'scaler_output_5' AS feature, 0.9096440076828003 AS threshold, 3 AS count, 3 AS depth, 4 AS parent_id, 0.0 AS `Proba_0`, -1.79769313486231e+308 AS `LogProba_0`, 0.3333333333333333 AS `Proba_1`, -1.09861228867 AS `LogProba_1`, 0.6666666666666666 AS `Proba_2`, -0.405465108108 AS `LogProba_2`, 2 AS `Decision`, 0.666666666667 AS `DecisionProba` UNION ALL SELECT 6 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS count, 4 AS depth, 5 AS parent_id, 0.0 AS `Proba_0`, -1.79769313486231e+308 AS `LogProba_0`, 0.0 AS `Proba_1`, -1.79769313486231e+308 AS `LogProba_1`, 1.0 AS `Proba_2`, 0.0 AS `LogProba_2`, 2 AS `Decision`, 1.0 AS `DecisionProba` UNION ALL SELECT 7 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS count, 4 AS depth, 5 AS parent_id, 0.0 AS `Proba_0`, -1.79769313486231e+308 AS `LogProba_0`, 1.0 AS `Proba_1`, 0.0 AS `LogProba_1`, 0.0 AS `Proba_2`, -1.79769313486231e+308 AS `LogProba_2`, 1 AS `Decision`, 1.0 AS `DecisionProba` UNION ALL SELECT 8 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 5 AS count, 3 AS depth, 4 AS parent_id, 0.0 AS `Proba_0`, -1.79769313486231e+308 AS `LogProba_0`, 0.0 AS `Proba_1`, -1.79769313486231e+308 AS `LogProba_1`, 1.0 AS `Proba_2`, 0.0 AS `LogProba_2`, 2 AS `Decision`, 1.0 AS `DecisionProba`) AS `Values`), 
`DT_Output_1` AS 
(SELECT `DT_node_lookup_1`.`KEY` AS `KEY`, `DT_node_lookup_1`.node_id_2 AS node_id_2, `DT_node_data_1`.node_id AS node_id, `DT_node_data_1`.feature AS feature, `DT_node_data_1`.threshold AS threshold, `DT_node_data_1`.count AS count, `DT_node_data_1`.depth AS depth, `DT_node_data_1`.parent_id AS parent_id, `DT_node_data_1`.`Proba_0` AS `Proba_0`, `DT_node_data_1`.`LogProba_0` AS `LogProba_0`, `DT_node_data_1`.`Proba_1` AS `Proba_1`, `DT_node_data_1`.`LogProba_1` AS `LogProba_1`, `DT_node_data_1`.`Proba_2` AS `Proba_2`, `DT_node_data_1`.`LogProba_2` AS `LogProba_2`, `DT_node_data_1`.`Decision` AS `Decision`, `DT_node_data_1`.`DecisionProba` AS `DecisionProba` 
FROM `DT_node_lookup_1` LEFT OUTER JOIN `DT_node_data_1` ON `DT_node_lookup_1`.node_id_2 = `DT_node_data_1`.node_id), 
`BAG_Tree_1` AS 
(SELECT `DT_Output_1`.`KEY` AS `KEY`, NULL AS `Score_0`, `DT_Output_1`.`Proba_0` AS `Proba_0`, `DT_Output_1`.`LogProba_0` AS `LogProba_0`, NULL AS `Score_1`, `DT_Output_1`.`Proba_1` AS `Proba_1`, `DT_Output_1`.`LogProba_1` AS `LogProba_1`, NULL AS `Score_2`, `DT_Output_1`.`Proba_2` AS `Proba_2`, `DT_Output_1`.`LogProba_2` AS `LogProba_2` 
FROM `DT_Output_1`), 
`DT_node_lookup_2` AS 
(SELECT `ADS_sca_2_OUT`.`KEY` AS `KEY`, CASE WHEN (`ADS_sca_2_OUT`.scaler_output_5 <= -0.5082711577415466) THEN 1 ELSE CASE WHEN (`ADS_sca_2_OUT`.scaler_output_4 <= 0.8444518446922302) THEN 3 ELSE CASE WHEN (`ADS_sca_2_OUT`.scaler_output_3 <= -0.12075603008270264) THEN 5 ELSE CASE WHEN (`ADS_sca_2_OUT`.scaler_output_5 <= 0.9096440076828003) THEN 7 ELSE 8 END END END END AS node_id_2 
FROM `ADS_sca_2_OUT`), 
`DT_node_data_2` AS 
(SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Proba_0` AS `Proba_0`, `Values`.`LogProba_0` AS `LogProba_0`, `Values`.`Proba_1` AS `Proba_1`, `Values`.`LogProba_1` AS `LogProba_1`, `Values`.`Proba_2` AS `Proba_2`, `Values`.`LogProba_2` AS `LogProba_2`, `Values`.`Decision` AS `Decision`, `Values`.`DecisionProba` AS `DecisionProba` 
FROM (SELECT 0 AS node_id, 'scaler_output_5' AS feature, -0.5082711577415466 AS threshold, 20 AS count, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.4864864864864865 AS `Proba_0`, -0.720546154748 AS `LogProba_0`, 0.2972972972972973 AS `Proba_1`, -1.21302263985 AS `LogProba_1`, 0.21621621621621623 AS `Proba_2`, -1.53147637096 AS `LogProba_2`, 0 AS `Decision`, 0.486486486486 AS `DecisionProba` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 9 AS count, 1 AS depth, 0 AS parent_id, 1.0 AS `Proba_0`, 0.0 AS `LogProba_0`, 0.0 AS `Proba_1`, -1.79769313486231e+308 AS `LogProba_1`, 0.0 AS `Proba_2`, -1.79769313486231e+308 AS `LogProba_2`, 0 AS `Decision`, 1.0 AS `DecisionProba` UNION ALL SELECT 2 AS node_id, 'scaler_output_4' AS feature, 0.8444518446922302 AS threshold, 11 AS count, 1 AS depth, 0 AS parent_id, 0.0 AS `Proba_0`, -1.79769313486231e+308 AS `LogProba_0`, 0.5789473684210527 AS `Proba_1`, -0.546543706368 AS `LogProba_1`, 0.42105263157894735 AS `Proba_2`, -0.864997437487 AS `LogProba_2`, 1 AS `Decision`, 0.578947368421 AS `DecisionProba` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 5 AS count, 2 AS depth, 2 AS parent_id, 0.0 AS `Proba_0`, -1.79769313486231e+308 AS `LogProba_0`, 1.0 AS `Proba_1`, 0.0 AS `LogProba_1`, 0.0 AS `Proba_2`, -1.79769313486231e+308 AS `LogProba_2`, 1 AS `Decision`, 1.0 AS `DecisionProba` UNION ALL SELECT 4 AS node_id, 'scaler_output_3' AS feature, -0.12075603008270264 AS threshold, 6 AS count, 2 AS depth, 2 AS parent_id, 0.0 AS `Proba_0`, -1.79769313486231e+308 AS `LogProba_0`, 0.2 AS `Proba_1`, -1.60943791243 AS `LogProba_1`, 0.8 AS `Proba_2`, -0.223143551314 AS `LogProba_2`, 2 AS `Decision`, 0.8 AS `DecisionProba` UNION ALL SELECT 5 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 4 AS count, 3 AS depth, 4 AS parent_id, 0.0 AS `Proba_0`, -1.79769313486231e+308 AS `LogProba_0`, 0.0 AS `Proba_1`, -1.79769313486231e+308 AS `LogProba_1`, 1.0 AS `Proba_2`, 0.0 AS `LogProba_2`, 2 AS `Decision`, 1.0 AS `DecisionProba` UNION ALL SELECT 6 AS node_id, 'scaler_output_5' AS feature, 0.9096440076828003 AS threshold, 2 AS count, 3 AS depth, 4 AS parent_id, 0.0 AS `Proba_0`, -1.79769313486231e+308 AS `LogProba_0`, 0.5 AS `Proba_1`, -0.69314718056 AS `LogProba_1`, 0.5 AS `Proba_2`, -0.69314718056 AS `LogProba_2`, 1 AS `Decision`, 0.5 AS `DecisionProba` UNION ALL SELECT 7 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS count, 4 AS depth, 6 AS parent_id, 0.0 AS `Proba_0`, -1.79769313486231e+308 AS `LogProba_0`, 0.0 AS `Proba_1`, -1.79769313486231e+308 AS `LogProba_1`, 1.0 AS `Proba_2`, 0.0 AS `LogProba_2`, 2 AS `Decision`, 1.0 AS `DecisionProba` UNION ALL SELECT 8 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS count, 4 AS depth, 6 AS parent_id, 0.0 AS `Proba_0`, -1.79769313486231e+308 AS `LogProba_0`, 1.0 AS `Proba_1`, 0.0 AS `LogProba_1`, 0.0 AS `Proba_2`, -1.79769313486231e+308 AS `LogProba_2`, 1 AS `Decision`, 1.0 AS `DecisionProba`) AS `Values`), 
`DT_Output_2` AS 
(SELECT `DT_node_lookup_2`.`KEY` AS `KEY`, `DT_node_lookup_2`.node_id_2 AS node_id_2, `DT_node_data_2`.node_id AS node_id, `DT_node_data_2`.feature AS feature, `DT_node_data_2`.threshold AS threshold, `DT_node_data_2`.count AS count, `DT_node_data_2`.depth AS depth, `DT_node_data_2`.parent_id AS parent_id, `DT_node_data_2`.`Proba_0` AS `Proba_0`, `DT_node_data_2`.`LogProba_0` AS `LogProba_0`, `DT_node_data_2`.`Proba_1` AS `Proba_1`, `DT_node_data_2`.`LogProba_1` AS `LogProba_1`, `DT_node_data_2`.`Proba_2` AS `Proba_2`, `DT_node_data_2`.`LogProba_2` AS `LogProba_2`, `DT_node_data_2`.`Decision` AS `Decision`, `DT_node_data_2`.`DecisionProba` AS `DecisionProba` 
FROM `DT_node_lookup_2` LEFT OUTER JOIN `DT_node_data_2` ON `DT_node_lookup_2`.node_id_2 = `DT_node_data_2`.node_id), 
`BAG_Tree_2` AS 
(SELECT `DT_Output_2`.`KEY` AS `KEY`, NULL AS `Score_0`, `DT_Output_2`.`Proba_0` AS `Proba_0`, `DT_Output_2`.`LogProba_0` AS `LogProba_0`, NULL AS `Score_1`, `DT_Output_2`.`Proba_1` AS `Proba_1`, `DT_Output_2`.`LogProba_1` AS `LogProba_1`, NULL AS `Score_2`, `DT_Output_2`.`Proba_2` AS `Proba_2`, `DT_Output_2`.`LogProba_2` AS `LogProba_2` 
FROM `DT_Output_2`), 
`DT_node_lookup_3` AS 
(SELECT `ADS_sca_2_OUT`.`KEY` AS `KEY`, CASE WHEN (`ADS_sca_2_OUT`.scaler_output_4 <= -0.47080758213996887) THEN 1 ELSE CASE WHEN (`ADS_sca_2_OUT`.scaler_output_4 <= 0.8444518446922302) THEN 3 ELSE CASE WHEN (`ADS_sca_2_OUT`.scaler_output_3 <= -0.12075603008270264) THEN 5 ELSE CASE WHEN (`ADS_sca_2_OUT`.scaler_output_4 <= 1.0782756805419922) THEN 7 ELSE 8 END END END END AS node_id_2 
FROM `ADS_sca_2_OUT`), 
`DT_node_data_3` AS 
(SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Proba_0` AS `Proba_0`, `Values`.`LogProba_0` AS `LogProba_0`, `Values`.`Proba_1` AS `Proba_1`, `Values`.`LogProba_1` AS `LogProba_1`, `Values`.`Proba_2` AS `Proba_2`, `Values`.`LogProba_2` AS `LogProba_2`, `Values`.`Decision` AS `Decision`, `Values`.`DecisionProba` AS `DecisionProba` 
FROM (SELECT 0 AS node_id, 'scaler_output_4' AS feature, -0.47080758213996887 AS threshold, 31 AS count, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.43243243243243246 AS `Proba_0`, -0.838329190404 AS `LogProba_0`, 0.35135135135135137 AS `Proba_1`, -1.04596855518 AS `LogProba_1`, 0.21621621621621623 AS `Proba_2`, -1.53147637096 AS `LogProba_2`, 0 AS `Decision`, 0.432432432432 AS `DecisionProba` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 13 AS count, 1 AS depth, 0 AS parent_id, 1.0 AS `Proba_0`, 0.0 AS `LogProba_0`, 0.0 AS `Proba_1`, -1.79769313486231e+308 AS `LogProba_1`, 0.0 AS `Proba_2`, -1.79769313486231e+308 AS `LogProba_2`, 0 AS `Decision`, 1.0 AS `DecisionProba` UNION ALL SELECT 2 AS node_id, 'scaler_output_4' AS feature, 0.8444518446922302 AS threshold, 18 AS count, 1 AS depth, 0 AS parent_id, 0.0 AS `Proba_0`, -1.79769313486231e+308 AS `LogProba_0`, 0.6190476190476191 AS `Proba_1`, -0.479573080262 AS `LogProba_1`, 0.38095238095238093 AS `Proba_2`, -0.965080896044 AS `LogProba_2`, 1 AS `Decision`, 0.619047619048 AS `DecisionProba` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 10 AS count, 2 AS depth, 2 AS parent_id, 0.0 AS `Proba_0`, -1.79769313486231e+308 AS `LogProba_0`, 1.0 AS `Proba_1`, 0.0 AS `LogProba_1`, 0.0 AS `Proba_2`, -1.79769313486231e+308 AS `LogProba_2`, 1 AS `Decision`, 1.0 AS `DecisionProba` UNION ALL SELECT 4 AS node_id, 'scaler_output_3' AS feature, -0.12075603008270264 AS threshold, 8 AS count, 2 AS depth, 2 AS parent_id, 0.0 AS `Proba_0`, -1.79769313486231e+308 AS `LogProba_0`, 0.1111111111111111 AS `Proba_1`, -2.19722457734 AS `LogProba_1`, 0.8888888888888888 AS `Proba_2`, -0.117783035656 AS `LogProba_2`, 2 AS `Decision`, 0.888888888889 AS `DecisionProba` UNION ALL SELECT 5 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 5 AS count, 3 AS depth, 4 AS parent_id, 0.0 AS `Proba_0`, -1.79769313486231e+308 AS `LogProba_0`, 0.0 AS `Proba_1`, -1.79769313486231e+308 AS `LogProba_1`, 1.0 AS `Proba_2`, 0.0 AS `LogProba_2`, 2 AS `Decision`, 1.0 AS `DecisionProba` UNION ALL SELECT 6 AS node_id, 'scaler_output_4' AS feature, 1.0782756805419922 AS threshold, 3 AS count, 3 AS depth, 4 AS parent_id, 0.0 AS `Proba_0`, -1.79769313486231e+308 AS `LogProba_0`, 0.3333333333333333 AS `Proba_1`, -1.09861228867 AS `LogProba_1`, 0.6666666666666666 AS `Proba_2`, -0.405465108108 AS `LogProba_2`, 2 AS `Decision`, 0.666666666667 AS `DecisionProba` UNION ALL SELECT 7 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS count, 4 AS depth, 6 AS parent_id, 0.0 AS `Proba_0`, -1.79769313486231e+308 AS `LogProba_0`, 1.0 AS `Proba_1`, 0.0 AS `LogProba_1`, 0.0 AS `Proba_2`, -1.79769313486231e+308 AS `LogProba_2`, 1 AS `Decision`, 1.0 AS `DecisionProba` UNION ALL SELECT 8 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS count, 4 AS depth, 6 AS parent_id, 0.0 AS `Proba_0`, -1.79769313486231e+308 AS `LogProba_0`, 0.0 AS `Proba_1`, -1.79769313486231e+308 AS `LogProba_1`, 1.0 AS `Proba_2`, 0.0 AS `LogProba_2`, 2 AS `Decision`, 1.0 AS `DecisionProba`) AS `Values`), 
`DT_Output_3` AS 
(SELECT `DT_node_lookup_3`.`KEY` AS `KEY`, `DT_node_lookup_3`.node_id_2 AS node_id_2, `DT_node_data_3`.node_id AS node_id, `DT_node_data_3`.feature AS feature, `DT_node_data_3`.threshold AS threshold, `DT_node_data_3`.count AS count, `DT_node_data_3`.depth AS depth, `DT_node_data_3`.parent_id AS parent_id, `DT_node_data_3`.`Proba_0` AS `Proba_0`, `DT_node_data_3`.`LogProba_0` AS `LogProba_0`, `DT_node_data_3`.`Proba_1` AS `Proba_1`, `DT_node_data_3`.`LogProba_1` AS `LogProba_1`, `DT_node_data_3`.`Proba_2` AS `Proba_2`, `DT_node_data_3`.`LogProba_2` AS `LogProba_2`, `DT_node_data_3`.`Decision` AS `Decision`, `DT_node_data_3`.`DecisionProba` AS `DecisionProba` 
FROM `DT_node_lookup_3` LEFT OUTER JOIN `DT_node_data_3` ON `DT_node_lookup_3`.node_id_2 = `DT_node_data_3`.node_id), 
`BAG_Tree_3` AS 
(SELECT `DT_Output_3`.`KEY` AS `KEY`, NULL AS `Score_0`, `DT_Output_3`.`Proba_0` AS `Proba_0`, `DT_Output_3`.`LogProba_0` AS `LogProba_0`, NULL AS `Score_1`, `DT_Output_3`.`Proba_1` AS `Proba_1`, `DT_Output_3`.`LogProba_1` AS `LogProba_1`, NULL AS `Score_2`, `DT_Output_3`.`Proba_2` AS `Proba_2`, `DT_Output_3`.`LogProba_2` AS `LogProba_2` 
FROM `DT_Output_3`), 
`DT_node_lookup_4` AS 
(SELECT `ADS_sca_2_OUT`.`KEY` AS `KEY`, CASE WHEN (`ADS_sca_2_OUT`.scaler_output_5 <= -0.5082711577415466) THEN 1 ELSE CASE WHEN (`ADS_sca_2_OUT`.scaler_output_4 <= 0.8444518446922302) THEN 3 ELSE CASE WHEN (`ADS_sca_2_OUT`.scaler_output_5 <= 1.0588982105255127) THEN CASE WHEN (`ADS_sca_2_OUT`.scaler_output_3 <= -0.848100483417511) THEN 6 ELSE 7 END ELSE 8 END END END AS node_id_2 
FROM `ADS_sca_2_OUT`), 
`DT_node_data_4` AS 
(SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Proba_0` AS `Proba_0`, `Values`.`LogProba_0` AS `LogProba_0`, `Values`.`Proba_1` AS `Proba_1`, `Values`.`LogProba_1` AS `LogProba_1`, `Values`.`Proba_2` AS `Proba_2`, `Values`.`LogProba_2` AS `LogProba_2`, `Values`.`Decision` AS `Decision`, `Values`.`DecisionProba` AS `DecisionProba` 
FROM (SELECT 0 AS node_id, 'scaler_output_5' AS feature, -0.5082711577415466 AS threshold, 25 AS count, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.24324324324324326 AS `Proba_0`, -1.41369333531 AS `LogProba_0`, 0.4864864864864865 AS `Proba_1`, -0.720546154748 AS `LogProba_1`, 0.2702702702702703 AS `Proba_2`, -1.30833281965 AS `LogProba_2`, 1 AS `Decision`, 0.486486486486 AS `DecisionProba` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 8 AS count, 1 AS depth, 0 AS parent_id, 1.0 AS `Proba_0`, 0.0 AS `LogProba_0`, 0.0 AS `Proba_1`, -1.79769313486231e+308 AS `LogProba_1`, 0.0 AS `Proba_2`, -1.79769313486231e+308 AS `LogProba_2`, 0 AS `Decision`, 1.0 AS `DecisionProba` UNION ALL SELECT 2 AS node_id, 'scaler_output_4' AS feature, 0.8444518446922302 AS threshold, 17 AS count, 1 AS depth, 0 AS parent_id, 0.0 AS `Proba_0`, -1.79769313486231e+308 AS `LogProba_0`, 0.6428571428571429 AS `Proba_1`, -0.441832752279 AS `LogProba_1`, 0.35714285714285715 AS `Proba_2`, -1.02961941718 AS `LogProba_2`, 1 AS `Decision`, 0.642857142857 AS `DecisionProba` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 11 AS count, 2 AS depth, 2 AS parent_id, 0.0 AS `Proba_0`, -1.79769313486231e+308 AS `LogProba_0`, 1.0 AS `Proba_1`, 0.0 AS `LogProba_1`, 0.0 AS `Proba_2`, -1.79769313486231e+308 AS `LogProba_2`, 1 AS `Decision`, 1.0 AS `DecisionProba` UNION ALL SELECT 4 AS node_id, 'scaler_output_5' AS feature, 1.0588982105255127 AS threshold, 6 AS count, 2 AS depth, 2 AS parent_id, 0.0 AS `Proba_0`, -1.79769313486231e+308 AS `LogProba_0`, 0.16666666666666666 AS `Proba_1`, -1.79175946923 AS `LogProba_1`, 0.8333333333333334 AS `Proba_2`, -0.182321556794 AS `LogProba_2`, 2 AS `Decision`, 0.833333333333 AS `DecisionProba` UNION ALL SELECT 5 AS node_id, 'scaler_output_3' AS feature, -0.848100483417511 AS threshold, 2 AS count, 3 AS depth, 4 AS parent_id, 0.0 AS `Proba_0`, -1.79769313486231e+308 AS `LogProba_0`, 0.5 AS `Proba_1`, -0.69314718056 AS `LogProba_1`, 0.5 AS `Proba_2`, -0.69314718056 AS `LogProba_2`, 1 AS `Decision`, 0.5 AS `DecisionProba` UNION ALL SELECT 6 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS count, 4 AS depth, 5 AS parent_id, 0.0 AS `Proba_0`, -1.79769313486231e+308 AS `LogProba_0`, 0.0 AS `Proba_1`, -1.79769313486231e+308 AS `LogProba_1`, 1.0 AS `Proba_2`, 0.0 AS `LogProba_2`, 2 AS `Decision`, 1.0 AS `DecisionProba` UNION ALL SELECT 7 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS count, 4 AS depth, 5 AS parent_id, 0.0 AS `Proba_0`, -1.79769313486231e+308 AS `LogProba_0`, 1.0 AS `Proba_1`, 0.0 AS `LogProba_1`, 0.0 AS `Proba_2`, -1.79769313486231e+308 AS `LogProba_2`, 1 AS `Decision`, 1.0 AS `DecisionProba` UNION ALL SELECT 8 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 4 AS count, 3 AS depth, 4 AS parent_id, 0.0 AS `Proba_0`, -1.79769313486231e+308 AS `LogProba_0`, 0.0 AS `Proba_1`, -1.79769313486231e+308 AS `LogProba_1`, 1.0 AS `Proba_2`, 0.0 AS `LogProba_2`, 2 AS `Decision`, 1.0 AS `DecisionProba`) AS `Values`), 
`DT_Output_4` AS 
(SELECT `DT_node_lookup_4`.`KEY` AS `KEY`, `DT_node_lookup_4`.node_id_2 AS node_id_2, `DT_node_data_4`.node_id AS node_id, `DT_node_data_4`.feature AS feature, `DT_node_data_4`.threshold AS threshold, `DT_node_data_4`.count AS count, `DT_node_data_4`.depth AS depth, `DT_node_data_4`.parent_id AS parent_id, `DT_node_data_4`.`Proba_0` AS `Proba_0`, `DT_node_data_4`.`LogProba_0` AS `LogProba_0`, `DT_node_data_4`.`Proba_1` AS `Proba_1`, `DT_node_data_4`.`LogProba_1` AS `LogProba_1`, `DT_node_data_4`.`Proba_2` AS `Proba_2`, `DT_node_data_4`.`LogProba_2` AS `LogProba_2`, `DT_node_data_4`.`Decision` AS `Decision`, `DT_node_data_4`.`DecisionProba` AS `DecisionProba` 
FROM `DT_node_lookup_4` LEFT OUTER JOIN `DT_node_data_4` ON `DT_node_lookup_4`.node_id_2 = `DT_node_data_4`.node_id), 
`BAG_Tree_4` AS 
(SELECT `DT_Output_4`.`KEY` AS `KEY`, NULL AS `Score_0`, `DT_Output_4`.`Proba_0` AS `Proba_0`, `DT_Output_4`.`LogProba_0` AS `LogProba_0`, NULL AS `Score_1`, `DT_Output_4`.`Proba_1` AS `Proba_1`, `DT_Output_4`.`LogProba_1` AS `LogProba_1`, NULL AS `Score_2`, `DT_Output_4`.`Proba_2` AS `Proba_2`, `DT_Output_4`.`LogProba_2` AS `LogProba_2` 
FROM `DT_Output_4`), 
`DT_node_lookup_5` AS 
(SELECT `ADS_sca_2_OUT`.`KEY` AS `KEY`, CASE WHEN (`ADS_sca_2_OUT`.scaler_output_4 <= -0.5584915280342102) THEN 1 ELSE CASE WHEN (`ADS_sca_2_OUT`.scaler_output_4 <= 0.8444518446922302) THEN 3 ELSE CASE WHEN (`ADS_sca_2_OUT`.scaler_output_5 <= 1.0588982105255127) THEN CASE WHEN (`ADS_sca_2_OUT`.scaler_output_2 <= 1.4048185348510742) THEN 6 ELSE 7 END ELSE 8 END END END AS node_id_2 
FROM `ADS_sca_2_OUT`), 
`DT_node_data_5` AS 
(SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Proba_0` AS `Proba_0`, `Values`.`LogProba_0` AS `LogProba_0`, `Values`.`Proba_1` AS `Proba_1`, `Values`.`LogProba_1` AS `LogProba_1`, `Values`.`Proba_2` AS `Proba_2`, `Values`.`LogProba_2` AS `LogProba_2`, `Values`.`Decision` AS `Decision`, `Values`.`DecisionProba` AS `DecisionProba` 
FROM (SELECT 0 AS node_id, 'scaler_output_4' AS feature, -0.5584915280342102 AS threshold, 22 AS count, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.24324324324324326 AS `Proba_0`, -1.41369333531 AS `LogProba_0`, 0.4864864864864865 AS `Proba_1`, -0.720546154748 AS `LogProba_1`, 0.2702702702702703 AS `Proba_2`, -1.30833281965 AS `LogProba_2`, 1 AS `Decision`, 0.486486486486 AS `DecisionProba` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 7 AS count, 1 AS depth, 0 AS parent_id, 1.0 AS `Proba_0`, 0.0 AS `LogProba_0`, 0.0 AS `Proba_1`, -1.79769313486231e+308 AS `LogProba_1`, 0.0 AS `Proba_2`, -1.79769313486231e+308 AS `LogProba_2`, 0 AS `Decision`, 1.0 AS `DecisionProba` UNION ALL SELECT 2 AS node_id, 'scaler_output_4' AS feature, 0.8444518446922302 AS threshold, 15 AS count, 1 AS depth, 0 AS parent_id, 0.0 AS `Proba_0`, -1.79769313486231e+308 AS `LogProba_0`, 0.6428571428571429 AS `Proba_1`, -0.441832752279 AS `LogProba_1`, 0.35714285714285715 AS `Proba_2`, -1.02961941718 AS `LogProba_2`, 1 AS `Decision`, 0.642857142857 AS `DecisionProba` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 9 AS count, 2 AS depth, 2 AS parent_id, 0.0 AS `Proba_0`, -1.79769313486231e+308 AS `LogProba_0`, 1.0 AS `Proba_1`, 0.0 AS `LogProba_1`, 0.0 AS `Proba_2`, -1.79769313486231e+308 AS `LogProba_2`, 1 AS `Decision`, 1.0 AS `DecisionProba` UNION ALL SELECT 4 AS node_id, 'scaler_output_5' AS feature, 1.0588982105255127 AS threshold, 6 AS count, 2 AS depth, 2 AS parent_id, 0.0 AS `Proba_0`, -1.79769313486231e+308 AS `LogProba_0`, 0.16666666666666666 AS `Proba_1`, -1.79175946923 AS `LogProba_1`, 0.8333333333333334 AS `Proba_2`, -0.182321556794 AS `LogProba_2`, 2 AS `Decision`, 0.833333333333 AS `DecisionProba` UNION ALL SELECT 5 AS node_id, 'scaler_output_2' AS feature, 1.4048185348510742 AS threshold, 2 AS count, 3 AS depth, 4 AS parent_id, 0.0 AS `Proba_0`, -1.79769313486231e+308 AS `LogProba_0`, 0.5 AS `Proba_1`, -0.69314718056 AS `LogProba_1`, 0.5 AS `Proba_2`, -0.69314718056 AS `LogProba_2`, 1 AS `Decision`, 0.5 AS `DecisionProba` UNION ALL SELECT 6 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS count, 4 AS depth, 5 AS parent_id, 0.0 AS `Proba_0`, -1.79769313486231e+308 AS `LogProba_0`, 1.0 AS `Proba_1`, 0.0 AS `LogProba_1`, 0.0 AS `Proba_2`, -1.79769313486231e+308 AS `LogProba_2`, 1 AS `Decision`, 1.0 AS `DecisionProba` UNION ALL SELECT 7 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS count, 4 AS depth, 5 AS parent_id, 0.0 AS `Proba_0`, -1.79769313486231e+308 AS `LogProba_0`, 0.0 AS `Proba_1`, -1.79769313486231e+308 AS `LogProba_1`, 1.0 AS `Proba_2`, 0.0 AS `LogProba_2`, 2 AS `Decision`, 1.0 AS `DecisionProba` UNION ALL SELECT 8 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 4 AS count, 3 AS depth, 4 AS parent_id, 0.0 AS `Proba_0`, -1.79769313486231e+308 AS `LogProba_0`, 0.0 AS `Proba_1`, -1.79769313486231e+308 AS `LogProba_1`, 1.0 AS `Proba_2`, 0.0 AS `LogProba_2`, 2 AS `Decision`, 1.0 AS `DecisionProba`) AS `Values`), 
`DT_Output_5` AS 
(SELECT `DT_node_lookup_5`.`KEY` AS `KEY`, `DT_node_lookup_5`.node_id_2 AS node_id_2, `DT_node_data_5`.node_id AS node_id, `DT_node_data_5`.feature AS feature, `DT_node_data_5`.threshold AS threshold, `DT_node_data_5`.count AS count, `DT_node_data_5`.depth AS depth, `DT_node_data_5`.parent_id AS parent_id, `DT_node_data_5`.`Proba_0` AS `Proba_0`, `DT_node_data_5`.`LogProba_0` AS `LogProba_0`, `DT_node_data_5`.`Proba_1` AS `Proba_1`, `DT_node_data_5`.`LogProba_1` AS `LogProba_1`, `DT_node_data_5`.`Proba_2` AS `Proba_2`, `DT_node_data_5`.`LogProba_2` AS `LogProba_2`, `DT_node_data_5`.`Decision` AS `Decision`, `DT_node_data_5`.`DecisionProba` AS `DecisionProba` 
FROM `DT_node_lookup_5` LEFT OUTER JOIN `DT_node_data_5` ON `DT_node_lookup_5`.node_id_2 = `DT_node_data_5`.node_id), 
`BAG_Tree_5` AS 
(SELECT `DT_Output_5`.`KEY` AS `KEY`, NULL AS `Score_0`, `DT_Output_5`.`Proba_0` AS `Proba_0`, `DT_Output_5`.`LogProba_0` AS `LogProba_0`, NULL AS `Score_1`, `DT_Output_5`.`Proba_1` AS `Proba_1`, `DT_Output_5`.`LogProba_1` AS `LogProba_1`, NULL AS `Score_2`, `DT_Output_5`.`Proba_2` AS `Proba_2`, `DT_Output_5`.`LogProba_2` AS `LogProba_2` 
FROM `DT_Output_5`), 
`DT_node_lookup_6` AS 
(SELECT `ADS_sca_2_OUT`.`KEY` AS `KEY`, CASE WHEN (`ADS_sca_2_OUT`.scaler_output_4 <= -0.47080758213996887) THEN 1 ELSE CASE WHEN (`ADS_sca_2_OUT`.scaler_output_4 <= 0.9613637924194336) THEN 3 ELSE 4 END END AS node_id_2 
FROM `ADS_sca_2_OUT`), 
`DT_node_data_6` AS 
(SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Proba_0` AS `Proba_0`, `Values`.`LogProba_0` AS `LogProba_0`, `Values`.`Proba_1` AS `Proba_1`, `Values`.`LogProba_1` AS `LogProba_1`, `Values`.`Proba_2` AS `Proba_2`, `Values`.`LogProba_2` AS `LogProba_2`, `Values`.`Decision` AS `Decision`, `Values`.`DecisionProba` AS `DecisionProba` 
FROM (SELECT 0 AS node_id, 'scaler_output_4' AS feature, -0.47080758213996887 AS threshold, 26 AS count, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.32432432432432434 AS `Proba_0`, -1.12601126286 AS `LogProba_0`, 0.5675675675675675 AS `Proba_1`, -0.566395474921 AS `LogProba_1`, 0.10810810810810811 AS `Proba_2`, -2.22462355152 AS `LogProba_2`, 1 AS `Decision`, 0.567567567568 AS `DecisionProba` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 10 AS count, 1 AS depth, 0 AS parent_id, 1.0 AS `Proba_0`, 0.0 AS `LogProba_0`, 0.0 AS `Proba_1`, -1.79769313486231e+308 AS `LogProba_1`, 0.0 AS `Proba_2`, -1.79769313486231e+308 AS `LogProba_2`, 0 AS `Decision`, 1.0 AS `DecisionProba` UNION ALL SELECT 2 AS node_id, 'scaler_output_4' AS feature, 0.9613637924194336 AS threshold, 16 AS count, 1 AS depth, 0 AS parent_id, 0.0 AS `Proba_0`, -1.79769313486231e+308 AS `LogProba_0`, 0.84 AS `Proba_1`, -0.174353387145 AS `LogProba_1`, 0.16 AS `Proba_2`, -1.83258146375 AS `LogProba_2`, 1 AS `Decision`, 0.84 AS `DecisionProba` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 12 AS count, 2 AS depth, 2 AS parent_id, 0.0 AS `Proba_0`, -1.79769313486231e+308 AS `LogProba_0`, 1.0 AS `Proba_1`, 0.0 AS `LogProba_1`, 0.0 AS `Proba_2`, -1.79769313486231e+308 AS `LogProba_2`, 1 AS `Decision`, 1.0 AS `DecisionProba` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 4 AS count, 2 AS depth, 2 AS parent_id, 0.0 AS `Proba_0`, -1.79769313486231e+308 AS `LogProba_0`, 0.0 AS `Proba_1`, -1.79769313486231e+308 AS `LogProba_1`, 1.0 AS `Proba_2`, 0.0 AS `LogProba_2`, 2 AS `Decision`, 1.0 AS `DecisionProba`) AS `Values`), 
`DT_Output_6` AS 
(SELECT `DT_node_lookup_6`.`KEY` AS `KEY`, `DT_node_lookup_6`.node_id_2 AS node_id_2, `DT_node_data_6`.node_id AS node_id, `DT_node_data_6`.feature AS feature, `DT_node_data_6`.threshold AS threshold, `DT_node_data_6`.count AS count, `DT_node_data_6`.depth AS depth, `DT_node_data_6`.parent_id AS parent_id, `DT_node_data_6`.`Proba_0` AS `Proba_0`, `DT_node_data_6`.`LogProba_0` AS `LogProba_0`, `DT_node_data_6`.`Proba_1` AS `Proba_1`, `DT_node_data_6`.`LogProba_1` AS `LogProba_1`, `DT_node_data_6`.`Proba_2` AS `Proba_2`, `DT_node_data_6`.`LogProba_2` AS `LogProba_2`, `DT_node_data_6`.`Decision` AS `Decision`, `DT_node_data_6`.`DecisionProba` AS `DecisionProba` 
FROM `DT_node_lookup_6` LEFT OUTER JOIN `DT_node_data_6` ON `DT_node_lookup_6`.node_id_2 = `DT_node_data_6`.node_id), 
`BAG_Tree_6` AS 
(SELECT `DT_Output_6`.`KEY` AS `KEY`, NULL AS `Score_0`, `DT_Output_6`.`Proba_0` AS `Proba_0`, `DT_Output_6`.`LogProba_0` AS `LogProba_0`, NULL AS `Score_1`, `DT_Output_6`.`Proba_1` AS `Proba_1`, `DT_Output_6`.`LogProba_1` AS `LogProba_1`, NULL AS `Score_2`, `DT_Output_6`.`Proba_2` AS `Proba_2`, `DT_Output_6`.`LogProba_2` AS `LogProba_2` 
FROM `DT_Output_6`), 
`DT_node_lookup_7` AS 
(SELECT `ADS_sca_2_OUT`.`KEY` AS `KEY`, CASE WHEN (`ADS_sca_2_OUT`.scaler_output_5 <= -0.5082711577415466) THEN 1 ELSE CASE WHEN (`ADS_sca_2_OUT`.scaler_output_4 <= 0.8444518446922302) THEN 3 ELSE CASE WHEN (`ADS_sca_2_OUT`.scaler_output_4 <= 0.9613637924194336) THEN CASE WHEN (`ADS_sca_2_OUT`.scaler_output_5 <= 1.1335253715515137) THEN 6 ELSE 7 END ELSE 8 END END END AS node_id_2 
FROM `ADS_sca_2_OUT`), 
`DT_node_data_7` AS 
(SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Proba_0` AS `Proba_0`, `Values`.`LogProba_0` AS `LogProba_0`, `Values`.`Proba_1` AS `Proba_1`, `Values`.`LogProba_1` AS `LogProba_1`, `Values`.`Proba_2` AS `Proba_2`, `Values`.`LogProba_2` AS `LogProba_2`, `Values`.`Decision` AS `Decision`, `Values`.`DecisionProba` AS `DecisionProba` 
FROM (SELECT 0 AS node_id, 'scaler_output_5' AS feature, -0.5082711577415466 AS threshold, 25 AS count, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.35135135135135137 AS `Proba_0`, -1.04596855518 AS `LogProba_0`, 0.5135135135135135 AS `Proba_1`, -0.666478933478 AS `LogProba_1`, 0.13513513513513514 AS `Proba_2`, -2.00148000021 AS `LogProba_2`, 1 AS `Decision`, 0.513513513514 AS `DecisionProba` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 8 AS count, 1 AS depth, 0 AS parent_id, 1.0 AS `Proba_0`, 0.0 AS `LogProba_0`, 0.0 AS `Proba_1`, -1.79769313486231e+308 AS `LogProba_1`, 0.0 AS `Proba_2`, -1.79769313486231e+308 AS `LogProba_2`, 0 AS `Decision`, 1.0 AS `DecisionProba` UNION ALL SELECT 2 AS node_id, 'scaler_output_4' AS feature, 0.8444518446922302 AS threshold, 17 AS count, 1 AS depth, 0 AS parent_id, 0.0 AS `Proba_0`, -1.79769313486231e+308 AS `LogProba_0`, 0.7916666666666666 AS `Proba_1`, -0.233614851182 AS `LogProba_1`, 0.20833333333333334 AS `Proba_2`, -1.56861591791 AS `LogProba_2`, 1 AS `Decision`, 0.791666666667 AS `DecisionProba` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 11 AS count, 2 AS depth, 2 AS parent_id, 0.0 AS `Proba_0`, -1.79769313486231e+308 AS `LogProba_0`, 1.0 AS `Proba_1`, 0.0 AS `LogProba_1`, 0.0 AS `Proba_2`, -1.79769313486231e+308 AS `LogProba_2`, 1 AS `Decision`, 1.0 AS `DecisionProba` UNION ALL SELECT 4 AS node_id, 'scaler_output_4' AS feature, 0.9613637924194336 AS threshold, 6 AS count, 2 AS depth, 2 AS parent_id, 0.0 AS `Proba_0`, -1.79769313486231e+308 AS `LogProba_0`, 0.16666666666666666 AS `Proba_1`, -1.79175946923 AS `LogProba_1`, 0.8333333333333334 AS `Proba_2`, -0.182321556794 AS `LogProba_2`, 2 AS `Decision`, 0.833333333333 AS `DecisionProba` UNION ALL SELECT 5 AS node_id, 'scaler_output_5' AS feature, 1.1335253715515137 AS threshold, 2 AS count, 3 AS depth, 4 AS parent_id, 0.0 AS `Proba_0`, -1.79769313486231e+308 AS `LogProba_0`, 0.5 AS `Proba_1`, -0.69314718056 AS `LogProba_1`, 0.5 AS `Proba_2`, -0.69314718056 AS `LogProba_2`, 1 AS `Decision`, 0.5 AS `DecisionProba` UNION ALL SELECT 6 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS count, 4 AS depth, 5 AS parent_id, 0.0 AS `Proba_0`, -1.79769313486231e+308 AS `LogProba_0`, 1.0 AS `Proba_1`, 0.0 AS `LogProba_1`, 0.0 AS `Proba_2`, -1.79769313486231e+308 AS `LogProba_2`, 1 AS `Decision`, 1.0 AS `DecisionProba` UNION ALL SELECT 7 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS count, 4 AS depth, 5 AS parent_id, 0.0 AS `Proba_0`, -1.79769313486231e+308 AS `LogProba_0`, 0.0 AS `Proba_1`, -1.79769313486231e+308 AS `LogProba_1`, 1.0 AS `Proba_2`, 0.0 AS `LogProba_2`, 2 AS `Decision`, 1.0 AS `DecisionProba` UNION ALL SELECT 8 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 4 AS count, 3 AS depth, 4 AS parent_id, 0.0 AS `Proba_0`, -1.79769313486231e+308 AS `LogProba_0`, 0.0 AS `Proba_1`, -1.79769313486231e+308 AS `LogProba_1`, 1.0 AS `Proba_2`, 0.0 AS `LogProba_2`, 2 AS `Decision`, 1.0 AS `DecisionProba`) AS `Values`), 
`DT_Output_7` AS 
(SELECT `DT_node_lookup_7`.`KEY` AS `KEY`, `DT_node_lookup_7`.node_id_2 AS node_id_2, `DT_node_data_7`.node_id AS node_id, `DT_node_data_7`.feature AS feature, `DT_node_data_7`.threshold AS threshold, `DT_node_data_7`.count AS count, `DT_node_data_7`.depth AS depth, `DT_node_data_7`.parent_id AS parent_id, `DT_node_data_7`.`Proba_0` AS `Proba_0`, `DT_node_data_7`.`LogProba_0` AS `LogProba_0`, `DT_node_data_7`.`Proba_1` AS `Proba_1`, `DT_node_data_7`.`LogProba_1` AS `LogProba_1`, `DT_node_data_7`.`Proba_2` AS `Proba_2`, `DT_node_data_7`.`LogProba_2` AS `LogProba_2`, `DT_node_data_7`.`Decision` AS `Decision`, `DT_node_data_7`.`DecisionProba` AS `DecisionProba` 
FROM `DT_node_lookup_7` LEFT OUTER JOIN `DT_node_data_7` ON `DT_node_lookup_7`.node_id_2 = `DT_node_data_7`.node_id), 
`BAG_Tree_7` AS 
(SELECT `DT_Output_7`.`KEY` AS `KEY`, NULL AS `Score_0`, `DT_Output_7`.`Proba_0` AS `Proba_0`, `DT_Output_7`.`LogProba_0` AS `LogProba_0`, NULL AS `Score_1`, `DT_Output_7`.`Proba_1` AS `Proba_1`, `DT_Output_7`.`LogProba_1` AS `LogProba_1`, NULL AS `Score_2`, `DT_Output_7`.`Proba_2` AS `Proba_2`, `DT_Output_7`.`LogProba_2` AS `LogProba_2` 
FROM `DT_Output_7`), 
`DT_node_lookup_8` AS 
(SELECT `ADS_sca_2_OUT`.`KEY` AS `KEY`, CASE WHEN (`ADS_sca_2_OUT`.scaler_output_4 <= -0.47080758213996887) THEN 1 ELSE CASE WHEN (`ADS_sca_2_OUT`.scaler_output_4 <= 0.8444518446922302) THEN 3 ELSE CASE WHEN (`ADS_sca_2_OUT`.scaler_output_3 <= -0.12075603008270264) THEN 5 ELSE CASE WHEN (`ADS_sca_2_OUT`.scaler_output_2 <= 1.232133150100708) THEN 7 ELSE 8 END END END END AS node_id_2 
FROM `ADS_sca_2_OUT`), 
`DT_node_data_8` AS 
(SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Proba_0` AS `Proba_0`, `Values`.`LogProba_0` AS `LogProba_0`, `Values`.`Proba_1` AS `Proba_1`, `Values`.`LogProba_1` AS `LogProba_1`, `Values`.`Proba_2` AS `Proba_2`, `Values`.`LogProba_2` AS `LogProba_2`, `Values`.`Decision` AS `Decision`, `Values`.`DecisionProba` AS `DecisionProba` 
FROM (SELECT 0 AS node_id, 'scaler_output_4' AS feature, -0.47080758213996887 AS threshold, 25 AS count, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.2702702702702703 AS `Proba_0`, -1.30833281965 AS `LogProba_0`, 0.5405405405405406 AS `Proba_1`, -0.61518563909 AS `LogProba_1`, 0.1891891891891892 AS `Proba_2`, -1.66500776359 AS `LogProba_2`, 1 AS `Decision`, 0.540540540541 AS `DecisionProba` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 7 AS count, 1 AS depth, 0 AS parent_id, 1.0 AS `Proba_0`, 0.0 AS `LogProba_0`, 0.0 AS `Proba_1`, -1.79769313486231e+308 AS `LogProba_1`, 0.0 AS `Proba_2`, -1.79769313486231e+308 AS `LogProba_2`, 0 AS `Decision`, 1.0 AS `DecisionProba` UNION ALL SELECT 2 AS node_id, 'scaler_output_4' AS feature, 0.8444518446922302 AS threshold, 18 AS count, 1 AS depth, 0 AS parent_id, 0.0 AS `Proba_0`, -1.79769313486231e+308 AS `LogProba_0`, 0.7407407407407407 AS `Proba_1`, -0.30010459245 AS `LogProba_1`, 0.25925925925925924 AS `Proba_2`, -1.34992671695 AS `LogProba_2`, 1 AS `Decision`, 0.740740740741 AS `DecisionProba` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 11 AS count, 2 AS depth, 2 AS parent_id, 0.0 AS `Proba_0`, -1.79769313486231e+308 AS `LogProba_0`, 1.0 AS `Proba_1`, 0.0 AS `LogProba_1`, 0.0 AS `Proba_2`, -1.79769313486231e+308 AS `LogProba_2`, 1 AS `Decision`, 1.0 AS `DecisionProba` UNION ALL SELECT 4 AS node_id, 'scaler_output_3' AS feature, -0.12075603008270264 AS threshold, 7 AS count, 2 AS depth, 2 AS parent_id, 0.0 AS `Proba_0`, -1.79769313486231e+308 AS `LogProba_0`, 0.125 AS `Proba_1`, -2.07944154168 AS `LogProba_1`, 0.875 AS `Proba_2`, -0.133531392625 AS `LogProba_2`, 2 AS `Decision`, 0.875 AS `DecisionProba` UNION ALL SELECT 5 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 4 AS count, 3 AS depth, 4 AS parent_id, 0.0 AS `Proba_0`, -1.79769313486231e+308 AS `LogProba_0`, 0.0 AS `Proba_1`, -1.79769313486231e+308 AS `LogProba_1`, 1.0 AS `Proba_2`, 0.0 AS `LogProba_2`, 2 AS `Decision`, 1.0 AS `DecisionProba` UNION ALL SELECT 6 AS node_id, 'scaler_output_2' AS feature, 1.232133150100708 AS threshold, 3 AS count, 3 AS depth, 4 AS parent_id, 0.0 AS `Proba_0`, -1.79769313486231e+308 AS `LogProba_0`, 0.3333333333333333 AS `Proba_1`, -1.09861228867 AS `LogProba_1`, 0.6666666666666666 AS `Proba_2`, -0.405465108108 AS `LogProba_2`, 2 AS `Decision`, 0.666666666667 AS `DecisionProba` UNION ALL SELECT 7 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS count, 4 AS depth, 6 AS parent_id, 0.0 AS `Proba_0`, -1.79769313486231e+308 AS `LogProba_0`, 1.0 AS `Proba_1`, 0.0 AS `LogProba_1`, 0.0 AS `Proba_2`, -1.79769313486231e+308 AS `LogProba_2`, 1 AS `Decision`, 1.0 AS `DecisionProba` UNION ALL SELECT 8 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS count, 4 AS depth, 6 AS parent_id, 0.0 AS `Proba_0`, -1.79769313486231e+308 AS `LogProba_0`, 0.0 AS `Proba_1`, -1.79769313486231e+308 AS `LogProba_1`, 1.0 AS `Proba_2`, 0.0 AS `LogProba_2`, 2 AS `Decision`, 1.0 AS `DecisionProba`) AS `Values`), 
`DT_Output_8` AS 
(SELECT `DT_node_lookup_8`.`KEY` AS `KEY`, `DT_node_lookup_8`.node_id_2 AS node_id_2, `DT_node_data_8`.node_id AS node_id, `DT_node_data_8`.feature AS feature, `DT_node_data_8`.threshold AS threshold, `DT_node_data_8`.count AS count, `DT_node_data_8`.depth AS depth, `DT_node_data_8`.parent_id AS parent_id, `DT_node_data_8`.`Proba_0` AS `Proba_0`, `DT_node_data_8`.`LogProba_0` AS `LogProba_0`, `DT_node_data_8`.`Proba_1` AS `Proba_1`, `DT_node_data_8`.`LogProba_1` AS `LogProba_1`, `DT_node_data_8`.`Proba_2` AS `Proba_2`, `DT_node_data_8`.`LogProba_2` AS `LogProba_2`, `DT_node_data_8`.`Decision` AS `Decision`, `DT_node_data_8`.`DecisionProba` AS `DecisionProba` 
FROM `DT_node_lookup_8` LEFT OUTER JOIN `DT_node_data_8` ON `DT_node_lookup_8`.node_id_2 = `DT_node_data_8`.node_id), 
`BAG_Tree_8` AS 
(SELECT `DT_Output_8`.`KEY` AS `KEY`, NULL AS `Score_0`, `DT_Output_8`.`Proba_0` AS `Proba_0`, `DT_Output_8`.`LogProba_0` AS `LogProba_0`, NULL AS `Score_1`, `DT_Output_8`.`Proba_1` AS `Proba_1`, `DT_Output_8`.`LogProba_1` AS `LogProba_1`, NULL AS `Score_2`, `DT_Output_8`.`Proba_2` AS `Proba_2`, `DT_Output_8`.`LogProba_2` AS `LogProba_2` 
FROM `DT_Output_8`), 
`DT_node_lookup_9` AS 
(SELECT `ADS_sca_2_OUT`.`KEY` AS `KEY`, CASE WHEN (`ADS_sca_2_OUT`.scaler_output_4 <= -0.5292635560035706) THEN 1 ELSE CASE WHEN (`ADS_sca_2_OUT`.scaler_output_4 <= 0.8444518446922302) THEN 3 ELSE 4 END END AS node_id_2 
FROM `ADS_sca_2_OUT`), 
`DT_node_data_9` AS 
(SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Proba_0` AS `Proba_0`, `Values`.`LogProba_0` AS `LogProba_0`, `Values`.`Proba_1` AS `Proba_1`, `Values`.`LogProba_1` AS `LogProba_1`, `Values`.`Proba_2` AS `Proba_2`, `Values`.`LogProba_2` AS `LogProba_2`, `Values`.`Decision` AS `Decision`, `Values`.`DecisionProba` AS `DecisionProba` 
FROM (SELECT 0 AS node_id, 'scaler_output_4' AS feature, -0.5292635560035706 AS threshold, 25 AS count, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.40540540540540543 AS `Proba_0`, -0.902867711542 AS `LogProba_0`, 0.40540540540540543 AS `Proba_1`, -0.902867711542 AS `LogProba_1`, 0.1891891891891892 AS `Proba_2`, -1.66500776359 AS `LogProba_2`, 0 AS `Decision`, 0.405405405405 AS `DecisionProba` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 10 AS count, 1 AS depth, 0 AS parent_id, 1.0 AS `Proba_0`, 0.0 AS `LogProba_0`, 0.0 AS `Proba_1`, -1.79769313486231e+308 AS `LogProba_1`, 0.0 AS `Proba_2`, -1.79769313486231e+308 AS `LogProba_2`, 0 AS `Decision`, 1.0 AS `DecisionProba` UNION ALL SELECT 2 AS node_id, 'scaler_output_4' AS feature, 0.8444518446922302 AS threshold, 15 AS count, 1 AS depth, 0 AS parent_id, 0.0 AS `Proba_0`, -1.79769313486231e+308 AS `LogProba_0`, 0.6818181818181818 AS `Proba_1`, -0.382992252256 AS `LogProba_1`, 0.3181818181818182 AS `Proba_2`, -1.1451323043 AS `LogProba_2`, 1 AS `Decision`, 0.681818181818 AS `DecisionProba` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 11 AS count, 2 AS depth, 2 AS parent_id, 0.0 AS `Proba_0`, -1.79769313486231e+308 AS `LogProba_0`, 1.0 AS `Proba_1`, 0.0 AS `LogProba_1`, 0.0 AS `Proba_2`, -1.79769313486231e+308 AS `LogProba_2`, 1 AS `Decision`, 1.0 AS `DecisionProba` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 4 AS count, 2 AS depth, 2 AS parent_id, 0.0 AS `Proba_0`, -1.79769313486231e+308 AS `LogProba_0`, 0.0 AS `Proba_1`, -1.79769313486231e+308 AS `LogProba_1`, 1.0 AS `Proba_2`, 0.0 AS `LogProba_2`, 2 AS `Decision`, 1.0 AS `DecisionProba`) AS `Values`), 
`DT_Output_9` AS 
(SELECT `DT_node_lookup_9`.`KEY` AS `KEY`, `DT_node_lookup_9`.node_id_2 AS node_id_2, `DT_node_data_9`.node_id AS node_id, `DT_node_data_9`.feature AS feature, `DT_node_data_9`.threshold AS threshold, `DT_node_data_9`.count AS count, `DT_node_data_9`.depth AS depth, `DT_node_data_9`.parent_id AS parent_id, `DT_node_data_9`.`Proba_0` AS `Proba_0`, `DT_node_data_9`.`LogProba_0` AS `LogProba_0`, `DT_node_data_9`.`Proba_1` AS `Proba_1`, `DT_node_data_9`.`LogProba_1` AS `LogProba_1`, `DT_node_data_9`.`Proba_2` AS `Proba_2`, `DT_node_data_9`.`LogProba_2` AS `LogProba_2`, `DT_node_data_9`.`Decision` AS `Decision`, `DT_node_data_9`.`DecisionProba` AS `DecisionProba` 
FROM `DT_node_lookup_9` LEFT OUTER JOIN `DT_node_data_9` ON `DT_node_lookup_9`.node_id_2 = `DT_node_data_9`.node_id), 
`BAG_Tree_9` AS 
(SELECT `DT_Output_9`.`KEY` AS `KEY`, NULL AS `Score_0`, `DT_Output_9`.`Proba_0` AS `Proba_0`, `DT_Output_9`.`LogProba_0` AS `LogProba_0`, NULL AS `Score_1`, `DT_Output_9`.`Proba_1` AS `Proba_1`, `DT_Output_9`.`LogProba_1` AS `LogProba_1`, NULL AS `Score_2`, `DT_Output_9`.`Proba_2` AS `Proba_2`, `DT_Output_9`.`LogProba_2` AS `LogProba_2` 
FROM `DT_Output_9`), 
`Score_Union_CTE` AS 
(SELECT ensemble_score_union.`KEY` AS `KEY`, ensemble_score_union.`Score_0` AS `Score_0`, ensemble_score_union.`Proba_0` AS `Proba_0`, ensemble_score_union.`LogProba_0` AS `LogProba_0`, ensemble_score_union.`Score_1` AS `Score_1`, ensemble_score_union.`Proba_1` AS `Proba_1`, ensemble_score_union.`LogProba_1` AS `LogProba_1`, ensemble_score_union.`Score_2` AS `Score_2`, ensemble_score_union.`Proba_2` AS `Proba_2`, ensemble_score_union.`LogProba_2` AS `LogProba_2` 
FROM (SELECT `BAG_Tree_0`.`KEY` AS `KEY`, `BAG_Tree_0`.`Score_0` AS `Score_0`, `BAG_Tree_0`.`Proba_0` AS `Proba_0`, `BAG_Tree_0`.`LogProba_0` AS `LogProba_0`, `BAG_Tree_0`.`Score_1` AS `Score_1`, `BAG_Tree_0`.`Proba_1` AS `Proba_1`, `BAG_Tree_0`.`LogProba_1` AS `LogProba_1`, `BAG_Tree_0`.`Score_2` AS `Score_2`, `BAG_Tree_0`.`Proba_2` AS `Proba_2`, `BAG_Tree_0`.`LogProba_2` AS `LogProba_2` 
FROM `BAG_Tree_0` UNION ALL SELECT `BAG_Tree_1`.`KEY` AS `KEY`, `BAG_Tree_1`.`Score_0` AS `Score_0`, `BAG_Tree_1`.`Proba_0` AS `Proba_0`, `BAG_Tree_1`.`LogProba_0` AS `LogProba_0`, `BAG_Tree_1`.`Score_1` AS `Score_1`, `BAG_Tree_1`.`Proba_1` AS `Proba_1`, `BAG_Tree_1`.`LogProba_1` AS `LogProba_1`, `BAG_Tree_1`.`Score_2` AS `Score_2`, `BAG_Tree_1`.`Proba_2` AS `Proba_2`, `BAG_Tree_1`.`LogProba_2` AS `LogProba_2` 
FROM `BAG_Tree_1` UNION ALL SELECT `BAG_Tree_2`.`KEY` AS `KEY`, `BAG_Tree_2`.`Score_0` AS `Score_0`, `BAG_Tree_2`.`Proba_0` AS `Proba_0`, `BAG_Tree_2`.`LogProba_0` AS `LogProba_0`, `BAG_Tree_2`.`Score_1` AS `Score_1`, `BAG_Tree_2`.`Proba_1` AS `Proba_1`, `BAG_Tree_2`.`LogProba_1` AS `LogProba_1`, `BAG_Tree_2`.`Score_2` AS `Score_2`, `BAG_Tree_2`.`Proba_2` AS `Proba_2`, `BAG_Tree_2`.`LogProba_2` AS `LogProba_2` 
FROM `BAG_Tree_2` UNION ALL SELECT `BAG_Tree_3`.`KEY` AS `KEY`, `BAG_Tree_3`.`Score_0` AS `Score_0`, `BAG_Tree_3`.`Proba_0` AS `Proba_0`, `BAG_Tree_3`.`LogProba_0` AS `LogProba_0`, `BAG_Tree_3`.`Score_1` AS `Score_1`, `BAG_Tree_3`.`Proba_1` AS `Proba_1`, `BAG_Tree_3`.`LogProba_1` AS `LogProba_1`, `BAG_Tree_3`.`Score_2` AS `Score_2`, `BAG_Tree_3`.`Proba_2` AS `Proba_2`, `BAG_Tree_3`.`LogProba_2` AS `LogProba_2` 
FROM `BAG_Tree_3` UNION ALL SELECT `BAG_Tree_4`.`KEY` AS `KEY`, `BAG_Tree_4`.`Score_0` AS `Score_0`, `BAG_Tree_4`.`Proba_0` AS `Proba_0`, `BAG_Tree_4`.`LogProba_0` AS `LogProba_0`, `BAG_Tree_4`.`Score_1` AS `Score_1`, `BAG_Tree_4`.`Proba_1` AS `Proba_1`, `BAG_Tree_4`.`LogProba_1` AS `LogProba_1`, `BAG_Tree_4`.`Score_2` AS `Score_2`, `BAG_Tree_4`.`Proba_2` AS `Proba_2`, `BAG_Tree_4`.`LogProba_2` AS `LogProba_2` 
FROM `BAG_Tree_4` UNION ALL SELECT `BAG_Tree_5`.`KEY` AS `KEY`, `BAG_Tree_5`.`Score_0` AS `Score_0`, `BAG_Tree_5`.`Proba_0` AS `Proba_0`, `BAG_Tree_5`.`LogProba_0` AS `LogProba_0`, `BAG_Tree_5`.`Score_1` AS `Score_1`, `BAG_Tree_5`.`Proba_1` AS `Proba_1`, `BAG_Tree_5`.`LogProba_1` AS `LogProba_1`, `BAG_Tree_5`.`Score_2` AS `Score_2`, `BAG_Tree_5`.`Proba_2` AS `Proba_2`, `BAG_Tree_5`.`LogProba_2` AS `LogProba_2` 
FROM `BAG_Tree_5` UNION ALL SELECT `BAG_Tree_6`.`KEY` AS `KEY`, `BAG_Tree_6`.`Score_0` AS `Score_0`, `BAG_Tree_6`.`Proba_0` AS `Proba_0`, `BAG_Tree_6`.`LogProba_0` AS `LogProba_0`, `BAG_Tree_6`.`Score_1` AS `Score_1`, `BAG_Tree_6`.`Proba_1` AS `Proba_1`, `BAG_Tree_6`.`LogProba_1` AS `LogProba_1`, `BAG_Tree_6`.`Score_2` AS `Score_2`, `BAG_Tree_6`.`Proba_2` AS `Proba_2`, `BAG_Tree_6`.`LogProba_2` AS `LogProba_2` 
FROM `BAG_Tree_6` UNION ALL SELECT `BAG_Tree_7`.`KEY` AS `KEY`, `BAG_Tree_7`.`Score_0` AS `Score_0`, `BAG_Tree_7`.`Proba_0` AS `Proba_0`, `BAG_Tree_7`.`LogProba_0` AS `LogProba_0`, `BAG_Tree_7`.`Score_1` AS `Score_1`, `BAG_Tree_7`.`Proba_1` AS `Proba_1`, `BAG_Tree_7`.`LogProba_1` AS `LogProba_1`, `BAG_Tree_7`.`Score_2` AS `Score_2`, `BAG_Tree_7`.`Proba_2` AS `Proba_2`, `BAG_Tree_7`.`LogProba_2` AS `LogProba_2` 
FROM `BAG_Tree_7` UNION ALL SELECT `BAG_Tree_8`.`KEY` AS `KEY`, `BAG_Tree_8`.`Score_0` AS `Score_0`, `BAG_Tree_8`.`Proba_0` AS `Proba_0`, `BAG_Tree_8`.`LogProba_0` AS `LogProba_0`, `BAG_Tree_8`.`Score_1` AS `Score_1`, `BAG_Tree_8`.`Proba_1` AS `Proba_1`, `BAG_Tree_8`.`LogProba_1` AS `LogProba_1`, `BAG_Tree_8`.`Score_2` AS `Score_2`, `BAG_Tree_8`.`Proba_2` AS `Proba_2`, `BAG_Tree_8`.`LogProba_2` AS `LogProba_2` 
FROM `BAG_Tree_8` UNION ALL SELECT `BAG_Tree_9`.`KEY` AS `KEY`, `BAG_Tree_9`.`Score_0` AS `Score_0`, `BAG_Tree_9`.`Proba_0` AS `Proba_0`, `BAG_Tree_9`.`LogProba_0` AS `LogProba_0`, `BAG_Tree_9`.`Score_1` AS `Score_1`, `BAG_Tree_9`.`Proba_1` AS `Proba_1`, `BAG_Tree_9`.`LogProba_1` AS `LogProba_1`, `BAG_Tree_9`.`Score_2` AS `Score_2`, `BAG_Tree_9`.`Proba_2` AS `Proba_2`, `BAG_Tree_9`.`LogProba_2` AS `LogProba_2` 
FROM `BAG_Tree_9`) AS ensemble_score_union), 
`BAG_AVG_Scores` AS 
(SELECT `T`.`KEY` AS `KEY`, `T`.`Score_0` AS `Score_0`, `T`.`Proba_0` AS `Proba_0`, `T`.`LogProba_0` AS `LogProba_0`, `T`.`Score_1` AS `Score_1`, `T`.`Proba_1` AS `Proba_1`, `T`.`LogProba_1` AS `LogProba_1`, `T`.`Score_2` AS `Score_2`, `T`.`Proba_2` AS `Proba_2`, `T`.`LogProba_2` AS `LogProba_2` 
FROM (SELECT `Score_Union_CTE`.`KEY` AS `KEY`, avg(`Score_Union_CTE`.`Score_0`) AS `Score_0`, avg(`Score_Union_CTE`.`Proba_0`) AS `Proba_0`, avg(`Score_Union_CTE`.`LogProba_0`) AS `LogProba_0`, avg(`Score_Union_CTE`.`Score_1`) AS `Score_1`, avg(`Score_Union_CTE`.`Proba_1`) AS `Proba_1`, avg(`Score_Union_CTE`.`LogProba_1`) AS `LogProba_1`, avg(`Score_Union_CTE`.`Score_2`) AS `Score_2`, avg(`Score_Union_CTE`.`Proba_2`) AS `Proba_2`, avg(`Score_Union_CTE`.`LogProba_2`) AS `LogProba_2` 
FROM `Score_Union_CTE` GROUP BY `Score_Union_CTE`.`KEY`) AS `T`), 
orig_cte AS 
(SELECT `BAG_AVG_Scores`.`KEY` AS `KEY`, `BAG_AVG_Scores`.`Score_0` AS `Score_0`, `BAG_AVG_Scores`.`Score_1` AS `Score_1`, `BAG_AVG_Scores`.`Score_2` AS `Score_2`, `BAG_AVG_Scores`.`Proba_0` AS `Proba_0`, `BAG_AVG_Scores`.`Proba_1` AS `Proba_1`, `BAG_AVG_Scores`.`Proba_2` AS `Proba_2`, `BAG_AVG_Scores`.`LogProba_0` AS `LogProba_0`, `BAG_AVG_Scores`.`LogProba_1` AS `LogProba_1`, `BAG_AVG_Scores`.`LogProba_2` AS `LogProba_2`, CAST(NULL AS SIGNED INTEGER) AS `Decision`, NULL AS `DecisionProba` 
FROM `BAG_AVG_Scores`), 
score_class_union AS 
(SELECT scu.`KEY_u` AS `KEY_u`, scu.class AS class, scu.`LogProba` AS `LogProba`, scu.`Proba` AS `Proba`, scu.`Score` AS `Score` 
FROM (SELECT orig_cte.`KEY` AS `KEY_u`, 0 AS class, orig_cte.`LogProba_0` AS `LogProba`, orig_cte.`Proba_0` AS `Proba`, orig_cte.`Score_0` AS `Score` 
FROM orig_cte UNION ALL SELECT orig_cte.`KEY` AS `KEY_u`, 1 AS class, orig_cte.`LogProba_1` AS `LogProba`, orig_cte.`Proba_1` AS `Proba`, orig_cte.`Score_1` AS `Score` 
FROM orig_cte UNION ALL SELECT orig_cte.`KEY` AS `KEY_u`, 2 AS class, orig_cte.`LogProba_2` AS `LogProba`, orig_cte.`Proba_2` AS `Proba`, orig_cte.`Score_2` AS `Score` 
FROM orig_cte) AS scu), 
score_max AS 
(SELECT orig_cte.`KEY` AS `KEY`, orig_cte.`Score_0` AS `Score_0`, orig_cte.`Score_1` AS `Score_1`, orig_cte.`Score_2` AS `Score_2`, orig_cte.`Proba_0` AS `Proba_0`, orig_cte.`Proba_1` AS `Proba_1`, orig_cte.`Proba_2` AS `Proba_2`, orig_cte.`LogProba_0` AS `LogProba_0`, orig_cte.`LogProba_1` AS `LogProba_1`, orig_cte.`LogProba_2` AS `LogProba_2`, orig_cte.`Decision` AS `Decision`, orig_cte.`DecisionProba` AS `DecisionProba`, max_select.`KEY_m` AS `KEY_m`, max_select.`max_Proba` AS `max_Proba` 
FROM orig_cte LEFT OUTER JOIN (SELECT score_class_union.`KEY_u` AS `KEY_m`, max(score_class_union.`Proba`) AS `max_Proba` 
FROM score_class_union GROUP BY score_class_union.`KEY_u`) AS max_select ON orig_cte.`KEY` = max_select.`KEY_m`), 
union_with_max AS 
(SELECT score_class_union.`KEY_u` AS `KEY_u`, score_class_union.class AS class, score_class_union.`LogProba` AS `LogProba`, score_class_union.`Proba` AS `Proba`, score_class_union.`Score` AS `Score`, score_max.`KEY` AS `KEY`, score_max.`Score_0` AS `Score_0`, score_max.`Score_1` AS `Score_1`, score_max.`Score_2` AS `Score_2`, score_max.`Proba_0` AS `Proba_0`, score_max.`Proba_1` AS `Proba_1`, score_max.`Proba_2` AS `Proba_2`, score_max.`LogProba_0` AS `LogProba_0`, score_max.`LogProba_1` AS `LogProba_1`, score_max.`LogProba_2` AS `LogProba_2`, score_max.`Decision` AS `Decision`, score_max.`DecisionProba` AS `DecisionProba`, score_max.`KEY_m` AS `KEY_m`, score_max.`max_Proba` AS `max_Proba` 
FROM score_class_union LEFT OUTER JOIN score_max ON score_class_union.`KEY_u` = score_max.`KEY`), 
arg_max_cte AS 
(SELECT score_max.`KEY` AS `KEY`, score_max.`Score_0` AS `Score_0`, score_max.`Score_1` AS `Score_1`, score_max.`Score_2` AS `Score_2`, score_max.`Proba_0` AS `Proba_0`, score_max.`Proba_1` AS `Proba_1`, score_max.`Proba_2` AS `Proba_2`, score_max.`LogProba_0` AS `LogProba_0`, score_max.`LogProba_1` AS `LogProba_1`, score_max.`LogProba_2` AS `LogProba_2`, score_max.`Decision` AS `Decision`, score_max.`DecisionProba` AS `DecisionProba`, score_max.`KEY_m` AS `KEY_m`, score_max.`max_Proba` AS `max_Proba`, `arg_max_t_Proba`.`KEY_Proba` AS `KEY_Proba`, `arg_max_t_Proba`.`arg_max_Proba` AS `arg_max_Proba` 
FROM score_max LEFT OUTER JOIN (SELECT union_with_max.`KEY` AS `KEY_Proba`, min(union_with_max.class) AS `arg_max_Proba` 
FROM union_with_max 
WHERE union_with_max.`max_Proba` <= union_with_max.`Proba` GROUP BY union_with_max.`KEY`) AS `arg_max_t_Proba` ON score_max.`KEY` = `arg_max_t_Proba`.`KEY_Proba`)
 SELECT arg_max_cte.`KEY` AS `KEY`, arg_max_cte.`Score_0` AS `Score_0`, arg_max_cte.`Score_1` AS `Score_1`, arg_max_cte.`Score_2` AS `Score_2`, arg_max_cte.`Proba_0` AS `Proba_0`, arg_max_cte.`Proba_1` AS `Proba_1`, arg_max_cte.`Proba_2` AS `Proba_2`, CASE WHEN (arg_max_cte.`Proba_0` IS NULL OR arg_max_cte.`Proba_0` > 0.0) THEN ln(arg_max_cte.`Proba_0`) ELSE -1.79769313486231e+308 END AS `LogProba_0`, CASE WHEN (arg_max_cte.`Proba_1` IS NULL OR arg_max_cte.`Proba_1` > 0.0) THEN ln(arg_max_cte.`Proba_1`) ELSE -1.79769313486231e+308 END AS `LogProba_1`, CASE WHEN (arg_max_cte.`Proba_2` IS NULL OR arg_max_cte.`Proba_2` > 0.0) THEN ln(arg_max_cte.`Proba_2`) ELSE -1.79769313486231e+308 END AS `LogProba_2`, arg_max_cte.`arg_max_Proba` AS `Decision`, arg_max_cte.`max_Proba` AS `DecisionProba` 
FROM arg_max_cte