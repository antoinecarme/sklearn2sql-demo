-- This SQL code was generated by sklearn2sql (development version).
-- Copyright 2017

WITH "DT_node_lookup" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_3" <= 0.44998258352279663) THEN CASE WHEN ("ADS"."Feature_2" <= 0.3785794973373413) THEN 2 ELSE CASE WHEN ("ADS"."Feature_5" <= 0.23939915001392365) THEN CASE WHEN ("ADS"."Feature_0" <= 0.3735806345939636) THEN 5 ELSE 6 END ELSE CASE WHEN ("ADS"."Feature_8" <= 0.43380939960479736) THEN 8 ELSE CASE WHEN ("ADS"."Feature_7" <= 0.3789823055267334) THEN 10 ELSE 11 END END END END ELSE CASE WHEN ("ADS"."Feature_1" <= 0.34644100069999695) THEN CASE WHEN ("ADS"."Feature_7" <= 0.8198839426040649) THEN CASE WHEN ("ADS"."Feature_4" <= 0.6185100078582764) THEN 15 ELSE 16 END ELSE 17 END ELSE CASE WHEN ("ADS"."Feature_4" <= 0.36127805709838867) THEN CASE WHEN ("ADS"."Feature_0" <= 0.631543755531311) THEN 20 ELSE CASE WHEN ("ADS"."Feature_1" <= 0.6077402830123901) THEN 22 ELSE 23 END END ELSE CASE WHEN ("ADS"."Feature_8" <= 0.6776014566421509) THEN CASE WHEN ("ADS"."Feature_6" <= 0.7136263251304626) THEN 26 ELSE 27 END ELSE 28 END END END END AS node_id_2 
FROM freidman1 "ADS"), 
"DT_node_data" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 0 AS node_id, 'Feature_3' AS feature, 0.44998258352279663 AS threshold, 15 AS count, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 14.86549689440722 AS "Estimator" FROM DUAL UNION ALL SELECT 1 AS node_id, 'Feature_2' AS feature, 0.3785794973373413 AS threshold, 6 AS count, 1 AS depth, 0 AS parent_id, 9.560670225567302 AS "Estimator" FROM DUAL UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 2 AS depth, 1 AS parent_id, 15.706521981990113 AS "Estimator" FROM DUAL UNION ALL SELECT 3 AS node_id, 'Feature_5' AS feature, 0.23939915001392365 AS threshold, 5 AS count, 2 AS depth, 1 AS parent_id, 7.804712580875072 AS "Estimator" FROM DUAL UNION ALL SELECT 4 AS node_id, 'Feature_0' AS feature, 0.3735806345939636 AS threshold, 2 AS count, 3 AS depth, 3 AS parent_id, 9.933415417524246 AS "Estimator" FROM DUAL UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 4 AS parent_id, 10.131789617052231 AS "Estimator" FROM DUAL UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 4 AS parent_id, 9.735041217996262 AS "Estimator" FROM DUAL UNION ALL SELECT 7 AS node_id, 'Feature_8' AS feature, 0.43380939960479736 AS threshold, 3 AS count, 3 AS depth, 3 AS parent_id, 6.953231446215402 AS "Estimator" FROM DUAL UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 7 AS parent_id, 8.240178848678195 AS "Estimator" FROM DUAL UNION ALL SELECT 9 AS node_id, 'Feature_7' AS feature, 0.3789823055267334 AS threshold, 2 AS count, 4 AS depth, 7 AS parent_id, 6.095266511240205 AS "Estimator" FROM DUAL UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 9 AS parent_id, 5.794379036456321 AS "Estimator" FROM DUAL UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 9 AS parent_id, 6.2457102486321485 AS "Estimator" FROM DUAL UNION ALL SELECT 12 AS node_id, 'Feature_1' AS feature, 0.34644100069999695 AS threshold, 9 AS count, 1 AS depth, 0 AS parent_id, 17.849461895629677 AS "Estimator" FROM DUAL UNION ALL SELECT 13 AS node_id, 'Feature_7' AS feature, 0.8198839426040649 AS threshold, 3 AS count, 2 AS depth, 12 AS parent_id, 15.641923786072507 AS "Estimator" FROM DUAL UNION ALL SELECT 14 AS node_id, 'Feature_4' AS feature, 0.6185100078582764 AS threshold, 2 AS count, 3 AS depth, 13 AS parent_id, 16.52493308541915 AS "Estimator" FROM DUAL UNION ALL SELECT 15 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 14 AS parent_id, 15.922558108080855 AS "Estimator" FROM DUAL UNION ALL SELECT 16 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 14 AS parent_id, 18.332058017434036 AS "Estimator" FROM DUAL UNION ALL SELECT 17 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 13 AS parent_id, 12.109886588685942 AS "Estimator" FROM DUAL UNION ALL SELECT 18 AS node_id, 'Feature_4' AS feature, 0.36127805709838867 AS threshold, 6 AS count, 2 AS depth, 12 AS parent_id, 18.852888309064756 AS "Estimator" FROM DUAL UNION ALL SELECT 19 AS node_id, 'Feature_0' AS feature, 0.631543755531311 AS threshold, 3 AS count, 3 AS depth, 18 AS parent_id, 18.04760354298076 AS "Estimator" FROM DUAL UNION ALL SELECT 20 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 19 AS parent_id, 17.51855412510629 AS "Estimator" FROM DUAL UNION ALL SELECT 21 AS node_id, 'Feature_1' AS feature, 0.6077402830123901 AS threshold, 2 AS count, 4 AS depth, 19 AS parent_id, 18.17986589744938 AS "Estimator" FROM DUAL UNION ALL SELECT 22 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 21 AS parent_id, 18.10948375079814 AS "Estimator" FROM DUAL UNION ALL SELECT 23 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 21 AS parent_id, 18.250248044100616 AS "Estimator" FROM DUAL UNION ALL SELECT 24 AS node_id, 'Feature_8' AS feature, 0.6776014566421509 AS threshold, 3 AS count, 3 AS depth, 18 AS parent_id, 19.52395894746808 AS "Estimator" FROM DUAL UNION ALL SELECT 25 AS node_id, 'Feature_6' AS feature, 0.7136263251304626 AS threshold, 2 AS count, 4 AS depth, 24 AS parent_id, 20.14468088794686 AS "Estimator" FROM DUAL UNION ALL SELECT 26 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 25 AS parent_id, 20.70189537226964 AS "Estimator" FROM DUAL UNION ALL SELECT 27 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 25 AS parent_id, 19.95894272650593 AS "Estimator" FROM DUAL UNION ALL SELECT 28 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 24 AS parent_id, 18.282515066510527 AS "Estimator" FROM DUAL) "Values"), 
"DT_Output" AS 
(SELECT "DT_node_lookup"."KEY" AS "KEY", "DT_node_lookup".node_id_2 AS node_id_2, "DT_node_data".node_id AS node_id, "DT_node_data".feature AS feature, "DT_node_data".threshold AS threshold, "DT_node_data".count AS count, "DT_node_data".depth AS depth, "DT_node_data".parent_id AS parent_id, "DT_node_data"."Estimator" AS "Estimator" 
FROM "DT_node_lookup" LEFT OUTER JOIN "DT_node_data" ON "DT_node_lookup".node_id_2 = "DT_node_data".node_id), 
"BAG_Tree_0" AS 
(SELECT "DT_Output"."KEY" AS "KEY", "DT_Output"."Estimator" AS "Estimator" 
FROM "DT_Output"), 
"DT_node_lookup_1" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_3" <= 0.08861841261386871) THEN CASE WHEN ("ADS"."Feature_6" <= 0.6578847169876099) THEN CASE WHEN ("ADS"."Feature_4" <= 0.32171058654785156) THEN 3 ELSE 4 END ELSE 5 END ELSE CASE WHEN ("ADS"."Feature_0" <= 0.290882408618927) THEN CASE WHEN ("ADS"."Feature_3" <= 0.7352290153503418) THEN CASE WHEN ("ADS"."Feature_3" <= 0.6495290994644165) THEN 9 ELSE 10 END ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_5" <= 0.8185310363769531) THEN CASE WHEN ("ADS"."Feature_7" <= 0.4999108910560608) THEN CASE WHEN ("ADS"."Feature_1" <= 0.7408770322799683) THEN 15 ELSE 16 END ELSE CASE WHEN ("ADS"."Feature_0" <= 0.8514097332954407) THEN 18 ELSE 19 END END ELSE 20 END END END AS node_id_2 
FROM freidman1 "ADS"), 
"DT_node_data_1" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 0 AS node_id, 'Feature_3' AS feature, 0.08861841261386871 AS threshold, 16 AS count, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 15.175996797360886 AS "Estimator" FROM DUAL UNION ALL SELECT 1 AS node_id, 'Feature_6' AS feature, 0.6578847169876099 AS threshold, 3 AS count, 1 AS depth, 0 AS parent_id, 7.75226917148162 AS "Estimator" FROM DUAL UNION ALL SELECT 2 AS node_id, 'Feature_4' AS feature, 0.32171058654785156 AS threshold, 2 AS count, 2 AS depth, 1 AS parent_id, 5.769497124966978 AS "Estimator" FROM DUAL UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 2 AS parent_id, 5.293284001301807 AS "Estimator" FROM DUAL UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 2 AS parent_id, 6.2457102486321485 AS "Estimator" FROM DUAL UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 2 AS depth, 1 AS parent_id, 9.735041217996262 AS "Estimator" FROM DUAL UNION ALL SELECT 6 AS node_id, 'Feature_0' AS feature, 0.290882408618927 AS threshold, 13 AS count, 1 AS depth, 0 AS parent_id, 16.59004015467122 AS "Estimator" FROM DUAL UNION ALL SELECT 7 AS node_id, 'Feature_3' AS feature, 0.7352290153503418 AS threshold, 3 AS count, 2 AS depth, 6 AS parent_id, 13.086119883332666 AS "Estimator" FROM DUAL UNION ALL SELECT 8 AS node_id, 'Feature_3' AS feature, 0.6495290994644165 AS threshold, 2 AS count, 3 AS depth, 7 AS parent_id, 11.15598984450725 AS "Estimator" FROM DUAL UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 8 AS parent_id, 12.109886588685942 AS "Estimator" FROM DUAL UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 8 AS parent_id, 10.20209310032856 AS "Estimator" FROM DUAL UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 7 AS parent_id, 14.051184902745373 AS "Estimator" FROM DUAL UNION ALL SELECT 12 AS node_id, 'Feature_5' AS feature, 0.8185310363769531 AS threshold, 10 AS count, 2 AS depth, 6 AS parent_id, 17.99160826320664 AS "Estimator" FROM DUAL UNION ALL SELECT 13 AS node_id, 'Feature_7' AS feature, 0.4999108910560608 AS threshold, 9 AS count, 3 AS depth, 12 AS parent_id, 17.574641015658486 AS "Estimator" FROM DUAL UNION ALL SELECT 14 AS node_id, 'Feature_1' AS feature, 0.7408770322799683 AS threshold, 6 AS count, 4 AS depth, 13 AS parent_id, 18.05164835169493 AS "Estimator" FROM DUAL UNION ALL SELECT 15 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS count, 5 AS depth, 14 AS parent_id, 17.839726754493704 AS "Estimator" FROM DUAL UNION ALL SELECT 16 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 14 AS parent_id, 19.95894272650593 AS "Estimator" FROM DUAL UNION ALL SELECT 17 AS node_id, 'Feature_0' AS feature, 0.8514097332954407 AS threshold, 3 AS count, 4 AS depth, 13 AS parent_id, 15.984616562203685 AS "Estimator" FROM DUAL UNION ALL SELECT 18 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 5 AS depth, 17 AS parent_id, 15.814540045035482 AS "Estimator" FROM DUAL UNION ALL SELECT 19 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 17 AS parent_id, 16.324769596540094 AS "Estimator" FROM DUAL UNION ALL SELECT 20 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 12 AS parent_id, 20.70189537226964 AS "Estimator" FROM DUAL) "Values"), 
"DT_Output_1" AS 
(SELECT "DT_node_lookup_1"."KEY" AS "KEY", "DT_node_lookup_1".node_id_2 AS node_id_2, "DT_node_data_1".node_id AS node_id, "DT_node_data_1".feature AS feature, "DT_node_data_1".threshold AS threshold, "DT_node_data_1".count AS count, "DT_node_data_1".depth AS depth, "DT_node_data_1".parent_id AS parent_id, "DT_node_data_1"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_1" LEFT OUTER JOIN "DT_node_data_1" ON "DT_node_lookup_1".node_id_2 = "DT_node_data_1".node_id), 
"BAG_Tree_1" AS 
(SELECT "DT_Output_1"."KEY" AS "KEY", "DT_Output_1"."Estimator" AS "Estimator" 
FROM "DT_Output_1"), 
"DT_node_lookup_2" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_1" <= 0.4244970679283142) THEN CASE WHEN ("ADS"."Feature_3" <= 0.48977845907211304) THEN CASE WHEN ("ADS"."Feature_5" <= 0.1342167854309082) THEN 3 ELSE CASE WHEN ("ADS"."Feature_5" <= 0.6208158731460571) THEN CASE WHEN ("ADS"."Feature_2" <= 0.7698370218276978) THEN 6 ELSE 7 END ELSE 8 END END ELSE CASE WHEN ("ADS"."Feature_1" <= 0.10911296308040619) THEN 10 ELSE CASE WHEN ("ADS"."Feature_8" <= 0.28859859704971313) THEN 12 ELSE CASE WHEN ("ADS"."Feature_3" <= 0.6332176327705383) THEN 14 ELSE 15 END END END END ELSE CASE WHEN ("ADS"."Feature_8" <= 0.29456543922424316) THEN 17 ELSE CASE WHEN ("ADS"."Feature_8" <= 0.4798669219017029) THEN CASE WHEN ("ADS"."Feature_6" <= 0.7483289241790771) THEN CASE WHEN ("ADS"."Feature_8" <= 0.4145888090133667) THEN 21 ELSE 22 END ELSE 23 END ELSE CASE WHEN ("ADS"."Feature_4" <= 0.6185498833656311) THEN 25 ELSE 26 END END END END AS node_id_2 
FROM freidman1 "ADS"), 
"DT_node_data_2" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 0 AS node_id, 'Feature_1' AS feature, 0.4244970679283142 AS threshold, 16 AS count, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 15.115538507755492 AS "Estimator" FROM DUAL UNION ALL SELECT 1 AS node_id, 'Feature_3' AS feature, 0.48977845907211304 AS threshold, 9 AS count, 1 AS depth, 0 AS parent_id, 10.184899664926023 AS "Estimator" FROM DUAL UNION ALL SELECT 2 AS node_id, 'Feature_5' AS feature, 0.1342167854309082 AS threshold, 5 AS count, 2 AS depth, 1 AS parent_id, 7.441190458546417 AS "Estimator" FROM DUAL UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 2 AS parent_id, 9.735041217996262 AS "Estimator" FROM DUAL UNION ALL SELECT 4 AS node_id, 'Feature_5' AS feature, 0.6208158731460571 AS threshold, 4 AS count, 3 AS depth, 2 AS parent_id, 6.676573538729802 AS "Estimator" FROM DUAL UNION ALL SELECT 5 AS node_id, 'Feature_2' AS feature, 0.7698370218276978 AS threshold, 3 AS count, 4 AS depth, 4 AS parent_id, 5.894770883755607 AS "Estimator" FROM DUAL UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 5 AS depth, 5 AS parent_id, 5.543831518879064 AS "Estimator" FROM DUAL UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 5 AS parent_id, 6.2457102486321485 AS "Estimator" FROM DUAL UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 4 AS parent_id, 8.240178848678195 AS "Estimator" FROM DUAL UNION ALL SELECT 9 AS node_id, 'Feature_1' AS feature, 0.10911296308040619 AS threshold, 4 AS count, 2 AS depth, 1 AS parent_id, 15.67231807768523 AS "Estimator" FROM DUAL UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 9 AS parent_id, 12.109886588685942 AS "Estimator" FROM DUAL UNION ALL SELECT 11 AS node_id, 'Feature_8' AS feature, 0.28859859704971313 AS threshold, 3 AS count, 3 AS depth, 9 AS parent_id, 16.859795240684992 AS "Estimator" FROM DUAL UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 11 AS parent_id, 18.332058017434036 AS "Estimator" FROM DUAL UNION ALL SELECT 13 AS node_id, 'Feature_3' AS feature, 0.6332176327705383 AS threshold, 2 AS count, 4 AS depth, 11 AS parent_id, 16.12366385231047 AS "Estimator" FROM DUAL UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 13 AS parent_id, 16.324769596540094 AS "Estimator" FROM DUAL UNION ALL SELECT 15 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 13 AS parent_id, 15.922558108080853 AS "Estimator" FROM DUAL UNION ALL SELECT 16 AS node_id, 'Feature_8' AS feature, 0.29456543922424316 AS threshold, 7 AS count, 1 AS depth, 0 AS parent_id, 19.666897439598078 AS "Estimator" FROM DUAL UNION ALL SELECT 17 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 2 AS depth, 16 AS parent_id, 25.24805848092261 AS "Estimator" FROM DUAL UNION ALL SELECT 18 AS node_id, 'Feature_8' AS feature, 0.4798669219017029 AS threshold, 6 AS count, 2 AS depth, 16 AS parent_id, 18.652140886629983 AS "Estimator" FROM DUAL UNION ALL SELECT 19 AS node_id, 'Feature_6' AS feature, 0.7483289241790771 AS threshold, 4 AS count, 3 AS depth, 18 AS parent_id, 18.06922111595604 AS "Estimator" FROM DUAL UNION ALL SELECT 20 AS node_id, 'Feature_8' AS feature, 0.4145888090133667 AS threshold, 3 AS count, 4 AS depth, 19 AS parent_id, 18.14788782893458 AS "Estimator" FROM DUAL UNION ALL SELECT 21 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 5 AS depth, 20 AS parent_id, 18.070782061848632 AS "Estimator" FROM DUAL UNION ALL SELECT 22 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 20 AS parent_id, 18.2506955183825 AS "Estimator" FROM DUAL UNION ALL SELECT 23 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 19 AS parent_id, 17.51855412510629 AS "Estimator" FROM DUAL UNION ALL SELECT 24 AS node_id, 'Feature_4' AS feature, 0.6185498833656311 AS threshold, 2 AS count, 3 AS depth, 18 AS parent_id, 20.206593608427166 AS "Estimator" FROM DUAL UNION ALL SELECT 25 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 24 AS parent_id, 20.70189537226964 AS "Estimator" FROM DUAL UNION ALL SELECT 26 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 24 AS parent_id, 19.95894272650593 AS "Estimator" FROM DUAL) "Values"), 
"DT_Output_2" AS 
(SELECT "DT_node_lookup_2"."KEY" AS "KEY", "DT_node_lookup_2".node_id_2 AS node_id_2, "DT_node_data_2".node_id AS node_id, "DT_node_data_2".feature AS feature, "DT_node_data_2".threshold AS threshold, "DT_node_data_2".count AS count, "DT_node_data_2".depth AS depth, "DT_node_data_2".parent_id AS parent_id, "DT_node_data_2"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_2" LEFT OUTER JOIN "DT_node_data_2" ON "DT_node_lookup_2".node_id_2 = "DT_node_data_2".node_id), 
"BAG_Tree_2" AS 
(SELECT "DT_Output_2"."KEY" AS "KEY", "DT_Output_2"."Estimator" AS "Estimator" 
FROM "DT_Output_2"), 
"DT_node_lookup_3" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_3" <= 0.19583378732204437) THEN CASE WHEN ("ADS"."Feature_1" <= 0.6139321327209473) THEN CASE WHEN ("ADS"."Feature_7" <= 0.6893158555030823) THEN CASE WHEN ("ADS"."Feature_5" <= 0.4702919125556946) THEN CASE WHEN ("ADS"."Feature_2" <= 0.5338698625564575) THEN 5 ELSE 6 END ELSE CASE WHEN ("ADS"."Feature_5" <= 0.4907175600528717) THEN 8 ELSE 9 END END ELSE 10 END ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_1" <= 0.21418792009353638) THEN CASE WHEN ("ADS"."Feature_0" <= 0.6217710971832275) THEN CASE WHEN ("ADS"."Feature_0" <= 0.38337844610214233) THEN 15 ELSE 16 END ELSE 17 END ELSE CASE WHEN ("ADS"."Feature_2" <= 0.9147809743881226) THEN CASE WHEN ("ADS"."Feature_5" <= 0.9289942979812622) THEN CASE WHEN ("ADS"."Feature_1" <= 0.8106425404548645) THEN 21 ELSE 22 END ELSE 23 END ELSE 24 END END END AS node_id_2 
FROM freidman1 "ADS"), 
"DT_node_data_3" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 0 AS node_id, 'Feature_3' AS feature, 0.19583378732204437 AS threshold, 19 AS count, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 14.903655239367094 AS "Estimator" FROM DUAL UNION ALL SELECT 1 AS node_id, 'Feature_1' AS feature, 0.6139321327209473 AS threshold, 6 AS count, 1 AS depth, 0 AS parent_id, 8.03983555048614 AS "Estimator" FROM DUAL UNION ALL SELECT 2 AS node_id, 'Feature_7' AS feature, 0.6893158555030823 AS threshold, 5 AS count, 2 AS depth, 1 AS parent_id, 6.76205447856881 AS "Estimator" FROM DUAL UNION ALL SELECT 3 AS node_id, 'Feature_5' AS feature, 0.4702919125556946 AS threshold, 4 AS count, 3 AS depth, 2 AS parent_id, 6.088107450872127 AS "Estimator" FROM DUAL UNION ALL SELECT 4 AS node_id, 'Feature_2' AS feature, 0.5338698625564575 AS threshold, 2 AS count, 4 AS depth, 3 AS parent_id, 5.543831518879064 AS "Estimator" FROM DUAL UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 4 AS parent_id, 5.293284001301807 AS "Estimator" FROM DUAL UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 4 AS parent_id, 5.794379036456321 AS "Estimator" FROM DUAL UNION ALL SELECT 7 AS node_id, 'Feature_5' AS feature, 0.4907175600528717 AS threshold, 2 AS count, 4 AS depth, 3 AS parent_id, 6.450958072200835 AS "Estimator" FROM DUAL UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 7 AS parent_id, 6.861453719338209 AS "Estimator" FROM DUAL UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 7 AS parent_id, 6.2457102486321485 AS "Estimator" FROM DUAL UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 2 AS parent_id, 10.131789617052231 AS "Estimator" FROM DUAL UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 2 AS depth, 1 AS parent_id, 15.706521981990113 AS "Estimator" FROM DUAL UNION ALL SELECT 12 AS node_id, 'Feature_1' AS feature, 0.21418792009353638 AS threshold, 13 AS count, 1 AS depth, 0 AS parent_id, 17.572918451709693 AS "Estimator" FROM DUAL UNION ALL SELECT 13 AS node_id, 'Feature_0' AS feature, 0.6217710971832275 AS threshold, 3 AS count, 2 AS depth, 12 AS parent_id, 12.738418355384152 AS "Estimator" FROM DUAL UNION ALL SELECT 14 AS node_id, 'Feature_0' AS feature, 0.38337844610214233 AS threshold, 2 AS count, 3 AS depth, 13 AS parent_id, 10.819984008683358 AS "Estimator" FROM DUAL UNION ALL SELECT 15 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 14 AS parent_id, 12.109886588685942 AS "Estimator" FROM DUAL UNION ALL SELECT 16 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 14 AS parent_id, 8.240178848678195 AS "Estimator" FROM DUAL UNION ALL SELECT 17 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 13 AS parent_id, 18.493721395486528 AS "Estimator" FROM DUAL UNION ALL SELECT 18 AS node_id, 'Feature_2' AS feature, 0.9147809743881226 AS threshold, 10 AS count, 2 AS depth, 12 AS parent_id, 18.954204193516983 AS "Estimator" FROM DUAL UNION ALL SELECT 19 AS node_id, 'Feature_5' AS feature, 0.9289942979812622 AS threshold, 9 AS count, 3 AS depth, 18 AS parent_id, 18.47006155602425 AS "Estimator" FROM DUAL UNION ALL SELECT 20 AS node_id, 'Feature_1' AS feature, 0.8106425404548645 AS threshold, 8 AS count, 4 AS depth, 19 AS parent_id, 18.284075404670464 AS "Estimator" FROM DUAL UNION ALL SELECT 21 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 7 AS count, 5 AS depth, 20 AS parent_id, 18.13181473904906 AS "Estimator" FROM DUAL UNION ALL SELECT 22 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 20 AS parent_id, 19.95894272650593 AS "Estimator" FROM DUAL UNION ALL SELECT 23 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 19 AS parent_id, 20.70189537226964 AS "Estimator" FROM DUAL UNION ALL SELECT 24 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 18 AS parent_id, 25.24805848092261 AS "Estimator" FROM DUAL) "Values"), 
"DT_Output_3" AS 
(SELECT "DT_node_lookup_3"."KEY" AS "KEY", "DT_node_lookup_3".node_id_2 AS node_id_2, "DT_node_data_3".node_id AS node_id, "DT_node_data_3".feature AS feature, "DT_node_data_3".threshold AS threshold, "DT_node_data_3".count AS count, "DT_node_data_3".depth AS depth, "DT_node_data_3".parent_id AS parent_id, "DT_node_data_3"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_3" LEFT OUTER JOIN "DT_node_data_3" ON "DT_node_lookup_3".node_id_2 = "DT_node_data_3".node_id), 
"BAG_Tree_3" AS 
(SELECT "DT_Output_3"."KEY" AS "KEY", "DT_Output_3"."Estimator" AS "Estimator" 
FROM "DT_Output_3"), 
"DT_node_lookup_4" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_3" <= 0.07964181900024414) THEN CASE WHEN ("ADS"."Feature_3" <= 0.030892614275217056) THEN 2 ELSE CASE WHEN ("ADS"."Feature_9" <= 0.8215264678001404) THEN 4 ELSE 5 END END ELSE CASE WHEN ("ADS"."Feature_5" <= 0.7874298095703125) THEN CASE WHEN ("ADS"."Feature_3" <= 0.7315151691436768) THEN CASE WHEN ("ADS"."Feature_8" <= 0.5332287549972534) THEN CASE WHEN ("ADS"."Feature_0" <= 0.7075196504592896) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_7" <= 0.8780847191810608) THEN 13 ELSE 14 END END ELSE 15 END ELSE CASE WHEN ("ADS"."Feature_3" <= 0.9518086910247803) THEN 17 ELSE 18 END END END AS node_id_2 
FROM freidman1 "ADS"), 
"DT_node_data_4" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 0 AS node_id, 'Feature_3' AS feature, 0.07964181900024414 AS threshold, 11 AS count, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 15.442236044993814 AS "Estimator" FROM DUAL UNION ALL SELECT 1 AS node_id, 'Feature_3' AS feature, 0.030892614275217056 AS threshold, 3 AS count, 1 AS depth, 0 AS parent_id, 7.2535725797502835 AS "Estimator" FROM DUAL UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 2 AS depth, 1 AS parent_id, 5.293284001301807 AS "Estimator" FROM DUAL UNION ALL SELECT 3 AS node_id, 'Feature_9' AS feature, 0.8215264678001404 AS threshold, 2 AS count, 2 AS depth, 1 AS parent_id, 9.867290684348252 AS "Estimator" FROM DUAL UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 3 AS parent_id, 10.131789617052231 AS "Estimator" FROM DUAL UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 3 AS parent_id, 9.735041217996262 AS "Estimator" FROM DUAL UNION ALL SELECT 6 AS node_id, 'Feature_5' AS feature, 0.7874298095703125 AS threshold, 8 AS count, 1 AS depth, 0 AS parent_id, 18.626716281477414 AS "Estimator" FROM DUAL UNION ALL SELECT 7 AS node_id, 'Feature_3' AS feature, 0.7315151691436768 AS threshold, 6 AS count, 2 AS depth, 6 AS parent_id, 16.47957265849091 AS "Estimator" FROM DUAL UNION ALL SELECT 8 AS node_id, 'Feature_8' AS feature, 0.5332287549972534 AS threshold, 5 AS count, 3 AS depth, 7 AS parent_id, 17.10732061430715 AS "Estimator" FROM DUAL UNION ALL SELECT 9 AS node_id, 'Feature_0' AS feature, 0.7075196504592896 AS threshold, 3 AS count, 4 AS depth, 8 AS parent_id, 17.835103831001845 AS "Estimator" FROM DUAL UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 9 AS parent_id, 17.51855412510629 AS "Estimator" FROM DUAL UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 5 AS depth, 9 AS parent_id, 17.993378683949622 AS "Estimator" FROM DUAL UNION ALL SELECT 12 AS node_id, 'Feature_7' AS feature, 0.8780847191810608 AS threshold, 2 AS count, 4 AS depth, 8 AS parent_id, 16.015645789265104 AS "Estimator" FROM DUAL UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 12 AS parent_id, 16.324769596540094 AS "Estimator" FROM DUAL UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 12 AS parent_id, 15.706521981990113 AS "Estimator" FROM DUAL UNION ALL SELECT 15 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 7 AS parent_id, 10.20209310032856 AS "Estimator" FROM DUAL UNION ALL SELECT 16 AS node_id, 'Feature_3' AS feature, 0.9518086910247803 AS threshold, 2 AS count, 2 AS depth, 6 AS parent_id, 22.00079911759906 AS "Estimator" FROM DUAL UNION ALL SELECT 17 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 16 AS parent_id, 20.70189537226964 AS "Estimator" FROM DUAL UNION ALL SELECT 18 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 16 AS parent_id, 25.24805848092261 AS "Estimator" FROM DUAL) "Values"), 
"DT_Output_4" AS 
(SELECT "DT_node_lookup_4"."KEY" AS "KEY", "DT_node_lookup_4".node_id_2 AS node_id_2, "DT_node_data_4".node_id AS node_id, "DT_node_data_4".feature AS feature, "DT_node_data_4".threshold AS threshold, "DT_node_data_4".count AS count, "DT_node_data_4".depth AS depth, "DT_node_data_4".parent_id AS parent_id, "DT_node_data_4"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_4" LEFT OUTER JOIN "DT_node_data_4" ON "DT_node_lookup_4".node_id_2 = "DT_node_data_4".node_id), 
"BAG_Tree_4" AS 
(SELECT "DT_Output_4"."KEY" AS "KEY", "DT_Output_4"."Estimator" AS "Estimator" 
FROM "DT_Output_4"), 
"DT_node_lookup_5" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_3" <= 0.44998258352279663) THEN CASE WHEN ("ADS"."Feature_2" <= 0.22932937741279602) THEN CASE WHEN ("ADS"."Feature_2" <= 0.08135766535997391) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_7" <= 0.6349627375602722) THEN CASE WHEN ("ADS"."Feature_7" <= 0.5698466300964355) THEN CASE WHEN ("ADS"."Feature_3" <= 0.07915603369474411) THEN 8 ELSE 9 END ELSE 10 END ELSE CASE WHEN ("ADS"."Feature_9" <= 0.5732415318489075) THEN 12 ELSE 13 END END END ELSE CASE WHEN ("ADS"."Feature_5" <= 0.8343695402145386) THEN CASE WHEN ("ADS"."Feature_5" <= 0.7163912057876587) THEN CASE WHEN ("ADS"."Feature_7" <= 0.6353718042373657) THEN CASE WHEN ("ADS"."Feature_2" <= 0.16957508027553558) THEN 18 ELSE 19 END ELSE CASE WHEN ("ADS"."Feature_6" <= 0.539880096912384) THEN 21 ELSE 22 END END ELSE 23 END ELSE CASE WHEN ("ADS"."Feature_8" <= 0.40261632204055786) THEN 25 ELSE 26 END END END AS node_id_2 
FROM freidman1 "ADS"), 
"DT_node_data_5" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 0 AS node_id, 'Feature_3' AS feature, 0.44998258352279663 AS threshold, 17 AS count, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 14.86313178551044 AS "Estimator" FROM DUAL UNION ALL SELECT 1 AS node_id, 'Feature_2' AS feature, 0.22932937741279602 AS threshold, 7 AS count, 1 AS depth, 0 AS parent_id, 9.299679681958647 AS "Estimator" FROM DUAL UNION ALL SELECT 2 AS node_id, 'Feature_2' AS feature, 0.08135766535997391 AS threshold, 2 AS count, 2 AS depth, 1 AS parent_id, 16.978608750186307 AS "Estimator" FROM DUAL UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 2 AS parent_id, 18.2506955183825 AS "Estimator" FROM DUAL UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 2 AS parent_id, 15.706521981990113 AS "Estimator" FROM DUAL UNION ALL SELECT 5 AS node_id, 'Feature_7' AS feature, 0.6349627375602722 AS threshold, 5 AS count, 2 AS depth, 1 AS parent_id, 7.105699948179317 AS "Estimator" FROM DUAL UNION ALL SELECT 6 AS node_id, 'Feature_7' AS feature, 0.5698466300964355 AS threshold, 3 AS count, 3 AS depth, 5 AS parent_id, 5.781938080711649 AS "Estimator" FROM DUAL UNION ALL SELECT 7 AS node_id, 'Feature_3' AS feature, 0.07915603369474411 AS threshold, 2 AS count, 4 AS depth, 6 AS parent_id, 5.944822773848263 AS "Estimator" FROM DUAL UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 7 AS parent_id, 5.794379036456321 AS "Estimator" FROM DUAL UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 7 AS parent_id, 6.2457102486321485 AS "Estimator" FROM DUAL UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 6 AS parent_id, 5.293284001301807 AS "Estimator" FROM DUAL UNION ALL SELECT 11 AS node_id, 'Feature_9' AS feature, 0.5732415318489075 AS threshold, 2 AS count, 3 AS depth, 5 AS parent_id, 8.87071577146954 AS "Estimator" FROM DUAL UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 11 AS parent_id, 8.240178848678195 AS "Estimator" FROM DUAL UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 11 AS parent_id, 10.131789617052231 AS "Estimator" FROM DUAL UNION ALL SELECT 14 AS node_id, 'Feature_5' AS feature, 0.8343695402145386 AS threshold, 10 AS count, 1 AS depth, 0 AS parent_id, 17.992573593758326 AS "Estimator" FROM DUAL UNION ALL SELECT 15 AS node_id, 'Feature_5' AS feature, 0.7163912057876587 AS threshold, 8 AS count, 2 AS depth, 14 AS parent_id, 16.331772482812394 AS "Estimator" FROM DUAL UNION ALL SELECT 16 AS node_id, 'Feature_7' AS feature, 0.6353718042373657 AS threshold, 7 AS count, 3 AS depth, 15 AS parent_id, 17.73906778085454 AS "Estimator" FROM DUAL UNION ALL SELECT 17 AS node_id, 'Feature_2' AS feature, 0.16957508027553558 AS threshold, 5 AS count, 4 AS depth, 16 AS parent_id, 18.51325212108831 AS "Estimator" FROM DUAL UNION ALL SELECT 18 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 17 AS parent_id, 19.95894272650593 AS "Estimator" FROM DUAL UNION ALL SELECT 19 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS count, 5 AS depth, 17 AS parent_id, 18.224114000004782 AS "Estimator" FROM DUAL UNION ALL SELECT 20 AS node_id, 'Feature_6' AS feature, 0.539880096912384 AS threshold, 2 AS count, 4 AS depth, 16 AS parent_id, 16.19069910038701 AS "Estimator" FROM DUAL UNION ALL SELECT 21 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 20 AS parent_id, 15.922558108080853 AS "Estimator" FROM DUAL UNION ALL SELECT 22 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 20 AS parent_id, 16.324769596540094 AS "Estimator" FROM DUAL UNION ALL SELECT 23 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 15 AS parent_id, 12.109886588685944 AS "Estimator" FROM DUAL UNION ALL SELECT 24 AS node_id, 'Feature_8' AS feature, 0.40261632204055786 AS threshold, 2 AS count, 2 AS depth, 14 AS parent_id, 22.974976926596124 AS "Estimator" FROM DUAL UNION ALL SELECT 25 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 24 AS parent_id, 25.24805848092261 AS "Estimator" FROM DUAL UNION ALL SELECT 26 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 24 AS parent_id, 20.70189537226964 AS "Estimator" FROM DUAL) "Values"), 
"DT_Output_5" AS 
(SELECT "DT_node_lookup_5"."KEY" AS "KEY", "DT_node_lookup_5".node_id_2 AS node_id_2, "DT_node_data_5".node_id AS node_id, "DT_node_data_5".feature AS feature, "DT_node_data_5".threshold AS threshold, "DT_node_data_5".count AS count, "DT_node_data_5".depth AS depth, "DT_node_data_5".parent_id AS parent_id, "DT_node_data_5"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_5" LEFT OUTER JOIN "DT_node_data_5" ON "DT_node_lookup_5".node_id_2 = "DT_node_data_5".node_id), 
"BAG_Tree_5" AS 
(SELECT "DT_Output_5"."KEY" AS "KEY", "DT_Output_5"."Estimator" AS "Estimator" 
FROM "DT_Output_5"), 
"DT_node_lookup_6" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_3" <= 0.47112029790878296) THEN CASE WHEN ("ADS"."Feature_1" <= 0.37322112917900085) THEN CASE WHEN ("ADS"."Feature_3" <= 0.2525002956390381) THEN CASE WHEN ("ADS"."Feature_1" <= 0.20434242486953735) THEN 4 ELSE 5 END ELSE 6 END ELSE CASE WHEN ("ADS"."Feature_0" <= 0.6195900440216064) THEN CASE WHEN ("ADS"."Feature_2" <= 0.8107342720031738) THEN 9 ELSE 10 END ELSE 11 END END ELSE CASE WHEN ("ADS"."Feature_8" <= 0.27962636947631836) THEN 13 ELSE CASE WHEN ("ADS"."Feature_1" <= 0.023111313581466675) THEN CASE WHEN ("ADS"."Feature_6" <= 0.30342745780944824) THEN 16 ELSE 17 END ELSE CASE WHEN ("ADS"."Feature_8" <= 0.3411468267440796) THEN 19 ELSE CASE WHEN ("ADS"."Feature_4" <= 0.9417369365692139) THEN 21 ELSE 22 END END END END END AS node_id_2 
FROM freidman1 "ADS"), 
"DT_node_data_6" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 0 AS node_id, 'Feature_3' AS feature, 0.47112029790878296 AS threshold, 16 AS count, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 14.17513719699392 AS "Estimator" FROM DUAL UNION ALL SELECT 1 AS node_id, 'Feature_1' AS feature, 0.37322112917900085 AS threshold, 6 AS count, 1 AS depth, 0 AS parent_id, 8.427121010157812 AS "Estimator" FROM DUAL UNION ALL SELECT 2 AS node_id, 'Feature_3' AS feature, 0.2525002956390381 AS threshold, 3 AS count, 2 AS depth, 1 AS parent_id, 6.427677944581213 AS "Estimator" FROM DUAL UNION ALL SELECT 3 AS node_id, 'Feature_1' AS feature, 0.20434242486953735 AS threshold, 2 AS count, 3 AS depth, 2 AS parent_id, 6.065177763761817 AS "Estimator" FROM DUAL UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 3 AS parent_id, 6.245710248632148 AS "Estimator" FROM DUAL UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 3 AS parent_id, 5.794379036456321 AS "Estimator" FROM DUAL UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 2 AS parent_id, 8.240178848678195 AS "Estimator" FROM DUAL UNION ALL SELECT 7 AS node_id, 'Feature_0' AS feature, 0.6195900440216064 AS threshold, 3 AS count, 2 AS depth, 1 AS parent_id, 11.42628560852271 AS "Estimator" FROM DUAL UNION ALL SELECT 8 AS node_id, 'Feature_2' AS feature, 0.8107342720031738 AS threshold, 2 AS count, 3 AS depth, 7 AS parent_id, 9.999540150700241 AS "Estimator" FROM DUAL UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 8 AS parent_id, 10.131789617052231 AS "Estimator" FROM DUAL UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 8 AS parent_id, 9.735041217996262 AS "Estimator" FROM DUAL UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 7 AS parent_id, 15.706521981990113 AS "Estimator" FROM DUAL UNION ALL SELECT 12 AS node_id, 'Feature_8' AS feature, 0.27962636947631836 AS threshold, 10 AS count, 1 AS depth, 0 AS parent_id, 18.007147988217987 AS "Estimator" FROM DUAL UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 2 AS depth, 12 AS parent_id, 25.24805848092261 AS "Estimator" FROM DUAL UNION ALL SELECT 14 AS node_id, 'Feature_1' AS feature, 0.023111313581466675 AS threshold, 9 AS count, 2 AS depth, 12 AS parent_id, 16.196920365041834 AS "Estimator" FROM DUAL UNION ALL SELECT 15 AS node_id, 'Feature_6' AS feature, 0.30342745780944824 AS threshold, 2 AS count, 3 AS depth, 14 AS parent_id, 11.473955425900149 AS "Estimator" FROM DUAL UNION ALL SELECT 16 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 15 AS parent_id, 12.109886588685942 AS "Estimator" FROM DUAL UNION ALL SELECT 17 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 15 AS parent_id, 10.20209310032856 AS "Estimator" FROM DUAL UNION ALL SELECT 18 AS node_id, 'Feature_8' AS feature, 0.3411468267440796 AS threshold, 7 AS count, 3 AS depth, 14 AS parent_id, 17.77124201142239 AS "Estimator" FROM DUAL UNION ALL SELECT 19 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 18 AS parent_id, 15.922558108080853 AS "Estimator" FROM DUAL UNION ALL SELECT 20 AS node_id, 'Feature_4' AS feature, 0.9417369365692139 AS threshold, 6 AS count, 4 AS depth, 18 AS parent_id, 18.002327499340087 AS "Estimator" FROM DUAL UNION ALL SELECT 21 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS count, 5 AS depth, 20 AS parent_id, 18.241978628311514 AS "Estimator" FROM DUAL UNION ALL SELECT 22 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 20 AS parent_id, 16.324769596540094 AS "Estimator" FROM DUAL) "Values"), 
"DT_Output_6" AS 
(SELECT "DT_node_lookup_6"."KEY" AS "KEY", "DT_node_lookup_6".node_id_2 AS node_id_2, "DT_node_data_6".node_id AS node_id, "DT_node_data_6".feature AS feature, "DT_node_data_6".threshold AS threshold, "DT_node_data_6".count AS count, "DT_node_data_6".depth AS depth, "DT_node_data_6".parent_id AS parent_id, "DT_node_data_6"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_6" LEFT OUTER JOIN "DT_node_data_6" ON "DT_node_lookup_6".node_id_2 = "DT_node_data_6".node_id), 
"BAG_Tree_6" AS 
(SELECT "DT_Output_6"."KEY" AS "KEY", "DT_Output_6"."Estimator" AS "Estimator" 
FROM "DT_Output_6"), 
"DT_node_lookup_7" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_3" <= 0.8238719701766968) THEN CASE WHEN ("ADS"."Feature_3" <= 0.08861841261386871) THEN CASE WHEN ("ADS"."Feature_1" <= 0.4467318058013916) THEN CASE WHEN ("ADS"."Feature_3" <= 0.05130735784769058) THEN 4 ELSE CASE WHEN ("ADS"."Feature_3" <= 0.07915603369474411) THEN 6 ELSE 7 END END ELSE 8 END ELSE CASE WHEN ("ADS"."Feature_1" <= 0.17868603765964508) THEN CASE WHEN ("ADS"."Feature_4" <= 0.5472537875175476) THEN CASE WHEN ("ADS"."Feature_2" <= 0.6251851320266724) THEN 12 ELSE 13 END ELSE 14 END ELSE CASE WHEN ("ADS"."Feature_7" <= 0.6353718042373657) THEN CASE WHEN ("ADS"."Feature_2" <= 0.8035730123519897) THEN 17 ELSE 18 END ELSE CASE WHEN ("ADS"."Feature_2" <= 0.8272997736930847) THEN 20 ELSE 21 END END END END ELSE CASE WHEN ("ADS"."Feature_5" <= 0.939079999923706) THEN CASE WHEN ("ADS"."Feature_0" <= 0.705794095993042) THEN 24 ELSE 25 END ELSE 26 END END AS node_id_2 
FROM freidman1 "ADS"), 
"DT_node_data_7" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 0 AS node_id, 'Feature_3' AS feature, 0.8238719701766968 AS threshold, 18 AS count, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 14.53713801942297 AS "Estimator" FROM DUAL UNION ALL SELECT 1 AS node_id, 'Feature_3' AS feature, 0.08861841261386871 AS threshold, 15 AS count, 1 AS depth, 0 AS parent_id, 13.035081750284425 AS "Estimator" FROM DUAL UNION ALL SELECT 2 AS node_id, 'Feature_1' AS feature, 0.4467318058013916 AS threshold, 4 AS count, 2 AS depth, 1 AS parent_id, 6.866290725860626 AS "Estimator" FROM DUAL UNION ALL SELECT 3 AS node_id, 'Feature_3' AS feature, 0.05130735784769058 AS threshold, 3 AS count, 3 AS depth, 2 AS parent_id, 5.777791095463425 AS "Estimator" FROM DUAL UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 3 AS parent_id, 5.293284001301807 AS "Estimator" FROM DUAL UNION ALL SELECT 5 AS node_id, 'Feature_3' AS feature, 0.07915603369474411 AS threshold, 2 AS count, 4 AS depth, 3 AS parent_id, 6.020044642544235 AS "Estimator" FROM DUAL UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 5 AS parent_id, 5.794379036456321 AS "Estimator" FROM DUAL UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 5 AS parent_id, 6.2457102486321485 AS "Estimator" FROM DUAL UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 2 AS parent_id, 10.131789617052231 AS "Estimator" FROM DUAL UNION ALL SELECT 9 AS node_id, 'Feature_1' AS feature, 0.17868603765964508 AS threshold, 11 AS count, 2 AS depth, 1 AS parent_id, 14.486561991325317 AS "Estimator" FROM DUAL UNION ALL SELECT 10 AS node_id, 'Feature_4' AS feature, 0.5472537875175476 AS threshold, 3 AS count, 3 AS depth, 9 AS parent_id, 10.829004135898858 AS "Estimator" FROM DUAL UNION ALL SELECT 11 AS node_id, 'Feature_2' AS feature, 0.6251851320266724 AS threshold, 2 AS count, 4 AS depth, 10 AS parent_id, 9.548121683111772 AS "Estimator" FROM DUAL UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 11 AS parent_id, 8.240178848678195 AS "Estimator" FROM DUAL UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 11 AS parent_id, 10.20209310032856 AS "Estimator" FROM DUAL UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 10 AS parent_id, 12.109886588685944 AS "Estimator" FROM DUAL UNION ALL SELECT 15 AS node_id, 'Feature_7' AS feature, 0.6353718042373657 AS threshold, 8 AS count, 3 AS depth, 9 AS parent_id, 16.48159354883066 AS "Estimator" FROM DUAL UNION ALL SELECT 16 AS node_id, 'Feature_2' AS feature, 0.8035730123519897 AS threshold, 4 AS count, 4 AS depth, 15 AS parent_id, 17.834661190292444 AS "Estimator" FROM DUAL UNION ALL SELECT 17 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 5 AS depth, 16 AS parent_id, 18.250471781241558 AS "Estimator" FROM DUAL UNION ALL SELECT 18 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 5 AS depth, 16 AS parent_id, 17.418850599343326 AS "Estimator" FROM DUAL UNION ALL SELECT 19 AS node_id, 'Feature_2' AS feature, 0.8272997736930847 AS threshold, 4 AS count, 4 AS depth, 15 AS parent_id, 15.708412039423928 AS "Estimator" FROM DUAL UNION ALL SELECT 20 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 5 AS depth, 19 AS parent_id, 15.984616562203685 AS "Estimator" FROM DUAL UNION ALL SELECT 21 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 19 AS parent_id, 14.051184902745373 AS "Estimator" FROM DUAL UNION ALL SELECT 22 AS node_id, 'Feature_5' AS feature, 0.939079999923706 AS threshold, 3 AS count, 1 AS depth, 0 AS parent_id, 22.42293343240035 AS "Estimator" FROM DUAL UNION ALL SELECT 23 AS node_id, 'Feature_0' AS feature, 0.705794095993042 AS threshold, 2 AS count, 2 AS depth, 22 AS parent_id, 19.597808383878082 AS "Estimator" FROM DUAL UNION ALL SELECT 24 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 23 AS parent_id, 18.493721395486528 AS "Estimator" FROM DUAL UNION ALL SELECT 25 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 23 AS parent_id, 20.70189537226964 AS "Estimator" FROM DUAL UNION ALL SELECT 26 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 2 AS depth, 22 AS parent_id, 25.24805848092261 AS "Estimator" FROM DUAL) "Values"), 
"DT_Output_7" AS 
(SELECT "DT_node_lookup_7"."KEY" AS "KEY", "DT_node_lookup_7".node_id_2 AS node_id_2, "DT_node_data_7".node_id AS node_id, "DT_node_data_7".feature AS feature, "DT_node_data_7".threshold AS threshold, "DT_node_data_7".count AS count, "DT_node_data_7".depth AS depth, "DT_node_data_7".parent_id AS parent_id, "DT_node_data_7"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_7" LEFT OUTER JOIN "DT_node_data_7" ON "DT_node_lookup_7".node_id_2 = "DT_node_data_7".node_id), 
"BAG_Tree_7" AS 
(SELECT "DT_Output_7"."KEY" AS "KEY", "DT_Output_7"."Estimator" AS "Estimator" 
FROM "DT_Output_7"), 
"DT_node_lookup_8" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_3" <= 0.6226211786270142) THEN CASE WHEN ("ADS"."Feature_1" <= 0.4244970679283142) THEN CASE WHEN ("ADS"."Feature_8" <= 0.6567103266716003) THEN CASE WHEN ("ADS"."Feature_1" <= 0.3780941963195801) THEN CASE WHEN ("ADS"."Feature_3" <= 0.13574287295341492) THEN 5 ELSE 6 END ELSE 7 END ELSE 8 END ELSE CASE WHEN ("ADS"."Feature_8" <= 0.7836771011352539) THEN CASE WHEN ("ADS"."Feature_1" <= 0.5888786315917969) THEN CASE WHEN ("ADS"."Feature_6" <= 0.4331263303756714) THEN 12 ELSE 13 END ELSE 14 END ELSE 15 END END ELSE CASE WHEN ("ADS"."Feature_1" <= 0.5572118163108826) THEN CASE WHEN ("ADS"."Feature_1" <= 0.27081388235092163) THEN 18 ELSE CASE WHEN ("ADS"."Feature_4" <= 0.4900086522102356) THEN 20 ELSE 21 END END ELSE 22 END END AS node_id_2 
FROM freidman1 "ADS"), 
"DT_node_data_8" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 0 AS node_id, 'Feature_3' AS feature, 0.6226211786270142 AS threshold, 14 AS count, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 13.410457747525916 AS "Estimator" FROM DUAL UNION ALL SELECT 1 AS node_id, 'Feature_1' AS feature, 0.4244970679283142 AS threshold, 10 AS count, 1 AS depth, 0 AS parent_id, 10.070337450107138 AS "Estimator" FROM DUAL UNION ALL SELECT 2 AS node_id, 'Feature_8' AS feature, 0.6567103266716003 AS threshold, 6 AS count, 2 AS depth, 1 AS parent_id, 8.256809590774106 AS "Estimator" FROM DUAL UNION ALL SELECT 3 AS node_id, 'Feature_1' AS feature, 0.3780941963195801 AS threshold, 5 AS count, 3 AS depth, 2 AS parent_id, 7.486194191191737 AS "Estimator" FROM DUAL UNION ALL SELECT 4 AS node_id, 'Feature_3' AS feature, 0.13574287295341492 AS threshold, 4 AS count, 4 AS depth, 3 AS parent_id, 6.522402608275512 AS "Estimator" FROM DUAL UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 5 AS depth, 4 AS parent_id, 5.6107594170785875 AS "Estimator" FROM DUAL UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 5 AS depth, 4 AS parent_id, 7.206135001673205 AS "Estimator" FROM DUAL UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 3 AS parent_id, 9.735041217996262 AS "Estimator" FROM DUAL UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 2 AS parent_id, 12.109886588685942 AS "Estimator" FROM DUAL UNION ALL SELECT 9 AS node_id, 'Feature_8' AS feature, 0.7836771011352539 AS threshold, 4 AS count, 2 AS depth, 1 AS parent_id, 15.510921028106239 AS "Estimator" FROM DUAL UNION ALL SELECT 10 AS node_id, 'Feature_1' AS feature, 0.5888786315917969 AS threshold, 3 AS count, 3 AS depth, 9 AS parent_id, 17.30396483179091 AS "Estimator" FROM DUAL UNION ALL SELECT 11 AS node_id, 'Feature_6' AS feature, 0.4331263303756714 AS threshold, 2 AS count, 4 AS depth, 10 AS parent_id, 18.102686256691307 AS "Estimator" FROM DUAL UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 11 AS parent_id, 18.2506955183825 AS "Estimator" FROM DUAL UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 11 AS parent_id, 17.954676995000113 AS "Estimator" FROM DUAL UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 10 AS parent_id, 15.706521981990113 AS "Estimator" FROM DUAL UNION ALL SELECT 15 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 9 AS parent_id, 10.131789617052231 AS "Estimator" FROM DUAL UNION ALL SELECT 16 AS node_id, 'Feature_1' AS feature, 0.5572118163108826 AS threshold, 4 AS count, 1 AS depth, 0 AS parent_id, 19.34844938738152 AS "Estimator" FROM DUAL UNION ALL SELECT 17 AS node_id, 'Feature_1' AS feature, 0.27081388235092163 AS threshold, 3 AS count, 2 AS depth, 16 AS parent_id, 16.398644840610977 AS "Estimator" FROM DUAL UNION ALL SELECT 18 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 17 AS parent_id, 14.051184902745373 AS "Estimator" FROM DUAL UNION ALL SELECT 19 AS node_id, 'Feature_4' AS feature, 0.4900086522102356 AS threshold, 2 AS count, 3 AS depth, 17 AS parent_id, 17.57237480954378 AS "Estimator" FROM DUAL UNION ALL SELECT 20 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 19 AS parent_id, 17.31914707358036 AS "Estimator" FROM DUAL UNION ALL SELECT 21 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 19 AS parent_id, 18.332058017434036 AS "Estimator" FROM DUAL UNION ALL SELECT 22 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 2 AS depth, 16 AS parent_id, 25.24805848092261 AS "Estimator" FROM DUAL) "Values"), 
"DT_Output_8" AS 
(SELECT "DT_node_lookup_8"."KEY" AS "KEY", "DT_node_lookup_8".node_id_2 AS node_id_2, "DT_node_data_8".node_id AS node_id, "DT_node_data_8".feature AS feature, "DT_node_data_8".threshold AS threshold, "DT_node_data_8".count AS count, "DT_node_data_8".depth AS depth, "DT_node_data_8".parent_id AS parent_id, "DT_node_data_8"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_8" LEFT OUTER JOIN "DT_node_data_8" ON "DT_node_lookup_8".node_id_2 = "DT_node_data_8".node_id), 
"BAG_Tree_8" AS 
(SELECT "DT_Output_8"."KEY" AS "KEY", "DT_Output_8"."Estimator" AS "Estimator" 
FROM "DT_Output_8"), 
"DT_node_lookup_9" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_3" <= 0.08861841261386871) THEN CASE WHEN ("ADS"."Feature_5" <= 0.23939915001392365) THEN CASE WHEN ("ADS"."Feature_8" <= 0.651637077331543) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_2" <= 0.5338698625564575) THEN 6 ELSE CASE WHEN ("ADS"."Feature_5" <= 0.3785055875778198) THEN 8 ELSE 9 END END END ELSE CASE WHEN ("ADS"."Feature_0" <= 0.290882408618927) THEN CASE WHEN ("ADS"."Feature_7" <= 0.7584426403045654) THEN 12 ELSE CASE WHEN ("ADS"."Feature_8" <= 0.5230566263198853) THEN 14 ELSE 15 END END ELSE CASE WHEN ("ADS"."Feature_9" <= 0.499942809343338) THEN CASE WHEN ("ADS"."Feature_9" <= 0.23020994663238525) THEN 18 ELSE CASE WHEN ("ADS"."Feature_8" <= 0.7046875953674316) THEN 20 ELSE 21 END END ELSE CASE WHEN ("ADS"."Feature_1" <= 0.4702685475349426) THEN CASE WHEN ("ADS"."Feature_5" <= 0.579892098903656) THEN 24 ELSE 25 END ELSE CASE WHEN ("ADS"."Feature_0" <= 0.5380929708480835) THEN 27 ELSE 28 END END END END END AS node_id_2 
FROM freidman1 "ADS"), 
"DT_node_data_9" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 0 AS node_id, 'Feature_3' AS feature, 0.08861841261386871 AS threshold, 17 AS count, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 14.45356170130388 AS "Estimator" FROM DUAL UNION ALL SELECT 1 AS node_id, 'Feature_5' AS feature, 0.23939915001392365 AS threshold, 5 AS count, 1 AS depth, 0 AS parent_id, 7.165763859649182 AS "Estimator" FROM DUAL UNION ALL SELECT 2 AS node_id, 'Feature_8' AS feature, 0.651637077331543 AS threshold, 2 AS count, 2 AS depth, 1 AS parent_id, 9.933415417524246 AS "Estimator" FROM DUAL UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 2 AS parent_id, 9.735041217996262 AS "Estimator" FROM DUAL UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 2 AS parent_id, 10.131789617052231 AS "Estimator" FROM DUAL UNION ALL SELECT 5 AS node_id, 'Feature_2' AS feature, 0.5338698625564575 AS threshold, 3 AS count, 2 AS depth, 1 AS parent_id, 5.781938080711649 AS "Estimator" FROM DUAL UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 5 AS parent_id, 5.293284001301807 AS "Estimator" FROM DUAL UNION ALL SELECT 7 AS node_id, 'Feature_5' AS feature, 0.3785055875778198 AS threshold, 2 AS count, 3 AS depth, 5 AS parent_id, 5.944822773848263 AS "Estimator" FROM DUAL UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 7 AS parent_id, 5.794379036456321 AS "Estimator" FROM DUAL UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 7 AS parent_id, 6.2457102486321485 AS "Estimator" FROM DUAL UNION ALL SELECT 10 AS node_id, 'Feature_0' AS feature, 0.290882408618927 AS threshold, 12 AS count, 1 AS depth, 0 AS parent_id, 16.75497154603694 AS "Estimator" FROM DUAL UNION ALL SELECT 11 AS node_id, 'Feature_7' AS feature, 0.7584426403045654 AS threshold, 3 AS count, 2 AS depth, 10 AS parent_id, 11.64131442302211 AS "Estimator" FROM DUAL UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 11 AS parent_id, 10.20209310032856 AS "Estimator" FROM DUAL UNION ALL SELECT 13 AS node_id, 'Feature_8' AS feature, 0.5230566263198853 AS threshold, 2 AS count, 3 AS depth, 11 AS parent_id, 13.080535745715657 AS "Estimator" FROM DUAL UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 13 AS parent_id, 14.051184902745373 AS "Estimator" FROM DUAL UNION ALL SELECT 15 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 13 AS parent_id, 12.109886588685942 AS "Estimator" FROM DUAL UNION ALL SELECT 16 AS node_id, 'Feature_9' AS feature, 0.499942809343338 AS threshold, 9 AS count, 2 AS depth, 10 AS parent_id, 18.118613445507563 AS "Estimator" FROM DUAL UNION ALL SELECT 17 AS node_id, 'Feature_9' AS feature, 0.23020994663238525 AS threshold, 3 AS count, 3 AS depth, 16 AS parent_id, 16.42312263888011 AS "Estimator" FROM DUAL UNION ALL SELECT 18 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 17 AS parent_id, 17.954676995000113 AS "Estimator" FROM DUAL UNION ALL SELECT 19 AS node_id, 'Feature_8' AS feature, 0.7046875953674316 AS threshold, 2 AS count, 4 AS depth, 17 AS parent_id, 15.91260452017344 AS "Estimator" FROM DUAL UNION ALL SELECT 20 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 19 AS parent_id, 16.324769596540094 AS "Estimator" FROM DUAL UNION ALL SELECT 21 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 19 AS parent_id, 15.706521981990113 AS "Estimator" FROM DUAL UNION ALL SELECT 22 AS node_id, 'Feature_1' AS feature, 0.4702685475349426 AS threshold, 6 AS count, 3 AS depth, 16 AS parent_id, 18.735155557008458 AS "Estimator" FROM DUAL UNION ALL SELECT 23 AS node_id, 'Feature_5' AS feature, 0.579892098903656 AS threshold, 4 AS count, 4 AS depth, 22 AS parent_id, 18.09049720700598 AS "Estimator" FROM DUAL UNION ALL SELECT 24 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 23 AS parent_id, 17.31914707358036 AS "Estimator" FROM DUAL UNION ALL SELECT 25 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 5 AS depth, 23 AS parent_id, 18.347613918147854 AS "Estimator" FROM DUAL UNION ALL SELECT 26 AS node_id, 'Feature_0' AS feature, 0.5380929708480835 AS threshold, 2 AS count, 4 AS depth, 22 AS parent_id, 20.454244490348405 AS "Estimator" FROM DUAL UNION ALL SELECT 27 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 26 AS parent_id, 19.95894272650593 AS "Estimator" FROM DUAL UNION ALL SELECT 28 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 26 AS parent_id, 20.70189537226964 AS "Estimator" FROM DUAL) "Values"), 
"DT_Output_9" AS 
(SELECT "DT_node_lookup_9"."KEY" AS "KEY", "DT_node_lookup_9".node_id_2 AS node_id_2, "DT_node_data_9".node_id AS node_id, "DT_node_data_9".feature AS feature, "DT_node_data_9".threshold AS threshold, "DT_node_data_9".count AS count, "DT_node_data_9".depth AS depth, "DT_node_data_9".parent_id AS parent_id, "DT_node_data_9"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_9" LEFT OUTER JOIN "DT_node_data_9" ON "DT_node_lookup_9".node_id_2 = "DT_node_data_9".node_id), 
"BAG_Tree_9" AS 
(SELECT "DT_Output_9"."KEY" AS "KEY", "DT_Output_9"."Estimator" AS "Estimator" 
FROM "DT_Output_9"), 
"Score_Union_CTE" AS 
(SELECT ensemble_score_union."KEY" AS "KEY", ensemble_score_union."Estimator" AS "Estimator" 
FROM (SELECT "BAG_Tree_0"."KEY" AS "KEY", "BAG_Tree_0"."Estimator" AS "Estimator" 
FROM "BAG_Tree_0" UNION ALL SELECT "BAG_Tree_1"."KEY" AS "KEY", "BAG_Tree_1"."Estimator" AS "Estimator" 
FROM "BAG_Tree_1" UNION ALL SELECT "BAG_Tree_2"."KEY" AS "KEY", "BAG_Tree_2"."Estimator" AS "Estimator" 
FROM "BAG_Tree_2" UNION ALL SELECT "BAG_Tree_3"."KEY" AS "KEY", "BAG_Tree_3"."Estimator" AS "Estimator" 
FROM "BAG_Tree_3" UNION ALL SELECT "BAG_Tree_4"."KEY" AS "KEY", "BAG_Tree_4"."Estimator" AS "Estimator" 
FROM "BAG_Tree_4" UNION ALL SELECT "BAG_Tree_5"."KEY" AS "KEY", "BAG_Tree_5"."Estimator" AS "Estimator" 
FROM "BAG_Tree_5" UNION ALL SELECT "BAG_Tree_6"."KEY" AS "KEY", "BAG_Tree_6"."Estimator" AS "Estimator" 
FROM "BAG_Tree_6" UNION ALL SELECT "BAG_Tree_7"."KEY" AS "KEY", "BAG_Tree_7"."Estimator" AS "Estimator" 
FROM "BAG_Tree_7" UNION ALL SELECT "BAG_Tree_8"."KEY" AS "KEY", "BAG_Tree_8"."Estimator" AS "Estimator" 
FROM "BAG_Tree_8" UNION ALL SELECT "BAG_Tree_9"."KEY" AS "KEY", "BAG_Tree_9"."Estimator" AS "Estimator" 
FROM "BAG_Tree_9") ensemble_score_union), 
"BAG_AVG_Scores" AS 
(SELECT "T"."KEY" AS "KEY", "T"."Estimator" AS "Estimator" 
FROM (SELECT "Score_Union_CTE"."KEY" AS "KEY", avg("Score_Union_CTE"."Estimator") AS "Estimator" 
FROM "Score_Union_CTE" GROUP BY "Score_Union_CTE"."KEY") "T")
 SELECT "BAG_AVG_Scores"."KEY" AS "KEY", "BAG_AVG_Scores"."Estimator" AS "Estimator" 
FROM "BAG_AVG_Scores"