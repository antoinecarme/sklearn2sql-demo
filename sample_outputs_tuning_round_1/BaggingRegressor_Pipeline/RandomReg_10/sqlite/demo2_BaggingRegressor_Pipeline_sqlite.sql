-- This SQL code was generated by sklearn2sql (development version).
-- Copyright 2017

WITH "ADS_imp_1_OUT" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_0" IS NULL) THEN 0.0810083160112 ELSE "ADS"."Feature_0" END AS impter_2, CASE WHEN ("ADS"."Feature_1" IS NULL) THEN -0.269250048034 ELSE "ADS"."Feature_1" END AS impter_3, CASE WHEN ("ADS"."Feature_2" IS NULL) THEN 0.240487763101 ELSE "ADS"."Feature_2" END AS impter_4, CASE WHEN ("ADS"."Feature_3" IS NULL) THEN 0.142604128589 ELSE "ADS"."Feature_3" END AS impter_5, CASE WHEN ("ADS"."Feature_4" IS NULL) THEN 0.183572350866 ELSE "ADS"."Feature_4" END AS impter_6, CASE WHEN ("ADS"."Feature_5" IS NULL) THEN 0.173548954209 ELSE "ADS"."Feature_5" END AS impter_7, CASE WHEN ("ADS"."Feature_6" IS NULL) THEN 0.126298254061 ELSE "ADS"."Feature_6" END AS impter_8, CASE WHEN ("ADS"."Feature_7" IS NULL) THEN 0.360628810671 ELSE "ADS"."Feature_7" END AS impter_9, CASE WHEN ("ADS"."Feature_8" IS NULL) THEN -0.51115301513 ELSE "ADS"."Feature_8" END AS impter_10, CASE WHEN ("ADS"."Feature_9" IS NULL) THEN 0.203356397123 ELSE "ADS"."Feature_9" END AS impter_11 
FROM "RandomReg_10" AS "ADS"), 
"ADS_sca_2_OUT" AS 
(SELECT "ADS_imp_1_OUT"."KEY" AS "KEY", (CAST("ADS_imp_1_OUT".impter_2 AS FLOAT) - 0.0810083160112) / 0.90949713658 AS scaler_2, (CAST("ADS_imp_1_OUT".impter_3 AS FLOAT) - -0.269250048034) / 0.992426738719 AS scaler_3, (CAST("ADS_imp_1_OUT".impter_4 AS FLOAT) - 0.240487763101) / 0.759956724432 AS scaler_4, (CAST("ADS_imp_1_OUT".impter_5 AS FLOAT) - 0.142604128589) / 1.0926864622 AS scaler_5, (CAST("ADS_imp_1_OUT".impter_6 AS FLOAT) - 0.183572350866) / 1.05658801775 AS scaler_6, (CAST("ADS_imp_1_OUT".impter_7 AS FLOAT) - 0.173548954209) / 0.786365993461 AS scaler_7, (CAST("ADS_imp_1_OUT".impter_8 AS FLOAT) - 0.126298254061) / 1.3847124245 AS scaler_8, (CAST("ADS_imp_1_OUT".impter_9 AS FLOAT) - 0.360628810671) / 0.940597350833 AS scaler_9, (CAST("ADS_imp_1_OUT".impter_10 AS FLOAT) - -0.51115301513) / 1.18193438252 AS scaler_10, (CAST("ADS_imp_1_OUT".impter_11 AS FLOAT) - 0.203356397123) / 0.6906744839 AS scaler_11 
FROM "ADS_imp_1_OUT"), 
"DT_node_lookup" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_4 <= 0.07510147988796234) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_11 <= 0.8804625272750854) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_2 <= -0.28214558959007263) THEN 3 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_3 <= 0.4883303642272949) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_11 <= 0.20885248482227325) THEN 6 ELSE 7 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_8 <= 0.91801917552948) THEN 9 ELSE 10 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_9 <= -0.6531475186347961) THEN 12 ELSE 13 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_11 <= -0.6011638641357422) THEN 15 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_6 <= 0.2880640923976898) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_10 <= 0.46763527393341064) THEN 18 ELSE 19 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_2 <= -0.9647277593612671) THEN 21 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_10 <= 0.9625579714775085) THEN 23 ELSE 24 END END END END END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 0 AS node_id, 'scaler_4' AS feature, 0.07510147988796234 AS threshold, 15 AS count, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 55.67372738660818 AS "Estimator" UNION ALL SELECT 1 AS node_id, 'scaler_11' AS feature, 0.8804625272750854 AS threshold, 9 AS count, 1 AS depth, 0 AS parent_id, -124.25620202652395 AS "Estimator" UNION ALL SELECT 2 AS node_id, 'scaler_2' AS feature, -0.28214558959007263 AS threshold, 7 AS count, 2 AS depth, 1 AS parent_id, -57.53459696454271 AS "Estimator" UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 2 AS parent_id, -181.5117298102302 AS "Estimator" UNION ALL SELECT 4 AS node_id, 'scaler_3' AS feature, 0.4883303642272949 AS threshold, 6 AS count, 3 AS depth, 2 AS parent_id, -43.75935998168855 AS "Estimator" UNION ALL SELECT 5 AS node_id, 'scaler_11' AS feature, 0.20885248482227325 AS threshold, 3 AS count, 4 AS depth, 4 AS parent_id, -25.914391593610596 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 5 AS depth, 5 AS parent_id, -33.162011695061665 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 5 AS parent_id, 3.0760888121936603 AS "Estimator" UNION ALL SELECT 8 AS node_id, 'scaler_8' AS feature, 0.91801917552948 AS threshold, 3 AS count, 4 AS depth, 4 AS parent_id, -66.06557046678597 AS "Estimator" UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 5 AS depth, 8 AS parent_id, -51.764009207950075 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 8 AS parent_id, -80.36713172562187 AS "Estimator" UNION ALL SELECT 11 AS node_id, 'scaler_9' AS feature, -0.6531475186347961 AS threshold, 2 AS count, 2 AS depth, 1 AS parent_id, -291.0602146814771 AS "Estimator" UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 11 AS parent_id, -351.3842930876292 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 11 AS parent_id, -230.736136275325 AS "Estimator" UNION ALL SELECT 14 AS node_id, 'scaler_11' AS feature, -0.6011638641357422 AS threshold, 6 AS count, 1 AS depth, 0 AS parent_id, 284.67545573059454 AS "Estimator" UNION ALL SELECT 15 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 2 AS depth, 14 AS parent_id, 37.34665341388054 AS "Estimator" UNION ALL SELECT 16 AS node_id, 'scaler_6' AS feature, 0.2880640923976898 AS threshold, 5 AS count, 2 AS depth, 14 AS parent_id, 309.408335962266 AS "Estimator" UNION ALL SELECT 17 AS node_id, 'scaler_10' AS feature, 0.46763527393341064 AS threshold, 2 AS count, 3 AS depth, 16 AS parent_id, 263.2704249925645 AS "Estimator" UNION ALL SELECT 18 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 17 AS parent_id, 277.9812845098006 AS "Estimator" UNION ALL SELECT 19 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 17 AS parent_id, 248.55956547532833 AS "Estimator" UNION ALL SELECT 20 AS node_id, 'scaler_2' AS feature, -0.9647277593612671 AS threshold, 3 AS count, 3 AS depth, 16 AS parent_id, 340.1669432754003 AS "Estimator" UNION ALL SELECT 21 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 20 AS parent_id, 320.6826523308587 AS "Estimator" UNION ALL SELECT 22 AS node_id, 'scaler_10' AS feature, 0.9625579714775085 AS threshold, 2 AS count, 4 AS depth, 20 AS parent_id, 349.9090887476711 AS "Estimator" UNION ALL SELECT 23 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 22 AS parent_id, 349.4216823421892 AS "Estimator" UNION ALL SELECT 24 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 22 AS parent_id, 351.37130796411674 AS "Estimator") AS "Values"), 
"DT_Output" AS 
(SELECT "DT_node_lookup"."KEY" AS "KEY", "DT_node_lookup".node_id_2 AS node_id_2, "DT_node_data".node_id AS node_id, "DT_node_data".feature AS feature, "DT_node_data".threshold AS threshold, "DT_node_data".count AS count, "DT_node_data".depth AS depth, "DT_node_data".parent_id AS parent_id, "DT_node_data"."Estimator" AS "Estimator" 
FROM "DT_node_lookup" LEFT OUTER JOIN "DT_node_data" ON "DT_node_lookup".node_id_2 = "DT_node_data".node_id), 
"BAG_Tree_0" AS 
(SELECT "DT_Output"."KEY" AS "KEY", "DT_Output"."Estimator" AS "Estimator" 
FROM "DT_Output"), 
"DT_node_lookup_1" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_9 <= 1.060962200164795) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_3 <= -0.04094686359167099) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_2 <= 0.13113901019096375) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_2 <= -0.8275760412216187) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_6 <= -0.4576408565044403) THEN 5 ELSE 6 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_5 <= -1.069679856300354) THEN 8 ELSE 9 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_9 <= 0.29218950867652893) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_2 <= 0.7501744627952576) THEN 12 ELSE 13 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_4 <= 1.3897349834442139) THEN 15 ELSE 16 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_4 <= 0.06481076031923294) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_11 <= -0.06683248281478882) THEN 19 ELSE 20 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_8 <= -0.9564874172210693) THEN 22 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_11 <= 1.2683944702148438) THEN 24 ELSE 25 END END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_3 <= 0.452146053314209) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_4 <= 0.36171090602874756) THEN 28 ELSE 29 END ELSE 30 END END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_1" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 0 AS node_id, 'scaler_9' AS feature, 1.060962200164795 AS threshold, 16 AS count, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 69.27784082810544 AS "Estimator" UNION ALL SELECT 1 AS node_id, 'scaler_3' AS feature, -0.04094686359167099 AS threshold, 13 AS count, 1 AS depth, 0 AS parent_id, 8.994307823657742 AS "Estimator" UNION ALL SELECT 2 AS node_id, 'scaler_2' AS feature, 0.13113901019096375 AS threshold, 8 AS count, 2 AS depth, 1 AS parent_id, -65.91437362121154 AS "Estimator" UNION ALL SELECT 3 AS node_id, 'scaler_2' AS feature, -0.8275760412216187 AS threshold, 4 AS count, 3 AS depth, 2 AS parent_id, -213.82862999143452 AS "Estimator" UNION ALL SELECT 4 AS node_id, 'scaler_6' AS feature, -0.4576408565044403 AS threshold, 2 AS count, 4 AS depth, 3 AS parent_id, -117.86989724477809 AS "Estimator" UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 4 AS parent_id, -67.71218597426643 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 4 AS parent_id, -168.02760851528973 AS "Estimator" UNION ALL SELECT 7 AS node_id, 'scaler_5' AS feature, -1.069679856300354 AS threshold, 2 AS count, 4 AS depth, 3 AS parent_id, -309.787362738091 AS "Estimator" UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 7 AS parent_id, -351.3842930876292 AS "Estimator" UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 7 AS parent_id, -268.1904323885528 AS "Estimator" UNION ALL SELECT 10 AS node_id, 'scaler_9' AS feature, 0.29218950867652893 AS threshold, 4 AS count, 3 AS depth, 2 AS parent_id, -6.748671073122345 AS "Estimator" UNION ALL SELECT 11 AS node_id, 'scaler_2' AS feature, 0.7501744627952576 AS threshold, 2 AS count, 4 AS depth, 10 AS parent_id, -33.220346041191355 AS "Estimator" UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 11 AS parent_id, -33.10367734893197 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 11 AS parent_id, -33.337014733450744 AS "Estimator" UNION ALL SELECT 14 AS node_id, 'scaler_4' AS feature, 1.3897349834442139 AS threshold, 2 AS count, 4 AS depth, 10 AS parent_id, -0.13075233110509288 AS "Estimator" UNION ALL SELECT 15 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 14 AS parent_id, -9.185160907179679 AS "Estimator" UNION ALL SELECT 16 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 14 AS parent_id, 8.923656244969493 AS "Estimator" UNION ALL SELECT 17 AS node_id, 'scaler_4' AS feature, 0.06481076031923294 AS threshold, 5 AS count, 2 AS depth, 1 AS parent_id, 158.81167071339632 AS "Estimator" UNION ALL SELECT 18 AS node_id, 'scaler_11' AS feature, -0.06683248281478882 AS threshold, 2 AS count, 3 AS depth, 17 AS parent_id, -52.362192173310994 AS "Estimator" UNION ALL SELECT 19 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 18 AS parent_id, -49.96946031186734 AS "Estimator" UNION ALL SELECT 20 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 18 AS parent_id, -53.55855810403281 AS "Estimator" UNION ALL SELECT 21 AS node_id, 'scaler_8' AS feature, -0.9564874172210693 AS threshold, 3 AS count, 3 AS depth, 17 AS parent_id, 317.19206787842677 AS "Estimator" UNION ALL SELECT 22 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 21 AS parent_id, 277.9812845098006 AS "Estimator" UNION ALL SELECT 23 AS node_id, 'scaler_11' AS feature, 1.2683944702148438 AS threshold, 2 AS count, 4 AS depth, 21 AS parent_id, 330.2623290013022 AS "Estimator" UNION ALL SELECT 24 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 23 AS parent_id, 320.6826523308587 AS "Estimator" UNION ALL SELECT 25 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 23 AS parent_id, 349.42168234218923 AS "Estimator" UNION ALL SELECT 26 AS node_id, 'scaler_3' AS feature, 0.452146053314209 AS threshold, 3 AS count, 1 AS depth, 0 AS parent_id, 385.76638910145584 AS "Estimator" UNION ALL SELECT 27 AS node_id, 'scaler_4' AS feature, 0.36171090602874756 AS threshold, 2 AS count, 2 AS depth, 26 AS parent_id, 354.45278012043826 AS "Estimator" UNION ALL SELECT 28 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 27 AS parent_id, 360.61572443308125 AS "Estimator" UNION ALL SELECT 29 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 27 AS parent_id, 351.37130796411674 AS "Estimator" UNION ALL SELECT 30 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 2 AS depth, 26 AS parent_id, 479.70721604450864 AS "Estimator") AS "Values"), 
"DT_Output_1" AS 
(SELECT "DT_node_lookup_1"."KEY" AS "KEY", "DT_node_lookup_1".node_id_2 AS node_id_2, "DT_node_data_1".node_id AS node_id, "DT_node_data_1".feature AS feature, "DT_node_data_1".threshold AS threshold, "DT_node_data_1".count AS count, "DT_node_data_1".depth AS depth, "DT_node_data_1".parent_id AS parent_id, "DT_node_data_1"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_1" LEFT OUTER JOIN "DT_node_data_1" ON "DT_node_lookup_1".node_id_2 = "DT_node_data_1".node_id), 
"BAG_Tree_1" AS 
(SELECT "DT_Output_1"."KEY" AS "KEY", "DT_Output_1"."Estimator" AS "Estimator" 
FROM "DT_Output_1"), 
"DT_node_lookup_2" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_7 <= 0.12003344297409058) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_2 <= 0.2899431884288788) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_11 <= 1.504274845123291) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_9 <= 0.6784148812294006) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_9 <= -0.47801142930984497) THEN 5 ELSE 6 END ELSE 7 END ELSE 8 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_10 <= -0.4049757719039917) THEN 10 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_7 <= -1.6413459777832031) THEN 12 ELSE 13 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_5 <= 0.8105282783508301) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_10 <= 1.21342134475708) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_7 <= 0.47464117407798767) THEN 17 ELSE 18 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_10 <= 1.8219932317733765) THEN 20 ELSE 21 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_10 <= 0.5237506628036499) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_6 <= -0.08910587430000305) THEN 24 ELSE 25 END ELSE 26 END END END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_2" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 0 AS node_id, 'scaler_7' AS feature, 0.12003344297409058 AS threshold, 16 AS count, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, -15.10220096472055 AS "Estimator" UNION ALL SELECT 1 AS node_id, 'scaler_2' AS feature, 0.2899431884288788 AS threshold, 9 AS count, 1 AS depth, 0 AS parent_id, -162.1152249600922 AS "Estimator" UNION ALL SELECT 2 AS node_id, 'scaler_11' AS feature, 1.504274845123291 AS threshold, 6 AS count, 2 AS depth, 1 AS parent_id, -227.36880202483266 AS "Estimator" UNION ALL SELECT 3 AS node_id, 'scaler_9' AS feature, 0.6784148812294006 AS threshold, 5 AS count, 3 AS depth, 2 AS parent_id, -191.93580457831936 AS "Estimator" UNION ALL SELECT 4 AS node_id, 'scaler_9' AS feature, -0.47801142930984497 AS threshold, 4 AS count, 4 AS depth, 3 AS parent_id, -212.63974101232816 AS "Estimator" UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 5 AS depth, 4 AS parent_id, -182.0585803782554 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 5 AS depth, 4 AS parent_id, -243.2209016464009 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 3 AS parent_id, -67.71218597426643 AS "Estimator" UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 2 AS parent_id, -351.3842930876292 AS "Estimator" UNION ALL SELECT 9 AS node_id, 'scaler_10' AS feature, -0.4049757719039917 AS threshold, 3 AS count, 2 AS depth, 1 AS parent_id, -44.65878624355938 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 9 AS parent_id, -33.10367734893197 AS "Estimator" UNION ALL SELECT 11 AS node_id, 'scaler_7' AS feature, -1.6413459777832031 AS threshold, 2 AS count, 3 AS depth, 9 AS parent_id, -52.362192173310994 AS "Estimator" UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 11 AS parent_id, -53.55855810403281 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 11 AS parent_id, -49.96946031186734 AS "Estimator" UNION ALL SELECT 14 AS node_id, 'scaler_5' AS feature, 0.8105282783508301 AS threshold, 7 AS count, 1 AS depth, 0 AS parent_id, 172.00528412029792 AS "Estimator" UNION ALL SELECT 15 AS node_id, 'scaler_10' AS feature, 1.21342134475708 AS threshold, 4 AS count, 2 AS depth, 14 AS parent_id, 301.1812351942287 AS "Estimator" UNION ALL SELECT 16 AS node_id, 'scaler_7' AS feature, 0.47464117407798767 AS threshold, 2 AS count, 3 AS depth, 15 AS parent_id, 273.7750946920436 AS "Estimator" UNION ALL SELECT 17 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 16 AS parent_id, 349.42168234218923 AS "Estimator" UNION ALL SELECT 18 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 16 AS parent_id, 248.55956547532833 AS "Estimator" UNION ALL SELECT 19 AS node_id, 'scaler_10' AS feature, 1.8219932317733765 AS threshold, 2 AS count, 3 AS depth, 15 AS parent_id, 355.99351619859897 AS "Estimator" UNION ALL SELECT 20 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 19 AS parent_id, 351.37130796411674 AS "Estimator" UNION ALL SELECT 21 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 19 AS parent_id, 360.61572443308125 AS "Estimator" UNION ALL SELECT 22 AS node_id, 'scaler_10' AS feature, 0.5237506628036499 AS threshold, 3 AS count, 2 AS depth, 14 AS parent_id, 16.994142831580966 AS "Estimator" UNION ALL SELECT 23 AS node_id, 'scaler_6' AS feature, -0.08910587430000305 AS threshold, 2 AS count, 3 AS depth, 22 AS parent_id, 29.5769322228389 AS "Estimator" UNION ALL SELECT 24 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 23 AS parent_id, 26.98702515915835 AS "Estimator" UNION ALL SELECT 25 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 23 AS parent_id, 37.34665341388054 AS "Estimator" UNION ALL SELECT 26 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 22 AS parent_id, -33.337014733450744 AS "Estimator") AS "Values"), 
"DT_Output_2" AS 
(SELECT "DT_node_lookup_2"."KEY" AS "KEY", "DT_node_lookup_2".node_id_2 AS node_id_2, "DT_node_data_2".node_id AS node_id, "DT_node_data_2".feature AS feature, "DT_node_data_2".threshold AS threshold, "DT_node_data_2".count AS count, "DT_node_data_2".depth AS depth, "DT_node_data_2".parent_id AS parent_id, "DT_node_data_2"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_2" LEFT OUTER JOIN "DT_node_data_2" ON "DT_node_lookup_2".node_id_2 = "DT_node_data_2".node_id), 
"BAG_Tree_2" AS 
(SELECT "DT_Output_2"."KEY" AS "KEY", "DT_Output_2"."Estimator" AS "Estimator" 
FROM "DT_Output_2"), 
"DT_node_lookup_3" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_7 <= 0.1823035180568695) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_11 <= 0.05682074651122093) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_7 <= -0.4021131694316864) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_6 <= 0.07891783118247986) THEN 4 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_4 <= -0.1516331136226654) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_7 <= 0.11671830713748932) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_7 <= -0.09526420384645462) THEN 10 ELSE 11 END ELSE 12 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_2 <= -0.35949647426605225) THEN 14 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_2 <= 0.06726193428039551) THEN 16 ELSE 17 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_9 <= 0.3287602663040161) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_6 <= -1.1705999374389648) THEN 20 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_2 <= 0.44372546672821045) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_9 <= -0.2125832587480545) THEN 23 ELSE 24 END ELSE 25 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_6 <= 1.687129020690918) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_10 <= 1.21342134475708) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_2 <= -0.4755055010318756) THEN 29 ELSE 30 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_5 <= 1.1726911067962646) THEN 32 ELSE 33 END END ELSE 34 END END END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_3" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 0 AS node_id, 'scaler_7' AS feature, 0.1823035180568695 AS threshold, 19 AS count, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 35.083027918484234 AS "Estimator" UNION ALL SELECT 1 AS node_id, 'scaler_11' AS feature, 0.05682074651122093 AS threshold, 9 AS count, 1 AS depth, 0 AS parent_id, -167.8097157274071 AS "Estimator" UNION ALL SELECT 2 AS node_id, 'scaler_7' AS feature, -0.4021131694316864 AS threshold, 6 AS count, 2 AS depth, 1 AS parent_id, -101.50267923621865 AS "Estimator" UNION ALL SELECT 3 AS node_id, 'scaler_6' AS feature, 0.07891783118247986 AS threshold, 3 AS count, 3 AS depth, 2 AS parent_id, -58.755372284782084 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 3 AS parent_id, -80.36713172562187 AS "Estimator" UNION ALL SELECT 5 AS node_id, 'scaler_4' AS feature, -0.1516331136226654 AS threshold, 2 AS count, 4 AS depth, 3 AS parent_id, -44.34753265755555 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 5 AS parent_id, -33.10367734893197 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 5 AS parent_id, -49.96946031186734 AS "Estimator" UNION ALL SELECT 8 AS node_id, 'scaler_7' AS feature, 0.11671830713748932 AS threshold, 3 AS count, 3 AS depth, 2 AS parent_id, -172.74819082194628 AS "Estimator" UNION ALL SELECT 9 AS node_id, 'scaler_7' AS feature, -0.09526420384645462 AS threshold, 2 AS count, 4 AS depth, 8 AS parent_id, -181.9218677362491 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 9 AS parent_id, -182.332005662268 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 9 AS parent_id, -181.5117298102302 AS "Estimator" UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 8 AS parent_id, -154.40083699334056 AS "Estimator" UNION ALL SELECT 13 AS node_id, 'scaler_2' AS feature, -0.35949647426605225 AS threshold, 3 AS count, 2 AS depth, 1 AS parent_id, -300.42378870978405 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 13 AS parent_id, -351.3842930876292 AS "Estimator" UNION ALL SELECT 15 AS node_id, 'scaler_2' AS feature, 0.06726193428039551 AS threshold, 2 AS count, 3 AS depth, 13 AS parent_id, -249.4632843319389 AS "Estimator" UNION ALL SELECT 16 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 15 AS parent_id, -268.1904323885528 AS "Estimator" UNION ALL SELECT 17 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 15 AS parent_id, -230.736136275325 AS "Estimator" UNION ALL SELECT 18 AS node_id, 'scaler_9' AS feature, 0.3287602663040161 AS threshold, 10 AS count, 1 AS depth, 0 AS parent_id, 222.36863743776854 AS "Estimator" UNION ALL SELECT 19 AS node_id, 'scaler_6' AS feature, -1.1705999374389648 AS threshold, 4 AS count, 2 AS depth, 18 AS parent_id, 8.518188162945453 AS "Estimator" UNION ALL SELECT 20 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 19 AS parent_id, -33.337014733450744 AS "Estimator" UNION ALL SELECT 21 AS node_id, 'scaler_2' AS feature, 0.44372546672821045 AS threshold, 3 AS count, 3 AS depth, 19 AS parent_id, 22.469922461744186 AS "Estimator" UNION ALL SELECT 22 AS node_id, 'scaler_9' AS feature, -0.2125832587480545 AS threshold, 2 AS count, 4 AS depth, 21 AS parent_id, 32.16683928651945 AS "Estimator" UNION ALL SELECT 23 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 22 AS parent_id, 37.34665341388054 AS "Estimator" UNION ALL SELECT 24 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 22 AS parent_id, 26.98702515915835 AS "Estimator" UNION ALL SELECT 25 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 21 AS parent_id, 3.0760888121936603 AS "Estimator" UNION ALL SELECT 26 AS node_id, 'scaler_6' AS feature, 1.687129020690918 AS threshold, 6 AS count, 2 AS depth, 18 AS parent_id, 317.4132815599121 AS "Estimator" UNION ALL SELECT 27 AS node_id, 'scaler_10' AS feature, 1.21342134475708 AS threshold, 5 AS count, 3 AS depth, 26 AS parent_id, 297.1265397493376 AS "Estimator" UNION ALL SELECT 28 AS node_id, 'scaler_2' AS feature, -0.4755055010318756 AS threshold, 2 AS count, 4 AS depth, 27 AS parent_id, 255.9149952339464 AS "Estimator" UNION ALL SELECT 29 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 28 AS parent_id, 277.9812845098006 AS "Estimator" UNION ALL SELECT 30 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 28 AS parent_id, 248.55956547532833 AS "Estimator" UNION ALL SELECT 31 AS node_id, 'scaler_5' AS feature, 1.1726911067962646 AS threshold, 3 AS count, 4 AS depth, 27 AS parent_id, 338.3380842647288 AS "Estimator" UNION ALL SELECT 32 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 5 AS depth, 31 AS parent_id, 355.99351619859897 AS "Estimator" UNION ALL SELECT 33 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 31 AS parent_id, 320.6826523308587 AS "Estimator" UNION ALL SELECT 34 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 26 AS parent_id, 479.70721604450864 AS "Estimator") AS "Values"), 
"DT_Output_3" AS 
(SELECT "DT_node_lookup_3"."KEY" AS "KEY", "DT_node_lookup_3".node_id_2 AS node_id_2, "DT_node_data_3".node_id AS node_id, "DT_node_data_3".feature AS feature, "DT_node_data_3".threshold AS threshold, "DT_node_data_3".count AS count, "DT_node_data_3".depth AS depth, "DT_node_data_3".parent_id AS parent_id, "DT_node_data_3"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_3" LEFT OUTER JOIN "DT_node_data_3" ON "DT_node_lookup_3".node_id_2 = "DT_node_data_3".node_id), 
"BAG_Tree_3" AS 
(SELECT "DT_Output_3"."KEY" AS "KEY", "DT_Output_3"."Estimator" AS "Estimator" 
FROM "DT_Output_3"), 
"DT_node_lookup_4" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_9 <= 0.4786849319934845) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_2 <= 0.2727518081665039) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_9 <= -0.09452277421951294) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_9 <= -1.2334874868392944) THEN 4 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_3 <= -0.059597745537757874) THEN 6 ELSE 7 END END ELSE 8 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_3 <= 0.8733558654785156) THEN 10 ELSE 11 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_2 <= -0.9813766479492188) THEN 13 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_9 <= 0.9742860794067383) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_5 <= 0.24682268500328064) THEN 16 ELSE 17 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_6 <= 0.38413500785827637) THEN 19 ELSE 20 END END END END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_4" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 0 AS node_id, 'scaler_9' AS feature, 0.4786849319934845 AS threshold, 11 AS count, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 82.56359184309957 AS "Estimator" UNION ALL SELECT 1 AS node_id, 'scaler_2' AS feature, 0.2727518081665039 AS threshold, 6 AS count, 1 AS depth, 0 AS parent_id, -164.02976400198332 AS "Estimator" UNION ALL SELECT 2 AS node_id, 'scaler_9' AS feature, -0.09452277421951294 AS threshold, 4 AS count, 2 AS depth, 1 AS parent_id, -212.53579707824306 AS "Estimator" UNION ALL SELECT 3 AS node_id, 'scaler_9' AS feature, -1.2334874868392944 AS threshold, 3 AS count, 3 AS depth, 2 AS parent_id, -179.14301589205724 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 3 AS parent_id, -168.02760851528973 AS "Estimator" UNION ALL SELECT 5 AS node_id, 'scaler_3' AS feature, -0.059597745537757874 AS threshold, 2 AS count, 4 AS depth, 3 AS parent_id, -181.9218677362491 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 5 AS parent_id, -181.5117298102302 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 5 AS parent_id, -182.332005662268 AS "Estimator" UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 2 AS parent_id, -268.1904323885528 AS "Estimator" UNION ALL SELECT 9 AS node_id, 'scaler_3' AS feature, 0.8733558654785156 AS threshold, 2 AS count, 2 AS depth, 1 AS parent_id, -34.68034246529066 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 9 AS parent_id, 3.0760888121936603 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 9 AS parent_id, -53.55855810403281 AS "Estimator" UNION ALL SELECT 12 AS node_id, 'scaler_2' AS feature, -0.9813766479492188 AS threshold, 5 AS count, 1 AS depth, 0 AS parent_id, 276.3155142928075 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 2 AS depth, 12 AS parent_id, -67.71218597426643 AS "Estimator" UNION ALL SELECT 14 AS node_id, 'scaler_9' AS feature, 0.9742860794067383 AS threshold, 4 AS count, 2 AS depth, 12 AS parent_id, 333.65346433731986 AS "Estimator" UNION ALL SELECT 15 AS node_id, 'scaler_5' AS feature, 0.24682268500328064 AS threshold, 2 AS count, 3 AS depth, 14 AS parent_id, 268.1740448316432 AS "Estimator" UNION ALL SELECT 16 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 15 AS parent_id, 248.55956547532833 AS "Estimator" UNION ALL SELECT 17 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 15 AS parent_id, 277.9812845098006 AS "Estimator" UNION ALL SELECT 18 AS node_id, 'scaler_6' AS feature, 0.38413500785827637 AS threshold, 2 AS count, 3 AS depth, 14 AS parent_id, 355.47993750587875 AS "Estimator" UNION ALL SELECT 19 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 18 AS parent_id, 360.61572443308125 AS "Estimator" UNION ALL SELECT 20 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 18 AS parent_id, 351.37130796411674 AS "Estimator") AS "Values"), 
"DT_Output_4" AS 
(SELECT "DT_node_lookup_4"."KEY" AS "KEY", "DT_node_lookup_4".node_id_2 AS node_id_2, "DT_node_data_4".node_id AS node_id, "DT_node_data_4".feature AS feature, "DT_node_data_4".threshold AS threshold, "DT_node_data_4".count AS count, "DT_node_data_4".depth AS depth, "DT_node_data_4".parent_id AS parent_id, "DT_node_data_4"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_4" LEFT OUTER JOIN "DT_node_data_4" ON "DT_node_lookup_4".node_id_2 = "DT_node_data_4".node_id), 
"BAG_Tree_4" AS 
(SELECT "DT_Output_4"."KEY" AS "KEY", "DT_Output_4"."Estimator" AS "Estimator" 
FROM "DT_Output_4"), 
"DT_node_lookup_5" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_7 <= 0.20986223220825195) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_4 <= -1.0022783279418945) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_6 <= -0.07684990763664246) THEN 3 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_2 <= -0.23020094633102417) THEN 5 ELSE 6 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_2 <= -1.0416516065597534) THEN 8 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_11 <= -0.7685638666152954) THEN 10 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_6 <= 0.07891783118247986) THEN 12 ELSE 13 END END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_9 <= 0.435752272605896) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_7 <= 0.4688160717487335) THEN 16 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_2 <= 0.8470758199691772) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_4 <= 0.09278401732444763) THEN 19 ELSE 20 END ELSE 21 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_6 <= 1.687129020690918) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_10 <= 0.857378363609314) THEN 24 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_6 <= 0.38413500785827637) THEN 26 ELSE 27 END END ELSE 28 END END END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_5" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 0 AS node_id, 'scaler_7' AS feature, 0.20986223220825195 AS threshold, 17 AS count, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 38.55037106545 AS "Estimator" UNION ALL SELECT 1 AS node_id, 'scaler_4' AS feature, -1.0022783279418945 AS threshold, 9 AS count, 1 AS depth, 0 AS parent_id, -112.20950412693153 AS "Estimator" UNION ALL SELECT 2 AS node_id, 'scaler_6' AS feature, -0.07684990763664246 AS threshold, 3 AS count, 2 AS depth, 1 AS parent_id, -235.50411539256302 AS "Estimator" UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 2 AS parent_id, -351.3842930876292 AS "Estimator" UNION ALL SELECT 4 AS node_id, 'scaler_2' AS feature, -0.23020094633102417 AS threshold, 2 AS count, 3 AS depth, 2 AS parent_id, -206.5340709687965 AS "Estimator" UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 4 AS parent_id, -182.332005662268 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 4 AS parent_id, -230.736136275325 AS "Estimator" UNION ALL SELECT 7 AS node_id, 'scaler_2' AS feature, -1.0416516065597534 AS threshold, 6 AS count, 2 AS depth, 1 AS parent_id, -50.56219849411578 AS "Estimator" UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 7 AS parent_id, 37.34665341388054 AS "Estimator" UNION ALL SELECT 9 AS node_id, 'scaler_11' AS feature, -0.7685638666152954 AS threshold, 5 AS count, 3 AS depth, 7 AS parent_id, -72.53941147111486 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 9 AS parent_id, -181.5117298102302 AS "Estimator" UNION ALL SELECT 11 AS node_id, 'scaler_6' AS feature, 0.07891783118247986 AS threshold, 4 AS count, 4 AS depth, 9 AS parent_id, -56.97193742266982 AS "Estimator" UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 5 AS depth, 11 AS parent_id, -71.93050122471824 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 5 AS depth, 11 AS parent_id, -45.75301457113349 AS "Estimator" UNION ALL SELECT 14 AS node_id, 'scaler_9' AS feature, 0.435752272605896 AS threshold, 8 AS count, 1 AS depth, 0 AS parent_id, 264.69018385402234 AS "Estimator" UNION ALL SELECT 15 AS node_id, 'scaler_7' AS feature, 0.4688160717487335 AS threshold, 4 AS count, 2 AS depth, 14 AS parent_id, 86.53694539502263 AS "Estimator" UNION ALL SELECT 16 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 15 AS parent_id, 349.42168234218923 AS "Estimator" UNION ALL SELECT 17 AS node_id, 'scaler_2' AS feature, 0.8470758199691772 AS threshold, 3 AS count, 3 AS depth, 15 AS parent_id, -1.0913002540329113 AS "Estimator" UNION ALL SELECT 18 AS node_id, 'scaler_4' AS feature, 0.09278401732444763 AS threshold, 2 AS count, 4 AS depth, 17 AS parent_id, 15.031556985676005 AS "Estimator" UNION ALL SELECT 19 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 18 AS parent_id, 3.0760888121936603 AS "Estimator" UNION ALL SELECT 20 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 18 AS parent_id, 26.98702515915835 AS "Estimator" UNION ALL SELECT 21 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 17 AS parent_id, -33.337014733450744 AS "Estimator" UNION ALL SELECT 22 AS node_id, 'scaler_6' AS feature, 1.687129020690918 AS threshold, 4 AS count, 2 AS depth, 14 AS parent_id, 383.4590094933555 AS "Estimator" UNION ALL SELECT 23 AS node_id, 'scaler_10' AS feature, 0.857378363609314 AS threshold, 3 AS count, 3 AS depth, 22 AS parent_id, 335.33490621777884 AS "Estimator" UNION ALL SELECT 24 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 23 AS parent_id, 277.9812845098006 AS "Estimator" UNION ALL SELECT 25 AS node_id, 'scaler_6' AS feature, 0.38413500785827637 AS threshold, 2 AS count, 4 AS depth, 23 AS parent_id, 354.45278012043826 AS "Estimator" UNION ALL SELECT 26 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 25 AS parent_id, 360.61572443308125 AS "Estimator" UNION ALL SELECT 27 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 25 AS parent_id, 351.37130796411674 AS "Estimator" UNION ALL SELECT 28 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 22 AS parent_id, 479.70721604450864 AS "Estimator") AS "Values"), 
"DT_Output_5" AS 
(SELECT "DT_node_lookup_5"."KEY" AS "KEY", "DT_node_lookup_5".node_id_2 AS node_id_2, "DT_node_data_5".node_id AS node_id, "DT_node_data_5".feature AS feature, "DT_node_data_5".threshold AS threshold, "DT_node_data_5".count AS count, "DT_node_data_5".depth AS depth, "DT_node_data_5".parent_id AS parent_id, "DT_node_data_5"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_5" LEFT OUTER JOIN "DT_node_data_5" ON "DT_node_lookup_5".node_id_2 = "DT_node_data_5".node_id), 
"BAG_Tree_5" AS 
(SELECT "DT_Output_5"."KEY" AS "KEY", "DT_Output_5"."Estimator" AS "Estimator" 
FROM "DT_Output_5"), 
"DT_node_lookup_6" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_7 <= -0.029678992927074432) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_11 <= 1.504274845123291) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_3 <= 0.49254661798477173) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_9 <= 0.6784148812294006) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_11 <= -0.3065367341041565) THEN 5 ELSE 6 END ELSE 7 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_10 <= -0.2799195647239685) THEN 9 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_10 <= 0.5285278558731079) THEN 11 ELSE 12 END END END ELSE 13 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_10 <= 0.060001831501722336) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_8 <= -0.051933497190475464) THEN 16 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_7 <= 0.46153372526168823) THEN 18 ELSE 19 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_6 <= 1.3329193592071533) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_9 <= 0.44247204065322876) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_6 <= 0.6925640106201172) THEN 23 ELSE 24 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_5 <= 0.24682268500328064) THEN 26 ELSE 27 END END ELSE 28 END END END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_6" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 0 AS node_id, 'scaler_7' AS feature, -0.029678992927074432 AS threshold, 16 AS count, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, -3.3686081272737702 AS "Estimator" UNION ALL SELECT 1 AS node_id, 'scaler_11' AS feature, 1.504274845123291 AS threshold, 8 AS count, 1 AS depth, 0 AS parent_id, -184.7424816416327 AS "Estimator" UNION ALL SELECT 2 AS node_id, 'scaler_3' AS feature, 0.49254661798477173 AS threshold, 7 AS count, 2 AS depth, 1 AS parent_id, -134.74993820783374 AS "Estimator" UNION ALL SELECT 3 AS node_id, 'scaler_9' AS feature, 0.6784148812294006 AS threshold, 4 AS count, 3 AS depth, 2 AS parent_id, -185.6057952708247 AS "Estimator" UNION ALL SELECT 4 AS node_id, 'scaler_11' AS feature, -0.3065367341041565 AS threshold, 3 AS count, 4 AS depth, 3 AS parent_id, -209.18451713013638 AS "Estimator" UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 4 AS parent_id, -182.332005662268 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 5 AS depth, 4 AS parent_id, -249.4632843319389 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 3 AS parent_id, -67.71218597426643 AS "Estimator" UNION ALL SELECT 8 AS node_id, 'scaler_10' AS feature, -0.2799195647239685 AS threshold, 3 AS count, 3 AS depth, 2 AS parent_id, -58.46615261334734 AS "Estimator" UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 8 AS parent_id, -80.36713172562187 AS "Estimator" UNION ALL SELECT 10 AS node_id, 'scaler_10' AS feature, 0.5285278558731079 AS threshold, 2 AS count, 4 AS depth, 8 AS parent_id, -51.16582624258916 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 10 AS parent_id, -49.96946031186734 AS "Estimator" UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 10 AS parent_id, -53.55855810403281 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 2 AS depth, 1 AS parent_id, -351.3842930876292 AS "Estimator" UNION ALL SELECT 14 AS node_id, 'scaler_10' AS feature, 0.060001831501722336 AS threshold, 8 AS count, 1 AS depth, 0 AS parent_id, 193.1197548466151 AS "Estimator" UNION ALL SELECT 15 AS node_id, 'scaler_8' AS feature, -0.051933497190475464 AS threshold, 3 AS count, 2 AS depth, 14 AS parent_id, -17.436424812628267 AS "Estimator" UNION ALL SELECT 16 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 15 AS parent_id, -168.02760851528973 AS "Estimator" UNION ALL SELECT 17 AS node_id, 'scaler_7' AS feature, 0.46153372526168823 AS threshold, 2 AS count, 3 AS depth, 15 AS parent_id, 20.2113711130371 AS "Estimator" UNION ALL SELECT 18 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 17 AS parent_id, 37.34665341388054 AS "Estimator" UNION ALL SELECT 19 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 17 AS parent_id, 3.0760888121936603 AS "Estimator" UNION ALL SELECT 20 AS node_id, 'scaler_6' AS feature, 1.3329193592071533 AS threshold, 5 AS count, 2 AS depth, 14 AS parent_id, 343.517026031789 AS "Estimator" UNION ALL SELECT 21 AS node_id, 'scaler_9' AS feature, 0.44247204065322876 AS threshold, 4 AS count, 3 AS depth, 20 AS parent_id, 289.040950026701 AS "Estimator" UNION ALL SELECT 22 AS node_id, 'scaler_6' AS feature, 0.6925640106201172 AS threshold, 2 AS count, 4 AS depth, 21 AS parent_id, 335.05216733652395 AS "Estimator" UNION ALL SELECT 23 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 22 AS parent_id, 320.6826523308587 AS "Estimator" UNION ALL SELECT 24 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 22 AS parent_id, 349.42168234218923 AS "Estimator" UNION ALL SELECT 25 AS node_id, 'scaler_5' AS feature, 0.24682268500328064 AS threshold, 2 AS count, 4 AS depth, 21 AS parent_id, 258.36680515348576 AS "Estimator" UNION ALL SELECT 26 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 25 AS parent_id, 248.55956547532833 AS "Estimator" UNION ALL SELECT 27 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 25 AS parent_id, 277.9812845098006 AS "Estimator" UNION ALL SELECT 28 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 20 AS parent_id, 479.70721604450864 AS "Estimator") AS "Values"), 
"DT_Output_6" AS 
(SELECT "DT_node_lookup_6"."KEY" AS "KEY", "DT_node_lookup_6".node_id_2 AS node_id_2, "DT_node_data_6".node_id AS node_id, "DT_node_data_6".feature AS feature, "DT_node_data_6".threshold AS threshold, "DT_node_data_6".count AS count, "DT_node_data_6".depth AS depth, "DT_node_data_6".parent_id AS parent_id, "DT_node_data_6"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_6" LEFT OUTER JOIN "DT_node_data_6" ON "DT_node_lookup_6".node_id_2 = "DT_node_data_6".node_id), 
"BAG_Tree_6" AS 
(SELECT "DT_Output_6"."KEY" AS "KEY", "DT_Output_6"."Estimator" AS "Estimator" 
FROM "DT_Output_6"), 
"DT_node_lookup_7" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_7 <= 0.12003344297409058) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_4 <= -0.04847206175327301) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_2 <= -0.6629517078399658) THEN 3 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_3 <= -1.0532304048538208) THEN 5 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_5 <= 0.2156105786561966) THEN 7 ELSE 8 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_3 <= 0.03363025188446045) THEN 10 ELSE 11 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_10 <= 0.060001831501722336) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_4 <= -0.6628701686859131) THEN 14 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_2 <= 0.3021126389503479) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_4 <= 0.31613194942474365) THEN 17 ELSE 18 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_7 <= 0.5777726769447327) THEN 20 ELSE 21 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_9 <= 1.9978234767913818) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_8 <= -0.9564874172210693) THEN 24 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_5 <= 1.1726911067962646) THEN 26 ELSE 27 END END ELSE 28 END END END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_7" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 0 AS node_id, 'scaler_7' AS feature, 0.12003344297409058 AS threshold, 18 AS count, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 43.38587827148531 AS "Estimator" UNION ALL SELECT 1 AS node_id, 'scaler_4' AS feature, -0.04847206175327301 AS threshold, 6 AS count, 1 AS depth, 0 AS parent_id, -141.36289233818553 AS "Estimator" UNION ALL SELECT 2 AS node_id, 'scaler_2' AS feature, -0.6629517078399658 AS threshold, 4 AS count, 2 AS depth, 1 AS parent_id, -225.65923409954408 AS "Estimator" UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 2 AS parent_id, -351.3842930876292 AS "Estimator" UNION ALL SELECT 4 AS node_id, 'scaler_3' AS feature, -1.0532304048538208 AS threshold, 3 AS count, 3 AS depth, 2 AS parent_id, -194.2279693525228 AS "Estimator" UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 4 AS parent_id, -230.736136275325 AS "Estimator" UNION ALL SELECT 6 AS node_id, 'scaler_5' AS feature, 0.2156105786561966 AS threshold, 2 AS count, 4 AS depth, 4 AS parent_id, -182.0585803782554 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 6 AS parent_id, -182.332005662268 AS "Estimator" UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 6 AS parent_id, -181.5117298102302 AS "Estimator" UNION ALL SELECT 9 AS node_id, 'scaler_3' AS feature, 0.03363025188446045 AS threshold, 2 AS count, 2 AS depth, 1 AS parent_id, -57.06655057682697 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 9 AS parent_id, -67.71218597426643 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 9 AS parent_id, -49.96946031186733 AS "Estimator" UNION ALL SELECT 12 AS node_id, 'scaler_10' AS feature, 0.060001831501722336 AS threshold, 12 AS count, 1 AS depth, 0 AS parent_id, 166.55172534459922 AS "Estimator" UNION ALL SELECT 13 AS node_id, 'scaler_4' AS feature, -0.6628701686859131 AS threshold, 6 AS count, 2 AS depth, 12 AS parent_id, -38.415279186793875 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 13 AS parent_id, -168.02760851528973 AS "Estimator" UNION ALL SELECT 15 AS node_id, 'scaler_2' AS feature, 0.3021126389503479 AS threshold, 5 AS count, 3 AS depth, 13 AS parent_id, 13.42965254460447 AS "Estimator" UNION ALL SELECT 16 AS node_id, 'scaler_4' AS feature, 0.31613194942474365 AS threshold, 2 AS count, 4 AS depth, 15 AS parent_id, 32.16683928651945 AS "Estimator" UNION ALL SELECT 17 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 16 AS parent_id, 26.98702515915835 AS "Estimator" UNION ALL SELECT 18 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 16 AS parent_id, 37.34665341388054 AS "Estimator" UNION ALL SELECT 19 AS node_id, 'scaler_7' AS feature, 0.5777726769447327 AS threshold, 3 AS count, 4 AS depth, 15 AS parent_id, 0.9381947166611582 AS "Estimator" UNION ALL SELECT 20 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 19 AS parent_id, -9.185160907179679 AS "Estimator" UNION ALL SELECT 21 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 5 AS depth, 19 AS parent_id, 5.999872528581577 AS "Estimator" UNION ALL SELECT 22 AS node_id, 'scaler_9' AS feature, 1.9978234767913818 AS threshold, 6 AS count, 2 AS depth, 12 AS parent_id, 345.8978543095682 AS "Estimator" UNION ALL SELECT 23 AS node_id, 'scaler_8' AS feature, -0.9564874172210693 AS threshold, 5 AS count, 3 AS depth, 22 AS parent_id, 326.7822312045767 AS "Estimator" UNION ALL SELECT 24 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 23 AS parent_id, 277.9812845098006 AS "Estimator" UNION ALL SELECT 25 AS node_id, 'scaler_5' AS feature, 1.1726911067962646 AS threshold, 4 AS count, 4 AS depth, 23 AS parent_id, 346.30260988248705 AS "Estimator" UNION ALL SELECT 26 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 5 AS depth, 25 AS parent_id, 352.7075992703941 AS "Estimator" UNION ALL SELECT 27 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 25 AS parent_id, 320.6826523308587 AS "Estimator" UNION ALL SELECT 28 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 22 AS parent_id, 479.70721604450864 AS "Estimator") AS "Values"), 
"DT_Output_7" AS 
(SELECT "DT_node_lookup_7"."KEY" AS "KEY", "DT_node_lookup_7".node_id_2 AS node_id_2, "DT_node_data_7".node_id AS node_id, "DT_node_data_7".feature AS feature, "DT_node_data_7".threshold AS threshold, "DT_node_data_7".count AS count, "DT_node_data_7".depth AS depth, "DT_node_data_7".parent_id AS parent_id, "DT_node_data_7"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_7" LEFT OUTER JOIN "DT_node_data_7" ON "DT_node_lookup_7".node_id_2 = "DT_node_data_7".node_id), 
"BAG_Tree_7" AS 
(SELECT "DT_Output_7"."KEY" AS "KEY", "DT_Output_7"."Estimator" AS "Estimator" 
FROM "DT_Output_7"), 
"DT_node_lookup_8" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_5 <= 0.24101820588111877) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_2 <= 0.2452317774295807) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_8 <= -0.43938785791397095) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_3 <= -0.5776578783988953) THEN 4 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_5 <= -1.1189430952072144) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_9 <= -0.2696588635444641) THEN 9 ELSE 10 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_3 <= 0.4883303642272949) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_8 <= -0.10503411293029785) THEN 13 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_2 <= 0.47392725944519043) THEN 15 ELSE 16 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_3 <= 0.9541438817977905) THEN 18 ELSE 19 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_5 <= 0.8105282783508301) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_6 <= -0.39009153842926025) THEN 22 ELSE 23 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_9 <= -0.24494041502475739) THEN 25 ELSE 26 END END END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_8" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 0 AS node_id, 'scaler_5' AS feature, 0.24101820588111877 AS threshold, 14 AS count, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, -44.6713802047901 AS "Estimator" UNION ALL SELECT 1 AS node_id, 'scaler_2' AS feature, 0.2452317774295807 AS threshold, 10 AS count, 1 AS depth, 0 AS parent_id, -105.48236244607115 AS "Estimator" UNION ALL SELECT 2 AS node_id, 'scaler_8' AS feature, -0.43938785791397095 AS threshold, 5 AS count, 2 AS depth, 1 AS parent_id, -206.7232655242592 AS "Estimator" UNION ALL SELECT 3 AS node_id, 'scaler_3' AS feature, -0.5776578783988953 AS threshold, 3 AS count, 3 AS depth, 2 AS parent_id, -177.27638060602152 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 3 AS parent_id, -230.736136275325 AS "Estimator" UNION ALL SELECT 5 AS node_id, 'scaler_5' AS feature, -1.1189430952072144 AS threshold, 2 AS count, 4 AS depth, 3 AS parent_id, -168.36642132780426 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 5 AS parent_id, -154.40083699334056 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 5 AS parent_id, -182.332005662268 AS "Estimator" UNION ALL SELECT 8 AS node_id, 'scaler_9' AS feature, -0.2696588635444641 AS threshold, 2 AS count, 3 AS depth, 2 AS parent_id, -309.787362738091 AS "Estimator" UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 8 AS parent_id, -351.3842930876292 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 8 AS parent_id, -268.1904323885528 AS "Estimator" UNION ALL SELECT 11 AS node_id, 'scaler_3' AS feature, 0.4883303642272949 AS threshold, 5 AS count, 2 AS depth, 1 AS parent_id, -22.64889629119003 AS "Estimator" UNION ALL SELECT 12 AS node_id, 'scaler_8' AS feature, -0.10503411293029785 AS threshold, 3 AS count, 3 AS depth, 11 AS parent_id, 1.9127892887904636 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 12 AS parent_id, -9.185160907179679 AS "Estimator" UNION ALL SELECT 14 AS node_id, 'scaler_2' AS feature, 0.47392725944519043 AS threshold, 2 AS count, 4 AS depth, 12 AS parent_id, 7.461764386775535 AS "Estimator" UNION ALL SELECT 15 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 14 AS parent_id, 8.923656244969493 AS "Estimator" UNION ALL SELECT 16 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 14 AS parent_id, 3.0760888121936603 AS "Estimator" UNION ALL SELECT 17 AS node_id, 'scaler_3' AS feature, 0.9541438817977905 AS threshold, 2 AS count, 3 AS depth, 11 AS parent_id, -52.12291898716662 AS "Estimator" UNION ALL SELECT 18 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 17 AS parent_id, -49.96946031186734 AS "Estimator" UNION ALL SELECT 19 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 17 AS parent_id, -53.55855810403281 AS "Estimator" UNION ALL SELECT 20 AS node_id, 'scaler_5' AS feature, 0.8105282783508301 AS threshold, 4 AS count, 1 AS depth, 0 AS parent_id, 198.57254876033414 AS "Estimator" UNION ALL SELECT 21 AS node_id, 'scaler_6' AS feature, -0.39009153842926025 AS threshold, 2 AS count, 2 AS depth, 20 AS parent_id, 333.07091112532106 AS "Estimator" UNION ALL SELECT 22 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 21 AS parent_id, 360.61572443308125 AS "Estimator" UNION ALL SELECT 23 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 21 AS parent_id, 277.9812845098006 AS "Estimator" UNION ALL SELECT 24 AS node_id, 'scaler_9' AS feature, -0.24494041502475739 AS threshold, 2 AS count, 2 AS depth, 20 AS parent_id, -3.174994787146197 AS "Estimator" UNION ALL SELECT 25 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 24 AS parent_id, -33.337014733450744 AS "Estimator" UNION ALL SELECT 26 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 24 AS parent_id, 26.98702515915835 AS "Estimator") AS "Values"), 
"DT_Output_8" AS 
(SELECT "DT_node_lookup_8"."KEY" AS "KEY", "DT_node_lookup_8".node_id_2 AS node_id_2, "DT_node_data_8".node_id AS node_id, "DT_node_data_8".feature AS feature, "DT_node_data_8".threshold AS threshold, "DT_node_data_8".count AS count, "DT_node_data_8".depth AS depth, "DT_node_data_8".parent_id AS parent_id, "DT_node_data_8"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_8" LEFT OUTER JOIN "DT_node_data_8" ON "DT_node_lookup_8".node_id_2 = "DT_node_data_8".node_id), 
"BAG_Tree_8" AS 
(SELECT "DT_Output_8"."KEY" AS "KEY", "DT_Output_8"."Estimator" AS "Estimator" 
FROM "DT_Output_8"), 
"DT_node_lookup_9" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_9 <= 1.060962200164795) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_3 <= 1.8808491230010986) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_4 <= -1.5560998916625977) THEN 3 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_10 <= -1.3109955787658691) THEN 5 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_4 <= -0.4037255644798279) THEN 7 ELSE 8 END END END ELSE 9 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_7 <= 0.899750828742981) THEN 11 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_9 <= 1.3860479593276978) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_9" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 0 AS node_id, 'scaler_9' AS feature, 1.060962200164795 AS threshold, 17 AS count, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 51.64314777716319 AS "Estimator" UNION ALL SELECT 1 AS node_id, 'scaler_3' AS feature, 1.8808491230010986 AS threshold, 14 AS count, 1 AS depth, 0 AS parent_id, -36.5847039010626 AS "Estimator" UNION ALL SELECT 2 AS node_id, 'scaler_4' AS feature, -1.5560998916625977 AS threshold, 13 AS count, 2 AS depth, 1 AS parent_id, -71.5364803911585 AS "Estimator" UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 2 AS parent_id, -351.3842930876292 AS "Estimator" UNION ALL SELECT 4 AS node_id, 'scaler_10' AS feature, -1.3109955787658691 AS threshold, 12 AS count, 3 AS depth, 2 AS parent_id, -55.07484435018966 AS "Estimator" UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 4 AS parent_id, -268.1904323885528 AS "Estimator" UNION ALL SELECT 6 AS node_id, 'scaler_4' AS feature, -0.4037255644798279 AS threshold, 11 AS count, 4 AS depth, 4 AS parent_id, -41.75512009779195 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 5 AS depth, 6 AS parent_id, -105.11919505191298 AS "Estimator" UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 8 AS count, 5 AS depth, 6 AS parent_id, -3.7366751253193344 AS "Estimator" UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 2 AS depth, 1 AS parent_id, 277.9812845098006 AS "Estimator" UNION ALL SELECT 10 AS node_id, 'scaler_7' AS feature, 0.899750828742981 AS threshold, 3 AS count, 1 AS depth, 0 AS parent_id, 404.5545544900664 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 2 AS depth, 10 AS parent_id, 479.70721604450864 AS "Estimator" UNION ALL SELECT 12 AS node_id, 'scaler_9' AS feature, 1.3860479593276978 AS threshold, 2 AS count, 2 AS depth, 10 AS parent_id, 354.45278012043826 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 12 AS parent_id, 360.61572443308125 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 12 AS parent_id, 351.37130796411674 AS "Estimator") AS "Values"), 
"DT_Output_9" AS 
(SELECT "DT_node_lookup_9"."KEY" AS "KEY", "DT_node_lookup_9".node_id_2 AS node_id_2, "DT_node_data_9".node_id AS node_id, "DT_node_data_9".feature AS feature, "DT_node_data_9".threshold AS threshold, "DT_node_data_9".count AS count, "DT_node_data_9".depth AS depth, "DT_node_data_9".parent_id AS parent_id, "DT_node_data_9"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_9" LEFT OUTER JOIN "DT_node_data_9" ON "DT_node_lookup_9".node_id_2 = "DT_node_data_9".node_id), 
"BAG_Tree_9" AS 
(SELECT "DT_Output_9"."KEY" AS "KEY", "DT_Output_9"."Estimator" AS "Estimator" 
FROM "DT_Output_9"), 
"Score_Union_CTE" AS 
(SELECT ensemble_score_union."KEY" AS "KEY", ensemble_score_union."Estimator" AS "Estimator" 
FROM (SELECT "BAG_Tree_0"."KEY" AS "KEY", "BAG_Tree_0"."Estimator" AS "Estimator" 
FROM "BAG_Tree_0" UNION ALL SELECT "BAG_Tree_1"."KEY" AS "KEY", "BAG_Tree_1"."Estimator" AS "Estimator" 
FROM "BAG_Tree_1" UNION ALL SELECT "BAG_Tree_2"."KEY" AS "KEY", "BAG_Tree_2"."Estimator" AS "Estimator" 
FROM "BAG_Tree_2" UNION ALL SELECT "BAG_Tree_3"."KEY" AS "KEY", "BAG_Tree_3"."Estimator" AS "Estimator" 
FROM "BAG_Tree_3" UNION ALL SELECT "BAG_Tree_4"."KEY" AS "KEY", "BAG_Tree_4"."Estimator" AS "Estimator" 
FROM "BAG_Tree_4" UNION ALL SELECT "BAG_Tree_5"."KEY" AS "KEY", "BAG_Tree_5"."Estimator" AS "Estimator" 
FROM "BAG_Tree_5" UNION ALL SELECT "BAG_Tree_6"."KEY" AS "KEY", "BAG_Tree_6"."Estimator" AS "Estimator" 
FROM "BAG_Tree_6" UNION ALL SELECT "BAG_Tree_7"."KEY" AS "KEY", "BAG_Tree_7"."Estimator" AS "Estimator" 
FROM "BAG_Tree_7" UNION ALL SELECT "BAG_Tree_8"."KEY" AS "KEY", "BAG_Tree_8"."Estimator" AS "Estimator" 
FROM "BAG_Tree_8" UNION ALL SELECT "BAG_Tree_9"."KEY" AS "KEY", "BAG_Tree_9"."Estimator" AS "Estimator" 
FROM "BAG_Tree_9") AS ensemble_score_union), 
"BAG_AVG_Scores" AS 
(SELECT "T"."KEY" AS "KEY", "T"."Estimator" AS "Estimator" 
FROM (SELECT "Score_Union_CTE"."KEY" AS "KEY", avg("Score_Union_CTE"."Estimator") AS "Estimator" 
FROM "Score_Union_CTE" GROUP BY "Score_Union_CTE"."KEY") AS "T")
 SELECT "BAG_AVG_Scores"."KEY" AS "KEY", "BAG_AVG_Scores"."Estimator" AS "Estimator" 
FROM "BAG_AVG_Scores"