-- This SQL code was generated by sklearn2sql (development version).
-- Copyright 2017

WITH [ADS_imp_1_OUT] AS 
(SELECT [ADS].[KEY] AS [KEY], CASE WHEN ([ADS].[Feature_0] IS NULL) THEN 0.571437811354 ELSE [ADS].[Feature_0] END AS impter_2, CASE WHEN ([ADS].[Feature_1] IS NULL) THEN 0.382666238013 ELSE [ADS].[Feature_1] END AS impter_3, CASE WHEN ([ADS].[Feature_2] IS NULL) THEN 0.572691272422 ELSE [ADS].[Feature_2] END AS impter_4, CASE WHEN ([ADS].[Feature_3] IS NULL) THEN 0.49696190088 ELSE [ADS].[Feature_3] END AS impter_5, CASE WHEN ([ADS].[Feature_4] IS NULL) THEN 0.451024542384 ELSE [ADS].[Feature_4] END AS impter_6, CASE WHEN ([ADS].[Feature_5] IS NULL) THEN 0.481756971335 ELSE [ADS].[Feature_5] END AS impter_7, CASE WHEN ([ADS].[Feature_6] IS NULL) THEN 0.500052942379 ELSE [ADS].[Feature_6] END AS impter_8, CASE WHEN ([ADS].[Feature_7] IS NULL) THEN 0.479198857297 ELSE [ADS].[Feature_7] END AS impter_9, CASE WHEN ([ADS].[Feature_8] IS NULL) THEN 0.507387853051 ELSE [ADS].[Feature_8] END AS impter_10, CASE WHEN ([ADS].[Feature_9] IS NULL) THEN 0.628661567941 ELSE [ADS].[Feature_9] END AS impter_11 
FROM freidman1 AS [ADS]), 
[ADS_sca_2_OUT] AS 
(SELECT [ADS_imp_1_OUT].[KEY] AS [KEY], (CAST([ADS_imp_1_OUT].impter_2 AS FLOAT) - 0.571437811354) / 0.271926055138 AS scaler_2, (CAST([ADS_imp_1_OUT].impter_3 AS FLOAT) - 0.382666238013) / 0.24530412971 AS scaler_3, (CAST([ADS_imp_1_OUT].impter_4 AS FLOAT) - 0.572691272422) / 0.305022968027 AS scaler_4, (CAST([ADS_imp_1_OUT].impter_5 AS FLOAT) - 0.49696190088) / 0.312889400468 AS scaler_5, (CAST([ADS_imp_1_OUT].impter_6 AS FLOAT) - 0.451024542384) / 0.24602253009 AS scaler_6, (CAST([ADS_imp_1_OUT].impter_7 AS FLOAT) - 0.481756971335) / 0.286861434558 AS scaler_7, (CAST([ADS_imp_1_OUT].impter_8 AS FLOAT) - 0.500052942379) / 0.284593201265 AS scaler_8, (CAST([ADS_imp_1_OUT].impter_9 AS FLOAT) - 0.479198857297) / 0.318231552426 AS scaler_9, (CAST([ADS_imp_1_OUT].impter_10 AS FLOAT) - 0.507387853051) / 0.213964399112 AS scaler_10, (CAST([ADS_imp_1_OUT].impter_11 AS FLOAT) - 0.628661567941) / 0.260134905409 AS scaler_11 
FROM [ADS_imp_1_OUT]), 
[DT_node_lookup] AS 
(SELECT [ADS_sca_2_OUT].[KEY] AS [KEY], CASE WHEN ([ADS_sca_2_OUT].scaler_5 <= -0.15014678239822388) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_4 <= -0.636384129524231) THEN 2 ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_7 <= -0.8448602557182312) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_2 <= -0.7276138067245483) THEN 5 ELSE 6 END ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_10 <= -0.3438817858695984) THEN 8 ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_9 <= -0.31491708755493164) THEN 10 ELSE 11 END END END END ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_3 <= -0.1476747840642929) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_9 <= 1.0705573558807373) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_6 <= 0.6807729005813599) THEN 15 ELSE 16 END ELSE 17 END ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_6 <= -0.36478984355926514) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_2 <= 0.22103767096996307) THEN 20 ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_3 <= 0.9175306558609009) THEN 22 ELSE 23 END END ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_10 <= 0.7955230474472046) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_8 <= 0.750451385974884) THEN 26 ELSE 27 END ELSE 28 END END END END AS node_id_2 
FROM [ADS_sca_2_OUT]), 
[DT_node_data] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Estimator] AS [Estimator] 
FROM (SELECT 0 AS node_id, 'scaler_5' AS feature, -0.15014678239822388 AS threshold, 15 AS count, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 14.86549689440722 AS [Estimator] UNION ALL SELECT 1 AS node_id, 'scaler_4' AS feature, -0.636384129524231 AS threshold, 6 AS count, 1 AS depth, 0 AS parent_id, 9.560670225567302 AS [Estimator] UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 2 AS depth, 1 AS parent_id, 15.706521981990113 AS [Estimator] UNION ALL SELECT 3 AS node_id, 'scaler_7' AS feature, -0.8448602557182312 AS threshold, 5 AS count, 2 AS depth, 1 AS parent_id, 7.804712580875072 AS [Estimator] UNION ALL SELECT 4 AS node_id, 'scaler_2' AS feature, -0.7276138067245483 AS threshold, 2 AS count, 3 AS depth, 3 AS parent_id, 9.933415417524246 AS [Estimator] UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 4 AS parent_id, 10.131789617052231 AS [Estimator] UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 4 AS parent_id, 9.735041217996262 AS [Estimator] UNION ALL SELECT 7 AS node_id, 'scaler_10' AS feature, -0.3438817858695984 AS threshold, 3 AS count, 3 AS depth, 3 AS parent_id, 6.953231446215402 AS [Estimator] UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 7 AS parent_id, 8.240178848678195 AS [Estimator] UNION ALL SELECT 9 AS node_id, 'scaler_9' AS feature, -0.31491708755493164 AS threshold, 2 AS count, 4 AS depth, 7 AS parent_id, 6.095266511240205 AS [Estimator] UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 9 AS parent_id, 5.794379036456321 AS [Estimator] UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 9 AS parent_id, 6.2457102486321485 AS [Estimator] UNION ALL SELECT 12 AS node_id, 'scaler_3' AS feature, -0.1476747840642929 AS threshold, 9 AS count, 1 AS depth, 0 AS parent_id, 17.849461895629677 AS [Estimator] UNION ALL SELECT 13 AS node_id, 'scaler_9' AS feature, 1.0705573558807373 AS threshold, 3 AS count, 2 AS depth, 12 AS parent_id, 15.641923786072507 AS [Estimator] UNION ALL SELECT 14 AS node_id, 'scaler_6' AS feature, 0.6807729005813599 AS threshold, 2 AS count, 3 AS depth, 13 AS parent_id, 16.52493308541915 AS [Estimator] UNION ALL SELECT 15 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 14 AS parent_id, 15.922558108080855 AS [Estimator] UNION ALL SELECT 16 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 14 AS parent_id, 18.332058017434036 AS [Estimator] UNION ALL SELECT 17 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 13 AS parent_id, 12.109886588685942 AS [Estimator] UNION ALL SELECT 18 AS node_id, 'scaler_6' AS feature, -0.36478984355926514 AS threshold, 6 AS count, 2 AS depth, 12 AS parent_id, 18.852888309064756 AS [Estimator] UNION ALL SELECT 19 AS node_id, 'scaler_2' AS feature, 0.22103767096996307 AS threshold, 3 AS count, 3 AS depth, 18 AS parent_id, 18.04760354298076 AS [Estimator] UNION ALL SELECT 20 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 19 AS parent_id, 17.51855412510629 AS [Estimator] UNION ALL SELECT 21 AS node_id, 'scaler_3' AS feature, 0.9175306558609009 AS threshold, 2 AS count, 4 AS depth, 19 AS parent_id, 18.17986589744938 AS [Estimator] UNION ALL SELECT 22 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 21 AS parent_id, 18.10948375079814 AS [Estimator] UNION ALL SELECT 23 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 21 AS parent_id, 18.250248044100616 AS [Estimator] UNION ALL SELECT 24 AS node_id, 'scaler_10' AS feature, 0.7955230474472046 AS threshold, 3 AS count, 3 AS depth, 18 AS parent_id, 19.52395894746808 AS [Estimator] UNION ALL SELECT 25 AS node_id, 'scaler_8' AS feature, 0.750451385974884 AS threshold, 2 AS count, 4 AS depth, 24 AS parent_id, 20.14468088794686 AS [Estimator] UNION ALL SELECT 26 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 25 AS parent_id, 20.70189537226964 AS [Estimator] UNION ALL SELECT 27 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 25 AS parent_id, 19.95894272650593 AS [Estimator] UNION ALL SELECT 28 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 24 AS parent_id, 18.282515066510527 AS [Estimator]) AS [Values]), 
[DT_Output] AS 
(SELECT [DT_node_lookup].[KEY] AS [KEY], [DT_node_lookup].node_id_2 AS node_id_2, [DT_node_data].node_id AS node_id, [DT_node_data].feature AS feature, [DT_node_data].threshold AS threshold, [DT_node_data].count AS count, [DT_node_data].depth AS depth, [DT_node_data].parent_id AS parent_id, [DT_node_data].[Estimator] AS [Estimator] 
FROM [DT_node_lookup] LEFT OUTER JOIN [DT_node_data] ON [DT_node_lookup].node_id_2 = [DT_node_data].node_id), 
[BAG_Tree_0] AS 
(SELECT [DT_Output].[KEY] AS [KEY], [DT_Output].[Estimator] AS [Estimator] 
FROM [DT_Output]), 
[DT_node_lookup_1] AS 
(SELECT [ADS_sca_2_OUT].[KEY] AS [KEY], CASE WHEN ([ADS_sca_2_OUT].scaler_5 <= -1.3050730228424072) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_8 <= 0.5545872449874878) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_6 <= -0.525618314743042) THEN 3 ELSE 4 END ELSE 5 END ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_2 <= -1.0317341089248657) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_5 <= 0.7615058422088623) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_5 <= 0.48760750889778137) THEN 9 ELSE 10 END ELSE 11 END ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_7 <= 1.1739957332611084) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_9 <= 0.06508475542068481) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_3 <= 1.4602720737457275) THEN 15 ELSE 16 END ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_2 <= 1.0295884609222412) THEN 18 ELSE 19 END END ELSE 20 END END END AS node_id_2 
FROM [ADS_sca_2_OUT]), 
[DT_node_data_1] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Estimator] AS [Estimator] 
FROM (SELECT 0 AS node_id, 'scaler_5' AS feature, -1.3050730228424072 AS threshold, 16 AS count, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 15.175996797360886 AS [Estimator] UNION ALL SELECT 1 AS node_id, 'scaler_8' AS feature, 0.5545872449874878 AS threshold, 3 AS count, 1 AS depth, 0 AS parent_id, 7.75226917148162 AS [Estimator] UNION ALL SELECT 2 AS node_id, 'scaler_6' AS feature, -0.525618314743042 AS threshold, 2 AS count, 2 AS depth, 1 AS parent_id, 5.769497124966978 AS [Estimator] UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 2 AS parent_id, 5.293284001301807 AS [Estimator] UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 2 AS parent_id, 6.2457102486321485 AS [Estimator] UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 2 AS depth, 1 AS parent_id, 9.735041217996262 AS [Estimator] UNION ALL SELECT 6 AS node_id, 'scaler_2' AS feature, -1.0317341089248657 AS threshold, 13 AS count, 1 AS depth, 0 AS parent_id, 16.59004015467122 AS [Estimator] UNION ALL SELECT 7 AS node_id, 'scaler_5' AS feature, 0.7615058422088623 AS threshold, 3 AS count, 2 AS depth, 6 AS parent_id, 13.086119883332666 AS [Estimator] UNION ALL SELECT 8 AS node_id, 'scaler_5' AS feature, 0.48760750889778137 AS threshold, 2 AS count, 3 AS depth, 7 AS parent_id, 11.15598984450725 AS [Estimator] UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 8 AS parent_id, 12.109886588685942 AS [Estimator] UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 8 AS parent_id, 10.20209310032856 AS [Estimator] UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 7 AS parent_id, 14.051184902745373 AS [Estimator] UNION ALL SELECT 12 AS node_id, 'scaler_7' AS feature, 1.1739957332611084 AS threshold, 10 AS count, 2 AS depth, 6 AS parent_id, 17.99160826320664 AS [Estimator] UNION ALL SELECT 13 AS node_id, 'scaler_9' AS feature, 0.06508475542068481 AS threshold, 9 AS count, 3 AS depth, 12 AS parent_id, 17.574641015658486 AS [Estimator] UNION ALL SELECT 14 AS node_id, 'scaler_3' AS feature, 1.4602720737457275 AS threshold, 6 AS count, 4 AS depth, 13 AS parent_id, 18.05164835169493 AS [Estimator] UNION ALL SELECT 15 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS count, 5 AS depth, 14 AS parent_id, 17.839726754493704 AS [Estimator] UNION ALL SELECT 16 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 14 AS parent_id, 19.95894272650593 AS [Estimator] UNION ALL SELECT 17 AS node_id, 'scaler_2' AS feature, 1.0295884609222412 AS threshold, 3 AS count, 4 AS depth, 13 AS parent_id, 15.984616562203685 AS [Estimator] UNION ALL SELECT 18 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 5 AS depth, 17 AS parent_id, 15.814540045035482 AS [Estimator] UNION ALL SELECT 19 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 17 AS parent_id, 16.324769596540094 AS [Estimator] UNION ALL SELECT 20 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 12 AS parent_id, 20.70189537226964 AS [Estimator]) AS [Values]), 
[DT_Output_1] AS 
(SELECT [DT_node_lookup_1].[KEY] AS [KEY], [DT_node_lookup_1].node_id_2 AS node_id_2, [DT_node_data_1].node_id AS node_id, [DT_node_data_1].feature AS feature, [DT_node_data_1].threshold AS threshold, [DT_node_data_1].count AS count, [DT_node_data_1].depth AS depth, [DT_node_data_1].parent_id AS parent_id, [DT_node_data_1].[Estimator] AS [Estimator] 
FROM [DT_node_lookup_1] LEFT OUTER JOIN [DT_node_data_1] ON [DT_node_lookup_1].node_id_2 = [DT_node_data_1].node_id), 
[BAG_Tree_1] AS 
(SELECT [DT_Output_1].[KEY] AS [KEY], [DT_Output_1].[Estimator] AS [Estimator] 
FROM [DT_Output_1]), 
[DT_node_lookup_2] AS 
(SELECT [ADS_sca_2_OUT].[KEY] AS [KEY], CASE WHEN ([ADS_sca_2_OUT].scaler_3 <= 0.17052647471427917) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_5 <= -0.022958390414714813) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_7 <= -1.2115263938903809) THEN 3 ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_7 <= 0.4847598373889923) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_4 <= 0.6463310122489929) THEN 6 ELSE 7 END ELSE 8 END END ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_3 <= -1.1151597499847412) THEN 10 ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_10 <= -1.0225497484207153) THEN 12 ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_5 <= 0.4354757070541382) THEN 14 ELSE 15 END END END END ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_10 <= -0.9946627616882324) THEN 17 ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_10 <= -0.12862390279769897) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_8 <= 0.8723889589309692) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_10 <= -0.4337124824523926) THEN 21 ELSE 22 END ELSE 23 END ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_6 <= 0.6809350252151489) THEN 25 ELSE 26 END END END END AS node_id_2 
FROM [ADS_sca_2_OUT]), 
[DT_node_data_2] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Estimator] AS [Estimator] 
FROM (SELECT 0 AS node_id, 'scaler_3' AS feature, 0.17052647471427917 AS threshold, 16 AS count, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 15.115538507755492 AS [Estimator] UNION ALL SELECT 1 AS node_id, 'scaler_5' AS feature, -0.022958390414714813 AS threshold, 9 AS count, 1 AS depth, 0 AS parent_id, 10.184899664926023 AS [Estimator] UNION ALL SELECT 2 AS node_id, 'scaler_7' AS feature, -1.2115263938903809 AS threshold, 5 AS count, 2 AS depth, 1 AS parent_id, 7.441190458546417 AS [Estimator] UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 2 AS parent_id, 9.735041217996262 AS [Estimator] UNION ALL SELECT 4 AS node_id, 'scaler_7' AS feature, 0.4847598373889923 AS threshold, 4 AS count, 3 AS depth, 2 AS parent_id, 6.676573538729802 AS [Estimator] UNION ALL SELECT 5 AS node_id, 'scaler_4' AS feature, 0.6463310122489929 AS threshold, 3 AS count, 4 AS depth, 4 AS parent_id, 5.894770883755607 AS [Estimator] UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 5 AS depth, 5 AS parent_id, 5.543831518879064 AS [Estimator] UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 5 AS parent_id, 6.2457102486321485 AS [Estimator] UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 4 AS parent_id, 8.240178848678195 AS [Estimator] UNION ALL SELECT 9 AS node_id, 'scaler_3' AS feature, -1.1151597499847412 AS threshold, 4 AS count, 2 AS depth, 1 AS parent_id, 15.67231807768523 AS [Estimator] UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 9 AS parent_id, 12.109886588685942 AS [Estimator] UNION ALL SELECT 11 AS node_id, 'scaler_10' AS feature, -1.0225497484207153 AS threshold, 3 AS count, 3 AS depth, 9 AS parent_id, 16.859795240684992 AS [Estimator] UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 11 AS parent_id, 18.332058017434036 AS [Estimator] UNION ALL SELECT 13 AS node_id, 'scaler_5' AS feature, 0.4354757070541382 AS threshold, 2 AS count, 4 AS depth, 11 AS parent_id, 16.12366385231047 AS [Estimator] UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 13 AS parent_id, 16.324769596540094 AS [Estimator] UNION ALL SELECT 15 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 13 AS parent_id, 15.922558108080853 AS [Estimator] UNION ALL SELECT 16 AS node_id, 'scaler_10' AS feature, -0.9946627616882324 AS threshold, 7 AS count, 1 AS depth, 0 AS parent_id, 19.666897439598078 AS [Estimator] UNION ALL SELECT 17 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 2 AS depth, 16 AS parent_id, 25.24805848092261 AS [Estimator] UNION ALL SELECT 18 AS node_id, 'scaler_10' AS feature, -0.12862390279769897 AS threshold, 6 AS count, 2 AS depth, 16 AS parent_id, 18.652140886629983 AS [Estimator] UNION ALL SELECT 19 AS node_id, 'scaler_8' AS feature, 0.8723889589309692 AS threshold, 4 AS count, 3 AS depth, 18 AS parent_id, 18.06922111595604 AS [Estimator] UNION ALL SELECT 20 AS node_id, 'scaler_10' AS feature, -0.4337124824523926 AS threshold, 3 AS count, 4 AS depth, 19 AS parent_id, 18.14788782893458 AS [Estimator] UNION ALL SELECT 21 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 5 AS depth, 20 AS parent_id, 18.070782061848632 AS [Estimator] UNION ALL SELECT 22 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 20 AS parent_id, 18.2506955183825 AS [Estimator] UNION ALL SELECT 23 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 19 AS parent_id, 17.51855412510629 AS [Estimator] UNION ALL SELECT 24 AS node_id, 'scaler_6' AS feature, 0.6809350252151489 AS threshold, 2 AS count, 3 AS depth, 18 AS parent_id, 20.206593608427166 AS [Estimator] UNION ALL SELECT 25 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 24 AS parent_id, 20.70189537226964 AS [Estimator] UNION ALL SELECT 26 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 24 AS parent_id, 19.95894272650593 AS [Estimator]) AS [Values]), 
[DT_Output_2] AS 
(SELECT [DT_node_lookup_2].[KEY] AS [KEY], [DT_node_lookup_2].node_id_2 AS node_id_2, [DT_node_data_2].node_id AS node_id, [DT_node_data_2].feature AS feature, [DT_node_data_2].threshold AS threshold, [DT_node_data_2].count AS count, [DT_node_data_2].depth AS depth, [DT_node_data_2].parent_id AS parent_id, [DT_node_data_2].[Estimator] AS [Estimator] 
FROM [DT_node_lookup_2] LEFT OUTER JOIN [DT_node_data_2] ON [DT_node_lookup_2].node_id_2 = [DT_node_data_2].node_id), 
[BAG_Tree_2] AS 
(SELECT [DT_Output_2].[KEY] AS [KEY], [DT_Output_2].[Estimator] AS [Estimator] 
FROM [DT_Output_2]), 
[DT_node_lookup_3] AS 
(SELECT [ADS_sca_2_OUT].[KEY] AS [KEY], CASE WHEN ([ADS_sca_2_OUT].scaler_5 <= -0.9624107480049133) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_3 <= 0.9427720308303833) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_9 <= 0.6602644920349121) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_7 <= -0.03996717557311058) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_4 <= -0.1272737979888916) THEN 5 ELSE 6 END ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_7 <= 0.031236611306667328) THEN 8 ELSE 9 END END ELSE 10 END ELSE 11 END ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_3 <= -0.68681401014328) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_2 <= 0.18509911000728607) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_2 <= -0.6915827989578247) THEN 15 ELSE 16 END ELSE 17 END ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_4 <= 1.1215211153030396) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_7 <= 1.5590710639953613) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_3 <= 1.7446763515472412) THEN 21 ELSE 22 END ELSE 23 END ELSE 24 END END END AS node_id_2 
FROM [ADS_sca_2_OUT]), 
[DT_node_data_3] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Estimator] AS [Estimator] 
FROM (SELECT 0 AS node_id, 'scaler_5' AS feature, -0.9624107480049133 AS threshold, 19 AS count, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 14.903655239367094 AS [Estimator] UNION ALL SELECT 1 AS node_id, 'scaler_3' AS feature, 0.9427720308303833 AS threshold, 6 AS count, 1 AS depth, 0 AS parent_id, 8.03983555048614 AS [Estimator] UNION ALL SELECT 2 AS node_id, 'scaler_9' AS feature, 0.6602644920349121 AS threshold, 5 AS count, 2 AS depth, 1 AS parent_id, 6.76205447856881 AS [Estimator] UNION ALL SELECT 3 AS node_id, 'scaler_7' AS feature, -0.03996717557311058 AS threshold, 4 AS count, 3 AS depth, 2 AS parent_id, 6.088107450872127 AS [Estimator] UNION ALL SELECT 4 AS node_id, 'scaler_4' AS feature, -0.1272737979888916 AS threshold, 2 AS count, 4 AS depth, 3 AS parent_id, 5.543831518879064 AS [Estimator] UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 4 AS parent_id, 5.293284001301807 AS [Estimator] UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 4 AS parent_id, 5.794379036456321 AS [Estimator] UNION ALL SELECT 7 AS node_id, 'scaler_7' AS feature, 0.031236611306667328 AS threshold, 2 AS count, 4 AS depth, 3 AS parent_id, 6.450958072200835 AS [Estimator] UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 7 AS parent_id, 6.861453719338209 AS [Estimator] UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 7 AS parent_id, 6.2457102486321485 AS [Estimator] UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 2 AS parent_id, 10.131789617052231 AS [Estimator] UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 2 AS depth, 1 AS parent_id, 15.706521981990113 AS [Estimator] UNION ALL SELECT 12 AS node_id, 'scaler_3' AS feature, -0.68681401014328 AS threshold, 13 AS count, 1 AS depth, 0 AS parent_id, 17.572918451709693 AS [Estimator] UNION ALL SELECT 13 AS node_id, 'scaler_2' AS feature, 0.18509911000728607 AS threshold, 3 AS count, 2 AS depth, 12 AS parent_id, 12.738418355384152 AS [Estimator] UNION ALL SELECT 14 AS node_id, 'scaler_2' AS feature, -0.6915827989578247 AS threshold, 2 AS count, 3 AS depth, 13 AS parent_id, 10.819984008683358 AS [Estimator] UNION ALL SELECT 15 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 14 AS parent_id, 12.109886588685942 AS [Estimator] UNION ALL SELECT 16 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 14 AS parent_id, 8.240178848678195 AS [Estimator] UNION ALL SELECT 17 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 13 AS parent_id, 18.493721395486528 AS [Estimator] UNION ALL SELECT 18 AS node_id, 'scaler_4' AS feature, 1.1215211153030396 AS threshold, 10 AS count, 2 AS depth, 12 AS parent_id, 18.954204193516983 AS [Estimator] UNION ALL SELECT 19 AS node_id, 'scaler_7' AS feature, 1.5590710639953613 AS threshold, 9 AS count, 3 AS depth, 18 AS parent_id, 18.47006155602425 AS [Estimator] UNION ALL SELECT 20 AS node_id, 'scaler_3' AS feature, 1.7446763515472412 AS threshold, 8 AS count, 4 AS depth, 19 AS parent_id, 18.284075404670464 AS [Estimator] UNION ALL SELECT 21 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 7 AS count, 5 AS depth, 20 AS parent_id, 18.13181473904906 AS [Estimator] UNION ALL SELECT 22 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 20 AS parent_id, 19.95894272650593 AS [Estimator] UNION ALL SELECT 23 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 19 AS parent_id, 20.70189537226964 AS [Estimator] UNION ALL SELECT 24 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 18 AS parent_id, 25.24805848092261 AS [Estimator]) AS [Values]), 
[DT_Output_3] AS 
(SELECT [DT_node_lookup_3].[KEY] AS [KEY], [DT_node_lookup_3].node_id_2 AS node_id_2, [DT_node_data_3].node_id AS node_id, [DT_node_data_3].feature AS feature, [DT_node_data_3].threshold AS threshold, [DT_node_data_3].count AS count, [DT_node_data_3].depth AS depth, [DT_node_data_3].parent_id AS parent_id, [DT_node_data_3].[Estimator] AS [Estimator] 
FROM [DT_node_lookup_3] LEFT OUTER JOIN [DT_node_data_3] ON [DT_node_lookup_3].node_id_2 = [DT_node_data_3].node_id), 
[BAG_Tree_3] AS 
(SELECT [DT_Output_3].[KEY] AS [KEY], [DT_Output_3].[Estimator] AS [Estimator] 
FROM [DT_Output_3]), 
[DT_node_lookup_4] AS 
(SELECT [ADS_sca_2_OUT].[KEY] AS [KEY], CASE WHEN ([ADS_sca_2_OUT].scaler_5 <= -1.333762288093567) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_5 <= -1.4895656108856201) THEN 2 ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_11 <= 0.741403341293335) THEN 4 ELSE 5 END END ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_7 <= 1.0655766725540161) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_5 <= 0.7496363520622253) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_10 <= 0.12077191472053528) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_2 <= 0.5004367828369141) THEN 10 ELSE 11 END ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_9 <= 1.2534453868865967) THEN 13 ELSE 14 END END ELSE 15 END ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_5 <= 1.4536983966827393) THEN 17 ELSE 18 END END END AS node_id_2 
FROM [ADS_sca_2_OUT]), 
[DT_node_data_4] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Estimator] AS [Estimator] 
FROM (SELECT 0 AS node_id, 'scaler_5' AS feature, -1.333762288093567 AS threshold, 11 AS count, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 15.442236044993814 AS [Estimator] UNION ALL SELECT 1 AS node_id, 'scaler_5' AS feature, -1.4895656108856201 AS threshold, 3 AS count, 1 AS depth, 0 AS parent_id, 7.2535725797502835 AS [Estimator] UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 2 AS depth, 1 AS parent_id, 5.293284001301807 AS [Estimator] UNION ALL SELECT 3 AS node_id, 'scaler_11' AS feature, 0.741403341293335 AS threshold, 2 AS count, 2 AS depth, 1 AS parent_id, 9.867290684348252 AS [Estimator] UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 3 AS parent_id, 10.131789617052231 AS [Estimator] UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 3 AS parent_id, 9.735041217996262 AS [Estimator] UNION ALL SELECT 6 AS node_id, 'scaler_7' AS feature, 1.0655766725540161 AS threshold, 8 AS count, 1 AS depth, 0 AS parent_id, 18.626716281477414 AS [Estimator] UNION ALL SELECT 7 AS node_id, 'scaler_5' AS feature, 0.7496363520622253 AS threshold, 6 AS count, 2 AS depth, 6 AS parent_id, 16.47957265849091 AS [Estimator] UNION ALL SELECT 8 AS node_id, 'scaler_10' AS feature, 0.12077191472053528 AS threshold, 5 AS count, 3 AS depth, 7 AS parent_id, 17.10732061430715 AS [Estimator] UNION ALL SELECT 9 AS node_id, 'scaler_2' AS feature, 0.5004367828369141 AS threshold, 3 AS count, 4 AS depth, 8 AS parent_id, 17.835103831001845 AS [Estimator] UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 9 AS parent_id, 17.51855412510629 AS [Estimator] UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 5 AS depth, 9 AS parent_id, 17.993378683949622 AS [Estimator] UNION ALL SELECT 12 AS node_id, 'scaler_9' AS feature, 1.2534453868865967 AS threshold, 2 AS count, 4 AS depth, 8 AS parent_id, 16.015645789265104 AS [Estimator] UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 12 AS parent_id, 16.324769596540094 AS [Estimator] UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 12 AS parent_id, 15.706521981990113 AS [Estimator] UNION ALL SELECT 15 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 7 AS parent_id, 10.20209310032856 AS [Estimator] UNION ALL SELECT 16 AS node_id, 'scaler_5' AS feature, 1.4536983966827393 AS threshold, 2 AS count, 2 AS depth, 6 AS parent_id, 22.00079911759906 AS [Estimator] UNION ALL SELECT 17 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 16 AS parent_id, 20.70189537226964 AS [Estimator] UNION ALL SELECT 18 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 16 AS parent_id, 25.24805848092261 AS [Estimator]) AS [Values]), 
[DT_Output_4] AS 
(SELECT [DT_node_lookup_4].[KEY] AS [KEY], [DT_node_lookup_4].node_id_2 AS node_id_2, [DT_node_data_4].node_id AS node_id, [DT_node_data_4].feature AS feature, [DT_node_data_4].threshold AS threshold, [DT_node_data_4].count AS count, [DT_node_data_4].depth AS depth, [DT_node_data_4].parent_id AS parent_id, [DT_node_data_4].[Estimator] AS [Estimator] 
FROM [DT_node_lookup_4] LEFT OUTER JOIN [DT_node_data_4] ON [DT_node_lookup_4].node_id_2 = [DT_node_data_4].node_id), 
[BAG_Tree_4] AS 
(SELECT [DT_Output_4].[KEY] AS [KEY], [DT_Output_4].[Estimator] AS [Estimator] 
FROM [DT_Output_4]), 
[DT_node_lookup_5] AS 
(SELECT [ADS_sca_2_OUT].[KEY] AS [KEY], CASE WHEN ([ADS_sca_2_OUT].scaler_5 <= -0.15014678239822388) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_4 <= -1.1256920099258423) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_4 <= -1.6108086109161377) THEN 3 ELSE 4 END ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_9 <= 0.48946717381477356) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_9 <= 0.2848486304283142) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_5 <= -1.3353149890899658) THEN 8 ELSE 9 END ELSE 10 END ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_11 <= -0.2130434662103653) THEN 12 ELSE 13 END END END ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_7 <= 1.2292087078094482) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_7 <= 0.8179357647895813) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_9 <= 0.4907524883747101) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_4 <= -1.321592926979065) THEN 18 ELSE 19 END ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_8 <= 0.1399441361427307) THEN 21 ELSE 22 END END ELSE 23 END ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_10 <= -0.4896681606769562) THEN 25 ELSE 26 END END END AS node_id_2 
FROM [ADS_sca_2_OUT]), 
[DT_node_data_5] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Estimator] AS [Estimator] 
FROM (SELECT 0 AS node_id, 'scaler_5' AS feature, -0.15014678239822388 AS threshold, 17 AS count, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 14.86313178551044 AS [Estimator] UNION ALL SELECT 1 AS node_id, 'scaler_4' AS feature, -1.1256920099258423 AS threshold, 7 AS count, 1 AS depth, 0 AS parent_id, 9.299679681958647 AS [Estimator] UNION ALL SELECT 2 AS node_id, 'scaler_4' AS feature, -1.6108086109161377 AS threshold, 2 AS count, 2 AS depth, 1 AS parent_id, 16.978608750186307 AS [Estimator] UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 2 AS parent_id, 18.2506955183825 AS [Estimator] UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 2 AS parent_id, 15.706521981990113 AS [Estimator] UNION ALL SELECT 5 AS node_id, 'scaler_9' AS feature, 0.48946717381477356 AS threshold, 5 AS count, 2 AS depth, 1 AS parent_id, 7.105699948179317 AS [Estimator] UNION ALL SELECT 6 AS node_id, 'scaler_9' AS feature, 0.2848486304283142 AS threshold, 3 AS count, 3 AS depth, 5 AS parent_id, 5.781938080711649 AS [Estimator] UNION ALL SELECT 7 AS node_id, 'scaler_5' AS feature, -1.3353149890899658 AS threshold, 2 AS count, 4 AS depth, 6 AS parent_id, 5.944822773848263 AS [Estimator] UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 7 AS parent_id, 5.794379036456321 AS [Estimator] UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 7 AS parent_id, 6.2457102486321485 AS [Estimator] UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 6 AS parent_id, 5.293284001301807 AS [Estimator] UNION ALL SELECT 11 AS node_id, 'scaler_11' AS feature, -0.2130434662103653 AS threshold, 2 AS count, 3 AS depth, 5 AS parent_id, 8.87071577146954 AS [Estimator] UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 11 AS parent_id, 8.240178848678195 AS [Estimator] UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 11 AS parent_id, 10.131789617052231 AS [Estimator] UNION ALL SELECT 14 AS node_id, 'scaler_7' AS feature, 1.2292087078094482 AS threshold, 10 AS count, 1 AS depth, 0 AS parent_id, 17.992573593758326 AS [Estimator] UNION ALL SELECT 15 AS node_id, 'scaler_7' AS feature, 0.8179357647895813 AS threshold, 8 AS count, 2 AS depth, 14 AS parent_id, 16.331772482812394 AS [Estimator] UNION ALL SELECT 16 AS node_id, 'scaler_9' AS feature, 0.4907524883747101 AS threshold, 7 AS count, 3 AS depth, 15 AS parent_id, 17.73906778085454 AS [Estimator] UNION ALL SELECT 17 AS node_id, 'scaler_4' AS feature, -1.321592926979065 AS threshold, 5 AS count, 4 AS depth, 16 AS parent_id, 18.51325212108831 AS [Estimator] UNION ALL SELECT 18 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 17 AS parent_id, 19.95894272650593 AS [Estimator] UNION ALL SELECT 19 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS count, 5 AS depth, 17 AS parent_id, 18.224114000004782 AS [Estimator] UNION ALL SELECT 20 AS node_id, 'scaler_8' AS feature, 0.1399441361427307 AS threshold, 2 AS count, 4 AS depth, 16 AS parent_id, 16.19069910038701 AS [Estimator] UNION ALL SELECT 21 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 20 AS parent_id, 15.922558108080853 AS [Estimator] UNION ALL SELECT 22 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 20 AS parent_id, 16.324769596540094 AS [Estimator] UNION ALL SELECT 23 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 15 AS parent_id, 12.109886588685944 AS [Estimator] UNION ALL SELECT 24 AS node_id, 'scaler_10' AS feature, -0.4896681606769562 AS threshold, 2 AS count, 2 AS depth, 14 AS parent_id, 22.974976926596124 AS [Estimator] UNION ALL SELECT 25 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 24 AS parent_id, 25.24805848092261 AS [Estimator] UNION ALL SELECT 26 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 24 AS parent_id, 20.70189537226964 AS [Estimator]) AS [Values]), 
[DT_Output_5] AS 
(SELECT [DT_node_lookup_5].[KEY] AS [KEY], [DT_node_lookup_5].node_id_2 AS node_id_2, [DT_node_data_5].node_id AS node_id, [DT_node_data_5].feature AS feature, [DT_node_data_5].threshold AS threshold, [DT_node_data_5].count AS count, [DT_node_data_5].depth AS depth, [DT_node_data_5].parent_id AS parent_id, [DT_node_data_5].[Estimator] AS [Estimator] 
FROM [DT_node_lookup_5] LEFT OUTER JOIN [DT_node_data_5] ON [DT_node_lookup_5].node_id_2 = [DT_node_data_5].node_id), 
[BAG_Tree_5] AS 
(SELECT [DT_Output_5].[KEY] AS [KEY], [DT_Output_5].[Estimator] AS [Estimator] 
FROM [DT_Output_5]), 
[DT_node_lookup_6] AS 
(SELECT [ADS_sca_2_OUT].[KEY] AS [KEY], CASE WHEN ([ADS_sca_2_OUT].scaler_5 <= -0.08259014040231705) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_3 <= -0.03850368410348892) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_5 <= -0.7813036441802979) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_3 <= -0.72694993019104) THEN 4 ELSE 5 END ELSE 6 END ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_2 <= 0.17707836627960205) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_4 <= 0.7804101705551147) THEN 9 ELSE 10 END ELSE 11 END END ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_10 <= -1.0644830465316772) THEN 13 ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_3 <= -1.4657516479492188) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_8 <= -0.6909001469612122) THEN 16 ELSE 17 END ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_10 <= -0.7769564390182495) THEN 19 ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_6 <= 1.9945831298828125) THEN 21 ELSE 22 END END END END END AS node_id_2 
FROM [ADS_sca_2_OUT]), 
[DT_node_data_6] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Estimator] AS [Estimator] 
FROM (SELECT 0 AS node_id, 'scaler_5' AS feature, -0.08259014040231705 AS threshold, 16 AS count, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 14.17513719699392 AS [Estimator] UNION ALL SELECT 1 AS node_id, 'scaler_3' AS feature, -0.03850368410348892 AS threshold, 6 AS count, 1 AS depth, 0 AS parent_id, 8.427121010157812 AS [Estimator] UNION ALL SELECT 2 AS node_id, 'scaler_5' AS feature, -0.7813036441802979 AS threshold, 3 AS count, 2 AS depth, 1 AS parent_id, 6.427677944581213 AS [Estimator] UNION ALL SELECT 3 AS node_id, 'scaler_3' AS feature, -0.72694993019104 AS threshold, 2 AS count, 3 AS depth, 2 AS parent_id, 6.065177763761817 AS [Estimator] UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 3 AS parent_id, 6.245710248632148 AS [Estimator] UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 3 AS parent_id, 5.794379036456321 AS [Estimator] UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 2 AS parent_id, 8.240178848678195 AS [Estimator] UNION ALL SELECT 7 AS node_id, 'scaler_2' AS feature, 0.17707836627960205 AS threshold, 3 AS count, 2 AS depth, 1 AS parent_id, 11.42628560852271 AS [Estimator] UNION ALL SELECT 8 AS node_id, 'scaler_4' AS feature, 0.7804101705551147 AS threshold, 2 AS count, 3 AS depth, 7 AS parent_id, 9.999540150700241 AS [Estimator] UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 8 AS parent_id, 10.131789617052231 AS [Estimator] UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 8 AS parent_id, 9.735041217996262 AS [Estimator] UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 7 AS parent_id, 15.706521981990113 AS [Estimator] UNION ALL SELECT 12 AS node_id, 'scaler_10' AS feature, -1.0644830465316772 AS threshold, 10 AS count, 1 AS depth, 0 AS parent_id, 18.007147988217987 AS [Estimator] UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 2 AS depth, 12 AS parent_id, 25.24805848092261 AS [Estimator] UNION ALL SELECT 14 AS node_id, 'scaler_3' AS feature, -1.4657516479492188 AS threshold, 9 AS count, 2 AS depth, 12 AS parent_id, 16.196920365041834 AS [Estimator] UNION ALL SELECT 15 AS node_id, 'scaler_8' AS feature, -0.6909001469612122 AS threshold, 2 AS count, 3 AS depth, 14 AS parent_id, 11.473955425900149 AS [Estimator] UNION ALL SELECT 16 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 15 AS parent_id, 12.109886588685942 AS [Estimator] UNION ALL SELECT 17 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 15 AS parent_id, 10.20209310032856 AS [Estimator] UNION ALL SELECT 18 AS node_id, 'scaler_10' AS feature, -0.7769564390182495 AS threshold, 7 AS count, 3 AS depth, 14 AS parent_id, 17.77124201142239 AS [Estimator] UNION ALL SELECT 19 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 18 AS parent_id, 15.922558108080853 AS [Estimator] UNION ALL SELECT 20 AS node_id, 'scaler_6' AS feature, 1.9945831298828125 AS threshold, 6 AS count, 4 AS depth, 18 AS parent_id, 18.002327499340087 AS [Estimator] UNION ALL SELECT 21 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS count, 5 AS depth, 20 AS parent_id, 18.241978628311514 AS [Estimator] UNION ALL SELECT 22 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 20 AS parent_id, 16.324769596540094 AS [Estimator]) AS [Values]), 
[DT_Output_6] AS 
(SELECT [DT_node_lookup_6].[KEY] AS [KEY], [DT_node_lookup_6].node_id_2 AS node_id_2, [DT_node_data_6].node_id AS node_id, [DT_node_data_6].feature AS feature, [DT_node_data_6].threshold AS threshold, [DT_node_data_6].count AS count, [DT_node_data_6].depth AS depth, [DT_node_data_6].parent_id AS parent_id, [DT_node_data_6].[Estimator] AS [Estimator] 
FROM [DT_node_lookup_6] LEFT OUTER JOIN [DT_node_data_6] ON [DT_node_lookup_6].node_id_2 = [DT_node_data_6].node_id), 
[BAG_Tree_6] AS 
(SELECT [DT_Output_6].[KEY] AS [KEY], [DT_Output_6].[Estimator] AS [Estimator] 
FROM [DT_Output_6]), 
[DT_node_lookup_7] AS 
(SELECT [ADS_sca_2_OUT].[KEY] AS [KEY], CASE WHEN ([ADS_sca_2_OUT].scaler_5 <= 1.0448102951049805) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_5 <= -1.3050730228424072) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_3 <= 0.2611677944660187) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_5 <= -1.4243197441101074) THEN 4 ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_5 <= -1.3353149890899658) THEN 6 ELSE 7 END END ELSE 8 END ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_3 <= -0.8315399885177612) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_6 <= 0.391139954328537) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_4 <= 0.17209812998771667) THEN 12 ELSE 13 END ELSE 14 END ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_9 <= 0.4907524883747101) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_4 <= 0.7569323778152466) THEN 17 ELSE 18 END ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_4 <= 0.8347191214561462) THEN 20 ELSE 21 END END END END ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_7 <= 1.5942299365997314) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_2 <= 0.49409133195877075) THEN 24 ELSE 25 END ELSE 26 END END AS node_id_2 
FROM [ADS_sca_2_OUT]), 
[DT_node_data_7] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Estimator] AS [Estimator] 
FROM (SELECT 0 AS node_id, 'scaler_5' AS feature, 1.0448102951049805 AS threshold, 18 AS count, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 14.53713801942297 AS [Estimator] UNION ALL SELECT 1 AS node_id, 'scaler_5' AS feature, -1.3050730228424072 AS threshold, 15 AS count, 1 AS depth, 0 AS parent_id, 13.035081750284425 AS [Estimator] UNION ALL SELECT 2 AS node_id, 'scaler_3' AS feature, 0.2611677944660187 AS threshold, 4 AS count, 2 AS depth, 1 AS parent_id, 6.866290725860626 AS [Estimator] UNION ALL SELECT 3 AS node_id, 'scaler_5' AS feature, -1.4243197441101074 AS threshold, 3 AS count, 3 AS depth, 2 AS parent_id, 5.777791095463425 AS [Estimator] UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 3 AS parent_id, 5.293284001301807 AS [Estimator] UNION ALL SELECT 5 AS node_id, 'scaler_5' AS feature, -1.3353149890899658 AS threshold, 2 AS count, 4 AS depth, 3 AS parent_id, 6.020044642544235 AS [Estimator] UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 5 AS parent_id, 5.794379036456321 AS [Estimator] UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 5 AS parent_id, 6.2457102486321485 AS [Estimator] UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 2 AS parent_id, 10.131789617052231 AS [Estimator] UNION ALL SELECT 9 AS node_id, 'scaler_3' AS feature, -0.8315399885177612 AS threshold, 11 AS count, 2 AS depth, 1 AS parent_id, 14.486561991325317 AS [Estimator] UNION ALL SELECT 10 AS node_id, 'scaler_6' AS feature, 0.391139954328537 AS threshold, 3 AS count, 3 AS depth, 9 AS parent_id, 10.829004135898858 AS [Estimator] UNION ALL SELECT 11 AS node_id, 'scaler_4' AS feature, 0.17209812998771667 AS threshold, 2 AS count, 4 AS depth, 10 AS parent_id, 9.548121683111772 AS [Estimator] UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 11 AS parent_id, 8.240178848678195 AS [Estimator] UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 11 AS parent_id, 10.20209310032856 AS [Estimator] UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 10 AS parent_id, 12.109886588685944 AS [Estimator] UNION ALL SELECT 15 AS node_id, 'scaler_9' AS feature, 0.4907524883747101 AS threshold, 8 AS count, 3 AS depth, 9 AS parent_id, 16.48159354883066 AS [Estimator] UNION ALL SELECT 16 AS node_id, 'scaler_4' AS feature, 0.7569323778152466 AS threshold, 4 AS count, 4 AS depth, 15 AS parent_id, 17.834661190292444 AS [Estimator] UNION ALL SELECT 17 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 5 AS depth, 16 AS parent_id, 18.250471781241558 AS [Estimator] UNION ALL SELECT 18 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 5 AS depth, 16 AS parent_id, 17.418850599343326 AS [Estimator] UNION ALL SELECT 19 AS node_id, 'scaler_4' AS feature, 0.8347191214561462 AS threshold, 4 AS count, 4 AS depth, 15 AS parent_id, 15.708412039423928 AS [Estimator] UNION ALL SELECT 20 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 5 AS depth, 19 AS parent_id, 15.984616562203685 AS [Estimator] UNION ALL SELECT 21 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 19 AS parent_id, 14.051184902745373 AS [Estimator] UNION ALL SELECT 22 AS node_id, 'scaler_7' AS feature, 1.5942299365997314 AS threshold, 3 AS count, 1 AS depth, 0 AS parent_id, 22.42293343240035 AS [Estimator] UNION ALL SELECT 23 AS node_id, 'scaler_2' AS feature, 0.49409133195877075 AS threshold, 2 AS count, 2 AS depth, 22 AS parent_id, 19.597808383878082 AS [Estimator] UNION ALL SELECT 24 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 23 AS parent_id, 18.493721395486528 AS [Estimator] UNION ALL SELECT 25 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 23 AS parent_id, 20.70189537226964 AS [Estimator] UNION ALL SELECT 26 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 2 AS depth, 22 AS parent_id, 25.24805848092261 AS [Estimator]) AS [Values]), 
[DT_Output_7] AS 
(SELECT [DT_node_lookup_7].[KEY] AS [KEY], [DT_node_lookup_7].node_id_2 AS node_id_2, [DT_node_data_7].node_id AS node_id, [DT_node_data_7].feature AS feature, [DT_node_data_7].threshold AS threshold, [DT_node_data_7].count AS count, [DT_node_data_7].depth AS depth, [DT_node_data_7].parent_id AS parent_id, [DT_node_data_7].[Estimator] AS [Estimator] 
FROM [DT_node_lookup_7] LEFT OUTER JOIN [DT_node_data_7] ON [DT_node_lookup_7].node_id_2 = [DT_node_data_7].node_id), 
[BAG_Tree_7] AS 
(SELECT [DT_Output_7].[KEY] AS [KEY], [DT_Output_7].[Estimator] AS [Estimator] 
FROM [DT_Output_7]), 
[DT_node_lookup_8] AS 
(SELECT [ADS_sca_2_OUT].[KEY] AS [KEY], CASE WHEN ([ADS_sca_2_OUT].scaler_5 <= 0.4016093313694) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_3 <= 0.17052647471427917) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_10 <= 0.697884738445282) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_3 <= -0.01863822713494301) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_5 <= -1.1544623374938965) THEN 5 ELSE 6 END ELSE 7 END ELSE 8 END ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_10 <= 1.2912862300872803) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_3 <= 0.8406397700309753) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_8 <= -0.23516595363616943) THEN 12 ELSE 13 END ELSE 14 END ELSE 15 END END ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_3 <= 0.7115476727485657) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_3 <= -0.45597419142723083) THEN 18 ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_6 <= 0.1584574580192566) THEN 20 ELSE 21 END END ELSE 22 END END AS node_id_2 
FROM [ADS_sca_2_OUT]), 
[DT_node_data_8] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Estimator] AS [Estimator] 
FROM (SELECT 0 AS node_id, 'scaler_5' AS feature, 0.4016093313694 AS threshold, 14 AS count, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 13.410457747525916 AS [Estimator] UNION ALL SELECT 1 AS node_id, 'scaler_3' AS feature, 0.17052647471427917 AS threshold, 10 AS count, 1 AS depth, 0 AS parent_id, 10.070337450107138 AS [Estimator] UNION ALL SELECT 2 AS node_id, 'scaler_10' AS feature, 0.697884738445282 AS threshold, 6 AS count, 2 AS depth, 1 AS parent_id, 8.256809590774106 AS [Estimator] UNION ALL SELECT 3 AS node_id, 'scaler_3' AS feature, -0.01863822713494301 AS threshold, 5 AS count, 3 AS depth, 2 AS parent_id, 7.486194191191737 AS [Estimator] UNION ALL SELECT 4 AS node_id, 'scaler_5' AS feature, -1.1544623374938965 AS threshold, 4 AS count, 4 AS depth, 3 AS parent_id, 6.522402608275512 AS [Estimator] UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 5 AS depth, 4 AS parent_id, 5.6107594170785875 AS [Estimator] UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 5 AS depth, 4 AS parent_id, 7.206135001673205 AS [Estimator] UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 3 AS parent_id, 9.735041217996262 AS [Estimator] UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 2 AS parent_id, 12.109886588685942 AS [Estimator] UNION ALL SELECT 9 AS node_id, 'scaler_10' AS feature, 1.2912862300872803 AS threshold, 4 AS count, 2 AS depth, 1 AS parent_id, 15.510921028106239 AS [Estimator] UNION ALL SELECT 10 AS node_id, 'scaler_3' AS feature, 0.8406397700309753 AS threshold, 3 AS count, 3 AS depth, 9 AS parent_id, 17.30396483179091 AS [Estimator] UNION ALL SELECT 11 AS node_id, 'scaler_8' AS feature, -0.23516595363616943 AS threshold, 2 AS count, 4 AS depth, 10 AS parent_id, 18.102686256691307 AS [Estimator] UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 11 AS parent_id, 18.2506955183825 AS [Estimator] UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 11 AS parent_id, 17.954676995000113 AS [Estimator] UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 10 AS parent_id, 15.706521981990113 AS [Estimator] UNION ALL SELECT 15 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 9 AS parent_id, 10.131789617052231 AS [Estimator] UNION ALL SELECT 16 AS node_id, 'scaler_3' AS feature, 0.7115476727485657 AS threshold, 4 AS count, 1 AS depth, 0 AS parent_id, 19.34844938738152 AS [Estimator] UNION ALL SELECT 17 AS node_id, 'scaler_3' AS feature, -0.45597419142723083 AS threshold, 3 AS count, 2 AS depth, 16 AS parent_id, 16.398644840610977 AS [Estimator] UNION ALL SELECT 18 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 17 AS parent_id, 14.051184902745373 AS [Estimator] UNION ALL SELECT 19 AS node_id, 'scaler_6' AS feature, 0.1584574580192566 AS threshold, 2 AS count, 3 AS depth, 17 AS parent_id, 17.57237480954378 AS [Estimator] UNION ALL SELECT 20 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 19 AS parent_id, 17.31914707358036 AS [Estimator] UNION ALL SELECT 21 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 19 AS parent_id, 18.332058017434036 AS [Estimator] UNION ALL SELECT 22 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 2 AS depth, 16 AS parent_id, 25.24805848092261 AS [Estimator]) AS [Values]), 
[DT_Output_8] AS 
(SELECT [DT_node_lookup_8].[KEY] AS [KEY], [DT_node_lookup_8].node_id_2 AS node_id_2, [DT_node_data_8].node_id AS node_id, [DT_node_data_8].feature AS feature, [DT_node_data_8].threshold AS threshold, [DT_node_data_8].count AS count, [DT_node_data_8].depth AS depth, [DT_node_data_8].parent_id AS parent_id, [DT_node_data_8].[Estimator] AS [Estimator] 
FROM [DT_node_lookup_8] LEFT OUTER JOIN [DT_node_data_8] ON [DT_node_lookup_8].node_id_2 = [DT_node_data_8].node_id), 
[BAG_Tree_8] AS 
(SELECT [DT_Output_8].[KEY] AS [KEY], [DT_Output_8].[Estimator] AS [Estimator] 
FROM [DT_Output_8]), 
[DT_node_lookup_9] AS 
(SELECT [ADS_sca_2_OUT].[KEY] AS [KEY], CASE WHEN ([ADS_sca_2_OUT].scaler_5 <= -1.3050730228424072) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_7 <= -0.8448602557182312) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_10 <= 0.6741739511489868) THEN 3 ELSE 4 END ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_4 <= -0.1272737979888916) THEN 6 ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_7 <= -0.3599346876144409) THEN 8 ELSE 9 END END END ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_2 <= -1.0317341089248657) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_9 <= 0.8774861097335815) THEN 12 ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_10 <= 0.07323083281517029) THEN 14 ELSE 15 END END ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_11 <= -0.4948153495788574) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_11 <= -1.531711459159851) THEN 18 ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_10 <= 0.9221147894859314) THEN 20 ELSE 21 END END ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_3 <= 0.3571171760559082) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_7 <= 0.3420993685722351) THEN 24 ELSE 25 END ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_2 <= -0.12262478470802307) THEN 27 ELSE 28 END END END END END AS node_id_2 
FROM [ADS_sca_2_OUT]), 
[DT_node_data_9] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Estimator] AS [Estimator] 
FROM (SELECT 0 AS node_id, 'scaler_5' AS feature, -1.3050730228424072 AS threshold, 17 AS count, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 14.45356170130388 AS [Estimator] UNION ALL SELECT 1 AS node_id, 'scaler_7' AS feature, -0.8448602557182312 AS threshold, 5 AS count, 1 AS depth, 0 AS parent_id, 7.165763859649182 AS [Estimator] UNION ALL SELECT 2 AS node_id, 'scaler_10' AS feature, 0.6741739511489868 AS threshold, 2 AS count, 2 AS depth, 1 AS parent_id, 9.933415417524246 AS [Estimator] UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 2 AS parent_id, 9.735041217996262 AS [Estimator] UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 2 AS parent_id, 10.131789617052231 AS [Estimator] UNION ALL SELECT 5 AS node_id, 'scaler_4' AS feature, -0.1272737979888916 AS threshold, 3 AS count, 2 AS depth, 1 AS parent_id, 5.781938080711649 AS [Estimator] UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 5 AS parent_id, 5.293284001301807 AS [Estimator] UNION ALL SELECT 7 AS node_id, 'scaler_7' AS feature, -0.3599346876144409 AS threshold, 2 AS count, 3 AS depth, 5 AS parent_id, 5.944822773848263 AS [Estimator] UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 7 AS parent_id, 5.794379036456321 AS [Estimator] UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 7 AS parent_id, 6.2457102486321485 AS [Estimator] UNION ALL SELECT 10 AS node_id, 'scaler_2' AS feature, -1.0317341089248657 AS threshold, 12 AS count, 1 AS depth, 0 AS parent_id, 16.75497154603694 AS [Estimator] UNION ALL SELECT 11 AS node_id, 'scaler_9' AS feature, 0.8774861097335815 AS threshold, 3 AS count, 2 AS depth, 10 AS parent_id, 11.64131442302211 AS [Estimator] UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 11 AS parent_id, 10.20209310032856 AS [Estimator] UNION ALL SELECT 13 AS node_id, 'scaler_10' AS feature, 0.07323083281517029 AS threshold, 2 AS count, 3 AS depth, 11 AS parent_id, 13.080535745715657 AS [Estimator] UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 13 AS parent_id, 14.051184902745373 AS [Estimator] UNION ALL SELECT 15 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 13 AS parent_id, 12.109886588685942 AS [Estimator] UNION ALL SELECT 16 AS node_id, 'scaler_11' AS feature, -0.4948153495788574 AS threshold, 9 AS count, 2 AS depth, 10 AS parent_id, 18.118613445507563 AS [Estimator] UNION ALL SELECT 17 AS node_id, 'scaler_11' AS feature, -1.531711459159851 AS threshold, 3 AS count, 3 AS depth, 16 AS parent_id, 16.42312263888011 AS [Estimator] UNION ALL SELECT 18 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 17 AS parent_id, 17.954676995000113 AS [Estimator] UNION ALL SELECT 19 AS node_id, 'scaler_10' AS feature, 0.9221147894859314 AS threshold, 2 AS count, 4 AS depth, 17 AS parent_id, 15.91260452017344 AS [Estimator] UNION ALL SELECT 20 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 19 AS parent_id, 16.324769596540094 AS [Estimator] UNION ALL SELECT 21 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 19 AS parent_id, 15.706521981990113 AS [Estimator] UNION ALL SELECT 22 AS node_id, 'scaler_3' AS feature, 0.3571171760559082 AS threshold, 6 AS count, 3 AS depth, 16 AS parent_id, 18.735155557008458 AS [Estimator] UNION ALL SELECT 23 AS node_id, 'scaler_7' AS feature, 0.3420993685722351 AS threshold, 4 AS count, 4 AS depth, 22 AS parent_id, 18.09049720700598 AS [Estimator] UNION ALL SELECT 24 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 23 AS parent_id, 17.31914707358036 AS [Estimator] UNION ALL SELECT 25 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 5 AS depth, 23 AS parent_id, 18.347613918147854 AS [Estimator] UNION ALL SELECT 26 AS node_id, 'scaler_2' AS feature, -0.12262478470802307 AS threshold, 2 AS count, 4 AS depth, 22 AS parent_id, 20.454244490348405 AS [Estimator] UNION ALL SELECT 27 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 26 AS parent_id, 19.95894272650593 AS [Estimator] UNION ALL SELECT 28 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 26 AS parent_id, 20.70189537226964 AS [Estimator]) AS [Values]), 
[DT_Output_9] AS 
(SELECT [DT_node_lookup_9].[KEY] AS [KEY], [DT_node_lookup_9].node_id_2 AS node_id_2, [DT_node_data_9].node_id AS node_id, [DT_node_data_9].feature AS feature, [DT_node_data_9].threshold AS threshold, [DT_node_data_9].count AS count, [DT_node_data_9].depth AS depth, [DT_node_data_9].parent_id AS parent_id, [DT_node_data_9].[Estimator] AS [Estimator] 
FROM [DT_node_lookup_9] LEFT OUTER JOIN [DT_node_data_9] ON [DT_node_lookup_9].node_id_2 = [DT_node_data_9].node_id), 
[BAG_Tree_9] AS 
(SELECT [DT_Output_9].[KEY] AS [KEY], [DT_Output_9].[Estimator] AS [Estimator] 
FROM [DT_Output_9]), 
[Score_Union_CTE] AS 
(SELECT ensemble_score_union.[KEY] AS [KEY], ensemble_score_union.[Estimator] AS [Estimator] 
FROM (SELECT [BAG_Tree_0].[KEY] AS [KEY], [BAG_Tree_0].[Estimator] AS [Estimator] 
FROM [BAG_Tree_0] UNION ALL SELECT [BAG_Tree_1].[KEY] AS [KEY], [BAG_Tree_1].[Estimator] AS [Estimator] 
FROM [BAG_Tree_1] UNION ALL SELECT [BAG_Tree_2].[KEY] AS [KEY], [BAG_Tree_2].[Estimator] AS [Estimator] 
FROM [BAG_Tree_2] UNION ALL SELECT [BAG_Tree_3].[KEY] AS [KEY], [BAG_Tree_3].[Estimator] AS [Estimator] 
FROM [BAG_Tree_3] UNION ALL SELECT [BAG_Tree_4].[KEY] AS [KEY], [BAG_Tree_4].[Estimator] AS [Estimator] 
FROM [BAG_Tree_4] UNION ALL SELECT [BAG_Tree_5].[KEY] AS [KEY], [BAG_Tree_5].[Estimator] AS [Estimator] 
FROM [BAG_Tree_5] UNION ALL SELECT [BAG_Tree_6].[KEY] AS [KEY], [BAG_Tree_6].[Estimator] AS [Estimator] 
FROM [BAG_Tree_6] UNION ALL SELECT [BAG_Tree_7].[KEY] AS [KEY], [BAG_Tree_7].[Estimator] AS [Estimator] 
FROM [BAG_Tree_7] UNION ALL SELECT [BAG_Tree_8].[KEY] AS [KEY], [BAG_Tree_8].[Estimator] AS [Estimator] 
FROM [BAG_Tree_8] UNION ALL SELECT [BAG_Tree_9].[KEY] AS [KEY], [BAG_Tree_9].[Estimator] AS [Estimator] 
FROM [BAG_Tree_9]) AS ensemble_score_union), 
[BAG_AVG_Scores] AS 
(SELECT [T].[KEY] AS [KEY], [T].[Estimator] AS [Estimator] 
FROM (SELECT [Score_Union_CTE].[KEY] AS [KEY], avg([Score_Union_CTE].[Estimator]) AS [Estimator] 
FROM [Score_Union_CTE] GROUP BY [Score_Union_CTE].[KEY]) AS [T])
 SELECT [BAG_AVG_Scores].[KEY] AS [KEY], [BAG_AVG_Scores].[Estimator] AS [Estimator] 
FROM [BAG_AVG_Scores]