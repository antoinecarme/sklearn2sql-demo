-- This SQL code was generated by sklearn2sql (development version).
-- Copyright 2017

WITH "ADS_imp_1_OUT" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_0" IS NULL) THEN 37.1024906382 ELSE "ADS"."Feature_0" END AS imputer_output_2, CASE WHEN ("ADS"."Feature_1" IS NULL) THEN 820.420898922 ELSE "ADS"."Feature_1" END AS imputer_output_3, CASE WHEN ("ADS"."Feature_2" IS NULL) THEN 0.566181762373 ELSE "ADS"."Feature_2" END AS imputer_output_4, CASE WHEN ("ADS"."Feature_3" IS NULL) THEN 6.66448350657 ELSE "ADS"."Feature_3" END AS imputer_output_5 
FROM freidman2 "ADS"), 
"ADS_sca_2_OUT" AS 
(SELECT "ADS_imp_1_OUT"."KEY" AS "KEY", (CAST("ADS_imp_1_OUT".imputer_output_2 AS FLOAT) - 37.1024906382) / 27.2361073362 AS scaler_output_2, (CAST("ADS_imp_1_OUT".imputer_output_3 AS FLOAT) - 820.420898922) / 386.031348182 AS scaler_output_3, (CAST("ADS_imp_1_OUT".imputer_output_4 AS FLOAT) - 0.566181762373) / 0.306900434257 AS scaler_output_4, (CAST("ADS_imp_1_OUT".imputer_output_5 AS FLOAT) - 6.66448350657) / 3.34652241867 AS scaler_output_5 
FROM "ADS_imp_1_OUT"), 
"DT_node_lookup" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= 0.1638009399175644) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= 0.1309148669242859) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= -0.03495202958583832) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= 0.2849499583244324) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= -0.5577172040939331) THEN 5 ELSE 6 END ELSE 7 END ELSE 8 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= 0.7955580949783325) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= 0.424410343170166) THEN 11 ELSE 12 END ELSE 13 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= 0.02516266703605652) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= 1.5224230289459229) THEN 16 ELSE 17 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= -0.3126245439052582) THEN 19 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= -1.1541945934295654) THEN 21 ELSE 22 END END END END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 0 AS node_id, 'scaler_output_4' AS feature, 0.1638009399175644 AS threshold, 15 AS count, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 411.67257803375753 AS "Estimator" FROM DUAL UNION ALL SELECT 1 AS node_id, 'scaler_output_3' AS feature, 0.1309148669242859 AS threshold, 10 AS count, 1 AS depth, 0 AS parent_id, 223.80348328696735 AS "Estimator" FROM DUAL UNION ALL SELECT 2 AS node_id, 'scaler_output_4' AS feature, -0.03495202958583832 AS threshold, 7 AS count, 2 AS depth, 1 AS parent_id, 146.43180610238966 AS "Estimator" FROM DUAL UNION ALL SELECT 3 AS node_id, 'scaler_output_2' AS feature, 0.2849499583244324 AS threshold, 6 AS count, 3 AS depth, 2 AS parent_id, 119.13863996347327 AS "Estimator" FROM DUAL UNION ALL SELECT 4 AS node_id, 'scaler_output_4' AS feature, -0.5577172040939331 AS threshold, 5 AS count, 4 AS depth, 3 AS parent_id, 89.19505294275075 AS "Estimator" FROM DUAL UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 5 AS depth, 4 AS parent_id, 65.21702965407476 AS "Estimator" FROM DUAL UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 5 AS depth, 4 AS parent_id, 129.1584250905441 AS "Estimator" FROM DUAL UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 3 AS parent_id, 238.91298804636327 AS "Estimator" FROM DUAL UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 2 AS parent_id, 419.3634674915536 AS "Estimator" FROM DUAL UNION ALL SELECT 9 AS node_id, 'scaler_output_3' AS feature, 0.7955580949783325 AS threshold, 3 AS count, 2 AS depth, 1 AS parent_id, 365.6515581253598 AS "Estimator" FROM DUAL UNION ALL SELECT 10 AS node_id, 'scaler_output_3' AS feature, 0.424410343170166 AS threshold, 2 AS count, 3 AS depth, 9 AS parent_id, 479.9708331919 AS "Estimator" FROM DUAL UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 10 AS parent_id, 501.63259525741347 AS "Estimator" FROM DUAL UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 10 AS parent_id, 469.13995215914326 AS "Estimator" FROM DUAL UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 9 AS parent_id, 251.33228305881974 AS "Estimator" FROM DUAL UNION ALL SELECT 14 AS node_id, 'scaler_output_5' AS feature, 0.02516266703605652 AS threshold, 5 AS count, 1 AS depth, 0 AS parent_id, 810.8944043706865 AS "Estimator" FROM DUAL UNION ALL SELECT 15 AS node_id, 'scaler_output_2' AS feature, 1.5224230289459229 AS threshold, 2 AS count, 2 AS depth, 14 AS parent_id, 1104.5495293989015 AS "Estimator" FROM DUAL UNION ALL SELECT 16 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 15 AS parent_id, 1006.9476600275759 AS "Estimator" FROM DUAL UNION ALL SELECT 17 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 15 AS parent_id, 1299.7532681415528 AS "Estimator" FROM DUAL UNION ALL SELECT 18 AS node_id, 'scaler_output_3' AS feature, -0.3126245439052582 AS threshold, 3 AS count, 2 AS depth, 14 AS parent_id, 634.7013293537576 AS "Estimator" FROM DUAL UNION ALL SELECT 19 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 18 AS parent_id, 456.84183869251734 AS "Estimator" FROM DUAL UNION ALL SELECT 20 AS node_id, 'scaler_output_2' AS feature, -1.1541945934295654 AS threshold, 2 AS count, 3 AS depth, 18 AS parent_id, 679.1662020190677 AS "Estimator" FROM DUAL UNION ALL SELECT 21 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 20 AS parent_id, 762.1275405517559 AS "Estimator" FROM DUAL UNION ALL SELECT 22 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 20 AS parent_id, 651.5124225081717 AS "Estimator" FROM DUAL) "Values"), 
"DT_Output" AS 
(SELECT "DT_node_lookup"."KEY" AS "KEY", "DT_node_lookup".node_id_2 AS node_id_2, "DT_node_data".node_id AS node_id, "DT_node_data".feature AS feature, "DT_node_data".threshold AS threshold, "DT_node_data".count AS count, "DT_node_data".depth AS depth, "DT_node_data".parent_id AS parent_id, "DT_node_data"."Estimator" AS "Estimator" 
FROM "DT_node_lookup" LEFT OUTER JOIN "DT_node_data" ON "DT_node_lookup".node_id_2 = "DT_node_data".node_id), 
"BAG_Tree_0" AS 
(SELECT "DT_Output"."KEY" AS "KEY", "DT_Output"."Estimator" AS "Estimator" 
FROM "DT_Output"), 
"DT_node_lookup_1" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= 0.1638009399175644) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= -0.46703335642814636) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= -0.705585777759552) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= -1.0407394170761108) THEN 4 ELSE 5 END ELSE 6 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= -0.6290282011032104) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= -1.4069045782089233) THEN 9 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= -0.4138600826263428) THEN 11 ELSE 12 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= 1.1528394222259521) THEN 14 ELSE 15 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= -0.15406937897205353) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= 0.9669622778892517) THEN 18 ELSE 19 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= 1.0196428298950195) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= 0.5893774032592773) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= 0.6707305908203125) THEN 23 ELSE 24 END ELSE 25 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= 0.915624737739563) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= 0.49237146973609924) THEN 28 ELSE 29 END ELSE 30 END END END END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_1" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 0 AS node_id, 'scaler_output_4' AS feature, 0.1638009399175644 AS threshold, 16 AS count, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 522.9353011826607 AS "Estimator" FROM DUAL UNION ALL SELECT 1 AS node_id, 'scaler_output_3' AS feature, -0.46703335642814636 AS threshold, 8 AS count, 1 AS depth, 0 AS parent_id, 210.04342262705848 AS "Estimator" FROM DUAL UNION ALL SELECT 2 AS node_id, 'scaler_output_2' AS feature, -0.705585777759552 AS threshold, 3 AS count, 2 AS depth, 1 AS parent_id, 74.53064538952195 AS "Estimator" FROM DUAL UNION ALL SELECT 3 AS node_id, 'scaler_output_2' AS feature, -1.0407394170761108 AS threshold, 2 AS count, 3 AS depth, 2 AS parent_id, 41.56436581159573 AS "Estimator" FROM DUAL UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 3 AS parent_id, 43.137171961132545 AS "Estimator" FROM DUAL UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 3 AS parent_id, 38.41875351252209 AS "Estimator" FROM DUAL UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 2 AS parent_id, 123.9800647564113 AS "Estimator" FROM DUAL UNION ALL SELECT 7 AS node_id, 'scaler_output_4' AS feature, -0.6290282011032104 AS threshold, 5 AS count, 2 AS depth, 1 AS parent_id, 322.9707369916723 AS "Estimator" FROM DUAL UNION ALL SELECT 8 AS node_id, 'scaler_output_4' AS feature, -1.4069045782089233 AS threshold, 3 AS count, 3 AS depth, 7 AS parent_id, 209.98584493592776 AS "Estimator" FROM DUAL UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 8 AS parent_id, 81.61991678616678 AS "Estimator" FROM DUAL UNION ALL SELECT 10 AS node_id, 'scaler_output_2' AS feature, -0.4138600826263428 AS threshold, 2 AS count, 4 AS depth, 8 AS parent_id, 274.1688090108083 AS "Estimator" FROM DUAL UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 10 AS parent_id, 251.33228305881974 AS "Estimator" FROM DUAL UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 10 AS parent_id, 297.00533496279684 AS "Estimator" FROM DUAL UNION ALL SELECT 13 AS node_id, 'scaler_output_5' AS feature, 1.1528394222259521 AS threshold, 2 AS count, 3 AS depth, 7 AS parent_id, 435.95562904741683 AS "Estimator" FROM DUAL UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 13 AS parent_id, 469.13995215914326 AS "Estimator" FROM DUAL UNION ALL SELECT 15 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 13 AS parent_id, 419.3634674915536 AS "Estimator" FROM DUAL UNION ALL SELECT 16 AS node_id, 'scaler_output_3' AS feature, -0.15406937897205353 AS threshold, 8 AS count, 1 AS depth, 0 AS parent_id, 768.7789200477765 AS "Estimator" FROM DUAL UNION ALL SELECT 17 AS node_id, 'scaler_output_4' AS feature, 0.9669622778892517 AS threshold, 2 AS count, 2 AS depth, 16 AS parent_id, 348.98160475366836 AS "Estimator" FROM DUAL UNION ALL SELECT 18 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 17 AS parent_id, 456.84183869251734 AS "Estimator" FROM DUAL UNION ALL SELECT 19 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 17 AS parent_id, 241.12137081481941 AS "Estimator" FROM DUAL UNION ALL SELECT 20 AS node_id, 'scaler_output_4' AS feature, 1.0196428298950195 AS threshold, 6 AS count, 2 AS depth, 16 AS parent_id, 838.7451392634613 AS "Estimator" FROM DUAL UNION ALL SELECT 21 AS node_id, 'scaler_output_3' AS feature, 0.5893774032592773 AS threshold, 3 AS count, 3 AS depth, 20 AS parent_id, 756.0248880284703 AS "Estimator" FROM DUAL UNION ALL SELECT 22 AS node_id, 'scaler_output_4' AS feature, 0.6707305908203125 AS threshold, 2 AS count, 4 AS depth, 21 AS parent_id, 769.0889462185075 AS "Estimator" FROM DUAL UNION ALL SELECT 23 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 22 AS parent_id, 784.5912586165624 AS "Estimator" FROM DUAL UNION ALL SELECT 24 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 22 AS parent_id, 753.5866338204527 AS "Estimator" FROM DUAL UNION ALL SELECT 25 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 21 AS parent_id, 651.5124225081717 AS "Estimator" FROM DUAL UNION ALL SELECT 26 AS node_id, 'scaler_output_3' AS feature, 0.915624737739563 AS threshold, 3 AS count, 3 AS depth, 20 AS parent_id, 1086.905892968435 AS "Estimator" FROM DUAL UNION ALL SELECT 27 AS node_id, 'scaler_output_3' AS feature, 0.49237146973609924 AS threshold, 2 AS count, 4 AS depth, 26 AS parent_id, 980.4822053818759 AS "Estimator" FROM DUAL UNION ALL SELECT 28 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 27 AS parent_id, 954.0167507361758 AS "Estimator" FROM DUAL UNION ALL SELECT 29 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 27 AS parent_id, 1006.9476600275759 AS "Estimator" FROM DUAL UNION ALL SELECT 30 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 26 AS parent_id, 1299.7532681415528 AS "Estimator" FROM DUAL) "Values"), 
"DT_Output_1" AS 
(SELECT "DT_node_lookup_1"."KEY" AS "KEY", "DT_node_lookup_1".node_id_2 AS node_id_2, "DT_node_data_1".node_id AS node_id, "DT_node_data_1".feature AS feature, "DT_node_data_1".threshold AS threshold, "DT_node_data_1".count AS count, "DT_node_data_1".depth AS depth, "DT_node_data_1".parent_id AS parent_id, "DT_node_data_1"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_1" LEFT OUTER JOIN "DT_node_data_1" ON "DT_node_lookup_1".node_id_2 = "DT_node_data_1".node_id), 
"BAG_Tree_1" AS 
(SELECT "DT_Output_1"."KEY" AS "KEY", "DT_Output_1"."Estimator" AS "Estimator" 
FROM "DT_Output_1"), 
"DT_node_lookup_2" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= -0.07358784973621368) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= -0.8148788213729858) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= 0.6750271320343018) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= -0.9494547843933105) THEN 4 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= -1.429833173751831) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= 0.9258847236633301) THEN 9 ELSE 10 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= 0.16396069526672363) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= -0.4958369731903076) THEN 13 ELSE 14 END ELSE 15 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= 0.3890860676765442) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= -0.7916625142097473) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= -1.4069045782089233) THEN 19 ELSE 20 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= 0.6453455686569214) THEN 22 ELSE 23 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= 1.3334954977035522) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= -0.7075833082199097) THEN 26 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= 0.16084539890289307) THEN 28 ELSE 29 END END ELSE 30 END END END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_2" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 0 AS node_id, 'scaler_output_3' AS feature, -0.07358784973621368 AS threshold, 16 AS count, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 405.3366380477288 AS "Estimator" FROM DUAL UNION ALL SELECT 1 AS node_id, 'scaler_output_3' AS feature, -0.8148788213729858 AS threshold, 8 AS count, 1 AS depth, 0 AS parent_id, 211.4380798284307 AS "Estimator" FROM DUAL UNION ALL SELECT 2 AS node_id, 'scaler_output_2' AS feature, 0.6750271320343018 AS threshold, 5 AS count, 2 AS depth, 1 AS parent_id, 151.9098719194298 AS "Estimator" FROM DUAL UNION ALL SELECT 3 AS node_id, 'scaler_output_4' AS feature, -0.9494547843933105 AS threshold, 3 AS count, 3 AS depth, 2 AS parent_id, 114.3264378643023 AS "Estimator" FROM DUAL UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 3 AS parent_id, 60.176849293467896 AS "Estimator" FROM DUAL UNION ALL SELECT 5 AS node_id, 'scaler_output_3' AS feature, -1.429833173751831 AS threshold, 2 AS count, 4 AS depth, 3 AS parent_id, 127.86383500701089 AS "Estimator" FROM DUAL UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 5 AS parent_id, 131.7476052576105 AS "Estimator" FROM DUAL UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 5 AS parent_id, 123.9800647564113 AS "Estimator" FROM DUAL UNION ALL SELECT 8 AS node_id, 'scaler_output_4' AS feature, 0.9258847236633301 AS threshold, 2 AS count, 3 AS depth, 2 AS parent_id, 198.88916448833922 AS "Estimator" FROM DUAL UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 8 AS parent_id, 184.8117623795125 AS "Estimator" FROM DUAL UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 8 AS parent_id, 241.12137081481941 AS "Estimator" FROM DUAL UNION ALL SELECT 11 AS node_id, 'scaler_output_2' AS feature, 0.16396069526672363 AS threshold, 3 AS count, 2 AS depth, 1 AS parent_id, 318.58885406463213 AS "Estimator" FROM DUAL UNION ALL SELECT 12 AS node_id, 'scaler_output_3' AS feature, -0.4958369731903076 AS threshold, 2 AS count, 3 AS depth, 11 AS parent_id, 438.10265309203544 AS "Estimator" FROM DUAL UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 12 AS parent_id, 456.84183869251734 AS "Estimator" FROM DUAL UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 12 AS parent_id, 419.3634674915536 AS "Estimator" FROM DUAL UNION ALL SELECT 15 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 11 AS parent_id, 238.91298804636327 AS "Estimator" FROM DUAL UNION ALL SELECT 16 AS node_id, 'scaler_output_4' AS feature, 0.3890860676765442 AS threshold, 8 AS count, 1 AS depth, 0 AS parent_id, 652.1166212359262 AS "Estimator" FROM DUAL UNION ALL SELECT 17 AS node_id, 'scaler_output_4' AS feature, -0.7916625142097473 AS threshold, 4 AS count, 2 AS depth, 16 AS parent_id, 362.3461349550441 AS "Estimator" FROM DUAL UNION ALL SELECT 18 AS node_id, 'scaler_output_4' AS feature, -1.4069045782089233 AS threshold, 2 AS count, 3 AS depth, 17 AS parent_id, 194.76149430126875 AS "Estimator" FROM DUAL UNION ALL SELECT 19 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 18 AS parent_id, 81.61991678616678 AS "Estimator" FROM DUAL UNION ALL SELECT 20 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 18 AS parent_id, 251.33228305881974 AS "Estimator" FROM DUAL UNION ALL SELECT 21 AS node_id, 'scaler_output_3' AS feature, 0.6453455686569214 AS threshold, 2 AS count, 3 AS depth, 17 AS parent_id, 529.9307756088193 AS "Estimator" FROM DUAL UNION ALL SELECT 22 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 21 AS parent_id, 651.5124225081717 AS "Estimator" FROM DUAL UNION ALL SELECT 23 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 21 AS parent_id, 469.13995215914326 AS "Estimator" FROM DUAL UNION ALL SELECT 24 AS node_id, 'scaler_output_4' AS feature, 1.3334954977035522 AS threshold, 4 AS count, 2 AS depth, 16 AS parent_id, 999.8412047729847 AS "Estimator" FROM DUAL UNION ALL SELECT 25 AS node_id, 'scaler_output_2' AS feature, -0.7075833082199097 AS threshold, 3 AS count, 3 AS depth, 24 AS parent_id, 924.8631889308426 AS "Estimator" FROM DUAL UNION ALL SELECT 26 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 25 AS parent_id, 762.1275405517559 AS "Estimator" FROM DUAL UNION ALL SELECT 27 AS node_id, 'scaler_output_2' AS feature, 0.16084539890289307 AS threshold, 2 AS count, 4 AS depth, 25 AS parent_id, 979.1084050572049 AS "Estimator" FROM DUAL UNION ALL SELECT 28 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 27 AS parent_id, 954.0167507361758 AS "Estimator" FROM DUAL UNION ALL SELECT 29 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 27 AS parent_id, 991.6542322177195 AS "Estimator" FROM DUAL UNION ALL SELECT 30 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 24 AS parent_id, 1299.7532681415528 AS "Estimator" FROM DUAL) "Values"), 
"DT_Output_2" AS 
(SELECT "DT_node_lookup_2"."KEY" AS "KEY", "DT_node_lookup_2".node_id_2 AS node_id_2, "DT_node_data_2".node_id AS node_id, "DT_node_data_2".feature AS feature, "DT_node_data_2".threshold AS threshold, "DT_node_data_2".count AS count, "DT_node_data_2".depth AS depth, "DT_node_data_2".parent_id AS parent_id, "DT_node_data_2"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_2" LEFT OUTER JOIN "DT_node_data_2" ON "DT_node_lookup_2".node_id_2 = "DT_node_data_2".node_id), 
"BAG_Tree_2" AS 
(SELECT "DT_Output_2"."KEY" AS "KEY", "DT_Output_2"."Estimator" AS "Estimator" 
FROM "DT_Output_2"), 
"DT_node_lookup_3" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= 0.2956879734992981) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= -0.1108563095331192) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= 0.2849499583244324) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= 0.7824698686599731) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= -0.8675240278244019) THEN 5 ELSE 6 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= 0.978622317314148) THEN 8 ELSE 9 END END ELSE 10 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= 0.14466974139213562) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= -1.520769476890564) THEN 13 ELSE 14 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= -0.7285518646240234) THEN 16 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= 0.07727858424186707) THEN 18 ELSE 19 END END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= 0.08201716840267181) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= -0.7916625142097473) THEN 22 ELSE 23 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= -0.688219428062439) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= 0.49237146973609924) THEN 26 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= 0.963585615158081) THEN 28 ELSE 29 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= 1.3825902938842773) THEN 31 ELSE 32 END END END END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_3" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 0 AS node_id, 'scaler_output_3' AS feature, 0.2956879734992981 AS threshold, 19 AS count, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 434.51909209056265 AS "Estimator" FROM DUAL UNION ALL SELECT 1 AS node_id, 'scaler_output_4' AS feature, -0.1108563095331192 AS threshold, 12 AS count, 1 AS depth, 0 AS parent_id, 249.16064029762856 AS "Estimator" FROM DUAL UNION ALL SELECT 2 AS node_id, 'scaler_output_2' AS feature, 0.2849499583244324 AS threshold, 6 AS count, 2 AS depth, 1 AS parent_id, 121.29904711795965 AS "Estimator" FROM DUAL UNION ALL SELECT 3 AS node_id, 'scaler_output_5' AS feature, 0.7824698686599731 AS threshold, 5 AS count, 3 AS depth, 2 AS parent_id, 70.89307243435805 AS "Estimator" FROM DUAL UNION ALL SELECT 4 AS node_id, 'scaler_output_4' AS feature, -0.8675240278244019 AS threshold, 3 AS count, 4 AS depth, 3 AS parent_id, 92.88960240142978 AS "Estimator" FROM DUAL UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 5 AS depth, 4 AS parent_id, 79.93693478270289 AS "Estimator" FROM DUAL UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 4 AS parent_id, 131.7476052576105 AS "Estimator" FROM DUAL UNION ALL SELECT 7 AS node_id, 'scaler_output_5' AS feature, 0.978622317314148 AS threshold, 2 AS count, 4 AS depth, 3 AS parent_id, 41.56436581159573 AS "Estimator" FROM DUAL UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 7 AS parent_id, 43.137171961132545 AS "Estimator" FROM DUAL UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 7 AS parent_id, 38.41875351252209 AS "Estimator" FROM DUAL UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 2 AS parent_id, 238.91298804636327 AS "Estimator" FROM DUAL UNION ALL SELECT 11 AS node_id, 'scaler_output_5' AS feature, 0.14466974139213562 AS threshold, 6 AS count, 2 AS depth, 1 AS parent_id, 431.820059125727 AS "Estimator" FROM DUAL UNION ALL SELECT 12 AS node_id, 'scaler_output_3' AS feature, -1.520769476890564 AS threshold, 2 AS count, 3 AS depth, 11 AS parent_id, 212.96656659716595 AS "Estimator" FROM DUAL UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 12 AS parent_id, 184.8117623795125 AS "Estimator" FROM DUAL UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 12 AS parent_id, 241.12137081481941 AS "Estimator" FROM DUAL UNION ALL SELECT 15 AS node_id, 'scaler_output_2' AS feature, -0.7285518646240234 AS threshold, 4 AS count, 3 AS depth, 11 AS parent_id, 519.3614561371515 AS "Estimator" FROM DUAL UNION ALL SELECT 16 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 15 AS parent_id, 762.1275405517559 AS "Estimator" FROM DUAL UNION ALL SELECT 17 AS node_id, 'scaler_output_4' AS feature, 0.07727858424186707 AS threshold, 3 AS count, 4 AS depth, 15 AS parent_id, 458.66993503350045 AS "Estimator" FROM DUAL UNION ALL SELECT 18 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 17 AS parent_id, 501.63259525741347 AS "Estimator" FROM DUAL UNION ALL SELECT 19 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 5 AS depth, 17 AS parent_id, 444.34904829219613 AS "Estimator" FROM DUAL UNION ALL SELECT 20 AS node_id, 'scaler_output_4' AS feature, 0.08201716840267181 AS threshold, 7 AS count, 1 AS depth, 0 AS parent_id, 828.4058021505474 AS "Estimator" FROM DUAL UNION ALL SELECT 21 AS node_id, 'scaler_output_4' AS feature, -0.7916625142097473 AS threshold, 2 AS count, 2 AS depth, 20 AS parent_id, 396.5373957923687 AS "Estimator" FROM DUAL UNION ALL SELECT 22 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 21 AS parent_id, 251.33228305881974 AS "Estimator" FROM DUAL UNION ALL SELECT 23 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 21 AS parent_id, 469.13995215914326 AS "Estimator" FROM DUAL UNION ALL SELECT 24 AS node_id, 'scaler_output_5' AS feature, -0.688219428062439 AS threshold, 5 AS count, 2 AS depth, 20 AS parent_id, 1087.5268459654544 AS "Estimator" FROM DUAL UNION ALL SELECT 25 AS node_id, 'scaler_output_3' AS feature, 0.49237146973609924 AS threshold, 3 AS count, 3 AS depth, 24 AS parent_id, 984.206214327157 AS "Estimator" FROM DUAL UNION ALL SELECT 26 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 25 AS parent_id, 954.0167507361758 AS "Estimator" FROM DUAL UNION ALL SELECT 27 AS node_id, 'scaler_output_4' AS feature, 0.963585615158081 AS threshold, 2 AS count, 4 AS depth, 25 AS parent_id, 999.3009461226477 AS "Estimator" FROM DUAL UNION ALL SELECT 28 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 27 AS parent_id, 991.6542322177195 AS "Estimator" FROM DUAL UNION ALL SELECT 29 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 27 AS parent_id, 1006.9476600275759 AS "Estimator" FROM DUAL UNION ALL SELECT 30 AS node_id, 'scaler_output_3' AS feature, 1.3825902938842773 AS threshold, 2 AS count, 3 AS depth, 24 AS parent_id, 1242.5077934229007 AS "Estimator" FROM DUAL UNION ALL SELECT 31 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 30 AS parent_id, 1299.7532681415528 AS "Estimator" FROM DUAL UNION ALL SELECT 32 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 30 AS parent_id, 1185.2623187042484 AS "Estimator" FROM DUAL) "Values"), 
"DT_Output_3" AS 
(SELECT "DT_node_lookup_3"."KEY" AS "KEY", "DT_node_lookup_3".node_id_2 AS node_id_2, "DT_node_data_3".node_id AS node_id, "DT_node_data_3".feature AS feature, "DT_node_data_3".threshold AS threshold, "DT_node_data_3".count AS count, "DT_node_data_3".depth AS depth, "DT_node_data_3".parent_id AS parent_id, "DT_node_data_3"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_3" LEFT OUTER JOIN "DT_node_data_3" ON "DT_node_lookup_3".node_id_2 = "DT_node_data_3".node_id), 
"BAG_Tree_3" AS 
(SELECT "DT_Output_3"."KEY" AS "KEY", "DT_Output_3"."Estimator" AS "Estimator" 
FROM "DT_Output_3"), 
"DT_node_lookup_4" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= 1.250627040863037) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= -0.18919242918491364) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= -0.20836688578128815) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= -1.0249810218811035) THEN 4 ELSE 5 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= 0.06866629421710968) THEN 7 ELSE 8 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= -0.1766161471605301) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= 0.6782773733139038) THEN 11 ELSE 12 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= 0.7224569320678711) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= 0.8859478235244751) THEN 15 ELSE 16 END ELSE 17 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= 0.49237146973609924) THEN 19 ELSE 20 END END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_4" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 0 AS node_id, 'scaler_output_4' AS feature, 1.250627040863037 AS threshold, 11 AS count, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 515.7425127948562 AS "Estimator" FROM DUAL UNION ALL SELECT 1 AS node_id, 'scaler_output_4' AS feature, -0.18919242918491364 AS threshold, 9 AS count, 1 AS depth, 0 AS parent_id, 400.88086238038625 AS "Estimator" FROM DUAL UNION ALL SELECT 2 AS node_id, 'scaler_output_2' AS feature, -0.20836688578128815 AS threshold, 4 AS count, 2 AS depth, 1 AS parent_id, 157.85304768238606 AS "Estimator" FROM DUAL UNION ALL SELECT 3 AS node_id, 'scaler_output_4' AS feature, -1.0249810218811035 AS threshold, 2 AS count, 3 AS depth, 2 AS parent_id, 102.79999077128903 AS "Estimator" FROM DUAL UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 3 AS parent_id, 81.61991678616678 AS "Estimator" FROM DUAL UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 3 AS parent_id, 123.9800647564113 AS "Estimator" FROM DUAL UNION ALL SELECT 6 AS node_id, 'scaler_output_3' AS feature, 0.06866629421710968 AS threshold, 2 AS count, 3 AS depth, 2 AS parent_id, 267.95916150458004 AS "Estimator" FROM DUAL UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 6 AS parent_id, 238.91298804636327 AS "Estimator" FROM DUAL UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 6 AS parent_id, 297.00533496279684 AS "Estimator" FROM DUAL UNION ALL SELECT 9 AS node_id, 'scaler_output_3' AS feature, -0.1766161471605301 AS threshold, 5 AS count, 2 AS depth, 1 AS parent_id, 505.0356401081007 AS "Estimator" FROM DUAL UNION ALL SELECT 10 AS node_id, 'scaler_output_4' AS feature, 0.6782773733139038 AS threshold, 2 AS count, 3 AS depth, 9 AS parent_id, 340.1447578574496 AS "Estimator" FROM DUAL UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 10 AS parent_id, 419.36346749155365 AS "Estimator" FROM DUAL UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 10 AS parent_id, 241.12137081481941 AS "Estimator" FROM DUAL UNION ALL SELECT 13 AS node_id, 'scaler_output_3' AS feature, 0.7224569320678711 AS threshold, 3 AS count, 3 AS depth, 9 AS parent_id, 801.8392281592729 AS "Estimator" FROM DUAL UNION ALL SELECT 14 AS node_id, 'scaler_output_5' AS feature, 0.8859478235244751 AS threshold, 2 AS count, 4 AS depth, 13 AS parent_id, 675.2958921203084 AS "Estimator" FROM DUAL UNION ALL SELECT 15 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 14 AS parent_id, 501.63259525741347 AS "Estimator" FROM DUAL UNION ALL SELECT 16 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 14 AS parent_id, 762.1275405517559 AS "Estimator" FROM DUAL UNION ALL SELECT 17 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 13 AS parent_id, 991.6542322177195 AS "Estimator" FROM DUAL UNION ALL SELECT 18 AS node_id, 'scaler_output_3' AS feature, 0.49237146973609924 AS threshold, 2 AS count, 1 AS depth, 0 AS parent_id, 975.1891144527359 AS "Estimator" FROM DUAL UNION ALL SELECT 19 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 2 AS depth, 18 AS parent_id, 954.0167507361758 AS "Estimator" FROM DUAL UNION ALL SELECT 20 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 2 AS depth, 18 AS parent_id, 1006.9476600275759 AS "Estimator" FROM DUAL) "Values"), 
"DT_Output_4" AS 
(SELECT "DT_node_lookup_4"."KEY" AS "KEY", "DT_node_lookup_4".node_id_2 AS node_id_2, "DT_node_data_4".node_id AS node_id, "DT_node_data_4".feature AS feature, "DT_node_data_4".threshold AS threshold, "DT_node_data_4".count AS count, "DT_node_data_4".depth AS depth, "DT_node_data_4".parent_id AS parent_id, "DT_node_data_4"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_4" LEFT OUTER JOIN "DT_node_data_4" ON "DT_node_lookup_4".node_id_2 = "DT_node_data_4".node_id), 
"BAG_Tree_4" AS 
(SELECT "DT_Output_4"."KEY" AS "KEY", "DT_Output_4"."Estimator" AS "Estimator" 
FROM "DT_Output_4"), 
"DT_node_lookup_5" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= -0.1108563095331192) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= -0.911078929901123) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= 0.8191770911216736) THEN 3 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= 0.7955580949783325) THEN 5 ELSE 6 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= -0.23418541252613068) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= -0.11670947074890137) THEN 9 ELSE 10 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= 0.9149374961853027) THEN 12 ELSE 13 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= 0.3526459336280823) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= 0.8598500490188599) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= -0.7285518646240234) THEN 17 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= 1.0708558559417725) THEN 19 ELSE 20 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= -1.520769476890564) THEN 22 ELSE 23 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= 0.13518571853637695) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= 1.3462634086608887) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= 0.963585615158081) THEN 27 ELSE 28 END ELSE 29 END ELSE 30 END END END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_5" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 0 AS node_id, 'scaler_output_4' AS feature, -0.1108563095331192 AS threshold, 17 AS count, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 410.9873199048687 AS "Estimator" FROM DUAL UNION ALL SELECT 1 AS node_id, 'scaler_output_2' AS feature, -0.911078929901123 AS threshold, 7 AS count, 1 AS depth, 0 AS parent_id, 130.3832238586198 AS "Estimator" FROM DUAL UNION ALL SELECT 2 AS node_id, 'scaler_output_5' AS feature, 0.8191770911216736 AS threshold, 3 AS count, 2 AS depth, 1 AS parent_id, 245.991861433296 AS "Estimator" FROM DUAL UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 2 AS parent_id, 131.7476052576105 AS "Estimator" FROM DUAL UNION ALL SELECT 4 AS node_id, 'scaler_output_3' AS feature, 0.7955580949783325 AS threshold, 2 AS count, 3 AS depth, 2 AS parent_id, 360.2361176089815 AS "Estimator" FROM DUAL UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 4 AS parent_id, 469.13995215914326 AS "Estimator" FROM DUAL UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 4 AS parent_id, 251.33228305881974 AS "Estimator" FROM DUAL UNION ALL SELECT 7 AS node_id, 'scaler_output_3' AS feature, -0.23418541252613068 AS threshold, 4 AS count, 2 AS depth, 1 AS parent_id, 64.32114524451913 AS "Estimator" FROM DUAL UNION ALL SELECT 8 AS node_id, 'scaler_output_5' AS feature, -0.11670947074890137 AS threshold, 2 AS count, 3 AS depth, 7 AS parent_id, 49.29780140299499 AS "Estimator" FROM DUAL UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 8 AS parent_id, 60.176849293467896 AS "Estimator" FROM DUAL UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 8 AS parent_id, 38.41875351252209 AS "Estimator" FROM DUAL UNION ALL SELECT 11 AS node_id, 'scaler_output_3' AS feature, 0.9149374961853027 AS threshold, 2 AS count, 3 AS depth, 7 AS parent_id, 84.35227036655131 AS "Estimator" FROM DUAL UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 11 AS parent_id, 89.81697752732039 AS "Estimator" FROM DUAL UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 11 AS parent_id, 81.61991678616678 AS "Estimator" FROM DUAL UNION ALL SELECT 14 AS node_id, 'scaler_output_3' AS feature, 0.3526459336280823 AS threshold, 10 AS count, 1 AS depth, 0 AS parent_id, 631.46196679835 AS "Estimator" FROM DUAL UNION ALL SELECT 15 AS node_id, 'scaler_output_2' AS feature, 0.8598500490188599 AS threshold, 6 AS count, 2 AS depth, 14 AS parent_id, 433.21619111824 AS "Estimator" FROM DUAL UNION ALL SELECT 16 AS node_id, 'scaler_output_2' AS feature, -0.7285518646240234 AS threshold, 4 AS count, 3 AS depth, 15 AS parent_id, 496.14465526711837 AS "Estimator" FROM DUAL UNION ALL SELECT 17 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 16 AS parent_id, 762.1275405517559 AS "Estimator" FROM DUAL UNION ALL SELECT 18 AS node_id, 'scaler_output_5' AS feature, 1.0708558559417725 AS threshold, 3 AS count, 4 AS depth, 16 AS parent_id, 451.8141743863454 AS "Estimator" FROM DUAL UNION ALL SELECT 19 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 5 AS depth, 18 AS parent_id, 468.0395278337414 AS "Estimator" FROM DUAL UNION ALL SELECT 20 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 18 AS parent_id, 419.3634674915536 AS "Estimator" FROM DUAL UNION ALL SELECT 21 AS node_id, 'scaler_output_3' AS feature, -1.520769476890564 AS threshold, 2 AS count, 3 AS depth, 15 AS parent_id, 212.96656659716595 AS "Estimator" FROM DUAL UNION ALL SELECT 22 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 21 AS parent_id, 184.8117623795125 AS "Estimator" FROM DUAL UNION ALL SELECT 23 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 21 AS parent_id, 241.12137081481941 AS "Estimator" FROM DUAL UNION ALL SELECT 24 AS node_id, 'scaler_output_5' AS feature, 0.13518571853637695 AS threshold, 4 AS count, 2 AS depth, 14 AS parent_id, 988.3043630225478 AS "Estimator" FROM DUAL UNION ALL SELECT 25 AS node_id, 'scaler_output_4' AS feature, 1.3462634086608887 AS threshold, 3 AS count, 3 AS depth, 24 AS parent_id, 1072.502348151142 AS "Estimator" FROM DUAL UNION ALL SELECT 26 AS node_id, 'scaler_output_4' AS feature, 0.963585615158081 AS threshold, 2 AS count, 4 AS depth, 25 AS parent_id, 996.7520414876717 AS "Estimator" FROM DUAL UNION ALL SELECT 27 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 26 AS parent_id, 991.6542322177195 AS "Estimator" FROM DUAL UNION ALL SELECT 28 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 26 AS parent_id, 1006.9476600275759 AS "Estimator" FROM DUAL UNION ALL SELECT 29 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 25 AS parent_id, 1299.7532681415528 AS "Estimator" FROM DUAL UNION ALL SELECT 30 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 24 AS parent_id, 651.5124225081717 AS "Estimator" FROM DUAL) "Values"), 
"DT_Output_5" AS 
(SELECT "DT_node_lookup_5"."KEY" AS "KEY", "DT_node_lookup_5".node_id_2 AS node_id_2, "DT_node_data_5".node_id AS node_id, "DT_node_data_5".feature AS feature, "DT_node_data_5".threshold AS threshold, "DT_node_data_5".count AS count, "DT_node_data_5".depth AS depth, "DT_node_data_5".parent_id AS parent_id, "DT_node_data_5"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_5" LEFT OUTER JOIN "DT_node_data_5" ON "DT_node_lookup_5".node_id_2 = "DT_node_data_5".node_id), 
"BAG_Tree_5" AS 
(SELECT "DT_Output_5"."KEY" AS "KEY", "DT_Output_5"."Estimator" AS "Estimator" 
FROM "DT_Output_5"), 
"DT_node_lookup_6" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= -0.1108563095331192) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= 0.19848594069480896) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= 0.2849499583244324) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= -0.5577172040939331) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= -0.23418541252613068) THEN 5 ELSE 6 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= -1.429833173751831) THEN 8 ELSE 9 END END ELSE 10 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= -0.052195169031620026) THEN 12 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= 0.4919813871383667) THEN 14 ELSE 15 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= -0.43804436922073364) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= 0.49237146973609924) THEN 18 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= -1.461817979812622) THEN 20 ELSE 21 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= 0.3768976926803589) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= 0.36596348881721497) THEN 24 ELSE 25 END ELSE 26 END END END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_6" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 0 AS node_id, 'scaler_output_4' AS feature, -0.1108563095331192 AS threshold, 16 AS count, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 414.1653002903407 AS "Estimator" FROM DUAL UNION ALL SELECT 1 AS node_id, 'scaler_output_3' AS feature, 0.19848594069480896 AS threshold, 10 AS count, 1 AS depth, 0 AS parent_id, 189.98294062890497 AS "Estimator" FROM DUAL UNION ALL SELECT 2 AS node_id, 'scaler_output_2' AS feature, 0.2849499583244324 AS threshold, 7 AS count, 2 AS depth, 1 AS parent_id, 106.36990012071813 AS "Estimator" FROM DUAL UNION ALL SELECT 3 AS node_id, 'scaler_output_4' AS feature, -0.5577172040939331 AS threshold, 6 AS count, 3 AS depth, 2 AS parent_id, 73.23412813930683 AS "Estimator" FROM DUAL UNION ALL SELECT 4 AS node_id, 'scaler_output_3' AS feature, -0.23418541252613068 AS threshold, 4 AS count, 4 AS depth, 3 AS parent_id, 55.02422585007215 AS "Estimator" FROM DUAL UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 5 AS depth, 4 AS parent_id, 48.0656755146225 AS "Estimator" FROM DUAL UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 4 AS parent_id, 89.81697752732039 AS "Estimator" FROM DUAL UNION ALL SELECT 7 AS node_id, 'scaler_output_3' AS feature, -1.429833173751831 AS threshold, 2 AS count, 4 AS depth, 3 AS parent_id, 127.86383500701089 AS "Estimator" FROM DUAL UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 7 AS parent_id, 131.7476052576105 AS "Estimator" FROM DUAL UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 7 AS parent_id, 123.9800647564113 AS "Estimator" FROM DUAL UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 2 AS parent_id, 238.91298804636327 AS "Estimator" FROM DUAL UNION ALL SELECT 11 AS node_id, 'scaler_output_5' AS feature, -0.052195169031620026 AS threshold, 3 AS count, 2 AS depth, 1 AS parent_id, 357.2090216452787 AS "Estimator" FROM DUAL UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 11 AS parent_id, 81.61991678616678 AS "Estimator" FROM DUAL UNION ALL SELECT 13 AS node_id, 'scaler_output_3' AS feature, 0.4919813871383667 AS threshold, 2 AS count, 3 AS depth, 11 AS parent_id, 426.10629786005666 AS "Estimator" FROM DUAL UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 13 AS parent_id, 297.00533496279684 AS "Estimator" FROM DUAL UNION ALL SELECT 15 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 13 AS parent_id, 469.1399521591432 AS "Estimator" FROM DUAL UNION ALL SELECT 16 AS node_id, 'scaler_output_5' AS feature, -0.43804436922073364 AS threshold, 6 AS count, 1 AS depth, 0 AS parent_id, 750.4388397824944 AS "Estimator" FROM DUAL UNION ALL SELECT 17 AS node_id, 'scaler_output_3' AS feature, 0.49237146973609924 AS threshold, 3 AS count, 2 AS depth, 16 AS parent_id, 987.185421483382 AS "Estimator" FROM DUAL UNION ALL SELECT 18 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 17 AS parent_id, 954.0167507361758 AS "Estimator" FROM DUAL UNION ALL SELECT 19 AS node_id, 'scaler_output_5' AS feature, -1.461817979812622 AS threshold, 2 AS count, 3 AS depth, 17 AS parent_id, 995.4775891701836 AS "Estimator" FROM DUAL UNION ALL SELECT 20 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 19 AS parent_id, 1006.9476600275759 AS "Estimator" FROM DUAL UNION ALL SELECT 21 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 19 AS parent_id, 991.6542322177196 AS "Estimator" FROM DUAL UNION ALL SELECT 22 AS node_id, 'scaler_output_3' AS feature, 0.3768976926803589 AS threshold, 3 AS count, 2 AS depth, 16 AS parent_id, 513.6922580816066 AS "Estimator" FROM DUAL UNION ALL SELECT 23 AS node_id, 'scaler_output_4' AS feature, 0.36596348881721497 AS threshold, 2 AS count, 3 AS depth, 22 AS parent_id, 479.2372169749654 AS "Estimator" FROM DUAL UNION ALL SELECT 24 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 23 AS parent_id, 501.63259525741347 AS "Estimator" FROM DUAL UNION ALL SELECT 25 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 23 AS parent_id, 456.84183869251734 AS "Estimator" FROM DUAL UNION ALL SELECT 26 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 22 AS parent_id, 651.5124225081717 AS "Estimator" FROM DUAL) "Values"), 
"DT_Output_6" AS 
(SELECT "DT_node_lookup_6"."KEY" AS "KEY", "DT_node_lookup_6".node_id_2 AS node_id_2, "DT_node_data_6".node_id AS node_id, "DT_node_data_6".feature AS feature, "DT_node_data_6".threshold AS threshold, "DT_node_data_6".count AS count, "DT_node_data_6".depth AS depth, "DT_node_data_6".parent_id AS parent_id, "DT_node_data_6"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_6" LEFT OUTER JOIN "DT_node_data_6" ON "DT_node_lookup_6".node_id_2 = "DT_node_data_6".node_id), 
"BAG_Tree_6" AS 
(SELECT "DT_Output_6"."KEY" AS "KEY", "DT_Output_6"."Estimator" AS "Estimator" 
FROM "DT_Output_6"), 
"DT_node_lookup_7" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= -1.2748339176177979) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= 0.6019054055213928) THEN 2 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= 0.97102952003479) THEN 4 ELSE 5 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= -0.1108563095331192) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= -1.1687439680099487) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= -1.6624939441680908) THEN 9 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= -0.11670947074890137) THEN 11 ELSE 12 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= -1.281390905380249) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= -0.47938108444213867) THEN 15 ELSE 16 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= -0.5178099274635315) THEN 18 ELSE 19 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= -0.1766161471605301) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= -1.0588386058807373) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= 0.9258847236633301) THEN 23 ELSE 24 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= 0.44186776876449585) THEN 26 ELSE 27 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= 0.08789665997028351) THEN 29 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= 0.45791125297546387) THEN 31 ELSE 32 END END END END END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_7" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 0 AS node_id, 'scaler_output_5' AS feature, -1.2748339176177979 AS threshold, 18 AS count, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 472.7143844079344 AS "Estimator" FROM DUAL UNION ALL SELECT 1 AS node_id, 'scaler_output_4' AS feature, 0.6019054055213928 AS threshold, 3 AS count, 1 AS depth, 0 AS parent_id, 956.3590086214306 AS "Estimator" FROM DUAL UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 2 AS depth, 1 AS parent_id, 784.5912586165624 AS "Estimator" FROM DUAL UNION ALL SELECT 3 AS node_id, 'scaler_output_2' AS feature, 0.97102952003479 AS threshold, 2 AS count, 2 AS depth, 1 AS parent_id, 999.3009461226477 AS "Estimator" FROM DUAL UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 3 AS parent_id, 991.6542322177195 AS "Estimator" FROM DUAL UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 3 AS parent_id, 1006.9476600275759 AS "Estimator" FROM DUAL UNION ALL SELECT 6 AS node_id, 'scaler_output_4' AS feature, -0.1108563095331192 AS threshold, 15 AS count, 1 AS depth, 0 AS parent_id, 351.8032283545603 AS "Estimator" FROM DUAL UNION ALL SELECT 7 AS node_id, 'scaler_output_4' AS feature, -1.1687439680099487 AS threshold, 7 AS count, 2 AS depth, 6 AS parent_id, 166.65231507575595 AS "Estimator" FROM DUAL UNION ALL SELECT 8 AS node_id, 'scaler_output_4' AS feature, -1.6624939441680908 AS threshold, 3 AS count, 3 AS depth, 7 AS parent_id, 65.45885909458089 AS "Estimator" FROM DUAL UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 8 AS parent_id, 81.61991678616678 AS "Estimator" FROM DUAL UNION ALL SELECT 10 AS node_id, 'scaler_output_5' AS feature, -0.11670947074890137 AS threshold, 2 AS count, 4 AS depth, 8 AS parent_id, 49.29780140299499 AS "Estimator" FROM DUAL UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 10 AS parent_id, 60.176849293467896 AS "Estimator" FROM DUAL UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 10 AS parent_id, 38.41875351252209 AS "Estimator" FROM DUAL UNION ALL SELECT 13 AS node_id, 'scaler_output_2' AS feature, -1.281390905380249 AS threshold, 4 AS count, 3 AS depth, 7 AS parent_id, 247.60707986069602 AS "Estimator" FROM DUAL UNION ALL SELECT 14 AS node_id, 'scaler_output_4' AS feature, -0.47938108444213867 AS threshold, 2 AS count, 4 AS depth, 13 AS parent_id, 87.44238860937152 AS "Estimator" FROM DUAL UNION ALL SELECT 15 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 14 AS parent_id, 43.137171961132545 AS "Estimator" FROM DUAL UNION ALL SELECT 16 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 14 AS parent_id, 131.7476052576105 AS "Estimator" FROM DUAL UNION ALL SELECT 17 AS node_id, 'scaler_output_2' AS feature, -0.5178099274635315 AS threshold, 2 AS count, 4 AS depth, 13 AS parent_id, 354.38354069491226 AS "Estimator" FROM DUAL UNION ALL SELECT 18 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 17 AS parent_id, 469.13995215914326 AS "Estimator" FROM DUAL UNION ALL SELECT 19 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 17 AS parent_id, 297.00533496279684 AS "Estimator" FROM DUAL UNION ALL SELECT 20 AS node_id, 'scaler_output_3' AS feature, -0.1766161471605301 AS threshold, 8 AS count, 2 AS depth, 6 AS parent_id, 503.29033921903664 AS "Estimator" FROM DUAL UNION ALL SELECT 21 AS node_id, 'scaler_output_3' AS feature, -1.0588386058807373 AS threshold, 4 AS count, 3 AS depth, 20 AS parent_id, 369.3036861272396 AS "Estimator" FROM DUAL UNION ALL SELECT 22 AS node_id, 'scaler_output_4' AS feature, 0.9258847236633301 AS threshold, 2 AS count, 4 AS depth, 21 AS parent_id, 212.96656659716595 AS "Estimator" FROM DUAL UNION ALL SELECT 23 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 22 AS parent_id, 184.8117623795125 AS "Estimator" FROM DUAL UNION ALL SELECT 24 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 22 AS parent_id, 241.12137081481941 AS "Estimator" FROM DUAL UNION ALL SELECT 25 AS node_id, 'scaler_output_4' AS feature, 0.44186776876449585 AS threshold, 2 AS count, 4 AS depth, 21 AS parent_id, 447.4722458922764 AS "Estimator" FROM DUAL UNION ALL SELECT 26 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 25 AS parent_id, 419.3634674915536 AS "Estimator" FROM DUAL UNION ALL SELECT 27 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 25 AS parent_id, 456.84183869251734 AS "Estimator" FROM DUAL UNION ALL SELECT 28 AS node_id, 'scaler_output_4' AS feature, 0.08789665997028351 AS threshold, 4 AS count, 3 AS depth, 20 AS parent_id, 664.0743229291932 AS "Estimator" FROM DUAL UNION ALL SELECT 29 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 28 AS parent_id, 501.63259525741347 AS "Estimator" FROM DUAL UNION ALL SELECT 30 AS node_id, 'scaler_output_4' AS feature, 0.45791125297546387 AS threshold, 3 AS count, 4 AS depth, 28 AS parent_id, 704.684754847138 AS "Estimator" FROM DUAL UNION ALL SELECT 31 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 30 AS parent_id, 651.5124225081717 AS "Estimator" FROM DUAL UNION ALL SELECT 32 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 5 AS depth, 30 AS parent_id, 757.8570871861043 AS "Estimator" FROM DUAL) "Values"), 
"DT_Output_7" AS 
(SELECT "DT_node_lookup_7"."KEY" AS "KEY", "DT_node_lookup_7".node_id_2 AS node_id_2, "DT_node_data_7".node_id AS node_id, "DT_node_data_7".feature AS feature, "DT_node_data_7".threshold AS threshold, "DT_node_data_7".count AS count, "DT_node_data_7".depth AS depth, "DT_node_data_7".parent_id AS parent_id, "DT_node_data_7"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_7" LEFT OUTER JOIN "DT_node_data_7" ON "DT_node_lookup_7".node_id_2 = "DT_node_data_7".node_id), 
"BAG_Tree_7" AS 
(SELECT "DT_Output_7"."KEY" AS "KEY", "DT_Output_7"."Estimator" AS "Estimator" 
FROM "DT_Output_7"), 
"DT_node_lookup_8" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= 0.2398345172405243) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= -1.025974988937378) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= -1.4626967906951904) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= 1.31593656539917) THEN 4 ELSE 5 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= -0.301423043012619) THEN 7 ELSE 8 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= -0.2379414588212967) THEN 10 ELSE 11 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= 0.987389087677002) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= -0.6874048709869385) THEN 14 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= 1.0196428298950195) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= 0.5367218255996704) THEN 17 ELSE 18 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= 1.310650110244751) THEN 20 ELSE 21 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= 0.7616996169090271) THEN 23 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= 1.1443774700164795) THEN 25 ELSE 26 END END END END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_8" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 0 AS node_id, 'scaler_output_3' AS feature, 0.2398345172405243 AS threshold, 14 AS count, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 668.3045161399755 AS "Estimator" FROM DUAL UNION ALL SELECT 1 AS node_id, 'scaler_output_3' AS feature, -1.025974988937378 AS threshold, 6 AS count, 1 AS depth, 0 AS parent_id, 258.6058576178444 AS "Estimator" FROM DUAL UNION ALL SELECT 2 AS node_id, 'scaler_output_3' AS feature, -1.4626967906951904 AS threshold, 4 AS count, 2 AS depth, 1 AS parent_id, 167.24890050514225 AS "Estimator" FROM DUAL UNION ALL SELECT 3 AS node_id, 'scaler_output_2' AS feature, 1.31593656539917 AS threshold, 2 AS count, 3 AS depth, 2 AS parent_id, 222.35150133638376 AS "Estimator" FROM DUAL UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 3 AS parent_id, 241.12137081481941 AS "Estimator" FROM DUAL UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 3 AS parent_id, 184.8117623795125 AS "Estimator" FROM DUAL UNION ALL SELECT 6 AS node_id, 'scaler_output_4' AS feature, -0.301423043012619 AS threshold, 2 AS count, 3 AS depth, 2 AS parent_id, 125.9219498817111 AS "Estimator" FROM DUAL UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 6 AS parent_id, 123.9800647564113 AS "Estimator" FROM DUAL UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 6 AS parent_id, 131.7476052576105 AS "Estimator" FROM DUAL UNION ALL SELECT 9 AS node_id, 'scaler_output_3' AS feature, -0.2379414588212967 AS threshold, 2 AS count, 2 AS depth, 1 AS parent_id, 471.77209088081605 AS "Estimator" FROM DUAL UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 9 AS parent_id, 456.84183869251734 AS "Estimator" FROM DUAL UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 9 AS parent_id, 501.63259525741347 AS "Estimator" FROM DUAL UNION ALL SELECT 12 AS node_id, 'scaler_output_3' AS feature, 0.987389087677002 AS threshold, 8 AS count, 1 AS depth, 0 AS parent_id, 941.4369551547296 AS "Estimator" FROM DUAL UNION ALL SELECT 13 AS node_id, 'scaler_output_2' AS feature, -0.6874048709869385 AS threshold, 5 AS count, 2 AS depth, 12 AS parent_id, 786.381425801686 AS "Estimator" FROM DUAL UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 13 AS parent_id, 469.13995215914326 AS "Estimator" FROM DUAL UNION ALL SELECT 15 AS node_id, 'scaler_output_4' AS feature, 1.0196428298950195 AS threshold, 4 AS count, 3 AS depth, 13 AS parent_id, 831.7016363220492 AS "Estimator" FROM DUAL UNION ALL SELECT 16 AS node_id, 'scaler_output_2' AS feature, 0.5367218255996704 AS threshold, 2 AS count, 4 AS depth, 15 AS parent_id, 772.1894086981185 AS "Estimator" FROM DUAL UNION ALL SELECT 17 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 16 AS parent_id, 784.5912586165624 AS "Estimator" FROM DUAL UNION ALL SELECT 18 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 16 AS parent_id, 753.5866338204527 AS "Estimator" FROM DUAL UNION ALL SELECT 19 AS node_id, 'scaler_output_4' AS feature, 1.310650110244751 AS threshold, 2 AS count, 4 AS depth, 15 AS parent_id, 980.4822053818759 AS "Estimator" FROM DUAL UNION ALL SELECT 20 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 19 AS parent_id, 954.0167507361758 AS "Estimator" FROM DUAL UNION ALL SELECT 21 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 19 AS parent_id, 1006.9476600275759 AS "Estimator" FROM DUAL UNION ALL SELECT 22 AS node_id, 'scaler_output_4' AS feature, 0.7616996169090271 AS threshold, 3 AS count, 2 AS depth, 12 AS parent_id, 1118.643274415351 AS "Estimator" FROM DUAL UNION ALL SELECT 23 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 22 AS parent_id, 991.6542322177196 AS "Estimator" FROM DUAL UNION ALL SELECT 24 AS node_id, 'scaler_output_4' AS feature, 1.1443774700164795 AS threshold, 2 AS count, 3 AS depth, 22 AS parent_id, 1213.8850560635747 AS "Estimator" FROM DUAL UNION ALL SELECT 25 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 24 AS parent_id, 1185.2623187042484 AS "Estimator" FROM DUAL UNION ALL SELECT 26 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 24 AS parent_id, 1299.7532681415528 AS "Estimator" FROM DUAL) "Values"), 
"DT_Output_8" AS 
(SELECT "DT_node_lookup_8"."KEY" AS "KEY", "DT_node_lookup_8".node_id_2 AS node_id_2, "DT_node_data_8".node_id AS node_id, "DT_node_data_8".feature AS feature, "DT_node_data_8".threshold AS threshold, "DT_node_data_8".count AS count, "DT_node_data_8".depth AS depth, "DT_node_data_8".parent_id AS parent_id, "DT_node_data_8"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_8" LEFT OUTER JOIN "DT_node_data_8" ON "DT_node_lookup_8".node_id_2 = "DT_node_data_8".node_id), 
"BAG_Tree_8" AS 
(SELECT "DT_Output_8"."KEY" AS "KEY", "DT_Output_8"."Estimator" AS "Estimator" 
FROM "DT_Output_8"), 
"DT_node_lookup_9" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= -0.18919242918491364) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= -1.3277835845947266) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= -0.23418541252613068) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= -0.3049390912055969) THEN 4 ELSE 5 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= -0.028113678097724915) THEN 7 ELSE 8 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= -1.1517305374145508) THEN 10 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= -0.7213070392608643) THEN 12 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= -0.4138600826263428) THEN 14 ELSE 15 END END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= 0.2398345172405243) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= 0.8598500490188599) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= 0.2283327281475067) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= -0.4958369731903076) THEN 20 ELSE 21 END ELSE 22 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= 0.9258847236633301) THEN 24 ELSE 25 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= 1.0196428298950195) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= 0.6707305908203125) THEN 28 ELSE 29 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= 1.310650110244751) THEN 31 ELSE 32 END END END END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_9" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 0 AS node_id, 'scaler_output_4' AS feature, -0.18919242918491364 AS threshold, 17 AS count, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 380.0216299540941 AS "Estimator" FROM DUAL UNION ALL SELECT 1 AS node_id, 'scaler_output_4' AS feature, -1.3277835845947266 AS threshold, 8 AS count, 1 AS depth, 0 AS parent_id, 152.825001913852 AS "Estimator" FROM DUAL UNION ALL SELECT 2 AS node_id, 'scaler_output_3' AS feature, -0.23418541252613068 AS threshold, 4 AS count, 2 AS depth, 1 AS parent_id, 68.53275687251349 AS "Estimator" FROM DUAL UNION ALL SELECT 3 AS node_id, 'scaler_output_2' AS feature, -0.3049390912055969 AS threshold, 2 AS count, 3 AS depth, 2 AS parent_id, 49.29780140299499 AS "Estimator" FROM DUAL UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 3 AS parent_id, 38.41875351252209 AS "Estimator" FROM DUAL UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 3 AS parent_id, 60.176849293467896 AS "Estimator" FROM DUAL UNION ALL SELECT 6 AS node_id, 'scaler_output_5' AS feature, -0.028113678097724915 AS threshold, 2 AS count, 3 AS depth, 2 AS parent_id, 87.76771234203198 AS "Estimator" FROM DUAL UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 6 AS parent_id, 81.61991678616678 AS "Estimator" FROM DUAL UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 6 AS parent_id, 89.81697752732039 AS "Estimator" FROM DUAL UNION ALL SELECT 9 AS node_id, 'scaler_output_2' AS feature, -1.1517305374145508 AS threshold, 4 AS count, 2 AS depth, 1 AS parent_id, 287.6925939799936 AS "Estimator" FROM DUAL UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 9 AS parent_id, 469.13995215914326 AS "Estimator" FROM DUAL UNION ALL SELECT 11 AS node_id, 'scaler_output_5' AS feature, -0.7213070392608643 AS threshold, 3 AS count, 3 AS depth, 9 AS parent_id, 242.33075443520616 AS "Estimator" FROM DUAL UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 11 AS parent_id, 123.9800647564113 AS "Estimator" FROM DUAL UNION ALL SELECT 13 AS node_id, 'scaler_output_2' AS feature, -0.4138600826263428 AS threshold, 2 AS count, 4 AS depth, 11 AS parent_id, 281.7809843281378 AS "Estimator" FROM DUAL UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 13 AS parent_id, 251.33228305881974 AS "Estimator" FROM DUAL UNION ALL SELECT 15 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 13 AS parent_id, 297.00533496279684 AS "Estimator" FROM DUAL UNION ALL SELECT 16 AS node_id, 'scaler_output_3' AS feature, 0.2398345172405243 AS threshold, 9 AS count, 1 AS depth, 0 AS parent_id, 626.151310331023 AS "Estimator" FROM DUAL UNION ALL SELECT 17 AS node_id, 'scaler_output_2' AS feature, 0.8598500490188599 AS threshold, 5 AS count, 2 AS depth, 16 AS parent_id, 370.52241702122825 AS "Estimator" FROM DUAL UNION ALL SELECT 18 AS node_id, 'scaler_output_2' AS feature, 0.2283327281475067 AS threshold, 3 AS count, 3 AS depth, 17 AS parent_id, 449.30034223325947 AS "Estimator" FROM DUAL UNION ALL SELECT 19 AS node_id, 'scaler_output_3' AS feature, -0.4958369731903076 AS threshold, 2 AS count, 4 AS depth, 18 AS parent_id, 431.8562578918748 AS "Estimator" FROM DUAL UNION ALL SELECT 20 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 19 AS parent_id, 456.84183869251734 AS "Estimator" FROM DUAL UNION ALL SELECT 21 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 19 AS parent_id, 419.3634674915536 AS "Estimator" FROM DUAL UNION ALL SELECT 22 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 18 AS parent_id, 501.63259525741347 AS "Estimator" FROM DUAL UNION ALL SELECT 23 AS node_id, 'scaler_output_4' AS feature, 0.9258847236633301 AS threshold, 2 AS count, 3 AS depth, 17 AS parent_id, 212.96656659716595 AS "Estimator" FROM DUAL UNION ALL SELECT 24 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 23 AS parent_id, 184.8117623795125 AS "Estimator" FROM DUAL UNION ALL SELECT 25 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 23 AS parent_id, 241.12137081481941 AS "Estimator" FROM DUAL UNION ALL SELECT 26 AS node_id, 'scaler_output_4' AS feature, 1.0196428298950195 AS threshold, 4 AS count, 2 AS depth, 16 AS parent_id, 881.7802036408175 AS "Estimator" FROM DUAL UNION ALL SELECT 27 AS node_id, 'scaler_output_4' AS feature, 0.6707305908203125 AS threshold, 2 AS count, 3 AS depth, 26 AS parent_id, 774.2563836845258 AS "Estimator" FROM DUAL UNION ALL SELECT 28 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 27 AS parent_id, 784.5912586165624 AS "Estimator" FROM DUAL UNION ALL SELECT 29 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 27 AS parent_id, 753.5866338204527 AS "Estimator" FROM DUAL UNION ALL SELECT 30 AS node_id, 'scaler_output_4' AS feature, 1.310650110244751 AS threshold, 2 AS count, 3 AS depth, 26 AS parent_id, 989.3040235971092 AS "Estimator" FROM DUAL UNION ALL SELECT 31 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 30 AS parent_id, 954.0167507361758 AS "Estimator" FROM DUAL UNION ALL SELECT 32 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 30 AS parent_id, 1006.9476600275759 AS "Estimator" FROM DUAL) "Values"), 
"DT_Output_9" AS 
(SELECT "DT_node_lookup_9"."KEY" AS "KEY", "DT_node_lookup_9".node_id_2 AS node_id_2, "DT_node_data_9".node_id AS node_id, "DT_node_data_9".feature AS feature, "DT_node_data_9".threshold AS threshold, "DT_node_data_9".count AS count, "DT_node_data_9".depth AS depth, "DT_node_data_9".parent_id AS parent_id, "DT_node_data_9"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_9" LEFT OUTER JOIN "DT_node_data_9" ON "DT_node_lookup_9".node_id_2 = "DT_node_data_9".node_id), 
"BAG_Tree_9" AS 
(SELECT "DT_Output_9"."KEY" AS "KEY", "DT_Output_9"."Estimator" AS "Estimator" 
FROM "DT_Output_9"), 
"Score_Union_CTE" AS 
(SELECT ensemble_score_union."KEY" AS "KEY", ensemble_score_union."Estimator" AS "Estimator" 
FROM (SELECT "BAG_Tree_0"."KEY" AS "KEY", "BAG_Tree_0"."Estimator" AS "Estimator" 
FROM "BAG_Tree_0" UNION ALL SELECT "BAG_Tree_1"."KEY" AS "KEY", "BAG_Tree_1"."Estimator" AS "Estimator" 
FROM "BAG_Tree_1" UNION ALL SELECT "BAG_Tree_2"."KEY" AS "KEY", "BAG_Tree_2"."Estimator" AS "Estimator" 
FROM "BAG_Tree_2" UNION ALL SELECT "BAG_Tree_3"."KEY" AS "KEY", "BAG_Tree_3"."Estimator" AS "Estimator" 
FROM "BAG_Tree_3" UNION ALL SELECT "BAG_Tree_4"."KEY" AS "KEY", "BAG_Tree_4"."Estimator" AS "Estimator" 
FROM "BAG_Tree_4" UNION ALL SELECT "BAG_Tree_5"."KEY" AS "KEY", "BAG_Tree_5"."Estimator" AS "Estimator" 
FROM "BAG_Tree_5" UNION ALL SELECT "BAG_Tree_6"."KEY" AS "KEY", "BAG_Tree_6"."Estimator" AS "Estimator" 
FROM "BAG_Tree_6" UNION ALL SELECT "BAG_Tree_7"."KEY" AS "KEY", "BAG_Tree_7"."Estimator" AS "Estimator" 
FROM "BAG_Tree_7" UNION ALL SELECT "BAG_Tree_8"."KEY" AS "KEY", "BAG_Tree_8"."Estimator" AS "Estimator" 
FROM "BAG_Tree_8" UNION ALL SELECT "BAG_Tree_9"."KEY" AS "KEY", "BAG_Tree_9"."Estimator" AS "Estimator" 
FROM "BAG_Tree_9") ensemble_score_union), 
"BAG_AVG_Scores" AS 
(SELECT "T"."KEY" AS "KEY", "T"."Estimator" AS "Estimator" 
FROM (SELECT "Score_Union_CTE"."KEY" AS "KEY", avg("Score_Union_CTE"."Estimator") AS "Estimator" 
FROM "Score_Union_CTE" GROUP BY "Score_Union_CTE"."KEY") "T")
 SELECT "BAG_AVG_Scores"."KEY" AS "KEY", "BAG_AVG_Scores"."Estimator" AS "Estimator" 
FROM "BAG_AVG_Scores"