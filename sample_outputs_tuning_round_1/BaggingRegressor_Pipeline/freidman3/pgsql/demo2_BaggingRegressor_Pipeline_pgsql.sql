-- This SQL code was generated by sklearn2sql (development version).
-- Copyright 2017

WITH "ADS_imp_1_OUT" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_0" IS NULL) THEN 37.1024906382 ELSE "ADS"."Feature_0" END AS imputer_output_2, CASE WHEN ("ADS"."Feature_1" IS NULL) THEN 820.420898922 ELSE "ADS"."Feature_1" END AS imputer_output_3, CASE WHEN ("ADS"."Feature_2" IS NULL) THEN 0.566181762373 ELSE "ADS"."Feature_2" END AS imputer_output_4, CASE WHEN ("ADS"."Feature_3" IS NULL) THEN 6.66448350657 ELSE "ADS"."Feature_3" END AS imputer_output_5 
FROM freidman3 AS "ADS"), 
"ADS_sca_2_OUT" AS 
(SELECT "ADS_imp_1_OUT"."KEY" AS "KEY", (CAST("ADS_imp_1_OUT".imputer_output_2 AS FLOAT) - 37.1024906382) / 27.2361073362 AS scaler_output_2, (CAST("ADS_imp_1_OUT".imputer_output_3 AS FLOAT) - 820.420898922) / 386.031348182 AS scaler_output_3, (CAST("ADS_imp_1_OUT".imputer_output_4 AS FLOAT) - 0.566181762373) / 0.306900434257 AS scaler_output_4, (CAST("ADS_imp_1_OUT".imputer_output_5 AS FLOAT) - 6.66448350657) / 3.34652241867 AS scaler_output_5 
FROM "ADS_imp_1_OUT"), 
"DT_node_lookup" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= -1.515555739402771) THEN 1 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= -0.8555728197097778) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= -0.5876970291137695) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= -0.44946566224098206) THEN 5 ELSE 6 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= -1.133222222328186) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= 0.34972724318504333) THEN 9 ELSE 10 END ELSE 11 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= -0.18919242918491364) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= -0.6113497614860535) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= -0.14749030768871307) THEN 15 ELSE 16 END ELSE 17 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= 0.07727858424186707) THEN 19 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= 1.5224230289459229) THEN 21 ELSE 22 END END END END END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 0 AS node_id, 'scaler_output_4' AS feature, -1.515555739402771 AS threshold, 15 AS count, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 1.4731838320163444 AS "Estimator" UNION ALL SELECT 1 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 1 AS depth, 0 AS parent_id, 0.8079109230317987 AS "Estimator" UNION ALL SELECT 2 AS node_id, 'scaler_output_2' AS feature, -0.8555728197097778 AS threshold, 14 AS count, 1 AS depth, 0 AS parent_id, 1.5009035365573673 AS "Estimator" UNION ALL SELECT 3 AS node_id, 'scaler_output_4' AS feature, -0.5876970291137695 AS threshold, 6 AS count, 2 AS depth, 2 AS parent_id, 1.5528797542122084 AS "Estimator" UNION ALL SELECT 4 AS node_id, 'scaler_output_3' AS feature, -0.44946566224098206 AS threshold, 2 AS count, 3 AS depth, 3 AS parent_id, 1.5364135743848693 AS "Estimator" UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 4 AS parent_id, 1.5359670902044162 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 4 AS parent_id, 1.536711230505171 AS "Estimator" UNION ALL SELECT 7 AS node_id, 'scaler_output_2' AS feature, -1.133222222328186 AS threshold, 4 AS count, 3 AS depth, 3 AS parent_id, 1.5631711166042952 AS "Estimator" UNION ALL SELECT 8 AS node_id, 'scaler_output_3' AS feature, 0.34972724318504333 AS threshold, 3 AS count, 4 AS depth, 7 AS parent_id, 1.5674126046105237 AS "Estimator" UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 5 AS depth, 8 AS parent_id, 1.5692815912938547 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 8 AS parent_id, 1.5646091245855271 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 7 AS parent_id, 1.556101969927248 AS "Estimator" UNION ALL SELECT 12 AS node_id, 'scaler_output_4' AS feature, -0.18919242918491364 AS threshold, 8 AS count, 2 AS depth, 2 AS parent_id, 1.439477097510737 AS "Estimator" UNION ALL SELECT 13 AS node_id, 'scaler_output_4' AS feature, -0.6113497614860535 AS threshold, 3 AS count, 3 AS depth, 12 AS parent_id, 1.3767934743188395 AS "Estimator" UNION ALL SELECT 14 AS node_id, 'scaler_output_2' AS feature, -0.14749030768871307 AS threshold, 2 AS count, 4 AS depth, 13 AS parent_id, 1.368305858765039 AS "Estimator" UNION ALL SELECT 15 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 14 AS parent_id, 1.3687175770364277 AS "Estimator" UNION ALL SELECT 16 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 14 AS parent_id, 1.3678941404936502 AS "Estimator" UNION ALL SELECT 17 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 13 AS parent_id, 1.410743936534041 AS "Estimator" UNION ALL SELECT 18 AS node_id, 'scaler_output_4' AS feature, 0.07727858424186707 AS threshold, 5 AS count, 3 AS depth, 12 AS parent_id, 1.4917134501706517 AS "Estimator" UNION ALL SELECT 19 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 18 AS parent_id, 1.467648677980467 AS "Estimator" UNION ALL SELECT 20 AS node_id, 'scaler_output_2' AS feature, 1.5224230289459229 AS threshold, 4 AS count, 4 AS depth, 18 AS parent_id, 1.4965264046086886 AS "Estimator" UNION ALL SELECT 21 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 5 AS depth, 20 AS parent_id, 1.49318296852536 AS "Estimator" UNION ALL SELECT 22 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 20 AS parent_id, 1.5099001489420028 AS "Estimator") AS "Values"), 
"DT_Output" AS 
(SELECT "DT_node_lookup"."KEY" AS "KEY", "DT_node_lookup".node_id_2 AS node_id_2, "DT_node_data".node_id AS node_id, "DT_node_data".feature AS feature, "DT_node_data".threshold AS threshold, "DT_node_data".count AS count, "DT_node_data".depth AS depth, "DT_node_data".parent_id AS parent_id, "DT_node_data"."Estimator" AS "Estimator" 
FROM "DT_node_lookup" LEFT OUTER JOIN "DT_node_data" ON "DT_node_lookup".node_id_2 = "DT_node_data".node_id), 
"BAG_Tree_0" AS 
(SELECT "DT_Output"."KEY" AS "KEY", "DT_Output"."Estimator" AS "Estimator" 
FROM "DT_Output"), 
"DT_node_lookup_1" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= -1.399195671081543) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= -0.7402926683425903) THEN 2 ELSE 3 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= 0.37956005334854126) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= 0.1336068958044052) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= 0.4118063449859619) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= -0.5645000338554382) THEN 8 ELSE 9 END ELSE 10 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= -0.7332900762557983) THEN 12 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= 0.5575467944145203) THEN 14 ELSE 15 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= 1.310650110244751) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= -0.3280213177204132) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= 0.5081676244735718) THEN 19 ELSE 20 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= 1.0836601257324219) THEN 22 ELSE 23 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= 1.3462634086608887) THEN 25 ELSE 26 END END END END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_1" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 0 AS node_id, 'scaler_output_4' AS feature, -1.399195671081543 AS threshold, 16 AS count, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 1.47126635805493 AS "Estimator" UNION ALL SELECT 1 AS node_id, 'scaler_output_2' AS feature, -0.7402926683425903 AS threshold, 2 AS count, 1 AS depth, 0 AS parent_id, 1.2455031803026952 AS "Estimator" UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 2 AS depth, 1 AS parent_id, 1.1409162524546155 AS "Estimator" UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 2 AS depth, 1 AS parent_id, 1.350090108150775 AS "Estimator" UNION ALL SELECT 4 AS node_id, 'scaler_output_3' AS feature, 0.37956005334854126 AS threshold, 14 AS count, 1 AS depth, 0 AS parent_id, 1.4908979387290375 AS "Estimator" UNION ALL SELECT 5 AS node_id, 'scaler_output_5' AS feature, 0.1336068958044052 AS threshold, 7 AS count, 2 AS depth, 4 AS parent_id, 1.460333496675459 AS "Estimator" UNION ALL SELECT 6 AS node_id, 'scaler_output_4' AS feature, 0.4118063449859619 AS threshold, 3 AS count, 3 AS depth, 5 AS parent_id, 1.3813864199582429 AS "Estimator" UNION ALL SELECT 7 AS node_id, 'scaler_output_3' AS feature, -0.5645000338554382 AS threshold, 2 AS count, 4 AS depth, 6 AS parent_id, 1.4155560301845382 AS "Estimator" UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 7 AS parent_id, 1.410743936534041 AS "Estimator" UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 7 AS parent_id, 1.4251802174855326 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 6 AS parent_id, 1.278877589279357 AS "Estimator" UNION ALL SELECT 11 AS node_id, 'scaler_output_2' AS feature, -0.7332900762557983 AS threshold, 4 AS count, 3 AS depth, 5 AS parent_id, 1.495421086327555 AS "Estimator" UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 11 AS parent_id, 1.5359670902044162 AS "Estimator" UNION ALL SELECT 13 AS node_id, 'scaler_output_2' AS feature, 0.5575467944145203 AS threshold, 3 AS count, 4 AS depth, 11 AS parent_id, 1.4838365137913094 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 5 AS depth, 13 AS parent_id, 1.4911810295399384 AS "Estimator" UNION ALL SELECT 15 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 13 AS parent_id, 1.4783281269798374 AS "Estimator" UNION ALL SELECT 16 AS node_id, 'scaler_output_4' AS feature, 1.310650110244751 AS threshold, 7 AS count, 2 AS depth, 4 AS parent_id, 1.5306317133986889 AS "Estimator" UNION ALL SELECT 17 AS node_id, 'scaler_output_5' AS feature, -0.3280213177204132 AS threshold, 5 AS count, 3 AS depth, 16 AS parent_id, 1.5378992083186076 AS "Estimator" UNION ALL SELECT 18 AS node_id, 'scaler_output_3' AS feature, 0.5081676244735718 AS threshold, 2 AS count, 4 AS depth, 17 AS parent_id, 1.5291542683061832 AS "Estimator" UNION ALL SELECT 19 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 18 AS parent_id, 1.5352537026948319 AS "Estimator" UNION ALL SELECT 20 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 18 AS parent_id, 1.527629409709021 AS "Estimator" UNION ALL SELECT 21 AS node_id, 'scaler_output_5' AS feature, 1.0836601257324219 AS threshold, 3 AS count, 4 AS depth, 17 AS parent_id, 1.5524741083393154 AS "Estimator" UNION ALL SELECT 22 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 5 AS depth, 21 AS parent_id, 1.5603555472563877 AS "Estimator" UNION ALL SELECT 23 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 21 AS parent_id, 1.536711230505171 AS "Estimator" UNION ALL SELECT 24 AS node_id, 'scaler_output_4' AS feature, 1.3462634086608887 AS threshold, 2 AS count, 3 AS depth, 16 AS parent_id, 1.5015617337190137 AS "Estimator" UNION ALL SELECT 25 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 24 AS parent_id, 1.4932233184960249 AS "Estimator" UNION ALL SELECT 26 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 24 AS parent_id, 1.5099001489420028 AS "Estimator") AS "Values"), 
"DT_Output_1" AS 
(SELECT "DT_node_lookup_1"."KEY" AS "KEY", "DT_node_lookup_1".node_id_2 AS node_id_2, "DT_node_data_1".node_id AS node_id, "DT_node_data_1".feature AS feature, "DT_node_data_1".threshold AS threshold, "DT_node_data_1".count AS count, "DT_node_data_1".depth AS depth, "DT_node_data_1".parent_id AS parent_id, "DT_node_data_1"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_1" LEFT OUTER JOIN "DT_node_data_1" ON "DT_node_lookup_1".node_id_2 = "DT_node_data_1".node_id), 
"BAG_Tree_1" AS 
(SELECT "DT_Output_1"."KEY" AS "KEY", "DT_Output_1"."Estimator" AS "Estimator" 
FROM "DT_Output_1"), 
"DT_node_lookup_2" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= 0.043509818613529205) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= -0.8584861159324646) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= -0.7916625142097473) THEN 3 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= 0.5597398281097412) THEN 5 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= 0.9679312705993652) THEN 7 ELSE 8 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= -0.11328814923763275) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= -0.7653782963752747) THEN 11 ELSE 12 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= 0.03779244422912598) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= -0.4958369731903076) THEN 15 ELSE 16 END ELSE 17 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= -0.5758421421051025) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= -0.4353764057159424) THEN 20 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= -1.520769476890564) THEN 22 ELSE 23 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= -0.11959359049797058) THEN 25 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= 1.285435676574707) THEN 27 ELSE 28 END END END END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_2" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 0 AS node_id, 'scaler_output_2' AS feature, 0.043509818613529205 AS threshold, 16 AS count, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 1.4133936077119507 AS "Estimator" UNION ALL SELECT 1 AS node_id, 'scaler_output_2' AS feature, -0.8584861159324646 AS threshold, 10 AS count, 1 AS depth, 0 AS parent_id, 1.511407455358092 AS "Estimator" UNION ALL SELECT 2 AS node_id, 'scaler_output_4' AS feature, -0.7916625142097473 AS threshold, 5 AS count, 2 AS depth, 1 AS parent_id, 1.558323431748776 AS "Estimator" UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 2 AS parent_id, 1.536711230505171 AS "Estimator" UNION ALL SELECT 4 AS node_id, 'scaler_output_5' AS feature, 0.5597398281097412 AS threshold, 4 AS count, 3 AS depth, 2 AS parent_id, 1.5655274988299777 AS "Estimator" UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 4 AS parent_id, 1.556101969927248 AS "Estimator" UNION ALL SELECT 6 AS node_id, 'scaler_output_5' AS feature, 0.9679312705993652 AS threshold, 3 AS count, 4 AS depth, 4 AS parent_id, 1.5674126046105237 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 5 AS depth, 6 AS parent_id, 1.5692815912938547 AS "Estimator" UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 6 AS parent_id, 1.5646091245855271 AS "Estimator" UNION ALL SELECT 9 AS node_id, 'scaler_output_4' AS feature, -0.11328814923763275 AS threshold, 5 AS count, 2 AS depth, 1 AS parent_id, 1.4488528201705133 AS "Estimator" UNION ALL SELECT 10 AS node_id, 'scaler_output_5' AS feature, -0.7653782963752747 AS threshold, 2 AS count, 3 AS depth, 9 AS parent_id, 1.390525993739619 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 10 AS parent_id, 1.410743936534041 AS "Estimator" UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 10 AS parent_id, 1.350090108150775 AS "Estimator" UNION ALL SELECT 13 AS node_id, 'scaler_output_3' AS feature, 0.03779244422912598 AS threshold, 3 AS count, 3 AS depth, 9 AS parent_id, 1.5071796466014076 AS "Estimator" UNION ALL SELECT 14 AS node_id, 'scaler_output_3' AS feature, -0.4958369731903076 AS threshold, 2 AS count, 4 AS depth, 13 AS parent_id, 1.4931426185546952 AS "Estimator" UNION ALL SELECT 15 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 14 AS parent_id, 1.499027385598966 AS "Estimator" UNION ALL SELECT 16 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 14 AS parent_id, 1.4872578515104244 AS "Estimator" UNION ALL SELECT 17 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 13 AS parent_id, 1.5352537026948319 AS "Estimator" UNION ALL SELECT 18 AS node_id, 'scaler_output_3' AS feature, -0.5758421421051025 AS threshold, 6 AS count, 1 AS depth, 0 AS parent_id, 1.2886487107077713 AS "Estimator" UNION ALL SELECT 19 AS node_id, 'scaler_output_4' AS feature, -0.4353764057159424 AS threshold, 3 AS count, 2 AS depth, 18 AS parent_id, 1.1037915634109872 AS "Estimator" UNION ALL SELECT 20 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 19 AS parent_id, 0.8079109230317987 AS "Estimator" UNION ALL SELECT 21 AS node_id, 'scaler_output_3' AS feature, -1.520769476890564 AS threshold, 2 AS count, 3 AS depth, 19 AS parent_id, 1.1777617235057845 AS "Estimator" UNION ALL SELECT 22 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 21 AS parent_id, 1.1440564349145939 AS "Estimator" UNION ALL SELECT 23 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 21 AS parent_id, 1.278877589279357 AS "Estimator" UNION ALL SELECT 24 AS node_id, 'scaler_output_4' AS feature, -0.11959359049797058 AS threshold, 3 AS count, 2 AS depth, 18 AS parent_id, 1.442696333455091 AS "Estimator" UNION ALL SELECT 25 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 24 AS parent_id, 1.3678941404936502 AS "Estimator" UNION ALL SELECT 26 AS node_id, 'scaler_output_3' AS feature, 1.285435676574707 AS threshold, 2 AS count, 3 AS depth, 24 AS parent_id, 1.5174985264165322 AS "Estimator" UNION ALL SELECT 27 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 26 AS parent_id, 1.5099001489420028 AS "Estimator" UNION ALL SELECT 28 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 26 AS parent_id, 1.521297715153797 AS "Estimator") AS "Values"), 
"DT_Output_2" AS 
(SELECT "DT_node_lookup_2"."KEY" AS "KEY", "DT_node_lookup_2".node_id_2 AS node_id_2, "DT_node_data_2".node_id AS node_id, "DT_node_data_2".feature AS feature, "DT_node_data_2".threshold AS threshold, "DT_node_data_2".count AS count, "DT_node_data_2".depth AS depth, "DT_node_data_2".parent_id AS parent_id, "DT_node_data_2"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_2" LEFT OUTER JOIN "DT_node_data_2" ON "DT_node_lookup_2".node_id_2 = "DT_node_data_2".node_id), 
"BAG_Tree_2" AS 
(SELECT "DT_Output_2"."KEY" AS "KEY", "DT_Output_2"."Estimator" AS "Estimator" 
FROM "DT_Output_2"), 
"DT_node_lookup_3" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= -1.515555739402771) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= -0.7860751748085022) THEN 2 ELSE 3 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= 0.15768837928771973) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= 0.27064037322998047) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= -1.520769476890564) THEN 7 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= 0.1802157759666443) THEN 9 ELSE 10 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= 0.97102952003479) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= 0.8621824383735657) THEN 13 ELSE 14 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= 1.3462634086608887) THEN 16 ELSE 17 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= -0.6036295890808105) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= -0.5876970291137695) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= -0.9396407008171082) THEN 21 ELSE 22 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= -1.2766528129577637) THEN 24 ELSE 25 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= 0.07727858424186707) THEN 27 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= 0.44186776876449585) THEN 29 ELSE 30 END END END END END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_3" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 0 AS node_id, 'scaler_output_4' AS feature, -1.515555739402771 AS threshold, 19 AS count, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 1.423860424789889 AS "Estimator" UNION ALL SELECT 1 AS node_id, 'scaler_output_3' AS feature, -0.7860751748085022 AS threshold, 2 AS count, 1 AS depth, 0 AS parent_id, 0.9744135877432071 AS "Estimator" UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 2 AS depth, 1 AS parent_id, 0.8079109230317987 AS "Estimator" UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 2 AS depth, 1 AS parent_id, 1.1409162524546155 AS "Estimator" UNION ALL SELECT 4 AS node_id, 'scaler_output_5' AS feature, 0.15768837928771973 AS threshold, 17 AS count, 1 AS depth, 0 AS parent_id, 1.4629427584461216 AS "Estimator" UNION ALL SELECT 5 AS node_id, 'scaler_output_3' AS feature, 0.27064037322998047 AS threshold, 8 AS count, 2 AS depth, 4 AS parent_id, 1.3930660440940374 AS "Estimator" UNION ALL SELECT 6 AS node_id, 'scaler_output_3' AS feature, -1.520769476890564 AS threshold, 4 AS count, 3 AS depth, 5 AS parent_id, 1.3234359428211082 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 6 AS parent_id, 1.1440564349145939 AS "Estimator" UNION ALL SELECT 8 AS node_id, 'scaler_output_4' AS feature, 0.1802157759666443 AS threshold, 3 AS count, 4 AS depth, 6 AS parent_id, 1.353332527472194 AS "Estimator" UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 5 AS depth, 8 AS parent_id, 1.3682235151107611 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 8 AS parent_id, 1.278877589279357 AS "Estimator" UNION ALL SELECT 11 AS node_id, 'scaler_output_2' AS feature, 0.97102952003479 AS threshold, 4 AS count, 3 AS depth, 5 AS parent_id, 1.5149187213216642 AS "Estimator" UNION ALL SELECT 12 AS node_id, 'scaler_output_3' AS feature, 0.8621824383735657 AS threshold, 2 AS count, 4 AS depth, 11 AS parent_id, 1.5282757089243144 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 12 AS parent_id, 1.5352537026948319 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 12 AS parent_id, 1.521297715153797 AS "Estimator" UNION ALL SELECT 15 AS node_id, 'scaler_output_4' AS feature, 1.3462634086608887 AS threshold, 2 AS count, 4 AS depth, 11 AS parent_id, 1.5015617337190137 AS "Estimator" UNION ALL SELECT 16 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 15 AS parent_id, 1.4932233184960249 AS "Estimator" UNION ALL SELECT 17 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 15 AS parent_id, 1.5099001489420028 AS "Estimator" UNION ALL SELECT 18 AS node_id, 'scaler_output_2' AS feature, -0.6036295890808105 AS threshold, 9 AS count, 2 AS depth, 4 AS parent_id, 1.526996413268866 AS "Estimator" UNION ALL SELECT 19 AS node_id, 'scaler_output_4' AS feature, -0.5876970291137695 AS threshold, 5 AS count, 3 AS depth, 18 AS parent_id, 1.5537184848542824 AS "Estimator" UNION ALL SELECT 20 AS node_id, 'scaler_output_4' AS feature, -0.9396407008171082 AS threshold, 2 AS count, 4 AS depth, 19 AS parent_id, 1.5362151369713344 AS "Estimator" UNION ALL SELECT 21 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 20 AS parent_id, 1.536711230505171 AS "Estimator" UNION ALL SELECT 22 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 20 AS parent_id, 1.5359670902044162 AS "Estimator" UNION ALL SELECT 23 AS node_id, 'scaler_output_2' AS feature, -1.2766528129577637 AS threshold, 3 AS count, 4 AS depth, 19 AS parent_id, 1.566845995766493 AS "Estimator" UNION ALL SELECT 24 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 5 AS depth, 23 AS parent_id, 1.5690828669474595 AS "Estimator" UNION ALL SELECT 25 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 23 AS parent_id, 1.5646091245855271 AS "Estimator" UNION ALL SELECT 26 AS node_id, 'scaler_output_4' AS feature, 0.07727858424186707 AS threshold, 4 AS count, 3 AS depth, 18 AS parent_id, 1.4895855130492834 AS "Estimator" UNION ALL SELECT 27 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 26 AS parent_id, 1.467648677980467 AS "Estimator" UNION ALL SELECT 28 AS node_id, 'scaler_output_4' AS feature, 0.44186776876449585 AS threshold, 3 AS count, 4 AS depth, 26 AS parent_id, 1.4950697218164875 AS "Estimator" UNION ALL SELECT 29 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 28 AS parent_id, 1.4872578515104244 AS "Estimator" UNION ALL SELECT 30 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 5 AS depth, 28 AS parent_id, 1.4976736785851752 AS "Estimator") AS "Values"), 
"DT_Output_3" AS 
(SELECT "DT_node_lookup_3"."KEY" AS "KEY", "DT_node_lookup_3".node_id_2 AS node_id_2, "DT_node_data_3".node_id AS node_id, "DT_node_data_3".feature AS feature, "DT_node_data_3".threshold AS threshold, "DT_node_data_3".count AS count, "DT_node_data_3".depth AS depth, "DT_node_data_3".parent_id AS parent_id, "DT_node_data_3"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_3" LEFT OUTER JOIN "DT_node_data_3" ON "DT_node_lookup_3".node_id_2 = "DT_node_data_3".node_id), 
"BAG_Tree_3" AS 
(SELECT "DT_Output_3"."KEY" AS "KEY", "DT_Output_3"."Estimator" AS "Estimator" 
FROM "DT_Output_3"), 
"DT_node_lookup_4" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= -1.4529683589935303) THEN 1 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= -0.18919242918491364) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= -0.8306390047073364) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= -1.256571650505066) THEN 5 ELSE 6 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= -0.20836688578128815) THEN 8 ELSE 9 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= -0.0975104421377182) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= 0.2210048884153366) THEN 12 ELSE 13 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= 0.9191404581069946) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= 0.07727858424186707) THEN 16 ELSE 17 END ELSE 18 END END END END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_4" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 0 AS node_id, 'scaler_output_3' AS feature, -1.4529683589935303 AS threshold, 11 AS count, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 1.4442386921279808 AS "Estimator" UNION ALL SELECT 1 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 1 AS depth, 0 AS parent_id, 1.278877589279357 AS "Estimator" UNION ALL SELECT 2 AS node_id, 'scaler_output_4' AS feature, -0.18919242918491364 AS threshold, 10 AS count, 1 AS depth, 0 AS parent_id, 1.475736045051528 AS "Estimator" UNION ALL SELECT 3 AS node_id, 'scaler_output_4' AS feature, -0.8306390047073364 AS threshold, 4 AS count, 2 AS depth, 2 AS parent_id, 1.3857904078914693 AS "Estimator" UNION ALL SELECT 4 AS node_id, 'scaler_output_4' AS feature, -1.256571650505066 AS threshold, 2 AS count, 3 AS depth, 3 AS parent_id, 1.3560247855984002 AS "Estimator" UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 4 AS parent_id, 1.350090108150775 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 4 AS parent_id, 1.3678941404936502 AS "Estimator" UNION ALL SELECT 7 AS node_id, 'scaler_output_2' AS feature, -0.20836688578128815 AS threshold, 2 AS count, 3 AS depth, 3 AS parent_id, 1.4155560301845382 AS "Estimator" UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 7 AS parent_id, 1.410743936534041 AS "Estimator" UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 7 AS parent_id, 1.4251802174855326 AS "Estimator" UNION ALL SELECT 10 AS node_id, 'scaler_output_2' AS feature, -0.0975104421377182 AS threshold, 6 AS count, 2 AS depth, 2 AS parent_id, 1.5117142999155517 AS "Estimator" UNION ALL SELECT 11 AS node_id, 'scaler_output_3' AS feature, 0.2210048884153366 AS threshold, 2 AS count, 3 AS depth, 10 AS parent_id, 1.5485468991802083 AS "Estimator" UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 11 AS parent_id, 1.5684866939082733 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 11 AS parent_id, 1.5352537026948319 AS "Estimator" UNION ALL SELECT 14 AS node_id, 'scaler_output_3' AS feature, 0.9191404581069946 AS threshold, 4 AS count, 3 AS depth, 10 AS parent_id, 1.4932980002832232 AS "Estimator" UNION ALL SELECT 15 AS node_id, 'scaler_output_4' AS feature, 0.07727858424186707 AS threshold, 3 AS count, 4 AS depth, 14 AS parent_id, 1.4862980715655798 AS "Estimator" UNION ALL SELECT 16 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 15 AS parent_id, 1.467648677980467 AS "Estimator" UNION ALL SELECT 17 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 5 AS depth, 15 AS parent_id, 1.4889622706491674 AS "Estimator" UNION ALL SELECT 18 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 14 AS parent_id, 1.521297715153797 AS "Estimator") AS "Values"), 
"DT_Output_4" AS 
(SELECT "DT_node_lookup_4"."KEY" AS "KEY", "DT_node_lookup_4".node_id_2 AS node_id_2, "DT_node_data_4".node_id AS node_id, "DT_node_data_4".feature AS feature, "DT_node_data_4".threshold AS threshold, "DT_node_data_4".count AS count, "DT_node_data_4".depth AS depth, "DT_node_data_4".parent_id AS parent_id, "DT_node_data_4"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_4" LEFT OUTER JOIN "DT_node_data_4" ON "DT_node_lookup_4".node_id_2 = "DT_node_data_4".node_id), 
"BAG_Tree_4" AS 
(SELECT "DT_Output_4"."KEY" AS "KEY", "DT_Output_4"."Estimator" AS "Estimator" 
FROM "DT_Output_4"), 
"DT_node_lookup_5" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= -1.515555739402771) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= -0.27085450291633606) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= -1.6624939441680908) THEN 3 ELSE 4 END ELSE 5 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= -1.4626967906951904) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= 1.31593656539917) THEN 8 ELSE 9 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= -1.3277835845947266) THEN 11 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= -0.5851213335990906) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= 0.7955580949783325) THEN 14 ELSE 15 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= 0.915624737739563) THEN 17 ELSE 18 END END END END END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_5" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 0 AS node_id, 'scaler_output_4' AS feature, -1.515555739402771 AS threshold, 17 AS count, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 1.389588748117924 AS "Estimator" UNION ALL SELECT 1 AS node_id, 'scaler_output_2' AS feature, -0.27085450291633606 AS threshold, 3 AS count, 1 AS depth, 0 AS parent_id, 1.0996390945457297 AS "Estimator" UNION ALL SELECT 2 AS node_id, 'scaler_output_4' AS feature, -1.6624939441680908 AS threshold, 2 AS count, 2 AS depth, 1 AS parent_id, 1.2455031803026952 AS "Estimator" UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 2 AS parent_id, 1.350090108150775 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 2 AS parent_id, 1.1409162524546155 AS "Estimator" UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 2 AS depth, 1 AS parent_id, 0.8079109230317987 AS "Estimator" UNION ALL SELECT 6 AS node_id, 'scaler_output_3' AS feature, -1.4626967906951904 AS threshold, 14 AS count, 1 AS depth, 0 AS parent_id, 1.4811517966144065 AS "Estimator" UNION ALL SELECT 7 AS node_id, 'scaler_output_2' AS feature, 1.31593656539917 AS threshold, 2 AS count, 2 AS depth, 6 AS parent_id, 1.2114670120969753 AS "Estimator" UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 7 AS parent_id, 1.278877589279357 AS "Estimator" UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 7 AS parent_id, 1.1440564349145939 AS "Estimator" UNION ALL SELECT 10 AS node_id, 'scaler_output_4' AS feature, -1.3277835845947266 AS threshold, 12 AS count, 2 AS depth, 6 AS parent_id, 1.5128794183223397 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 10 AS parent_id, 1.3687175770364277 AS "Estimator" UNION ALL SELECT 12 AS node_id, 'scaler_output_2' AS feature, -0.5851213335990906 AS threshold, 11 AS count, 3 AS depth, 10 AS parent_id, 1.5218895334027092 AS "Estimator" UNION ALL SELECT 13 AS node_id, 'scaler_output_3' AS feature, 0.7955580949783325 AS threshold, 5 AS count, 4 AS depth, 12 AS parent_id, 1.560877849816585 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS count, 5 AS depth, 13 AS parent_id, 1.5657111736788678 AS "Estimator" UNION ALL SELECT 15 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 13 AS parent_id, 1.536711230505171 AS "Estimator" UNION ALL SELECT 16 AS node_id, 'scaler_output_3' AS feature, 0.915624737739563 AS threshold, 6 AS count, 4 AS depth, 12 AS parent_id, 1.4984965435543836 AS "Estimator" UNION ALL SELECT 17 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS count, 5 AS depth, 16 AS parent_id, 1.4903528366134626 AS "Estimator" UNION ALL SELECT 18 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 5 AS depth, 16 AS parent_id, 1.5174985264165322 AS "Estimator") AS "Values"), 
"DT_Output_5" AS 
(SELECT "DT_node_lookup_5"."KEY" AS "KEY", "DT_node_lookup_5".node_id_2 AS node_id_2, "DT_node_data_5".node_id AS node_id, "DT_node_data_5".feature AS feature, "DT_node_data_5".threshold AS threshold, "DT_node_data_5".count AS count, "DT_node_data_5".depth AS depth, "DT_node_data_5".parent_id AS parent_id, "DT_node_data_5"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_5" LEFT OUTER JOIN "DT_node_data_5" ON "DT_node_lookup_5".node_id_2 = "DT_node_data_5".node_id), 
"BAG_Tree_5" AS 
(SELECT "DT_Output_5"."KEY" AS "KEY", "DT_Output_5"."Estimator" AS "Estimator" 
FROM "DT_Output_5"), 
"DT_node_lookup_6" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= -1.515555739402771) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= -0.6730429530143738) THEN 2 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= 0.5748847723007202) THEN 4 ELSE 5 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= -0.7770063877105713) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= -0.8306390047073364) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= -0.02395235374569893) THEN 9 ELSE 10 END ELSE 11 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= -0.8237792253494263) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= -1.618375539779663) THEN 14 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= -1.133222222328186) THEN 16 ELSE 17 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= 0.30256372690200806) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= -0.051324665546417236) THEN 20 ELSE 21 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= -0.09821593761444092) THEN 23 ELSE 24 END END END END END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_6" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 0 AS node_id, 'scaler_output_4' AS feature, -1.515555739402771 AS threshold, 16 AS count, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 1.4027788895541164 AS "Estimator" UNION ALL SELECT 1 AS node_id, 'scaler_output_5' AS feature, -0.6730429530143738 AS threshold, 3 AS count, 1 AS depth, 0 AS parent_id, 1.0495488918247209 AS "Estimator" UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 2 AS depth, 1 AS parent_id, 0.8079109230317987 AS "Estimator" UNION ALL SELECT 3 AS node_id, 'scaler_output_3' AS feature, 0.5748847723007202 AS threshold, 2 AS count, 2 AS depth, 1 AS parent_id, 1.2106408710200018 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 3 AS parent_id, 1.1409162524546155 AS "Estimator" UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 3 AS parent_id, 1.350090108150775 AS "Estimator" UNION ALL SELECT 6 AS node_id, 'scaler_output_4' AS feature, -0.7770063877105713 AS threshold, 13 AS count, 1 AS depth, 0 AS parent_id, 1.4910863889864652 AS "Estimator" UNION ALL SELECT 7 AS node_id, 'scaler_output_4' AS feature, -0.8306390047073364 AS threshold, 3 AS count, 2 AS depth, 6 AS parent_id, 1.3824215188773152 AS "Estimator" UNION ALL SELECT 8 AS node_id, 'scaler_output_3' AS feature, -0.02395235374569893 AS threshold, 2 AS count, 3 AS depth, 7 AS parent_id, 1.3681686193412428 AS "Estimator" UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 8 AS parent_id, 1.3678941404936502 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 8 AS parent_id, 1.3687175770364277 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 7 AS parent_id, 1.4251802174855326 AS "Estimator" UNION ALL SELECT 12 AS node_id, 'scaler_output_2' AS feature, -0.8237792253494263 AS threshold, 10 AS count, 2 AS depth, 6 AS parent_id, 1.518252606513753 AS "Estimator" UNION ALL SELECT 13 AS node_id, 'scaler_output_3' AS feature, -1.618375539779663 AS threshold, 4 AS count, 3 AS depth, 12 AS parent_id, 1.5592625789791486 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 13 AS parent_id, 1.5359670902044162 AS "Estimator" UNION ALL SELECT 15 AS node_id, 'scaler_output_2' AS feature, -1.133222222328186 AS threshold, 3 AS count, 4 AS depth, 13 AS parent_id, 1.563921676734095 AS "Estimator" UNION ALL SELECT 16 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 5 AS depth, 15 AS parent_id, 1.565876603435807 AS "Estimator" UNION ALL SELECT 17 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 15 AS parent_id, 1.556101969927248 AS "Estimator" UNION ALL SELECT 18 AS node_id, 'scaler_output_4' AS feature, 0.30256372690200806 AS threshold, 6 AS count, 3 AS depth, 12 AS parent_id, 1.4936466230345153 AS "Estimator" UNION ALL SELECT 19 AS node_id, 'scaler_output_2' AS feature, -0.051324665546417236 AS threshold, 2 AS count, 4 AS depth, 18 AS parent_id, 1.4486804308316585 AS "Estimator" UNION ALL SELECT 20 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 19 AS parent_id, 1.410743936534041 AS "Estimator" UNION ALL SELECT 21 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 19 AS parent_id, 1.467648677980467 AS "Estimator" UNION ALL SELECT 22 AS node_id, 'scaler_output_3' AS feature, -0.09821593761444092 AS threshold, 4 AS count, 4 AS depth, 18 AS parent_id, 1.5129178482643115 AS "Estimator" UNION ALL SELECT 23 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 22 AS parent_id, 1.499027385598966 AS "Estimator" UNION ALL SELECT 24 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 5 AS depth, 22 AS parent_id, 1.5184740333304494 AS "Estimator") AS "Values"), 
"DT_Output_6" AS 
(SELECT "DT_node_lookup_6"."KEY" AS "KEY", "DT_node_lookup_6".node_id_2 AS node_id_2, "DT_node_data_6".node_id AS node_id, "DT_node_data_6".feature AS feature, "DT_node_data_6".threshold AS threshold, "DT_node_data_6".count AS count, "DT_node_data_6".depth AS depth, "DT_node_data_6".parent_id AS parent_id, "DT_node_data_6"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_6" LEFT OUTER JOIN "DT_node_data_6" ON "DT_node_lookup_6".node_id_2 = "DT_node_data_6".node_id), 
"BAG_Tree_6" AS 
(SELECT "DT_Output_6"."KEY" AS "KEY", "DT_Output_6"."Estimator" AS "Estimator" 
FROM "DT_Output_6"), 
"DT_node_lookup_7" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= -1.1687439680099487) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= -0.6730429530143738) THEN 2 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= -0.7402926683425903) THEN 4 ELSE 5 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= -1.4626967906951904) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= -0.060773253440856934) THEN 8 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= 0.9258847236633301) THEN 10 ELSE 11 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= -0.5851213335990906) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= -1.133222222328186) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= -0.33140286803245544) THEN 15 ELSE 16 END ELSE 17 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= -0.4084816575050354) THEN 19 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= 0.5651256442070007) THEN 21 ELSE 22 END END END END END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_7" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 0 AS node_id, 'scaler_output_4' AS feature, -1.1687439680099487 AS threshold, 18 AS count, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 1.4304094411907453 AS "Estimator" UNION ALL SELECT 1 AS node_id, 'scaler_output_5' AS feature, -0.6730429530143738 AS threshold, 3 AS count, 1 AS depth, 0 AS parent_id, 1.1622518479469912 AS "Estimator" UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 2 AS depth, 1 AS parent_id, 0.8079109230317987 AS "Estimator" UNION ALL SELECT 3 AS node_id, 'scaler_output_2' AS feature, -0.7402926683425903 AS threshold, 2 AS count, 2 AS depth, 1 AS parent_id, 1.2803654895853886 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 3 AS parent_id, 1.1409162524546155 AS "Estimator" UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 3 AS parent_id, 1.350090108150775 AS "Estimator" UNION ALL SELECT 6 AS node_id, 'scaler_output_3' AS feature, -1.4626967906951904 AS threshold, 15 AS count, 1 AS depth, 0 AS parent_id, 1.4814870779990792 AS "Estimator" UNION ALL SELECT 7 AS node_id, 'scaler_output_2' AS feature, -0.060773253440856934 AS threshold, 3 AS count, 2 AS depth, 6 AS parent_id, 1.3196337047994555 AS "Estimator" UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 7 AS parent_id, 1.5359670902044162 AS "Estimator" UNION ALL SELECT 9 AS node_id, 'scaler_output_4' AS feature, 0.9258847236633301 AS threshold, 2 AS count, 3 AS depth, 7 AS parent_id, 1.2114670120969753 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 9 AS parent_id, 1.1440564349145939 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 9 AS parent_id, 1.278877589279357 AS "Estimator" UNION ALL SELECT 12 AS node_id, 'scaler_output_2' AS feature, -0.5851213335990906 AS threshold, 12 AS count, 2 AS depth, 6 AS parent_id, 1.5084626401990164 AS "Estimator" UNION ALL SELECT 13 AS node_id, 'scaler_output_2' AS feature, -1.133222222328186 AS threshold, 4 AS count, 3 AS depth, 12 AS parent_id, 1.5629957596669883 AS "Estimator" UNION ALL SELECT 14 AS node_id, 'scaler_output_4' AS feature, -0.33140286803245544 AS threshold, 3 AS count, 4 AS depth, 13 AS parent_id, 1.5675916194934818 AS "Estimator" UNION ALL SELECT 15 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 14 AS parent_id, 1.5646091245855271 AS "Estimator" UNION ALL SELECT 16 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 5 AS depth, 14 AS parent_id, 1.5690828669474595 AS "Estimator" UNION ALL SELECT 17 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 13 AS parent_id, 1.556101969927248 AS "Estimator" UNION ALL SELECT 18 AS node_id, 'scaler_output_4' AS feature, -0.4084816575050354 AS threshold, 8 AS count, 3 AS depth, 12 AS parent_id, 1.487488363480566 AS "Estimator" UNION ALL SELECT 19 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 18 AS parent_id, 1.4251802174855326 AS "Estimator" UNION ALL SELECT 20 AS node_id, 'scaler_output_3' AS feature, 0.5651256442070007 AS threshold, 7 AS count, 4 AS depth, 18 AS parent_id, 1.4988171172978448 AS "Estimator" UNION ALL SELECT 21 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS count, 5 AS depth, 20 AS parent_id, 1.4895954312824595 AS "Estimator" UNION ALL SELECT 22 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 5 AS depth, 20 AS parent_id, 1.5234082800055384 AS "Estimator") AS "Values"), 
"DT_Output_7" AS 
(SELECT "DT_node_lookup_7"."KEY" AS "KEY", "DT_node_lookup_7".node_id_2 AS node_id_2, "DT_node_data_7".node_id AS node_id, "DT_node_data_7".feature AS feature, "DT_node_data_7".threshold AS threshold, "DT_node_data_7".count AS count, "DT_node_data_7".depth AS depth, "DT_node_data_7".parent_id AS parent_id, "DT_node_data_7"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_7" LEFT OUTER JOIN "DT_node_data_7" ON "DT_node_lookup_7".node_id_2 = "DT_node_data_7".node_id), 
"BAG_Tree_7" AS 
(SELECT "DT_Output_7"."KEY" AS "KEY", "DT_Output_7"."Estimator" AS "Estimator" 
FROM "DT_Output_7"), 
"DT_node_lookup_8" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= -1.4626967906951904) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= -0.14594894647598267) THEN 2 ELSE 3 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= 0.37956005334854126) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= -0.5795762538909912) THEN 6 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= -1.0357035398483276) THEN 8 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= -0.2379414588212967) THEN 10 ELSE 11 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= 0.97102952003479) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= -0.6874048709869385) THEN 14 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= 0.16084539890289307) THEN 16 ELSE 17 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= 1.3462634086608887) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= 1.1215320825576782) THEN 20 ELSE 21 END ELSE 22 END END END END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_8" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 0 AS node_id, 'scaler_output_3' AS feature, -1.4626967906951904 AS threshold, 14 AS count, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 1.466429945167191 AS "Estimator" UNION ALL SELECT 1 AS node_id, 'scaler_output_5' AS feature, -0.14594894647598267 AS threshold, 2 AS count, 1 AS depth, 0 AS parent_id, 1.2339372044911026 AS "Estimator" UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 2 AS depth, 1 AS parent_id, 1.278877589279357 AS "Estimator" UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 2 AS depth, 1 AS parent_id, 1.1440564349145939 AS "Estimator" UNION ALL SELECT 4 AS node_id, 'scaler_output_3' AS feature, 0.37956005334854126 AS threshold, 12 AS count, 1 AS depth, 0 AS parent_id, 1.49813350071393 AS "Estimator" UNION ALL SELECT 5 AS node_id, 'scaler_output_5' AS feature, -0.5795762538909912 AS threshold, 5 AS count, 2 AS depth, 4 AS parent_id, 1.469363394747427 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 5 AS parent_id, 1.4107439365340408 AS "Estimator" UNION ALL SELECT 7 AS node_id, 'scaler_output_3' AS feature, -1.0357035398483276 AS threshold, 4 AS count, 3 AS depth, 5 AS parent_id, 1.49867312385412 AS "Estimator" UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 7 AS parent_id, 1.5696790399866454 AS "Estimator" UNION ALL SELECT 9 AS node_id, 'scaler_output_3' AS feature, -0.2379414588212967 AS threshold, 3 AS count, 4 AS depth, 7 AS parent_id, 1.4844719406276148 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 9 AS parent_id, 1.499027385598966 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 5 AS depth, 9 AS parent_id, 1.474768310646714 AS "Estimator" UNION ALL SELECT 12 AS node_id, 'scaler_output_2' AS feature, 0.97102952003479 AS threshold, 7 AS count, 2 AS depth, 4 AS parent_id, 1.5180512663830479 AS "Estimator" UNION ALL SELECT 13 AS node_id, 'scaler_output_2' AS feature, -0.6874048709869385 AS threshold, 4 AS count, 3 AS depth, 12 AS parent_id, 1.5308305252336014 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 13 AS parent_id, 1.5646091245855271 AS "Estimator" UNION ALL SELECT 15 AS node_id, 'scaler_output_2' AS feature, 0.16084539890289307 AS threshold, 3 AS count, 4 AS depth, 13 AS parent_id, 1.5260050110404693 AS "Estimator" UNION ALL SELECT 16 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 5 AS depth, 15 AS parent_id, 1.5295354829554737 AS "Estimator" UNION ALL SELECT 17 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 15 AS parent_id, 1.521297715153797 AS "Estimator" UNION ALL SELECT 18 AS node_id, 'scaler_output_4' AS feature, 1.3462634086608887 AS threshold, 3 AS count, 3 AS depth, 12 AS parent_id, 1.4976044522221614 AS "Estimator" UNION ALL SELECT 19 AS node_id, 'scaler_output_4' AS feature, 1.1215320825576782 AS threshold, 2 AS count, 4 AS depth, 18 AS parent_id, 1.4945305280422012 AS "Estimator" UNION ALL SELECT 20 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 19 AS parent_id, 1.4949662645575934 AS "Estimator" UNION ALL SELECT 21 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 19 AS parent_id, 1.4932233184960249 AS "Estimator" UNION ALL SELECT 22 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 18 AS parent_id, 1.5099001489420028 AS "Estimator") AS "Values"), 
"DT_Output_8" AS 
(SELECT "DT_node_lookup_8"."KEY" AS "KEY", "DT_node_lookup_8".node_id_2 AS node_id_2, "DT_node_data_8".node_id AS node_id, "DT_node_data_8".feature AS feature, "DT_node_data_8".threshold AS threshold, "DT_node_data_8".count AS count, "DT_node_data_8".depth AS depth, "DT_node_data_8".parent_id AS parent_id, "DT_node_data_8"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_8" LEFT OUTER JOIN "DT_node_data_8" ON "DT_node_lookup_8".node_id_2 = "DT_node_data_8".node_id), 
"BAG_Tree_8" AS 
(SELECT "DT_Output_8"."KEY" AS "KEY", "DT_Output_8"."Estimator" AS "Estimator" 
FROM "DT_Output_8"), 
"DT_node_lookup_9" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= -1.515555739402771) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= -0.6730429530143738) THEN 2 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= 0.5748847723007202) THEN 4 ELSE 5 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= -1.4529683589935303) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= -0.14594894647598267) THEN 8 ELSE 9 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= -1.3277835845947266) THEN 11 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= 0.37956005334854126) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= 0.1336068958044052) THEN 14 ELSE 15 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= -1.610102891921997) THEN 17 ELSE 18 END END END END END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_9" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 0 AS node_id, 'scaler_output_4' AS feature, -1.515555739402771 AS threshold, 17 AS count, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 1.3654293997483071 AS "Estimator" UNION ALL SELECT 1 AS node_id, 'scaler_output_5' AS feature, -0.6730429530143738 AS threshold, 3 AS count, 1 AS depth, 0 AS parent_id, 1.0495488918247209 AS "Estimator" UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 2 AS depth, 1 AS parent_id, 0.8079109230317987 AS "Estimator" UNION ALL SELECT 3 AS node_id, 'scaler_output_3' AS feature, 0.5748847723007202 AS threshold, 2 AS count, 2 AS depth, 1 AS parent_id, 1.2106408710200018 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 3 AS parent_id, 1.1409162524546155 AS "Estimator" UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 3 AS parent_id, 1.350090108150775 AS "Estimator" UNION ALL SELECT 6 AS node_id, 'scaler_output_3' AS feature, -1.4529683589935303 AS threshold, 14 AS count, 1 AS depth, 0 AS parent_id, 1.444399526729204 AS "Estimator" UNION ALL SELECT 7 AS node_id, 'scaler_output_5' AS feature, -0.14594894647598267 AS threshold, 2 AS count, 2 AS depth, 6 AS parent_id, 1.2114670120969753 AS "Estimator" UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 7 AS parent_id, 1.278877589279357 AS "Estimator" UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 7 AS parent_id, 1.1440564349145939 AS "Estimator" UNION ALL SELECT 10 AS node_id, 'scaler_output_4' AS feature, -1.3277835845947266 AS threshold, 12 AS count, 2 AS depth, 6 AS parent_id, 1.4702809172438962 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 10 AS parent_id, 1.3687175770364277 AS "Estimator" UNION ALL SELECT 12 AS node_id, 'scaler_output_3' AS feature, 0.37956005334854126 AS threshold, 11 AS count, 3 AS depth, 10 AS parent_id, 1.4905935852853895 AS "Estimator" UNION ALL SELECT 13 AS node_id, 'scaler_output_5' AS feature, 0.1336068958044052 AS threshold, 6 AS count, 4 AS depth, 12 AS parent_id, 1.4600780331356533 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 5 AS depth, 13 AS parent_id, 1.4203681238350354 AS "Estimator" UNION ALL SELECT 15 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS count, 5 AS depth, 13 AS parent_id, 1.483903978716024 AS "Estimator" UNION ALL SELECT 16 AS node_id, 'scaler_output_5' AS feature, -1.610102891921997 AS threshold, 5 AS count, 4 AS depth, 12 AS parent_id, 1.525468502027946 AS "Estimator" UNION ALL SELECT 17 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 16 AS parent_id, 1.4932233184960249 AS "Estimator" UNION ALL SELECT 18 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS count, 5 AS depth, 16 AS parent_id, 1.5383665754407143 AS "Estimator") AS "Values"), 
"DT_Output_9" AS 
(SELECT "DT_node_lookup_9"."KEY" AS "KEY", "DT_node_lookup_9".node_id_2 AS node_id_2, "DT_node_data_9".node_id AS node_id, "DT_node_data_9".feature AS feature, "DT_node_data_9".threshold AS threshold, "DT_node_data_9".count AS count, "DT_node_data_9".depth AS depth, "DT_node_data_9".parent_id AS parent_id, "DT_node_data_9"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_9" LEFT OUTER JOIN "DT_node_data_9" ON "DT_node_lookup_9".node_id_2 = "DT_node_data_9".node_id), 
"BAG_Tree_9" AS 
(SELECT "DT_Output_9"."KEY" AS "KEY", "DT_Output_9"."Estimator" AS "Estimator" 
FROM "DT_Output_9"), 
"Score_Union_CTE" AS 
(SELECT ensemble_score_union."KEY" AS "KEY", ensemble_score_union."Estimator" AS "Estimator" 
FROM (SELECT "BAG_Tree_0"."KEY" AS "KEY", "BAG_Tree_0"."Estimator" AS "Estimator" 
FROM "BAG_Tree_0" UNION ALL SELECT "BAG_Tree_1"."KEY" AS "KEY", "BAG_Tree_1"."Estimator" AS "Estimator" 
FROM "BAG_Tree_1" UNION ALL SELECT "BAG_Tree_2"."KEY" AS "KEY", "BAG_Tree_2"."Estimator" AS "Estimator" 
FROM "BAG_Tree_2" UNION ALL SELECT "BAG_Tree_3"."KEY" AS "KEY", "BAG_Tree_3"."Estimator" AS "Estimator" 
FROM "BAG_Tree_3" UNION ALL SELECT "BAG_Tree_4"."KEY" AS "KEY", "BAG_Tree_4"."Estimator" AS "Estimator" 
FROM "BAG_Tree_4" UNION ALL SELECT "BAG_Tree_5"."KEY" AS "KEY", "BAG_Tree_5"."Estimator" AS "Estimator" 
FROM "BAG_Tree_5" UNION ALL SELECT "BAG_Tree_6"."KEY" AS "KEY", "BAG_Tree_6"."Estimator" AS "Estimator" 
FROM "BAG_Tree_6" UNION ALL SELECT "BAG_Tree_7"."KEY" AS "KEY", "BAG_Tree_7"."Estimator" AS "Estimator" 
FROM "BAG_Tree_7" UNION ALL SELECT "BAG_Tree_8"."KEY" AS "KEY", "BAG_Tree_8"."Estimator" AS "Estimator" 
FROM "BAG_Tree_8" UNION ALL SELECT "BAG_Tree_9"."KEY" AS "KEY", "BAG_Tree_9"."Estimator" AS "Estimator" 
FROM "BAG_Tree_9") AS ensemble_score_union), 
"BAG_AVG_Scores" AS 
(SELECT "T"."KEY" AS "KEY", "T"."Estimator" AS "Estimator" 
FROM (SELECT "Score_Union_CTE"."KEY" AS "KEY", avg("Score_Union_CTE"."Estimator") AS "Estimator" 
FROM "Score_Union_CTE" GROUP BY "Score_Union_CTE"."KEY") AS "T")
 SELECT "BAG_AVG_Scores"."KEY" AS "KEY", "BAG_AVG_Scores"."Estimator" AS "Estimator" 
FROM "BAG_AVG_Scores"