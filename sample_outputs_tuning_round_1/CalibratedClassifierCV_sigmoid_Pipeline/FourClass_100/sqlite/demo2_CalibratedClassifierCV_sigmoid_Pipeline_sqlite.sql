-- This SQL code was generated by sklearn2sql (development version).
-- Copyright 2017

WITH "ADS_imp_1_OUT" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_0" IS NULL) THEN 0.0241253554691 ELSE "ADS"."Feature_0" END AS impter_2, CASE WHEN ("ADS"."Feature_1" IS NULL) THEN 0.0731585231354 ELSE "ADS"."Feature_1" END AS impter_3, CASE WHEN ("ADS"."Feature_2" IS NULL) THEN 0.0656151188467 ELSE "ADS"."Feature_2" END AS impter_4, CASE WHEN ("ADS"."Feature_3" IS NULL) THEN -0.060274265487 ELSE "ADS"."Feature_3" END AS impter_5, CASE WHEN ("ADS"."Feature_4" IS NULL) THEN 0.0241241516761 ELSE "ADS"."Feature_4" END AS impter_6, CASE WHEN ("ADS"."Feature_5" IS NULL) THEN -0.0805607903745 ELSE "ADS"."Feature_5" END AS impter_7, CASE WHEN ("ADS"."Feature_6" IS NULL) THEN 0.0546691341374 ELSE "ADS"."Feature_6" END AS impter_8, CASE WHEN ("ADS"."Feature_7" IS NULL) THEN 0.0356904254202 ELSE "ADS"."Feature_7" END AS impter_9, CASE WHEN ("ADS"."Feature_8" IS NULL) THEN 0.398073780645 ELSE "ADS"."Feature_8" END AS impter_10, CASE WHEN ("ADS"."Feature_9" IS NULL) THEN 0.00443811715697 ELSE "ADS"."Feature_9" END AS impter_11, CASE WHEN ("ADS"."Feature_10" IS NULL) THEN -0.443725535167 ELSE "ADS"."Feature_10" END AS impter_12, CASE WHEN ("ADS"."Feature_11" IS NULL) THEN -1.14175763955 ELSE "ADS"."Feature_11" END AS impter_13, CASE WHEN ("ADS"."Feature_12" IS NULL) THEN -0.000351279422738 ELSE "ADS"."Feature_12" END AS impter_14, CASE WHEN ("ADS"."Feature_13" IS NULL) THEN -0.0217557453104 ELSE "ADS"."Feature_13" END AS impter_15, CASE WHEN ("ADS"."Feature_14" IS NULL) THEN -0.418785941485 ELSE "ADS"."Feature_14" END AS impter_16, CASE WHEN ("ADS"."Feature_15" IS NULL) THEN -0.388520492412 ELSE "ADS"."Feature_15" END AS impter_17, CASE WHEN ("ADS"."Feature_16" IS NULL) THEN 0.715758735661 ELSE "ADS"."Feature_16" END AS impter_18, CASE WHEN ("ADS"."Feature_17" IS NULL) THEN -0.0795493283667 ELSE "ADS"."Feature_17" END AS impter_19, CASE WHEN ("ADS"."Feature_18" IS NULL) THEN -0.00785601276878 ELSE "ADS"."Feature_18" END AS impter_20, CASE WHEN ("ADS"."Feature_19" IS NULL) THEN -0.417552185155 ELSE "ADS"."Feature_19" END AS impter_21, CASE WHEN ("ADS"."Feature_20" IS NULL) THEN -0.0737708868806 ELSE "ADS"."Feature_20" END AS impter_22, CASE WHEN ("ADS"."Feature_21" IS NULL) THEN 0.723750747697 ELSE "ADS"."Feature_21" END AS impter_23, CASE WHEN ("ADS"."Feature_22" IS NULL) THEN 0.445796343662 ELSE "ADS"."Feature_22" END AS impter_24, CASE WHEN ("ADS"."Feature_23" IS NULL) THEN -0.00712963415923 ELSE "ADS"."Feature_23" END AS impter_25, CASE WHEN ("ADS"."Feature_24" IS NULL) THEN -0.178546928165 ELSE "ADS"."Feature_24" END AS impter_26, CASE WHEN ("ADS"."Feature_25" IS NULL) THEN -0.155306965851 ELSE "ADS"."Feature_25" END AS impter_27, CASE WHEN ("ADS"."Feature_26" IS NULL) THEN 0.0107369826892 ELSE "ADS"."Feature_26" END AS impter_28, CASE WHEN ("ADS"."Feature_27" IS NULL) THEN 0.0162376825353 ELSE "ADS"."Feature_27" END AS impter_29, CASE WHEN ("ADS"."Feature_28" IS NULL) THEN -0.557885369114 ELSE "ADS"."Feature_28" END AS impter_30, CASE WHEN ("ADS"."Feature_29" IS NULL) THEN 0.210427129437 ELSE "ADS"."Feature_29" END AS impter_31, CASE WHEN ("ADS"."Feature_30" IS NULL) THEN -0.0694409698488 ELSE "ADS"."Feature_30" END AS impter_32, CASE WHEN ("ADS"."Feature_31" IS NULL) THEN -0.366370179001 ELSE "ADS"."Feature_31" END AS impter_33, CASE WHEN ("ADS"."Feature_32" IS NULL) THEN 0.689962943352 ELSE "ADS"."Feature_32" END AS impter_34, CASE WHEN ("ADS"."Feature_33" IS NULL) THEN 0.0075187550481 ELSE "ADS"."Feature_33" END AS impter_35, CASE WHEN ("ADS"."Feature_34" IS NULL) THEN 0.00170443274151 ELSE "ADS"."Feature_34" END AS impter_36, CASE WHEN ("ADS"."Feature_35" IS NULL) THEN -0.0410200753827 ELSE "ADS"."Feature_35" END AS impter_37, CASE WHEN ("ADS"."Feature_36" IS NULL) THEN 0.077421736293 ELSE "ADS"."Feature_36" END AS impter_38, CASE WHEN ("ADS"."Feature_37" IS NULL) THEN -0.774202462889 ELSE "ADS"."Feature_37" END AS impter_39, CASE WHEN ("ADS"."Feature_38" IS NULL) THEN -0.127067325041 ELSE "ADS"."Feature_38" END AS impter_40, CASE WHEN ("ADS"."Feature_39" IS NULL) THEN -0.0143577050943 ELSE "ADS"."Feature_39" END AS impter_41, CASE WHEN ("ADS"."Feature_40" IS NULL) THEN 0.162000447167 ELSE "ADS"."Feature_40" END AS impter_42, CASE WHEN ("ADS"."Feature_41" IS NULL) THEN -0.0367137780503 ELSE "ADS"."Feature_41" END AS impter_43, CASE WHEN ("ADS"."Feature_42" IS NULL) THEN -0.0913161477213 ELSE "ADS"."Feature_42" END AS impter_44, CASE WHEN ("ADS"."Feature_43" IS NULL) THEN -0.0411585425714 ELSE "ADS"."Feature_43" END AS impter_45, CASE WHEN ("ADS"."Feature_44" IS NULL) THEN 0.104065600096 ELSE "ADS"."Feature_44" END AS impter_46, CASE WHEN ("ADS"."Feature_45" IS NULL) THEN -0.837997371409 ELSE "ADS"."Feature_45" END AS impter_47, CASE WHEN ("ADS"."Feature_46" IS NULL) THEN -0.0431648144186 ELSE "ADS"."Feature_46" END AS impter_48, CASE WHEN ("ADS"."Feature_47" IS NULL) THEN 0.132754360224 ELSE "ADS"."Feature_47" END AS impter_49, CASE WHEN ("ADS"."Feature_48" IS NULL) THEN -0.30684678275 ELSE "ADS"."Feature_48" END AS impter_50, CASE WHEN ("ADS"."Feature_49" IS NULL) THEN 0.0133053336367 ELSE "ADS"."Feature_49" END AS impter_51, CASE WHEN ("ADS"."Feature_50" IS NULL) THEN 0.0187886843435 ELSE "ADS"."Feature_50" END AS impter_52, CASE WHEN ("ADS"."Feature_51" IS NULL) THEN -0.381711710098 ELSE "ADS"."Feature_51" END AS impter_53, CASE WHEN ("ADS"."Feature_52" IS NULL) THEN 0.0272870006777 ELSE "ADS"."Feature_52" END AS impter_54, CASE WHEN ("ADS"."Feature_53" IS NULL) THEN 0.0160531743903 ELSE "ADS"."Feature_53" END AS impter_55, CASE WHEN ("ADS"."Feature_54" IS NULL) THEN 0.0166313693337 ELSE "ADS"."Feature_54" END AS impter_56, CASE WHEN ("ADS"."Feature_55" IS NULL) THEN 0.0659474740004 ELSE "ADS"."Feature_55" END AS impter_57, CASE WHEN ("ADS"."Feature_56" IS NULL) THEN 0.109176405605 ELSE "ADS"."Feature_56" END AS impter_58, CASE WHEN ("ADS"."Feature_57" IS NULL) THEN 0.053494273344 ELSE "ADS"."Feature_57" END AS impter_59, CASE WHEN ("ADS"."Feature_58" IS NULL) THEN -0.129621275915 ELSE "ADS"."Feature_58" END AS impter_60, CASE WHEN ("ADS"."Feature_59" IS NULL) THEN 0.048095009473 ELSE "ADS"."Feature_59" END AS impter_61, CASE WHEN ("ADS"."Feature_60" IS NULL) THEN -0.786432980999 ELSE "ADS"."Feature_60" END AS impter_62, CASE WHEN ("ADS"."Feature_61" IS NULL) THEN -0.240968445671 ELSE "ADS"."Feature_61" END AS impter_63, CASE WHEN ("ADS"."Feature_62" IS NULL) THEN -0.0251510374132 ELSE "ADS"."Feature_62" END AS impter_64, CASE WHEN ("ADS"."Feature_63" IS NULL) THEN 0.0555720005488 ELSE "ADS"."Feature_63" END AS impter_65, CASE WHEN ("ADS"."Feature_64" IS NULL) THEN 0.0429126360392 ELSE "ADS"."Feature_64" END AS impter_66, CASE WHEN ("ADS"."Feature_65" IS NULL) THEN 0.411951753782 ELSE "ADS"."Feature_65" END AS impter_67, CASE WHEN ("ADS"."Feature_66" IS NULL) THEN 0.387445101018 ELSE "ADS"."Feature_66" END AS impter_68, CASE WHEN ("ADS"."Feature_67" IS NULL) THEN -0.134150000708 ELSE "ADS"."Feature_67" END AS impter_69, CASE WHEN ("ADS"."Feature_68" IS NULL) THEN 0.272993479251 ELSE "ADS"."Feature_68" END AS impter_70, CASE WHEN ("ADS"."Feature_69" IS NULL) THEN 0.219000590305 ELSE "ADS"."Feature_69" END AS impter_71, CASE WHEN ("ADS"."Feature_70" IS NULL) THEN -0.341291586005 ELSE "ADS"."Feature_70" END AS impter_72, CASE WHEN ("ADS"."Feature_71" IS NULL) THEN 0.0620869785245 ELSE "ADS"."Feature_71" END AS impter_73, CASE WHEN ("ADS"."Feature_72" IS NULL) THEN 0.0493782704561 ELSE "ADS"."Feature_72" END AS impter_74, CASE WHEN ("ADS"."Feature_73" IS NULL) THEN 0.500277961443 ELSE "ADS"."Feature_73" END AS impter_75, CASE WHEN ("ADS"."Feature_74" IS NULL) THEN 0.0824428607509 ELSE "ADS"."Feature_74" END AS impter_76, CASE WHEN ("ADS"."Feature_75" IS NULL) THEN -0.588424449548 ELSE "ADS"."Feature_75" END AS impter_77, CASE WHEN ("ADS"."Feature_76" IS NULL) THEN -0.401886243811 ELSE "ADS"."Feature_76" END AS impter_78, CASE WHEN ("ADS"."Feature_77" IS NULL) THEN -0.148306420382 ELSE "ADS"."Feature_77" END AS impter_79, CASE WHEN ("ADS"."Feature_78" IS NULL) THEN 0.100142292078 ELSE "ADS"."Feature_78" END AS impter_80, CASE WHEN ("ADS"."Feature_79" IS NULL) THEN 0.449056159305 ELSE "ADS"."Feature_79" END AS impter_81, CASE WHEN ("ADS"."Feature_80" IS NULL) THEN 0.0268701215245 ELSE "ADS"."Feature_80" END AS impter_82, CASE WHEN ("ADS"."Feature_81" IS NULL) THEN 0.0122896409313 ELSE "ADS"."Feature_81" END AS impter_83, CASE WHEN ("ADS"."Feature_82" IS NULL) THEN 0.0300779083865 ELSE "ADS"."Feature_82" END AS impter_84, CASE WHEN ("ADS"."Feature_83" IS NULL) THEN -0.048123323649 ELSE "ADS"."Feature_83" END AS impter_85, CASE WHEN ("ADS"."Feature_84" IS NULL) THEN 0.552163944614 ELSE "ADS"."Feature_84" END AS impter_86, CASE WHEN ("ADS"."Feature_85" IS NULL) THEN 0.0581752005705 ELSE "ADS"."Feature_85" END AS impter_87, CASE WHEN ("ADS"."Feature_86" IS NULL) THEN 0.0860379666041 ELSE "ADS"."Feature_86" END AS impter_88, CASE WHEN ("ADS"."Feature_87" IS NULL) THEN -0.0851688559557 ELSE "ADS"."Feature_87" END AS impter_89, CASE WHEN ("ADS"."Feature_88" IS NULL) THEN -0.0466875018423 ELSE "ADS"."Feature_88" END AS impter_90, CASE WHEN ("ADS"."Feature_89" IS NULL) THEN 0.328231614436 ELSE "ADS"."Feature_89" END AS impter_91, CASE WHEN ("ADS"."Feature_90" IS NULL) THEN 0.629746146646 ELSE "ADS"."Feature_90" END AS impter_92, CASE WHEN ("ADS"."Feature_91" IS NULL) THEN 0.656935558275 ELSE "ADS"."Feature_91" END AS impter_93, CASE WHEN ("ADS"."Feature_92" IS NULL) THEN -0.00741560953099 ELSE "ADS"."Feature_92" END AS impter_94, CASE WHEN ("ADS"."Feature_93" IS NULL) THEN -0.144751879456 ELSE "ADS"."Feature_93" END AS impter_95, CASE WHEN ("ADS"."Feature_94" IS NULL) THEN -0.077892920111 ELSE "ADS"."Feature_94" END AS impter_96, CASE WHEN ("ADS"."Feature_95" IS NULL) THEN -1.68829034444 ELSE "ADS"."Feature_95" END AS impter_97, CASE WHEN ("ADS"."Feature_96" IS NULL) THEN -0.0352423276525 ELSE "ADS"."Feature_96" END AS impter_98, CASE WHEN ("ADS"."Feature_97" IS NULL) THEN -0.0495598436597 ELSE "ADS"."Feature_97" END AS impter_99, CASE WHEN ("ADS"."Feature_98" IS NULL) THEN -0.39524288011 ELSE "ADS"."Feature_98" END AS impter_100, CASE WHEN ("ADS"."Feature_99" IS NULL) THEN 0.0084915686171 ELSE "ADS"."Feature_99" END AS impter_101 
FROM "FourClass_100" AS "ADS"), 
"ADS_sca_2_OUT" AS 
(SELECT "ADS_imp_1_OUT"."KEY" AS "KEY", (CAST("ADS_imp_1_OUT".impter_2 AS FLOAT) - 0.0241253554691) / 1.03282853864 AS scaler_2, (CAST("ADS_imp_1_OUT".impter_3 AS FLOAT) - 0.0731585231354) / 4.43105552406 AS scaler_3, (CAST("ADS_imp_1_OUT".impter_4 AS FLOAT) - 0.0656151188467) / 0.918212931813 AS scaler_4, (CAST("ADS_imp_1_OUT".impter_5 AS FLOAT) - -0.060274265487) / 1.01827766542 AS scaler_5, (CAST("ADS_imp_1_OUT".impter_6 AS FLOAT) - 0.0241241516761) / 1.05707975469 AS scaler_6, (CAST("ADS_imp_1_OUT".impter_7 AS FLOAT) - -0.0805607903745) / 0.992816955962 AS scaler_7, (CAST("ADS_imp_1_OUT".impter_8 AS FLOAT) - 0.0546691341374) / 4.15778412741 AS scaler_8, (CAST("ADS_imp_1_OUT".impter_9 AS FLOAT) - 0.0356904254202) / 1.03424413709 AS scaler_9, (CAST("ADS_imp_1_OUT".impter_10 AS FLOAT) - 0.398073780645) / 3.85983327468 AS scaler_10, (CAST("ADS_imp_1_OUT".impter_11 AS FLOAT) - 0.00443811715697) / 0.970472751873 AS scaler_11, (CAST("ADS_imp_1_OUT".impter_12 AS FLOAT) - -0.443725535167) / 3.95728785029 AS scaler_12, (CAST("ADS_imp_1_OUT".impter_13 AS FLOAT) - -1.14175763955) / 4.25336148489 AS scaler_13, (CAST("ADS_imp_1_OUT".impter_14 AS FLOAT) - -0.000351279422738) / 0.936261724412 AS scaler_14, (CAST("ADS_imp_1_OUT".impter_15 AS FLOAT) - -0.0217557453104) / 1.06443335569 AS scaler_15, (CAST("ADS_imp_1_OUT".impter_16 AS FLOAT) - -0.418785941485) / 4.19586666137 AS scaler_16, (CAST("ADS_imp_1_OUT".impter_17 AS FLOAT) - -0.388520492412) / 4.14904240709 AS scaler_17, (CAST("ADS_imp_1_OUT".impter_18 AS FLOAT) - 0.715758735661) / 4.01730650187 AS scaler_18, (CAST("ADS_imp_1_OUT".impter_19 AS FLOAT) - -0.0795493283667) / 0.956002214569 AS scaler_19, (CAST("ADS_imp_1_OUT".impter_20 AS FLOAT) - -0.00785601276878) / 1.04699733688 AS scaler_20, (CAST("ADS_imp_1_OUT".impter_21 AS FLOAT) - -0.417552185155) / 4.24440012252 AS scaler_21, (CAST("ADS_imp_1_OUT".impter_22 AS FLOAT) - -0.0737708868806) / 3.89289210353 AS scaler_22, (CAST("ADS_imp_1_OUT".impter_23 AS FLOAT) - 0.723750747697) / 4.36319510146 AS scaler_23, (CAST("ADS_imp_1_OUT".impter_24 AS FLOAT) - 0.445796343662) / 3.85897797782 AS scaler_24, (CAST("ADS_imp_1_OUT".impter_25 AS FLOAT) - -0.00712963415923) / 0.927245880907 AS scaler_25, (CAST("ADS_imp_1_OUT".impter_26 AS FLOAT) - -0.178546928165) / 3.79113384044 AS scaler_26, (CAST("ADS_imp_1_OUT".impter_27 AS FLOAT) - -0.155306965851) / 0.884257471731 AS scaler_27, (CAST("ADS_imp_1_OUT".impter_28 AS FLOAT) - 0.0107369826892) / 0.978928512453 AS scaler_28, (CAST("ADS_imp_1_OUT".impter_29 AS FLOAT) - 0.0162376825353) / 3.94505015345 AS scaler_29, (CAST("ADS_imp_1_OUT".impter_30 AS FLOAT) - -0.557885369114) / 4.53842542212 AS scaler_30, (CAST("ADS_imp_1_OUT".impter_31 AS FLOAT) - 0.210427129437) / 4.01780673767 AS scaler_31, (CAST("ADS_imp_1_OUT".impter_32 AS FLOAT) - -0.0694409698488) / 1.02159673274 AS scaler_32, (CAST("ADS_imp_1_OUT".impter_33 AS FLOAT) - -0.366370179001) / 4.21613747579 AS scaler_33, (CAST("ADS_imp_1_OUT".impter_34 AS FLOAT) - 0.689962943352) / 4.08775484436 AS scaler_34, (CAST("ADS_imp_1_OUT".impter_35 AS FLOAT) - 0.0075187550481) / 4.10264550584 AS scaler_35, (CAST("ADS_imp_1_OUT".impter_36 AS FLOAT) - 0.00170443274151) / 1.03403974658 AS scaler_36, (CAST("ADS_imp_1_OUT".impter_37 AS FLOAT) - -0.0410200753827) / 0.955617444445 AS scaler_37, (CAST("ADS_imp_1_OUT".impter_38 AS FLOAT) - 0.077421736293) / 1.03628980279 AS scaler_38, (CAST("ADS_imp_1_OUT".impter_39 AS FLOAT) - -0.774202462889) / 4.44288548314 AS scaler_39, (CAST("ADS_imp_1_OUT".impter_40 AS FLOAT) - -0.127067325041) / 1.09299297672 AS scaler_40, (CAST("ADS_imp_1_OUT".impter_41 AS FLOAT) - -0.0143577050943) / 1.02222667694 AS scaler_41, (CAST("ADS_imp_1_OUT".impter_42 AS FLOAT) - 0.162000447167) / 3.93657537059 AS scaler_42, (CAST("ADS_imp_1_OUT".impter_43 AS FLOAT) - -0.0367137780503) / 0.990136833378 AS scaler_43, (CAST("ADS_imp_1_OUT".impter_44 AS FLOAT) - -0.0913161477213) / 4.07044889314 AS scaler_44, (CAST("ADS_imp_1_OUT".impter_45 AS FLOAT) - -0.0411585425714) / 1.01509002613 AS scaler_45, (CAST("ADS_imp_1_OUT".impter_46 AS FLOAT) - 0.104065600096) / 0.959004476253 AS scaler_46, (CAST("ADS_imp_1_OUT".impter_47 AS FLOAT) - -0.837997371409) / 4.32205840252 AS scaler_47, (CAST("ADS_imp_1_OUT".impter_48 AS FLOAT) - -0.0431648144186) / 1.03002457024 AS scaler_48, (CAST("ADS_imp_1_OUT".impter_49 AS FLOAT) - 0.132754360224) / 4.11526042838 AS scaler_49, (CAST("ADS_imp_1_OUT".impter_50 AS FLOAT) - -0.30684678275) / 4.37704930897 AS scaler_50, (CAST("ADS_imp_1_OUT".impter_51 AS FLOAT) - 0.0133053336367) / 1.08711831268 AS scaler_51, (CAST("ADS_imp_1_OUT".impter_52 AS FLOAT) - 0.0187886843435) / 1.01488269425 AS scaler_52, (CAST("ADS_imp_1_OUT".impter_53 AS FLOAT) - -0.381711710098) / 4.16999716381 AS scaler_53, (CAST("ADS_imp_1_OUT".impter_54 AS FLOAT) - 0.0272870006777) / 1.00028305577 AS scaler_54, (CAST("ADS_imp_1_OUT".impter_55 AS FLOAT) - 0.0160531743903) / 0.966085106697 AS scaler_55, (CAST("ADS_imp_1_OUT".impter_56 AS FLOAT) - 0.0166313693337) / 3.83403092795 AS scaler_56, (CAST("ADS_imp_1_OUT".impter_57 AS FLOAT) - 0.0659474740004) / 1.07414640041 AS scaler_57, (CAST("ADS_imp_1_OUT".impter_58 AS FLOAT) - 0.109176405605) / 0.993940234664 AS scaler_58, (CAST("ADS_imp_1_OUT".impter_59 AS FLOAT) - 0.053494273344) / 4.30935472359 AS scaler_59, (CAST("ADS_imp_1_OUT".impter_60 AS FLOAT) - -0.129621275915) / 0.968914539094 AS scaler_60, (CAST("ADS_imp_1_OUT".impter_61 AS FLOAT) - 0.048095009473) / 0.93160916471 AS scaler_61, (CAST("ADS_imp_1_OUT".impter_62 AS FLOAT) - -0.786432980999) / 4.358331676 AS scaler_62, (CAST("ADS_imp_1_OUT".impter_63 AS FLOAT) - -0.240968445671) / 4.06811959978 AS scaler_63, (CAST("ADS_imp_1_OUT".impter_64 AS FLOAT) - -0.0251510374132) / 1.02343863388 AS scaler_64, (CAST("ADS_imp_1_OUT".impter_65 AS FLOAT) - 0.0555720005488) / 0.980451975441 AS scaler_65, (CAST("ADS_imp_1_OUT".impter_66 AS FLOAT) - 0.0429126360392) / 0.976750617226 AS scaler_66, (CAST("ADS_imp_1_OUT".impter_67 AS FLOAT) - 0.411951753782) / 4.22768305155 AS scaler_67, (CAST("ADS_imp_1_OUT".impter_68 AS FLOAT) - 0.387445101018) / 3.94251493961 AS scaler_68, (CAST("ADS_imp_1_OUT".impter_69 AS FLOAT) - -0.134150000708) / 4.13934715436 AS scaler_69, (CAST("ADS_imp_1_OUT".impter_70 AS FLOAT) - 0.272993479251) / 3.89102689404 AS scaler_70, (CAST("ADS_imp_1_OUT".impter_71 AS FLOAT) - 0.219000590305) / 4.14631844533 AS scaler_71, (CAST("ADS_imp_1_OUT".impter_72 AS FLOAT) - -0.341291586005) / 3.94710919713 AS scaler_72, (CAST("ADS_imp_1_OUT".impter_73 AS FLOAT) - 0.0620869785245) / 1.04313992117 AS scaler_73, (CAST("ADS_imp_1_OUT".impter_74 AS FLOAT) - 0.0493782704561) / 0.949594131467 AS scaler_74, (CAST("ADS_imp_1_OUT".impter_75 AS FLOAT) - 0.500277961443) / 4.01830102951 AS scaler_75, (CAST("ADS_imp_1_OUT".impter_76 AS FLOAT) - 0.0824428607509) / 1.02167420668 AS scaler_76, (CAST("ADS_imp_1_OUT".impter_77 AS FLOAT) - -0.588424449548) / 4.37278337405 AS scaler_77, (CAST("ADS_imp_1_OUT".impter_78 AS FLOAT) - -0.401886243811) / 4.16368707403 AS scaler_78, (CAST("ADS_imp_1_OUT".impter_79 AS FLOAT) - -0.148306420382) / 4.17227699679 AS scaler_79, (CAST("ADS_imp_1_OUT".impter_80 AS FLOAT) - 0.100142292078) / 4.27142071805 AS scaler_80, (CAST("ADS_imp_1_OUT".impter_81 AS FLOAT) - 0.449056159305) / 4.17279389535 AS scaler_81, (CAST("ADS_imp_1_OUT".impter_82 AS FLOAT) - 0.0268701215245) / 0.988755200354 AS scaler_82, (CAST("ADS_imp_1_OUT".impter_83 AS FLOAT) - 0.0122896409313) / 0.971742436477 AS scaler_83, (CAST("ADS_imp_1_OUT".impter_84 AS FLOAT) - 0.0300779083865) / 0.975337433781 AS scaler_84, (CAST("ADS_imp_1_OUT".impter_85 AS FLOAT) - -0.048123323649) / 1.03060950969 AS scaler_85, (CAST("ADS_imp_1_OUT".impter_86 AS FLOAT) - 0.552163944614) / 4.37809619203 AS scaler_86, (CAST("ADS_imp_1_OUT".impter_87 AS FLOAT) - 0.0581752005705) / 1.03316025107 AS scaler_87, (CAST("ADS_imp_1_OUT".impter_88 AS FLOAT) - 0.0860379666041) / 4.08894745404 AS scaler_88, (CAST("ADS_imp_1_OUT".impter_89 AS FLOAT) - -0.0851688559557) / 0.9804772587 AS scaler_89, (CAST("ADS_imp_1_OUT".impter_90 AS FLOAT) - -0.0466875018423) / 4.60334116737 AS scaler_90, (CAST("ADS_imp_1_OUT".impter_91 AS FLOAT) - 0.328231614436) / 4.1565939981 AS scaler_91, (CAST("ADS_imp_1_OUT".impter_92 AS FLOAT) - 0.629746146646) / 3.79171156259 AS scaler_92, (CAST("ADS_imp_1_OUT".impter_93 AS FLOAT) - 0.656935558275) / 3.92762483475 AS scaler_93, (CAST("ADS_imp_1_OUT".impter_94 AS FLOAT) - -0.00741560953099) / 1.02207128317 AS scaler_94, (CAST("ADS_imp_1_OUT".impter_95 AS FLOAT) - -0.144751879456) / 4.49710986082 AS scaler_95, (CAST("ADS_imp_1_OUT".impter_96 AS FLOAT) - -0.077892920111) / 4.28809155601 AS scaler_96, (CAST("ADS_imp_1_OUT".impter_97 AS FLOAT) - -1.68829034444) / 15.2415972709 AS scaler_97, (CAST("ADS_imp_1_OUT".impter_98 AS FLOAT) - -0.0352423276525) / 1.04455771376 AS scaler_98, (CAST("ADS_imp_1_OUT".impter_99 AS FLOAT) - -0.0495598436597) / 0.9589534414 AS scaler_99, (CAST("ADS_imp_1_OUT".impter_100 AS FLOAT) - -0.39524288011) / 14.6023870294 AS scaler_100, (CAST("ADS_imp_1_OUT".impter_101 AS FLOAT) - 0.0084915686171) / 1.10724211748 AS scaler_101 
FROM "ADS_imp_1_OUT"), 
"DT_node_lookup" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_66 <= -1.22053861618042) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_75 <= 0.24130263924598694) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_15 <= 0.8253762722015381) THEN 3 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_21 <= -0.10999888181686401) THEN 5 ELSE 6 END END ELSE 7 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_69 <= -0.4578830301761627) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_42 <= -1.5525486469268799) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_63 <= -0.667513906955719) THEN 11 ELSE 12 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_35 <= -1.0111950635910034) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_37 <= -1.4555590152740479) THEN 15 ELSE 16 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_88 <= 0.3341370224952698) THEN 18 ELSE 19 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_75 <= -1.5061156749725342) THEN 21 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_48 <= 1.4831047058105469) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_53 <= 0.9777626395225525) THEN 24 ELSE 25 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_7 <= -0.6157965660095215) THEN 27 ELSE 28 END END END END END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Proba_0" AS "Proba_0", "Values"."LogProba_0" AS "LogProba_0", "Values"."Proba_1" AS "Proba_1", "Values"."LogProba_1" AS "LogProba_1", "Values"."Proba_2" AS "Proba_2", "Values"."LogProba_2" AS "LogProba_2", "Values"."Proba_3" AS "Proba_3", "Values"."LogProba_3" AS "LogProba_3", "Values"."Decision" AS "Decision", "Values"."DecisionProba" AS "DecisionProba" 
FROM (SELECT 0 AS node_id, 'scaler_66' AS feature, -1.22053861618042 AS threshold, 185 AS count, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.24324324324324326 AS "Proba_0", -1.41369333531 AS "LogProba_0", 0.24324324324324326 AS "Proba_1", -1.41369333531 AS "LogProba_1", 0.2594594594594595 AS "Proba_2", -1.34915481417 AS "LogProba_2", 0.25405405405405407 AS "Proba_3", -1.37020822337 AS "LogProba_3", 2 AS "Decision", 0.259459459459 AS "DecisionProba" UNION ALL SELECT 1 AS node_id, 'scaler_75' AS feature, 0.24130263924598694 AS threshold, 17 AS count, 1 AS depth, 0 AS parent_id, 0.23529411764705882 AS "Proba_0", -1.44691898294 AS "LogProba_0", 0.7058823529411765 AS "Proba_1", -0.348306694268 AS "LogProba_1", 0.0 AS "Proba_2", -1.79769313486231e+308 AS "LogProba_2", 0.058823529411764705 AS "Proba_3", -2.83321334406 AS "LogProba_3", 1 AS "Decision", 0.705882352941 AS "DecisionProba" UNION ALL SELECT 2 AS node_id, 'scaler_15' AS feature, 0.8253762722015381 AS threshold, 7 AS count, 2 AS depth, 1 AS parent_id, 0.5714285714285714 AS "Proba_0", -0.559615787935 AS "LogProba_0", 0.2857142857142857 AS "Proba_1", -1.2527629685 AS "LogProba_1", 0.0 AS "Proba_2", -1.79769313486231e+308 AS "LogProba_2", 0.14285714285714285 AS "Proba_3", -1.94591014906 AS "LogProba_3", 0 AS "Decision", 0.571428571429 AS "DecisionProba" UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS count, 3 AS depth, 2 AS parent_id, 1.0 AS "Proba_0", 0.0 AS "LogProba_0", 0.0 AS "Proba_1", -1.79769313486231e+308 AS "LogProba_1", 0.0 AS "Proba_2", -1.79769313486231e+308 AS "LogProba_2", 0.0 AS "Proba_3", -1.79769313486231e+308 AS "LogProba_3", 0 AS "Decision", 1.0 AS "DecisionProba" UNION ALL SELECT 4 AS node_id, 'scaler_21' AS feature, -0.10999888181686401 AS threshold, 3 AS count, 3 AS depth, 2 AS parent_id, 0.0 AS "Proba_0", -1.79769313486231e+308 AS "LogProba_0", 0.6666666666666666 AS "Proba_1", -0.405465108108 AS "LogProba_1", 0.0 AS "Proba_2", -1.79769313486231e+308 AS "LogProba_2", 0.3333333333333333 AS "Proba_3", -1.09861228867 AS "LogProba_3", 1 AS "Decision", 0.666666666667 AS "DecisionProba" UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 4 AS depth, 4 AS parent_id, 0.0 AS "Proba_0", -1.79769313486231e+308 AS "LogProba_0", 1.0 AS "Proba_1", 0.0 AS "LogProba_1", 0.0 AS "Proba_2", -1.79769313486231e+308 AS "LogProba_2", 0.0 AS "Proba_3", -1.79769313486231e+308 AS "LogProba_3", 1 AS "Decision", 1.0 AS "DecisionProba" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 4 AS parent_id, 0.0 AS "Proba_0", -1.79769313486231e+308 AS "LogProba_0", 0.0 AS "Proba_1", -1.79769313486231e+308 AS "LogProba_1", 0.0 AS "Proba_2", -1.79769313486231e+308 AS "LogProba_2", 1.0 AS "Proba_3", 0.0 AS "LogProba_3", 3 AS "Decision", 1.0 AS "DecisionProba" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 10 AS count, 2 AS depth, 1 AS parent_id, 0.0 AS "Proba_0", -1.79769313486231e+308 AS "LogProba_0", 1.0 AS "Proba_1", 0.0 AS "LogProba_1", 0.0 AS "Proba_2", -1.79769313486231e+308 AS "LogProba_2", 0.0 AS "Proba_3", -1.79769313486231e+308 AS "LogProba_3", 1 AS "Decision", 1.0 AS "DecisionProba" UNION ALL SELECT 8 AS node_id, 'scaler_69' AS feature, -0.4578830301761627 AS threshold, 168 AS count, 1 AS depth, 0 AS parent_id, 0.24404761904761904 AS "Proba_0", -1.4103919127 AS "LogProba_0", 0.19642857142857142 AS "Proba_1", -1.62745641794 AS "LogProba_1", 0.2857142857142857 AS "Proba_2", -1.2527629685 AS "LogProba_2", 0.27380952380952384 AS "Proba_3", -1.29532258291 AS "LogProba_3", 2 AS "Decision", 0.285714285714 AS "DecisionProba" UNION ALL SELECT 9 AS node_id, 'scaler_42' AS feature, -1.5525486469268799 AS threshold, 56 AS count, 2 AS depth, 8 AS parent_id, 0.25 AS "Proba_0", -1.38629436112 AS "LogProba_0", 0.17857142857142858 AS "Proba_1", -1.72276659774 AS "LogProba_1", 0.10714285714285714 AS "Proba_2", -2.23359222151 AS "LogProba_2", 0.4642857142857143 AS "Proba_3", -0.767255152714 AS "LogProba_3", 3 AS "Decision", 0.464285714286 AS "DecisionProba" UNION ALL SELECT 10 AS node_id, 'scaler_63' AS feature, -0.667513906955719 AS threshold, 6 AS count, 3 AS depth, 9 AS parent_id, 0.0 AS "Proba_0", -1.79769313486231e+308 AS "LogProba_0", 0.8333333333333334 AS "Proba_1", -0.182321556794 AS "LogProba_1", 0.16666666666666666 AS "Proba_2", -1.79175946923 AS "LogProba_2", 0.0 AS "Proba_3", -1.79769313486231e+308 AS "LogProba_3", 1 AS "Decision", 0.833333333333 AS "DecisionProba" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 10 AS parent_id, 0.0 AS "Proba_0", -1.79769313486231e+308 AS "LogProba_0", 0.0 AS "Proba_1", -1.79769313486231e+308 AS "LogProba_1", 1.0 AS "Proba_2", 0.0 AS "LogProba_2", 0.0 AS "Proba_3", -1.79769313486231e+308 AS "LogProba_3", 2 AS "Decision", 1.0 AS "DecisionProba" UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS count, 4 AS depth, 10 AS parent_id, 0.0 AS "Proba_0", -1.79769313486231e+308 AS "LogProba_0", 1.0 AS "Proba_1", 0.0 AS "LogProba_1", 0.0 AS "Proba_2", -1.79769313486231e+308 AS "LogProba_2", 0.0 AS "Proba_3", -1.79769313486231e+308 AS "LogProba_3", 1 AS "Decision", 1.0 AS "DecisionProba" UNION ALL SELECT 13 AS node_id, 'scaler_35' AS feature, -1.0111950635910034 AS threshold, 50 AS count, 3 AS depth, 9 AS parent_id, 0.28 AS "Proba_0", -1.27296567581 AS "LogProba_0", 0.1 AS "Proba_1", -2.30258509299 AS "LogProba_1", 0.1 AS "Proba_2", -2.30258509299 AS "LogProba_2", 0.52 AS "Proba_3", -0.653926467407 AS "LogProba_3", 3 AS "Decision", 0.52 AS "DecisionProba" UNION ALL SELECT 14 AS node_id, 'scaler_37' AS feature, -1.4555590152740479 AS threshold, 9 AS count, 4 AS depth, 13 AS parent_id, 0.7777777777777778 AS "Proba_0", -0.251314428281 AS "LogProba_0", 0.1111111111111111 AS "Proba_1", -2.19722457734 AS "LogProba_1", 0.0 AS "Proba_2", -1.79769313486231e+308 AS "LogProba_2", 0.1111111111111111 AS "Proba_3", -2.19722457734 AS "LogProba_3", 0 AS "Decision", 0.777777777778 AS "DecisionProba" UNION ALL SELECT 15 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 5 AS depth, 14 AS parent_id, 0.0 AS "Proba_0", -1.79769313486231e+308 AS "LogProba_0", 0.5 AS "Proba_1", -0.69314718056 AS "LogProba_1", 0.0 AS "Proba_2", -1.79769313486231e+308 AS "LogProba_2", 0.5 AS "Proba_3", -0.69314718056 AS "LogProba_3", 1 AS "Decision", 0.5 AS "DecisionProba" UNION ALL SELECT 16 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 7 AS count, 5 AS depth, 14 AS parent_id, 1.0 AS "Proba_0", 0.0 AS "LogProba_0", 0.0 AS "Proba_1", -1.79769313486231e+308 AS "LogProba_1", 0.0 AS "Proba_2", -1.79769313486231e+308 AS "LogProba_2", 0.0 AS "Proba_3", -1.79769313486231e+308 AS "LogProba_3", 0 AS "Decision", 1.0 AS "DecisionProba" UNION ALL SELECT 17 AS node_id, 'scaler_88' AS feature, 0.3341370224952698 AS threshold, 41 AS count, 4 AS depth, 13 AS parent_id, 0.17073170731707318 AS "Proba_0", -1.76766191765 AS "LogProba_0", 0.0975609756097561 AS "Proba_1", -2.32727770558 AS "LogProba_1", 0.12195121951219512 AS "Proba_2", -2.10413415427 AS "LogProba_2", 0.6097560975609756 AS "Proba_3", -0.494696241836 AS "LogProba_3", 3 AS "Decision", 0.609756097561 AS "DecisionProba" UNION ALL SELECT 18 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 21 AS count, 5 AS depth, 17 AS parent_id, 0.2857142857142857 AS "Proba_0", -1.2527629685 AS "LogProba_0", 0.19047619047619047 AS "Proba_1", -1.6582280766 AS "LogProba_1", 0.19047619047619047 AS "Proba_2", -1.6582280766 AS "LogProba_2", 0.3333333333333333 AS "Proba_3", -1.09861228867 AS "LogProba_3", 3 AS "Decision", 0.333333333333 AS "DecisionProba" UNION ALL SELECT 19 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 20 AS count, 5 AS depth, 17 AS parent_id, 0.05 AS "Proba_0", -2.99573227355 AS "LogProba_0", 0.0 AS "Proba_1", -1.79769313486231e+308 AS "LogProba_1", 0.05 AS "Proba_2", -2.99573227355 AS "LogProba_2", 0.9 AS "Proba_3", -0.105360515658 AS "LogProba_3", 3 AS "Decision", 0.9 AS "DecisionProba" UNION ALL SELECT 20 AS node_id, 'scaler_75' AS feature, -1.5061156749725342 AS threshold, 112 AS count, 2 AS depth, 8 AS parent_id, 0.24107142857142858 AS "Proba_0", -1.42266200529 AS "LogProba_0", 0.20535714285714285 AS "Proba_1", -1.58300465537 AS "LogProba_1", 0.375 AS "Proba_2", -0.980829253012 AS "LogProba_2", 0.17857142857142858 AS "Proba_3", -1.72276659774 AS "LogProba_3", 2 AS "Decision", 0.375 AS "DecisionProba" UNION ALL SELECT 21 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 6 AS count, 3 AS depth, 20 AS parent_id, 1.0 AS "Proba_0", 0.0 AS "LogProba_0", 0.0 AS "Proba_1", -1.79769313486231e+308 AS "LogProba_1", 0.0 AS "Proba_2", -1.79769313486231e+308 AS "LogProba_2", 0.0 AS "Proba_3", -1.79769313486231e+308 AS "LogProba_3", 0 AS "Decision", 1.0 AS "DecisionProba" UNION ALL SELECT 22 AS node_id, 'scaler_48' AS feature, 1.4831047058105469 AS threshold, 106 AS count, 3 AS depth, 20 AS parent_id, 0.19811320754716982 AS "Proba_0", -1.61891665639 AS "LogProba_0", 0.2169811320754717 AS "Proba_1", -1.52794487818 AS "LogProba_1", 0.39622641509433965 AS "Proba_2", -0.925769475829 AS "LogProba_2", 0.18867924528301888 AS "Proba_3", -1.66770682056 AS "LogProba_3", 2 AS "Decision", 0.396226415094 AS "DecisionProba" UNION ALL SELECT 23 AS node_id, 'scaler_53' AS feature, 0.9777626395225525 AS threshold, 99 AS count, 4 AS depth, 22 AS parent_id, 0.15151515151515152 AS "Proba_0", -1.88706964903 AS "LogProba_0", 0.23232323232323232 AS "Proba_1", -1.45962563421 AS "LogProba_1", 0.41414141414141414 AS "Proba_2", -0.88154778343 AS "LogProba_2", 0.20202020202020202 AS "Proba_3", -1.59938757658 AS "LogProba_3", 2 AS "Decision", 0.414141414141 AS "DecisionProba" UNION ALL SELECT 24 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 83 AS count, 5 AS depth, 23 AS parent_id, 0.13253012048192772 AS "Proba_0", -2.020945335 AS "LogProba_0", 0.25301204819277107 AS "Proba_1", -1.37431817007 AS "LogProba_1", 0.4819277108433735 AS "Proba_2", -0.729961153683 AS "LogProba_2", 0.13253012048192772 AS "Proba_3", -2.020945335 AS "LogProba_3", 2 AS "Decision", 0.481927710843 AS "DecisionProba" UNION ALL SELECT 25 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 16 AS count, 5 AS depth, 23 AS parent_id, 0.25 AS "Proba_0", -1.38629436112 AS "LogProba_0", 0.125 AS "Proba_1", -2.07944154168 AS "LogProba_1", 0.0625 AS "Proba_2", -2.77258872224 AS "LogProba_2", 0.5625 AS "Proba_3", -0.575364144904 AS "LogProba_3", 3 AS "Decision", 0.5625 AS "DecisionProba" UNION ALL SELECT 26 AS node_id, 'scaler_7' AS feature, -0.6157965660095215 AS threshold, 7 AS count, 4 AS depth, 22 AS parent_id, 0.8571428571428571 AS "Proba_0", -0.154150679827 AS "LogProba_0", 0.0 AS "Proba_1", -1.79769313486231e+308 AS "LogProba_1", 0.14285714285714285 AS "Proba_2", -1.94591014906 AS "LogProba_2", 0.0 AS "Proba_3", -1.79769313486231e+308 AS "LogProba_3", 0 AS "Decision", 0.857142857143 AS "DecisionProba" UNION ALL SELECT 27 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 26 AS parent_id, 0.0 AS "Proba_0", -1.79769313486231e+308 AS "LogProba_0", 0.0 AS "Proba_1", -1.79769313486231e+308 AS "LogProba_1", 1.0 AS "Proba_2", 0.0 AS "LogProba_2", 0.0 AS "Proba_3", -1.79769313486231e+308 AS "LogProba_3", 2 AS "Decision", 1.0 AS "DecisionProba" UNION ALL SELECT 28 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 6 AS count, 5 AS depth, 26 AS parent_id, 1.0 AS "Proba_0", 0.0 AS "LogProba_0", 0.0 AS "Proba_1", -1.79769313486231e+308 AS "LogProba_1", 0.0 AS "Proba_2", -1.79769313486231e+308 AS "LogProba_2", 0.0 AS "Proba_3", -1.79769313486231e+308 AS "LogProba_3", 0 AS "Decision", 1.0 AS "DecisionProba") AS "Values"), 
"DT_Output" AS 
(SELECT "DT_node_lookup"."KEY" AS "KEY", "DT_node_lookup".node_id_2 AS node_id_2, "DT_node_data".node_id AS node_id, "DT_node_data".feature AS feature, "DT_node_data".threshold AS threshold, "DT_node_data".count AS count, "DT_node_data".depth AS depth, "DT_node_data".parent_id AS parent_id, "DT_node_data"."Proba_0" AS "Proba_0", "DT_node_data"."LogProba_0" AS "LogProba_0", "DT_node_data"."Proba_1" AS "Proba_1", "DT_node_data"."LogProba_1" AS "LogProba_1", "DT_node_data"."Proba_2" AS "Proba_2", "DT_node_data"."LogProba_2" AS "LogProba_2", "DT_node_data"."Proba_3" AS "Proba_3", "DT_node_data"."LogProba_3" AS "LogProba_3", "DT_node_data"."Decision" AS "Decision", "DT_node_data"."DecisionProba" AS "DecisionProba" 
FROM "DT_node_lookup" LEFT OUTER JOIN "DT_node_data" ON "DT_node_lookup".node_id_2 = "DT_node_data".node_id), 
calibration_base_estimator_0 AS 
(SELECT "DT_Output"."KEY" AS "KEY", CAST(NULL AS FLOAT) AS "Score_0", CAST(NULL AS FLOAT) AS "Score_1", CAST(NULL AS FLOAT) AS "Score_2", CAST(NULL AS FLOAT) AS "Score_3", "DT_Output"."Proba_0" AS "Proba_0", "DT_Output"."Proba_1" AS "Proba_1", "DT_Output"."Proba_2" AS "Proba_2", "DT_Output"."Proba_3" AS "Proba_3", "DT_Output"."LogProba_0" AS "LogProba_0", "DT_Output"."LogProba_1" AS "LogProba_1", "DT_Output"."LogProba_2" AS "LogProba_2", "DT_Output"."LogProba_3" AS "LogProba_3", CAST(NULL AS INTEGER) AS "Decision", CAST(NULL AS FLOAT) AS "DecisionProba", coalesce(CAST(NULL AS FLOAT), "DT_Output"."Proba_0") AS "ScoreOrProba_0", coalesce(CAST(NULL AS FLOAT), "DT_Output"."Proba_1") AS "ScoreOrProba_1", coalesce(CAST(NULL AS FLOAT), "DT_Output"."Proba_2") AS "ScoreOrProba_2", coalesce(CAST(NULL AS FLOAT), "DT_Output"."Proba_3") AS "ScoreOrProba_3" 
FROM "DT_Output"), 
sigmoid_calibration_0 AS 
(SELECT calibration_base_estimator_0."KEY" AS "KEY", 1.0 / (1.0 + exp(0.195156843389 * calibration_base_estimator_0."ScoreOrProba_0" + 1.0498141627)) AS "Proba_0", 1.0 / (1.0 + exp(-0.534725620767 * calibration_base_estimator_0."ScoreOrProba_1" + 1.24973626404)) AS "Proba_1", 1.0 / (1.0 + exp(1.20882829893 * calibration_base_estimator_0."ScoreOrProba_2" + 0.832385684242)) AS "Proba_2", 1.0 / (1.0 + exp(-0.770813690299 * calibration_base_estimator_0."ScoreOrProba_3" + 1.31837551778)) AS "Proba_3" 
FROM calibration_base_estimator_0), 
"Normalized_Probas" AS 
(SELECT sigmoid_calibration_0."KEY" AS "KEY", sigmoid_calibration_0."Proba_0" / (sigmoid_calibration_0."Proba_0" + sigmoid_calibration_0."Proba_1" + sigmoid_calibration_0."Proba_2" + sigmoid_calibration_0."Proba_3") AS "Proba_0", sigmoid_calibration_0."Proba_1" / (sigmoid_calibration_0."Proba_0" + sigmoid_calibration_0."Proba_1" + sigmoid_calibration_0."Proba_2" + sigmoid_calibration_0."Proba_3") AS "Proba_1", sigmoid_calibration_0."Proba_2" / (sigmoid_calibration_0."Proba_0" + sigmoid_calibration_0."Proba_1" + sigmoid_calibration_0."Proba_2" + sigmoid_calibration_0."Proba_3") AS "Proba_2", sigmoid_calibration_0."Proba_3" / (sigmoid_calibration_0."Proba_0" + sigmoid_calibration_0."Proba_1" + sigmoid_calibration_0."Proba_2" + sigmoid_calibration_0."Proba_3") AS "Proba_3" 
FROM sigmoid_calibration_0), 
"DT_node_lookup_1" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_18 <= -0.23266582190990448) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_50 <= 0.4297189712524414) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_4 <= -0.824621319770813) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_5 <= -0.3591880798339844) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_13 <= 0.20128923654556274) THEN 5 ELSE 6 END ELSE 7 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_6 <= 1.4529424905776978) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_79 <= -0.9629826545715332) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_84 <= 0.41806188225746155) THEN 13 ELSE 14 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_71 <= -0.14489154517650604) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_61 <= 0.7387732267379761) THEN 17 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_8 <= -0.2838820815086365) THEN 19 ELSE 20 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_68 <= -0.14360342919826508) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_3 <= 0.43674737215042114) THEN 23 ELSE 24 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_48 <= 0.7821073532104492) THEN 26 ELSE 27 END END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_16 <= 0.03960008919239044) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_42 <= -0.829920768737793) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_99 <= 0.31720250844955444) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_58 <= -0.34643039107322693) THEN 32 ELSE 33 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_17 <= -1.7313835620880127) THEN 35 ELSE 36 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_33 <= -1.0623821020126343) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_30 <= -0.3437742292881012) THEN 39 ELSE 40 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_27 <= 1.1278783082962036) THEN 42 ELSE 43 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_59 <= 0.09820643067359924) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_44 <= -0.12433278560638428) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_14 <= 0.8770020008087158) THEN 47 ELSE 48 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_5 <= 1.128123164176941) THEN 50 ELSE 51 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_41 <= 0.0428941436111927) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_15 <= -0.26037007570266724) THEN 54 ELSE 55 END ELSE 56 END END END END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_1" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Proba_0" AS "Proba_0", "Values"."LogProba_0" AS "LogProba_0", "Values"."Proba_1" AS "Proba_1", "Values"."LogProba_1" AS "LogProba_1", "Values"."Proba_2" AS "Proba_2", "Values"."LogProba_2" AS "LogProba_2", "Values"."Proba_3" AS "Proba_3", "Values"."LogProba_3" AS "LogProba_3", "Values"."Decision" AS "Decision", "Values"."DecisionProba" AS "DecisionProba" 
FROM (SELECT 0 AS node_id, 'scaler_18' AS feature, -0.23266582190990448 AS threshold, 188 AS count, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.24468085106382978 AS "Proba_0", -1.40780056634 AS "LogProba_0", 0.24468085106382978 AS "Proba_1", -1.40780056634 AS "LogProba_1", 0.26063829787234044 AS "Proba_2", -1.34462166472 AS "LogProba_2", 0.25 AS "Proba_3", -1.38629436112 AS "LogProba_3", 2 AS "Decision", 0.260638297872 AS "DecisionProba" UNION ALL SELECT 1 AS node_id, 'scaler_50' AS feature, 0.4297189712524414 AS threshold, 72 AS count, 1 AS depth, 0 AS parent_id, 0.16666666666666666 AS "Proba_0", -1.79175946923 AS "LogProba_0", 0.1388888888888889 AS "Proba_1", -1.97408102602 AS "LogProba_1", 0.4583333333333333 AS "Proba_2", -0.78015855755 AS "LogProba_2", 0.2361111111111111 AS "Proba_3", -1.44345277496 AS "LogProba_3", 2 AS "Decision", 0.458333333333 AS "DecisionProba" UNION ALL SELECT 2 AS node_id, 'scaler_4' AS feature, -0.824621319770813 AS threshold, 48 AS count, 2 AS depth, 1 AS parent_id, 0.08333333333333333 AS "Proba_0", -2.48490664979 AS "LogProba_0", 0.041666666666666664 AS "Proba_1", -3.17805383035 AS "LogProba_1", 0.5833333333333334 AS "Proba_2", -0.538996500733 AS "LogProba_2", 0.2916666666666667 AS "Proba_3", -1.23214368129 AS "LogProba_3", 2 AS "Decision", 0.583333333333 AS "DecisionProba" UNION ALL SELECT 3 AS node_id, 'scaler_5' AS feature, -0.3591880798339844 AS threshold, 10 AS count, 3 AS depth, 2 AS parent_id, 0.4 AS "Proba_0", -0.916290731874 AS "LogProba_0", 0.0 AS "Proba_1", -1.79769313486231e+308 AS "LogProba_1", 0.1 AS "Proba_2", -2.30258509299 AS "LogProba_2", 0.5 AS "Proba_3", -0.69314718056 AS "LogProba_3", 3 AS "Decision", 0.5 AS "DecisionProba" UNION ALL SELECT 4 AS node_id, 'scaler_13' AS feature, 0.20128923654556274 AS threshold, 5 AS count, 4 AS depth, 3 AS parent_id, 0.8 AS "Proba_0", -0.223143551314 AS "LogProba_0", 0.0 AS "Proba_1", -1.79769313486231e+308 AS "LogProba_1", 0.2 AS "Proba_2", -1.60943791243 AS "LogProba_2", 0.0 AS "Proba_3", -1.79769313486231e+308 AS "LogProba_3", 0 AS "Decision", 0.8 AS "DecisionProba" UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS count, 5 AS depth, 4 AS parent_id, 1.0 AS "Proba_0", 0.0 AS "LogProba_0", 0.0 AS "Proba_1", -1.79769313486231e+308 AS "LogProba_1", 0.0 AS "Proba_2", -1.79769313486231e+308 AS "LogProba_2", 0.0 AS "Proba_3", -1.79769313486231e+308 AS "LogProba_3", 0 AS "Decision", 1.0 AS "DecisionProba" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 4 AS parent_id, 0.0 AS "Proba_0", -1.79769313486231e+308 AS "LogProba_0", 0.0 AS "Proba_1", -1.79769313486231e+308 AS "LogProba_1", 1.0 AS "Proba_2", 0.0 AS "LogProba_2", 0.0 AS "Proba_3", -1.79769313486231e+308 AS "LogProba_3", 2 AS "Decision", 1.0 AS "DecisionProba" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS count, 4 AS depth, 3 AS parent_id, 0.0 AS "Proba_0", -1.79769313486231e+308 AS "LogProba_0", 0.0 AS "Proba_1", -1.79769313486231e+308 AS "LogProba_1", 0.0 AS "Proba_2", -1.79769313486231e+308 AS "LogProba_2", 1.0 AS "Proba_3", 0.0 AS "LogProba_3", 3 AS "Decision", 1.0 AS "DecisionProba" UNION ALL SELECT 8 AS node_id, 'scaler_6' AS feature, 1.4529424905776978 AS threshold, 38 AS count, 3 AS depth, 2 AS parent_id, 0.0 AS "Proba_0", -1.79769313486231e+308 AS "LogProba_0", 0.05263157894736842 AS "Proba_1", -2.94443897917 AS "LogProba_1", 0.7105263157894737 AS "Proba_2", -0.341749293722 AS "LogProba_2", 0.23684210526315788 AS "Proba_3", -1.44036158239 AS "LogProba_3", 2 AS "Decision", 0.710526315789 AS "DecisionProba" UNION ALL SELECT 9 AS node_id, 'scaler_79' AS feature, -0.9629826545715332 AS threshold, 33 AS count, 4 AS depth, 8 AS parent_id, 0.0 AS "Proba_0", -1.79769313486231e+308 AS "LogProba_0", 0.030303030303030304 AS "Proba_1", -3.49650756147 AS "LogProba_1", 0.8181818181818182 AS "Proba_2", -0.200670695462 AS "LogProba_2", 0.15151515151515152 AS "Proba_3", -1.88706964903 AS "LogProba_3", 2 AS "Decision", 0.818181818182 AS "DecisionProba" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 5 AS depth, 9 AS parent_id, 0.0 AS "Proba_0", -1.79769313486231e+308 AS "LogProba_0", 0.3333333333333333 AS "Proba_1", -1.09861228867 AS "LogProba_1", 0.0 AS "Proba_2", -1.79769313486231e+308 AS "LogProba_2", 0.6666666666666666 AS "Proba_3", -0.405465108108 AS "LogProba_3", 3 AS "Decision", 0.666666666667 AS "DecisionProba" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 30 AS count, 5 AS depth, 9 AS parent_id, 0.0 AS "Proba_0", -1.79769313486231e+308 AS "LogProba_0", 0.0 AS "Proba_1", -1.79769313486231e+308 AS "LogProba_1", 0.9 AS "Proba_2", -0.105360515658 AS "LogProba_2", 0.1 AS "Proba_3", -2.30258509299 AS "LogProba_3", 2 AS "Decision", 0.9 AS "DecisionProba" UNION ALL SELECT 12 AS node_id, 'scaler_84' AS feature, 0.41806188225746155 AS threshold, 5 AS count, 4 AS depth, 8 AS parent_id, 0.0 AS "Proba_0", -1.79769313486231e+308 AS "LogProba_0", 0.2 AS "Proba_1", -1.60943791243 AS "LogProba_1", 0.0 AS "Proba_2", -1.79769313486231e+308 AS "LogProba_2", 0.8 AS "Proba_3", -0.223143551314 AS "LogProba_3", 3 AS "Decision", 0.8 AS "DecisionProba" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS count, 5 AS depth, 12 AS parent_id, 0.0 AS "Proba_0", -1.79769313486231e+308 AS "LogProba_0", 0.0 AS "Proba_1", -1.79769313486231e+308 AS "LogProba_1", 0.0 AS "Proba_2", -1.79769313486231e+308 AS "LogProba_2", 1.0 AS "Proba_3", 0.0 AS "LogProba_3", 3 AS "Decision", 1.0 AS "DecisionProba" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 12 AS parent_id, 0.0 AS "Proba_0", -1.79769313486231e+308 AS "LogProba_0", 1.0 AS "Proba_1", 0.0 AS "LogProba_1", 0.0 AS "Proba_2", -1.79769313486231e+308 AS "LogProba_2", 0.0 AS "Proba_3", -1.79769313486231e+308 AS "LogProba_3", 1 AS "Decision", 1.0 AS "DecisionProba" UNION ALL SELECT 15 AS node_id, 'scaler_71' AS feature, -0.14489154517650604 AS threshold, 24 AS count, 2 AS depth, 1 AS parent_id, 0.3333333333333333 AS "Proba_0", -1.09861228867 AS "LogProba_0", 0.3333333333333333 AS "Proba_1", -1.09861228867 AS "LogProba_1", 0.20833333333333334 AS "Proba_2", -1.56861591791 AS "LogProba_2", 0.125 AS "Proba_3", -2.07944154168 AS "LogProba_3", 0 AS "Decision", 0.333333333333 AS "DecisionProba" UNION ALL SELECT 16 AS node_id, 'scaler_61' AS feature, 0.7387732267379761 AS threshold, 10 AS count, 3 AS depth, 15 AS parent_id, 0.8 AS "Proba_0", -0.223143551314 AS "LogProba_0", 0.1 AS "Proba_1", -2.30258509299 AS "LogProba_1", 0.0 AS "Proba_2", -1.79769313486231e+308 AS "LogProba_2", 0.1 AS "Proba_3", -2.30258509299 AS "LogProba_3", 0 AS "Decision", 0.8 AS "DecisionProba" UNION ALL SELECT 17 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 8 AS count, 4 AS depth, 16 AS parent_id, 1.0 AS "Proba_0", 0.0 AS "LogProba_0", 0.0 AS "Proba_1", -1.79769313486231e+308 AS "LogProba_1", 0.0 AS "Proba_2", -1.79769313486231e+308 AS "LogProba_2", 0.0 AS "Proba_3", -1.79769313486231e+308 AS "LogProba_3", 0 AS "Decision", 1.0 AS "DecisionProba" UNION ALL SELECT 18 AS node_id, 'scaler_8' AS feature, -0.2838820815086365 AS threshold, 2 AS count, 4 AS depth, 16 AS parent_id, 0.0 AS "Proba_0", -1.79769313486231e+308 AS "LogProba_0", 0.5 AS "Proba_1", -0.69314718056 AS "LogProba_1", 0.0 AS "Proba_2", -1.79769313486231e+308 AS "LogProba_2", 0.5 AS "Proba_3", -0.69314718056 AS "LogProba_3", 1 AS "Decision", 0.5 AS "DecisionProba" UNION ALL SELECT 19 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 18 AS parent_id, 0.0 AS "Proba_0", -1.79769313486231e+308 AS "LogProba_0", 1.0 AS "Proba_1", 0.0 AS "LogProba_1", 0.0 AS "Proba_2", -1.79769313486231e+308 AS "LogProba_2", 0.0 AS "Proba_3", -1.79769313486231e+308 AS "LogProba_3", 1 AS "Decision", 1.0 AS "DecisionProba" UNION ALL SELECT 20 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 18 AS parent_id, 0.0 AS "Proba_0", -1.79769313486231e+308 AS "LogProba_0", 0.0 AS "Proba_1", -1.79769313486231e+308 AS "LogProba_1", 0.0 AS "Proba_2", -1.79769313486231e+308 AS "LogProba_2", 1.0 AS "Proba_3", 0.0 AS "LogProba_3", 3 AS "Decision", 1.0 AS "DecisionProba" UNION ALL SELECT 21 AS node_id, 'scaler_68' AS feature, -0.14360342919826508 AS threshold, 14 AS count, 3 AS depth, 15 AS parent_id, 0.0 AS "Proba_0", -1.79769313486231e+308 AS "LogProba_0", 0.5 AS "Proba_1", -0.69314718056 AS "LogProba_1", 0.35714285714285715 AS "Proba_2", -1.02961941718 AS "LogProba_2", 0.14285714285714285 AS "Proba_3", -1.94591014906 AS "LogProba_3", 1 AS "Decision", 0.5 AS "DecisionProba" UNION ALL SELECT 22 AS node_id, 'scaler_3' AS feature, 0.43674737215042114 AS threshold, 8 AS count, 4 AS depth, 21 AS parent_id, 0.0 AS "Proba_0", -1.79769313486231e+308 AS "LogProba_0", 0.875 AS "Proba_1", -0.133531392625 AS "LogProba_1", 0.0 AS "Proba_2", -1.79769313486231e+308 AS "LogProba_2", 0.125 AS "Proba_3", -2.07944154168 AS "LogProba_3", 1 AS "Decision", 0.875 AS "DecisionProba" UNION ALL SELECT 23 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 7 AS count, 5 AS depth, 22 AS parent_id, 0.0 AS "Proba_0", -1.79769313486231e+308 AS "LogProba_0", 1.0 AS "Proba_1", 0.0 AS "LogProba_1", 0.0 AS "Proba_2", -1.79769313486231e+308 AS "LogProba_2", 0.0 AS "Proba_3", -1.79769313486231e+308 AS "LogProba_3", 1 AS "Decision", 1.0 AS "DecisionProba" UNION ALL SELECT 24 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 22 AS parent_id, 0.0 AS "Proba_0", -1.79769313486231e+308 AS "LogProba_0", 0.0 AS "Proba_1", -1.79769313486231e+308 AS "LogProba_1", 0.0 AS "Proba_2", -1.79769313486231e+308 AS "LogProba_2", 1.0 AS "Proba_3", 0.0 AS "LogProba_3", 3 AS "Decision", 1.0 AS "DecisionProba" UNION ALL SELECT 25 AS node_id, 'scaler_48' AS feature, 0.7821073532104492 AS threshold, 6 AS count, 4 AS depth, 21 AS parent_id, 0.0 AS "Proba_0", -1.79769313486231e+308 AS "LogProba_0", 0.0 AS "Proba_1", -1.79769313486231e+308 AS "LogProba_1", 0.8333333333333334 AS "Proba_2", -0.182321556794 AS "LogProba_2", 0.16666666666666666 AS "Proba_3", -1.79175946923 AS "LogProba_3", 2 AS "Decision", 0.833333333333 AS "DecisionProba" UNION ALL SELECT 26 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS count, 5 AS depth, 25 AS parent_id, 0.0 AS "Proba_0", -1.79769313486231e+308 AS "LogProba_0", 0.0 AS "Proba_1", -1.79769313486231e+308 AS "LogProba_1", 1.0 AS "Proba_2", 0.0 AS "LogProba_2", 0.0 AS "Proba_3", -1.79769313486231e+308 AS "LogProba_3", 2 AS "Decision", 1.0 AS "DecisionProba" UNION ALL SELECT 27 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 25 AS parent_id, 0.0 AS "Proba_0", -1.79769313486231e+308 AS "LogProba_0", 0.0 AS "Proba_1", -1.79769313486231e+308 AS "LogProba_1", 0.0 AS "Proba_2", -1.79769313486231e+308 AS "LogProba_2", 1.0 AS "Proba_3", 0.0 AS "LogProba_3", 3 AS "Decision", 1.0 AS "DecisionProba" UNION ALL SELECT 28 AS node_id, 'scaler_16' AS feature, 0.03960008919239044 AS threshold, 116 AS count, 1 AS depth, 0 AS parent_id, 0.29310344827586204 AS "Proba_0", -1.22722966649 AS "LogProba_0", 0.3103448275862069 AS "Proba_1", -1.17007125265 AS "LogProba_1", 0.13793103448275862 AS "Proba_2", -1.98100146887 AS "LogProba_2", 0.25862068965517243 AS "Proba_3", -1.35239280944 AS "LogProba_3", 1 AS "Decision", 0.310344827586 AS "DecisionProba" UNION ALL SELECT 29 AS node_id, 'scaler_42' AS feature, -0.829920768737793 AS threshold, 60 AS count, 2 AS depth, 28 AS parent_id, 0.5166666666666667 AS "Proba_0", -0.660357357737 AS "LogProba_0", 0.2 AS "Proba_1", -1.60943791243 AS "LogProba_1", 0.11666666666666667 AS "Proba_2", -2.14843441317 AS "LogProba_2", 0.16666666666666666 AS "Proba_3", -1.79175946923 AS "LogProba_3", 0 AS "Decision", 0.516666666667 AS "DecisionProba" UNION ALL SELECT 30 AS node_id, 'scaler_99' AS feature, 0.31720250844955444 AS threshold, 20 AS count, 3 AS depth, 29 AS parent_id, 0.2 AS "Proba_0", -1.60943791243 AS "LogProba_0", 0.45 AS "Proba_1", -0.798507696218 AS "LogProba_1", 0.1 AS "Proba_2", -2.30258509299 AS "LogProba_2", 0.25 AS "Proba_3", -1.38629436112 AS "LogProba_3", 1 AS "Decision", 0.45 AS "DecisionProba" UNION ALL SELECT 31 AS node_id, 'scaler_58' AS feature, -0.34643039107322693 AS threshold, 14 AS count, 4 AS depth, 30 AS parent_id, 0.2857142857142857 AS "Proba_0", -1.2527629685 AS "LogProba_0", 0.5714285714285714 AS "Proba_1", -0.559615787935 AS "LogProba_1", 0.14285714285714285 AS "Proba_2", -1.94591014906 AS "LogProba_2", 0.0 AS "Proba_3", -1.79769313486231e+308 AS "LogProba_3", 1 AS "Decision", 0.571428571429 AS "DecisionProba" UNION ALL SELECT 32 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS count, 5 AS depth, 31 AS parent_id, 0.8 AS "Proba_0", -0.223143551314 AS "LogProba_0", 0.2 AS "Proba_1", -1.60943791243 AS "LogProba_1", 0.0 AS "Proba_2", -1.79769313486231e+308 AS "LogProba_2", 0.0 AS "Proba_3", -1.79769313486231e+308 AS "LogProba_3", 0 AS "Decision", 0.8 AS "DecisionProba" UNION ALL SELECT 33 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 9 AS count, 5 AS depth, 31 AS parent_id, 0.0 AS "Proba_0", -1.79769313486231e+308 AS "LogProba_0", 0.7777777777777778 AS "Proba_1", -0.251314428281 AS "LogProba_1", 0.2222222222222222 AS "Proba_2", -1.50407739678 AS "LogProba_2", 0.0 AS "Proba_3", -1.79769313486231e+308 AS "LogProba_3", 1 AS "Decision", 0.777777777778 AS "DecisionProba" UNION ALL SELECT 34 AS node_id, 'scaler_17' AS feature, -1.7313835620880127 AS threshold, 6 AS count, 4 AS depth, 30 AS parent_id, 0.0 AS "Proba_0", -1.79769313486231e+308 AS "LogProba_0", 0.16666666666666666 AS "Proba_1", -1.79175946923 AS "LogProba_1", 0.0 AS "Proba_2", -1.79769313486231e+308 AS "LogProba_2", 0.8333333333333334 AS "Proba_3", -0.182321556794 AS "LogProba_3", 3 AS "Decision", 0.833333333333 AS "DecisionProba" UNION ALL SELECT 35 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 34 AS parent_id, 0.0 AS "Proba_0", -1.79769313486231e+308 AS "LogProba_0", 1.0 AS "Proba_1", 0.0 AS "LogProba_1", 0.0 AS "Proba_2", -1.79769313486231e+308 AS "LogProba_2", 0.0 AS "Proba_3", -1.79769313486231e+308 AS "LogProba_3", 1 AS "Decision", 1.0 AS "DecisionProba" UNION ALL SELECT 36 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS count, 5 AS depth, 34 AS parent_id, 0.0 AS "Proba_0", -1.79769313486231e+308 AS "LogProba_0", 0.0 AS "Proba_1", -1.79769313486231e+308 AS "LogProba_1", 0.0 AS "Proba_2", -1.79769313486231e+308 AS "LogProba_2", 1.0 AS "Proba_3", 0.0 AS "LogProba_3", 3 AS "Decision", 1.0 AS "DecisionProba" UNION ALL SELECT 37 AS node_id, 'scaler_33' AS feature, -1.0623821020126343 AS threshold, 40 AS count, 3 AS depth, 29 AS parent_id, 0.675 AS "Proba_0", -0.39304258811 AS "LogProba_0", 0.075 AS "Proba_1", -2.59026716545 AS "LogProba_1", 0.125 AS "Proba_2", -2.07944154168 AS "LogProba_2", 0.125 AS "Proba_3", -2.07944154168 AS "LogProba_3", 0 AS "Decision", 0.675 AS "DecisionProba" UNION ALL SELECT 38 AS node_id, 'scaler_30' AS feature, -0.3437742292881012 AS threshold, 8 AS count, 4 AS depth, 37 AS parent_id, 0.125 AS "Proba_0", -2.07944154168 AS "LogProba_0", 0.125 AS "Proba_1", -2.07944154168 AS "LogProba_1", 0.5 AS "Proba_2", -0.69314718056 AS "LogProba_2", 0.25 AS "Proba_3", -1.38629436112 AS "LogProba_3", 2 AS "Decision", 0.5 AS "DecisionProba" UNION ALL SELECT 39 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS count, 5 AS depth, 38 AS parent_id, 0.2 AS "Proba_0", -1.60943791243 AS "LogProba_0", 0.0 AS "Proba_1", -1.79769313486231e+308 AS "LogProba_1", 0.8 AS "Proba_2", -0.223143551314 AS "LogProba_2", 0.0 AS "Proba_3", -1.79769313486231e+308 AS "LogProba_3", 2 AS "Decision", 0.8 AS "DecisionProba" UNION ALL SELECT 40 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 5 AS depth, 38 AS parent_id, 0.0 AS "Proba_0", -1.79769313486231e+308 AS "LogProba_0", 0.3333333333333333 AS "Proba_1", -1.09861228867 AS "LogProba_1", 0.0 AS "Proba_2", -1.79769313486231e+308 AS "LogProba_2", 0.6666666666666666 AS "Proba_3", -0.405465108108 AS "LogProba_3", 3 AS "Decision", 0.666666666667 AS "DecisionProba" UNION ALL SELECT 41 AS node_id, 'scaler_27' AS feature, 1.1278783082962036 AS threshold, 32 AS count, 4 AS depth, 37 AS parent_id, 0.8125 AS "Proba_0", -0.207639364778 AS "LogProba_0", 0.0625 AS "Proba_1", -2.77258872224 AS "LogProba_1", 0.03125 AS "Proba_2", -3.4657359028 AS "LogProba_2", 0.09375 AS "Proba_3", -2.36712361413 AS "LogProba_3", 0 AS "Decision", 0.8125 AS "DecisionProba" UNION ALL SELECT 42 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 27 AS count, 5 AS depth, 41 AS parent_id, 0.9259259259259259 AS "Proba_0", -0.0769610411361 AS "LogProba_0", 0.037037037037037035 AS "Proba_1", -3.295836866 AS "LogProba_1", 0.037037037037037035 AS "Proba_2", -3.295836866 AS "LogProba_2", 0.0 AS "Proba_3", -1.79769313486231e+308 AS "LogProba_3", 0 AS "Decision", 0.925925925926 AS "DecisionProba" UNION ALL SELECT 43 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS count, 5 AS depth, 41 AS parent_id, 0.2 AS "Proba_0", -1.60943791243 AS "LogProba_0", 0.2 AS "Proba_1", -1.60943791243 AS "LogProba_1", 0.0 AS "Proba_2", -1.79769313486231e+308 AS "LogProba_2", 0.6 AS "Proba_3", -0.510825623766 AS "LogProba_3", 3 AS "Decision", 0.6 AS "DecisionProba" UNION ALL SELECT 44 AS node_id, 'scaler_59' AS feature, 0.09820643067359924 AS threshold, 56 AS count, 2 AS depth, 28 AS parent_id, 0.05357142857142857 AS "Proba_0", -2.92673940207 AS "LogProba_0", 0.42857142857142855 AS "Proba_1", -0.847297860387 AS "LogProba_1", 0.16071428571428573 AS "Proba_2", -1.8281271134 AS "LogProba_2", 0.35714285714285715 AS "Proba_3", -1.02961941718 AS "LogProba_3", 1 AS "Decision", 0.428571428571 AS "DecisionProba" UNION ALL SELECT 45 AS node_id, 'scaler_44' AS feature, -0.12433278560638428 AS threshold, 30 AS count, 3 AS depth, 44 AS parent_id, 0.1 AS "Proba_0", -2.30258509299 AS "LogProba_0", 0.2 AS "Proba_1", -1.60943791243 AS "LogProba_1", 0.16666666666666666 AS "Proba_2", -1.79175946923 AS "LogProba_2", 0.5333333333333333 AS "Proba_3", -0.628608659422 AS "LogProba_3", 3 AS "Decision", 0.533333333333 AS "DecisionProba" UNION ALL SELECT 46 AS node_id, 'scaler_14' AS feature, 0.8770020008087158 AS threshold, 11 AS count, 4 AS depth, 45 AS parent_id, 0.2727272727272727 AS "Proba_0", -1.29928298413 AS "LogProba_0", 0.2727272727272727 AS "Proba_1", -1.29928298413 AS "LogProba_1", 0.36363636363636365 AS "Proba_2", -1.01160091168 AS "LogProba_2", 0.09090909090909091 AS "Proba_3", -2.3978952728 AS "LogProba_3", 2 AS "Decision", 0.363636363636 AS "DecisionProba" UNION ALL SELECT 47 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 8 AS count, 5 AS depth, 46 AS parent_id, 0.0 AS "Proba_0", -1.79769313486231e+308 AS "LogProba_0", 0.375 AS "Proba_1", -0.980829253012 AS "LogProba_1", 0.5 AS "Proba_2", -0.69314718056 AS "LogProba_2", 0.125 AS "Proba_3", -2.07944154168 AS "LogProba_3", 2 AS "Decision", 0.5 AS "DecisionProba" UNION ALL SELECT 48 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 5 AS depth, 46 AS parent_id, 1.0 AS "Proba_0", 0.0 AS "LogProba_0", 0.0 AS "Proba_1", -1.79769313486231e+308 AS "LogProba_1", 0.0 AS "Proba_2", -1.79769313486231e+308 AS "LogProba_2", 0.0 AS "Proba_3", -1.79769313486231e+308 AS "LogProba_3", 0 AS "Decision", 1.0 AS "DecisionProba" UNION ALL SELECT 49 AS node_id, 'scaler_5' AS feature, 1.128123164176941 AS threshold, 19 AS count, 4 AS depth, 45 AS parent_id, 0.0 AS "Proba_0", -1.79769313486231e+308 AS "LogProba_0", 0.15789473684210525 AS "Proba_1", -1.8458266905 AS "LogProba_1", 0.05263157894736842 AS "Proba_2", -2.94443897917 AS "LogProba_2", 0.7894736842105263 AS "Proba_3", -0.236388778064 AS "LogProba_3", 3 AS "Decision", 0.789473684211 AS "DecisionProba" UNION ALL SELECT 50 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 16 AS count, 5 AS depth, 49 AS parent_id, 0.0 AS "Proba_0", -1.79769313486231e+308 AS "LogProba_0", 0.0625 AS "Proba_1", -2.77258872224 AS "LogProba_1", 0.0 AS "Proba_2", -1.79769313486231e+308 AS "LogProba_2", 0.9375 AS "Proba_3", -0.0645385211376 AS "LogProba_3", 3 AS "Decision", 0.9375 AS "DecisionProba" UNION ALL SELECT 51 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 5 AS depth, 49 AS parent_id, 0.0 AS "Proba_0", -1.79769313486231e+308 AS "LogProba_0", 0.6666666666666666 AS "Proba_1", -0.405465108108 AS "LogProba_1", 0.3333333333333333 AS "Proba_2", -1.09861228867 AS "LogProba_2", 0.0 AS "Proba_3", -1.79769313486231e+308 AS "LogProba_3", 1 AS "Decision", 0.666666666667 AS "DecisionProba" UNION ALL SELECT 52 AS node_id, 'scaler_41' AS feature, 0.0428941436111927 AS threshold, 26 AS count, 3 AS depth, 44 AS parent_id, 0.0 AS "Proba_0", -1.79769313486231e+308 AS "LogProba_0", 0.6923076923076923 AS "Proba_1", -0.367724780125 AS "LogProba_1", 0.15384615384615385 AS "Proba_2", -1.8718021769 AS "LogProba_2", 0.15384615384615385 AS "Proba_3", -1.8718021769 AS "LogProba_3", 1 AS "Decision", 0.692307692308 AS "DecisionProba" UNION ALL SELECT 53 AS node_id, 'scaler_15' AS feature, -0.26037007570266724 AS threshold, 12 AS count, 4 AS depth, 52 AS parent_id, 0.0 AS "Proba_0", -1.79769313486231e+308 AS "LogProba_0", 0.3333333333333333 AS "Proba_1", -1.09861228867 AS "LogProba_1", 0.3333333333333333 AS "Proba_2", -1.09861228867 AS "LogProba_2", 0.3333333333333333 AS "Proba_3", -1.09861228867 AS "LogProba_3", 1 AS "Decision", 0.333333333333 AS "DecisionProba" UNION ALL SELECT 54 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS count, 5 AS depth, 53 AS parent_id, 0.0 AS "Proba_0", -1.79769313486231e+308 AS "LogProba_0", 1.0 AS "Proba_1", 0.0 AS "LogProba_1", 0.0 AS "Proba_2", -1.79769313486231e+308 AS "LogProba_2", 0.0 AS "Proba_3", -1.79769313486231e+308 AS "LogProba_3", 1 AS "Decision", 1.0 AS "DecisionProba" UNION ALL SELECT 55 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 8 AS count, 5 AS depth, 53 AS parent_id, 0.0 AS "Proba_0", -1.79769313486231e+308 AS "LogProba_0", 0.0 AS "Proba_1", -1.79769313486231e+308 AS "LogProba_1", 0.5 AS "Proba_2", -0.69314718056 AS "LogProba_2", 0.5 AS "Proba_3", -0.69314718056 AS "LogProba_3", 2 AS "Decision", 0.5 AS "DecisionProba" UNION ALL SELECT 56 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 14 AS count, 4 AS depth, 52 AS parent_id, 0.0 AS "Proba_0", -1.79769313486231e+308 AS "LogProba_0", 1.0 AS "Proba_1", 0.0 AS "LogProba_1", 0.0 AS "Proba_2", -1.79769313486231e+308 AS "LogProba_2", 0.0 AS "Proba_3", -1.79769313486231e+308 AS "LogProba_3", 1 AS "Decision", 1.0 AS "DecisionProba") AS "Values"), 
"DT_Output_1" AS 
(SELECT "DT_node_lookup_1"."KEY" AS "KEY", "DT_node_lookup_1".node_id_2 AS node_id_2, "DT_node_data_1".node_id AS node_id, "DT_node_data_1".feature AS feature, "DT_node_data_1".threshold AS threshold, "DT_node_data_1".count AS count, "DT_node_data_1".depth AS depth, "DT_node_data_1".parent_id AS parent_id, "DT_node_data_1"."Proba_0" AS "Proba_0", "DT_node_data_1"."LogProba_0" AS "LogProba_0", "DT_node_data_1"."Proba_1" AS "Proba_1", "DT_node_data_1"."LogProba_1" AS "LogProba_1", "DT_node_data_1"."Proba_2" AS "Proba_2", "DT_node_data_1"."LogProba_2" AS "LogProba_2", "DT_node_data_1"."Proba_3" AS "Proba_3", "DT_node_data_1"."LogProba_3" AS "LogProba_3", "DT_node_data_1"."Decision" AS "Decision", "DT_node_data_1"."DecisionProba" AS "DecisionProba" 
FROM "DT_node_lookup_1" LEFT OUTER JOIN "DT_node_data_1" ON "DT_node_lookup_1".node_id_2 = "DT_node_data_1".node_id), 
calibration_base_estimator_1 AS 
(SELECT "DT_Output_1"."KEY" AS "KEY", CAST(NULL AS FLOAT) AS "Score_0", CAST(NULL AS FLOAT) AS "Score_1", CAST(NULL AS FLOAT) AS "Score_2", CAST(NULL AS FLOAT) AS "Score_3", "DT_Output_1"."Proba_0" AS "Proba_0", "DT_Output_1"."Proba_1" AS "Proba_1", "DT_Output_1"."Proba_2" AS "Proba_2", "DT_Output_1"."Proba_3" AS "Proba_3", "DT_Output_1"."LogProba_0" AS "LogProba_0", "DT_Output_1"."LogProba_1" AS "LogProba_1", "DT_Output_1"."LogProba_2" AS "LogProba_2", "DT_Output_1"."LogProba_3" AS "LogProba_3", CAST(NULL AS INTEGER) AS "Decision", CAST(NULL AS FLOAT) AS "DecisionProba", coalesce(CAST(NULL AS FLOAT), "DT_Output_1"."Proba_0") AS "ScoreOrProba_0", coalesce(CAST(NULL AS FLOAT), "DT_Output_1"."Proba_1") AS "ScoreOrProba_1", coalesce(CAST(NULL AS FLOAT), "DT_Output_1"."Proba_2") AS "ScoreOrProba_2", coalesce(CAST(NULL AS FLOAT), "DT_Output_1"."Proba_3") AS "ScoreOrProba_3" 
FROM "DT_Output_1"), 
sigmoid_calibration_1 AS 
(SELECT calibration_base_estimator_1."KEY" AS "KEY", 1.0 / (1.0 + exp(0.23578467957 * calibration_base_estimator_1."ScoreOrProba_0" + 1.08589857429)) AS "Proba_0", 1.0 / (1.0 + exp(0.516625035929 * calibration_base_estimator_1."ScoreOrProba_1" + 1.04018890337)) AS "Proba_1", 1.0 / (1.0 + exp(0.0829292363627 * calibration_base_estimator_1."ScoreOrProba_2" + 1.03035121161)) AS "Proba_2", 1.0 / (1.0 + exp(0.116724105981 * calibration_base_estimator_1."ScoreOrProba_3" + 1.01112197071)) AS "Proba_3" 
FROM calibration_base_estimator_1), 
"Normalized_Probas_1" AS 
(SELECT sigmoid_calibration_1."KEY" AS "KEY", sigmoid_calibration_1."Proba_0" / (sigmoid_calibration_1."Proba_0" + sigmoid_calibration_1."Proba_1" + sigmoid_calibration_1."Proba_2" + sigmoid_calibration_1."Proba_3") AS "Proba_0", sigmoid_calibration_1."Proba_1" / (sigmoid_calibration_1."Proba_0" + sigmoid_calibration_1."Proba_1" + sigmoid_calibration_1."Proba_2" + sigmoid_calibration_1."Proba_3") AS "Proba_1", sigmoid_calibration_1."Proba_2" / (sigmoid_calibration_1."Proba_0" + sigmoid_calibration_1."Proba_1" + sigmoid_calibration_1."Proba_2" + sigmoid_calibration_1."Proba_3") AS "Proba_2", sigmoid_calibration_1."Proba_3" / (sigmoid_calibration_1."Proba_0" + sigmoid_calibration_1."Proba_1" + sigmoid_calibration_1."Proba_2" + sigmoid_calibration_1."Proba_3") AS "Proba_3" 
FROM sigmoid_calibration_1), 
"DT_node_lookup_2" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_78 <= -0.28095608949661255) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_86 <= -0.7344524264335632) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_69 <= -0.599231481552124) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_5 <= -2.2444000244140625) THEN 4 ELSE 5 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_79 <= 0.7257403135299683) THEN 7 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_61 <= 0.19103051722049713) THEN 9 ELSE 10 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_16 <= 0.3887612819671631) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_44 <= -1.1174763441085815) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_52 <= 0.9300514459609985) THEN 14 ELSE 15 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_46 <= 1.3050861358642578) THEN 17 ELSE 18 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_37 <= -0.18988031148910522) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_67 <= -0.3230772018432617) THEN 21 ELSE 22 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_80 <= -1.6193666458129883) THEN 24 ELSE 25 END END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_50 <= 0.24487558007240295) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_72 <= -0.5373429656028748) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_17 <= -1.1130311489105225) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_85 <= -0.5015560388565063) THEN 30 ELSE 31 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_50 <= 0.10292525589466095) THEN 33 ELSE 34 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_97 <= -0.40510451793670654) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_4 <= -0.2912192642688751) THEN 37 ELSE 38 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_96 <= -0.1689416468143463) THEN 40 ELSE 41 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_26 <= -0.35651344060897827) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_79 <= 0.2856414020061493) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_47 <= 0.19061121344566345) THEN 45 ELSE 46 END ELSE 47 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_47 <= -0.4675561785697937) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_62 <= 0.1189245954155922) THEN 50 ELSE 51 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_85 <= 1.2882522344589233) THEN 53 ELSE 54 END END END END END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_2" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Proba_0" AS "Proba_0", "Values"."LogProba_0" AS "LogProba_0", "Values"."Proba_1" AS "Proba_1", "Values"."LogProba_1" AS "LogProba_1", "Values"."Proba_2" AS "Proba_2", "Values"."LogProba_2" AS "LogProba_2", "Values"."Proba_3" AS "Proba_3", "Values"."LogProba_3" AS "LogProba_3", "Values"."Decision" AS "Decision", "Values"."DecisionProba" AS "DecisionProba" 
FROM (SELECT 0 AS node_id, 'scaler_78' AS feature, -0.28095608949661255 AS threshold, 188 AS count, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.24468085106382978 AS "Proba_0", -1.40780056634 AS "LogProba_0", 0.24468085106382978 AS "Proba_1", -1.40780056634 AS "LogProba_1", 0.26063829787234044 AS "Proba_2", -1.34462166472 AS "LogProba_2", 0.25 AS "Proba_3", -1.38629436112 AS "LogProba_3", 2 AS "Decision", 0.260638297872 AS "DecisionProba" UNION ALL SELECT 1 AS node_id, 'scaler_86' AS feature, -0.7344524264335632 AS threshold, 67 AS count, 1 AS depth, 0 AS parent_id, 0.417910447761194 AS "Proba_0", -0.872488109216 AS "LogProba_0", 0.29850746268656714 AS "Proba_1", -1.20896034584 AS "LogProba_1", 0.1791044776119403 AS "Proba_2", -1.7197859696 AS "LogProba_2", 0.1044776119402985 AS "Proba_3", -2.25878247034 AS "LogProba_3", 0 AS "Decision", 0.417910447761 AS "DecisionProba" UNION ALL SELECT 2 AS node_id, 'scaler_69' AS feature, -0.599231481552124 AS threshold, 21 AS count, 2 AS depth, 1 AS parent_id, 0.14285714285714285 AS "Proba_0", -1.94591014906 AS "LogProba_0", 0.6190476190476191 AS "Proba_1", -0.479573080262 AS "LogProba_1", 0.047619047619047616 AS "Proba_2", -3.04452243772 AS "LogProba_2", 0.19047619047619047 AS "Proba_3", -1.6582280766 AS "LogProba_3", 1 AS "Decision", 0.619047619048 AS "DecisionProba" UNION ALL SELECT 3 AS node_id, 'scaler_5' AS feature, -2.2444000244140625 AS threshold, 5 AS count, 3 AS depth, 2 AS parent_id, 0.0 AS "Proba_0", -1.79769313486231e+308 AS "LogProba_0", 0.2 AS "Proba_1", -1.60943791243 AS "LogProba_1", 0.0 AS "Proba_2", -1.79769313486231e+308 AS "LogProba_2", 0.8 AS "Proba_3", -0.223143551314 AS "LogProba_3", 3 AS "Decision", 0.8 AS "DecisionProba" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 3 AS parent_id, 0.0 AS "Proba_0", -1.79769313486231e+308 AS "LogProba_0", 1.0 AS "Proba_1", 0.0 AS "LogProba_1", 0.0 AS "Proba_2", -1.79769313486231e+308 AS "LogProba_2", 0.0 AS "Proba_3", -1.79769313486231e+308 AS "LogProba_3", 1 AS "Decision", 1.0 AS "DecisionProba" UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS count, 4 AS depth, 3 AS parent_id, 0.0 AS "Proba_0", -1.79769313486231e+308 AS "LogProba_0", 0.0 AS "Proba_1", -1.79769313486231e+308 AS "LogProba_1", 0.0 AS "Proba_2", -1.79769313486231e+308 AS "LogProba_2", 1.0 AS "Proba_3", 0.0 AS "LogProba_3", 3 AS "Decision", 1.0 AS "DecisionProba" UNION ALL SELECT 6 AS node_id, 'scaler_79' AS feature, 0.7257403135299683 AS threshold, 16 AS count, 3 AS depth, 2 AS parent_id, 0.1875 AS "Proba_0", -1.67397643357 AS "LogProba_0", 0.75 AS "Proba_1", -0.287682072452 AS "LogProba_1", 0.0625 AS "Proba_2", -2.77258872224 AS "LogProba_2", 0.0 AS "Proba_3", -1.79769313486231e+308 AS "LogProba_3", 1 AS "Decision", 0.75 AS "DecisionProba" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 11 AS count, 4 AS depth, 6 AS parent_id, 0.0 AS "Proba_0", -1.79769313486231e+308 AS "LogProba_0", 1.0 AS "Proba_1", 0.0 AS "LogProba_1", 0.0 AS "Proba_2", -1.79769313486231e+308 AS "LogProba_2", 0.0 AS "Proba_3", -1.79769313486231e+308 AS "LogProba_3", 1 AS "Decision", 1.0 AS "DecisionProba" UNION ALL SELECT 8 AS node_id, 'scaler_61' AS feature, 0.19103051722049713 AS threshold, 5 AS count, 4 AS depth, 6 AS parent_id, 0.6 AS "Proba_0", -0.510825623766 AS "LogProba_0", 0.2 AS "Proba_1", -1.60943791243 AS "LogProba_1", 0.2 AS "Proba_2", -1.60943791243 AS "LogProba_2", 0.0 AS "Proba_3", -1.79769313486231e+308 AS "LogProba_3", 0 AS "Decision", 0.6 AS "DecisionProba" UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 5 AS depth, 8 AS parent_id, 0.0 AS "Proba_0", -1.79769313486231e+308 AS "LogProba_0", 0.5 AS "Proba_1", -0.69314718056 AS "LogProba_1", 0.5 AS "Proba_2", -0.69314718056 AS "LogProba_2", 0.0 AS "Proba_3", -1.79769313486231e+308 AS "LogProba_3", 1 AS "Decision", 0.5 AS "DecisionProba" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 5 AS depth, 8 AS parent_id, 1.0 AS "Proba_0", 0.0 AS "LogProba_0", 0.0 AS "Proba_1", -1.79769313486231e+308 AS "LogProba_1", 0.0 AS "Proba_2", -1.79769313486231e+308 AS "LogProba_2", 0.0 AS "Proba_3", -1.79769313486231e+308 AS "LogProba_3", 0 AS "Decision", 1.0 AS "DecisionProba" UNION ALL SELECT 11 AS node_id, 'scaler_16' AS feature, 0.3887612819671631 AS threshold, 46 AS count, 2 AS depth, 1 AS parent_id, 0.5434782608695652 AS "Proba_0", -0.609765571621 AS "LogProba_0", 0.15217391304347827 AS "Proba_1", -1.88273124743 AS "LogProba_1", 0.2391304347826087 AS "Proba_2", -1.43074612369 AS "LogProba_2", 0.06521739130434782 AS "Proba_3", -2.73002910782 AS "LogProba_3", 0 AS "Decision", 0.54347826087 AS "DecisionProba" UNION ALL SELECT 12 AS node_id, 'scaler_44' AS feature, -1.1174763441085815 AS threshold, 31 AS count, 3 AS depth, 11 AS parent_id, 0.7096774193548387 AS "Proba_0", -0.342944751127 AS "LogProba_0", 0.16129032258064516 AS "Proba_1", -1.82454929205 AS "LogProba_1", 0.0967741935483871 AS "Proba_2", -2.33537491582 AS "LogProba_2", 0.03225806451612903 AS "Proba_3", -3.43398720449 AS "LogProba_3", 0 AS "Decision", 0.709677419355 AS "DecisionProba" UNION ALL SELECT 13 AS node_id, 'scaler_52' AS feature, 0.9300514459609985 AS threshold, 7 AS count, 4 AS depth, 12 AS parent_id, 0.14285714285714285 AS "Proba_0", -1.94591014906 AS "LogProba_0", 0.5714285714285714 AS "Proba_1", -0.559615787935 AS "LogProba_1", 0.2857142857142857 AS "Proba_2", -1.2527629685 AS "LogProba_2", 0.0 AS "Proba_3", -1.79769313486231e+308 AS "LogProba_3", 1 AS "Decision", 0.571428571429 AS "DecisionProba" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS count, 5 AS depth, 13 AS parent_id, 0.0 AS "Proba_0", -1.79769313486231e+308 AS "LogProba_0", 1.0 AS "Proba_1", 0.0 AS "LogProba_1", 0.0 AS "Proba_2", -1.79769313486231e+308 AS "LogProba_2", 0.0 AS "Proba_3", -1.79769313486231e+308 AS "LogProba_3", 1 AS "Decision", 1.0 AS "DecisionProba" UNION ALL SELECT 15 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 5 AS depth, 13 AS parent_id, 0.3333333333333333 AS "Proba_0", -1.09861228867 AS "LogProba_0", 0.0 AS "Proba_1", -1.79769313486231e+308 AS "LogProba_1", 0.6666666666666666 AS "Proba_2", -0.405465108108 AS "LogProba_2", 0.0 AS "Proba_3", -1.79769313486231e+308 AS "LogProba_3", 2 AS "Decision", 0.666666666667 AS "DecisionProba" UNION ALL SELECT 16 AS node_id, 'scaler_46' AS feature, 1.3050861358642578 AS threshold, 24 AS count, 4 AS depth, 12 AS parent_id, 0.875 AS "Proba_0", -0.133531392625 AS "LogProba_0", 0.041666666666666664 AS "Proba_1", -3.17805383035 AS "LogProba_1", 0.041666666666666664 AS "Proba_2", -3.17805383035 AS "LogProba_2", 0.041666666666666664 AS "Proba_3", -3.17805383035 AS "LogProba_3", 0 AS "Decision", 0.875 AS "DecisionProba" UNION ALL SELECT 17 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 22 AS count, 5 AS depth, 16 AS parent_id, 0.9545454545454546 AS "Proba_0", -0.0465200156349 AS "LogProba_0", 0.0 AS "Proba_1", -1.79769313486231e+308 AS "LogProba_1", 0.045454545454545456 AS "Proba_2", -3.09104245336 AS "LogProba_2", 0.0 AS "Proba_3", -1.79769313486231e+308 AS "LogProba_3", 0 AS "Decision", 0.954545454545 AS "DecisionProba" UNION ALL SELECT 18 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 5 AS depth, 16 AS parent_id, 0.0 AS "Proba_0", -1.79769313486231e+308 AS "LogProba_0", 0.5 AS "Proba_1", -0.69314718056 AS "LogProba_1", 0.0 AS "Proba_2", -1.79769313486231e+308 AS "LogProba_2", 0.5 AS "Proba_3", -0.69314718056 AS "LogProba_3", 1 AS "Decision", 0.5 AS "DecisionProba" UNION ALL SELECT 19 AS node_id, 'scaler_37' AS feature, -0.18988031148910522 AS threshold, 15 AS count, 3 AS depth, 11 AS parent_id, 0.2 AS "Proba_0", -1.60943791243 AS "LogProba_0", 0.13333333333333333 AS "Proba_1", -2.01490302054 AS "LogProba_1", 0.5333333333333333 AS "Proba_2", -0.628608659422 AS "LogProba_2", 0.13333333333333333 AS "Proba_3", -2.01490302054 AS "LogProba_3", 2 AS "Decision", 0.533333333333 AS "DecisionProba" UNION ALL SELECT 20 AS node_id, 'scaler_67' AS feature, -0.3230772018432617 AS threshold, 6 AS count, 4 AS depth, 19 AS parent_id, 0.3333333333333333 AS "Proba_0", -1.09861228867 AS "LogProba_0", 0.3333333333333333 AS "Proba_1", -1.09861228867 AS "LogProba_1", 0.0 AS "Proba_2", -1.79769313486231e+308 AS "LogProba_2", 0.3333333333333333 AS "Proba_3", -1.09861228867 AS "LogProba_3", 0 AS "Decision", 0.333333333333 AS "DecisionProba" UNION ALL SELECT 21 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 5 AS depth, 20 AS parent_id, 1.0 AS "Proba_0", 0.0 AS "LogProba_0", 0.0 AS "Proba_1", -1.79769313486231e+308 AS "LogProba_1", 0.0 AS "Proba_2", -1.79769313486231e+308 AS "LogProba_2", 0.0 AS "Proba_3", -1.79769313486231e+308 AS "LogProba_3", 0 AS "Decision", 1.0 AS "DecisionProba" UNION ALL SELECT 22 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS count, 5 AS depth, 20 AS parent_id, 0.0 AS "Proba_0", -1.79769313486231e+308 AS "LogProba_0", 0.5 AS "Proba_1", -0.69314718056 AS "LogProba_1", 0.0 AS "Proba_2", -1.79769313486231e+308 AS "LogProba_2", 0.5 AS "Proba_3", -0.69314718056 AS "LogProba_3", 1 AS "Decision", 0.5 AS "DecisionProba" UNION ALL SELECT 23 AS node_id, 'scaler_80' AS feature, -1.6193666458129883 AS threshold, 9 AS count, 4 AS depth, 19 AS parent_id, 0.1111111111111111 AS "Proba_0", -2.19722457734 AS "LogProba_0", 0.0 AS "Proba_1", -1.79769313486231e+308 AS "LogProba_1", 0.8888888888888888 AS "Proba_2", -0.117783035656 AS "LogProba_2", 0.0 AS "Proba_3", -1.79769313486231e+308 AS "LogProba_3", 2 AS "Decision", 0.888888888889 AS "DecisionProba" UNION ALL SELECT 24 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 23 AS parent_id, 1.0 AS "Proba_0", 0.0 AS "LogProba_0", 0.0 AS "Proba_1", -1.79769313486231e+308 AS "LogProba_1", 0.0 AS "Proba_2", -1.79769313486231e+308 AS "LogProba_2", 0.0 AS "Proba_3", -1.79769313486231e+308 AS "LogProba_3", 0 AS "Decision", 1.0 AS "DecisionProba" UNION ALL SELECT 25 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 8 AS count, 5 AS depth, 23 AS parent_id, 0.0 AS "Proba_0", -1.79769313486231e+308 AS "LogProba_0", 0.0 AS "Proba_1", -1.79769313486231e+308 AS "LogProba_1", 1.0 AS "Proba_2", 0.0 AS "LogProba_2", 0.0 AS "Proba_3", -1.79769313486231e+308 AS "LogProba_3", 2 AS "Decision", 1.0 AS "DecisionProba" UNION ALL SELECT 26 AS node_id, 'scaler_50' AS feature, 0.24487558007240295 AS threshold, 121 AS count, 1 AS depth, 0 AS parent_id, 0.1487603305785124 AS "Proba_0", -1.9054187877 AS "LogProba_0", 0.21487603305785125 AS "Proba_1", -1.53769400758 AS "LogProba_1", 0.30578512396694213 AS "Proba_2", -1.18487263295 AS "LogProba_2", 0.3305785123966942 AS "Proba_3", -1.10691109148 AS "LogProba_3", 3 AS "Decision", 0.330578512397 AS "DecisionProba" UNION ALL SELECT 27 AS node_id, 'scaler_72' AS feature, -0.5373429656028748 AS threshold, 73 AS count, 2 AS depth, 26 AS parent_id, 0.0958904109589041 AS "Proba_0", -2.34454929209 AS "LogProba_0", 0.1095890410958904 AS "Proba_1", -2.21101789947 AS "LogProba_1", 0.3698630136986301 AS "Proba_2", -0.994622575144 AS "LogProba_2", 0.4246575342465753 AS "Proba_3", -0.856472236663 AS "LogProba_3", 3 AS "Decision", 0.424657534247 AS "DecisionProba" UNION ALL SELECT 28 AS node_id, 'scaler_17' AS feature, -1.1130311489105225 AS threshold, 20 AS count, 3 AS depth, 27 AS parent_id, 0.15 AS "Proba_0", -1.89711998489 AS "LogProba_0", 0.05 AS "Proba_1", -2.99573227355 AS "LogProba_1", 0.1 AS "Proba_2", -2.30258509299 AS "LogProba_2", 0.7 AS "Proba_3", -0.356674943939 AS "LogProba_3", 3 AS "Decision", 0.7 AS "DecisionProba" UNION ALL SELECT 29 AS node_id, 'scaler_85' AS feature, -0.5015560388565063 AS threshold, 3 AS count, 4 AS depth, 28 AS parent_id, 0.3333333333333333 AS "Proba_0", -1.09861228867 AS "LogProba_0", 0.0 AS "Proba_1", -1.79769313486231e+308 AS "LogProba_1", 0.6666666666666666 AS "Proba_2", -0.405465108108 AS "LogProba_2", 0.0 AS "Proba_3", -1.79769313486231e+308 AS "LogProba_3", 2 AS "Decision", 0.666666666667 AS "DecisionProba" UNION ALL SELECT 30 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 29 AS parent_id, 1.0 AS "Proba_0", 0.0 AS "LogProba_0", 0.0 AS "Proba_1", -1.79769313486231e+308 AS "LogProba_1", 0.0 AS "Proba_2", -1.79769313486231e+308 AS "LogProba_2", 0.0 AS "Proba_3", -1.79769313486231e+308 AS "LogProba_3", 0 AS "Decision", 1.0 AS "DecisionProba" UNION ALL SELECT 31 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 5 AS depth, 29 AS parent_id, 0.0 AS "Proba_0", -1.79769313486231e+308 AS "LogProba_0", 0.0 AS "Proba_1", -1.79769313486231e+308 AS "LogProba_1", 1.0 AS "Proba_2", 0.0 AS "LogProba_2", 0.0 AS "Proba_3", -1.79769313486231e+308 AS "LogProba_3", 2 AS "Decision", 1.0 AS "DecisionProba" UNION ALL SELECT 32 AS node_id, 'scaler_50' AS feature, 0.10292525589466095 AS threshold, 17 AS count, 4 AS depth, 28 AS parent_id, 0.11764705882352941 AS "Proba_0", -2.1400661635 AS "LogProba_0", 0.058823529411764705 AS "Proba_1", -2.83321334406 AS "LogProba_1", 0.0 AS "Proba_2", -1.79769313486231e+308 AS "LogProba_2", 0.8235294117647058 AS "Proba_3", -0.194156014441 AS "LogProba_3", 3 AS "Decision", 0.823529411765 AS "DecisionProba" UNION ALL SELECT 33 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 15 AS count, 5 AS depth, 32 AS parent_id, 0.06666666666666667 AS "Proba_0", -2.7080502011 AS "LogProba_0", 0.0 AS "Proba_1", -1.79769313486231e+308 AS "LogProba_1", 0.0 AS "Proba_2", -1.79769313486231e+308 AS "LogProba_2", 0.9333333333333333 AS "Proba_3", -0.068992871487 AS "LogProba_3", 3 AS "Decision", 0.933333333333 AS "DecisionProba" UNION ALL SELECT 34 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 5 AS depth, 32 AS parent_id, 0.5 AS "Proba_0", -0.69314718056 AS "LogProba_0", 0.5 AS "Proba_1", -0.69314718056 AS "LogProba_1", 0.0 AS "Proba_2", -1.79769313486231e+308 AS "LogProba_2", 0.0 AS "Proba_3", -1.79769313486231e+308 AS "LogProba_3", 0 AS "Decision", 0.5 AS "DecisionProba" UNION ALL SELECT 35 AS node_id, 'scaler_97' AS feature, -0.40510451793670654 AS threshold, 53 AS count, 3 AS depth, 27 AS parent_id, 0.07547169811320754 AS "Proba_0", -2.58399755243 AS "LogProba_0", 0.1320754716981132 AS "Proba_1", -2.0243817645 AS "LogProba_1", 0.4716981132075472 AS "Proba_2", -0.751416088684 AS "LogProba_2", 0.32075471698113206 AS "Proba_3", -1.1370785695 AS "LogProba_3", 2 AS "Decision", 0.471698113208 AS "DecisionProba" UNION ALL SELECT 36 AS node_id, 'scaler_4' AS feature, -0.2912192642688751 AS threshold, 22 AS count, 4 AS depth, 35 AS parent_id, 0.0 AS "Proba_0", -1.79769313486231e+308 AS "LogProba_0", 0.18181818181818182 AS "Proba_1", -1.70474809224 AS "LogProba_1", 0.7272727272727273 AS "Proba_2", -0.318453731119 AS "LogProba_2", 0.09090909090909091 AS "Proba_3", -2.3978952728 AS "LogProba_3", 2 AS "Decision", 0.727272727273 AS "DecisionProba" UNION ALL SELECT 37 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 6 AS count, 5 AS depth, 36 AS parent_id, 0.0 AS "Proba_0", -1.79769313486231e+308 AS "LogProba_0", 0.5 AS "Proba_1", -0.69314718056 AS "LogProba_1", 0.16666666666666666 AS "Proba_2", -1.79175946923 AS "LogProba_2", 0.3333333333333333 AS "Proba_3", -1.09861228867 AS "LogProba_3", 1 AS "Decision", 0.5 AS "DecisionProba" UNION ALL SELECT 38 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 16 AS count, 5 AS depth, 36 AS parent_id, 0.0 AS "Proba_0", -1.79769313486231e+308 AS "LogProba_0", 0.0625 AS "Proba_1", -2.77258872224 AS "LogProba_1", 0.9375 AS "Proba_2", -0.0645385211376 AS "LogProba_2", 0.0 AS "Proba_3", -1.79769313486231e+308 AS "LogProba_3", 2 AS "Decision", 0.9375 AS "DecisionProba" UNION ALL SELECT 39 AS node_id, 'scaler_96' AS feature, -0.1689416468143463 AS threshold, 31 AS count, 4 AS depth, 35 AS parent_id, 0.12903225806451613 AS "Proba_0", -2.04769284337 AS "LogProba_0", 0.0967741935483871 AS "Proba_1", -2.33537491582 AS "LogProba_1", 0.2903225806451613 AS "Proba_2", -1.23676262715 AS "LogProba_2", 0.4838709677419355 AS "Proba_3", -0.725937003383 AS "LogProba_3", 3 AS "Decision", 0.483870967742 AS "DecisionProba" UNION ALL SELECT 40 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 15 AS count, 5 AS depth, 39 AS parent_id, 0.06666666666666667 AS "Proba_0", -2.7080502011 AS "LogProba_0", 0.0 AS "Proba_1", -1.79769313486231e+308 AS "LogProba_1", 0.13333333333333333 AS "Proba_2", -2.01490302054 AS "LogProba_2", 0.8 AS "Proba_3", -0.223143551314 AS "LogProba_3", 3 AS "Decision", 0.8 AS "DecisionProba" UNION ALL SELECT 41 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 16 AS count, 5 AS depth, 39 AS parent_id, 0.1875 AS "Proba_0", -1.67397643357 AS "LogProba_0", 0.1875 AS "Proba_1", -1.67397643357 AS "LogProba_1", 0.4375 AS "Proba_2", -0.826678573184 AS "LogProba_2", 0.1875 AS "Proba_3", -1.67397643357 AS "LogProba_3", 2 AS "Decision", 0.4375 AS "DecisionProba" UNION ALL SELECT 42 AS node_id, 'scaler_26' AS feature, -0.35651344060897827 AS threshold, 48 AS count, 2 AS depth, 26 AS parent_id, 0.22916666666666666 AS "Proba_0", -1.47330573811 AS "LogProba_0", 0.375 AS "Proba_1", -0.980829253012 AS "LogProba_1", 0.20833333333333334 AS "Proba_2", -1.56861591791 AS "LogProba_2", 0.1875 AS "Proba_3", -1.67397643357 AS "LogProba_3", 1 AS "Decision", 0.375 AS "DecisionProba" UNION ALL SELECT 43 AS node_id, 'scaler_79' AS feature, 0.2856414020061493 AS threshold, 13 AS count, 3 AS depth, 42 AS parent_id, 0.3076923076923077 AS "Proba_0", -1.17865499634 AS "LogProba_0", 0.0 AS "Proba_1", -1.79769313486231e+308 AS "LogProba_1", 0.15384615384615385 AS "Proba_2", -1.8718021769 AS "LogProba_2", 0.5384615384615384 AS "Proba_3", -0.619039208406 AS "LogProba_3", 3 AS "Decision", 0.538461538462 AS "DecisionProba" UNION ALL SELECT 44 AS node_id, 'scaler_47' AS feature, 0.19061121344566345 AS threshold, 6 AS count, 4 AS depth, 43 AS parent_id, 0.6666666666666666 AS "Proba_0", -0.405465108108 AS "LogProba_0", 0.0 AS "Proba_1", -1.79769313486231e+308 AS "LogProba_1", 0.3333333333333333 AS "Proba_2", -1.09861228867 AS "LogProba_2", 0.0 AS "Proba_3", -1.79769313486231e+308 AS "LogProba_3", 0 AS "Decision", 0.666666666667 AS "DecisionProba" UNION ALL SELECT 45 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS count, 5 AS depth, 44 AS parent_id, 1.0 AS "Proba_0", 0.0 AS "LogProba_0", 0.0 AS "Proba_1", -1.79769313486231e+308 AS "LogProba_1", 0.0 AS "Proba_2", -1.79769313486231e+308 AS "LogProba_2", 0.0 AS "Proba_3", -1.79769313486231e+308 AS "LogProba_3", 0 AS "Decision", 1.0 AS "DecisionProba" UNION ALL SELECT 46 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 5 AS depth, 44 AS parent_id, 0.0 AS "Proba_0", -1.79769313486231e+308 AS "LogProba_0", 0.0 AS "Proba_1", -1.79769313486231e+308 AS "LogProba_1", 1.0 AS "Proba_2", 0.0 AS "LogProba_2", 0.0 AS "Proba_3", -1.79769313486231e+308 AS "LogProba_3", 2 AS "Decision", 1.0 AS "DecisionProba" UNION ALL SELECT 47 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 7 AS count, 4 AS depth, 43 AS parent_id, 0.0 AS "Proba_0", -1.79769313486231e+308 AS "LogProba_0", 0.0 AS "Proba_1", -1.79769313486231e+308 AS "LogProba_1", 0.0 AS "Proba_2", -1.79769313486231e+308 AS "LogProba_2", 1.0 AS "Proba_3", 0.0 AS "LogProba_3", 3 AS "Decision", 1.0 AS "DecisionProba" UNION ALL SELECT 48 AS node_id, 'scaler_47' AS feature, -0.4675561785697937 AS threshold, 35 AS count, 3 AS depth, 42 AS parent_id, 0.2 AS "Proba_0", -1.60943791243 AS "LogProba_0", 0.5142857142857142 AS "Proba_1", -0.664976303593 AS "LogProba_1", 0.22857142857142856 AS "Proba_2", -1.47590651981 AS "LogProba_2", 0.05714285714285714 AS "Proba_3", -2.86220088093 AS "LogProba_3", 1 AS "Decision", 0.514285714286 AS "DecisionProba" UNION ALL SELECT 49 AS node_id, 'scaler_62' AS feature, 0.1189245954155922 AS threshold, 9 AS count, 4 AS depth, 48 AS parent_id, 0.4444444444444444 AS "Proba_0", -0.810930216216 AS "LogProba_0", 0.0 AS "Proba_1", -1.79769313486231e+308 AS "LogProba_1", 0.5555555555555556 AS "Proba_2", -0.587786664902 AS "LogProba_2", 0.0 AS "Proba_3", -1.79769313486231e+308 AS "LogProba_3", 2 AS "Decision", 0.555555555556 AS "DecisionProba" UNION ALL SELECT 50 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS count, 5 AS depth, 49 AS parent_id, 0.0 AS "Proba_0", -1.79769313486231e+308 AS "LogProba_0", 0.0 AS "Proba_1", -1.79769313486231e+308 AS "LogProba_1", 1.0 AS "Proba_2", 0.0 AS "LogProba_2", 0.0 AS "Proba_3", -1.79769313486231e+308 AS "LogProba_3", 2 AS "Decision", 1.0 AS "DecisionProba" UNION ALL SELECT 51 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS count, 5 AS depth, 49 AS parent_id, 1.0 AS "Proba_0", 0.0 AS "LogProba_0", 0.0 AS "Proba_1", -1.79769313486231e+308 AS "LogProba_1", 0.0 AS "Proba_2", -1.79769313486231e+308 AS "LogProba_2", 0.0 AS "Proba_3", -1.79769313486231e+308 AS "LogProba_3", 0 AS "Decision", 1.0 AS "DecisionProba" UNION ALL SELECT 52 AS node_id, 'scaler_85' AS feature, 1.2882522344589233 AS threshold, 26 AS count, 4 AS depth, 48 AS parent_id, 0.11538461538461539 AS "Proba_0", -2.15948424935 AS "LogProba_0", 0.6923076923076923 AS "Proba_1", -0.367724780125 AS "LogProba_1", 0.11538461538461539 AS "Proba_2", -2.15948424935 AS "LogProba_2", 0.07692307692307693 AS "Proba_3", -2.56494935746 AS "LogProba_3", 1 AS "Decision", 0.692307692308 AS "DecisionProba" UNION ALL SELECT 53 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 22 AS count, 5 AS depth, 52 AS parent_id, 0.09090909090909091 AS "Proba_0", -2.3978952728 AS "LogProba_0", 0.8181818181818182 AS "Proba_1", -0.200670695462 AS "LogProba_1", 0.09090909090909091 AS "Proba_2", -2.3978952728 AS "LogProba_2", 0.0 AS "Proba_3", -1.79769313486231e+308 AS "LogProba_3", 1 AS "Decision", 0.818181818182 AS "DecisionProba" UNION ALL SELECT 54 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS count, 5 AS depth, 52 AS parent_id, 0.25 AS "Proba_0", -1.38629436112 AS "LogProba_0", 0.0 AS "Proba_1", -1.79769313486231e+308 AS "LogProba_1", 0.25 AS "Proba_2", -1.38629436112 AS "LogProba_2", 0.5 AS "Proba_3", -0.69314718056 AS "LogProba_3", 3 AS "Decision", 0.5 AS "DecisionProba") AS "Values"), 
"DT_Output_2" AS 
(SELECT "DT_node_lookup_2"."KEY" AS "KEY", "DT_node_lookup_2".node_id_2 AS node_id_2, "DT_node_data_2".node_id AS node_id, "DT_node_data_2".feature AS feature, "DT_node_data_2".threshold AS threshold, "DT_node_data_2".count AS count, "DT_node_data_2".depth AS depth, "DT_node_data_2".parent_id AS parent_id, "DT_node_data_2"."Proba_0" AS "Proba_0", "DT_node_data_2"."LogProba_0" AS "LogProba_0", "DT_node_data_2"."Proba_1" AS "Proba_1", "DT_node_data_2"."LogProba_1" AS "LogProba_1", "DT_node_data_2"."Proba_2" AS "Proba_2", "DT_node_data_2"."LogProba_2" AS "LogProba_2", "DT_node_data_2"."Proba_3" AS "Proba_3", "DT_node_data_2"."LogProba_3" AS "LogProba_3", "DT_node_data_2"."Decision" AS "Decision", "DT_node_data_2"."DecisionProba" AS "DecisionProba" 
FROM "DT_node_lookup_2" LEFT OUTER JOIN "DT_node_data_2" ON "DT_node_lookup_2".node_id_2 = "DT_node_data_2".node_id), 
calibration_base_estimator_2 AS 
(SELECT "DT_Output_2"."KEY" AS "KEY", CAST(NULL AS FLOAT) AS "Score_0", CAST(NULL AS FLOAT) AS "Score_1", CAST(NULL AS FLOAT) AS "Score_2", CAST(NULL AS FLOAT) AS "Score_3", "DT_Output_2"."Proba_0" AS "Proba_0", "DT_Output_2"."Proba_1" AS "Proba_1", "DT_Output_2"."Proba_2" AS "Proba_2", "DT_Output_2"."Proba_3" AS "Proba_3", "DT_Output_2"."LogProba_0" AS "LogProba_0", "DT_Output_2"."LogProba_1" AS "LogProba_1", "DT_Output_2"."LogProba_2" AS "LogProba_2", "DT_Output_2"."LogProba_3" AS "LogProba_3", CAST(NULL AS INTEGER) AS "Decision", CAST(NULL AS FLOAT) AS "DecisionProba", coalesce(CAST(NULL AS FLOAT), "DT_Output_2"."Proba_0") AS "ScoreOrProba_0", coalesce(CAST(NULL AS FLOAT), "DT_Output_2"."Proba_1") AS "ScoreOrProba_1", coalesce(CAST(NULL AS FLOAT), "DT_Output_2"."Proba_2") AS "ScoreOrProba_2", coalesce(CAST(NULL AS FLOAT), "DT_Output_2"."Proba_3") AS "ScoreOrProba_3" 
FROM "DT_Output_2"), 
sigmoid_calibration_2 AS 
(SELECT calibration_base_estimator_2."KEY" AS "KEY", 1.0 / (1.0 + exp(-1.10140425232 * calibration_base_estimator_2."ScoreOrProba_0" + 1.50655649944)) AS "Proba_0", 1.0 / (1.0 + exp(-1.67275775951 * calibration_base_estimator_2."ScoreOrProba_1" + 1.49604206383)) AS "Proba_1", 1.0 / (1.0 + exp(-0.652560625279 * calibration_base_estimator_2."ScoreOrProba_2" + 1.20515861137)) AS "Proba_2", 1.0 / (1.0 + exp(-0.312703588205 * calibration_base_estimator_2."ScoreOrProba_3" + 1.1516400653)) AS "Proba_3" 
FROM calibration_base_estimator_2), 
"Normalized_Probas_2" AS 
(SELECT sigmoid_calibration_2."KEY" AS "KEY", sigmoid_calibration_2."Proba_0" / (sigmoid_calibration_2."Proba_0" + sigmoid_calibration_2."Proba_1" + sigmoid_calibration_2."Proba_2" + sigmoid_calibration_2."Proba_3") AS "Proba_0", sigmoid_calibration_2."Proba_1" / (sigmoid_calibration_2."Proba_0" + sigmoid_calibration_2."Proba_1" + sigmoid_calibration_2."Proba_2" + sigmoid_calibration_2."Proba_3") AS "Proba_1", sigmoid_calibration_2."Proba_2" / (sigmoid_calibration_2."Proba_0" + sigmoid_calibration_2."Proba_1" + sigmoid_calibration_2."Proba_2" + sigmoid_calibration_2."Proba_3") AS "Proba_2", sigmoid_calibration_2."Proba_3" / (sigmoid_calibration_2."Proba_0" + sigmoid_calibration_2."Proba_1" + sigmoid_calibration_2."Proba_2" + sigmoid_calibration_2."Proba_3") AS "Proba_3" 
FROM sigmoid_calibration_2), 
"DT_node_lookup_3" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_93 <= -0.5236997604370117) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_13 <= 0.7197872400283813) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_67 <= 0.7094120383262634) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_3 <= 0.12370190024375916) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_92 <= 0.7349680066108704) THEN 5 ELSE 6 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_24 <= 0.08444994688034058) THEN 8 ELSE 9 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_44 <= -0.27539756894111633) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_84 <= 0.18565140664577484) THEN 12 ELSE 13 END ELSE 14 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_3 <= 1.209323525428772) THEN 16 ELSE 17 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_12 <= 1.5683929920196533) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_63 <= 0.6284289360046387) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_69 <= -0.6321234703063965) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_23 <= 1.0650142431259155) THEN 22 ELSE 23 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_44 <= 0.440640926361084) THEN 25 ELSE 26 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_90 <= 0.5784161686897278) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_34 <= 0.7783558368682861) THEN 29 ELSE 30 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_26 <= 1.052207112312317) THEN 32 ELSE 33 END END END ELSE 34 END END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_3" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Proba_0" AS "Proba_0", "Values"."LogProba_0" AS "LogProba_0", "Values"."Proba_1" AS "Proba_1", "Values"."LogProba_1" AS "LogProba_1", "Values"."Proba_2" AS "Proba_2", "Values"."LogProba_2" AS "LogProba_2", "Values"."Proba_3" AS "Proba_3", "Values"."LogProba_3" AS "LogProba_3", "Values"."Decision" AS "Decision", "Values"."DecisionProba" AS "DecisionProba" 
FROM (SELECT 0 AS node_id, 'scaler_93' AS feature, -0.5236997604370117 AS threshold, 189 AS count, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.24338624338624337 AS "Proba_0", -1.41310561857 AS "LogProba_0", 0.24338624338624337 AS "Proba_1", -1.41310561857 AS "LogProba_1", 0.25925925925925924 AS "Proba_2", -1.34992671695 AS "LogProba_2", 0.25396825396825395 AS "Proba_3", -1.37054600415 AS "LogProba_3", 2 AS "Decision", 0.259259259259 AS "DecisionProba" UNION ALL SELECT 1 AS node_id, 'scaler_13' AS feature, 0.7197872400283813 AS threshold, 53 AS count, 1 AS depth, 0 AS parent_id, 0.32075471698113206 AS "Proba_0", -1.1370785695 AS "LogProba_0", 0.41509433962264153 AS "Proba_1", -0.879249460194 AS "LogProba_1", 0.09433962264150944 AS "Proba_2", -2.36085400112 AS "LogProba_2", 0.16981132075471697 AS "Proba_3", -1.77306733622 AS "LogProba_3", 1 AS "Decision", 0.415094339623 AS "DecisionProba" UNION ALL SELECT 2 AS node_id, 'scaler_67' AS feature, 0.7094120383262634 AS threshold, 41 AS count, 2 AS depth, 1 AS parent_id, 0.3902439024390244 AS "Proba_0", -0.940983344465 AS "LogProba_0", 0.2682926829268293 AS "Proba_1", -1.31567679391 AS "LogProba_1", 0.12195121951219512 AS "Proba_2", -2.10413415427 AS "LogProba_2", 0.21951219512195122 AS "Proba_3", -1.51634748937 AS "LogProba_3", 0 AS "Decision", 0.390243902439 AS "DecisionProba" UNION ALL SELECT 3 AS node_id, 'scaler_3' AS feature, 0.12370190024375916 AS threshold, 31 AS count, 3 AS depth, 2 AS parent_id, 0.5161290322580645 AS "Proba_0", -0.661398482245 AS "LogProba_0", 0.2903225806451613 AS "Proba_1", -1.23676262715 AS "LogProba_1", 0.0967741935483871 AS "Proba_2", -2.33537491582 AS "LogProba_2", 0.0967741935483871 AS "Proba_3", -2.33537491582 AS "LogProba_3", 0 AS "Decision", 0.516129032258 AS "DecisionProba" UNION ALL SELECT 4 AS node_id, 'scaler_92' AS feature, 0.7349680066108704 AS threshold, 12 AS count, 4 AS depth, 3 AS parent_id, 0.16666666666666666 AS "Proba_0", -1.79175946923 AS "LogProba_0", 0.6666666666666666 AS "Proba_1", -0.405465108108 AS "LogProba_1", 0.0 AS "Proba_2", -1.79769313486231e+308 AS "LogProba_2", 0.16666666666666666 AS "Proba_3", -1.79175946923 AS "LogProba_3", 1 AS "Decision", 0.666666666667 AS "DecisionProba" UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 9 AS count, 5 AS depth, 4 AS parent_id, 0.1111111111111111 AS "Proba_0", -2.19722457734 AS "LogProba_0", 0.8888888888888888 AS "Proba_1", -0.117783035656 AS "LogProba_1", 0.0 AS "Proba_2", -1.79769313486231e+308 AS "LogProba_2", 0.0 AS "Proba_3", -1.79769313486231e+308 AS "LogProba_3", 1 AS "Decision", 0.888888888889 AS "DecisionProba" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 5 AS depth, 4 AS parent_id, 0.3333333333333333 AS "Proba_0", -1.09861228867 AS "LogProba_0", 0.0 AS "Proba_1", -1.79769313486231e+308 AS "LogProba_1", 0.0 AS "Proba_2", -1.79769313486231e+308 AS "LogProba_2", 0.6666666666666666 AS "Proba_3", -0.405465108108 AS "LogProba_3", 3 AS "Decision", 0.666666666667 AS "DecisionProba" UNION ALL SELECT 7 AS node_id, 'scaler_24' AS feature, 0.08444994688034058 AS threshold, 19 AS count, 4 AS depth, 3 AS parent_id, 0.7368421052631579 AS "Proba_0", -0.305381649551 AS "LogProba_0", 0.05263157894736842 AS "Proba_1", -2.94443897917 AS "LogProba_1", 0.15789473684210525 AS "Proba_2", -1.8458266905 AS "LogProba_2", 0.05263157894736842 AS "Proba_3", -2.94443897917 AS "LogProba_3", 0 AS "Decision", 0.736842105263 AS "DecisionProba" UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 14 AS count, 5 AS depth, 7 AS parent_id, 0.9285714285714286 AS "Proba_0", -0.0741079721537 AS "LogProba_0", 0.07142857142857142 AS "Proba_1", -2.63905732962 AS "LogProba_1", 0.0 AS "Proba_2", -1.79769313486231e+308 AS "LogProba_2", 0.0 AS "Proba_3", -1.79769313486231e+308 AS "LogProba_3", 0 AS "Decision", 0.928571428571 AS "DecisionProba" UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS count, 5 AS depth, 7 AS parent_id, 0.2 AS "Proba_0", -1.60943791243 AS "LogProba_0", 0.0 AS "Proba_1", -1.79769313486231e+308 AS "LogProba_1", 0.6 AS "Proba_2", -0.510825623766 AS "LogProba_2", 0.2 AS "Proba_3", -1.60943791243 AS "LogProba_3", 2 AS "Decision", 0.6 AS "DecisionProba" UNION ALL SELECT 10 AS node_id, 'scaler_44' AS feature, -0.27539756894111633 AS threshold, 10 AS count, 3 AS depth, 2 AS parent_id, 0.0 AS "Proba_0", -1.79769313486231e+308 AS "LogProba_0", 0.2 AS "Proba_1", -1.60943791243 AS "LogProba_1", 0.2 AS "Proba_2", -1.60943791243 AS "LogProba_2", 0.6 AS "Proba_3", -0.510825623766 AS "LogProba_3", 3 AS "Decision", 0.6 AS "DecisionProba" UNION ALL SELECT 11 AS node_id, 'scaler_84' AS feature, 0.18565140664577484 AS threshold, 4 AS count, 4 AS depth, 10 AS parent_id, 0.0 AS "Proba_0", -1.79769313486231e+308 AS "LogProba_0", 0.5 AS "Proba_1", -0.69314718056 AS "LogProba_1", 0.5 AS "Proba_2", -0.69314718056 AS "LogProba_2", 0.0 AS "Proba_3", -1.79769313486231e+308 AS "LogProba_3", 1 AS "Decision", 0.5 AS "DecisionProba" UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 5 AS depth, 11 AS parent_id, 0.0 AS "Proba_0", -1.79769313486231e+308 AS "LogProba_0", 0.0 AS "Proba_1", -1.79769313486231e+308 AS "LogProba_1", 1.0 AS "Proba_2", 0.0 AS "LogProba_2", 0.0 AS "Proba_3", -1.79769313486231e+308 AS "LogProba_3", 2 AS "Decision", 1.0 AS "DecisionProba" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 5 AS depth, 11 AS parent_id, 0.0 AS "Proba_0", -1.79769313486231e+308 AS "LogProba_0", 1.0 AS "Proba_1", 0.0 AS "LogProba_1", 0.0 AS "Proba_2", -1.79769313486231e+308 AS "LogProba_2", 0.0 AS "Proba_3", -1.79769313486231e+308 AS "LogProba_3", 1 AS "Decision", 1.0 AS "DecisionProba" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 6 AS count, 4 AS depth, 10 AS parent_id, 0.0 AS "Proba_0", -1.79769313486231e+308 AS "LogProba_0", 0.0 AS "Proba_1", -1.79769313486231e+308 AS "LogProba_1", 0.0 AS "Proba_2", -1.79769313486231e+308 AS "LogProba_2", 1.0 AS "Proba_3", 0.0 AS "LogProba_3", 3 AS "Decision", 1.0 AS "DecisionProba" UNION ALL SELECT 15 AS node_id, 'scaler_3' AS feature, 1.209323525428772 AS threshold, 12 AS count, 2 AS depth, 1 AS parent_id, 0.08333333333333333 AS "Proba_0", -2.48490664979 AS "LogProba_0", 0.9166666666666666 AS "Proba_1", -0.0870113769896 AS "LogProba_1", 0.0 AS "Proba_2", -1.79769313486231e+308 AS "LogProba_2", 0.0 AS "Proba_3", -1.79769313486231e+308 AS "LogProba_3", 1 AS "Decision", 0.916666666667 AS "DecisionProba" UNION ALL SELECT 16 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 11 AS count, 3 AS depth, 15 AS parent_id, 0.0 AS "Proba_0", -1.79769313486231e+308 AS "LogProba_0", 1.0 AS "Proba_1", 0.0 AS "LogProba_1", 0.0 AS "Proba_2", -1.79769313486231e+308 AS "LogProba_2", 0.0 AS "Proba_3", -1.79769313486231e+308 AS "LogProba_3", 1 AS "Decision", 1.0 AS "DecisionProba" UNION ALL SELECT 17 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 15 AS parent_id, 1.0 AS "Proba_0", 0.0 AS "LogProba_0", 0.0 AS "Proba_1", -1.79769313486231e+308 AS "LogProba_1", 0.0 AS "Proba_2", -1.79769313486231e+308 AS "LogProba_2", 0.0 AS "Proba_3", -1.79769313486231e+308 AS "LogProba_3", 0 AS "Decision", 1.0 AS "DecisionProba" UNION ALL SELECT 18 AS node_id, 'scaler_12' AS feature, 1.5683929920196533 AS threshold, 136 AS count, 1 AS depth, 0 AS parent_id, 0.21323529411764705 AS "Proba_0", -1.54535905575 AS "LogProba_0", 0.17647058823529413 AS "Proba_1", -1.73460105539 AS "LogProba_1", 0.3235294117647059 AS "Proba_2", -1.12846525182 AS "LogProba_2", 0.2867647058823529 AS "Proba_3", -1.24909323961 AS "LogProba_3", 2 AS "Decision", 0.323529411765 AS "DecisionProba" UNION ALL SELECT 19 AS node_id, 'scaler_63' AS feature, 0.6284289360046387 AS threshold, 128 AS count, 2 AS depth, 18 AS parent_id, 0.2265625 AS "Proba_0", -1.48473443393 AS "LogProba_0", 0.1875 AS "Proba_1", -1.67397643357 AS "LogProba_1", 0.28125 AS "Proba_2", -1.26851132546 AS "LogProba_2", 0.3046875 AS "Proba_3", -1.18846861779 AS "LogProba_3", 3 AS "Decision", 0.3046875 AS "DecisionProba" UNION ALL SELECT 20 AS node_id, 'scaler_69' AS feature, -0.6321234703063965 AS threshold, 95 AS count, 3 AS depth, 19 AS parent_id, 0.23157894736842105 AS "Proba_0", -1.46283443824 AS "LogProba_0", 0.12631578947368421 AS "Proba_1", -2.06897024181 AS "LogProba_1", 0.25263157894736843 AS "Proba_2", -1.37582306125 AS "LogProba_2", 0.3894736842105263 AS "Proba_3", -0.942958978956 AS "LogProba_3", 3 AS "Decision", 0.389473684211 AS "DecisionProba" UNION ALL SELECT 21 AS node_id, 'scaler_23' AS feature, 1.0650142431259155 AS threshold, 27 AS count, 4 AS depth, 20 AS parent_id, 0.14814814814814814 AS "Proba_0", -1.90954250488 AS "LogProba_0", 0.037037037037037035 AS "Proba_1", -3.295836866 AS "LogProba_1", 0.1111111111111111 AS "Proba_2", -2.19722457734 AS "LogProba_2", 0.7037037037037037 AS "Proba_3", -0.351397886838 AS "LogProba_3", 3 AS "Decision", 0.703703703704 AS "DecisionProba" UNION ALL SELECT 22 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 21 AS count, 5 AS depth, 21 AS parent_id, 0.047619047619047616 AS "Proba_0", -3.04452243772 AS "LogProba_0", 0.047619047619047616 AS "Proba_1", -3.04452243772 AS "LogProba_1", 0.047619047619047616 AS "Proba_2", -3.04452243772 AS "LogProba_2", 0.8571428571428571 AS "Proba_3", -0.154150679827 AS "LogProba_3", 3 AS "Decision", 0.857142857143 AS "DecisionProba" UNION ALL SELECT 23 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 6 AS count, 5 AS depth, 21 AS parent_id, 0.5 AS "Proba_0", -0.69314718056 AS "LogProba_0", 0.0 AS "Proba_1", -1.79769313486231e+308 AS "LogProba_1", 0.3333333333333333 AS "Proba_2", -1.09861228867 AS "LogProba_2", 0.16666666666666666 AS "Proba_3", -1.79175946923 AS "LogProba_3", 0 AS "Decision", 0.5 AS "DecisionProba" UNION ALL SELECT 24 AS node_id, 'scaler_44' AS feature, 0.440640926361084 AS threshold, 68 AS count, 4 AS depth, 20 AS parent_id, 0.2647058823529412 AS "Proba_0", -1.32913594728 AS "LogProba_0", 0.16176470588235295 AS "Proba_1", -1.82161243238 AS "LogProba_1", 0.3088235294117647 AS "Proba_2", -1.17498526745 AS "LogProba_2", 0.2647058823529412 AS "Proba_3", -1.32913594728 AS "LogProba_3", 2 AS "Decision", 0.308823529412 AS "DecisionProba" UNION ALL SELECT 25 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 46 AS count, 5 AS depth, 24 AS parent_id, 0.10869565217391304 AS "Proba_0", -2.21920348405 AS "LogProba_0", 0.2391304347826087 AS "Proba_1", -1.43074612369 AS "LogProba_1", 0.32608695652173914 AS "Proba_2", -1.12059119539 AS "LogProba_2", 0.32608695652173914 AS "Proba_3", -1.12059119539 AS "LogProba_3", 2 AS "Decision", 0.326086956522 AS "DecisionProba" UNION ALL SELECT 26 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 22 AS count, 5 AS depth, 24 AS parent_id, 0.5909090909090909 AS "Proba_0", -0.526093095897 AS "LogProba_0", 0.0 AS "Proba_1", -1.79769313486231e+308 AS "LogProba_1", 0.2727272727272727 AS "Proba_2", -1.29928298413 AS "LogProba_2", 0.13636363636363635 AS "Proba_3", -1.99243016469 AS "LogProba_3", 0 AS "Decision", 0.590909090909 AS "DecisionProba" UNION ALL SELECT 27 AS node_id, 'scaler_90' AS feature, 0.5784161686897278 AS threshold, 33 AS count, 3 AS depth, 19 AS parent_id, 0.21212121212121213 AS "Proba_0", -1.55059741241 AS "LogProba_0", 0.36363636363636365 AS "Proba_1", -1.01160091168 AS "LogProba_1", 0.36363636363636365 AS "Proba_2", -1.01160091168 AS "LogProba_2", 0.06060606060606061 AS "Proba_3", -2.80336038091 AS "LogProba_3", 1 AS "Decision", 0.363636363636 AS "DecisionProba" UNION ALL SELECT 28 AS node_id, 'scaler_34' AS feature, 0.7783558368682861 AS threshold, 23 AS count, 4 AS depth, 27 AS parent_id, 0.30434782608695654 AS "Proba_0", -1.18958406687 AS "LogProba_0", 0.4782608695652174 AS "Proba_1", -0.737598943131 AS "LogProba_1", 0.13043478260869565 AS "Proba_2", -2.03688192726 AS "LogProba_2", 0.08695652173913043 AS "Proba_3", -2.44234703537 AS "LogProba_3", 1 AS "Decision", 0.478260869565 AS "DecisionProba" UNION ALL SELECT 29 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 18 AS count, 5 AS depth, 28 AS parent_id, 0.1111111111111111 AS "Proba_0", -2.19722457734 AS "LogProba_0", 0.6111111111111112 AS "Proba_1", -0.492476485098 AS "LogProba_1", 0.16666666666666666 AS "Proba_2", -1.79175946923 AS "LogProba_2", 0.1111111111111111 AS "Proba_3", -2.19722457734 AS "LogProba_3", 1 AS "Decision", 0.611111111111 AS "DecisionProba" UNION ALL SELECT 30 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS count, 5 AS depth, 28 AS parent_id, 1.0 AS "Proba_0", 0.0 AS "LogProba_0", 0.0 AS "Proba_1", -1.79769313486231e+308 AS "LogProba_1", 0.0 AS "Proba_2", -1.79769313486231e+308 AS "LogProba_2", 0.0 AS "Proba_3", -1.79769313486231e+308 AS "LogProba_3", 0 AS "Decision", 1.0 AS "DecisionProba" UNION ALL SELECT 31 AS node_id, 'scaler_26' AS feature, 1.052207112312317 AS threshold, 10 AS count, 4 AS depth, 27 AS parent_id, 0.0 AS "Proba_0", -1.79769313486231e+308 AS "LogProba_0", 0.1 AS "Proba_1", -2.30258509299 AS "LogProba_1", 0.9 AS "Proba_2", -0.105360515658 AS "LogProba_2", 0.0 AS "Proba_3", -1.79769313486231e+308 AS "LogProba_3", 2 AS "Decision", 0.9 AS "DecisionProba" UNION ALL SELECT 32 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 9 AS count, 5 AS depth, 31 AS parent_id, 0.0 AS "Proba_0", -1.79769313486231e+308 AS "LogProba_0", 0.0 AS "Proba_1", -1.79769313486231e+308 AS "LogProba_1", 1.0 AS "Proba_2", 0.0 AS "LogProba_2", 0.0 AS "Proba_3", -1.79769313486231e+308 AS "LogProba_3", 2 AS "Decision", 1.0 AS "DecisionProba" UNION ALL SELECT 33 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 31 AS parent_id, 0.0 AS "Proba_0", -1.79769313486231e+308 AS "LogProba_0", 1.0 AS "Proba_1", 0.0 AS "LogProba_1", 0.0 AS "Proba_2", -1.79769313486231e+308 AS "LogProba_2", 0.0 AS "Proba_3", -1.79769313486231e+308 AS "LogProba_3", 1 AS "Decision", 1.0 AS "DecisionProba" UNION ALL SELECT 34 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 8 AS count, 2 AS depth, 18 AS parent_id, 0.0 AS "Proba_0", -1.79769313486231e+308 AS "LogProba_0", 0.0 AS "Proba_1", -1.79769313486231e+308 AS "LogProba_1", 1.0 AS "Proba_2", 0.0 AS "LogProba_2", 0.0 AS "Proba_3", -1.79769313486231e+308 AS "LogProba_3", 2 AS "Decision", 1.0 AS "DecisionProba") AS "Values"), 
"DT_Output_3" AS 
(SELECT "DT_node_lookup_3"."KEY" AS "KEY", "DT_node_lookup_3".node_id_2 AS node_id_2, "DT_node_data_3".node_id AS node_id, "DT_node_data_3".feature AS feature, "DT_node_data_3".threshold AS threshold, "DT_node_data_3".count AS count, "DT_node_data_3".depth AS depth, "DT_node_data_3".parent_id AS parent_id, "DT_node_data_3"."Proba_0" AS "Proba_0", "DT_node_data_3"."LogProba_0" AS "LogProba_0", "DT_node_data_3"."Proba_1" AS "Proba_1", "DT_node_data_3"."LogProba_1" AS "LogProba_1", "DT_node_data_3"."Proba_2" AS "Proba_2", "DT_node_data_3"."LogProba_2" AS "LogProba_2", "DT_node_data_3"."Proba_3" AS "Proba_3", "DT_node_data_3"."LogProba_3" AS "LogProba_3", "DT_node_data_3"."Decision" AS "Decision", "DT_node_data_3"."DecisionProba" AS "DecisionProba" 
FROM "DT_node_lookup_3" LEFT OUTER JOIN "DT_node_data_3" ON "DT_node_lookup_3".node_id_2 = "DT_node_data_3".node_id), 
calibration_base_estimator_3 AS 
(SELECT "DT_Output_3"."KEY" AS "KEY", CAST(NULL AS FLOAT) AS "Score_0", CAST(NULL AS FLOAT) AS "Score_1", CAST(NULL AS FLOAT) AS "Score_2", CAST(NULL AS FLOAT) AS "Score_3", "DT_Output_3"."Proba_0" AS "Proba_0", "DT_Output_3"."Proba_1" AS "Proba_1", "DT_Output_3"."Proba_2" AS "Proba_2", "DT_Output_3"."Proba_3" AS "Proba_3", "DT_Output_3"."LogProba_0" AS "LogProba_0", "DT_Output_3"."LogProba_1" AS "LogProba_1", "DT_Output_3"."LogProba_2" AS "LogProba_2", "DT_Output_3"."LogProba_3" AS "LogProba_3", CAST(NULL AS INTEGER) AS "Decision", CAST(NULL AS FLOAT) AS "DecisionProba", coalesce(CAST(NULL AS FLOAT), "DT_Output_3"."Proba_0") AS "ScoreOrProba_0", coalesce(CAST(NULL AS FLOAT), "DT_Output_3"."Proba_1") AS "ScoreOrProba_1", coalesce(CAST(NULL AS FLOAT), "DT_Output_3"."Proba_2") AS "ScoreOrProba_2", coalesce(CAST(NULL AS FLOAT), "DT_Output_3"."Proba_3") AS "ScoreOrProba_3" 
FROM "DT_Output_3"), 
sigmoid_calibration_3 AS 
(SELECT calibration_base_estimator_3."KEY" AS "KEY", 1.0 / (1.0 + exp(0.830777490693 * calibration_base_estimator_3."ScoreOrProba_0" + 0.937972210232)) AS "Proba_0", 1.0 / (1.0 + exp(-0.978033863067 * calibration_base_estimator_3."ScoreOrProba_1" + 1.43491280205)) AS "Proba_1", 1.0 / (1.0 + exp(-0.425060541387 * calibration_base_estimator_3."ScoreOrProba_2" + 1.12544888393)) AS "Proba_2", 1.0 / (1.0 + exp(-0.830352248096 * calibration_base_estimator_3."ScoreOrProba_3" + 1.33765238889)) AS "Proba_3" 
FROM calibration_base_estimator_3), 
"Normalized_Probas_3" AS 
(SELECT sigmoid_calibration_3."KEY" AS "KEY", sigmoid_calibration_3."Proba_0" / (sigmoid_calibration_3."Proba_0" + sigmoid_calibration_3."Proba_1" + sigmoid_calibration_3."Proba_2" + sigmoid_calibration_3."Proba_3") AS "Proba_0", sigmoid_calibration_3."Proba_1" / (sigmoid_calibration_3."Proba_0" + sigmoid_calibration_3."Proba_1" + sigmoid_calibration_3."Proba_2" + sigmoid_calibration_3."Proba_3") AS "Proba_1", sigmoid_calibration_3."Proba_2" / (sigmoid_calibration_3."Proba_0" + sigmoid_calibration_3."Proba_1" + sigmoid_calibration_3."Proba_2" + sigmoid_calibration_3."Proba_3") AS "Proba_2", sigmoid_calibration_3."Proba_3" / (sigmoid_calibration_3."Proba_0" + sigmoid_calibration_3."Proba_1" + sigmoid_calibration_3."Proba_2" + sigmoid_calibration_3."Proba_3") AS "Proba_3" 
FROM sigmoid_calibration_3), 
"Score_Union_CTE" AS 
(SELECT ensemble_score_union."KEY" AS "KEY", ensemble_score_union."Proba_0" AS "Proba_0", ensemble_score_union."Proba_1" AS "Proba_1", ensemble_score_union."Proba_2" AS "Proba_2", ensemble_score_union."Proba_3" AS "Proba_3" 
FROM (SELECT "Normalized_Probas"."KEY" AS "KEY", "Normalized_Probas"."Proba_0" AS "Proba_0", "Normalized_Probas"."Proba_1" AS "Proba_1", "Normalized_Probas"."Proba_2" AS "Proba_2", "Normalized_Probas"."Proba_3" AS "Proba_3" 
FROM "Normalized_Probas" UNION ALL SELECT "Normalized_Probas_1"."KEY" AS "KEY", "Normalized_Probas_1"."Proba_0" AS "Proba_0", "Normalized_Probas_1"."Proba_1" AS "Proba_1", "Normalized_Probas_1"."Proba_2" AS "Proba_2", "Normalized_Probas_1"."Proba_3" AS "Proba_3" 
FROM "Normalized_Probas_1" UNION ALL SELECT "Normalized_Probas_2"."KEY" AS "KEY", "Normalized_Probas_2"."Proba_0" AS "Proba_0", "Normalized_Probas_2"."Proba_1" AS "Proba_1", "Normalized_Probas_2"."Proba_2" AS "Proba_2", "Normalized_Probas_2"."Proba_3" AS "Proba_3" 
FROM "Normalized_Probas_2" UNION ALL SELECT "Normalized_Probas_3"."KEY" AS "KEY", "Normalized_Probas_3"."Proba_0" AS "Proba_0", "Normalized_Probas_3"."Proba_1" AS "Proba_1", "Normalized_Probas_3"."Proba_2" AS "Proba_2", "Normalized_Probas_3"."Proba_3" AS "Proba_3" 
FROM "Normalized_Probas_3") AS ensemble_score_union), 
"Calibrate_AVG_Proba" AS 
(SELECT "T"."KEY" AS "KEY", "T"."Proba_0" AS "Proba_0", "T"."Proba_1" AS "Proba_1", "T"."Proba_2" AS "Proba_2", "T"."Proba_3" AS "Proba_3" 
FROM (SELECT "Score_Union_CTE"."KEY" AS "KEY", avg("Score_Union_CTE"."Proba_0") AS "Proba_0", avg("Score_Union_CTE"."Proba_1") AS "Proba_1", avg("Score_Union_CTE"."Proba_2") AS "Proba_2", avg("Score_Union_CTE"."Proba_3") AS "Proba_3" 
FROM "Score_Union_CTE" GROUP BY "Score_Union_CTE"."KEY") AS "T"), 
orig_cte AS 
(SELECT "Calibrate_AVG_Proba"."KEY" AS "KEY", CAST(NULL AS FLOAT) AS "Score_0", CAST(NULL AS FLOAT) AS "Score_1", CAST(NULL AS FLOAT) AS "Score_2", CAST(NULL AS FLOAT) AS "Score_3", "Calibrate_AVG_Proba"."Proba_0" AS "Proba_0", "Calibrate_AVG_Proba"."Proba_1" AS "Proba_1", "Calibrate_AVG_Proba"."Proba_2" AS "Proba_2", "Calibrate_AVG_Proba"."Proba_3" AS "Proba_3", CAST(NULL AS FLOAT) AS "LogProba_0", CAST(NULL AS FLOAT) AS "LogProba_1", CAST(NULL AS FLOAT) AS "LogProba_2", CAST(NULL AS FLOAT) AS "LogProba_3", CAST(NULL AS INTEGER) AS "Decision", CAST(NULL AS FLOAT) AS "DecisionProba" 
FROM "Calibrate_AVG_Proba"), 
score_class_union AS 
(SELECT scu."KEY_u" AS "KEY_u", scu.class AS class, scu."LogProba" AS "LogProba", scu."Proba" AS "Proba", scu."Score" AS "Score" 
FROM (SELECT orig_cte."KEY" AS "KEY_u", 0 AS class, orig_cte."LogProba_0" AS "LogProba", orig_cte."Proba_0" AS "Proba", orig_cte."Score_0" AS "Score" 
FROM orig_cte UNION ALL SELECT orig_cte."KEY" AS "KEY_u", 1 AS class, orig_cte."LogProba_1" AS "LogProba", orig_cte."Proba_1" AS "Proba", orig_cte."Score_1" AS "Score" 
FROM orig_cte UNION ALL SELECT orig_cte."KEY" AS "KEY_u", 2 AS class, orig_cte."LogProba_2" AS "LogProba", orig_cte."Proba_2" AS "Proba", orig_cte."Score_2" AS "Score" 
FROM orig_cte UNION ALL SELECT orig_cte."KEY" AS "KEY_u", 3 AS class, orig_cte."LogProba_3" AS "LogProba", orig_cte."Proba_3" AS "Proba", orig_cte."Score_3" AS "Score" 
FROM orig_cte) AS scu), 
score_max AS 
(SELECT orig_cte."KEY" AS "KEY", orig_cte."Score_0" AS "Score_0", orig_cte."Score_1" AS "Score_1", orig_cte."Score_2" AS "Score_2", orig_cte."Score_3" AS "Score_3", orig_cte."Proba_0" AS "Proba_0", orig_cte."Proba_1" AS "Proba_1", orig_cte."Proba_2" AS "Proba_2", orig_cte."Proba_3" AS "Proba_3", orig_cte."LogProba_0" AS "LogProba_0", orig_cte."LogProba_1" AS "LogProba_1", orig_cte."LogProba_2" AS "LogProba_2", orig_cte."LogProba_3" AS "LogProba_3", orig_cte."Decision" AS "Decision", orig_cte."DecisionProba" AS "DecisionProba", max_select."KEY_m" AS "KEY_m", max_select."max_Proba" AS "max_Proba" 
FROM orig_cte LEFT OUTER JOIN (SELECT score_class_union."KEY_u" AS "KEY_m", max(score_class_union."Proba") AS "max_Proba" 
FROM score_class_union GROUP BY score_class_union."KEY_u") AS max_select ON orig_cte."KEY" = max_select."KEY_m"), 
union_with_max AS 
(SELECT score_class_union."KEY_u" AS "KEY_u", score_class_union.class AS class, score_class_union."LogProba" AS "LogProba", score_class_union."Proba" AS "Proba", score_class_union."Score" AS "Score", score_max."KEY" AS "KEY", score_max."Score_0" AS "Score_0", score_max."Score_1" AS "Score_1", score_max."Score_2" AS "Score_2", score_max."Score_3" AS "Score_3", score_max."Proba_0" AS "Proba_0", score_max."Proba_1" AS "Proba_1", score_max."Proba_2" AS "Proba_2", score_max."Proba_3" AS "Proba_3", score_max."LogProba_0" AS "LogProba_0", score_max."LogProba_1" AS "LogProba_1", score_max."LogProba_2" AS "LogProba_2", score_max."LogProba_3" AS "LogProba_3", score_max."Decision" AS "Decision", score_max."DecisionProba" AS "DecisionProba", score_max."KEY_m" AS "KEY_m", score_max."max_Proba" AS "max_Proba" 
FROM score_class_union LEFT OUTER JOIN score_max ON score_class_union."KEY_u" = score_max."KEY"), 
arg_max_cte AS 
(SELECT score_max."KEY" AS "KEY", score_max."Score_0" AS "Score_0", score_max."Score_1" AS "Score_1", score_max."Score_2" AS "Score_2", score_max."Score_3" AS "Score_3", score_max."Proba_0" AS "Proba_0", score_max."Proba_1" AS "Proba_1", score_max."Proba_2" AS "Proba_2", score_max."Proba_3" AS "Proba_3", score_max."LogProba_0" AS "LogProba_0", score_max."LogProba_1" AS "LogProba_1", score_max."LogProba_2" AS "LogProba_2", score_max."LogProba_3" AS "LogProba_3", score_max."Decision" AS "Decision", score_max."DecisionProba" AS "DecisionProba", score_max."KEY_m" AS "KEY_m", score_max."max_Proba" AS "max_Proba", "arg_max_t_Proba"."KEY_Proba" AS "KEY_Proba", "arg_max_t_Proba"."arg_max_Proba" AS "arg_max_Proba" 
FROM score_max LEFT OUTER JOIN (SELECT union_with_max."KEY" AS "KEY_Proba", min(union_with_max.class) AS "arg_max_Proba" 
FROM union_with_max 
WHERE union_with_max."max_Proba" <= union_with_max."Proba" GROUP BY union_with_max."KEY") AS "arg_max_t_Proba" ON score_max."KEY" = "arg_max_t_Proba"."KEY_Proba")
 SELECT arg_max_cte."KEY" AS "KEY", arg_max_cte."Score_0" AS "Score_0", arg_max_cte."Score_1" AS "Score_1", arg_max_cte."Score_2" AS "Score_2", arg_max_cte."Score_3" AS "Score_3", arg_max_cte."Proba_0" AS "Proba_0", arg_max_cte."Proba_1" AS "Proba_1", arg_max_cte."Proba_2" AS "Proba_2", arg_max_cte."Proba_3" AS "Proba_3", CASE WHEN (arg_max_cte."Proba_0" IS NULL OR arg_max_cte."Proba_0" > 0.0) THEN ln(arg_max_cte."Proba_0") ELSE -1.79769313486231e+308 END AS "LogProba_0", CASE WHEN (arg_max_cte."Proba_1" IS NULL OR arg_max_cte."Proba_1" > 0.0) THEN ln(arg_max_cte."Proba_1") ELSE -1.79769313486231e+308 END AS "LogProba_1", CASE WHEN (arg_max_cte."Proba_2" IS NULL OR arg_max_cte."Proba_2" > 0.0) THEN ln(arg_max_cte."Proba_2") ELSE -1.79769313486231e+308 END AS "LogProba_2", CASE WHEN (arg_max_cte."Proba_3" IS NULL OR arg_max_cte."Proba_3" > 0.0) THEN ln(arg_max_cte."Proba_3") ELSE -1.79769313486231e+308 END AS "LogProba_3", arg_max_cte."arg_max_Proba" AS "Decision", arg_max_cte."max_Proba" AS "DecisionProba" 
FROM arg_max_cte