-- This SQL code was generated by sklearn2sql (development version).
-- Copyright 2017

WITH `RawScores` AS 
(SELECT `ADS`.`KEY` AS `KEY`, CAST(NULL AS FLOAT) AS `LogProba_0`, CAST(NULL AS FLOAT) AS `Proba_0`, -0.446287102628 + (-0.5 * 1.19305277998 - (0.5 * (CAST(`ADS`.`Feature_0` AS FLOAT) - 0.759782514557) * (CAST(`ADS`.`Feature_0` AS FLOAT) - 0.759782514557)) / 0.524754740534) + (-0.5 * 1.50093302867 - (0.5 * (CAST(`ADS`.`Feature_1` AS FLOAT) - 0.0109930197628) * (CAST(`ADS`.`Feature_1` AS FLOAT) - 0.0109930197628)) / 0.713948792974) + (-0.5 * 1.68176292514 - (0.5 * (CAST(`ADS`.`Feature_2` AS FLOAT) - 0.141151622244) * (CAST(`ADS`.`Feature_2` AS FLOAT) - 0.141151622244)) / 0.855461541329) + (-0.5 * 2.11595568459 - (0.5 * (CAST(`ADS`.`Feature_3` AS FLOAT) - -0.0984332526653) * (CAST(`ADS`.`Feature_3` AS FLOAT) - -0.0984332526653)) / 1.32059001551) + (-0.5 * 1.98790380649 - (0.5 * (CAST(`ADS`.`Feature_4` AS FLOAT) - -0.485527495687) * (CAST(`ADS`.`Feature_4` AS FLOAT) - -0.485527495687)) / 1.16186531068) + (-0.5 * 2.49210934236 - (0.5 * (CAST(`ADS`.`Feature_5` AS FLOAT) - 0.117501035442) * (CAST(`ADS`.`Feature_5` AS FLOAT) - 0.117501035442)) / 1.92366510636) + (-0.5 * 1.6049614015 - (0.5 * (CAST(`ADS`.`Feature_6` AS FLOAT) - 0.701297720045) * (CAST(`ADS`.`Feature_6` AS FLOAT) - 0.701297720045)) / 0.792220382689) + (-0.5 * -1.00431351349 - (0.5 * (CAST(`ADS`.`Feature_7` AS FLOAT) - 0.30765626138) * (CAST(`ADS`.`Feature_7` AS FLOAT) - 0.30765626138)) / 0.0582978199547) + (-0.5 * 1.33051158763 - (0.5 * (CAST(`ADS`.`Feature_8` AS FLOAT) - -0.0737035768005) * (CAST(`ADS`.`Feature_8` AS FLOAT) - -0.0737035768005)) / 0.602079682921) + (-0.5 * 0.685751668792 - (0.5 * (CAST(`ADS`.`Feature_9` AS FLOAT) - -0.810364347577) * (CAST(`ADS`.`Feature_9` AS FLOAT) - -0.810364347577)) / 0.315964505012) AS `Score_0`, CAST(NULL AS FLOAT) AS `LogProba_1`, CAST(NULL AS FLOAT) AS `Proba_1`, -1.02165124753 + (-0.5 * 2.20546917865 - (0.5 * (CAST(`ADS`.`Feature_0` AS FLOAT) - -1.33441729158) * (CAST(`ADS`.`Feature_0` AS FLOAT) - -1.33441729158)) / 1.44425282577) + (-0.5 * 1.75136153255 - (0.5 * (CAST(`ADS`.`Feature_1` AS FLOAT) - 0.553541505667) * (CAST(`ADS`.`Feature_1` AS FLOAT) - 0.553541505667)) / 0.917121302239) + (-0.5 * 2.91545507179 - (0.5 * (CAST(`ADS`.`Feature_2` AS FLOAT) - -0.096503377997) * (CAST(`ADS`.`Feature_2` AS FLOAT) - -0.096503377997)) / 2.93755618291) + (-0.5 * 1.86187276689 - (0.5 * (CAST(`ADS`.`Feature_3` AS FLOAT) - 0.281854097715) * (CAST(`ADS`.`Feature_3` AS FLOAT) - 0.281854097715)) / 1.02428591394) + (-0.5 * 1.68174965287 - (0.5 * (CAST(`ADS`.`Feature_4` AS FLOAT) - -0.331129975216) * (CAST(`ADS`.`Feature_4` AS FLOAT) - -0.331129975216)) / 0.855450187494) + (-0.5 * 2.63601432629 - (0.5 * (CAST(`ADS`.`Feature_5` AS FLOAT) - 0.359346364257) * (CAST(`ADS`.`Feature_5` AS FLOAT) - 0.359346364257)) / 2.22139918282) + (-0.5 * 2.12037507776 - (0.5 * (CAST(`ADS`.`Feature_6` AS FLOAT) - -0.112349208081) * (CAST(`ADS`.`Feature_6` AS FLOAT) - -0.112349208081)) / 1.32643913727) + (-0.5 * 0.619804272264 - (0.5 * (CAST(`ADS`.`Feature_7` AS FLOAT) - -0.511454383114) * (CAST(`ADS`.`Feature_7` AS FLOAT) - -0.511454383114)) / 0.295799684843) + (-0.5 * 2.25469084726 - (0.5 * (CAST(`ADS`.`Feature_8` AS FLOAT) - 0.732321808811) * (CAST(`ADS`.`Feature_8` AS FLOAT) - 0.732321808811)) / 1.51711996984) + (-0.5 * 2.70431240186 - (0.5 * (CAST(`ADS`.`Feature_9` AS FLOAT) - 1.29369269141) * (CAST(`ADS`.`Feature_9` AS FLOAT) - 1.29369269141)) / 2.37841746406) AS `Score_1` 
FROM `BinaryClass_10` AS `ADS`), 
`orig_cte` AS 
(SELECT `RawScores`.`KEY` AS `KEY`, `RawScores`.`Score_0` AS `Score_0`, `RawScores`.`Score_1` AS `Score_1`, `RawScores`.`Proba_0` AS `Proba_0`, `RawScores`.`Proba_1` AS `Proba_1`, `RawScores`.`LogProba_0` AS `LogProba_0`, `RawScores`.`LogProba_1` AS `LogProba_1`, CAST(NULL AS INT) AS `Decision`, CAST(NULL AS FLOAT) AS `DecisionProba` 
FROM `RawScores`), 
`score_class_union` AS 
(SELECT `scu`.`KEY_u` AS `KEY_u`, `scu`.`class` AS `class`, `scu`.`LogProba` AS `LogProba`, `scu`.`Proba` AS `Proba`, `scu`.`Score` AS `Score` 
FROM (SELECT `orig_cte`.`KEY` AS `KEY_u`, 0 AS `class`, `orig_cte`.`LogProba_0` AS `LogProba`, `orig_cte`.`Proba_0` AS `Proba`, `orig_cte`.`Score_0` AS `Score` 
FROM `orig_cte` UNION ALL SELECT `orig_cte`.`KEY` AS `KEY_u`, 1 AS `class`, `orig_cte`.`LogProba_1` AS `LogProba`, `orig_cte`.`Proba_1` AS `Proba`, `orig_cte`.`Score_1` AS `Score` 
FROM `orig_cte`) AS `scu`), 
`score_max` AS 
(SELECT `orig_cte`.`KEY` AS `KEY`, `orig_cte`.`Score_0` AS `Score_0`, `orig_cte`.`Score_1` AS `Score_1`, `orig_cte`.`Proba_0` AS `Proba_0`, `orig_cte`.`Proba_1` AS `Proba_1`, `orig_cte`.`LogProba_0` AS `LogProba_0`, `orig_cte`.`LogProba_1` AS `LogProba_1`, `orig_cte`.`Decision` AS `Decision`, `orig_cte`.`DecisionProba` AS `DecisionProba`, `max_select`.`KEY_m` AS `KEY_m`, `max_select`.`max_Score` AS `max_Score` 
FROM `orig_cte` LEFT OUTER JOIN (SELECT `score_class_union`.`KEY_u` AS `KEY_m`, max(`score_class_union`.`Score`) AS `max_Score` 
FROM `score_class_union` GROUP BY `score_class_union`.`KEY_u`) AS `max_select` ON `orig_cte`.`KEY` = `max_select`.`KEY_m`), 
`score_soft_max_deltas` AS 
(SELECT `score_max`.`KEY` AS `KEY`, `score_max`.`Score_0` AS `Score_0`, `score_max`.`Score_1` AS `Score_1`, `score_max`.`Proba_0` AS `Proba_0`, `score_max`.`Proba_1` AS `Proba_1`, `score_max`.`LogProba_0` AS `LogProba_0`, `score_max`.`LogProba_1` AS `LogProba_1`, `score_max`.`Decision` AS `Decision`, `score_max`.`DecisionProba` AS `DecisionProba`, `score_max`.`KEY_m` AS `KEY_m`, `score_max`.`max_Score` AS `max_Score`, exp(`score_max`.`Score_0` - `score_max`.`max_Score`) AS `exp_delta_Score_0`, exp(`score_max`.`Score_1` - `score_max`.`max_Score`) AS `exp_delta_Score_1` 
FROM `score_max`), 
`score_class_union_soft` AS 
(SELECT `soft_scu`.`KEY` AS `KEY`, `soft_scu`.`class` AS `class`, `soft_scu`.`exp_delta_Score` AS `exp_delta_Score` 
FROM (SELECT `score_soft_max_deltas`.`KEY` AS `KEY`, 0 AS `class`, `score_soft_max_deltas`.`exp_delta_Score_0` AS `exp_delta_Score` 
FROM `score_soft_max_deltas` UNION ALL SELECT `score_soft_max_deltas`.`KEY` AS `KEY`, 1 AS `class`, `score_soft_max_deltas`.`exp_delta_Score_1` AS `exp_delta_Score` 
FROM `score_soft_max_deltas`) AS `soft_scu`), 
`score_soft_max` AS 
(SELECT `score_soft_max_deltas`.`KEY` AS `KEY`, `score_soft_max_deltas`.`Score_0` AS `Score_0`, `score_soft_max_deltas`.`Score_1` AS `Score_1`, `score_soft_max_deltas`.`Proba_0` AS `Proba_0`, `score_soft_max_deltas`.`Proba_1` AS `Proba_1`, `score_soft_max_deltas`.`LogProba_0` AS `LogProba_0`, `score_soft_max_deltas`.`LogProba_1` AS `LogProba_1`, `score_soft_max_deltas`.`Decision` AS `Decision`, `score_soft_max_deltas`.`DecisionProba` AS `DecisionProba`, `score_soft_max_deltas`.`KEY_m` AS `KEY_m`, `score_soft_max_deltas`.`max_Score` AS `max_Score`, `score_soft_max_deltas`.`exp_delta_Score_0` AS `exp_delta_Score_0`, `score_soft_max_deltas`.`exp_delta_Score_1` AS `exp_delta_Score_1`, `sum_exp_t`.`KEY_sum` AS `KEY_sum`, `sum_exp_t`.`sum_ExpDeltaScore` AS `sum_ExpDeltaScore` 
FROM `score_soft_max_deltas` LEFT OUTER JOIN (SELECT `score_class_union_soft`.`KEY` AS `KEY_sum`, sum(`score_class_union_soft`.`exp_delta_Score`) AS `sum_ExpDeltaScore` 
FROM `score_class_union_soft` GROUP BY `score_class_union_soft`.`KEY`) AS `sum_exp_t` ON `score_soft_max_deltas`.`KEY` = `sum_exp_t`.`KEY_sum`), 
`union_with_max` AS 
(SELECT `score_class_union`.`KEY_u` AS `KEY_u`, `score_class_union`.`class` AS `class`, `score_class_union`.`LogProba` AS `LogProba`, `score_class_union`.`Proba` AS `Proba`, `score_class_union`.`Score` AS `Score`, `score_soft_max`.`KEY` AS `KEY`, `score_soft_max`.`Score_0` AS `Score_0`, `score_soft_max`.`Score_1` AS `Score_1`, `score_soft_max`.`Proba_0` AS `Proba_0`, `score_soft_max`.`Proba_1` AS `Proba_1`, `score_soft_max`.`LogProba_0` AS `LogProba_0`, `score_soft_max`.`LogProba_1` AS `LogProba_1`, `score_soft_max`.`Decision` AS `Decision`, `score_soft_max`.`DecisionProba` AS `DecisionProba`, `score_soft_max`.`KEY_m` AS `KEY_m`, `score_soft_max`.`max_Score` AS `max_Score`, `score_soft_max`.`exp_delta_Score_0` AS `exp_delta_Score_0`, `score_soft_max`.`exp_delta_Score_1` AS `exp_delta_Score_1`, `score_soft_max`.`KEY_sum` AS `KEY_sum`, `score_soft_max`.`sum_ExpDeltaScore` AS `sum_ExpDeltaScore` 
FROM `score_class_union` LEFT OUTER JOIN `score_soft_max` ON `score_class_union`.`KEY_u` = `score_soft_max`.`KEY`), 
`arg_max_cte` AS 
(SELECT `score_soft_max`.`KEY` AS `KEY`, `score_soft_max`.`Score_0` AS `Score_0`, `score_soft_max`.`Score_1` AS `Score_1`, `score_soft_max`.`Proba_0` AS `Proba_0`, `score_soft_max`.`Proba_1` AS `Proba_1`, `score_soft_max`.`LogProba_0` AS `LogProba_0`, `score_soft_max`.`LogProba_1` AS `LogProba_1`, `score_soft_max`.`Decision` AS `Decision`, `score_soft_max`.`DecisionProba` AS `DecisionProba`, `score_soft_max`.`KEY_m` AS `KEY_m`, `score_soft_max`.`max_Score` AS `max_Score`, `score_soft_max`.`exp_delta_Score_0` AS `exp_delta_Score_0`, `score_soft_max`.`exp_delta_Score_1` AS `exp_delta_Score_1`, `score_soft_max`.`KEY_sum` AS `KEY_sum`, `score_soft_max`.`sum_ExpDeltaScore` AS `sum_ExpDeltaScore`, `arg_max_t_Score`.`KEY_Score` AS `KEY_Score`, `arg_max_t_Score`.`arg_max_Score` AS `arg_max_Score`, `soft_max_comp`.`KEY_softmax` AS `KEY_softmax`, `soft_max_comp`.`SoftProba_0` AS `SoftProba_0`, `soft_max_comp`.`SoftProba_1` AS `SoftProba_1` 
FROM `score_soft_max` LEFT OUTER JOIN (SELECT `union_with_max`.`KEY` AS `KEY_Score`, min(`union_with_max`.`class`) AS `arg_max_Score` 
FROM `union_with_max` 
WHERE `union_with_max`.`max_Score` <= `union_with_max`.`Score` GROUP BY `union_with_max`.`KEY`) AS `arg_max_t_Score` ON `score_soft_max`.`KEY` = `arg_max_t_Score`.`KEY_Score` LEFT OUTER JOIN (SELECT `score_soft_max`.`KEY` AS `KEY_softmax`, `score_soft_max`.`exp_delta_Score_0` / `score_soft_max`.`sum_ExpDeltaScore` AS `SoftProba_0`, `score_soft_max`.`exp_delta_Score_1` / `score_soft_max`.`sum_ExpDeltaScore` AS `SoftProba_1` 
FROM `score_soft_max`) AS `soft_max_comp` ON `soft_max_comp`.`KEY_softmax` = `arg_max_t_Score`.`KEY_Score`)
 SELECT `arg_max_cte`.`KEY` AS `KEY`, CAST(NULL AS FLOAT) AS `Score_0`, CAST(NULL AS FLOAT) AS `Score_1`, `arg_max_cte`.`SoftProba_0` AS `Proba_0`, `arg_max_cte`.`SoftProba_1` AS `Proba_1`, CASE WHEN (`arg_max_cte`.`SoftProba_0` IS NULL OR `arg_max_cte`.`SoftProba_0` > 0.0) THEN log(`arg_max_cte`.`SoftProba_0`) ELSE -1.79769313486231e+308 END AS `LogProba_0`, CASE WHEN (`arg_max_cte`.`SoftProba_1` IS NULL OR `arg_max_cte`.`SoftProba_1` > 0.0) THEN log(`arg_max_cte`.`SoftProba_1`) ELSE -1.79769313486231e+308 END AS `LogProba_1`, `arg_max_cte`.`arg_max_Score` AS `Decision`, CASE WHEN (`arg_max_cte`.`SoftProba_0` <= `arg_max_cte`.`SoftProba_1`) THEN `arg_max_cte`.`SoftProba_1` ELSE `arg_max_cte`.`SoftProba_0` END AS `DecisionProba` 
FROM `arg_max_cte`