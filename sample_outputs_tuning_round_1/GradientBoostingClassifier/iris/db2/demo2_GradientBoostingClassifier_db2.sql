-- This SQL code was generated by sklearn2sql (development version).
-- Copyright 2017

WITH "DT_node_lookup" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_3" <= 0.699999988079071) THEN 1 ELSE 2 END AS node_id_2 
FROM iris AS "ADS"), 
"DT_node_data" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values"."count" AS "count", "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 0 AS node_id, 'Feature_3' AS feature, 0.699999988079071 AS threshold, 37 AS "count", 0 AS depth, NULL AS parent_id, 0.031538110408678585 AS "Estimator" FROM SYSIBM.SYSDUMMY1 UNION ALL SELECT 1 AS node_id, NULL AS feature, CAST(NULL AS DOUBLE) AS threshold, 14 AS "count", 1 AS depth, 0 AS parent_id, 1.9221143801125973 AS "Estimator" FROM SYSIBM.SYSDUMMY1 UNION ALL SELECT 2 AS node_id, NULL AS feature, CAST(NULL AS DOUBLE) AS threshold, 23 AS "count", 1 AS depth, 0 AS parent_id, -1.0206793743918985 AS "Estimator" FROM SYSIBM.SYSDUMMY1) AS "Values"), 
"DT_Output" AS 
(SELECT "DT_node_lookup"."KEY" AS "KEY", "DT_node_lookup".node_id_2 AS node_id_2, "DT_node_data".node_id AS node_id, "DT_node_data".feature AS feature, "DT_node_data".threshold AS threshold, "DT_node_data"."count" AS "count", "DT_node_data".depth AS depth, "DT_node_data".parent_id AS parent_id, "DT_node_data"."Estimator" AS "Estimator" 
FROM "DT_node_lookup" LEFT OUTER JOIN "DT_node_data" ON "DT_node_lookup".node_id_2 = "DT_node_data".node_id), 
"GB_Tree_0_0" AS 
(SELECT "DT_Output"."KEY" AS "KEY", "DT_Output"."Estimator" AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2" 
FROM "DT_Output"), 
"DT_node_lookup_1" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_2" <= 2.700000047683716) THEN 1 ELSE CASE WHEN ("ADS"."Feature_2" <= 4.949999809265137) THEN 3 ELSE CASE WHEN ("ADS"."Feature_1" <= 2.950000047683716) THEN 5 ELSE 6 END END END AS node_id_2 
FROM iris AS "ADS"), 
"DT_node_data_1" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values"."count" AS "count", "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 0 AS node_id, 'Feature_2' AS feature, 2.700000047683716 AS threshold, 37 AS "count", 0 AS depth, NULL AS parent_id, 0.0678874113482499 AS "Estimator" FROM SYSIBM.SYSDUMMY1 UNION ALL SELECT 1 AS node_id, NULL AS feature, CAST(NULL AS DOUBLE) AS threshold, 14 AS "count", 1 AS depth, 0 AS parent_id, -1.0116899038350862 AS "Estimator" FROM SYSIBM.SYSDUMMY1 UNION ALL SELECT 2 AS node_id, 'Feature_2' AS feature, 4.949999809265137 AS threshold, 23 AS "count", 1 AS depth, 0 AS parent_id, 0.3167976503119444 AS "Estimator" FROM SYSIBM.SYSDUMMY1 UNION ALL SELECT 3 AS node_id, NULL AS feature, CAST(NULL AS DOUBLE) AS threshold, 15 AS "count", 2 AS depth, 2 AS parent_id, 1.7596903960122918 AS "Estimator" FROM SYSIBM.SYSDUMMY1 UNION ALL SELECT 4 AS node_id, 'Feature_1' AS feature, 2.950000047683716 AS threshold, 8 AS "count", 2 AS depth, 2 AS parent_id, -0.2538545236010993 AS "Estimator" FROM SYSIBM.SYSDUMMY1 UNION ALL SELECT 5 AS node_id, NULL AS feature, CAST(NULL AS DOUBLE) AS threshold, 5 AS "count", 3 AS depth, 4 AS parent_id, -1.0732858758493673 AS "Estimator" FROM SYSIBM.SYSDUMMY1 UNION ALL SELECT 6 AS node_id, NULL AS feature, CAST(NULL AS DOUBLE) AS threshold, 3 AS "count", 3 AS depth, 4 AS parent_id, -0.12896045189548083 AS "Estimator" FROM SYSIBM.SYSDUMMY1) AS "Values"), 
"DT_Output_1" AS 
(SELECT "DT_node_lookup_1"."KEY" AS "KEY", "DT_node_lookup_1".node_id_2 AS node_id_2, "DT_node_data_1".node_id AS node_id, "DT_node_data_1".feature AS feature, "DT_node_data_1".threshold AS threshold, "DT_node_data_1"."count" AS "count", "DT_node_data_1".depth AS depth, "DT_node_data_1".parent_id AS parent_id, "DT_node_data_1"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_1" LEFT OUTER JOIN "DT_node_data_1" ON "DT_node_lookup_1".node_id_2 = "DT_node_data_1".node_id), 
"GB_Tree_0_1" AS 
(SELECT "DT_Output_1"."KEY" AS "KEY", 0.0 AS "Score_0", "DT_Output_1"."Estimator" AS "Score_1", 0.0 AS "Score_2" 
FROM "DT_Output_1"), 
"DT_node_lookup_2" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_2" <= 4.949999809265137) THEN 1 ELSE CASE WHEN ("ADS"."Feature_2" <= 5.150000095367432) THEN CASE WHEN ("ADS"."Feature_1" <= 2.75) THEN 4 ELSE 5 END ELSE CASE WHEN ("ADS"."Feature_1" <= 2.950000047683716) THEN 7 ELSE 8 END END END AS node_id_2 
FROM iris AS "ADS"), 
"DT_node_data_2" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values"."count" AS "count", "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 0 AS node_id, 'Feature_2' AS feature, 4.949999809265137 AS threshold, 37 AS "count", 0 AS depth, NULL AS parent_id, -0.0936218194766985 AS "Estimator" FROM SYSIBM.SYSDUMMY1 UNION ALL SELECT 1 AS node_id, NULL AS feature, CAST(NULL AS DOUBLE) AS threshold, 29 AS "count", 1 AS depth, 0 AS parent_id, -0.921674305262979 AS "Estimator" FROM SYSIBM.SYSDUMMY1 UNION ALL SELECT 2 AS node_id, 'Feature_2' AS feature, 5.150000095367432 AS threshold, 8 AS "count", 1 AS depth, 0 AS parent_id, 0.5699588138640693 AS "Estimator" FROM SYSIBM.SYSDUMMY1 UNION ALL SELECT 3 AS node_id, 'Feature_1' AS feature, 2.75 AS threshold, 3 AS "count", 2 AS depth, 2 AS parent_id, 0.3611895067266207 AS "Estimator" FROM SYSIBM.SYSDUMMY1 UNION ALL SELECT 4 AS node_id, NULL AS feature, CAST(NULL AS DOUBLE) AS threshold, 2 AS "count", 3 AS depth, 3 AS parent_id, 2.1577420541129206 AS "Estimator" FROM SYSIBM.SYSDUMMY1 UNION ALL SELECT 5 AS node_id, NULL AS feature, CAST(NULL AS DOUBLE) AS threshold, 1 AS "count", 3 AS depth, 3 AS parent_id, -0.9503466391083754 AS "Estimator" FROM SYSIBM.SYSDUMMY1 UNION ALL SELECT 6 AS node_id, 'Feature_1' AS feature, 2.950000047683716 AS threshold, 5 AS "count", 2 AS depth, 2 AS parent_id, 0.6952203981465386 AS "Estimator" FROM SYSIBM.SYSDUMMY1 UNION ALL SELECT 7 AS node_id, NULL AS feature, CAST(NULL AS DOUBLE) AS threshold, 3 AS "count", 3 AS depth, 6 AS parent_id, 2.1577420541129206 AS "Estimator" FROM SYSIBM.SYSDUMMY1 UNION ALL SELECT 8 AS node_id, NULL AS feature, CAST(NULL AS DOUBLE) AS threshold, 2 AS "count", 3 AS depth, 6 AS parent_id, 2.233377353427502 AS "Estimator" FROM SYSIBM.SYSDUMMY1) AS "Values"), 
"DT_Output_2" AS 
(SELECT "DT_node_lookup_2"."KEY" AS "KEY", "DT_node_lookup_2".node_id_2 AS node_id_2, "DT_node_data_2".node_id AS node_id, "DT_node_data_2".feature AS feature, "DT_node_data_2".threshold AS threshold, "DT_node_data_2"."count" AS "count", "DT_node_data_2".depth AS depth, "DT_node_data_2".parent_id AS parent_id, "DT_node_data_2"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_2" LEFT OUTER JOIN "DT_node_data_2" ON "DT_node_lookup_2".node_id_2 = "DT_node_data_2".node_id), 
"GB_Tree_0_2" AS 
(SELECT "DT_Output_2"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", "DT_Output_2"."Estimator" AS "Score_2" 
FROM "DT_Output_2"), 
"DT_node_lookup_3" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_3" <= 0.699999988079071) THEN 1 ELSE CASE WHEN ("ADS"."Feature_3" <= 1.6500000953674316) THEN CASE WHEN ("ADS"."Feature_2" <= 5.400000095367432) THEN 4 ELSE 5 END ELSE CASE WHEN ("ADS"."Feature_3" <= 1.75) THEN 7 ELSE 8 END END END AS node_id_2 
FROM iris AS "ADS"), 
"DT_node_data_3" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values"."count" AS "count", "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 0 AS node_id, 'Feature_3' AS feature, 0.699999988079071 AS threshold, 37 AS "count", 0 AS depth, NULL AS parent_id, 0.028022920584068852 AS "Estimator" FROM SYSIBM.SYSDUMMY1 UNION ALL SELECT 1 AS node_id, NULL AS feature, CAST(NULL AS DOUBLE) AS threshold, 14 AS "count", 1 AS depth, 0 AS parent_id, 1.6066227534256898 AS "Estimator" FROM SYSIBM.SYSDUMMY1 UNION ALL SELECT 2 AS node_id, 'Feature_3' AS feature, 1.6500000953674316 AS threshold, 23 AS "count", 1 AS depth, 0 AS parent_id, -0.3110375882114687 AS "Estimator" FROM SYSIBM.SYSDUMMY1 UNION ALL SELECT 3 AS node_id, 'Feature_2' AS feature, 5.400000095367432 AS threshold, 16 AS "count", 2 AS depth, 2 AS parent_id, -0.30946821196516616 AS "Estimator" FROM SYSIBM.SYSDUMMY1 UNION ALL SELECT 4 AS node_id, NULL AS feature, CAST(NULL AS DOUBLE) AS threshold, 15 AS "count", 3 AS depth, 3 AS parent_id, -0.9660440340149696 AS "Estimator" FROM SYSIBM.SYSDUMMY1 UNION ALL SELECT 5 AS node_id, NULL AS feature, CAST(NULL AS DOUBLE) AS threshold, 1 AS "count", 3 AS depth, 3 AS parent_id, -0.9565317641932375 AS "Estimator" FROM SYSIBM.SYSDUMMY1 UNION ALL SELECT 6 AS node_id, 'Feature_3' AS feature, 1.75 AS threshold, 7 AS "count", 2 AS depth, 2 AS parent_id, -0.3146247339173028 AS "Estimator" FROM SYSIBM.SYSDUMMY1 UNION ALL SELECT 7 AS node_id, NULL AS feature, CAST(NULL AS DOUBLE) AS threshold, 1 AS "count", 3 AS depth, 6 AS parent_id, -1.0021028678017065 AS "Estimator" FROM SYSIBM.SYSDUMMY1 UNION ALL SELECT 8 AS node_id, NULL AS feature, CAST(NULL AS DOUBLE) AS threshold, 6 AS "count", 3 AS depth, 6 AS parent_id, -0.9680415647319921 AS "Estimator" FROM SYSIBM.SYSDUMMY1) AS "Values"), 
"DT_Output_3" AS 
(SELECT "DT_node_lookup_3"."KEY" AS "KEY", "DT_node_lookup_3".node_id_2 AS node_id_2, "DT_node_data_3".node_id AS node_id, "DT_node_data_3".feature AS feature, "DT_node_data_3".threshold AS threshold, "DT_node_data_3"."count" AS "count", "DT_node_data_3".depth AS depth, "DT_node_data_3".parent_id AS parent_id, "DT_node_data_3"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_3" LEFT OUTER JOIN "DT_node_data_3" ON "DT_node_lookup_3".node_id_2 = "DT_node_data_3".node_id), 
"GB_Tree_1_0" AS 
(SELECT "DT_Output_3"."KEY" AS "KEY", "DT_Output_3"."Estimator" AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2" 
FROM "DT_Output_3"), 
"DT_node_lookup_4" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_2" <= 2.700000047683716) THEN 1 ELSE CASE WHEN ("ADS"."Feature_2" <= 4.949999809265137) THEN 3 ELSE CASE WHEN ("ADS"."Feature_2" <= 5.150000095367432) THEN 5 ELSE 6 END END END AS node_id_2 
FROM iris AS "ADS"), 
"DT_node_data_4" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values"."count" AS "count", "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 0 AS node_id, 'Feature_2' AS feature, 2.700000047683716 AS threshold, 37 AS "count", 0 AS depth, NULL AS parent_id, 0.061006869380171594 AS "Estimator" FROM SYSIBM.SYSDUMMY1 UNION ALL SELECT 1 AS node_id, NULL AS feature, CAST(NULL AS DOUBLE) AS threshold, 14 AS "count", 1 AS depth, 0 AS parent_id, -0.9586828691462356 AS "Estimator" FROM SYSIBM.SYSDUMMY1 UNION ALL SELECT 2 AS node_id, 'Feature_2' AS feature, 4.949999809265137 AS threshold, 23 AS "count", 1 AS depth, 0 AS parent_id, 0.28355107041889327 AS "Estimator" FROM SYSIBM.SYSDUMMY1 UNION ALL SELECT 3 AS node_id, NULL AS feature, CAST(NULL AS DOUBLE) AS threshold, 15 AS "count", 2 AS depth, 2 AS parent_id, 1.5006781635197486 AS "Estimator" FROM SYSIBM.SYSDUMMY1 UNION ALL SELECT 4 AS node_id, 'Feature_2' AS feature, 5.150000095367432 AS threshold, 8 AS "count", 2 AS depth, 2 AS parent_id, -0.22683392632643035 AS "Estimator" FROM SYSIBM.SYSDUMMY1 UNION ALL SELECT 5 AS node_id, NULL AS feature, CAST(NULL AS DOUBLE) AS threshold, 3 AS "count", 3 AS depth, 4 AS parent_id, -0.07508645969699212 AS "Estimator" FROM SYSIBM.SYSDUMMY1 UNION ALL SELECT 6 AS node_id, NULL AS feature, CAST(NULL AS DOUBLE) AS threshold, 5 AS "count", 3 AS depth, 4 AS parent_id, -1.0220601163626506 AS "Estimator" FROM SYSIBM.SYSDUMMY1) AS "Values"), 
"DT_Output_4" AS 
(SELECT "DT_node_lookup_4"."KEY" AS "KEY", "DT_node_lookup_4".node_id_2 AS node_id_2, "DT_node_data_4".node_id AS node_id, "DT_node_data_4".feature AS feature, "DT_node_data_4".threshold AS threshold, "DT_node_data_4"."count" AS "count", "DT_node_data_4".depth AS depth, "DT_node_data_4".parent_id AS parent_id, "DT_node_data_4"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_4" LEFT OUTER JOIN "DT_node_data_4" ON "DT_node_lookup_4".node_id_2 = "DT_node_data_4".node_id), 
"GB_Tree_1_1" AS 
(SELECT "DT_Output_4"."KEY" AS "KEY", 0.0 AS "Score_0", "DT_Output_4"."Estimator" AS "Score_1", 0.0 AS "Score_2" 
FROM "DT_Output_4"), 
"DT_node_lookup_5" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_2" <= 4.949999809265137) THEN 1 ELSE CASE WHEN ("ADS"."Feature_1" <= 2.950000047683716) THEN CASE WHEN ("ADS"."Feature_2" <= 5.150000095367432) THEN 4 ELSE 5 END ELSE CASE WHEN ("ADS"."Feature_0" <= 6.800000190734863) THEN 7 ELSE 8 END END END AS node_id_2 
FROM iris AS "ADS"), 
"DT_node_data_5" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values"."count" AS "count", "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 0 AS node_id, 'Feature_2' AS feature, 4.949999809265137 AS threshold, 37 AS "count", 0 AS depth, NULL AS parent_id, -0.08390205104362924 AS "Estimator" FROM SYSIBM.SYSDUMMY1 UNION ALL SELECT 1 AS node_id, NULL AS feature, CAST(NULL AS DOUBLE) AS threshold, 29 AS "count", 1 AS depth, 0 AS parent_id, -0.8867839563346263 AS "Estimator" FROM SYSIBM.SYSDUMMY1 UNION ALL SELECT 2 AS node_id, 'Feature_1' AS feature, 2.950000047683716 AS threshold, 8 AS "count", 1 AS depth, 0 AS parent_id, 0.5117481596333366 AS "Estimator" FROM SYSIBM.SYSDUMMY1 UNION ALL SELECT 3 AS node_id, 'Feature_2' AS feature, 5.150000095367432 AS threshold, 5 AS "count", 2 AS depth, 2 AS parent_id, 0.6246573605606703 AS "Estimator" FROM SYSIBM.SYSDUMMY1 UNION ALL SELECT 4 AS node_id, NULL AS feature, CAST(NULL AS DOUBLE) AS threshold, 2 AS "count", 3 AS depth, 3 AS parent_id, 1.8097137713759754 AS "Estimator" FROM SYSIBM.SYSDUMMY1 UNION ALL SELECT 5 AS node_id, NULL AS feature, CAST(NULL AS DOUBLE) AS threshold, 3 AS "count", 3 AS depth, 3 AS parent_id, 1.7544653216404256 AS "Estimator" FROM SYSIBM.SYSDUMMY1 UNION ALL SELECT 6 AS node_id, 'Feature_0' AS feature, 6.800000190734863 AS threshold, 3 AS "count", 2 AS depth, 2 AS parent_id, 0.32356615808778033 AS "Estimator" FROM SYSIBM.SYSDUMMY1 UNION ALL SELECT 7 AS node_id, NULL AS feature, CAST(NULL AS DOUBLE) AS threshold, 1 AS "count", 3 AS depth, 6 AS parent_id, -0.9377135796708137 AS "Estimator" FROM SYSIBM.SYSDUMMY1 UNION ALL SELECT 8 AS node_id, NULL AS feature, CAST(NULL AS DOUBLE) AS threshold, 2 AS "count", 3 AS depth, 6 AS parent_id, 1.8011916914094361 AS "Estimator" FROM SYSIBM.SYSDUMMY1) AS "Values"), 
"DT_Output_5" AS 
(SELECT "DT_node_lookup_5"."KEY" AS "KEY", "DT_node_lookup_5".node_id_2 AS node_id_2, "DT_node_data_5".node_id AS node_id, "DT_node_data_5".feature AS feature, "DT_node_data_5".threshold AS threshold, "DT_node_data_5"."count" AS "count", "DT_node_data_5".depth AS depth, "DT_node_data_5".parent_id AS parent_id, "DT_node_data_5"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_5" LEFT OUTER JOIN "DT_node_data_5" ON "DT_node_lookup_5".node_id_2 = "DT_node_data_5".node_id), 
"GB_Tree_1_2" AS 
(SELECT "DT_Output_5"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", "DT_Output_5"."Estimator" AS "Score_2" 
FROM "DT_Output_5"), 
"DT_node_lookup_6" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_2" <= 2.700000047683716) THEN 1 ELSE CASE WHEN ("ADS"."Feature_3" <= 1.6500000953674316) THEN CASE WHEN ("ADS"."Feature_2" <= 4.949999809265137) THEN 4 ELSE 5 END ELSE CASE WHEN ("ADS"."Feature_3" <= 1.75) THEN 7 ELSE 8 END END END AS node_id_2 
FROM iris AS "ADS"), 
"DT_node_data_6" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values"."count" AS "count", "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 0 AS node_id, 'Feature_2' AS feature, 2.700000047683716 AS threshold, 37 AS "count", 0 AS depth, NULL AS parent_id, 0.02470703904225872 AS "Estimator" FROM SYSIBM.SYSDUMMY1 UNION ALL SELECT 1 AS node_id, NULL AS feature, CAST(NULL AS DOUBLE) AS threshold, 14 AS "count", 1 AS depth, 0 AS parent_id, 1.396258166846065 AS "Estimator" FROM SYSIBM.SYSDUMMY1 UNION ALL SELECT 2 AS node_id, 'Feature_3' AS feature, 1.6500000953674316 AS threshold, 23 AS "count", 1 AS depth, 0 AS parent_id, -0.27831769063077727 AS "Estimator" FROM SYSIBM.SYSDUMMY1 UNION ALL SELECT 3 AS node_id, 'Feature_2' AS feature, 4.949999809265137 AS threshold, 16 AS "count", 2 AS depth, 2 AS parent_id, -0.27551158577837975 AS "Estimator" FROM SYSIBM.SYSDUMMY1 UNION ALL SELECT 4 AS node_id, NULL AS feature, CAST(NULL AS DOUBLE) AS threshold, 14 AS "count", 3 AS depth, 3 AS parent_id, -0.920504677697228 AS "Estimator" FROM SYSIBM.SYSDUMMY1 UNION ALL SELECT 5 AS node_id, NULL AS feature, CAST(NULL AS DOUBLE) AS threshold, 2 AS "count", 3 AS depth, 3 AS parent_id, -0.9179900132649128 AS "Estimator" FROM SYSIBM.SYSDUMMY1 UNION ALL SELECT 6 AS node_id, 'Feature_3' AS feature, 1.75 AS threshold, 7 AS "count", 2 AS depth, 2 AS parent_id, -0.28473164457911443 AS "Estimator" FROM SYSIBM.SYSDUMMY1 UNION ALL SELECT 7 AS node_id, NULL AS feature, CAST(NULL AS DOUBLE) AS threshold, 1 AS "count", 3 AS depth, 6 AS parent_id, -0.9833822526137973 AS "Estimator" FROM SYSIBM.SYSDUMMY1 UNION ALL SELECT 8 AS node_id, NULL AS feature, CAST(NULL AS DOUBLE) AS threshold, 6 AS "count", 3 AS depth, 6 AS parent_id, -0.9240949977173315 AS "Estimator" FROM SYSIBM.SYSDUMMY1) AS "Values"), 
"DT_Output_6" AS 
(SELECT "DT_node_lookup_6"."KEY" AS "KEY", "DT_node_lookup_6".node_id_2 AS node_id_2, "DT_node_data_6".node_id AS node_id, "DT_node_data_6".feature AS feature, "DT_node_data_6".threshold AS threshold, "DT_node_data_6"."count" AS "count", "DT_node_data_6".depth AS depth, "DT_node_data_6".parent_id AS parent_id, "DT_node_data_6"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_6" LEFT OUTER JOIN "DT_node_data_6" ON "DT_node_lookup_6".node_id_2 = "DT_node_data_6".node_id), 
"GB_Tree_2_0" AS 
(SELECT "DT_Output_6"."KEY" AS "KEY", "DT_Output_6"."Estimator" AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2" 
FROM "DT_Output_6"), 
"DT_node_lookup_7" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_2" <= 2.700000047683716) THEN 1 ELSE CASE WHEN ("ADS"."Feature_2" <= 4.949999809265137) THEN 3 ELSE CASE WHEN ("ADS"."Feature_1" <= 2.950000047683716) THEN 5 ELSE 6 END END END AS node_id_2 
FROM iris AS "ADS"), 
"DT_node_data_7" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values"."count" AS "count", "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 0 AS node_id, 'Feature_2' AS feature, 2.700000047683716 AS threshold, 37 AS "count", 0 AS depth, NULL AS parent_id, 0.05465942784859295 AS "Estimator" FROM SYSIBM.SYSDUMMY1 UNION ALL SELECT 1 AS node_id, NULL AS feature, CAST(NULL AS DOUBLE) AS threshold, 14 AS "count", 1 AS depth, 0 AS parent_id, -0.9149769613590218 AS "Estimator" FROM SYSIBM.SYSDUMMY1 UNION ALL SELECT 2 AS node_id, 'Feature_2' AS feature, 4.949999809265137 AS threshold, 23 AS "count", 1 AS depth, 0 AS parent_id, 0.253120769210388 AS "Estimator" FROM SYSIBM.SYSDUMMY1 UNION ALL SELECT 3 AS node_id, NULL AS feature, CAST(NULL AS DOUBLE) AS threshold, 15 AS "count", 2 AS depth, 2 AS parent_id, 1.3223869282947858 AS "Estimator" FROM SYSIBM.SYSDUMMY1 UNION ALL SELECT 4 AS node_id, 'Feature_1' AS feature, 2.950000047683716 AS threshold, 8 AS "count", 2 AS depth, 2 AS parent_id, -0.2020173848560899 AS "Estimator" FROM SYSIBM.SYSDUMMY1 UNION ALL SELECT 5 AS node_id, NULL AS feature, CAST(NULL AS DOUBLE) AS threshold, 5 AS "count", 3 AS depth, 4 AS parent_id, -0.9674448177531584 AS "Estimator" FROM SYSIBM.SYSDUMMY1 UNION ALL SELECT 6 AS node_id, NULL AS feature, CAST(NULL AS DOUBLE) AS threshold, 3 AS "count", 3 AS depth, 4 AS parent_id, -0.06189903398729294 AS "Estimator" FROM SYSIBM.SYSDUMMY1) AS "Values"), 
"DT_Output_7" AS 
(SELECT "DT_node_lookup_7"."KEY" AS "KEY", "DT_node_lookup_7".node_id_2 AS node_id_2, "DT_node_data_7".node_id AS node_id, "DT_node_data_7".feature AS feature, "DT_node_data_7".threshold AS threshold, "DT_node_data_7"."count" AS "count", "DT_node_data_7".depth AS depth, "DT_node_data_7".parent_id AS parent_id, "DT_node_data_7"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_7" LEFT OUTER JOIN "DT_node_data_7" ON "DT_node_lookup_7".node_id_2 = "DT_node_data_7".node_id), 
"GB_Tree_2_1" AS 
(SELECT "DT_Output_7"."KEY" AS "KEY", 0.0 AS "Score_0", "DT_Output_7"."Estimator" AS "Score_1", 0.0 AS "Score_2" 
FROM "DT_Output_7"), 
"DT_node_lookup_8" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_2" <= 4.949999809265137) THEN CASE WHEN ("ADS"."Feature_2" <= 2.700000047683716) THEN 2 ELSE 3 END ELSE CASE WHEN ("ADS"."Feature_2" <= 5.150000095367432) THEN CASE WHEN ("ADS"."Feature_0" <= 6.5) THEN 6 ELSE 7 END ELSE CASE WHEN ("ADS"."Feature_1" <= 2.950000047683716) THEN 9 ELSE 10 END END END AS node_id_2 
FROM iris AS "ADS"), 
"DT_node_data_8" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values"."count" AS "count", "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 0 AS node_id, 'Feature_2' AS feature, 4.949999809265137 AS threshold, 37 AS "count", 0 AS depth, NULL AS parent_id, -0.0747978733724976 AS "Estimator" FROM SYSIBM.SYSDUMMY1 UNION ALL SELECT 1 AS node_id, 'Feature_2' AS feature, 2.700000047683716 AS threshold, 29 AS "count", 1 AS depth, 0 AS parent_id, -0.2219044619269151 AS "Estimator" FROM SYSIBM.SYSDUMMY1 UNION ALL SELECT 2 AS node_id, NULL AS feature, CAST(NULL AS DOUBLE) AS threshold, 14 AS "count", 2 AS depth, 1 AS parent_id, -0.8563662286624256 AS "Estimator" FROM SYSIBM.SYSDUMMY1 UNION ALL SELECT 3 AS node_id, NULL AS feature, CAST(NULL AS DOUBLE) AS threshold, 15 AS "count", 2 AS depth, 1 AS parent_id, -0.8571913467944282 AS "Estimator" FROM SYSIBM.SYSDUMMY1 UNION ALL SELECT 4 AS node_id, 'Feature_2' AS feature, 5.150000095367432 AS threshold, 8 AS "count", 1 AS depth, 0 AS parent_id, 0.45846351013726605 AS "Estimator" FROM SYSIBM.SYSDUMMY1 UNION ALL SELECT 5 AS node_id, 'Feature_0' AS feature, 6.5 AS threshold, 3 AS "count", 2 AS depth, 4 AS parent_id, 0.28391709821906647 AS "Estimator" FROM SYSIBM.SYSDUMMY1 UNION ALL SELECT 6 AS node_id, NULL AS feature, CAST(NULL AS DOUBLE) AS threshold, 2 AS "count", 3 AS depth, 5 AS parent_id, 1.5344135128097145 AS "Estimator" FROM SYSIBM.SYSDUMMY1 UNION ALL SELECT 7 AS node_id, NULL AS feature, CAST(NULL AS DOUBLE) AS threshold, 1 AS "count", 3 AS depth, 5 AS parent_id, -0.9250209820560241 AS "Estimator" FROM SYSIBM.SYSDUMMY1 UNION ALL SELECT 8 AS node_id, 'Feature_1' AS feature, 2.950000047683716 AS threshold, 5 AS "count", 2 AS depth, 4 AS parent_id, 0.5631913572881858 AS "Estimator" FROM SYSIBM.SYSDUMMY1 UNION ALL SELECT 9 AS node_id, NULL AS feature, CAST(NULL AS DOUBLE) AS threshold, 3 AS "count", 3 AS depth, 8 AS parent_id, 1.497013228102621 AS "Estimator" FROM SYSIBM.SYSDUMMY1 UNION ALL SELECT 10 AS node_id, NULL AS feature, CAST(NULL AS DOUBLE) AS threshold, 2 AS "count", 3 AS depth, 8 AS parent_id, 1.5722350030395806 AS "Estimator" FROM SYSIBM.SYSDUMMY1) AS "Values"), 
"DT_Output_8" AS 
(SELECT "DT_node_lookup_8"."KEY" AS "KEY", "DT_node_lookup_8".node_id_2 AS node_id_2, "DT_node_data_8".node_id AS node_id, "DT_node_data_8".feature AS feature, "DT_node_data_8".threshold AS threshold, "DT_node_data_8"."count" AS "count", "DT_node_data_8".depth AS depth, "DT_node_data_8".parent_id AS parent_id, "DT_node_data_8"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_8" LEFT OUTER JOIN "DT_node_data_8" ON "DT_node_lookup_8".node_id_2 = "DT_node_data_8".node_id), 
"GB_Tree_2_2" AS 
(SELECT "DT_Output_8"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", "DT_Output_8"."Estimator" AS "Score_2" 
FROM "DT_Output_8"), 
"DT_node_lookup_9" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_3" <= 0.699999988079071) THEN 1 ELSE CASE WHEN ("ADS"."Feature_3" <= 1.6500000953674316) THEN CASE WHEN ("ADS"."Feature_0" <= 7.050000190734863) THEN 4 ELSE 5 END ELSE CASE WHEN ("ADS"."Feature_3" <= 1.75) THEN 7 ELSE 8 END END END AS node_id_2 
FROM iris AS "ADS"), 
"DT_node_data_9" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values"."count" AS "count", "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 0 AS node_id, 'Feature_3' AS feature, 0.699999988079071 AS threshold, 37 AS "count", 0 AS depth, NULL AS parent_id, 0.02162518945215297 AS "Estimator" FROM SYSIBM.SYSDUMMY1 UNION ALL SELECT 1 AS node_id, NULL AS feature, CAST(NULL AS DOUBLE) AS threshold, 14 AS "count", 1 AS depth, 0 AS parent_id, 1.2472101951226755 AS "Estimator" FROM SYSIBM.SYSDUMMY1 UNION ALL SELECT 2 AS node_id, 'Feature_3' AS feature, 1.6500000953674316 AS threshold, 23 AS "count", 1 AS depth, 0 AS parent_id, -0.2485434614576814 AS "Estimator" FROM SYSIBM.SYSDUMMY1 UNION ALL SELECT 3 AS node_id, 'Feature_0' AS feature, 7.050000190734863 AS threshold, 16 AS "count", 2 AS depth, 2 AS parent_id, -0.24477357321715273 AS "Estimator" FROM SYSIBM.SYSDUMMY1 UNION ALL SELECT 4 AS node_id, NULL AS feature, CAST(NULL AS DOUBLE) AS threshold, 15 AS "count", 3 AS depth, 3 AS parent_id, -0.8831950191372016 AS "Estimator" FROM SYSIBM.SYSDUMMY1 UNION ALL SELECT 5 AS node_id, NULL AS feature, CAST(NULL AS DOUBLE) AS threshold, 1 AS "count", 3 AS depth, 3 AS parent_id, -0.8759368880726426 AS "Estimator" FROM SYSIBM.SYSDUMMY1 UNION ALL SELECT 6 AS node_id, 'Feature_3' AS feature, 1.75 AS threshold, 7 AS "count", 2 AS depth, 2 AS parent_id, -0.2571603488646041 AS "Estimator" FROM SYSIBM.SYSDUMMY1 UNION ALL SELECT 7 AS node_id, NULL AS feature, CAST(NULL AS DOUBLE) AS threshold, 1 AS "count", 3 AS depth, 6 AS parent_id, -0.9653444618298632 AS "Estimator" FROM SYSIBM.SYSDUMMY1 UNION ALL SELECT 8 AS node_id, NULL AS feature, CAST(NULL AS DOUBLE) AS threshold, 6 AS "count", 3 AS depth, 6 AS parent_id, -0.8872157006445512 AS "Estimator" FROM SYSIBM.SYSDUMMY1) AS "Values"), 
"DT_Output_9" AS 
(SELECT "DT_node_lookup_9"."KEY" AS "KEY", "DT_node_lookup_9".node_id_2 AS node_id_2, "DT_node_data_9".node_id AS node_id, "DT_node_data_9".feature AS feature, "DT_node_data_9".threshold AS threshold, "DT_node_data_9"."count" AS "count", "DT_node_data_9".depth AS depth, "DT_node_data_9".parent_id AS parent_id, "DT_node_data_9"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_9" LEFT OUTER JOIN "DT_node_data_9" ON "DT_node_lookup_9".node_id_2 = "DT_node_data_9".node_id), 
"GB_Tree_3_0" AS 
(SELECT "DT_Output_9"."KEY" AS "KEY", "DT_Output_9"."Estimator" AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2" 
FROM "DT_Output_9"), 
"DT_node_lookup_10" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_2" <= 2.700000047683716) THEN 1 ELSE CASE WHEN ("ADS"."Feature_2" <= 4.949999809265137) THEN 3 ELSE CASE WHEN ("ADS"."Feature_2" <= 5.150000095367432) THEN 5 ELSE 6 END END END AS node_id_2 
FROM iris AS "ADS"), 
"DT_node_data_10" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values"."count" AS "count", "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 0 AS node_id, 'Feature_2' AS feature, 2.700000047683716 AS threshold, 37 AS "count", 0 AS depth, NULL AS parent_id, 0.0488504811447732 AS "Estimator" FROM SYSIBM.SYSDUMMY1 UNION ALL SELECT 1 AS node_id, NULL AS feature, CAST(NULL AS DOUBLE) AS threshold, 14 AS "count", 1 AS depth, 0 AS parent_id, -0.8786302156258169 AS "Estimator" FROM SYSIBM.SYSDUMMY1 UNION ALL SELECT 2 AS node_id, 'Feature_2' AS feature, 4.949999809265137 AS threshold, 23 AS "count", 1 AS depth, 0 AS parent_id, 0.22542923258279432 AS "Estimator" FROM SYSIBM.SYSDUMMY1 UNION ALL SELECT 3 AS node_id, NULL AS feature, CAST(NULL AS DOUBLE) AS threshold, 15 AS "count", 2 AS depth, 2 AS parent_id, 1.193251100692762 AS "Estimator" FROM SYSIBM.SYSDUMMY1 UNION ALL SELECT 4 AS node_id, 'Feature_2' AS feature, 5.150000095367432 AS threshold, 8 AS "count", 2 AS depth, 2 AS parent_id, -0.17933273153520457 AS "Estimator" FROM SYSIBM.SYSDUMMY1 UNION ALL SELECT 5 AS node_id, NULL AS feature, CAST(NULL AS DOUBLE) AS threshold, 3 AS "count", 3 AS depth, 4 AS parent_id, -0.01701292653123247 AS "Estimator" FROM SYSIBM.SYSDUMMY1 UNION ALL SELECT 6 AS node_id, NULL AS feature, CAST(NULL AS DOUBLE) AS threshold, 5 AS "count", 3 AS depth, 4 AS parent_id, -0.9319052632714043 AS "Estimator" FROM SYSIBM.SYSDUMMY1) AS "Values"), 
"DT_Output_10" AS 
(SELECT "DT_node_lookup_10"."KEY" AS "KEY", "DT_node_lookup_10".node_id_2 AS node_id_2, "DT_node_data_10".node_id AS node_id, "DT_node_data_10".feature AS feature, "DT_node_data_10".threshold AS threshold, "DT_node_data_10"."count" AS "count", "DT_node_data_10".depth AS depth, "DT_node_data_10".parent_id AS parent_id, "DT_node_data_10"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_10" LEFT OUTER JOIN "DT_node_data_10" ON "DT_node_lookup_10".node_id_2 = "DT_node_data_10".node_id), 
"GB_Tree_3_1" AS 
(SELECT "DT_Output_10"."KEY" AS "KEY", 0.0 AS "Score_0", "DT_Output_10"."Estimator" AS "Score_1", 0.0 AS "Score_2" 
FROM "DT_Output_10"), 
"DT_node_lookup_11" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_2" <= 4.949999809265137) THEN CASE WHEN ("ADS"."Feature_2" <= 2.700000047683716) THEN 2 ELSE 3 END ELSE CASE WHEN ("ADS"."Feature_1" <= 2.950000047683716) THEN CASE WHEN ("ADS"."Feature_0" <= 6.350000381469727) THEN 6 ELSE 7 END ELSE CASE WHEN ("ADS"."Feature_0" <= 6.800000190734863) THEN 9 ELSE 10 END END END AS node_id_2 
FROM iris AS "ADS"), 
"DT_node_data_11" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values"."count" AS "count", "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 0 AS node_id, 'Feature_2' AS feature, 4.949999809265137 AS threshold, 37 AS "count", 0 AS depth, NULL AS parent_id, -0.06640786884748105 AS "Estimator" FROM SYSIBM.SYSDUMMY1 UNION ALL SELECT 1 AS node_id, 'Feature_2' AS feature, 2.700000047683716 AS threshold, 29 AS "count", 1 AS depth, 0 AS parent_id, -0.19778579281310515 AS "Estimator" FROM SYSIBM.SYSDUMMY1 UNION ALL SELECT 2 AS node_id, NULL AS feature, CAST(NULL AS DOUBLE) AS threshold, 14 AS "count", 2 AS depth, 1 AS parent_id, -0.8306099121659148 AS "Estimator" FROM SYSIBM.SYSDUMMY1 UNION ALL SELECT 3 AS node_id, NULL AS feature, CAST(NULL AS DOUBLE) AS threshold, 15 AS "count", 2 AS depth, 1 AS parent_id, -0.8314287237009859 AS "Estimator" FROM SYSIBM.SYSDUMMY1 UNION ALL SELECT 4 AS node_id, 'Feature_1' AS feature, 2.950000047683716 AS threshold, 8 AS "count", 1 AS depth, 0 AS parent_id, 0.4098371055279061 AS "Estimator" FROM SYSIBM.SYSDUMMY1 UNION ALL SELECT 5 AS node_id, 'Feature_0' AS feature, 6.350000381469727 AS threshold, 5 AS "count", 2 AS depth, 4 AS parent_id, 0.5037139227869705 AS "Estimator" FROM SYSIBM.SYSDUMMY1 UNION ALL SELECT 6 AS node_id, NULL AS feature, CAST(NULL AS DOUBLE) AS threshold, 2 AS "count", 3 AS depth, 5 AS parent_id, 1.3808743225875115 AS "Estimator" FROM SYSIBM.SYSDUMMY1 UNION ALL SELECT 7 AS node_id, NULL AS feature, CAST(NULL AS DOUBLE) AS threshold, 3 AS "count", 3 AS depth, 5 AS parent_id, 1.3193843201453848 AS "Estimator" FROM SYSIBM.SYSDUMMY1 UNION ALL SELECT 8 AS node_id, 'Feature_0' AS feature, 6.800000190734863 AS threshold, 3 AS "count", 2 AS depth, 4 AS parent_id, 0.25337574342946523 AS "Estimator" FROM SYSIBM.SYSDUMMY1 UNION ALL SELECT 9 AS node_id, NULL AS feature, CAST(NULL AS DOUBLE) AS threshold, 1 AS "count", 3 AS depth, 8 AS parent_id, -0.9118852968305347 AS "Estimator" FROM SYSIBM.SYSDUMMY1 UNION ALL SELECT 10 AS node_id, NULL AS feature, CAST(NULL AS DOUBLE) AS threshold, 2 AS "count", 3 AS depth, 8 AS parent_id, 1.3732131308039643 AS "Estimator" FROM SYSIBM.SYSDUMMY1) AS "Values"), 
"DT_Output_11" AS 
(SELECT "DT_node_lookup_11"."KEY" AS "KEY", "DT_node_lookup_11".node_id_2 AS node_id_2, "DT_node_data_11".node_id AS node_id, "DT_node_data_11".feature AS feature, "DT_node_data_11".threshold AS threshold, "DT_node_data_11"."count" AS "count", "DT_node_data_11".depth AS depth, "DT_node_data_11".parent_id AS parent_id, "DT_node_data_11"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_11" LEFT OUTER JOIN "DT_node_data_11" ON "DT_node_lookup_11".node_id_2 = "DT_node_data_11".node_id), 
"GB_Tree_3_2" AS 
(SELECT "DT_Output_11"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", "DT_Output_11"."Estimator" AS "Score_2" 
FROM "DT_Output_11"), 
"Score_Union_CTE" AS 
(SELECT ensemble_score_union."KEY" AS "KEY", ensemble_score_union."Score_0" AS "Score_0", ensemble_score_union."Score_1" AS "Score_1", ensemble_score_union."Score_2" AS "Score_2" 
FROM (SELECT "GB_Tree_0_0"."KEY" AS "KEY", "GB_Tree_0_0"."Score_0" AS "Score_0", "GB_Tree_0_0"."Score_1" AS "Score_1", "GB_Tree_0_0"."Score_2" AS "Score_2" 
FROM "GB_Tree_0_0" UNION ALL SELECT "GB_Tree_0_1"."KEY" AS "KEY", "GB_Tree_0_1"."Score_0" AS "Score_0", "GB_Tree_0_1"."Score_1" AS "Score_1", "GB_Tree_0_1"."Score_2" AS "Score_2" 
FROM "GB_Tree_0_1" UNION ALL SELECT "GB_Tree_0_2"."KEY" AS "KEY", "GB_Tree_0_2"."Score_0" AS "Score_0", "GB_Tree_0_2"."Score_1" AS "Score_1", "GB_Tree_0_2"."Score_2" AS "Score_2" 
FROM "GB_Tree_0_2" UNION ALL SELECT "GB_Tree_1_0"."KEY" AS "KEY", "GB_Tree_1_0"."Score_0" AS "Score_0", "GB_Tree_1_0"."Score_1" AS "Score_1", "GB_Tree_1_0"."Score_2" AS "Score_2" 
FROM "GB_Tree_1_0" UNION ALL SELECT "GB_Tree_1_1"."KEY" AS "KEY", "GB_Tree_1_1"."Score_0" AS "Score_0", "GB_Tree_1_1"."Score_1" AS "Score_1", "GB_Tree_1_1"."Score_2" AS "Score_2" 
FROM "GB_Tree_1_1" UNION ALL SELECT "GB_Tree_1_2"."KEY" AS "KEY", "GB_Tree_1_2"."Score_0" AS "Score_0", "GB_Tree_1_2"."Score_1" AS "Score_1", "GB_Tree_1_2"."Score_2" AS "Score_2" 
FROM "GB_Tree_1_2" UNION ALL SELECT "GB_Tree_2_0"."KEY" AS "KEY", "GB_Tree_2_0"."Score_0" AS "Score_0", "GB_Tree_2_0"."Score_1" AS "Score_1", "GB_Tree_2_0"."Score_2" AS "Score_2" 
FROM "GB_Tree_2_0" UNION ALL SELECT "GB_Tree_2_1"."KEY" AS "KEY", "GB_Tree_2_1"."Score_0" AS "Score_0", "GB_Tree_2_1"."Score_1" AS "Score_1", "GB_Tree_2_1"."Score_2" AS "Score_2" 
FROM "GB_Tree_2_1" UNION ALL SELECT "GB_Tree_2_2"."KEY" AS "KEY", "GB_Tree_2_2"."Score_0" AS "Score_0", "GB_Tree_2_2"."Score_1" AS "Score_1", "GB_Tree_2_2"."Score_2" AS "Score_2" 
FROM "GB_Tree_2_2" UNION ALL SELECT "GB_Tree_3_0"."KEY" AS "KEY", "GB_Tree_3_0"."Score_0" AS "Score_0", "GB_Tree_3_0"."Score_1" AS "Score_1", "GB_Tree_3_0"."Score_2" AS "Score_2" 
FROM "GB_Tree_3_0" UNION ALL SELECT "GB_Tree_3_1"."KEY" AS "KEY", "GB_Tree_3_1"."Score_0" AS "Score_0", "GB_Tree_3_1"."Score_1" AS "Score_1", "GB_Tree_3_1"."Score_2" AS "Score_2" 
FROM "GB_Tree_3_1" UNION ALL SELECT "GB_Tree_3_2"."KEY" AS "KEY", "GB_Tree_3_2"."Score_0" AS "Score_0", "GB_Tree_3_2"."Score_1" AS "Score_1", "GB_Tree_3_2"."Score_2" AS "Score_2" 
FROM "GB_Tree_3_2") AS ensemble_score_union), 
"GradBoost_Sum_Scores" AS 
(SELECT "T"."KEY" AS "KEY", "T"."Score_0" AS "Score_0", "T"."Score_1" AS "Score_1", "T"."Score_2" AS "Score_2" 
FROM (SELECT "Score_Union_CTE"."KEY" AS "KEY", sum("Score_Union_CTE"."Score_0") AS "Score_0", sum("Score_Union_CTE"."Score_1") AS "Score_1", sum("Score_Union_CTE"."Score_2") AS "Score_2" 
FROM "Score_Union_CTE" GROUP BY "Score_Union_CTE"."KEY") AS "T"), 
orig_cte AS 
(SELECT "GradBoost_Sum_Scores"."KEY" AS "KEY", 0.378378378378 + 0.1 * "GradBoost_Sum_Scores"."Score_0" AS "Score_0", 0.432432432432 + 0.1 * "GradBoost_Sum_Scores"."Score_1" AS "Score_1", 0.189189189189 + 0.1 * "GradBoost_Sum_Scores"."Score_2" AS "Score_2", CAST(NULL AS DOUBLE) AS "Proba_0", CAST(NULL AS DOUBLE) AS "Proba_1", CAST(NULL AS DOUBLE) AS "Proba_2", CAST(NULL AS DOUBLE) AS "LogProba_0", CAST(NULL AS DOUBLE) AS "LogProba_1", CAST(NULL AS DOUBLE) AS "LogProba_2", NULL AS "Decision", CAST(NULL AS DOUBLE) AS "DecisionProba" 
FROM "GradBoost_Sum_Scores"), 
score_class_union AS 
(SELECT scu."KEY_u" AS "KEY_u", scu.class AS class, scu."LogProba" AS "LogProba", scu."Proba" AS "Proba", scu."Score" AS "Score" 
FROM (SELECT orig_cte."KEY" AS "KEY_u", 0 AS class, orig_cte."LogProba_0" AS "LogProba", orig_cte."Proba_0" AS "Proba", orig_cte."Score_0" AS "Score" 
FROM orig_cte UNION ALL SELECT orig_cte."KEY" AS "KEY_u", 1 AS class, orig_cte."LogProba_1" AS "LogProba", orig_cte."Proba_1" AS "Proba", orig_cte."Score_1" AS "Score" 
FROM orig_cte UNION ALL SELECT orig_cte."KEY" AS "KEY_u", 2 AS class, orig_cte."LogProba_2" AS "LogProba", orig_cte."Proba_2" AS "Proba", orig_cte."Score_2" AS "Score" 
FROM orig_cte) AS scu), 
score_max AS 
(SELECT orig_cte."KEY" AS "KEY", orig_cte."Score_0" AS "Score_0", orig_cte."Score_1" AS "Score_1", orig_cte."Score_2" AS "Score_2", orig_cte."Proba_0" AS "Proba_0", orig_cte."Proba_1" AS "Proba_1", orig_cte."Proba_2" AS "Proba_2", orig_cte."LogProba_0" AS "LogProba_0", orig_cte."LogProba_1" AS "LogProba_1", orig_cte."LogProba_2" AS "LogProba_2", orig_cte."Decision" AS "Decision", orig_cte."DecisionProba" AS "DecisionProba", max_select."KEY_m" AS "KEY_m", max_select."max_Score" AS "max_Score" 
FROM orig_cte LEFT OUTER JOIN (SELECT score_class_union."KEY_u" AS "KEY_m", max(score_class_union."Score") AS "max_Score" 
FROM score_class_union GROUP BY score_class_union."KEY_u") AS max_select ON orig_cte."KEY" = max_select."KEY_m"), 
score_soft_max_deltas AS 
(SELECT score_max."KEY" AS "KEY", score_max."Score_0" AS "Score_0", score_max."Score_1" AS "Score_1", score_max."Score_2" AS "Score_2", score_max."Proba_0" AS "Proba_0", score_max."Proba_1" AS "Proba_1", score_max."Proba_2" AS "Proba_2", score_max."LogProba_0" AS "LogProba_0", score_max."LogProba_1" AS "LogProba_1", score_max."LogProba_2" AS "LogProba_2", score_max."Decision" AS "Decision", score_max."DecisionProba" AS "DecisionProba", score_max."KEY_m" AS "KEY_m", score_max."max_Score" AS "max_Score", exp(score_max."Score_0" - score_max."max_Score") AS "exp_delta_Score_0", exp(score_max."Score_1" - score_max."max_Score") AS "exp_delta_Score_1", exp(score_max."Score_2" - score_max."max_Score") AS "exp_delta_Score_2" 
FROM score_max), 
score_class_union_soft AS 
(SELECT soft_scu."KEY" AS "KEY", soft_scu.class AS class, soft_scu."exp_delta_Score" AS "exp_delta_Score" 
FROM (SELECT score_soft_max_deltas."KEY" AS "KEY", 0 AS class, score_soft_max_deltas."exp_delta_Score_0" AS "exp_delta_Score" 
FROM score_soft_max_deltas UNION ALL SELECT score_soft_max_deltas."KEY" AS "KEY", 1 AS class, score_soft_max_deltas."exp_delta_Score_1" AS "exp_delta_Score" 
FROM score_soft_max_deltas UNION ALL SELECT score_soft_max_deltas."KEY" AS "KEY", 2 AS class, score_soft_max_deltas."exp_delta_Score_2" AS "exp_delta_Score" 
FROM score_soft_max_deltas) AS soft_scu), 
score_soft_max AS 
(SELECT score_soft_max_deltas."KEY" AS "KEY", score_soft_max_deltas."Score_0" AS "Score_0", score_soft_max_deltas."Score_1" AS "Score_1", score_soft_max_deltas."Score_2" AS "Score_2", score_soft_max_deltas."Proba_0" AS "Proba_0", score_soft_max_deltas."Proba_1" AS "Proba_1", score_soft_max_deltas."Proba_2" AS "Proba_2", score_soft_max_deltas."LogProba_0" AS "LogProba_0", score_soft_max_deltas."LogProba_1" AS "LogProba_1", score_soft_max_deltas."LogProba_2" AS "LogProba_2", score_soft_max_deltas."Decision" AS "Decision", score_soft_max_deltas."DecisionProba" AS "DecisionProba", score_soft_max_deltas."KEY_m" AS "KEY_m", score_soft_max_deltas."max_Score" AS "max_Score", score_soft_max_deltas."exp_delta_Score_0" AS "exp_delta_Score_0", score_soft_max_deltas."exp_delta_Score_1" AS "exp_delta_Score_1", score_soft_max_deltas."exp_delta_Score_2" AS "exp_delta_Score_2", sum_exp_t."KEY_sum" AS "KEY_sum", sum_exp_t."sum_ExpDeltaScore" AS "sum_ExpDeltaScore" 
FROM score_soft_max_deltas LEFT OUTER JOIN (SELECT score_class_union_soft."KEY" AS "KEY_sum", sum(score_class_union_soft."exp_delta_Score") AS "sum_ExpDeltaScore" 
FROM score_class_union_soft GROUP BY score_class_union_soft."KEY") AS sum_exp_t ON score_soft_max_deltas."KEY" = sum_exp_t."KEY_sum"), 
union_with_max AS 
(SELECT score_class_union."KEY_u" AS "KEY_u", score_class_union.class AS class, score_class_union."LogProba" AS "LogProba", score_class_union."Proba" AS "Proba", score_class_union."Score" AS "Score", score_soft_max."KEY" AS "KEY", score_soft_max."Score_0" AS "Score_0", score_soft_max."Score_1" AS "Score_1", score_soft_max."Score_2" AS "Score_2", score_soft_max."Proba_0" AS "Proba_0", score_soft_max."Proba_1" AS "Proba_1", score_soft_max."Proba_2" AS "Proba_2", score_soft_max."LogProba_0" AS "LogProba_0", score_soft_max."LogProba_1" AS "LogProba_1", score_soft_max."LogProba_2" AS "LogProba_2", score_soft_max."Decision" AS "Decision", score_soft_max."DecisionProba" AS "DecisionProba", score_soft_max."KEY_m" AS "KEY_m", score_soft_max."max_Score" AS "max_Score", score_soft_max."exp_delta_Score_0" AS "exp_delta_Score_0", score_soft_max."exp_delta_Score_1" AS "exp_delta_Score_1", score_soft_max."exp_delta_Score_2" AS "exp_delta_Score_2", score_soft_max."KEY_sum" AS "KEY_sum", score_soft_max."sum_ExpDeltaScore" AS "sum_ExpDeltaScore" 
FROM score_class_union LEFT OUTER JOIN score_soft_max ON score_class_union."KEY_u" = score_soft_max."KEY"), 
arg_max_cte AS 
(SELECT score_soft_max."KEY" AS "KEY", score_soft_max."Score_0" AS "Score_0", score_soft_max."Score_1" AS "Score_1", score_soft_max."Score_2" AS "Score_2", score_soft_max."Proba_0" AS "Proba_0", score_soft_max."Proba_1" AS "Proba_1", score_soft_max."Proba_2" AS "Proba_2", score_soft_max."LogProba_0" AS "LogProba_0", score_soft_max."LogProba_1" AS "LogProba_1", score_soft_max."LogProba_2" AS "LogProba_2", score_soft_max."Decision" AS "Decision", score_soft_max."DecisionProba" AS "DecisionProba", score_soft_max."KEY_m" AS "KEY_m", score_soft_max."max_Score" AS "max_Score", score_soft_max."exp_delta_Score_0" AS "exp_delta_Score_0", score_soft_max."exp_delta_Score_1" AS "exp_delta_Score_1", score_soft_max."exp_delta_Score_2" AS "exp_delta_Score_2", score_soft_max."KEY_sum" AS "KEY_sum", score_soft_max."sum_ExpDeltaScore" AS "sum_ExpDeltaScore", "arg_max_t_Score"."KEY_Score" AS "KEY_Score", "arg_max_t_Score"."arg_max_Score" AS "arg_max_Score", soft_max_comp."KEY_softmax" AS "KEY_softmax", soft_max_comp."SoftProba_0" AS "SoftProba_0", soft_max_comp."SoftProba_1" AS "SoftProba_1", soft_max_comp."SoftProba_2" AS "SoftProba_2" 
FROM score_soft_max LEFT OUTER JOIN (SELECT union_with_max."KEY" AS "KEY_Score", min(union_with_max.class) AS "arg_max_Score" 
FROM union_with_max 
WHERE union_with_max."max_Score" <= union_with_max."Score" GROUP BY union_with_max."KEY") AS "arg_max_t_Score" ON score_soft_max."KEY" = "arg_max_t_Score"."KEY_Score" LEFT OUTER JOIN (SELECT score_soft_max."KEY" AS "KEY_softmax", score_soft_max."exp_delta_Score_0" / score_soft_max."sum_ExpDeltaScore" AS "SoftProba_0", score_soft_max."exp_delta_Score_1" / score_soft_max."sum_ExpDeltaScore" AS "SoftProba_1", score_soft_max."exp_delta_Score_2" / score_soft_max."sum_ExpDeltaScore" AS "SoftProba_2" 
FROM score_soft_max) AS soft_max_comp ON soft_max_comp."KEY_softmax" = "arg_max_t_Score"."KEY_Score")
 SELECT arg_max_cte."KEY" AS "KEY", arg_max_cte."Score_0" AS "Score_0", arg_max_cte."Score_1" AS "Score_1", arg_max_cte."Score_2" AS "Score_2", arg_max_cte."SoftProba_0" AS "Proba_0", arg_max_cte."SoftProba_1" AS "Proba_1", arg_max_cte."SoftProba_2" AS "Proba_2", CASE WHEN (arg_max_cte."SoftProba_0" IS NULL OR arg_max_cte."SoftProba_0" > 0.0) THEN ln(arg_max_cte."SoftProba_0") ELSE -1.79769313486231e+308 END AS "LogProba_0", CASE WHEN (arg_max_cte."SoftProba_1" IS NULL OR arg_max_cte."SoftProba_1" > 0.0) THEN ln(arg_max_cte."SoftProba_1") ELSE -1.79769313486231e+308 END AS "LogProba_1", CASE WHEN (arg_max_cte."SoftProba_2" IS NULL OR arg_max_cte."SoftProba_2" > 0.0) THEN ln(arg_max_cte."SoftProba_2") ELSE -1.79769313486231e+308 END AS "LogProba_2", arg_max_cte."arg_max_Score" AS "Decision", CASE WHEN (arg_max_cte."SoftProba_0" <= CASE WHEN (arg_max_cte."SoftProba_1" <= arg_max_cte."SoftProba_2") THEN arg_max_cte."SoftProba_2" ELSE arg_max_cte."SoftProba_1" END) THEN CASE WHEN (arg_max_cte."SoftProba_1" <= arg_max_cte."SoftProba_2") THEN arg_max_cte."SoftProba_2" ELSE arg_max_cte."SoftProba_1" END ELSE arg_max_cte."SoftProba_0" END AS "DecisionProba" 
FROM arg_max_cte