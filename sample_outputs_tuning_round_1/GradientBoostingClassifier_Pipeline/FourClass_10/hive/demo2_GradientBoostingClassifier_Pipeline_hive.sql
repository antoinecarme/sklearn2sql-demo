-- This SQL code was generated by sklearn2sql (development version).
-- Copyright 2017

WITH `ADS_imp_1_OUT` AS 
(SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_0` IS NULL) THEN -0.0166601472776 ELSE `ADS`.`Feature_0` END AS `impter_2`, CASE WHEN (`ADS`.`Feature_1` IS NULL) THEN 0.516272913818 ELSE `ADS`.`Feature_1` END AS `impter_3`, CASE WHEN (`ADS`.`Feature_2` IS NULL) THEN 0.045854831728 ELSE `ADS`.`Feature_2` END AS `impter_4`, CASE WHEN (`ADS`.`Feature_3` IS NULL) THEN 0.393876252945 ELSE `ADS`.`Feature_3` END AS `impter_5`, CASE WHEN (`ADS`.`Feature_4` IS NULL) THEN -0.480683431081 ELSE `ADS`.`Feature_4` END AS `impter_6`, CASE WHEN (`ADS`.`Feature_5` IS NULL) THEN -0.0754525765206 ELSE `ADS`.`Feature_5` END AS `impter_7`, CASE WHEN (`ADS`.`Feature_6` IS NULL) THEN -0.116142518808 ELSE `ADS`.`Feature_6` END AS `impter_8`, CASE WHEN (`ADS`.`Feature_7` IS NULL) THEN -0.397193027446 ELSE `ADS`.`Feature_7` END AS `impter_9`, CASE WHEN (`ADS`.`Feature_8` IS NULL) THEN 0.289223217606 ELSE `ADS`.`Feature_8` END AS `impter_10`, CASE WHEN (`ADS`.`Feature_9` IS NULL) THEN 0.0715919221158 ELSE `ADS`.`Feature_9` END AS `impter_11` 
FROM `FourClass_10` AS `ADS`), 
`ADS_sca_2_OUT` AS 
(SELECT `ADS_imp_1_OUT`.`KEY` AS `KEY`, (CAST(`ADS_imp_1_OUT`.`impter_2` AS FLOAT) - -0.0166601472776) / 1.04538177897 AS `scaler_2`, (CAST(`ADS_imp_1_OUT`.`impter_3` AS FLOAT) - 0.516272913818) / 1.31450310589 AS `scaler_3`, (CAST(`ADS_imp_1_OUT`.`impter_4` AS FLOAT) - 0.045854831728) / 1.56219218195 AS `scaler_4`, (CAST(`ADS_imp_1_OUT`.`impter_5` AS FLOAT) - 0.393876252945) / 2.3960998534 AS `scaler_5`, (CAST(`ADS_imp_1_OUT`.`impter_6` AS FLOAT) - -0.480683431081) / 1.20344059845 AS `scaler_6`, (CAST(`ADS_imp_1_OUT`.`impter_7` AS FLOAT) - -0.0754525765206) / 0.838068867257 AS `scaler_7`, (CAST(`ADS_imp_1_OUT`.`impter_8` AS FLOAT) - -0.116142518808) / 1.05306709377 AS `scaler_8`, (CAST(`ADS_imp_1_OUT`.`impter_9` AS FLOAT) - -0.397193027446) / 1.78314721805 AS `scaler_9`, (CAST(`ADS_imp_1_OUT`.`impter_10` AS FLOAT) - 0.289223217606) / 0.92879323246 AS `scaler_10`, (CAST(`ADS_imp_1_OUT`.`impter_11` AS FLOAT) - 0.0715919221158) / 0.976280049427 AS `scaler_11` 
FROM `ADS_imp_1_OUT`), 
`DT_node_lookup` AS 
(SELECT `ADS_sca_2_OUT`.`KEY` AS `KEY`, CASE WHEN (`ADS_sca_2_OUT`.`scaler_6` <= 0.002084195613861084) THEN 1 ELSE CASE WHEN (`ADS_sca_2_OUT`.`scaler_5` <= 0.4809393286705017) THEN CASE WHEN (`ADS_sca_2_OUT`.`scaler_5` <= -1.1058093309402466) THEN 4 ELSE 5 END ELSE 6 END END AS `node_id_2` 
FROM `ADS_sca_2_OUT`), 
`DT_node_data` AS 
(SELECT `Values`.`node_id` AS `node_id`, `Values`.`feature` AS `feature`, `Values`.`threshold` AS `threshold`, `Values`.`count` AS `count`, `Values`.`depth` AS `depth`, `Values`.`parent_id` AS `parent_id`, `Values`.`Estimator` AS `Estimator` 
FROM (SELECT 0 AS `node_id`, 'scaler_6' AS `feature`, 0.002084195613861084 AS `threshold`, 25 AS `count`, 0 AS `depth`, CAST(NULL AS INT) AS `parent_id`, -0.007275242768474417 AS `Estimator` UNION ALL SELECT 1 AS `node_id`, CAST(NULL AS STRING) AS `feature`, CAST(NULL AS FLOAT) AS `threshold`, 14 AS `count`, 1 AS `depth`, 0 AS `parent_id`, -0.9963801413393828 AS `Estimator` UNION ALL SELECT 2 AS `node_id`, 'scaler_5' AS `feature`, 0.4809393286705017 AS `threshold`, 11 AS `count`, 1 AS `depth`, 0 AS `parent_id`, 0.29817930268607096 AS `Estimator` UNION ALL SELECT 3 AS `node_id`, 'scaler_5' AS `feature`, -1.1058093309402466 AS `threshold`, 8 AS `count`, 2 AS `depth`, 2 AS `parent_id`, 0.5027247572315255 AS `Estimator` UNION ALL SELECT 4 AS `node_id`, CAST(NULL AS STRING) AS `feature`, CAST(NULL AS FLOAT) AS `threshold`, 2 AS `count`, 3 AS `depth`, 3 AS `parent_id`, -0.9963801413393827 AS `Estimator` UNION ALL SELECT 5 AS `node_id`, CAST(NULL AS STRING) AS `feature`, CAST(NULL AS FLOAT) AS `threshold`, 6 AS `count`, 3 AS `depth`, 3 AS `parent_id`, 3.0330573801204608 AS `Estimator` UNION ALL SELECT 6 AS `node_id`, CAST(NULL AS STRING) AS `feature`, CAST(NULL AS FLOAT) AS `threshold`, 3 AS `count`, 2 AS `depth`, 2 AS `parent_id`, -0.9963801413393825 AS `Estimator`) AS `Values`), 
`DT_Output` AS 
(SELECT `DT_node_lookup`.`KEY` AS `KEY`, `DT_node_lookup`.`node_id_2` AS `node_id_2`, `DT_node_data`.`node_id` AS `node_id`, `DT_node_data`.`feature` AS `feature`, `DT_node_data`.`threshold` AS `threshold`, `DT_node_data`.`count` AS `count`, `DT_node_data`.`depth` AS `depth`, `DT_node_data`.`parent_id` AS `parent_id`, `DT_node_data`.`Estimator` AS `Estimator` 
FROM `DT_node_lookup` LEFT OUTER JOIN `DT_node_data` ON `DT_node_lookup`.`node_id_2` = `DT_node_data`.`node_id`), 
`GB_Tree_0_0` AS 
(SELECT `DT_Output`.`KEY` AS `KEY`, `DT_Output`.`Estimator` AS `Score_0`, 0.0 AS `Score_1`, 0.0 AS `Score_2`, 0.0 AS `Score_3` 
FROM `DT_Output`), 
`DT_node_lookup_1` AS 
(SELECT `ADS_sca_2_OUT`.`KEY` AS `KEY`, CASE WHEN (`ADS_sca_2_OUT`.`scaler_8` <= -0.4371722340583801) THEN CASE WHEN (`ADS_sca_2_OUT`.`scaler_7` <= -0.391033411026001) THEN 2 ELSE CASE WHEN (`ADS_sca_2_OUT`.`scaler_7` <= 0.9318081736564636) THEN 4 ELSE 5 END END ELSE CASE WHEN (`ADS_sca_2_OUT`.`scaler_6` <= 0.002084195613861084) THEN 7 ELSE CASE WHEN (`ADS_sca_2_OUT`.`scaler_8` <= 1.2198177576065063) THEN 9 ELSE 10 END END END AS `node_id_2` 
FROM `ADS_sca_2_OUT`), 
`DT_node_data_1` AS 
(SELECT `Values`.`node_id` AS `node_id`, `Values`.`feature` AS `feature`, `Values`.`threshold` AS `threshold`, `Values`.`count` AS `count`, `Values`.`depth` AS `depth`, `Values`.`parent_id` AS `parent_id`, `Values`.`Estimator` AS `Estimator` 
FROM (SELECT 0 AS `node_id`, 'scaler_8' AS `feature`, -0.4371722340583801 AS `threshold`, 25 AS `count`, 0 AS `depth`, CAST(NULL AS INT) AS `parent_id`, -0.03732195782189449 AS `Estimator` UNION ALL SELECT 1 AS `node_id`, 'scaler_7' AS `feature`, -0.391033411026001 AS `threshold`, 9 AS `count`, 1 AS `depth`, 0 AS `parent_id`, 0.31503146591614817 AS `Estimator` UNION ALL SELECT 2 AS `node_id`, CAST(NULL AS STRING) AS `feature`, CAST(NULL AS FLOAT) AS `threshold`, 3 AS `count`, 2 AS `depth`, 1 AS `parent_id`, 3.082809844886439 AS `Estimator` UNION ALL SELECT 3 AS `node_id`, 'scaler_7' AS `feature`, 0.9318081736564636 AS `threshold`, 6 AS `count`, 2 AS `depth`, 1 AS `parent_id`, 0.09418947292561258 AS `Estimator` UNION ALL SELECT 4 AS `node_id`, CAST(NULL AS STRING) AS `feature`, CAST(NULL AS FLOAT) AS `threshold`, 4 AS `count`, 3 AS `depth`, 3 AS `parent_id`, -0.9836861301485191 AS `Estimator` UNION ALL SELECT 5 AS `node_id`, CAST(NULL AS STRING) AS `feature`, CAST(NULL AS FLOAT) AS `threshold`, 2 AS `count`, 3 AS `depth`, 3 AS `parent_id`, 3.082809844886439 AS `Estimator` UNION ALL SELECT 6 AS `node_id`, 'scaler_6' AS `feature`, 0.002084195613861084 AS `threshold`, 16 AS `count`, 1 AS `depth`, 0 AS `parent_id`, -0.23552075867454358 AS `Estimator` UNION ALL SELECT 7 AS `node_id`, CAST(NULL AS STRING) AS `feature`, CAST(NULL AS FLOAT) AS `threshold`, 9 AS `count`, 2 AS `depth`, 6 AS `parent_id`, -0.9911255256115322 AS `Estimator` UNION ALL SELECT 8 AS `node_id`, 'scaler_8' AS `feature`, 1.2198177576065063 AS `threshold`, 7 AS `count`, 2 AS `depth`, 6 AS `parent_id`, -0.2255387436953818 AS `Estimator` UNION ALL SELECT 9 AS `node_id`, CAST(NULL AS STRING) AS `feature`, CAST(NULL AS FLOAT) AS `threshold`, 5 AS `count`, 3 AS `depth`, 8 AS `parent_id`, -0.9596197411519036 AS `Estimator` UNION ALL SELECT 10 AS `node_id`, CAST(NULL AS STRING) AS `feature`, CAST(NULL AS FLOAT) AS `threshold`, 2 AS `count`, 3 AS `depth`, 8 AS `parent_id`, -0.9911255256115323 AS `Estimator`) AS `Values`), 
`DT_Output_1` AS 
(SELECT `DT_node_lookup_1`.`KEY` AS `KEY`, `DT_node_lookup_1`.`node_id_2` AS `node_id_2`, `DT_node_data_1`.`node_id` AS `node_id`, `DT_node_data_1`.`feature` AS `feature`, `DT_node_data_1`.`threshold` AS `threshold`, `DT_node_data_1`.`count` AS `count`, `DT_node_data_1`.`depth` AS `depth`, `DT_node_data_1`.`parent_id` AS `parent_id`, `DT_node_data_1`.`Estimator` AS `Estimator` 
FROM `DT_node_lookup_1` LEFT OUTER JOIN `DT_node_data_1` ON `DT_node_lookup_1`.`node_id_2` = `DT_node_data_1`.`node_id`), 
`GB_Tree_0_1` AS 
(SELECT `DT_Output_1`.`KEY` AS `KEY`, 0.0 AS `Score_0`, `DT_Output_1`.`Estimator` AS `Score_1`, 0.0 AS `Score_2`, 0.0 AS `Score_3` 
FROM `DT_Output_1`), 
`DT_node_lookup_2` AS 
(SELECT `ADS_sca_2_OUT`.`KEY` AS `KEY`, CASE WHEN (`ADS_sca_2_OUT`.`scaler_5` <= -0.7113025188446045) THEN CASE WHEN (`ADS_sca_2_OUT`.`scaler_10` <= 1.301293969154358) THEN 2 ELSE 3 END ELSE CASE WHEN (`ADS_sca_2_OUT`.`scaler_6` <= 0.27638640999794006) THEN CASE WHEN (`ADS_sca_2_OUT`.`scaler_2` <= 0.08243580162525177) THEN 6 ELSE 7 END ELSE CASE WHEN (`ADS_sca_2_OUT`.`scaler_5` <= 0.4809393286705017) THEN 9 ELSE 10 END END END AS `node_id_2` 
FROM `ADS_sca_2_OUT`), 
`DT_node_data_2` AS 
(SELECT `Values`.`node_id` AS `node_id`, `Values`.`feature` AS `feature`, `Values`.`threshold` AS `threshold`, `Values`.`count` AS `count`, `Values`.`depth` AS `depth`, `Values`.`parent_id` AS `parent_id`, `Values`.`Estimator` AS `Estimator` 
FROM (SELECT 0 AS `node_id`, 'scaler_5' AS `feature`, -0.7113025188446045 AS `threshold`, 25 AS `count`, 0 AS `depth`, CAST(NULL AS INT) AS `parent_id`, -0.007361565975404974 AS `Estimator` UNION ALL SELECT 1 AS `node_id`, 'scaler_10' AS `feature`, 1.301293969154358 AS `threshold`, 7 AS `count`, 1 AS `depth`, 0 AS `parent_id`, 0.6018617969619323 AS `Estimator` UNION ALL SELECT 2 AS `node_id`, CAST(NULL AS STRING) AS `feature`, CAST(NULL AS FLOAT) AS `threshold`, 6 AS `count`, 2 AS `depth`, 1 AS `parent_id`, 2.893936628199995 AS `Estimator` UNION ALL SELECT 3 AS `node_id`, CAST(NULL AS STRING) AS `feature`, CAST(NULL AS FLOAT) AS `threshold`, 1 AS `count`, 2 AS `depth`, 1 AS `parent_id`, -0.9765524715006735 AS `Estimator` UNION ALL SELECT 4 AS `node_id`, 'scaler_6' AS `feature`, 0.27638640999794006 AS `threshold`, 18 AS `count`, 1 AS `depth`, 0 AS `parent_id`, -0.24428176267325835 AS `Estimator` UNION ALL SELECT 5 AS `node_id`, 'scaler_2' AS `feature`, 0.08243580162525177 AS `threshold`, 11 AS `count`, 2 AS `depth`, 4 AS `parent_id`, -0.2519515354717611 AS `Estimator` UNION ALL SELECT 6 AS `node_id`, CAST(NULL AS STRING) AS `feature`, CAST(NULL AS FLOAT) AS `threshold`, 7 AS `count`, 3 AS `depth`, 5 AS `parent_id`, -1.0123423647817145 AS `Estimator` UNION ALL SELECT 7 AS `node_id`, CAST(NULL AS STRING) AS `feature`, CAST(NULL AS FLOAT) AS `threshold`, 4 AS `count`, 3 AS `depth`, 5 AS `parent_id`, -0.9867261511452802 AS `Estimator` UNION ALL SELECT 8 AS `node_id`, 'scaler_5' AS `feature`, 0.4809393286705017 AS `threshold`, 7 AS `count`, 2 AS `depth`, 4 AS `parent_id`, -0.23222926256132545 AS `Estimator` UNION ALL SELECT 9 AS `node_id`, CAST(NULL AS STRING) AS `feature`, CAST(NULL AS FLOAT) AS `threshold`, 5 AS `count`, 3 AS `depth`, 8 AS `parent_id`, -0.9765812150655048 AS `Estimator` UNION ALL SELECT 10 AS `node_id`, CAST(NULL AS STRING) AS `feature`, CAST(NULL AS FLOAT) AS `threshold`, 2 AS `count`, 3 AS `depth`, 8 AS `parent_id`, -0.9775370412464057 AS `Estimator`) AS `Values`), 
`DT_Output_2` AS 
(SELECT `DT_node_lookup_2`.`KEY` AS `KEY`, `DT_node_lookup_2`.`node_id_2` AS `node_id_2`, `DT_node_data_2`.`node_id` AS `node_id`, `DT_node_data_2`.`feature` AS `feature`, `DT_node_data_2`.`threshold` AS `threshold`, `DT_node_data_2`.`count` AS `count`, `DT_node_data_2`.`depth` AS `depth`, `DT_node_data_2`.`parent_id` AS `parent_id`, `DT_node_data_2`.`Estimator` AS `Estimator` 
FROM `DT_node_lookup_2` LEFT OUTER JOIN `DT_node_data_2` ON `DT_node_lookup_2`.`node_id_2` = `DT_node_data_2`.`node_id`), 
`GB_Tree_0_2` AS 
(SELECT `DT_Output_2`.`KEY` AS `KEY`, 0.0 AS `Score_0`, 0.0 AS `Score_1`, `DT_Output_2`.`Estimator` AS `Score_2`, 0.0 AS `Score_3` 
FROM `DT_Output_2`), 
`DT_node_lookup_3` AS 
(SELECT `ADS_sca_2_OUT`.`KEY` AS `KEY`, CASE WHEN (`ADS_sca_2_OUT`.`scaler_3` <= -0.009305356070399284) THEN CASE WHEN (`ADS_sca_2_OUT`.`scaler_10` <= 0.7738221883773804) THEN CASE WHEN (`ADS_sca_2_OUT`.`scaler_9` <= 0.7988264560699463) THEN 3 ELSE 4 END ELSE 5 END ELSE CASE WHEN (`ADS_sca_2_OUT`.`scaler_6` <= 0.6600019931793213) THEN CASE WHEN (`ADS_sca_2_OUT`.`scaler_2` <= 0.08243580162525177) THEN 8 ELSE 9 END ELSE CASE WHEN (`ADS_sca_2_OUT`.`scaler_9` <= 1.028206467628479) THEN 11 ELSE 12 END END END AS `node_id_2` 
FROM `ADS_sca_2_OUT`), 
`DT_node_data_3` AS 
(SELECT `Values`.`node_id` AS `node_id`, `Values`.`feature` AS `feature`, `Values`.`threshold` AS `threshold`, `Values`.`count` AS `count`, `Values`.`depth` AS `depth`, `Values`.`parent_id` AS `parent_id`, `Values`.`Estimator` AS `Estimator` 
FROM (SELECT 0 AS `node_id`, 'scaler_3' AS `feature`, -0.009305356070399284 AS `threshold`, 25 AS `count`, 0 AS `depth`, CAST(NULL AS INT) AS `parent_id`, 0.05268208410094281 AS `Estimator` UNION ALL SELECT 1 AS `node_id`, 'scaler_10' AS `feature`, 0.7738221883773804 AS `threshold`, 11 AS `count`, 1 AS `depth`, 0 AS `parent_id`, -0.25772663830961556 AS `Estimator` UNION ALL SELECT 2 AS `node_id`, 'scaler_9' AS `feature`, 0.7988264560699463 AS `threshold`, 8 AS `count`, 2 AS `depth`, 1 AS `parent_id`, -0.25805228878232817 AS `Estimator` UNION ALL SELECT 3 AS `node_id`, CAST(NULL AS STRING) AS `feature`, CAST(NULL AS FLOAT) AS `threshold`, 7 AS `count`, 3 AS `depth`, 2 AS `parent_id`, -1.011060647157002 AS `Estimator` UNION ALL SELECT 4 AS `node_id`, CAST(NULL AS STRING) AS `feature`, CAST(NULL AS FLOAT) AS `threshold`, 1 AS `count`, 3 AS `depth`, 2 AS `parent_id`, -1.009402435567016 AS `Estimator` UNION ALL SELECT 5 AS `node_id`, CAST(NULL AS STRING) AS `feature`, CAST(NULL AS FLOAT) AS `threshold`, 3 AS `count`, 2 AS `depth`, 1 AS `parent_id`, -1.009228706272457 AS `Estimator` UNION ALL SELECT 6 AS `node_id`, 'scaler_6' AS `feature`, 0.6600019931793213 AS `threshold`, 14 AS `count`, 1 AS `depth`, 0 AS `parent_id`, 0.29657465170923863 AS `Estimator` UNION ALL SELECT 7 AS `node_id`, 'scaler_2' AS `feature`, 0.08243580162525177 AS `threshold`, 11 AS `count`, 2 AS `depth`, 6 AS `parent_id`, 0.44759097386647384 AS `Estimator` UNION ALL SELECT 8 AS `node_id`, CAST(NULL AS STRING) AS `feature`, CAST(NULL AS FLOAT) AS `threshold`, 7 AS `count`, 3 AS `depth`, 7 AS `parent_id`, 2.604975023525689 AS `Estimator` UNION ALL SELECT 9 AS `node_id`, CAST(NULL AS STRING) AS `feature`, CAST(NULL AS FLOAT) AS `threshold`, 4 AS `count`, 3 AS `depth`, 7 AS `parent_id`, -0.058852765185367785 AS `Estimator` UNION ALL SELECT 10 AS `node_id`, 'scaler_9' AS `feature`, 1.028206467628479 AS `threshold`, 3 AS `count`, 2 AS `depth`, 6 AS `parent_id`, -0.25715186286729086 AS `Estimator` UNION ALL SELECT 11 AS `node_id`, CAST(NULL AS STRING) AS `feature`, CAST(NULL AS FLOAT) AS `threshold`, 2 AS `count`, 3 AS `depth`, 10 AS `parent_id`, -1.0092287781459484 AS `Estimator` UNION ALL SELECT 12 AS `node_id`, CAST(NULL AS STRING) AS `feature`, CAST(NULL AS FLOAT) AS `threshold`, 1 AS `count`, 3 AS `depth`, 10 AS `parent_id`, -1.0104262634658718 AS `Estimator`) AS `Values`), 
`DT_Output_3` AS 
(SELECT `DT_node_lookup_3`.`KEY` AS `KEY`, `DT_node_lookup_3`.`node_id_2` AS `node_id_2`, `DT_node_data_3`.`node_id` AS `node_id`, `DT_node_data_3`.`feature` AS `feature`, `DT_node_data_3`.`threshold` AS `threshold`, `DT_node_data_3`.`count` AS `count`, `DT_node_data_3`.`depth` AS `depth`, `DT_node_data_3`.`parent_id` AS `parent_id`, `DT_node_data_3`.`Estimator` AS `Estimator` 
FROM `DT_node_lookup_3` LEFT OUTER JOIN `DT_node_data_3` ON `DT_node_lookup_3`.`node_id_2` = `DT_node_data_3`.`node_id`), 
`GB_Tree_0_3` AS 
(SELECT `DT_Output_3`.`KEY` AS `KEY`, 0.0 AS `Score_0`, 0.0 AS `Score_1`, 0.0 AS `Score_2`, `DT_Output_3`.`Estimator` AS `Score_3` 
FROM `DT_Output_3`), 
`DT_node_lookup_4` AS 
(SELECT `ADS_sca_2_OUT`.`KEY` AS `KEY`, CASE WHEN (`ADS_sca_2_OUT`.`scaler_6` <= 0.002084195613861084) THEN CASE WHEN (`ADS_sca_2_OUT`.`scaler_7` <= -0.9363440275192261) THEN CASE WHEN (`ADS_sca_2_OUT`.`scaler_4` <= -0.46122249960899353) THEN 3 ELSE 4 END ELSE CASE WHEN (`ADS_sca_2_OUT`.`scaler_9` <= 0.36037176847457886) THEN 6 ELSE 7 END END ELSE CASE WHEN (`ADS_sca_2_OUT`.`scaler_4` <= 0.9463837146759033) THEN CASE WHEN (`ADS_sca_2_OUT`.`scaler_8` <= 1.2198177576065063) THEN 10 ELSE 11 END ELSE CASE WHEN (`ADS_sca_2_OUT`.`scaler_11` <= 0.37277597188949585) THEN 13 ELSE 14 END END END AS `node_id_2` 
FROM `ADS_sca_2_OUT`), 
`DT_node_data_4` AS 
(SELECT `Values`.`node_id` AS `node_id`, `Values`.`feature` AS `feature`, `Values`.`threshold` AS `threshold`, `Values`.`count` AS `count`, `Values`.`depth` AS `depth`, `Values`.`parent_id` AS `parent_id`, `Values`.`Estimator` AS `Estimator` 
FROM (SELECT 0 AS `node_id`, 'scaler_6' AS `feature`, 0.002084195613861084 AS `threshold`, 25 AS `count`, 0 AS `depth`, CAST(NULL AS INT) AS `parent_id`, -0.007371466575383656 AS `Estimator` UNION ALL SELECT 1 AS `node_id`, 'scaler_7' AS `feature`, -0.9363440275192261 AS `threshold`, 14 AS `count`, 1 AS `depth`, 0 AS `parent_id`, -0.22162919153065147 AS `Estimator` UNION ALL SELECT 2 AS `node_id`, 'scaler_4' AS `feature`, -0.46122249960899353 AS `threshold`, 2 AS `count`, 2 AS `depth`, 1 AS `parent_id`, -0.23122371248216195 AS `Estimator` UNION ALL SELECT 3 AS `node_id`, CAST(NULL AS STRING) AS `feature`, CAST(NULL AS FLOAT) AS `threshold`, 1 AS `count`, 3 AS `depth`, 2 AS `parent_id`, -0.9879425287607619 AS `Estimator` UNION ALL SELECT 4 AS `node_id`, CAST(NULL AS STRING) AS `feature`, CAST(NULL AS FLOAT) AS `threshold`, 1 AS `count`, 3 AS `depth`, 2 AS `parent_id`, -0.9635160115816966 AS `Estimator` UNION ALL SELECT 5 AS `node_id`, 'scaler_9' AS `feature`, 0.36037176847457886 AS `threshold`, 12 AS `count`, 2 AS `depth`, 1 AS `parent_id`, -0.22003010470539966 AS `Estimator` UNION ALL SELECT 6 AS `node_id`, CAST(NULL AS STRING) AS `feature`, CAST(NULL AS FLOAT) AS `threshold`, 8 AS `count`, 3 AS `depth`, 5 AS `parent_id`, -0.9633703501505991 AS `Estimator` UNION ALL SELECT 7 AS `node_id`, CAST(NULL AS STRING) AS `feature`, CAST(NULL AS FLOAT) AS `threshold`, 4 AS `count`, 3 AS `depth`, 5 AS `parent_id`, -0.9580391331731628 AS `Estimator` UNION ALL SELECT 8 AS `node_id`, 'scaler_4' AS `feature`, 0.9463837146759033 AS `threshold`, 11 AS `count`, 1 AS `depth`, 0 AS `parent_id`, 0.26532018336768437 AS `Estimator` UNION ALL SELECT 9 AS `node_id`, 'scaler_8' AS `feature`, 1.2198177576065063 AS `threshold`, 8 AS `count`, 2 AS `depth`, 8 AS `parent_id`, 0.4477188015545073 AS `Estimator` UNION ALL SELECT 10 AS `node_id`, CAST(NULL AS STRING) AS `feature`, CAST(NULL AS FLOAT) AS `threshold`, 6 AS `count`, 3 AS `depth`, 9 AS `parent_id`, 2.2777555198845905 AS `Estimator` UNION ALL SELECT 11 AS `node_id`, CAST(NULL AS STRING) AS `feature`, CAST(NULL AS FLOAT) AS `threshold`, 2 AS `count`, 3 AS `depth`, 9 AS `parent_id`, -0.963156373115441 AS `Estimator` UNION ALL SELECT 12 AS `node_id`, 'scaler_11' AS `feature`, 0.37277597188949585 AS `threshold`, 3 AS `count`, 2 AS `depth`, 8 AS `parent_id`, -0.22107613179717678 AS `Estimator` UNION ALL SELECT 13 AS `node_id`, CAST(NULL AS STRING) AS `feature`, CAST(NULL AS FLOAT) AS `threshold`, 1 AS `count`, 3 AS `depth`, 12 AS `parent_id`, -0.9634725338562453 AS `Estimator` UNION ALL SELECT 14 AS `node_id`, CAST(NULL AS STRING) AS `feature`, CAST(NULL AS FLOAT) AS `threshold`, 2 AS `count`, 3 AS `depth`, 12 AS `parent_id`, -0.9625643486749863 AS `Estimator`) AS `Values`), 
`DT_Output_4` AS 
(SELECT `DT_node_lookup_4`.`KEY` AS `KEY`, `DT_node_lookup_4`.`node_id_2` AS `node_id_2`, `DT_node_data_4`.`node_id` AS `node_id`, `DT_node_data_4`.`feature` AS `feature`, `DT_node_data_4`.`threshold` AS `threshold`, `DT_node_data_4`.`count` AS `count`, `DT_node_data_4`.`depth` AS `depth`, `DT_node_data_4`.`parent_id` AS `parent_id`, `DT_node_data_4`.`Estimator` AS `Estimator` 
FROM `DT_node_lookup_4` LEFT OUTER JOIN `DT_node_data_4` ON `DT_node_lookup_4`.`node_id_2` = `DT_node_data_4`.`node_id`), 
`GB_Tree_1_0` AS 
(SELECT `DT_Output_4`.`KEY` AS `KEY`, `DT_Output_4`.`Estimator` AS `Score_0`, 0.0 AS `Score_1`, 0.0 AS `Score_2`, 0.0 AS `Score_3` 
FROM `DT_Output_4`), 
`DT_node_lookup_5` AS 
(SELECT `ADS_sca_2_OUT`.`KEY` AS `KEY`, CASE WHEN (`ADS_sca_2_OUT`.`scaler_8` <= -0.4371722340583801) THEN CASE WHEN (`ADS_sca_2_OUT`.`scaler_2` <= 0.020183872431516647) THEN CASE WHEN (`ADS_sca_2_OUT`.`scaler_2` <= -0.3691574037075043) THEN 3 ELSE 4 END ELSE 5 END ELSE CASE WHEN (`ADS_sca_2_OUT`.`scaler_6` <= 0.002084195613861084) THEN CASE WHEN (`ADS_sca_2_OUT`.`scaler_5` <= 0.4351814091205597) THEN 8 ELSE 9 END ELSE CASE WHEN (`ADS_sca_2_OUT`.`scaler_8` <= 1.2198177576065063) THEN 11 ELSE 12 END END END AS `node_id_2` 
FROM `ADS_sca_2_OUT`), 
`DT_node_data_5` AS 
(SELECT `Values`.`node_id` AS `node_id`, `Values`.`feature` AS `feature`, `Values`.`threshold` AS `threshold`, `Values`.`count` AS `count`, `Values`.`depth` AS `depth`, `Values`.`parent_id` AS `parent_id`, `Values`.`Estimator` AS `Estimator` 
FROM (SELECT 0 AS `node_id`, 'scaler_8' AS `feature`, -0.4371722340583801 AS `threshold`, 25 AS `count`, 0 AS `depth`, CAST(NULL AS INT) AS `parent_id`, -0.033653816442793284 AS `Estimator` UNION ALL SELECT 1 AS `node_id`, 'scaler_2' AS `feature`, 0.020183872431516647 AS `threshold`, 9 AS `count`, 1 AS `depth`, 0 AS `parent_id`, 0.2829832992069191 AS `Estimator` UNION ALL SELECT 2 AS `node_id`, 'scaler_2' AS `feature`, -0.3691574037075043 AS `threshold`, 6 AS `count`, 2 AS `depth`, 1 AS `parent_id`, 0.08344226824138119 AS `Estimator` UNION ALL SELECT 3 AS `node_id`, CAST(NULL AS STRING) AS `feature`, CAST(NULL AS FLOAT) AS `threshold`, 2 AS `count`, 3 AS `depth`, 2 AS `parent_id`, 2.303158582031892 AS `Estimator` UNION ALL SELECT 4 AS `node_id`, CAST(NULL AS STRING) AS `feature`, CAST(NULL AS FLOAT) AS `threshold`, 4 AS `count`, 3 AS `depth`, 2 AS `parent_id`, -0.9523253721471547 AS `Estimator` UNION ALL SELECT 5 AS `node_id`, CAST(NULL AS STRING) AS `feature`, CAST(NULL AS FLOAT) AS `threshold`, 3 AS `count`, 2 AS `depth`, 1 AS `parent_id`, 2.358975425529291 AS `Estimator` UNION ALL SELECT 6 AS `node_id`, 'scaler_6' AS `feature`, 0.002084195613861084 AS `threshold`, 16 AS `count`, 1 AS `depth`, 0 AS `parent_id`, -0.21176219399575655 AS `Estimator` UNION ALL SELECT 7 AS `node_id`, 'scaler_5' AS `feature`, 0.4351814091205597 AS `threshold`, 9 AS `count`, 2 AS `depth`, 6 AS `parent_id`, -0.2194775996797737 AS `Estimator` UNION ALL SELECT 8 AS `node_id`, CAST(NULL AS STRING) AS `feature`, CAST(NULL AS FLOAT) AS `threshold`, 8 AS `count`, 3 AS `depth`, 7 AS `parent_id`, -0.9582227060815951 AS `Estimator` UNION ALL SELECT 9 AS `node_id`, CAST(NULL AS STRING) AS `feature`, CAST(NULL AS FLOAT) AS `threshold`, 1 AS `count`, 3 AS `depth`, 7 AS `parent_id`, -0.9828223587639598 AS `Estimator` UNION ALL SELECT 10 AS `node_id`, 'scaler_8' AS `feature`, 1.2198177576065063 AS `threshold`, 7 AS `count`, 2 AS `depth`, 6 AS `parent_id`, -0.2018423866877344 AS `Estimator` UNION ALL SELECT 11 AS `node_id`, CAST(NULL AS STRING) AS `feature`, CAST(NULL AS FLOAT) AS `threshold`, 5 AS `count`, 3 AS `depth`, 10 AS `parent_id`, -0.932506952234732 AS `Estimator` UNION ALL SELECT 12 AS `node_id`, CAST(NULL AS STRING) AS `feature`, CAST(NULL AS FLOAT) AS `threshold`, 2 AS `count`, 3 AS `depth`, 10 AS `parent_id`, -0.9580467780053802 AS `Estimator`) AS `Values`), 
`DT_Output_5` AS 
(SELECT `DT_node_lookup_5`.`KEY` AS `KEY`, `DT_node_lookup_5`.`node_id_2` AS `node_id_2`, `DT_node_data_5`.`node_id` AS `node_id`, `DT_node_data_5`.`feature` AS `feature`, `DT_node_data_5`.`threshold` AS `threshold`, `DT_node_data_5`.`count` AS `count`, `DT_node_data_5`.`depth` AS `depth`, `DT_node_data_5`.`parent_id` AS `parent_id`, `DT_node_data_5`.`Estimator` AS `Estimator` 
FROM `DT_node_lookup_5` LEFT OUTER JOIN `DT_node_data_5` ON `DT_node_lookup_5`.`node_id_2` = `DT_node_data_5`.`node_id`), 
`GB_Tree_1_1` AS 
(SELECT `DT_Output_5`.`KEY` AS `KEY`, 0.0 AS `Score_0`, `DT_Output_5`.`Estimator` AS `Score_1`, 0.0 AS `Score_2`, 0.0 AS `Score_3` 
FROM `DT_Output_5`), 
`DT_node_lookup_6` AS 
(SELECT `ADS_sca_2_OUT`.`KEY` AS `KEY`, CASE WHEN (`ADS_sca_2_OUT`.`scaler_5` <= -0.7113025188446045) THEN CASE WHEN (`ADS_sca_2_OUT`.`scaler_2` <= 1.7123074531555176) THEN 2 ELSE 3 END ELSE CASE WHEN (`ADS_sca_2_OUT`.`scaler_4` <= -0.4865207374095917) THEN CASE WHEN (`ADS_sca_2_OUT`.`scaler_2` <= 0.21494457125663757) THEN 6 ELSE 7 END ELSE CASE WHEN (`ADS_sca_2_OUT`.`scaler_9` <= 0.26006215810775757) THEN 9 ELSE 10 END END END AS `node_id_2` 
FROM `ADS_sca_2_OUT`), 
`DT_node_data_6` AS 
(SELECT `Values`.`node_id` AS `node_id`, `Values`.`feature` AS `feature`, `Values`.`threshold` AS `threshold`, `Values`.`count` AS `count`, `Values`.`depth` AS `depth`, `Values`.`parent_id` AS `parent_id`, `Values`.`Estimator` AS `Estimator` 
FROM (SELECT 0 AS `node_id`, 'scaler_5' AS `feature`, -0.7113025188446045 AS `threshold`, 25 AS `count`, 0 AS `depth`, CAST(NULL AS INT) AS `parent_id`, -0.006929182610065073 AS `Estimator` UNION ALL SELECT 1 AS `node_id`, 'scaler_2' AS `feature`, 1.7123074531555176 AS `threshold`, 7 AS `count`, 1 AS `depth`, 0 AS `parent_id`, 0.536087279907104 AS `Estimator` UNION ALL SELECT 2 AS `node_id`, CAST(NULL AS STRING) AS `feature`, CAST(NULL AS FLOAT) AS `threshold`, 6 AS `count`, 2 AS `depth`, 1 AS `parent_id`, 2.205424532732624 AS `Estimator` UNION ALL SELECT 3 AS `node_id`, CAST(NULL AS STRING) AS `feature`, CAST(NULL AS FLOAT) AS `threshold`, 1 AS `count`, 2 AS `depth`, 1 AS `parent_id`, -0.9457344613688664 AS `Estimator` UNION ALL SELECT 4 AS `node_id`, 'scaler_4' AS `feature`, -0.4865207374095917 AS `threshold`, 18 AS `count`, 1 AS `depth`, 0 AS `parent_id`, -0.21810225136674197 AS `Estimator` UNION ALL SELECT 5 AS `node_id`, 'scaler_2' AS `feature`, 0.21494457125663757 AS `threshold`, 3 AS `count`, 2 AS `depth`, 4 AS `parent_id`, -0.2376813777254481 AS `Estimator` UNION ALL SELECT 6 AS `node_id`, CAST(NULL AS STRING) AS `feature`, CAST(NULL AS FLOAT) AS `threshold`, 2 AS `count`, 3 AS `depth`, 5 AS `parent_id`, -0.9745211405819579 AS `Estimator` UNION ALL SELECT 7 AS `node_id`, CAST(NULL AS STRING) AS `feature`, CAST(NULL AS FLOAT) AS `threshold`, 1 AS `count`, 3 AS `depth`, 5 AS `parent_id`, -1.00302465155933 AS `Estimator` UNION ALL SELECT 8 AS `node_id`, 'scaler_9' AS `feature`, 0.26006215810775757 AS `threshold`, 15 AS `count`, 2 AS `depth`, 4 AS `parent_id`, -0.21418642609500074 AS `Estimator` UNION ALL SELECT 9 AS `node_id`, CAST(NULL AS STRING) AS `feature`, CAST(NULL AS FLOAT) AS `threshold`, 6 AS `count`, 3 AS `depth`, 8 AS `parent_id`, -0.9656583532255497 AS `Estimator` UNION ALL SELECT 10 AS `node_id`, CAST(NULL AS STRING) AS `feature`, CAST(NULL AS FLOAT) AS `threshold`, 9 AS `count`, 3 AS `depth`, 8 AS `parent_id`, -0.9478603877514659 AS `Estimator`) AS `Values`), 
`DT_Output_6` AS 
(SELECT `DT_node_lookup_6`.`KEY` AS `KEY`, `DT_node_lookup_6`.`node_id_2` AS `node_id_2`, `DT_node_data_6`.`node_id` AS `node_id`, `DT_node_data_6`.`feature` AS `feature`, `DT_node_data_6`.`threshold` AS `threshold`, `DT_node_data_6`.`count` AS `count`, `DT_node_data_6`.`depth` AS `depth`, `DT_node_data_6`.`parent_id` AS `parent_id`, `DT_node_data_6`.`Estimator` AS `Estimator` 
FROM `DT_node_lookup_6` LEFT OUTER JOIN `DT_node_data_6` ON `DT_node_lookup_6`.`node_id_2` = `DT_node_data_6`.`node_id`), 
`GB_Tree_1_2` AS 
(SELECT `DT_Output_6`.`KEY` AS `KEY`, 0.0 AS `Score_0`, 0.0 AS `Score_1`, `DT_Output_6`.`Estimator` AS `Score_2`, 0.0 AS `Score_3` 
FROM `DT_Output_6`), 
`DT_node_lookup_7` AS 
(SELECT `ADS_sca_2_OUT`.`KEY` AS `KEY`, CASE WHEN (`ADS_sca_2_OUT`.`scaler_3` <= -0.009305356070399284) THEN CASE WHEN (`ADS_sca_2_OUT`.`scaler_10` <= 0.7738221883773804) THEN CASE WHEN (`ADS_sca_2_OUT`.`scaler_11` <= -1.2250674962997437) THEN 3 ELSE 4 END ELSE 5 END ELSE CASE WHEN (`ADS_sca_2_OUT`.`scaler_6` <= 0.6600019931793213) THEN CASE WHEN (`ADS_sca_2_OUT`.`scaler_2` <= 0.08243580162525177) THEN 8 ELSE 9 END ELSE CASE WHEN (`ADS_sca_2_OUT`.`scaler_10` <= -0.7175905704498291) THEN 11 ELSE 12 END END END AS `node_id_2` 
FROM `ADS_sca_2_OUT`), 
`DT_node_data_7` AS 
(SELECT `Values`.`node_id` AS `node_id`, `Values`.`feature` AS `feature`, `Values`.`threshold` AS `threshold`, `Values`.`count` AS `count`, `Values`.`depth` AS `depth`, `Values`.`parent_id` AS `parent_id`, `Values`.`Estimator` AS `Estimator` 
FROM (SELECT 0 AS `node_id`, 'scaler_3' AS `feature`, -0.009305356070399284 AS `threshold`, 25 AS `count`, 0 AS `depth`, CAST(NULL AS INT) AS `parent_id`, 0.047482542804692864 AS `Estimator` UNION ALL SELECT 1 AS `node_id`, 'scaler_10' AS `feature`, 0.7738221883773804 AS `threshold`, 11 AS `count`, 1 AS `depth`, 0 AS `parent_id`, -0.2291227093758297 AS `Estimator` UNION ALL SELECT 2 AS `node_id`, 'scaler_11' AS `feature`, -1.2250674962997437 AS `threshold`, 8 AS `count`, 2 AS `depth`, 1 AS `parent_id`, -0.2296445821018208 AS `Estimator` UNION ALL SELECT 3 AS `node_id`, CAST(NULL AS STRING) AS `feature`, CAST(NULL AS FLOAT) AS `threshold`, 1 AS `count`, 3 AS `depth`, 2 AS `parent_id`, -0.9713964898322689 AS `Estimator` UNION ALL SELECT 4 AS `node_id`, CAST(NULL AS STRING) AS `feature`, CAST(NULL AS FLOAT) AS `threshold`, 7 AS `count`, 3 AS `depth`, 2 AS `parent_id`, -0.9738892128030208 AS `Estimator` UNION ALL SELECT 5 AS `node_id`, CAST(NULL AS STRING) AS `feature`, CAST(NULL AS FLOAT) AS `threshold`, 3 AS `count`, 2 AS `depth`, 1 AS `parent_id`, -0.9711642542310538 AS `Estimator` UNION ALL SELECT 6 AS `node_id`, 'scaler_6' AS `feature`, 0.6600019931793213 AS `threshold`, 14 AS `count`, 1 AS `depth`, 0 AS `parent_id`, 0.26481524094653197 AS `Estimator` UNION ALL SELECT 7 AS `node_id`, 'scaler_2' AS `feature`, 0.08243580162525177 AS `threshold`, 11 AS `count`, 2 AS `depth`, 6 AS `parent_id`, 0.3992852956575705 AS `Estimator` UNION ALL SELECT 8 AS `node_id`, CAST(NULL AS STRING) AS `feature`, CAST(NULL AS FLOAT) AS `threshold`, 7 AS `count`, 3 AS `depth`, 7 AS `parent_id`, 2.048498016777205 AS `Estimator` UNION ALL SELECT 9 AS `node_id`, CAST(NULL AS STRING) AS `feature`, CAST(NULL AS FLOAT) AS `threshold`, 4 AS `count`, 3 AS `depth`, 7 AS `parent_id`, -0.043886103872793306 AS `Estimator` UNION ALL SELECT 10 AS `node_id`, 'scaler_10' AS `feature`, -0.7175905704498291 AS `threshold`, 3 AS `count`, 2 AS `depth`, 6 AS `parent_id`, -0.22824162632727588 AS `Estimator` UNION ALL SELECT 11 AS `node_id`, CAST(NULL AS STRING) AS `feature`, CAST(NULL AS FLOAT) AS `threshold`, 1 AS `count`, 3 AS `depth`, 10 AS `parent_id`, -0.9729882810193574 AS `Estimator` UNION ALL SELECT 12 AS `node_id`, CAST(NULL AS STRING) AS `feature`, CAST(NULL AS FLOAT) AS `threshold`, 2 AS `count`, 3 AS `depth`, 10 AS `parent_id`, -0.9712170742624368 AS `Estimator`) AS `Values`), 
`DT_Output_7` AS 
(SELECT `DT_node_lookup_7`.`KEY` AS `KEY`, `DT_node_lookup_7`.`node_id_2` AS `node_id_2`, `DT_node_data_7`.`node_id` AS `node_id`, `DT_node_data_7`.`feature` AS `feature`, `DT_node_data_7`.`threshold` AS `threshold`, `DT_node_data_7`.`count` AS `count`, `DT_node_data_7`.`depth` AS `depth`, `DT_node_data_7`.`parent_id` AS `parent_id`, `DT_node_data_7`.`Estimator` AS `Estimator` 
FROM `DT_node_lookup_7` LEFT OUTER JOIN `DT_node_data_7` ON `DT_node_lookup_7`.`node_id_2` = `DT_node_data_7`.`node_id`), 
`GB_Tree_1_3` AS 
(SELECT `DT_Output_7`.`KEY` AS `KEY`, 0.0 AS `Score_0`, 0.0 AS `Score_1`, 0.0 AS `Score_2`, `DT_Output_7`.`Estimator` AS `Score_3` 
FROM `DT_Output_7`), 
`DT_node_lookup_8` AS 
(SELECT `ADS_sca_2_OUT`.`KEY` AS `KEY`, CASE WHEN (`ADS_sca_2_OUT`.`scaler_6` <= 0.002084195613861084) THEN CASE WHEN (`ADS_sca_2_OUT`.`scaler_7` <= -0.9363440275192261) THEN CASE WHEN (`ADS_sca_2_OUT`.`scaler_9` <= 0.06867548823356628) THEN 3 ELSE 4 END ELSE CASE WHEN (`ADS_sca_2_OUT`.`scaler_2` <= 0.08243580162525177) THEN 6 ELSE 7 END END ELSE CASE WHEN (`ADS_sca_2_OUT`.`scaler_4` <= 0.9463837146759033) THEN CASE WHEN (`ADS_sca_2_OUT`.`scaler_5` <= -1.1058093309402466) THEN 10 ELSE 11 END ELSE CASE WHEN (`ADS_sca_2_OUT`.`scaler_10` <= -0.23014229536056519) THEN 13 ELSE 14 END END END AS `node_id_2` 
FROM `ADS_sca_2_OUT`), 
`DT_node_data_8` AS 
(SELECT `Values`.`node_id` AS `node_id`, `Values`.`feature` AS `feature`, `Values`.`threshold` AS `threshold`, `Values`.`count` AS `count`, `Values`.`depth` AS `depth`, `Values`.`parent_id` AS `parent_id`, `Values`.`Estimator` AS `Estimator` 
FROM (SELECT 0 AS `node_id`, 'scaler_6' AS `feature`, 0.002084195613861084 AS `threshold`, 25 AS `count`, 0 AS `depth`, CAST(NULL AS INT) AS `parent_id`, -0.007351653233035109 AS `Estimator` UNION ALL SELECT 1 AS `node_id`, 'scaler_7' AS `feature`, -0.9363440275192261 AS `threshold`, 14 AS `count`, 1 AS `depth`, 0 AS `parent_id`, -0.1981218173394328 AS `Estimator` UNION ALL SELECT 2 AS `node_id`, 'scaler_9' AS `feature`, 0.06867548823356628 AS `threshold`, 2 AS `count`, 2 AS `depth`, 1 AS `parent_id`, -0.21596793917987384 AS `Estimator` UNION ALL SELECT 3 AS `node_id`, CAST(NULL AS STRING) AS `feature`, CAST(NULL AS FLOAT) AS `threshold`, 1 AS `count`, 3 AS `depth`, 2 AS `parent_id`, -0.9347866813714911 AS `Estimator` UNION ALL SELECT 4 AS `node_id`, CAST(NULL AS STRING) AS `feature`, CAST(NULL AS FLOAT) AS `threshold`, 1 AS `count`, 3 AS `depth`, 2 AS `parent_id`, -0.9794421161718405 AS `Estimator` UNION ALL SELECT 5 AS `node_id`, 'scaler_2' AS `feature`, 0.08243580162525177 AS `threshold`, 12 AS `count`, 2 AS `depth`, 1 AS `parent_id`, -0.19514746369935929 AS `Estimator` UNION ALL SELECT 6 AS `node_id`, CAST(NULL AS STRING) AS `feature`, CAST(NULL AS FLOAT) AS `threshold`, 8 AS `count`, 3 AS `depth`, 5 AS `parent_id`, -0.9346376849154895 AS `Estimator` UNION ALL SELECT 7 AS `node_id`, CAST(NULL AS STRING) AS `feature`, CAST(NULL AS FLOAT) AS `threshold`, 4 AS `count`, 3 AS `depth`, 5 AS `parent_id`, -0.9264151767414956 AS `Estimator` UNION ALL SELECT 8 AS `node_id`, 'scaler_4' AS `feature`, 0.9463837146759033 AS `threshold`, 11 AS `count`, 1 AS `depth`, 0 AS `parent_id`, 0.23544673744783465 AS `Estimator` UNION ALL SELECT 9 AS `node_id`, 'scaler_5' AS `feature`, -1.1058093309402466 AS `threshold`, 8 AS `count`, 2 AS `depth`, 8 AS `parent_id`, 0.39759144312936023 AS `Estimator` UNION ALL SELECT 10 AS `node_id`, CAST(NULL AS STRING) AS `feature`, CAST(NULL AS FLOAT) AS `threshold`, 2 AS `count`, 3 AS `depth`, 9 AS `parent_id`, -0.9343670713215209 AS `Estimator` UNION ALL SELECT 11 AS `node_id`, CAST(NULL AS STRING) AS `feature`, CAST(NULL AS FLOAT) AS `threshold`, 6 AS `count`, 3 AS `depth`, 9 AS `parent_id`, 1.8559509202178703 AS `Estimator` UNION ALL SELECT 12 AS `node_id`, 'scaler_10' AS `feature`, -0.23014229536056519 AS `threshold`, 3 AS `count`, 2 AS `depth`, 8 AS `parent_id`, -0.1969391443695668 AS `Estimator` UNION ALL SELECT 13 AS `node_id`, CAST(NULL AS STRING) AS `feature`, CAST(NULL AS FLOAT) AS `threshold`, 2 AS `count`, 3 AS `depth`, 12 AS `parent_id`, -0.9335664261886162 AS `Estimator` UNION ALL SELECT 14 AS `node_id`, CAST(NULL AS STRING) AS `feature`, CAST(NULL AS FLOAT) AS `threshold`, 1 AS `count`, 3 AS `depth`, 12 AS `parent_id`, -0.9346481935986011 AS `Estimator`) AS `Values`), 
`DT_Output_8` AS 
(SELECT `DT_node_lookup_8`.`KEY` AS `KEY`, `DT_node_lookup_8`.`node_id_2` AS `node_id_2`, `DT_node_data_8`.`node_id` AS `node_id`, `DT_node_data_8`.`feature` AS `feature`, `DT_node_data_8`.`threshold` AS `threshold`, `DT_node_data_8`.`count` AS `count`, `DT_node_data_8`.`depth` AS `depth`, `DT_node_data_8`.`parent_id` AS `parent_id`, `DT_node_data_8`.`Estimator` AS `Estimator` 
FROM `DT_node_lookup_8` LEFT OUTER JOIN `DT_node_data_8` ON `DT_node_lookup_8`.`node_id_2` = `DT_node_data_8`.`node_id`), 
`GB_Tree_2_0` AS 
(SELECT `DT_Output_8`.`KEY` AS `KEY`, `DT_Output_8`.`Estimator` AS `Score_0`, 0.0 AS `Score_1`, 0.0 AS `Score_2`, 0.0 AS `Score_3` 
FROM `DT_Output_8`), 
`DT_node_lookup_9` AS 
(SELECT `ADS_sca_2_OUT`.`KEY` AS `KEY`, CASE WHEN (`ADS_sca_2_OUT`.`scaler_8` <= -0.4371722340583801) THEN CASE WHEN (`ADS_sca_2_OUT`.`scaler_2` <= 0.020183872431516647) THEN CASE WHEN (`ADS_sca_2_OUT`.`scaler_2` <= -0.3691574037075043) THEN 3 ELSE 4 END ELSE 5 END ELSE CASE WHEN (`ADS_sca_2_OUT`.`scaler_8` <= -0.34105679392814636) THEN 7 ELSE CASE WHEN (`ADS_sca_2_OUT`.`scaler_6` <= 0.002084195613861084) THEN 9 ELSE 10 END END END AS `node_id_2` 
FROM `ADS_sca_2_OUT`), 
`DT_node_data_9` AS 
(SELECT `Values`.`node_id` AS `node_id`, `Values`.`feature` AS `feature`, `Values`.`threshold` AS `threshold`, `Values`.`count` AS `count`, `Values`.`depth` AS `depth`, `Values`.`parent_id` AS `parent_id`, `Values`.`Estimator` AS `Estimator` 
FROM (SELECT 0 AS `node_id`, 'scaler_8' AS `feature`, -0.4371722340583801 AS `threshold`, 25 AS `count`, 0 AS `depth`, CAST(NULL AS INT) AS `parent_id`, -0.029901893926394946 AS `Estimator` UNION ALL SELECT 1 AS `node_id`, 'scaler_2' AS `feature`, 0.020183872431516647 AS `threshold`, 9 AS `count`, 1 AS `depth`, 0 AS `parent_id`, 0.2542924694820319 AS `Estimator` UNION ALL SELECT 2 AS `node_id`, 'scaler_2' AS `feature`, -0.3691574037075043 AS `threshold`, 6 AS `count`, 2 AS `depth`, 1 AS `parent_id`, 0.07387972850159692 AS `Estimator` UNION ALL SELECT 3 AS `node_id`, CAST(NULL AS STRING) AS `feature`, CAST(NULL AS FLOAT) AS `threshold`, 2 AS `count`, 3 AS `depth`, 2 AS `parent_id`, 1.871201961292481 AS `Estimator` UNION ALL SELECT 4 AS `node_id`, CAST(NULL AS STRING) AS `feature`, CAST(NULL AS FLOAT) AS `threshold`, 4 AS `count`, 3 AS `depth`, 2 AS `parent_id`, -0.9249734169300627 AS `Estimator` UNION ALL SELECT 5 AS `node_id`, CAST(NULL AS STRING) AS `feature`, CAST(NULL AS FLOAT) AS `threshold`, 3 AS `count`, 2 AS `depth`, 1 AS `parent_id`, 1.9486489505335702 AS `Estimator` UNION ALL SELECT 6 AS `node_id`, 'scaler_8' AS `feature`, -0.34105679392814636 AS `threshold`, 16 AS `count`, 1 AS `depth`, 0 AS `parent_id`, -0.18976122334363502 AS `Estimator` UNION ALL SELECT 7 AS `node_id`, CAST(NULL AS STRING) AS `feature`, CAST(NULL AS FLOAT) AS `threshold`, 1 AS `count`, 2 AS `depth`, 6 AS `parent_id`, -0.9744570400224709 AS `Estimator` UNION ALL SELECT 8 AS `node_id`, 'scaler_6' AS `feature`, 0.002084195613861084 AS `threshold`, 15 AS `count`, 2 AS `depth`, 6 AS `parent_id`, -0.18705593014698627 AS `Estimator` UNION ALL SELECT 9 AS `node_id`, CAST(NULL AS STRING) AS `feature`, CAST(NULL AS FLOAT) AS `threshold`, 8 AS `count`, 3 AS `depth`, 8 AS `parent_id`, -0.9297795216738489 AS `Estimator` UNION ALL SELECT 10 AS `node_id`, CAST(NULL AS STRING) AS `feature`, CAST(NULL AS FLOAT) AS `threshold`, 7 AS `count`, 3 AS `depth`, 8 AS `parent_id`, -0.9149125327702436 AS `Estimator`) AS `Values`), 
`DT_Output_9` AS 
(SELECT `DT_node_lookup_9`.`KEY` AS `KEY`, `DT_node_lookup_9`.`node_id_2` AS `node_id_2`, `DT_node_data_9`.`node_id` AS `node_id`, `DT_node_data_9`.`feature` AS `feature`, `DT_node_data_9`.`threshold` AS `threshold`, `DT_node_data_9`.`count` AS `count`, `DT_node_data_9`.`depth` AS `depth`, `DT_node_data_9`.`parent_id` AS `parent_id`, `DT_node_data_9`.`Estimator` AS `Estimator` 
FROM `DT_node_lookup_9` LEFT OUTER JOIN `DT_node_data_9` ON `DT_node_lookup_9`.`node_id_2` = `DT_node_data_9`.`node_id`), 
`GB_Tree_2_1` AS 
(SELECT `DT_Output_9`.`KEY` AS `KEY`, 0.0 AS `Score_0`, `DT_Output_9`.`Estimator` AS `Score_1`, 0.0 AS `Score_2`, 0.0 AS `Score_3` 
FROM `DT_Output_9`), 
`DT_node_lookup_10` AS 
(SELECT `ADS_sca_2_OUT`.`KEY` AS `KEY`, CASE WHEN (`ADS_sca_2_OUT`.`scaler_5` <= -0.7113025188446045) THEN CASE WHEN (`ADS_sca_2_OUT`.`scaler_10` <= 1.301293969154358) THEN 2 ELSE 3 END ELSE CASE WHEN (`ADS_sca_2_OUT`.`scaler_4` <= -0.6991826891899109) THEN 5 ELSE CASE WHEN (`ADS_sca_2_OUT`.`scaler_9` <= 0.30286872386932373) THEN 7 ELSE 8 END END END AS `node_id_2` 
FROM `ADS_sca_2_OUT`), 
`DT_node_data_10` AS 
(SELECT `Values`.`node_id` AS `node_id`, `Values`.`feature` AS `feature`, `Values`.`threshold` AS `threshold`, `Values`.`count` AS `count`, `Values`.`depth` AS `depth`, `Values`.`parent_id` AS `parent_id`, `Values`.`Estimator` AS `Estimator` 
FROM (SELECT 0 AS `node_id`, 'scaler_5' AS `feature`, -0.7113025188446045 AS `threshold`, 25 AS `count`, 0 AS `depth`, CAST(NULL AS INT) AS `parent_id`, -0.006520086581886158 AS `Estimator` UNION ALL SELECT 1 AS `node_id`, 'scaler_10' AS `feature`, 1.301293969154358 AS `threshold`, 7 AS `count`, 1 AS `depth`, 0 AS `parent_id`, 0.47609586045817714 AS `Estimator` UNION ALL SELECT 2 AS `node_id`, CAST(NULL AS STRING) AS `feature`, CAST(NULL AS FLOAT) AS `threshold`, 6 AS `count`, 2 AS `depth`, 1 AS `parent_id`, 1.8120030651550605 AS `Estimator` UNION ALL SELECT 3 AS `node_id`, CAST(NULL AS STRING) AS `feature`, CAST(NULL AS FLOAT) AS `threshold`, 1 AS `count`, 2 AS `depth`, 1 AS `parent_id`, -0.9189931392085523 AS `Estimator` UNION ALL SELECT 4 AS `node_id`, 'scaler_4' AS `feature`, -0.6991826891899109 AS `threshold`, 18 AS `count`, 1 AS `depth`, 0 AS `parent_id`, -0.19420406598635526 AS `Estimator` UNION ALL SELECT 5 AS `node_id`, CAST(NULL AS STRING) AS `feature`, CAST(NULL AS FLOAT) AS `threshold`, 1 AS `count`, 2 AS `depth`, 4 AS `parent_id`, -0.9928429278269565 AS `Estimator` UNION ALL SELECT 6 AS `node_id`, 'scaler_9' AS `feature`, 0.30286872386932373 AS `threshold`, 17 AS `count`, 2 AS `depth`, 4 AS `parent_id`, -0.1912399815639131 AS `Estimator` UNION ALL SELECT 7 AS `node_id`, CAST(NULL AS STRING) AS `feature`, CAST(NULL AS FLOAT) AS `threshold`, 8 AS `count`, 3 AS `depth`, 6 AS `parent_id`, -0.9371513417817708 AS `Estimator` UNION ALL SELECT 8 AS `node_id`, CAST(NULL AS STRING) AS `feature`, CAST(NULL AS FLOAT) AS `threshold`, 9 AS `count`, 3 AS `depth`, 6 AS `parent_id`, -0.9195660371316868 AS `Estimator`) AS `Values`), 
`DT_Output_10` AS 
(SELECT `DT_node_lookup_10`.`KEY` AS `KEY`, `DT_node_lookup_10`.`node_id_2` AS `node_id_2`, `DT_node_data_10`.`node_id` AS `node_id`, `DT_node_data_10`.`feature` AS `feature`, `DT_node_data_10`.`threshold` AS `threshold`, `DT_node_data_10`.`count` AS `count`, `DT_node_data_10`.`depth` AS `depth`, `DT_node_data_10`.`parent_id` AS `parent_id`, `DT_node_data_10`.`Estimator` AS `Estimator` 
FROM `DT_node_lookup_10` LEFT OUTER JOIN `DT_node_data_10` ON `DT_node_lookup_10`.`node_id_2` = `DT_node_data_10`.`node_id`), 
`GB_Tree_2_2` AS 
(SELECT `DT_Output_10`.`KEY` AS `KEY`, 0.0 AS `Score_0`, 0.0 AS `Score_1`, `DT_Output_10`.`Estimator` AS `Score_2`, 0.0 AS `Score_3` 
FROM `DT_Output_10`), 
`DT_node_lookup_11` AS 
(SELECT `ADS_sca_2_OUT`.`KEY` AS `KEY`, CASE WHEN (`ADS_sca_2_OUT`.`scaler_3` <= -0.009305356070399284) THEN CASE WHEN (`ADS_sca_2_OUT`.`scaler_10` <= 0.7738221883773804) THEN CASE WHEN (`ADS_sca_2_OUT`.`scaler_11` <= -1.2250674962997437) THEN 3 ELSE 4 END ELSE 5 END ELSE CASE WHEN (`ADS_sca_2_OUT`.`scaler_6` <= 0.6600019931793213) THEN CASE WHEN (`ADS_sca_2_OUT`.`scaler_2` <= 0.08243580162525177) THEN 8 ELSE 9 END ELSE CASE WHEN (`ADS_sca_2_OUT`.`scaler_4` <= 0.657892644405365) THEN 11 ELSE 12 END END END AS `node_id_2` 
FROM `ADS_sca_2_OUT`), 
`DT_node_data_11` AS 
(SELECT `Values`.`node_id` AS `node_id`, `Values`.`feature` AS `feature`, `Values`.`threshold` AS `threshold`, `Values`.`count` AS `count`, `Values`.`depth` AS `depth`, `Values`.`parent_id` AS `parent_id`, `Values`.`Estimator` AS `Estimator` 
FROM (SELECT 0 AS `node_id`, 'scaler_3' AS `feature`, -0.009305356070399284 AS `threshold`, 25 AS `count`, 0 AS `depth`, CAST(NULL AS INT) AS `parent_id`, 0.042763585285150896 AS `Estimator` UNION ALL SELECT 1 AS `node_id`, 'scaler_10' AS `feature`, 0.7738221883773804 AS `threshold`, 11 AS `count`, 1 AS `depth`, 0 AS `parent_id`, -0.2029690203107357 AS `Estimator` UNION ALL SELECT 2 AS `node_id`, 'scaler_11' AS `feature`, -1.2250674962997437 AS `threshold`, 8 AS `count`, 2 AS `depth`, 1 AS `parent_id`, -0.20359213865170278 AS `Estimator` UNION ALL SELECT 3 AS `node_id`, CAST(NULL AS STRING) AS `feature`, CAST(NULL AS FLOAT) AS `threshold`, 1 AS `count`, 3 AS `depth`, 2 AS `parent_id`, -0.9392401201470809 AS `Estimator` UNION ALL SELECT 4 AS `node_id`, CAST(NULL AS STRING) AS `feature`, CAST(NULL AS FLOAT) AS `threshold`, 7 AS `count`, 3 AS `depth`, 2 AS `parent_id`, -0.9420855977896543 AS `Estimator` UNION ALL SELECT 5 AS `node_id`, CAST(NULL AS STRING) AS `feature`, CAST(NULL AS FLOAT) AS `threshold`, 3 AS `count`, 2 AS `depth`, 1 AS `parent_id`, -0.9390345838133908 AS `Estimator` UNION ALL SELECT 6 AS `node_id`, 'scaler_6' AS `feature`, 0.6600019931793213 AS `threshold`, 14 AS `count`, 1 AS `depth`, 0 AS `parent_id`, 0.23583920396763317 AS `Estimator` UNION ALL SELECT 7 AS `node_id`, 'scaler_2' AS `feature`, 0.08243580162525177 AS `threshold`, 11 AS `count`, 2 AS `depth`, 6 AS `parent_id`, 0.3552326960420954 AS `Estimator` UNION ALL SELECT 8 AS `node_id`, CAST(NULL AS STRING) AS `feature`, CAST(NULL AS FLOAT) AS `threshold`, 7 AS `count`, 3 AS `depth`, 7 AS `parent_id`, 1.7137908454341062 AS `Estimator` UNION ALL SELECT 9 AS `node_id`, CAST(NULL AS STRING) AS `feature`, CAST(NULL AS FLOAT) AS `threshold`, 4 AS `count`, 3 AS `depth`, 7 AS `parent_id`, -0.02875941264227214 AS `Estimator` UNION ALL SELECT 10 AS `node_id`, 'scaler_4' AS `feature`, 0.657892644405365 AS `threshold`, 3 AS `count`, 2 AS `depth`, 6 AS `parent_id`, -0.20193693363872803 AS `Estimator` UNION ALL SELECT 11 AS `node_id`, CAST(NULL AS STRING) AS `feature`, CAST(NULL AS FLOAT) AS `threshold`, 2 AS `count`, 3 AS `depth`, 10 AS `parent_id`, -0.9391085722340502 AS `Estimator` UNION ALL SELECT 12 AS `node_id`, CAST(NULL AS STRING) AS `feature`, CAST(NULL AS FLOAT) AS `threshold`, 1 AS `count`, 3 AS `depth`, 10 AS `parent_id`, -0.941111802596525 AS `Estimator`) AS `Values`), 
`DT_Output_11` AS 
(SELECT `DT_node_lookup_11`.`KEY` AS `KEY`, `DT_node_lookup_11`.`node_id_2` AS `node_id_2`, `DT_node_data_11`.`node_id` AS `node_id`, `DT_node_data_11`.`feature` AS `feature`, `DT_node_data_11`.`threshold` AS `threshold`, `DT_node_data_11`.`count` AS `count`, `DT_node_data_11`.`depth` AS `depth`, `DT_node_data_11`.`parent_id` AS `parent_id`, `DT_node_data_11`.`Estimator` AS `Estimator` 
FROM `DT_node_lookup_11` LEFT OUTER JOIN `DT_node_data_11` ON `DT_node_lookup_11`.`node_id_2` = `DT_node_data_11`.`node_id`), 
`GB_Tree_2_3` AS 
(SELECT `DT_Output_11`.`KEY` AS `KEY`, 0.0 AS `Score_0`, 0.0 AS `Score_1`, 0.0 AS `Score_2`, `DT_Output_11`.`Estimator` AS `Score_3` 
FROM `DT_Output_11`), 
`DT_node_lookup_12` AS 
(SELECT `ADS_sca_2_OUT`.`KEY` AS `KEY`, CASE WHEN (`ADS_sca_2_OUT`.`scaler_6` <= 0.002084195613861084) THEN CASE WHEN (`ADS_sca_2_OUT`.`scaler_7` <= -0.9363440275192261) THEN CASE WHEN (`ADS_sca_2_OUT`.`scaler_4` <= -0.46122249960899353) THEN 3 ELSE 4 END ELSE CASE WHEN (`ADS_sca_2_OUT`.`scaler_9` <= 0.36037176847457886) THEN 6 ELSE 7 END END ELSE CASE WHEN (`ADS_sca_2_OUT`.`scaler_8` <= -0.6434570550918579) THEN CASE WHEN (`ADS_sca_2_OUT`.`scaler_4` <= 1.1469624042510986) THEN 10 ELSE 11 END ELSE CASE WHEN (`ADS_sca_2_OUT`.`scaler_8` <= 1.2198177576065063) THEN 13 ELSE 14 END END END AS `node_id_2` 
FROM `ADS_sca_2_OUT`), 
`DT_node_data_12` AS 
(SELECT `Values`.`node_id` AS `node_id`, `Values`.`feature` AS `feature`, `Values`.`threshold` AS `threshold`, `Values`.`count` AS `count`, `Values`.`depth` AS `depth`, `Values`.`parent_id` AS `parent_id`, `Values`.`Estimator` AS `Estimator` 
FROM (SELECT 0 AS `node_id`, 'scaler_6' AS `feature`, 0.002084195613861084 AS `threshold`, 25 AS `count`, 0 AS `depth`, CAST(NULL AS INT) AS `parent_id`, -0.007283096353348806 AS `Estimator` UNION ALL SELECT 1 AS `node_id`, 'scaler_7' AS `feature`, -0.9363440275192261 AS `threshold`, 14 AS `count`, 1 AS `depth`, 0 AS `parent_id`, -0.176613425545761 AS `Estimator` UNION ALL SELECT 2 AS `node_id`, 'scaler_4' AS `feature`, -0.46122249960899353 AS `threshold`, 2 AS `count`, 2 AS `depth`, 1 AS `parent_id`, -0.20146901445000173 AS `Estimator` UNION ALL SELECT 3 AS `node_id`, CAST(NULL AS STRING) AS `feature`, CAST(NULL AS FLOAT) AS `threshold`, 1 AS `count`, 3 AS `depth`, 2 AS `parent_id`, -0.9706955357424473 AS `Estimator` UNION ALL SELECT 4 AS `node_id`, CAST(NULL AS STRING) AS `feature`, CAST(NULL AS FLOAT) AS `threshold`, 1 AS `count`, 3 AS `depth`, 2 AS `parent_id`, -0.9097303497790835 AS `Estimator` UNION ALL SELECT 5 AS `node_id`, 'scaler_9' AS `feature`, 0.36037176847457886 AS `threshold`, 12 AS `count`, 2 AS `depth`, 1 AS `parent_id`, -0.17247082739505423 AS `Estimator` UNION ALL SELECT 6 AS `node_id`, CAST(NULL AS STRING) AS `feature`, CAST(NULL AS FLOAT) AS `threshold`, 8 AS `count`, 3 AS `depth`, 5 AS `parent_id`, -0.90958230780787 AS `Estimator` UNION ALL SELECT 7 AS `node_id`, CAST(NULL AS STRING) AS `feature`, CAST(NULL AS FLOAT) AS `threshold`, 4 AS `count`, 3 AS `depth`, 5 AS `parent_id`, -0.9000085721614499 AS `Estimator` UNION ALL SELECT 8 AS `node_id`, 'scaler_8' AS `feature`, -0.6434570550918579 AS `threshold`, 11 AS `count`, 1 AS `depth`, 0 AS `parent_id`, 0.20822823170972127 AS `Estimator` UNION ALL SELECT 9 AS `node_id`, 'scaler_4' AS `feature`, 1.1469624042510986 AS `threshold`, 3 AS `count`, 2 AS `depth`, 8 AS `parent_id`, -0.17474361186727203 AS `Estimator` UNION ALL SELECT 10 AS `node_id`, CAST(NULL AS STRING) AS `feature`, CAST(NULL AS FLOAT) AS `threshold`, 1 AS `count`, 3 AS `depth`, 9 AS `parent_id`, -0.9095536752460406 AS `Estimator` UNION ALL SELECT 11 AS `node_id`, CAST(NULL AS STRING) AS `feature`, CAST(NULL AS FLOAT) AS `threshold`, 2 AS `count`, 3 AS `depth`, 9 AS `parent_id`, -0.9084363546484876 AS `Estimator` UNION ALL SELECT 12 AS `node_id`, 'scaler_8' AS `feature`, 1.2198177576065063 AS `threshold`, 8 AS `count`, 2 AS `depth`, 8 AS `parent_id`, 0.3518426730510937 AS `Estimator` UNION ALL SELECT 13 AS `node_id`, CAST(NULL AS STRING) AS `feature`, CAST(NULL AS FLOAT) AS `threshold`, 6 AS `count`, 3 AS `depth`, 12 AS `parent_id`, 1.587330772509695 AS `Estimator` UNION ALL SELECT 14 AS `node_id`, CAST(NULL AS STRING) AS `feature`, CAST(NULL AS FLOAT) AS `threshold`, 2 AS `count`, 3 AS `depth`, 12 AS `parent_id`, -0.9092619507335712 AS `Estimator`) AS `Values`), 
`DT_Output_12` AS 
(SELECT `DT_node_lookup_12`.`KEY` AS `KEY`, `DT_node_lookup_12`.`node_id_2` AS `node_id_2`, `DT_node_data_12`.`node_id` AS `node_id`, `DT_node_data_12`.`feature` AS `feature`, `DT_node_data_12`.`threshold` AS `threshold`, `DT_node_data_12`.`count` AS `count`, `DT_node_data_12`.`depth` AS `depth`, `DT_node_data_12`.`parent_id` AS `parent_id`, `DT_node_data_12`.`Estimator` AS `Estimator` 
FROM `DT_node_lookup_12` LEFT OUTER JOIN `DT_node_data_12` ON `DT_node_lookup_12`.`node_id_2` = `DT_node_data_12`.`node_id`), 
`GB_Tree_3_0` AS 
(SELECT `DT_Output_12`.`KEY` AS `KEY`, `DT_Output_12`.`Estimator` AS `Score_0`, 0.0 AS `Score_1`, 0.0 AS `Score_2`, 0.0 AS `Score_3` 
FROM `DT_Output_12`), 
`DT_node_lookup_13` AS 
(SELECT `ADS_sca_2_OUT`.`KEY` AS `KEY`, CASE WHEN (`ADS_sca_2_OUT`.`scaler_8` <= -0.4371722340583801) THEN CASE WHEN (`ADS_sca_2_OUT`.`scaler_2` <= 0.020183872431516647) THEN CASE WHEN (`ADS_sca_2_OUT`.`scaler_2` <= -0.3691574037075043) THEN 3 ELSE 4 END ELSE 5 END ELSE CASE WHEN (`ADS_sca_2_OUT`.`scaler_8` <= -0.34105679392814636) THEN 7 ELSE CASE WHEN (`ADS_sca_2_OUT`.`scaler_6` <= 0.002084195613861084) THEN 9 ELSE 10 END END END AS `node_id_2` 
FROM `ADS_sca_2_OUT`), 
`DT_node_data_13` AS 
(SELECT `Values`.`node_id` AS `node_id`, `Values`.`feature` AS `feature`, `Values`.`threshold` AS `threshold`, `Values`.`count` AS `count`, `Values`.`depth` AS `depth`, `Values`.`parent_id` AS `parent_id`, `Values`.`Estimator` AS `Estimator` 
FROM (SELECT 0 AS `node_id`, 'scaler_8' AS `feature`, -0.4371722340583801 AS `threshold`, 25 AS `count`, 0 AS `depth`, CAST(NULL AS INT) AS `parent_id`, -0.026235638627506858 AS `Estimator` UNION ALL SELECT 1 AS `node_id`, 'scaler_2' AS `feature`, 0.020183872431516647 AS `threshold`, 9 AS `count`, 1 AS `depth`, 0 AS `parent_id`, 0.22839890184211745 AS `Estimator` UNION ALL SELECT 2 AS `node_id`, 'scaler_2' AS `feature`, -0.3691574037075043 AS `threshold`, 6 AS `count`, 2 AS `depth`, 1 AS `parent_id`, 0.06525215270536855 AS `Estimator` UNION ALL SELECT 3 AS `node_id`, CAST(NULL AS STRING) AS `feature`, CAST(NULL AS FLOAT) AS `threshold`, 2 AS `count`, 3 AS `depth`, 2 AS `parent_id`, 1.597533246681576 AS `Estimator` UNION ALL SELECT 4 AS `node_id`, CAST(NULL AS STRING) AS `feature`, CAST(NULL AS FLOAT) AS `threshold`, 4 AS `count`, 3 AS `depth`, 2 AS `parent_id`, -0.9011557243842014 AS `Estimator` UNION ALL SELECT 5 AS `node_id`, CAST(NULL AS STRING) AS `feature`, CAST(NULL AS FLOAT) AS `threshold`, 3 AS `count`, 2 AS `depth`, 1 AS `parent_id`, 1.684229059182288 AS `Estimator` UNION ALL SELECT 6 AS `node_id`, 'scaler_8' AS `feature`, -0.34105679392814636 AS `threshold`, 16 AS `count`, 1 AS `depth`, 0 AS `parent_id`, -0.16946756764167048 AS `Estimator` UNION ALL SELECT 7 AS `node_id`, CAST(NULL AS STRING) AS `feature`, CAST(NULL AS FLOAT) AS `threshold`, 1 AS `count`, 2 AS `depth`, 6 AS `parent_id`, -0.965846832617185 AS `Estimator` UNION ALL SELECT 8 AS `node_id`, 'scaler_6' AS `feature`, 0.002084195613861084 AS `threshold`, 15 AS `count`, 2 AS `depth`, 6 AS `parent_id`, -0.165866781442629 AS `Estimator` UNION ALL SELECT 9 AS `node_id`, CAST(NULL AS STRING) AS `feature`, CAST(NULL AS FLOAT) AS `threshold`, 8 AS `count`, 3 AS `depth`, 8 AS `parent_id`, -0.9051169729303313 AS `Estimator` UNION ALL SELECT 10 AS `node_id`, CAST(NULL AS STRING) AS `feature`, CAST(NULL AS FLOAT) AS `threshold`, 7 AS `count`, 3 AS `depth`, 8 AS `parent_id`, -0.8927716743167351 AS `Estimator`) AS `Values`), 
`DT_Output_13` AS 
(SELECT `DT_node_lookup_13`.`KEY` AS `KEY`, `DT_node_lookup_13`.`node_id_2` AS `node_id_2`, `DT_node_data_13`.`node_id` AS `node_id`, `DT_node_data_13`.`feature` AS `feature`, `DT_node_data_13`.`threshold` AS `threshold`, `DT_node_data_13`.`count` AS `count`, `DT_node_data_13`.`depth` AS `depth`, `DT_node_data_13`.`parent_id` AS `parent_id`, `DT_node_data_13`.`Estimator` AS `Estimator` 
FROM `DT_node_lookup_13` LEFT OUTER JOIN `DT_node_data_13` ON `DT_node_lookup_13`.`node_id_2` = `DT_node_data_13`.`node_id`), 
`GB_Tree_3_1` AS 
(SELECT `DT_Output_13`.`KEY` AS `KEY`, 0.0 AS `Score_0`, `DT_Output_13`.`Estimator` AS `Score_1`, 0.0 AS `Score_2`, 0.0 AS `Score_3` 
FROM `DT_Output_13`), 
`DT_node_lookup_14` AS 
(SELECT `ADS_sca_2_OUT`.`KEY` AS `KEY`, CASE WHEN (`ADS_sca_2_OUT`.`scaler_5` <= -0.7113025188446045) THEN CASE WHEN (`ADS_sca_2_OUT`.`scaler_2` <= 1.7123074531555176) THEN 2 ELSE 3 END ELSE CASE WHEN (`ADS_sca_2_OUT`.`scaler_4` <= -0.6991826891899109) THEN 5 ELSE CASE WHEN (`ADS_sca_2_OUT`.`scaler_2` <= 0.08243580162525177) THEN 7 ELSE 8 END END END AS `node_id_2` 
FROM `ADS_sca_2_OUT`), 
`DT_node_data_14` AS 
(SELECT `Values`.`node_id` AS `node_id`, `Values`.`feature` AS `feature`, `Values`.`threshold` AS `threshold`, `Values`.`count` AS `count`, `Values`.`depth` AS `depth`, `Values`.`parent_id` AS `parent_id`, `Values`.`Estimator` AS `Estimator` 
FROM (SELECT 0 AS `node_id`, 'scaler_5' AS `feature`, -0.7113025188446045 AS `threshold`, 25 AS `count`, 0 AS `depth`, CAST(NULL AS INT) AS `parent_id`, -0.006192816566827689 AS `Estimator` UNION ALL SELECT 1 AS `node_id`, 'scaler_2' AS `feature`, 1.7123074531555176 AS `threshold`, 7 AS `count`, 1 AS `depth`, 0 AS `parent_id`, 0.4213395019391037 AS `Estimator` UNION ALL SELECT 2 AS `node_id`, CAST(NULL AS STRING) AS `feature`, CAST(NULL AS FLOAT) AS `threshold`, 6 AS `count`, 2 AS `depth`, 1 AS `parent_id`, 1.5582305713468485 AS `Estimator` UNION ALL SELECT 3 AS `node_id`, CAST(NULL AS STRING) AS `feature`, CAST(NULL AS FLOAT) AS `threshold`, 1 AS `count`, 2 AS `depth`, 1 AS `parent_id`, -0.8957709800159428 AS `Estimator` UNION ALL SELECT 4 AS `node_id`, 'scaler_4' AS `feature`, -0.6991826891899109 AS `threshold`, 18 AS `count`, 1 AS `depth`, 0 AS `parent_id`, -0.1724553848746899 AS `Estimator` UNION ALL SELECT 5 AS `node_id`, CAST(NULL AS STRING) AS `feature`, CAST(NULL AS FLOAT) AS `threshold`, 1 AS `count`, 2 AS `depth`, 4 AS `parent_id`, -0.98254408053456 AS `Estimator` UNION ALL SELECT 6 AS `node_id`, 'scaler_2' AS `feature`, 0.08243580162525177 AS `threshold`, 17 AS `count`, 2 AS `depth`, 4 AS `parent_id`, -0.1686777328995957 AS `Estimator` UNION ALL SELECT 7 AS `node_id`, CAST(NULL AS STRING) AS `feature`, CAST(NULL AS FLOAT) AS `threshold`, 12 AS `count`, 3 AS `depth`, 6 AS `parent_id`, -0.9078245030787336 AS `Estimator` UNION ALL SELECT 8 AS `node_id`, CAST(NULL AS STRING) AS `feature`, CAST(NULL AS FLOAT) AS `threshold`, 5 AS `count`, 3 AS `depth`, 6 AS `parent_id`, -0.8900894408013581 AS `Estimator`) AS `Values`), 
`DT_Output_14` AS 
(SELECT `DT_node_lookup_14`.`KEY` AS `KEY`, `DT_node_lookup_14`.`node_id_2` AS `node_id_2`, `DT_node_data_14`.`node_id` AS `node_id`, `DT_node_data_14`.`feature` AS `feature`, `DT_node_data_14`.`threshold` AS `threshold`, `DT_node_data_14`.`count` AS `count`, `DT_node_data_14`.`depth` AS `depth`, `DT_node_data_14`.`parent_id` AS `parent_id`, `DT_node_data_14`.`Estimator` AS `Estimator` 
FROM `DT_node_lookup_14` LEFT OUTER JOIN `DT_node_data_14` ON `DT_node_lookup_14`.`node_id_2` = `DT_node_data_14`.`node_id`), 
`GB_Tree_3_2` AS 
(SELECT `DT_Output_14`.`KEY` AS `KEY`, 0.0 AS `Score_0`, 0.0 AS `Score_1`, `DT_Output_14`.`Estimator` AS `Score_2`, 0.0 AS `Score_3` 
FROM `DT_Output_14`), 
`DT_node_lookup_15` AS 
(SELECT `ADS_sca_2_OUT`.`KEY` AS `KEY`, CASE WHEN (`ADS_sca_2_OUT`.`scaler_3` <= -0.009305356070399284) THEN CASE WHEN (`ADS_sca_2_OUT`.`scaler_10` <= 0.7738221883773804) THEN CASE WHEN (`ADS_sca_2_OUT`.`scaler_10` <= -0.890032172203064) THEN 3 ELSE 4 END ELSE 5 END ELSE CASE WHEN (`ADS_sca_2_OUT`.`scaler_6` <= 0.6600019931793213) THEN CASE WHEN (`ADS_sca_2_OUT`.`scaler_2` <= 0.08243580162525177) THEN 8 ELSE 9 END ELSE CASE WHEN (`ADS_sca_2_OUT`.`scaler_4` <= 0.657892644405365) THEN 11 ELSE 12 END END END AS `node_id_2` 
FROM `ADS_sca_2_OUT`), 
`DT_node_data_15` AS 
(SELECT `Values`.`node_id` AS `node_id`, `Values`.`feature` AS `feature`, `Values`.`threshold` AS `threshold`, `Values`.`count` AS `count`, `Values`.`depth` AS `depth`, `Values`.`parent_id` AS `parent_id`, `Values`.`Estimator` AS `Estimator` 
FROM (SELECT 0 AS `node_id`, 'scaler_3' AS `feature`, -0.009305356070399284 AS `threshold`, 25 AS `count`, 0 AS `depth`, CAST(NULL AS INT) AS `parent_id`, 0.03845113564283514 AS `Estimator` UNION ALL SELECT 1 AS `node_id`, 'scaler_10' AS `feature`, 0.7738221883773804 AS `threshold`, 11 AS `count`, 1 AS `depth`, 0 AS `parent_id`, -0.1791824063135595 AS `Estimator` UNION ALL SELECT 2 AS `node_id`, 'scaler_10' AS `feature`, -0.890032172203064 AS `threshold`, 8 AS `count`, 2 AS `depth`, 1 AS `parent_id`, -0.1798517208894062 AS `Estimator` UNION ALL SELECT 3 AS `node_id`, CAST(NULL AS STRING) AS `feature`, CAST(NULL AS FLOAT) AS `threshold`, 1 AS `count`, 3 AS `depth`, 2 AS `parent_id`, -0.9119408538638946 AS `Estimator` UNION ALL SELECT 4 AS `node_id`, CAST(NULL AS STRING) AS `feature`, CAST(NULL AS FLOAT) AS `threshold`, 7 AS `count`, 3 AS `depth`, 2 AS `parent_id`, -0.9148316787271505 AS `Estimator` UNION ALL SELECT 5 AS `node_id`, CAST(NULL AS STRING) AS `feature`, CAST(NULL AS FLOAT) AS `threshold`, 3 AS `count`, 2 AS `depth`, 1 AS `parent_id`, -0.9117405596341612 AS `Estimator` UNION ALL SELECT 6 AS `node_id`, 'scaler_6' AS `feature`, 0.6600019931793213 AS `threshold`, 14 AS `count`, 1 AS `depth`, 0 AS `parent_id`, 0.20944891860857376 AS `Estimator` UNION ALL SELECT 7 AS `node_id`, 'scaler_2' AS `feature`, 0.08243580162525177 AS `threshold`, 11 AS `count`, 2 AS `depth`, 6 AS `parent_id`, 0.31513896649102763 AS `Estimator` UNION ALL SELECT 8 AS `node_id`, CAST(NULL AS STRING) AS `feature`, CAST(NULL AS FLOAT) AS `threshold`, 7 AS `count`, 3 AS `depth`, 7 AS `parent_id`, 1.4915897900871553 AS `Estimator` UNION ALL SELECT 9 AS `node_id`, CAST(NULL AS STRING) AS `feature`, CAST(NULL AS FLOAT) AS `threshold`, 4 AS `count`, 3 AS `depth`, 7 AS `parent_id`, -0.01383383596063253 AS `Estimator` UNION ALL SELECT 10 AS `node_id`, 'scaler_4' AS `feature`, 0.657892644405365 AS `threshold`, 3 AS `count`, 2 AS `depth`, 6 AS `parent_id`, -0.17808125696042373 AS `Estimator` UNION ALL SELECT 11 AS `node_id`, CAST(NULL AS STRING) AS `feature`, CAST(NULL AS FLOAT) AS `threshold`, 2 AS `count`, 3 AS `depth`, 10 AS `parent_id`, -0.9117967868725548 AS `Estimator` UNION ALL SELECT 12 AS `node_id`, CAST(NULL AS STRING) AS `feature`, CAST(NULL AS FLOAT) AS `threshold`, 1 AS `count`, 3 AS `depth`, 10 AS `parent_id`, -0.9139065691797427 AS `Estimator`) AS `Values`), 
`DT_Output_15` AS 
(SELECT `DT_node_lookup_15`.`KEY` AS `KEY`, `DT_node_lookup_15`.`node_id_2` AS `node_id_2`, `DT_node_data_15`.`node_id` AS `node_id`, `DT_node_data_15`.`feature` AS `feature`, `DT_node_data_15`.`threshold` AS `threshold`, `DT_node_data_15`.`count` AS `count`, `DT_node_data_15`.`depth` AS `depth`, `DT_node_data_15`.`parent_id` AS `parent_id`, `DT_node_data_15`.`Estimator` AS `Estimator` 
FROM `DT_node_lookup_15` LEFT OUTER JOIN `DT_node_data_15` ON `DT_node_lookup_15`.`node_id_2` = `DT_node_data_15`.`node_id`), 
`GB_Tree_3_3` AS 
(SELECT `DT_Output_15`.`KEY` AS `KEY`, 0.0 AS `Score_0`, 0.0 AS `Score_1`, 0.0 AS `Score_2`, `DT_Output_15`.`Estimator` AS `Score_3` 
FROM `DT_Output_15`), 
`Score_Union_CTE` AS 
(SELECT `ensemble_score_union`.`KEY` AS `KEY`, `ensemble_score_union`.`Score_0` AS `Score_0`, `ensemble_score_union`.`Score_1` AS `Score_1`, `ensemble_score_union`.`Score_2` AS `Score_2`, `ensemble_score_union`.`Score_3` AS `Score_3` 
FROM (SELECT `GB_Tree_0_0`.`KEY` AS `KEY`, `GB_Tree_0_0`.`Score_0` AS `Score_0`, `GB_Tree_0_0`.`Score_1` AS `Score_1`, `GB_Tree_0_0`.`Score_2` AS `Score_2`, `GB_Tree_0_0`.`Score_3` AS `Score_3` 
FROM `GB_Tree_0_0` UNION ALL SELECT `GB_Tree_0_1`.`KEY` AS `KEY`, `GB_Tree_0_1`.`Score_0` AS `Score_0`, `GB_Tree_0_1`.`Score_1` AS `Score_1`, `GB_Tree_0_1`.`Score_2` AS `Score_2`, `GB_Tree_0_1`.`Score_3` AS `Score_3` 
FROM `GB_Tree_0_1` UNION ALL SELECT `GB_Tree_0_2`.`KEY` AS `KEY`, `GB_Tree_0_2`.`Score_0` AS `Score_0`, `GB_Tree_0_2`.`Score_1` AS `Score_1`, `GB_Tree_0_2`.`Score_2` AS `Score_2`, `GB_Tree_0_2`.`Score_3` AS `Score_3` 
FROM `GB_Tree_0_2` UNION ALL SELECT `GB_Tree_0_3`.`KEY` AS `KEY`, `GB_Tree_0_3`.`Score_0` AS `Score_0`, `GB_Tree_0_3`.`Score_1` AS `Score_1`, `GB_Tree_0_3`.`Score_2` AS `Score_2`, `GB_Tree_0_3`.`Score_3` AS `Score_3` 
FROM `GB_Tree_0_3` UNION ALL SELECT `GB_Tree_1_0`.`KEY` AS `KEY`, `GB_Tree_1_0`.`Score_0` AS `Score_0`, `GB_Tree_1_0`.`Score_1` AS `Score_1`, `GB_Tree_1_0`.`Score_2` AS `Score_2`, `GB_Tree_1_0`.`Score_3` AS `Score_3` 
FROM `GB_Tree_1_0` UNION ALL SELECT `GB_Tree_1_1`.`KEY` AS `KEY`, `GB_Tree_1_1`.`Score_0` AS `Score_0`, `GB_Tree_1_1`.`Score_1` AS `Score_1`, `GB_Tree_1_1`.`Score_2` AS `Score_2`, `GB_Tree_1_1`.`Score_3` AS `Score_3` 
FROM `GB_Tree_1_1` UNION ALL SELECT `GB_Tree_1_2`.`KEY` AS `KEY`, `GB_Tree_1_2`.`Score_0` AS `Score_0`, `GB_Tree_1_2`.`Score_1` AS `Score_1`, `GB_Tree_1_2`.`Score_2` AS `Score_2`, `GB_Tree_1_2`.`Score_3` AS `Score_3` 
FROM `GB_Tree_1_2` UNION ALL SELECT `GB_Tree_1_3`.`KEY` AS `KEY`, `GB_Tree_1_3`.`Score_0` AS `Score_0`, `GB_Tree_1_3`.`Score_1` AS `Score_1`, `GB_Tree_1_3`.`Score_2` AS `Score_2`, `GB_Tree_1_3`.`Score_3` AS `Score_3` 
FROM `GB_Tree_1_3` UNION ALL SELECT `GB_Tree_2_0`.`KEY` AS `KEY`, `GB_Tree_2_0`.`Score_0` AS `Score_0`, `GB_Tree_2_0`.`Score_1` AS `Score_1`, `GB_Tree_2_0`.`Score_2` AS `Score_2`, `GB_Tree_2_0`.`Score_3` AS `Score_3` 
FROM `GB_Tree_2_0` UNION ALL SELECT `GB_Tree_2_1`.`KEY` AS `KEY`, `GB_Tree_2_1`.`Score_0` AS `Score_0`, `GB_Tree_2_1`.`Score_1` AS `Score_1`, `GB_Tree_2_1`.`Score_2` AS `Score_2`, `GB_Tree_2_1`.`Score_3` AS `Score_3` 
FROM `GB_Tree_2_1` UNION ALL SELECT `GB_Tree_2_2`.`KEY` AS `KEY`, `GB_Tree_2_2`.`Score_0` AS `Score_0`, `GB_Tree_2_2`.`Score_1` AS `Score_1`, `GB_Tree_2_2`.`Score_2` AS `Score_2`, `GB_Tree_2_2`.`Score_3` AS `Score_3` 
FROM `GB_Tree_2_2` UNION ALL SELECT `GB_Tree_2_3`.`KEY` AS `KEY`, `GB_Tree_2_3`.`Score_0` AS `Score_0`, `GB_Tree_2_3`.`Score_1` AS `Score_1`, `GB_Tree_2_3`.`Score_2` AS `Score_2`, `GB_Tree_2_3`.`Score_3` AS `Score_3` 
FROM `GB_Tree_2_3` UNION ALL SELECT `GB_Tree_3_0`.`KEY` AS `KEY`, `GB_Tree_3_0`.`Score_0` AS `Score_0`, `GB_Tree_3_0`.`Score_1` AS `Score_1`, `GB_Tree_3_0`.`Score_2` AS `Score_2`, `GB_Tree_3_0`.`Score_3` AS `Score_3` 
FROM `GB_Tree_3_0` UNION ALL SELECT `GB_Tree_3_1`.`KEY` AS `KEY`, `GB_Tree_3_1`.`Score_0` AS `Score_0`, `GB_Tree_3_1`.`Score_1` AS `Score_1`, `GB_Tree_3_1`.`Score_2` AS `Score_2`, `GB_Tree_3_1`.`Score_3` AS `Score_3` 
FROM `GB_Tree_3_1` UNION ALL SELECT `GB_Tree_3_2`.`KEY` AS `KEY`, `GB_Tree_3_2`.`Score_0` AS `Score_0`, `GB_Tree_3_2`.`Score_1` AS `Score_1`, `GB_Tree_3_2`.`Score_2` AS `Score_2`, `GB_Tree_3_2`.`Score_3` AS `Score_3` 
FROM `GB_Tree_3_2` UNION ALL SELECT `GB_Tree_3_3`.`KEY` AS `KEY`, `GB_Tree_3_3`.`Score_0` AS `Score_0`, `GB_Tree_3_3`.`Score_1` AS `Score_1`, `GB_Tree_3_3`.`Score_2` AS `Score_2`, `GB_Tree_3_3`.`Score_3` AS `Score_3` 
FROM `GB_Tree_3_3`) AS `ensemble_score_union`), 
`GradBoost_Sum_Scores` AS 
(SELECT `T`.`KEY` AS `KEY`, `T`.`Score_0` AS `Score_0`, `T`.`Score_1` AS `Score_1`, `T`.`Score_2` AS `Score_2`, `T`.`Score_3` AS `Score_3` 
FROM (SELECT `Score_Union_CTE`.`KEY` AS `KEY`, sum(`Score_Union_CTE`.`Score_0`) AS `Score_0`, sum(`Score_Union_CTE`.`Score_1`) AS `Score_1`, sum(`Score_Union_CTE`.`Score_2`) AS `Score_2`, sum(`Score_Union_CTE`.`Score_3`) AS `Score_3` 
FROM `Score_Union_CTE` GROUP BY `Score_Union_CTE`.`KEY`) AS `T`), 
`orig_cte` AS 
(SELECT `GradBoost_Sum_Scores`.`KEY` AS `KEY`, 0.24 + 0.1 * `GradBoost_Sum_Scores`.`Score_0` AS `Score_0`, 0.2 + 0.1 * `GradBoost_Sum_Scores`.`Score_1` AS `Score_1`, 0.24 + 0.1 * `GradBoost_Sum_Scores`.`Score_2` AS `Score_2`, 0.32 + 0.1 * `GradBoost_Sum_Scores`.`Score_3` AS `Score_3`, CAST(NULL AS FLOAT) AS `Proba_0`, CAST(NULL AS FLOAT) AS `Proba_1`, CAST(NULL AS FLOAT) AS `Proba_2`, CAST(NULL AS FLOAT) AS `Proba_3`, CAST(NULL AS FLOAT) AS `LogProba_0`, CAST(NULL AS FLOAT) AS `LogProba_1`, CAST(NULL AS FLOAT) AS `LogProba_2`, CAST(NULL AS FLOAT) AS `LogProba_3`, CAST(NULL AS INT) AS `Decision`, CAST(NULL AS FLOAT) AS `DecisionProba` 
FROM `GradBoost_Sum_Scores`), 
`score_class_union` AS 
(SELECT `scu`.`KEY_u` AS `KEY_u`, `scu`.`class` AS `class`, `scu`.`LogProba` AS `LogProba`, `scu`.`Proba` AS `Proba`, `scu`.`Score` AS `Score` 
FROM (SELECT `orig_cte`.`KEY` AS `KEY_u`, 0 AS `class`, `orig_cte`.`LogProba_0` AS `LogProba`, `orig_cte`.`Proba_0` AS `Proba`, `orig_cte`.`Score_0` AS `Score` 
FROM `orig_cte` UNION ALL SELECT `orig_cte`.`KEY` AS `KEY_u`, 1 AS `class`, `orig_cte`.`LogProba_1` AS `LogProba`, `orig_cte`.`Proba_1` AS `Proba`, `orig_cte`.`Score_1` AS `Score` 
FROM `orig_cte` UNION ALL SELECT `orig_cte`.`KEY` AS `KEY_u`, 2 AS `class`, `orig_cte`.`LogProba_2` AS `LogProba`, `orig_cte`.`Proba_2` AS `Proba`, `orig_cte`.`Score_2` AS `Score` 
FROM `orig_cte` UNION ALL SELECT `orig_cte`.`KEY` AS `KEY_u`, 3 AS `class`, `orig_cte`.`LogProba_3` AS `LogProba`, `orig_cte`.`Proba_3` AS `Proba`, `orig_cte`.`Score_3` AS `Score` 
FROM `orig_cte`) AS `scu`), 
`score_max` AS 
(SELECT `orig_cte`.`KEY` AS `KEY`, `orig_cte`.`Score_0` AS `Score_0`, `orig_cte`.`Score_1` AS `Score_1`, `orig_cte`.`Score_2` AS `Score_2`, `orig_cte`.`Score_3` AS `Score_3`, `orig_cte`.`Proba_0` AS `Proba_0`, `orig_cte`.`Proba_1` AS `Proba_1`, `orig_cte`.`Proba_2` AS `Proba_2`, `orig_cte`.`Proba_3` AS `Proba_3`, `orig_cte`.`LogProba_0` AS `LogProba_0`, `orig_cte`.`LogProba_1` AS `LogProba_1`, `orig_cte`.`LogProba_2` AS `LogProba_2`, `orig_cte`.`LogProba_3` AS `LogProba_3`, `orig_cte`.`Decision` AS `Decision`, `orig_cte`.`DecisionProba` AS `DecisionProba`, `max_select`.`KEY_m` AS `KEY_m`, `max_select`.`max_Score` AS `max_Score` 
FROM `orig_cte` LEFT OUTER JOIN (SELECT `score_class_union`.`KEY_u` AS `KEY_m`, max(`score_class_union`.`Score`) AS `max_Score` 
FROM `score_class_union` GROUP BY `score_class_union`.`KEY_u`) AS `max_select` ON `orig_cte`.`KEY` = `max_select`.`KEY_m`), 
`score_soft_max_deltas` AS 
(SELECT `score_max`.`KEY` AS `KEY`, `score_max`.`Score_0` AS `Score_0`, `score_max`.`Score_1` AS `Score_1`, `score_max`.`Score_2` AS `Score_2`, `score_max`.`Score_3` AS `Score_3`, `score_max`.`Proba_0` AS `Proba_0`, `score_max`.`Proba_1` AS `Proba_1`, `score_max`.`Proba_2` AS `Proba_2`, `score_max`.`Proba_3` AS `Proba_3`, `score_max`.`LogProba_0` AS `LogProba_0`, `score_max`.`LogProba_1` AS `LogProba_1`, `score_max`.`LogProba_2` AS `LogProba_2`, `score_max`.`LogProba_3` AS `LogProba_3`, `score_max`.`Decision` AS `Decision`, `score_max`.`DecisionProba` AS `DecisionProba`, `score_max`.`KEY_m` AS `KEY_m`, `score_max`.`max_Score` AS `max_Score`, exp(`score_max`.`Score_0` - `score_max`.`max_Score`) AS `exp_delta_Score_0`, exp(`score_max`.`Score_1` - `score_max`.`max_Score`) AS `exp_delta_Score_1`, exp(`score_max`.`Score_2` - `score_max`.`max_Score`) AS `exp_delta_Score_2`, exp(`score_max`.`Score_3` - `score_max`.`max_Score`) AS `exp_delta_Score_3` 
FROM `score_max`), 
`score_class_union_soft` AS 
(SELECT `soft_scu`.`KEY` AS `KEY`, `soft_scu`.`class` AS `class`, `soft_scu`.`exp_delta_Score` AS `exp_delta_Score` 
FROM (SELECT `score_soft_max_deltas`.`KEY` AS `KEY`, 0 AS `class`, `score_soft_max_deltas`.`exp_delta_Score_0` AS `exp_delta_Score` 
FROM `score_soft_max_deltas` UNION ALL SELECT `score_soft_max_deltas`.`KEY` AS `KEY`, 1 AS `class`, `score_soft_max_deltas`.`exp_delta_Score_1` AS `exp_delta_Score` 
FROM `score_soft_max_deltas` UNION ALL SELECT `score_soft_max_deltas`.`KEY` AS `KEY`, 2 AS `class`, `score_soft_max_deltas`.`exp_delta_Score_2` AS `exp_delta_Score` 
FROM `score_soft_max_deltas` UNION ALL SELECT `score_soft_max_deltas`.`KEY` AS `KEY`, 3 AS `class`, `score_soft_max_deltas`.`exp_delta_Score_3` AS `exp_delta_Score` 
FROM `score_soft_max_deltas`) AS `soft_scu`), 
`score_soft_max` AS 
(SELECT `score_soft_max_deltas`.`KEY` AS `KEY`, `score_soft_max_deltas`.`Score_0` AS `Score_0`, `score_soft_max_deltas`.`Score_1` AS `Score_1`, `score_soft_max_deltas`.`Score_2` AS `Score_2`, `score_soft_max_deltas`.`Score_3` AS `Score_3`, `score_soft_max_deltas`.`Proba_0` AS `Proba_0`, `score_soft_max_deltas`.`Proba_1` AS `Proba_1`, `score_soft_max_deltas`.`Proba_2` AS `Proba_2`, `score_soft_max_deltas`.`Proba_3` AS `Proba_3`, `score_soft_max_deltas`.`LogProba_0` AS `LogProba_0`, `score_soft_max_deltas`.`LogProba_1` AS `LogProba_1`, `score_soft_max_deltas`.`LogProba_2` AS `LogProba_2`, `score_soft_max_deltas`.`LogProba_3` AS `LogProba_3`, `score_soft_max_deltas`.`Decision` AS `Decision`, `score_soft_max_deltas`.`DecisionProba` AS `DecisionProba`, `score_soft_max_deltas`.`KEY_m` AS `KEY_m`, `score_soft_max_deltas`.`max_Score` AS `max_Score`, `score_soft_max_deltas`.`exp_delta_Score_0` AS `exp_delta_Score_0`, `score_soft_max_deltas`.`exp_delta_Score_1` AS `exp_delta_Score_1`, `score_soft_max_deltas`.`exp_delta_Score_2` AS `exp_delta_Score_2`, `score_soft_max_deltas`.`exp_delta_Score_3` AS `exp_delta_Score_3`, `sum_exp_t`.`KEY_sum` AS `KEY_sum`, `sum_exp_t`.`sum_ExpDeltaScore` AS `sum_ExpDeltaScore` 
FROM `score_soft_max_deltas` LEFT OUTER JOIN (SELECT `score_class_union_soft`.`KEY` AS `KEY_sum`, sum(`score_class_union_soft`.`exp_delta_Score`) AS `sum_ExpDeltaScore` 
FROM `score_class_union_soft` GROUP BY `score_class_union_soft`.`KEY`) AS `sum_exp_t` ON `score_soft_max_deltas`.`KEY` = `sum_exp_t`.`KEY_sum`), 
`union_with_max` AS 
(SELECT `score_class_union`.`KEY_u` AS `KEY_u`, `score_class_union`.`class` AS `class`, `score_class_union`.`LogProba` AS `LogProba`, `score_class_union`.`Proba` AS `Proba`, `score_class_union`.`Score` AS `Score`, `score_soft_max`.`KEY` AS `KEY`, `score_soft_max`.`Score_0` AS `Score_0`, `score_soft_max`.`Score_1` AS `Score_1`, `score_soft_max`.`Score_2` AS `Score_2`, `score_soft_max`.`Score_3` AS `Score_3`, `score_soft_max`.`Proba_0` AS `Proba_0`, `score_soft_max`.`Proba_1` AS `Proba_1`, `score_soft_max`.`Proba_2` AS `Proba_2`, `score_soft_max`.`Proba_3` AS `Proba_3`, `score_soft_max`.`LogProba_0` AS `LogProba_0`, `score_soft_max`.`LogProba_1` AS `LogProba_1`, `score_soft_max`.`LogProba_2` AS `LogProba_2`, `score_soft_max`.`LogProba_3` AS `LogProba_3`, `score_soft_max`.`Decision` AS `Decision`, `score_soft_max`.`DecisionProba` AS `DecisionProba`, `score_soft_max`.`KEY_m` AS `KEY_m`, `score_soft_max`.`max_Score` AS `max_Score`, `score_soft_max`.`exp_delta_Score_0` AS `exp_delta_Score_0`, `score_soft_max`.`exp_delta_Score_1` AS `exp_delta_Score_1`, `score_soft_max`.`exp_delta_Score_2` AS `exp_delta_Score_2`, `score_soft_max`.`exp_delta_Score_3` AS `exp_delta_Score_3`, `score_soft_max`.`KEY_sum` AS `KEY_sum`, `score_soft_max`.`sum_ExpDeltaScore` AS `sum_ExpDeltaScore` 
FROM `score_class_union` LEFT OUTER JOIN `score_soft_max` ON `score_class_union`.`KEY_u` = `score_soft_max`.`KEY`), 
`arg_max_cte` AS 
(SELECT `score_soft_max`.`KEY` AS `KEY`, `score_soft_max`.`Score_0` AS `Score_0`, `score_soft_max`.`Score_1` AS `Score_1`, `score_soft_max`.`Score_2` AS `Score_2`, `score_soft_max`.`Score_3` AS `Score_3`, `score_soft_max`.`Proba_0` AS `Proba_0`, `score_soft_max`.`Proba_1` AS `Proba_1`, `score_soft_max`.`Proba_2` AS `Proba_2`, `score_soft_max`.`Proba_3` AS `Proba_3`, `score_soft_max`.`LogProba_0` AS `LogProba_0`, `score_soft_max`.`LogProba_1` AS `LogProba_1`, `score_soft_max`.`LogProba_2` AS `LogProba_2`, `score_soft_max`.`LogProba_3` AS `LogProba_3`, `score_soft_max`.`Decision` AS `Decision`, `score_soft_max`.`DecisionProba` AS `DecisionProba`, `score_soft_max`.`KEY_m` AS `KEY_m`, `score_soft_max`.`max_Score` AS `max_Score`, `score_soft_max`.`exp_delta_Score_0` AS `exp_delta_Score_0`, `score_soft_max`.`exp_delta_Score_1` AS `exp_delta_Score_1`, `score_soft_max`.`exp_delta_Score_2` AS `exp_delta_Score_2`, `score_soft_max`.`exp_delta_Score_3` AS `exp_delta_Score_3`, `score_soft_max`.`KEY_sum` AS `KEY_sum`, `score_soft_max`.`sum_ExpDeltaScore` AS `sum_ExpDeltaScore`, `arg_max_t_Score`.`KEY_Score` AS `KEY_Score`, `arg_max_t_Score`.`arg_max_Score` AS `arg_max_Score`, `soft_max_comp`.`KEY_softmax` AS `KEY_softmax`, `soft_max_comp`.`SoftProba_0` AS `SoftProba_0`, `soft_max_comp`.`SoftProba_1` AS `SoftProba_1`, `soft_max_comp`.`SoftProba_2` AS `SoftProba_2`, `soft_max_comp`.`SoftProba_3` AS `SoftProba_3` 
FROM `score_soft_max` LEFT OUTER JOIN (SELECT `union_with_max`.`KEY` AS `KEY_Score`, min(`union_with_max`.`class`) AS `arg_max_Score` 
FROM `union_with_max` 
WHERE `union_with_max`.`max_Score` <= `union_with_max`.`Score` GROUP BY `union_with_max`.`KEY`) AS `arg_max_t_Score` ON `score_soft_max`.`KEY` = `arg_max_t_Score`.`KEY_Score` LEFT OUTER JOIN (SELECT `score_soft_max`.`KEY` AS `KEY_softmax`, `score_soft_max`.`exp_delta_Score_0` / `score_soft_max`.`sum_ExpDeltaScore` AS `SoftProba_0`, `score_soft_max`.`exp_delta_Score_1` / `score_soft_max`.`sum_ExpDeltaScore` AS `SoftProba_1`, `score_soft_max`.`exp_delta_Score_2` / `score_soft_max`.`sum_ExpDeltaScore` AS `SoftProba_2`, `score_soft_max`.`exp_delta_Score_3` / `score_soft_max`.`sum_ExpDeltaScore` AS `SoftProba_3` 
FROM `score_soft_max`) AS `soft_max_comp` ON `soft_max_comp`.`KEY_softmax` = `arg_max_t_Score`.`KEY_Score`)
 SELECT `arg_max_cte`.`KEY` AS `KEY`, `arg_max_cte`.`Score_0` AS `Score_0`, `arg_max_cte`.`Score_1` AS `Score_1`, `arg_max_cte`.`Score_2` AS `Score_2`, `arg_max_cte`.`Score_3` AS `Score_3`, `arg_max_cte`.`SoftProba_0` AS `Proba_0`, `arg_max_cte`.`SoftProba_1` AS `Proba_1`, `arg_max_cte`.`SoftProba_2` AS `Proba_2`, `arg_max_cte`.`SoftProba_3` AS `Proba_3`, CASE WHEN (`arg_max_cte`.`SoftProba_0` IS NULL OR `arg_max_cte`.`SoftProba_0` > 0.0) THEN log(`arg_max_cte`.`SoftProba_0`) ELSE -1.79769313486231e+308 END AS `LogProba_0`, CASE WHEN (`arg_max_cte`.`SoftProba_1` IS NULL OR `arg_max_cte`.`SoftProba_1` > 0.0) THEN log(`arg_max_cte`.`SoftProba_1`) ELSE -1.79769313486231e+308 END AS `LogProba_1`, CASE WHEN (`arg_max_cte`.`SoftProba_2` IS NULL OR `arg_max_cte`.`SoftProba_2` > 0.0) THEN log(`arg_max_cte`.`SoftProba_2`) ELSE -1.79769313486231e+308 END AS `LogProba_2`, CASE WHEN (`arg_max_cte`.`SoftProba_3` IS NULL OR `arg_max_cte`.`SoftProba_3` > 0.0) THEN log(`arg_max_cte`.`SoftProba_3`) ELSE -1.79769313486231e+308 END AS `LogProba_3`, `arg_max_cte`.`arg_max_Score` AS `Decision`, CASE WHEN (`arg_max_cte`.`SoftProba_0` <= CASE WHEN (`arg_max_cte`.`SoftProba_1` <= CASE WHEN (`arg_max_cte`.`SoftProba_2` <= `arg_max_cte`.`SoftProba_3`) THEN `arg_max_cte`.`SoftProba_3` ELSE `arg_max_cte`.`SoftProba_2` END) THEN CASE WHEN (`arg_max_cte`.`SoftProba_2` <= `arg_max_cte`.`SoftProba_3`) THEN `arg_max_cte`.`SoftProba_3` ELSE `arg_max_cte`.`SoftProba_2` END ELSE `arg_max_cte`.`SoftProba_1` END) THEN CASE WHEN (`arg_max_cte`.`SoftProba_1` <= CASE WHEN (`arg_max_cte`.`SoftProba_2` <= `arg_max_cte`.`SoftProba_3`) THEN `arg_max_cte`.`SoftProba_3` ELSE `arg_max_cte`.`SoftProba_2` END) THEN CASE WHEN (`arg_max_cte`.`SoftProba_2` <= `arg_max_cte`.`SoftProba_3`) THEN `arg_max_cte`.`SoftProba_3` ELSE `arg_max_cte`.`SoftProba_2` END ELSE `arg_max_cte`.`SoftProba_1` END ELSE `arg_max_cte`.`SoftProba_0` END AS `DecisionProba` 
FROM `arg_max_cte`