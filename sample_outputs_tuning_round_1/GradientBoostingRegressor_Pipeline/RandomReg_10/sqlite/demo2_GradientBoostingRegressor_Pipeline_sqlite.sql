-- This SQL code was generated by sklearn2sql (development version).
-- Copyright 2017

WITH "ADS_imp_1_OUT" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_0" IS NULL) THEN 0.0810083160112 ELSE "ADS"."Feature_0" END AS impter_2, CASE WHEN ("ADS"."Feature_1" IS NULL) THEN -0.269250048034 ELSE "ADS"."Feature_1" END AS impter_3, CASE WHEN ("ADS"."Feature_2" IS NULL) THEN 0.240487763101 ELSE "ADS"."Feature_2" END AS impter_4, CASE WHEN ("ADS"."Feature_3" IS NULL) THEN 0.142604128589 ELSE "ADS"."Feature_3" END AS impter_5, CASE WHEN ("ADS"."Feature_4" IS NULL) THEN 0.183572350866 ELSE "ADS"."Feature_4" END AS impter_6, CASE WHEN ("ADS"."Feature_5" IS NULL) THEN 0.173548954209 ELSE "ADS"."Feature_5" END AS impter_7, CASE WHEN ("ADS"."Feature_6" IS NULL) THEN 0.126298254061 ELSE "ADS"."Feature_6" END AS impter_8, CASE WHEN ("ADS"."Feature_7" IS NULL) THEN 0.360628810671 ELSE "ADS"."Feature_7" END AS impter_9, CASE WHEN ("ADS"."Feature_8" IS NULL) THEN -0.51115301513 ELSE "ADS"."Feature_8" END AS impter_10, CASE WHEN ("ADS"."Feature_9" IS NULL) THEN 0.203356397123 ELSE "ADS"."Feature_9" END AS impter_11 
FROM "RandomReg_10" AS "ADS"), 
"ADS_sca_2_OUT" AS 
(SELECT "ADS_imp_1_OUT"."KEY" AS "KEY", (CAST("ADS_imp_1_OUT".impter_2 AS FLOAT) - 0.0810083160112) / 0.90949713658 AS scaler_2, (CAST("ADS_imp_1_OUT".impter_3 AS FLOAT) - -0.269250048034) / 0.992426738719 AS scaler_3, (CAST("ADS_imp_1_OUT".impter_4 AS FLOAT) - 0.240487763101) / 0.759956724432 AS scaler_4, (CAST("ADS_imp_1_OUT".impter_5 AS FLOAT) - 0.142604128589) / 1.0926864622 AS scaler_5, (CAST("ADS_imp_1_OUT".impter_6 AS FLOAT) - 0.183572350866) / 1.05658801775 AS scaler_6, (CAST("ADS_imp_1_OUT".impter_7 AS FLOAT) - 0.173548954209) / 0.786365993461 AS scaler_7, (CAST("ADS_imp_1_OUT".impter_8 AS FLOAT) - 0.126298254061) / 1.3847124245 AS scaler_8, (CAST("ADS_imp_1_OUT".impter_9 AS FLOAT) - 0.360628810671) / 0.940597350833 AS scaler_9, (CAST("ADS_imp_1_OUT".impter_10 AS FLOAT) - -0.51115301513) / 1.18193438252 AS scaler_10, (CAST("ADS_imp_1_OUT".impter_11 AS FLOAT) - 0.203356397123) / 0.6906744839 AS scaler_11 
FROM "ADS_imp_1_OUT"), 
"DT_node_lookup" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_7 <= 0.1823035180568695) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_4 <= -1.5560998916625977) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_7 <= -1.5774152278900146) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_2 <= 0.021309636533260345) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_10 <= 0.060001831501722336) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_5 <= 1.3908100128173828) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_4 <= -0.5493066310882568) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 0 AS node_id, 'scaler_7' AS feature, 0.1823035180568695 AS threshold, 25 AS count, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 6.8212102632969615e-15 AS "Estimator" UNION ALL SELECT 1 AS node_id, 'scaler_4' AS feature, -1.5560998916625977 AS threshold, 11 AS count, 1 AS depth, 0 AS parent_id, -174.33121478496273 AS "Estimator" UNION ALL SELECT 2 AS node_id, 'scaler_7' AS feature, -1.5774152278900146 AS threshold, 2 AS count, 2 AS depth, 1 AS parent_id, -315.0944796771611 AS "Estimator" UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 2 AS parent_id, -254.77040127100898 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 2 AS parent_id, -375.41855808331314 AS "Estimator" UNION ALL SELECT 5 AS node_id, 'scaler_2' AS feature, 0.021309636533260345 AS threshold, 9 AS count, 2 AS depth, 1 AS parent_id, -143.05048925336308 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS count, 3 AS depth, 5 AS parent_id, -194.86370316141557 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS count, 3 AS depth, 5 AS parent_id, -78.28397186829747 AS "Estimator" UNION ALL SELECT 8 AS node_id, 'scaler_10' AS feature, 0.060001831501722336 AS threshold, 14 AS count, 1 AS depth, 0 AS parent_id, 136.97452590247073 AS "Estimator" UNION ALL SELECT 9 AS node_id, 'scaler_5' AS feature, 1.3908100128173828 AS threshold, 6 AS count, 2 AS depth, 8 AS parent_id, -40.847489294395196 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS count, 3 AS depth, 9 AS parent_id, -10.604612451079493 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 9 AS parent_id, -192.0618735109737 AS "Estimator" UNION ALL SELECT 12 AS node_id, 'scaler_4' AS feature, -0.5493066310882568 AS threshold, 8 AS count, 2 AS depth, 8 AS parent_id, 270.34103730012015 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 12 AS parent_id, -57.37127972913471 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 7 AS count, 3 AS depth, 12 AS parent_id, 317.15708259001366 AS "Estimator") AS "Values"), 
"DT_Output" AS 
(SELECT "DT_node_lookup"."KEY" AS "KEY", "DT_node_lookup".node_id_2 AS node_id_2, "DT_node_data".node_id AS node_id, "DT_node_data".feature AS feature, "DT_node_data".threshold AS threshold, "DT_node_data".count AS count, "DT_node_data".depth AS depth, "DT_node_data".parent_id AS parent_id, "DT_node_data"."Estimator" AS "Estimator" 
FROM "DT_node_lookup" LEFT OUTER JOIN "DT_node_data" ON "DT_node_lookup".node_id_2 = "DT_node_data".node_id), 
"GB_Tree_0_0" AS 
(SELECT "DT_Output"."KEY" AS "KEY", "DT_Output"."Estimator" AS "Estimator" 
FROM "DT_Output"), 
"DT_node_lookup_1" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_7 <= 0.1823035180568695) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_4 <= -1.5560998916625977) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_4 <= -1.7673089504241943) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_10 <= -1.1282618045806885) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_10 <= 0.060001831501722336) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_5 <= 1.3908100128173828) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_6 <= -1.154700756072998) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_1" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 0 AS node_id, 'scaler_7' AS feature, 0.1823035180568695 AS threshold, 25 AS count, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 8.526512829121202e-15 AS "Estimator" UNION ALL SELECT 1 AS node_id, 'scaler_4' AS feature, -1.5560998916625977 AS threshold, 11 AS count, 1 AS depth, 0 AS parent_id, -156.89809330646645 AS "Estimator" UNION ALL SELECT 2 AS node_id, 'scaler_4' AS feature, -1.7673089504241943 AS threshold, 2 AS count, 2 AS depth, 1 AS parent_id, -283.585031709445 AS "Estimator" UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 2 AS parent_id, -229.29336114390807 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 2 AS parent_id, -337.8767022749819 AS "Estimator" UNION ALL SELECT 5 AS node_id, 'scaler_10' AS feature, -1.1282618045806885 AS threshold, 9 AS count, 2 AS depth, 1 AS parent_id, -128.74544032802677 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 3 AS depth, 5 AS parent_id, -229.3989757789339 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 7 AS count, 3 AS depth, 5 AS parent_id, -99.98728734205329 AS "Estimator" UNION ALL SELECT 8 AS node_id, 'scaler_10' AS feature, 0.060001831501722336 AS threshold, 14 AS count, 1 AS depth, 0 AS parent_id, 123.27707331222364 AS "Estimator" UNION ALL SELECT 9 AS node_id, 'scaler_5' AS feature, 1.3908100128173828 AS threshold, 6 AS count, 2 AS depth, 8 AS parent_id, -36.762740364955675 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS count, 3 AS depth, 9 AS parent_id, -9.544151205971545 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 9 AS parent_id, -172.8556861598763 AS "Estimator" UNION ALL SELECT 12 AS node_id, 'scaler_6' AS feature, -1.154700756072998 AS threshold, 8 AS count, 2 AS depth, 8 AS parent_id, 243.30693357010813 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 12 AS parent_id, -51.634151756221236 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 7 AS count, 3 AS depth, 12 AS parent_id, 285.44137433101236 AS "Estimator") AS "Values"), 
"DT_Output_1" AS 
(SELECT "DT_node_lookup_1"."KEY" AS "KEY", "DT_node_lookup_1".node_id_2 AS node_id_2, "DT_node_data_1".node_id AS node_id, "DT_node_data_1".feature AS feature, "DT_node_data_1".threshold AS threshold, "DT_node_data_1".count AS count, "DT_node_data_1".depth AS depth, "DT_node_data_1".parent_id AS parent_id, "DT_node_data_1"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_1" LEFT OUTER JOIN "DT_node_data_1" ON "DT_node_lookup_1".node_id_2 = "DT_node_data_1".node_id), 
"GB_Tree_1_0" AS 
(SELECT "DT_Output_1"."KEY" AS "KEY", "DT_Output_1"."Estimator" AS "Estimator" 
FROM "DT_Output_1"), 
"DT_node_lookup_2" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_7 <= 0.1823035180568695) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_2 <= 0.2899431884288788) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_9 <= -0.8236780166625977) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_3 <= -0.0649823248386383) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_10 <= 0.060001831501722336) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_4 <= -0.6628701686859131) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_6 <= -1.154700756072998) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_2" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 0 AS node_id, 'scaler_7' AS feature, 0.1823035180568695 AS threshold, 25 AS count, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 6.8212102632969615e-15 AS "Estimator" UNION ALL SELECT 1 AS node_id, 'scaler_2' AS feature, 0.2899431884288788 AS threshold, 11 AS count, 1 AS depth, 0 AS parent_id, -141.2082839758198 AS "Estimator" UNION ALL SELECT 2 AS node_id, 'scaler_9' AS feature, -0.8236780166625977 AS threshold, 8 AS count, 2 AS depth, 1 AS parent_id, -174.75475134315485 AS "Estimator" UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 2 AS parent_id, -304.08903204748367 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 7 AS count, 3 AS depth, 2 AS parent_id, -156.27842552825072 AS "Estimator" UNION ALL SELECT 5 AS node_id, 'scaler_3' AS feature, -0.0649823248386383 AS threshold, 3 AS count, 2 AS depth, 1 AS parent_id, -51.75103766292627 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 5 AS parent_id, -39.31081642358086 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 3 AS depth, 5 AS parent_id, -57.97114828259897 AS "Estimator" UNION ALL SELECT 8 AS node_id, 'scaler_10' AS feature, 0.060001831501722336 AS threshold, 14 AS count, 1 AS depth, 0 AS parent_id, 110.94936598100128 AS "Estimator" UNION ALL SELECT 9 AS node_id, 'scaler_4' AS feature, -0.6628701686859131 AS threshold, 6 AS count, 2 AS depth, 8 AS parent_id, -33.086466328460105 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 9 AS parent_id, -155.5701175438887 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS count, 3 AS depth, 9 AS parent_id, -8.58973608537439 AS "Estimator" UNION ALL SELECT 12 AS node_id, 'scaler_6' AS feature, -1.154700756072998 AS threshold, 8 AS count, 2 AS depth, 8 AS parent_id, 218.97624021309733 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 12 AS parent_id, -46.47073658059911 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 7 AS count, 3 AS depth, 12 AS parent_id, 256.89723689791106 AS "Estimator") AS "Values"), 
"DT_Output_2" AS 
(SELECT "DT_node_lookup_2"."KEY" AS "KEY", "DT_node_lookup_2".node_id_2 AS node_id_2, "DT_node_data_2".node_id AS node_id, "DT_node_data_2".feature AS feature, "DT_node_data_2".threshold AS threshold, "DT_node_data_2".count AS count, "DT_node_data_2".depth AS depth, "DT_node_data_2".parent_id AS parent_id, "DT_node_data_2"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_2" LEFT OUTER JOIN "DT_node_data_2" ON "DT_node_lookup_2".node_id_2 = "DT_node_data_2".node_id), 
"GB_Tree_2_0" AS 
(SELECT "DT_Output_2"."KEY" AS "KEY", "DT_Output_2"."Estimator" AS "Estimator" 
FROM "DT_Output_2"), 
"DT_node_lookup_3" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_7 <= 0.1823035180568695) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_11 <= 0.7494455575942993) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_10 <= -1.1282618045806885) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_4 <= -1.7673089504241943) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_10 <= 0.060001831501722336) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_9 <= -1.2863092422485352) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_4 <= -0.5493066310882568) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_3" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 0 AS node_id, 'scaler_7' AS feature, 0.1823035180568695 AS threshold, 25 AS count, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, -3.9790393202565614e-15 AS "Estimator" UNION ALL SELECT 1 AS node_id, 'scaler_11' AS feature, 0.7494455575942993 AS threshold, 11 AS count, 1 AS depth, 0 AS parent_id, -127.08745557823785 AS "Estimator" UNION ALL SELECT 2 AS node_id, 'scaler_10' AS feature, -1.1282618045806885 AS threshold, 9 AS count, 2 AS depth, 1 AS parent_id, -103.72730000457649 AS "Estimator" UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 3 AS depth, 2 AS parent_id, -190.83123564821545 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 7 AS count, 3 AS depth, 2 AS parent_id, -78.84046124925109 AS "Estimator" UNION ALL SELECT 5 AS node_id, 'scaler_4' AS feature, -1.7673089504241943 AS threshold, 2 AS count, 2 AS depth, 1 AS parent_id, -232.20815565971375 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 5 AS parent_id, -190.7361824766922 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 5 AS parent_id, -273.6801288427353 AS "Estimator" UNION ALL SELECT 8 AS node_id, 'scaler_10' AS feature, 0.060001831501722336 AS threshold, 14 AS count, 1 AS depth, 0 AS parent_id, 99.85442938290113 AS "Estimator" UNION ALL SELECT 9 AS node_id, 'scaler_9' AS feature, -1.2863092422485352 AS threshold, 6 AS count, 2 AS depth, 8 AS parent_id, -29.7778196956141 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 9 AS parent_id, -140.01310578949983 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS count, 3 AS depth, 9 AS parent_id, -7.730762476836951 AS "Estimator" UNION ALL SELECT 12 AS node_id, 'scaler_4' AS feature, -0.5493066310882568 AS threshold, 8 AS count, 2 AS depth, 8 AS parent_id, 197.07861619178755 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 12 AS parent_id, -41.8236629225392 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 7 AS count, 3 AS depth, 12 AS parent_id, 231.20751320811993 AS "Estimator") AS "Values"), 
"DT_Output_3" AS 
(SELECT "DT_node_lookup_3"."KEY" AS "KEY", "DT_node_lookup_3".node_id_2 AS node_id_2, "DT_node_data_3".node_id AS node_id, "DT_node_data_3".feature AS feature, "DT_node_data_3".threshold AS threshold, "DT_node_data_3".count AS count, "DT_node_data_3".depth AS depth, "DT_node_data_3".parent_id AS parent_id, "DT_node_data_3"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_3" LEFT OUTER JOIN "DT_node_data_3" ON "DT_node_lookup_3".node_id_2 = "DT_node_data_3".node_id), 
"GB_Tree_3_0" AS 
(SELECT "DT_Output_3"."KEY" AS "KEY", "DT_Output_3"."Estimator" AS "Estimator" 
FROM "DT_Output_3"), 
"Score_Union_CTE" AS 
(SELECT ensemble_score_union."KEY" AS "KEY", ensemble_score_union."Estimator" AS "Estimator" 
FROM (SELECT "GB_Tree_0_0"."KEY" AS "KEY", "GB_Tree_0_0"."Estimator" AS "Estimator" 
FROM "GB_Tree_0_0" UNION ALL SELECT "GB_Tree_1_0"."KEY" AS "KEY", "GB_Tree_1_0"."Estimator" AS "Estimator" 
FROM "GB_Tree_1_0" UNION ALL SELECT "GB_Tree_2_0"."KEY" AS "KEY", "GB_Tree_2_0"."Estimator" AS "Estimator" 
FROM "GB_Tree_2_0" UNION ALL SELECT "GB_Tree_3_0"."KEY" AS "KEY", "GB_Tree_3_0"."Estimator" AS "Estimator" 
FROM "GB_Tree_3_0") AS ensemble_score_union), 
"GradBoost_Sum_Scores" AS 
(SELECT "T"."KEY" AS "KEY", "T"."Estimator" AS "Estimator" 
FROM (SELECT "Score_Union_CTE"."KEY" AS "KEY", sum("Score_Union_CTE"."Estimator") AS "Estimator" 
FROM "Score_Union_CTE" GROUP BY "Score_Union_CTE"."KEY") AS "T")
 SELECT "GradBoost_Sum_Scores"."KEY" AS "KEY", 24.0342649957 + 0.1 * "GradBoost_Sum_Scores"."Estimator" AS "Estimator" 
FROM "GradBoost_Sum_Scores"