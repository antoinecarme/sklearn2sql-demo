-- This SQL code was generated by sklearn2sql (development version).
-- Copyright 2017

WITH `SV_data` AS 
(SELECT `Values`.`sv_idx` AS `sv_idx`, `Values`.`dual_coeff` AS `dual_coeff`, `Values`.`sv_0` AS `sv_0`, `Values`.`sv_1` AS `sv_1`, `Values`.`sv_2` AS `sv_2`, `Values`.`sv_3` AS `sv_3`, `Values`.`sv_4` AS `sv_4`, `Values`.`sv_5` AS `sv_5`, `Values`.`sv_6` AS `sv_6`, `Values`.`sv_7` AS `sv_7`, `Values`.`sv_8` AS `sv_8`, `Values`.`sv_9` AS `sv_9` 
FROM (SELECT 0 AS `sv_idx`, -0.0207812673603 AS `dual_coeff`, 1.12087566025 AS `sv_0`, -0.144908237926 AS `sv_1`, -1.90017759866 AS `sv_2`, -2.56650626575 AS `sv_3`, -0.538763194408 AS `sv_4`, -0.763138301697 AS `sv_5`, 0.623238584932 AS `sv_6`, 0.406053323202 AS `sv_7`, -0.248947902249 AS `sv_8`, -0.981020139615 AS `sv_9` UNION ALL SELECT 1 AS `sv_idx`, -0.53488439737 AS `dual_coeff`, -0.883276681282 AS `sv_0`, 0.50104977481 AS `sv_1`, 0.247959867436 AS `sv_2`, 0.869311275668 AS `sv_3`, 1.99614765177 AS `sv_4`, 2.38037612507 AS `sv_5`, 2.61481887855 AS `sv_6`, -0.229139116269 AS `sv_7`, -0.0650419737088 AS `sv_8`, 0.365632770576 AS `sv_9` UNION ALL SELECT 2 AS `sv_idx`, -0.781833573779 AS `dual_coeff`, 0.683277645344 AS `sv_0`, 0.261521257875 AS `sv_1`, 0.462380601292 AS `sv_2`, 0.107158511968 AS `sv_3`, 0.228854816092 AS `sv_4`, 2.17209155158 AS `sv_5`, -0.184407790991 AS `sv_6`, 0.382194207643 AS `sv_7`, 0.332910563741 AS `sv_8`, -1.20202601142 AS `sv_9` UNION ALL SELECT 3 AS `sv_idx`, -1.0 AS `dual_coeff`, -0.307217892009 AS `sv_0`, -0.0841977064807 AS `sv_1`, -0.130627493152 AS `sv_2`, 0.560360095369 AS `sv_3`, -1.21956694502 AS `sv_4`, 1.31761766962 AS `sv_5`, 1.42641402119 AS `sv_6`, -0.0546937413987 AS `sv_7`, 1.18769013153 AS `sv_8`, 0.0150236090224 AS `sv_9` UNION ALL SELECT 4 AS `sv_idx`, 0.478309357704 AS `dual_coeff`, 0.407251263102 AS `sv_0`, 2.04669878675 AS `sv_1`, -3.99128851799 AS `sv_2`, 0.838281766139 AS `sv_3`, 0.540747310632 AS `sv_4`, 2.5692810288 AS `sv_5`, 2.43423552353 AS `sv_6`, 0.292885001656 AS `sv_7`, 0.318994396389 AS `sv_8`, -1.00836575844 AS `sv_9` UNION ALL SELECT 5 AS `sv_idx`, 0.300023855058 AS `dual_coeff`, -0.984247852088 AS `sv_0`, 1.93780982136 AS `sv_1`, 1.90096459652 AS `sv_2`, 1.02259654047 AS `sv_3`, 1.01773239693 AS `sv_4`, 0.427918166168 AS `sv_5`, -1.36373833867 AS `sv_6`, -0.368925202054 AS `sv_7`, -0.757307886485 AS `sv_8`, 0.916909021978 AS `sv_9` UNION ALL SELECT 6 AS `sv_idx`, 0.958795531151 AS `dual_coeff`, -1.02964318678 AS `sv_0`, -0.977391628507 AS `sv_1`, 1.75508297598 AS `sv_2`, 0.912248151689 AS `sv_3`, -0.0819673704161 AS `sv_4`, 1.2232824746 AS `sv_5`, 0.636305156382 AS `sv_6`, -0.346335163199 AS `sv_7`, 1.81040240277 AS `sv_8`, 0.781561330778 AS `sv_9` UNION ALL SELECT 7 AS `sv_idx`, 0.600370494596 AS `dual_coeff`, 0.336665226456 AS `sv_0`, -0.558392482364 AS `sv_1`, -1.63562728159 AS `sv_2`, -0.505800386514 AS `sv_3`, -0.222744448532 AS `sv_4`, 2.9041633226 AS `sv_5`, 0.491335010905 AS `sv_6`, 0.281960185745 AS `sv_7`, 0.944430988648 AS `sv_8`, -1.01227659412 AS `sv_9`) AS `Values`), 
`kernel_dp` AS 
(SELECT `t`.`KEY` AS `KEY`, `t`.`dot_product` AS `dot_product` 
FROM (SELECT `full_join_data_sv`.`KEY` AS `KEY`, sum(`full_join_data_sv`.`dot_prod1`) + 0.281185786993 AS `dot_product` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, `SV_data`.`dual_coeff` * (`ADS`.`Feature_0` * `SV_data`.`sv_0` + `ADS`.`Feature_1` * `SV_data`.`sv_1` + `ADS`.`Feature_2` * `SV_data`.`sv_2` + `ADS`.`Feature_3` * `SV_data`.`sv_3` + `ADS`.`Feature_4` * `SV_data`.`sv_4` + `ADS`.`Feature_5` * `SV_data`.`sv_5` + `ADS`.`Feature_6` * `SV_data`.`sv_6` + `ADS`.`Feature_7` * `SV_data`.`sv_7` + `ADS`.`Feature_8` * `SV_data`.`sv_8` + `ADS`.`Feature_9` * `SV_data`.`sv_9`) AS `dot_prod1` 
FROM `BinaryClass_10` AS `ADS`, `SV_data`) AS `full_join_data_sv` GROUP BY `full_join_data_sv`.`KEY`) AS `t`)
 SELECT `kernel_dp`.`KEY` AS `KEY`, -`kernel_dp`.`dot_product` AS `Score_0`, `kernel_dp`.`dot_product` AS `Score_1`, exp(`kernel_dp`.`dot_product` * -0.780706743744 + -0.132784534668) / (1.0 + exp(`kernel_dp`.`dot_product` * -0.780706743744 + -0.132784534668)) AS `Proba_0`, 1.0 / (1.0 + exp(`kernel_dp`.`dot_product` * -0.780706743744 + -0.132784534668)) AS `Proba_1`, CASE WHEN (exp(`kernel_dp`.`dot_product` * -0.780706743744 + -0.132784534668) / (1.0 + exp(`kernel_dp`.`dot_product` * -0.780706743744 + -0.132784534668)) IS NULL OR exp(`kernel_dp`.`dot_product` * -0.780706743744 + -0.132784534668) / (1.0 + exp(`kernel_dp`.`dot_product` * -0.780706743744 + -0.132784534668)) > 0.0) THEN log(exp(`kernel_dp`.`dot_product` * -0.780706743744 + -0.132784534668) / (1.0 + exp(`kernel_dp`.`dot_product` * -0.780706743744 + -0.132784534668))) ELSE -1.79769313486231e+308 END AS `LogProba_0`, CASE WHEN (1.0 / (1.0 + exp(`kernel_dp`.`dot_product` * -0.780706743744 + -0.132784534668)) IS NULL OR 1.0 / (1.0 + exp(`kernel_dp`.`dot_product` * -0.780706743744 + -0.132784534668)) > 0.0) THEN log(1.0 / (1.0 + exp(`kernel_dp`.`dot_product` * -0.780706743744 + -0.132784534668))) ELSE -1.79769313486231e+308 END AS `LogProba_1`, CASE WHEN (`kernel_dp`.`dot_product` > 0.0) THEN 1 ELSE 0 END AS `Decision`, CASE WHEN (exp(`kernel_dp`.`dot_product` * -0.780706743744 + -0.132784534668) / (1.0 + exp(`kernel_dp`.`dot_product` * -0.780706743744 + -0.132784534668)) <= 1.0 / (1.0 + exp(`kernel_dp`.`dot_product` * -0.780706743744 + -0.132784534668))) THEN 1.0 / (1.0 + exp(`kernel_dp`.`dot_product` * -0.780706743744 + -0.132784534668)) ELSE exp(`kernel_dp`.`dot_product` * -0.780706743744 + -0.132784534668) / (1.0 + exp(`kernel_dp`.`dot_product` * -0.780706743744 + -0.132784534668)) END AS `DecisionProba` 
FROM `kernel_dp`