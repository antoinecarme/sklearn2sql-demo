-- This SQL code was generated by sklearn2sql (development version).
-- Copyright 2017

WITH [DT_node_lookup] AS 
(SELECT [ADS].[KEY] AS [KEY], CASE WHEN ([ADS].[Feature_244] <= 0.03440605849027634) THEN 1 ELSE 2 END AS node_id_2 
FROM [BinaryClass_500] AS [ADS]), 
[DT_node_data] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Proba_0] AS [Proba_0], [Values].[LogProba_0] AS [LogProba_0], [Values].[Proba_1] AS [Proba_1], [Values].[LogProba_1] AS [LogProba_1], [Values].[Decision] AS [Decision], [Values].[DecisionProba] AS [DecisionProba] 
FROM (SELECT 1 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 48 AS count, 1 AS depth, 0 AS parent_id, 0.7708333333333335 AS [Proba_0], -0.260283098264 AS [LogProba_0], 0.22916666666666657 AS [Proba_1], -1.47330573811 AS [LogProba_1], 0 AS [Decision], 0.770833333333 AS [DecisionProba] UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 32 AS count, 1 AS depth, 0 AS parent_id, 0.06249999999999997 AS [Proba_0], -2.77258872224 AS [LogProba_0], 0.9375 AS [Proba_1], -0.0645385211376 AS [LogProba_1], 1 AS [Decision], 0.9375 AS [DecisionProba]) AS [Values]), 
[DT_Output] AS 
(SELECT [DT_node_lookup].[KEY] AS [KEY], [DT_node_lookup].node_id_2 AS node_id_2, [DT_node_data].node_id AS node_id, [DT_node_data].feature AS feature, [DT_node_data].threshold AS threshold, [DT_node_data].count AS count, [DT_node_data].depth AS depth, [DT_node_data].parent_id AS parent_id, [DT_node_data].[Proba_0] AS [Proba_0], [DT_node_data].[LogProba_0] AS [LogProba_0], [DT_node_data].[Proba_1] AS [Proba_1], [DT_node_data].[LogProba_1] AS [LogProba_1], [DT_node_data].[Decision] AS [Decision], [DT_node_data].[DecisionProba] AS [DecisionProba] 
FROM [DT_node_lookup] LEFT OUTER JOIN [DT_node_data] ON [DT_node_lookup].node_id_2 = [DT_node_data].node_id), 
[AdaBoost_Estim_0] AS 
(SELECT [DT_Output].[KEY] AS [KEY], (1.0 * (CASE WHEN ([DT_Output].[Proba_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output].[Proba_0] IS NULL OR [DT_Output].[Proba_0] > 0.0) THEN log([DT_Output].[Proba_0]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([DT_Output].[Proba_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output].[Proba_0] IS NULL OR [DT_Output].[Proba_0] > 0.0) THEN log([DT_Output].[Proba_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output].[Proba_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output].[Proba_1] IS NULL OR [DT_Output].[Proba_1] > 0.0) THEN log([DT_Output].[Proba_1]) ELSE -1.79769313486231e+308 END END) / 2)) / 32.0 AS [Score_0], 1.0 * (CASE WHEN ([DT_Output].[Proba_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output].[Proba_0] IS NULL OR [DT_Output].[Proba_0] > 0.0) THEN log([DT_Output].[Proba_0]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([DT_Output].[Proba_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output].[Proba_0] IS NULL OR [DT_Output].[Proba_0] > 0.0) THEN log([DT_Output].[Proba_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output].[Proba_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output].[Proba_1] IS NULL OR [DT_Output].[Proba_1] > 0.0) THEN log([DT_Output].[Proba_1]) ELSE -1.79769313486231e+308 END END) / 2) AS [Proba_0], (1.0 * (CASE WHEN ([DT_Output].[Proba_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output].[Proba_1] IS NULL OR [DT_Output].[Proba_1] > 0.0) THEN log([DT_Output].[Proba_1]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([DT_Output].[Proba_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output].[Proba_0] IS NULL OR [DT_Output].[Proba_0] > 0.0) THEN log([DT_Output].[Proba_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output].[Proba_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output].[Proba_1] IS NULL OR [DT_Output].[Proba_1] > 0.0) THEN log([DT_Output].[Proba_1]) ELSE -1.79769313486231e+308 END END) / 2)) / 32.0 AS [Score_1], 1.0 * (CASE WHEN ([DT_Output].[Proba_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output].[Proba_1] IS NULL OR [DT_Output].[Proba_1] > 0.0) THEN log([DT_Output].[Proba_1]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([DT_Output].[Proba_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output].[Proba_0] IS NULL OR [DT_Output].[Proba_0] > 0.0) THEN log([DT_Output].[Proba_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output].[Proba_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output].[Proba_1] IS NULL OR [DT_Output].[Proba_1] > 0.0) THEN log([DT_Output].[Proba_1]) ELSE -1.79769313486231e+308 END END) / 2) AS [Proba_1] 
FROM [DT_Output]), 
[DT_node_lookup_1] AS 
(SELECT [ADS].[KEY] AS [KEY], CASE WHEN ([ADS].[Feature_167] <= 0.4559175372123718) THEN 1 ELSE 2 END AS node_id_2 
FROM [BinaryClass_500] AS [ADS]), 
[DT_node_data_1] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Proba_0] AS [Proba_0], [Values].[LogProba_0] AS [LogProba_0], [Values].[Proba_1] AS [Proba_1], [Values].[LogProba_1] AS [LogProba_1], [Values].[Decision] AS [Decision], [Values].[DecisionProba] AS [DecisionProba] 
FROM (SELECT 1 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 51 AS count, 1 AS depth, 0 AS parent_id, 0.27418743783622734 AS [Proba_0], -1.29394332678 AS [LogProba_0], 0.7258125621637725 AS [Proba_1], -0.320463476329 AS [LogProba_1], 1 AS [Decision], 0.725812562164 AS [DecisionProba] UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 29 AS count, 1 AS depth, 0 AS parent_id, 0.8464560198446266 AS [Proba_0], -0.166697034051 AS [LogProba_0], 0.15354398015537343 AS [Proba_1], -1.87376823732 AS [LogProba_1], 0 AS [Decision], 0.846456019845 AS [DecisionProba]) AS [Values]), 
[DT_Output_1] AS 
(SELECT [DT_node_lookup_1].[KEY] AS [KEY], [DT_node_lookup_1].node_id_2 AS node_id_2, [DT_node_data_1].node_id AS node_id, [DT_node_data_1].feature AS feature, [DT_node_data_1].threshold AS threshold, [DT_node_data_1].count AS count, [DT_node_data_1].depth AS depth, [DT_node_data_1].parent_id AS parent_id, [DT_node_data_1].[Proba_0] AS [Proba_0], [DT_node_data_1].[LogProba_0] AS [LogProba_0], [DT_node_data_1].[Proba_1] AS [Proba_1], [DT_node_data_1].[LogProba_1] AS [LogProba_1], [DT_node_data_1].[Decision] AS [Decision], [DT_node_data_1].[DecisionProba] AS [DecisionProba] 
FROM [DT_node_lookup_1] LEFT OUTER JOIN [DT_node_data_1] ON [DT_node_lookup_1].node_id_2 = [DT_node_data_1].node_id), 
[AdaBoost_Estim_1] AS 
(SELECT [DT_Output_1].[KEY] AS [KEY], (1.0 * (CASE WHEN ([DT_Output_1].[Proba_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_1].[Proba_0] IS NULL OR [DT_Output_1].[Proba_0] > 0.0) THEN log([DT_Output_1].[Proba_0]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([DT_Output_1].[Proba_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_1].[Proba_0] IS NULL OR [DT_Output_1].[Proba_0] > 0.0) THEN log([DT_Output_1].[Proba_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_1].[Proba_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_1].[Proba_1] IS NULL OR [DT_Output_1].[Proba_1] > 0.0) THEN log([DT_Output_1].[Proba_1]) ELSE -1.79769313486231e+308 END END) / 2)) / 32.0 AS [Score_0], 1.0 * (CASE WHEN ([DT_Output_1].[Proba_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_1].[Proba_0] IS NULL OR [DT_Output_1].[Proba_0] > 0.0) THEN log([DT_Output_1].[Proba_0]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([DT_Output_1].[Proba_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_1].[Proba_0] IS NULL OR [DT_Output_1].[Proba_0] > 0.0) THEN log([DT_Output_1].[Proba_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_1].[Proba_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_1].[Proba_1] IS NULL OR [DT_Output_1].[Proba_1] > 0.0) THEN log([DT_Output_1].[Proba_1]) ELSE -1.79769313486231e+308 END END) / 2) AS [Proba_0], (1.0 * (CASE WHEN ([DT_Output_1].[Proba_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_1].[Proba_1] IS NULL OR [DT_Output_1].[Proba_1] > 0.0) THEN log([DT_Output_1].[Proba_1]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([DT_Output_1].[Proba_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_1].[Proba_0] IS NULL OR [DT_Output_1].[Proba_0] > 0.0) THEN log([DT_Output_1].[Proba_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_1].[Proba_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_1].[Proba_1] IS NULL OR [DT_Output_1].[Proba_1] > 0.0) THEN log([DT_Output_1].[Proba_1]) ELSE -1.79769313486231e+308 END END) / 2)) / 32.0 AS [Score_1], 1.0 * (CASE WHEN ([DT_Output_1].[Proba_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_1].[Proba_1] IS NULL OR [DT_Output_1].[Proba_1] > 0.0) THEN log([DT_Output_1].[Proba_1]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([DT_Output_1].[Proba_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_1].[Proba_0] IS NULL OR [DT_Output_1].[Proba_0] > 0.0) THEN log([DT_Output_1].[Proba_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_1].[Proba_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_1].[Proba_1] IS NULL OR [DT_Output_1].[Proba_1] > 0.0) THEN log([DT_Output_1].[Proba_1]) ELSE -1.79769313486231e+308 END END) / 2) AS [Proba_1] 
FROM [DT_Output_1]), 
[DT_node_lookup_2] AS 
(SELECT [ADS].[KEY] AS [KEY], CASE WHEN ([ADS].[Feature_454] <= 0.3353678584098816) THEN 1 ELSE 2 END AS node_id_2 
FROM [BinaryClass_500] AS [ADS]), 
[DT_node_data_2] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Proba_0] AS [Proba_0], [Values].[LogProba_0] AS [LogProba_0], [Values].[Proba_1] AS [Proba_1], [Values].[LogProba_1] AS [LogProba_1], [Values].[Decision] AS [Decision], [Values].[DecisionProba] AS [DecisionProba] 
FROM (SELECT 1 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 58 AS count, 1 AS depth, 0 AS parent_id, 0.343021299820798 AS [Proba_0], -1.06996273514 AS [LogProba_0], 0.6569787001792019 AS [Proba_1], -0.420103680842 AS [LogProba_1], 1 AS [Decision], 0.656978700179 AS [DecisionProba] UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 22 AS count, 1 AS depth, 0 AS parent_id, 1.0 AS [Proba_0], 0.0 AS [LogProba_0], 0.0 AS [Proba_1], -1.79769313486231e+308 AS [LogProba_1], 0 AS [Decision], 1.0 AS [DecisionProba]) AS [Values]), 
[DT_Output_2] AS 
(SELECT [DT_node_lookup_2].[KEY] AS [KEY], [DT_node_lookup_2].node_id_2 AS node_id_2, [DT_node_data_2].node_id AS node_id, [DT_node_data_2].feature AS feature, [DT_node_data_2].threshold AS threshold, [DT_node_data_2].count AS count, [DT_node_data_2].depth AS depth, [DT_node_data_2].parent_id AS parent_id, [DT_node_data_2].[Proba_0] AS [Proba_0], [DT_node_data_2].[LogProba_0] AS [LogProba_0], [DT_node_data_2].[Proba_1] AS [Proba_1], [DT_node_data_2].[LogProba_1] AS [LogProba_1], [DT_node_data_2].[Decision] AS [Decision], [DT_node_data_2].[DecisionProba] AS [DecisionProba] 
FROM [DT_node_lookup_2] LEFT OUTER JOIN [DT_node_data_2] ON [DT_node_lookup_2].node_id_2 = [DT_node_data_2].node_id), 
[AdaBoost_Estim_2] AS 
(SELECT [DT_Output_2].[KEY] AS [KEY], (1.0 * (CASE WHEN ([DT_Output_2].[Proba_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_2].[Proba_0] IS NULL OR [DT_Output_2].[Proba_0] > 0.0) THEN log([DT_Output_2].[Proba_0]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([DT_Output_2].[Proba_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_2].[Proba_0] IS NULL OR [DT_Output_2].[Proba_0] > 0.0) THEN log([DT_Output_2].[Proba_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_2].[Proba_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_2].[Proba_1] IS NULL OR [DT_Output_2].[Proba_1] > 0.0) THEN log([DT_Output_2].[Proba_1]) ELSE -1.79769313486231e+308 END END) / 2)) / 32.0 AS [Score_0], 1.0 * (CASE WHEN ([DT_Output_2].[Proba_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_2].[Proba_0] IS NULL OR [DT_Output_2].[Proba_0] > 0.0) THEN log([DT_Output_2].[Proba_0]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([DT_Output_2].[Proba_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_2].[Proba_0] IS NULL OR [DT_Output_2].[Proba_0] > 0.0) THEN log([DT_Output_2].[Proba_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_2].[Proba_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_2].[Proba_1] IS NULL OR [DT_Output_2].[Proba_1] > 0.0) THEN log([DT_Output_2].[Proba_1]) ELSE -1.79769313486231e+308 END END) / 2) AS [Proba_0], (1.0 * (CASE WHEN ([DT_Output_2].[Proba_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_2].[Proba_1] IS NULL OR [DT_Output_2].[Proba_1] > 0.0) THEN log([DT_Output_2].[Proba_1]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([DT_Output_2].[Proba_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_2].[Proba_0] IS NULL OR [DT_Output_2].[Proba_0] > 0.0) THEN log([DT_Output_2].[Proba_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_2].[Proba_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_2].[Proba_1] IS NULL OR [DT_Output_2].[Proba_1] > 0.0) THEN log([DT_Output_2].[Proba_1]) ELSE -1.79769313486231e+308 END END) / 2)) / 32.0 AS [Score_1], 1.0 * (CASE WHEN ([DT_Output_2].[Proba_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_2].[Proba_1] IS NULL OR [DT_Output_2].[Proba_1] > 0.0) THEN log([DT_Output_2].[Proba_1]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([DT_Output_2].[Proba_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_2].[Proba_0] IS NULL OR [DT_Output_2].[Proba_0] > 0.0) THEN log([DT_Output_2].[Proba_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_2].[Proba_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_2].[Proba_1] IS NULL OR [DT_Output_2].[Proba_1] > 0.0) THEN log([DT_Output_2].[Proba_1]) ELSE -1.79769313486231e+308 END END) / 2) AS [Proba_1] 
FROM [DT_Output_2]), 
[DT_node_lookup_3] AS 
(SELECT [ADS].[KEY] AS [KEY], CASE WHEN ([ADS].[Feature_340] <= 0.01712365821003914) THEN 1 ELSE 2 END AS node_id_2 
FROM [BinaryClass_500] AS [ADS]), 
[DT_node_data_3] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Proba_0] AS [Proba_0], [Values].[LogProba_0] AS [LogProba_0], [Values].[Proba_1] AS [Proba_1], [Values].[LogProba_1] AS [LogProba_1], [Values].[Decision] AS [Decision], [Values].[DecisionProba] AS [DecisionProba] 
FROM (SELECT 1 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 35 AS count, 1 AS depth, 0 AS parent_id, 0.07625518030903757 AS [Proba_0], -2.57366992732 AS [LogProba_0], 0.9237448196909624 AS [Proba_1], -0.0793194146478 AS [LogProba_1], 1 AS [Decision], 0.923744819691 AS [DecisionProba] UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 45 AS count, 1 AS depth, 0 AS parent_id, 0.7597001038574773 AS [Proba_0], -0.274831523764 AS [LogProba_0], 0.24029989614252278 AS [Proba_1], -1.42586756844 AS [LogProba_1], 0 AS [Decision], 0.759700103857 AS [DecisionProba]) AS [Values]), 
[DT_Output_3] AS 
(SELECT [DT_node_lookup_3].[KEY] AS [KEY], [DT_node_lookup_3].node_id_2 AS node_id_2, [DT_node_data_3].node_id AS node_id, [DT_node_data_3].feature AS feature, [DT_node_data_3].threshold AS threshold, [DT_node_data_3].count AS count, [DT_node_data_3].depth AS depth, [DT_node_data_3].parent_id AS parent_id, [DT_node_data_3].[Proba_0] AS [Proba_0], [DT_node_data_3].[LogProba_0] AS [LogProba_0], [DT_node_data_3].[Proba_1] AS [Proba_1], [DT_node_data_3].[LogProba_1] AS [LogProba_1], [DT_node_data_3].[Decision] AS [Decision], [DT_node_data_3].[DecisionProba] AS [DecisionProba] 
FROM [DT_node_lookup_3] LEFT OUTER JOIN [DT_node_data_3] ON [DT_node_lookup_3].node_id_2 = [DT_node_data_3].node_id), 
[AdaBoost_Estim_3] AS 
(SELECT [DT_Output_3].[KEY] AS [KEY], (1.0 * (CASE WHEN ([DT_Output_3].[Proba_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_3].[Proba_0] IS NULL OR [DT_Output_3].[Proba_0] > 0.0) THEN log([DT_Output_3].[Proba_0]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([DT_Output_3].[Proba_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_3].[Proba_0] IS NULL OR [DT_Output_3].[Proba_0] > 0.0) THEN log([DT_Output_3].[Proba_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_3].[Proba_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_3].[Proba_1] IS NULL OR [DT_Output_3].[Proba_1] > 0.0) THEN log([DT_Output_3].[Proba_1]) ELSE -1.79769313486231e+308 END END) / 2)) / 32.0 AS [Score_0], 1.0 * (CASE WHEN ([DT_Output_3].[Proba_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_3].[Proba_0] IS NULL OR [DT_Output_3].[Proba_0] > 0.0) THEN log([DT_Output_3].[Proba_0]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([DT_Output_3].[Proba_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_3].[Proba_0] IS NULL OR [DT_Output_3].[Proba_0] > 0.0) THEN log([DT_Output_3].[Proba_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_3].[Proba_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_3].[Proba_1] IS NULL OR [DT_Output_3].[Proba_1] > 0.0) THEN log([DT_Output_3].[Proba_1]) ELSE -1.79769313486231e+308 END END) / 2) AS [Proba_0], (1.0 * (CASE WHEN ([DT_Output_3].[Proba_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_3].[Proba_1] IS NULL OR [DT_Output_3].[Proba_1] > 0.0) THEN log([DT_Output_3].[Proba_1]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([DT_Output_3].[Proba_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_3].[Proba_0] IS NULL OR [DT_Output_3].[Proba_0] > 0.0) THEN log([DT_Output_3].[Proba_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_3].[Proba_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_3].[Proba_1] IS NULL OR [DT_Output_3].[Proba_1] > 0.0) THEN log([DT_Output_3].[Proba_1]) ELSE -1.79769313486231e+308 END END) / 2)) / 32.0 AS [Score_1], 1.0 * (CASE WHEN ([DT_Output_3].[Proba_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_3].[Proba_1] IS NULL OR [DT_Output_3].[Proba_1] > 0.0) THEN log([DT_Output_3].[Proba_1]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([DT_Output_3].[Proba_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_3].[Proba_0] IS NULL OR [DT_Output_3].[Proba_0] > 0.0) THEN log([DT_Output_3].[Proba_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_3].[Proba_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_3].[Proba_1] IS NULL OR [DT_Output_3].[Proba_1] > 0.0) THEN log([DT_Output_3].[Proba_1]) ELSE -1.79769313486231e+308 END END) / 2) AS [Proba_1] 
FROM [DT_Output_3]), 
[DT_node_lookup_4] AS 
(SELECT [ADS].[KEY] AS [KEY], CASE WHEN ([ADS].[Feature_377] <= -0.5061837434768677) THEN 1 ELSE 2 END AS node_id_2 
FROM [BinaryClass_500] AS [ADS]), 
[DT_node_data_4] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Proba_0] AS [Proba_0], [Values].[LogProba_0] AS [LogProba_0], [Values].[Proba_1] AS [Proba_1], [Values].[LogProba_1] AS [LogProba_1], [Values].[Decision] AS [Decision], [Values].[DecisionProba] AS [DecisionProba] 
FROM (SELECT 1 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 22 AS count, 1 AS depth, 0 AS parent_id, 4.612905204377784e-09 AS [Proba_0], -19.1944079823 AS [LogProba_0], 0.9999999953870948 AS [Proba_1], -4.61290517959e-09 AS [LogProba_1], 1 AS [Decision], 0.999999995387 AS [DecisionProba] UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 58 AS count, 1 AS depth, 0 AS parent_id, 0.6965621652793972 AS [Proba_0], -0.361598235934 AS [LogProba_0], 0.3034378347206028 AS [Proba_1], -1.1925785174 AS [LogProba_1], 0 AS [Decision], 0.696562165279 AS [DecisionProba]) AS [Values]), 
[DT_Output_4] AS 
(SELECT [DT_node_lookup_4].[KEY] AS [KEY], [DT_node_lookup_4].node_id_2 AS node_id_2, [DT_node_data_4].node_id AS node_id, [DT_node_data_4].feature AS feature, [DT_node_data_4].threshold AS threshold, [DT_node_data_4].count AS count, [DT_node_data_4].depth AS depth, [DT_node_data_4].parent_id AS parent_id, [DT_node_data_4].[Proba_0] AS [Proba_0], [DT_node_data_4].[LogProba_0] AS [LogProba_0], [DT_node_data_4].[Proba_1] AS [Proba_1], [DT_node_data_4].[LogProba_1] AS [LogProba_1], [DT_node_data_4].[Decision] AS [Decision], [DT_node_data_4].[DecisionProba] AS [DecisionProba] 
FROM [DT_node_lookup_4] LEFT OUTER JOIN [DT_node_data_4] ON [DT_node_lookup_4].node_id_2 = [DT_node_data_4].node_id), 
[AdaBoost_Estim_4] AS 
(SELECT [DT_Output_4].[KEY] AS [KEY], (1.0 * (CASE WHEN ([DT_Output_4].[Proba_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_4].[Proba_0] IS NULL OR [DT_Output_4].[Proba_0] > 0.0) THEN log([DT_Output_4].[Proba_0]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([DT_Output_4].[Proba_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_4].[Proba_0] IS NULL OR [DT_Output_4].[Proba_0] > 0.0) THEN log([DT_Output_4].[Proba_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_4].[Proba_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_4].[Proba_1] IS NULL OR [DT_Output_4].[Proba_1] > 0.0) THEN log([DT_Output_4].[Proba_1]) ELSE -1.79769313486231e+308 END END) / 2)) / 32.0 AS [Score_0], 1.0 * (CASE WHEN ([DT_Output_4].[Proba_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_4].[Proba_0] IS NULL OR [DT_Output_4].[Proba_0] > 0.0) THEN log([DT_Output_4].[Proba_0]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([DT_Output_4].[Proba_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_4].[Proba_0] IS NULL OR [DT_Output_4].[Proba_0] > 0.0) THEN log([DT_Output_4].[Proba_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_4].[Proba_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_4].[Proba_1] IS NULL OR [DT_Output_4].[Proba_1] > 0.0) THEN log([DT_Output_4].[Proba_1]) ELSE -1.79769313486231e+308 END END) / 2) AS [Proba_0], (1.0 * (CASE WHEN ([DT_Output_4].[Proba_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_4].[Proba_1] IS NULL OR [DT_Output_4].[Proba_1] > 0.0) THEN log([DT_Output_4].[Proba_1]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([DT_Output_4].[Proba_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_4].[Proba_0] IS NULL OR [DT_Output_4].[Proba_0] > 0.0) THEN log([DT_Output_4].[Proba_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_4].[Proba_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_4].[Proba_1] IS NULL OR [DT_Output_4].[Proba_1] > 0.0) THEN log([DT_Output_4].[Proba_1]) ELSE -1.79769313486231e+308 END END) / 2)) / 32.0 AS [Score_1], 1.0 * (CASE WHEN ([DT_Output_4].[Proba_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_4].[Proba_1] IS NULL OR [DT_Output_4].[Proba_1] > 0.0) THEN log([DT_Output_4].[Proba_1]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([DT_Output_4].[Proba_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_4].[Proba_0] IS NULL OR [DT_Output_4].[Proba_0] > 0.0) THEN log([DT_Output_4].[Proba_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_4].[Proba_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_4].[Proba_1] IS NULL OR [DT_Output_4].[Proba_1] > 0.0) THEN log([DT_Output_4].[Proba_1]) ELSE -1.79769313486231e+308 END END) / 2) AS [Proba_1] 
FROM [DT_Output_4]), 
[DT_node_lookup_5] AS 
(SELECT [ADS].[KEY] AS [KEY], CASE WHEN ([ADS].[Feature_234] <= -0.9849978089332581) THEN 1 ELSE 2 END AS node_id_2 
FROM [BinaryClass_500] AS [ADS]), 
[DT_node_data_5] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Proba_0] AS [Proba_0], [Values].[LogProba_0] AS [LogProba_0], [Values].[Proba_1] AS [Proba_1], [Values].[LogProba_1] AS [LogProba_1], [Values].[Decision] AS [Decision], [Values].[DecisionProba] AS [DecisionProba] 
FROM (SELECT 1 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 25 AS count, 1 AS depth, 0 AS parent_id, 1.7368128919594632e-05 AS [Proba_0], -10.9608737026 AS [LogProba_0], 0.9999826318710805 AS [Proba_1], -1.73682797472e-05 AS [LogProba_1], 1 AS [Decision], 0.999982631871 AS [DecisionProba] UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 55 AS count, 1 AS depth, 0 AS parent_id, 0.8231212995536697 AS [Proba_0], -0.194651702101 AS [LogProba_0], 0.1768787004463302 AS [Proba_1], -1.73229108955 AS [LogProba_1], 0 AS [Decision], 0.823121299554 AS [DecisionProba]) AS [Values]), 
[DT_Output_5] AS 
(SELECT [DT_node_lookup_5].[KEY] AS [KEY], [DT_node_lookup_5].node_id_2 AS node_id_2, [DT_node_data_5].node_id AS node_id, [DT_node_data_5].feature AS feature, [DT_node_data_5].threshold AS threshold, [DT_node_data_5].count AS count, [DT_node_data_5].depth AS depth, [DT_node_data_5].parent_id AS parent_id, [DT_node_data_5].[Proba_0] AS [Proba_0], [DT_node_data_5].[LogProba_0] AS [LogProba_0], [DT_node_data_5].[Proba_1] AS [Proba_1], [DT_node_data_5].[LogProba_1] AS [LogProba_1], [DT_node_data_5].[Decision] AS [Decision], [DT_node_data_5].[DecisionProba] AS [DecisionProba] 
FROM [DT_node_lookup_5] LEFT OUTER JOIN [DT_node_data_5] ON [DT_node_lookup_5].node_id_2 = [DT_node_data_5].node_id), 
[AdaBoost_Estim_5] AS 
(SELECT [DT_Output_5].[KEY] AS [KEY], (1.0 * (CASE WHEN ([DT_Output_5].[Proba_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_5].[Proba_0] IS NULL OR [DT_Output_5].[Proba_0] > 0.0) THEN log([DT_Output_5].[Proba_0]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([DT_Output_5].[Proba_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_5].[Proba_0] IS NULL OR [DT_Output_5].[Proba_0] > 0.0) THEN log([DT_Output_5].[Proba_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_5].[Proba_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_5].[Proba_1] IS NULL OR [DT_Output_5].[Proba_1] > 0.0) THEN log([DT_Output_5].[Proba_1]) ELSE -1.79769313486231e+308 END END) / 2)) / 32.0 AS [Score_0], 1.0 * (CASE WHEN ([DT_Output_5].[Proba_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_5].[Proba_0] IS NULL OR [DT_Output_5].[Proba_0] > 0.0) THEN log([DT_Output_5].[Proba_0]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([DT_Output_5].[Proba_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_5].[Proba_0] IS NULL OR [DT_Output_5].[Proba_0] > 0.0) THEN log([DT_Output_5].[Proba_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_5].[Proba_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_5].[Proba_1] IS NULL OR [DT_Output_5].[Proba_1] > 0.0) THEN log([DT_Output_5].[Proba_1]) ELSE -1.79769313486231e+308 END END) / 2) AS [Proba_0], (1.0 * (CASE WHEN ([DT_Output_5].[Proba_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_5].[Proba_1] IS NULL OR [DT_Output_5].[Proba_1] > 0.0) THEN log([DT_Output_5].[Proba_1]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([DT_Output_5].[Proba_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_5].[Proba_0] IS NULL OR [DT_Output_5].[Proba_0] > 0.0) THEN log([DT_Output_5].[Proba_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_5].[Proba_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_5].[Proba_1] IS NULL OR [DT_Output_5].[Proba_1] > 0.0) THEN log([DT_Output_5].[Proba_1]) ELSE -1.79769313486231e+308 END END) / 2)) / 32.0 AS [Score_1], 1.0 * (CASE WHEN ([DT_Output_5].[Proba_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_5].[Proba_1] IS NULL OR [DT_Output_5].[Proba_1] > 0.0) THEN log([DT_Output_5].[Proba_1]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([DT_Output_5].[Proba_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_5].[Proba_0] IS NULL OR [DT_Output_5].[Proba_0] > 0.0) THEN log([DT_Output_5].[Proba_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_5].[Proba_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_5].[Proba_1] IS NULL OR [DT_Output_5].[Proba_1] > 0.0) THEN log([DT_Output_5].[Proba_1]) ELSE -1.79769313486231e+308 END END) / 2) AS [Proba_1] 
FROM [DT_Output_5]), 
[DT_node_lookup_6] AS 
(SELECT [ADS].[KEY] AS [KEY], CASE WHEN ([ADS].[Feature_244] <= 0.43705305457115173) THEN 1 ELSE 2 END AS node_id_2 
FROM [BinaryClass_500] AS [ADS]), 
[DT_node_data_6] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Proba_0] AS [Proba_0], [Values].[LogProba_0] AS [LogProba_0], [Values].[Proba_1] AS [Proba_1], [Values].[LogProba_1] AS [LogProba_1], [Values].[Decision] AS [Decision], [Values].[DecisionProba] AS [DecisionProba] 
FROM (SELECT 1 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 55 AS count, 1 AS depth, 0 AS parent_id, 0.966769627877561 AS [Proba_0], -0.0337950457502 AS [LogProba_0], 0.03323037212243896 AS [Proba_1], -3.40429099829 AS [LogProba_1], 0 AS [Decision], 0.966769627878 AS [DecisionProba] UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 25 AS count, 1 AS depth, 0 AS parent_id, 0.0 AS [Proba_0], -1.79769313486231e+308 AS [LogProba_0], 1.0 AS [Proba_1], 0.0 AS [LogProba_1], 1 AS [Decision], 1.0 AS [DecisionProba]) AS [Values]), 
[DT_Output_6] AS 
(SELECT [DT_node_lookup_6].[KEY] AS [KEY], [DT_node_lookup_6].node_id_2 AS node_id_2, [DT_node_data_6].node_id AS node_id, [DT_node_data_6].feature AS feature, [DT_node_data_6].threshold AS threshold, [DT_node_data_6].count AS count, [DT_node_data_6].depth AS depth, [DT_node_data_6].parent_id AS parent_id, [DT_node_data_6].[Proba_0] AS [Proba_0], [DT_node_data_6].[LogProba_0] AS [LogProba_0], [DT_node_data_6].[Proba_1] AS [Proba_1], [DT_node_data_6].[LogProba_1] AS [LogProba_1], [DT_node_data_6].[Decision] AS [Decision], [DT_node_data_6].[DecisionProba] AS [DecisionProba] 
FROM [DT_node_lookup_6] LEFT OUTER JOIN [DT_node_data_6] ON [DT_node_lookup_6].node_id_2 = [DT_node_data_6].node_id), 
[AdaBoost_Estim_6] AS 
(SELECT [DT_Output_6].[KEY] AS [KEY], (1.0 * (CASE WHEN ([DT_Output_6].[Proba_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_6].[Proba_0] IS NULL OR [DT_Output_6].[Proba_0] > 0.0) THEN log([DT_Output_6].[Proba_0]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([DT_Output_6].[Proba_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_6].[Proba_0] IS NULL OR [DT_Output_6].[Proba_0] > 0.0) THEN log([DT_Output_6].[Proba_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_6].[Proba_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_6].[Proba_1] IS NULL OR [DT_Output_6].[Proba_1] > 0.0) THEN log([DT_Output_6].[Proba_1]) ELSE -1.79769313486231e+308 END END) / 2)) / 32.0 AS [Score_0], 1.0 * (CASE WHEN ([DT_Output_6].[Proba_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_6].[Proba_0] IS NULL OR [DT_Output_6].[Proba_0] > 0.0) THEN log([DT_Output_6].[Proba_0]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([DT_Output_6].[Proba_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_6].[Proba_0] IS NULL OR [DT_Output_6].[Proba_0] > 0.0) THEN log([DT_Output_6].[Proba_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_6].[Proba_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_6].[Proba_1] IS NULL OR [DT_Output_6].[Proba_1] > 0.0) THEN log([DT_Output_6].[Proba_1]) ELSE -1.79769313486231e+308 END END) / 2) AS [Proba_0], (1.0 * (CASE WHEN ([DT_Output_6].[Proba_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_6].[Proba_1] IS NULL OR [DT_Output_6].[Proba_1] > 0.0) THEN log([DT_Output_6].[Proba_1]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([DT_Output_6].[Proba_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_6].[Proba_0] IS NULL OR [DT_Output_6].[Proba_0] > 0.0) THEN log([DT_Output_6].[Proba_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_6].[Proba_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_6].[Proba_1] IS NULL OR [DT_Output_6].[Proba_1] > 0.0) THEN log([DT_Output_6].[Proba_1]) ELSE -1.79769313486231e+308 END END) / 2)) / 32.0 AS [Score_1], 1.0 * (CASE WHEN ([DT_Output_6].[Proba_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_6].[Proba_1] IS NULL OR [DT_Output_6].[Proba_1] > 0.0) THEN log([DT_Output_6].[Proba_1]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([DT_Output_6].[Proba_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_6].[Proba_0] IS NULL OR [DT_Output_6].[Proba_0] > 0.0) THEN log([DT_Output_6].[Proba_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_6].[Proba_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_6].[Proba_1] IS NULL OR [DT_Output_6].[Proba_1] > 0.0) THEN log([DT_Output_6].[Proba_1]) ELSE -1.79769313486231e+308 END END) / 2) AS [Proba_1] 
FROM [DT_Output_6]), 
[DT_node_lookup_7] AS 
(SELECT [ADS].[KEY] AS [KEY], CASE WHEN ([ADS].[Feature_412] <= 1.1827685832977295) THEN 1 ELSE 2 END AS node_id_2 
FROM [BinaryClass_500] AS [ADS]), 
[DT_node_data_7] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Proba_0] AS [Proba_0], [Values].[LogProba_0] AS [LogProba_0], [Values].[Proba_1] AS [Proba_1], [Values].[LogProba_1] AS [LogProba_1], [Values].[Decision] AS [Decision], [Values].[DecisionProba] AS [DecisionProba] 
FROM (SELECT 1 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 69 AS count, 1 AS depth, 0 AS parent_id, 0.9525114323220003 AS [Proba_0], -0.0486531696155 AS [LogProba_0], 0.04748856767799976 AS [Proba_1], -3.04726627737 AS [LogProba_1], 0 AS [Decision], 0.952511432322 AS [DecisionProba] UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 11 AS count, 1 AS depth, 0 AS parent_id, 2.582537508103454e-06 AS [Proba_0], -12.8667381121 AS [LogProba_0], 0.9999974174624919 AS [Proba_1], -2.58254084282e-06 AS [LogProba_1], 1 AS [Decision], 0.999997417462 AS [DecisionProba]) AS [Values]), 
[DT_Output_7] AS 
(SELECT [DT_node_lookup_7].[KEY] AS [KEY], [DT_node_lookup_7].node_id_2 AS node_id_2, [DT_node_data_7].node_id AS node_id, [DT_node_data_7].feature AS feature, [DT_node_data_7].threshold AS threshold, [DT_node_data_7].count AS count, [DT_node_data_7].depth AS depth, [DT_node_data_7].parent_id AS parent_id, [DT_node_data_7].[Proba_0] AS [Proba_0], [DT_node_data_7].[LogProba_0] AS [LogProba_0], [DT_node_data_7].[Proba_1] AS [Proba_1], [DT_node_data_7].[LogProba_1] AS [LogProba_1], [DT_node_data_7].[Decision] AS [Decision], [DT_node_data_7].[DecisionProba] AS [DecisionProba] 
FROM [DT_node_lookup_7] LEFT OUTER JOIN [DT_node_data_7] ON [DT_node_lookup_7].node_id_2 = [DT_node_data_7].node_id), 
[AdaBoost_Estim_7] AS 
(SELECT [DT_Output_7].[KEY] AS [KEY], (1.0 * (CASE WHEN ([DT_Output_7].[Proba_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_7].[Proba_0] IS NULL OR [DT_Output_7].[Proba_0] > 0.0) THEN log([DT_Output_7].[Proba_0]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([DT_Output_7].[Proba_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_7].[Proba_0] IS NULL OR [DT_Output_7].[Proba_0] > 0.0) THEN log([DT_Output_7].[Proba_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_7].[Proba_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_7].[Proba_1] IS NULL OR [DT_Output_7].[Proba_1] > 0.0) THEN log([DT_Output_7].[Proba_1]) ELSE -1.79769313486231e+308 END END) / 2)) / 32.0 AS [Score_0], 1.0 * (CASE WHEN ([DT_Output_7].[Proba_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_7].[Proba_0] IS NULL OR [DT_Output_7].[Proba_0] > 0.0) THEN log([DT_Output_7].[Proba_0]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([DT_Output_7].[Proba_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_7].[Proba_0] IS NULL OR [DT_Output_7].[Proba_0] > 0.0) THEN log([DT_Output_7].[Proba_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_7].[Proba_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_7].[Proba_1] IS NULL OR [DT_Output_7].[Proba_1] > 0.0) THEN log([DT_Output_7].[Proba_1]) ELSE -1.79769313486231e+308 END END) / 2) AS [Proba_0], (1.0 * (CASE WHEN ([DT_Output_7].[Proba_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_7].[Proba_1] IS NULL OR [DT_Output_7].[Proba_1] > 0.0) THEN log([DT_Output_7].[Proba_1]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([DT_Output_7].[Proba_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_7].[Proba_0] IS NULL OR [DT_Output_7].[Proba_0] > 0.0) THEN log([DT_Output_7].[Proba_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_7].[Proba_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_7].[Proba_1] IS NULL OR [DT_Output_7].[Proba_1] > 0.0) THEN log([DT_Output_7].[Proba_1]) ELSE -1.79769313486231e+308 END END) / 2)) / 32.0 AS [Score_1], 1.0 * (CASE WHEN ([DT_Output_7].[Proba_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_7].[Proba_1] IS NULL OR [DT_Output_7].[Proba_1] > 0.0) THEN log([DT_Output_7].[Proba_1]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([DT_Output_7].[Proba_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_7].[Proba_0] IS NULL OR [DT_Output_7].[Proba_0] > 0.0) THEN log([DT_Output_7].[Proba_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_7].[Proba_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_7].[Proba_1] IS NULL OR [DT_Output_7].[Proba_1] > 0.0) THEN log([DT_Output_7].[Proba_1]) ELSE -1.79769313486231e+308 END END) / 2) AS [Proba_1] 
FROM [DT_Output_7]), 
[DT_node_lookup_8] AS 
(SELECT [ADS].[KEY] AS [KEY], CASE WHEN ([ADS].[Feature_234] <= -0.9849978089332581) THEN 1 ELSE 2 END AS node_id_2 
FROM [BinaryClass_500] AS [ADS]), 
[DT_node_data_8] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Proba_0] AS [Proba_0], [Values].[LogProba_0] AS [LogProba_0], [Values].[Proba_1] AS [Proba_1], [Values].[LogProba_1] AS [LogProba_1], [Values].[Decision] AS [Decision], [Values].[DecisionProba] AS [DecisionProba] 
FROM (SELECT 1 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 25 AS count, 1 AS depth, 0 AS parent_id, 0.014766362224628819 AS [Proba_0], -4.21540350765 AS [LogProba_0], 0.9852336377753712 AS [Proba_1], -0.0148764702255 AS [LogProba_1], 1 AS [Decision], 0.985233637775 AS [DecisionProba] UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 55 AS count, 1 AS depth, 0 AS parent_id, 0.9224568806798004 AS [Proba_0], -0.0807146459704 AS [LogProba_0], 0.07754311932019964 AS [Proba_1], -2.55692111902 AS [LogProba_1], 0 AS [Decision], 0.92245688068 AS [DecisionProba]) AS [Values]), 
[DT_Output_8] AS 
(SELECT [DT_node_lookup_8].[KEY] AS [KEY], [DT_node_lookup_8].node_id_2 AS node_id_2, [DT_node_data_8].node_id AS node_id, [DT_node_data_8].feature AS feature, [DT_node_data_8].threshold AS threshold, [DT_node_data_8].count AS count, [DT_node_data_8].depth AS depth, [DT_node_data_8].parent_id AS parent_id, [DT_node_data_8].[Proba_0] AS [Proba_0], [DT_node_data_8].[LogProba_0] AS [LogProba_0], [DT_node_data_8].[Proba_1] AS [Proba_1], [DT_node_data_8].[LogProba_1] AS [LogProba_1], [DT_node_data_8].[Decision] AS [Decision], [DT_node_data_8].[DecisionProba] AS [DecisionProba] 
FROM [DT_node_lookup_8] LEFT OUTER JOIN [DT_node_data_8] ON [DT_node_lookup_8].node_id_2 = [DT_node_data_8].node_id), 
[AdaBoost_Estim_8] AS 
(SELECT [DT_Output_8].[KEY] AS [KEY], (1.0 * (CASE WHEN ([DT_Output_8].[Proba_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_8].[Proba_0] IS NULL OR [DT_Output_8].[Proba_0] > 0.0) THEN log([DT_Output_8].[Proba_0]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([DT_Output_8].[Proba_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_8].[Proba_0] IS NULL OR [DT_Output_8].[Proba_0] > 0.0) THEN log([DT_Output_8].[Proba_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_8].[Proba_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_8].[Proba_1] IS NULL OR [DT_Output_8].[Proba_1] > 0.0) THEN log([DT_Output_8].[Proba_1]) ELSE -1.79769313486231e+308 END END) / 2)) / 32.0 AS [Score_0], 1.0 * (CASE WHEN ([DT_Output_8].[Proba_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_8].[Proba_0] IS NULL OR [DT_Output_8].[Proba_0] > 0.0) THEN log([DT_Output_8].[Proba_0]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([DT_Output_8].[Proba_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_8].[Proba_0] IS NULL OR [DT_Output_8].[Proba_0] > 0.0) THEN log([DT_Output_8].[Proba_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_8].[Proba_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_8].[Proba_1] IS NULL OR [DT_Output_8].[Proba_1] > 0.0) THEN log([DT_Output_8].[Proba_1]) ELSE -1.79769313486231e+308 END END) / 2) AS [Proba_0], (1.0 * (CASE WHEN ([DT_Output_8].[Proba_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_8].[Proba_1] IS NULL OR [DT_Output_8].[Proba_1] > 0.0) THEN log([DT_Output_8].[Proba_1]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([DT_Output_8].[Proba_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_8].[Proba_0] IS NULL OR [DT_Output_8].[Proba_0] > 0.0) THEN log([DT_Output_8].[Proba_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_8].[Proba_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_8].[Proba_1] IS NULL OR [DT_Output_8].[Proba_1] > 0.0) THEN log([DT_Output_8].[Proba_1]) ELSE -1.79769313486231e+308 END END) / 2)) / 32.0 AS [Score_1], 1.0 * (CASE WHEN ([DT_Output_8].[Proba_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_8].[Proba_1] IS NULL OR [DT_Output_8].[Proba_1] > 0.0) THEN log([DT_Output_8].[Proba_1]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([DT_Output_8].[Proba_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_8].[Proba_0] IS NULL OR [DT_Output_8].[Proba_0] > 0.0) THEN log([DT_Output_8].[Proba_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_8].[Proba_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_8].[Proba_1] IS NULL OR [DT_Output_8].[Proba_1] > 0.0) THEN log([DT_Output_8].[Proba_1]) ELSE -1.79769313486231e+308 END END) / 2) AS [Proba_1] 
FROM [DT_Output_8]), 
[DT_node_lookup_9] AS 
(SELECT [ADS].[KEY] AS [KEY], CASE WHEN ([ADS].[Feature_319] <= -0.0838511735200882) THEN 1 ELSE 2 END AS node_id_2 
FROM [BinaryClass_500] AS [ADS]), 
[DT_node_data_9] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Proba_0] AS [Proba_0], [Values].[LogProba_0] AS [LogProba_0], [Values].[Proba_1] AS [Proba_1], [Values].[LogProba_1] AS [LogProba_1], [Values].[Decision] AS [Decision], [Values].[DecisionProba] AS [DecisionProba] 
FROM (SELECT 1 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 42 AS count, 1 AS depth, 0 AS parent_id, 0.9923331513470672 AS [Proba_0], -0.00769639002676 AS [LogProba_0], 0.007666848652932741 AS [Proba_1], -4.87084961466 AS [LogProba_1], 0 AS [Decision], 0.992333151347 AS [DecisionProba] UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 38 AS count, 1 AS depth, 0 AS parent_id, 0.12537323896367542 AS [Proba_0], -2.07646007895 AS [LogProba_0], 0.8746267610363245 AS [Proba_1], -0.133958042442 AS [LogProba_1], 1 AS [Decision], 0.874626761036 AS [DecisionProba]) AS [Values]), 
[DT_Output_9] AS 
(SELECT [DT_node_lookup_9].[KEY] AS [KEY], [DT_node_lookup_9].node_id_2 AS node_id_2, [DT_node_data_9].node_id AS node_id, [DT_node_data_9].feature AS feature, [DT_node_data_9].threshold AS threshold, [DT_node_data_9].count AS count, [DT_node_data_9].depth AS depth, [DT_node_data_9].parent_id AS parent_id, [DT_node_data_9].[Proba_0] AS [Proba_0], [DT_node_data_9].[LogProba_0] AS [LogProba_0], [DT_node_data_9].[Proba_1] AS [Proba_1], [DT_node_data_9].[LogProba_1] AS [LogProba_1], [DT_node_data_9].[Decision] AS [Decision], [DT_node_data_9].[DecisionProba] AS [DecisionProba] 
FROM [DT_node_lookup_9] LEFT OUTER JOIN [DT_node_data_9] ON [DT_node_lookup_9].node_id_2 = [DT_node_data_9].node_id), 
[AdaBoost_Estim_9] AS 
(SELECT [DT_Output_9].[KEY] AS [KEY], (1.0 * (CASE WHEN ([DT_Output_9].[Proba_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_9].[Proba_0] IS NULL OR [DT_Output_9].[Proba_0] > 0.0) THEN log([DT_Output_9].[Proba_0]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([DT_Output_9].[Proba_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_9].[Proba_0] IS NULL OR [DT_Output_9].[Proba_0] > 0.0) THEN log([DT_Output_9].[Proba_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_9].[Proba_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_9].[Proba_1] IS NULL OR [DT_Output_9].[Proba_1] > 0.0) THEN log([DT_Output_9].[Proba_1]) ELSE -1.79769313486231e+308 END END) / 2)) / 32.0 AS [Score_0], 1.0 * (CASE WHEN ([DT_Output_9].[Proba_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_9].[Proba_0] IS NULL OR [DT_Output_9].[Proba_0] > 0.0) THEN log([DT_Output_9].[Proba_0]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([DT_Output_9].[Proba_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_9].[Proba_0] IS NULL OR [DT_Output_9].[Proba_0] > 0.0) THEN log([DT_Output_9].[Proba_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_9].[Proba_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_9].[Proba_1] IS NULL OR [DT_Output_9].[Proba_1] > 0.0) THEN log([DT_Output_9].[Proba_1]) ELSE -1.79769313486231e+308 END END) / 2) AS [Proba_0], (1.0 * (CASE WHEN ([DT_Output_9].[Proba_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_9].[Proba_1] IS NULL OR [DT_Output_9].[Proba_1] > 0.0) THEN log([DT_Output_9].[Proba_1]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([DT_Output_9].[Proba_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_9].[Proba_0] IS NULL OR [DT_Output_9].[Proba_0] > 0.0) THEN log([DT_Output_9].[Proba_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_9].[Proba_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_9].[Proba_1] IS NULL OR [DT_Output_9].[Proba_1] > 0.0) THEN log([DT_Output_9].[Proba_1]) ELSE -1.79769313486231e+308 END END) / 2)) / 32.0 AS [Score_1], 1.0 * (CASE WHEN ([DT_Output_9].[Proba_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_9].[Proba_1] IS NULL OR [DT_Output_9].[Proba_1] > 0.0) THEN log([DT_Output_9].[Proba_1]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([DT_Output_9].[Proba_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_9].[Proba_0] IS NULL OR [DT_Output_9].[Proba_0] > 0.0) THEN log([DT_Output_9].[Proba_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_9].[Proba_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_9].[Proba_1] IS NULL OR [DT_Output_9].[Proba_1] > 0.0) THEN log([DT_Output_9].[Proba_1]) ELSE -1.79769313486231e+308 END END) / 2) AS [Proba_1] 
FROM [DT_Output_9]), 
[DT_node_lookup_10] AS 
(SELECT [ADS].[KEY] AS [KEY], CASE WHEN ([ADS].[Feature_433] <= -0.14344748854637146) THEN 1 ELSE 2 END AS node_id_2 
FROM [BinaryClass_500] AS [ADS]), 
[DT_node_data_10] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Proba_0] AS [Proba_0], [Values].[LogProba_0] AS [LogProba_0], [Values].[Proba_1] AS [Proba_1], [Values].[LogProba_1] AS [LogProba_1], [Values].[Decision] AS [Decision], [Values].[DecisionProba] AS [DecisionProba] 
FROM (SELECT 1 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 41 AS count, 1 AS depth, 0 AS parent_id, 0.9526833989033505 AS [Proba_0], -0.0484726457352 AS [LogProba_0], 0.04731660109664953 AS [Proba_1], -3.0508940705 AS [LogProba_1], 0 AS [Decision], 0.952683398903 AS [DecisionProba] UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 39 AS count, 1 AS depth, 0 AS parent_id, 0.05336142923043214 AS [Proba_0], -2.93066709306 AS [LogProba_0], 0.9466385707695679 AS [Proba_1], -0.0548379157 AS [LogProba_1], 1 AS [Decision], 0.94663857077 AS [DecisionProba]) AS [Values]), 
[DT_Output_10] AS 
(SELECT [DT_node_lookup_10].[KEY] AS [KEY], [DT_node_lookup_10].node_id_2 AS node_id_2, [DT_node_data_10].node_id AS node_id, [DT_node_data_10].feature AS feature, [DT_node_data_10].threshold AS threshold, [DT_node_data_10].count AS count, [DT_node_data_10].depth AS depth, [DT_node_data_10].parent_id AS parent_id, [DT_node_data_10].[Proba_0] AS [Proba_0], [DT_node_data_10].[LogProba_0] AS [LogProba_0], [DT_node_data_10].[Proba_1] AS [Proba_1], [DT_node_data_10].[LogProba_1] AS [LogProba_1], [DT_node_data_10].[Decision] AS [Decision], [DT_node_data_10].[DecisionProba] AS [DecisionProba] 
FROM [DT_node_lookup_10] LEFT OUTER JOIN [DT_node_data_10] ON [DT_node_lookup_10].node_id_2 = [DT_node_data_10].node_id), 
[AdaBoost_Estim_10] AS 
(SELECT [DT_Output_10].[KEY] AS [KEY], (1.0 * (CASE WHEN ([DT_Output_10].[Proba_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_10].[Proba_0] IS NULL OR [DT_Output_10].[Proba_0] > 0.0) THEN log([DT_Output_10].[Proba_0]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([DT_Output_10].[Proba_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_10].[Proba_0] IS NULL OR [DT_Output_10].[Proba_0] > 0.0) THEN log([DT_Output_10].[Proba_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_10].[Proba_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_10].[Proba_1] IS NULL OR [DT_Output_10].[Proba_1] > 0.0) THEN log([DT_Output_10].[Proba_1]) ELSE -1.79769313486231e+308 END END) / 2)) / 32.0 AS [Score_0], 1.0 * (CASE WHEN ([DT_Output_10].[Proba_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_10].[Proba_0] IS NULL OR [DT_Output_10].[Proba_0] > 0.0) THEN log([DT_Output_10].[Proba_0]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([DT_Output_10].[Proba_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_10].[Proba_0] IS NULL OR [DT_Output_10].[Proba_0] > 0.0) THEN log([DT_Output_10].[Proba_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_10].[Proba_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_10].[Proba_1] IS NULL OR [DT_Output_10].[Proba_1] > 0.0) THEN log([DT_Output_10].[Proba_1]) ELSE -1.79769313486231e+308 END END) / 2) AS [Proba_0], (1.0 * (CASE WHEN ([DT_Output_10].[Proba_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_10].[Proba_1] IS NULL OR [DT_Output_10].[Proba_1] > 0.0) THEN log([DT_Output_10].[Proba_1]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([DT_Output_10].[Proba_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_10].[Proba_0] IS NULL OR [DT_Output_10].[Proba_0] > 0.0) THEN log([DT_Output_10].[Proba_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_10].[Proba_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_10].[Proba_1] IS NULL OR [DT_Output_10].[Proba_1] > 0.0) THEN log([DT_Output_10].[Proba_1]) ELSE -1.79769313486231e+308 END END) / 2)) / 32.0 AS [Score_1], 1.0 * (CASE WHEN ([DT_Output_10].[Proba_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_10].[Proba_1] IS NULL OR [DT_Output_10].[Proba_1] > 0.0) THEN log([DT_Output_10].[Proba_1]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([DT_Output_10].[Proba_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_10].[Proba_0] IS NULL OR [DT_Output_10].[Proba_0] > 0.0) THEN log([DT_Output_10].[Proba_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_10].[Proba_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_10].[Proba_1] IS NULL OR [DT_Output_10].[Proba_1] > 0.0) THEN log([DT_Output_10].[Proba_1]) ELSE -1.79769313486231e+308 END END) / 2) AS [Proba_1] 
FROM [DT_Output_10]), 
[DT_node_lookup_11] AS 
(SELECT [ADS].[KEY] AS [KEY], CASE WHEN ([ADS].[Feature_341] <= 0.21023017168045044) THEN 1 ELSE 2 END AS node_id_2 
FROM [BinaryClass_500] AS [ADS]), 
[DT_node_data_11] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Proba_0] AS [Proba_0], [Values].[LogProba_0] AS [LogProba_0], [Values].[Proba_1] AS [Proba_1], [Values].[LogProba_1] AS [LogProba_1], [Values].[Decision] AS [Decision], [Values].[DecisionProba] AS [DecisionProba] 
FROM (SELECT 1 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 51 AS count, 1 AS depth, 0 AS parent_id, 0.9115871619546925 AS [Proba_0], -0.0925680646906 AS [LogProba_0], 0.08841283804530756 AS [Proba_1], -2.42573809313 AS [LogProba_1], 0 AS [Decision], 0.911587161955 AS [DecisionProba] UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 29 AS count, 1 AS depth, 0 AS parent_id, 0.061674696460440596 AS [Proba_0], -2.78588153818 AS [LogProba_0], 0.9383253035395595 AS [Proba_1], -0.0636585846198 AS [LogProba_1], 1 AS [Decision], 0.93832530354 AS [DecisionProba]) AS [Values]), 
[DT_Output_11] AS 
(SELECT [DT_node_lookup_11].[KEY] AS [KEY], [DT_node_lookup_11].node_id_2 AS node_id_2, [DT_node_data_11].node_id AS node_id, [DT_node_data_11].feature AS feature, [DT_node_data_11].threshold AS threshold, [DT_node_data_11].count AS count, [DT_node_data_11].depth AS depth, [DT_node_data_11].parent_id AS parent_id, [DT_node_data_11].[Proba_0] AS [Proba_0], [DT_node_data_11].[LogProba_0] AS [LogProba_0], [DT_node_data_11].[Proba_1] AS [Proba_1], [DT_node_data_11].[LogProba_1] AS [LogProba_1], [DT_node_data_11].[Decision] AS [Decision], [DT_node_data_11].[DecisionProba] AS [DecisionProba] 
FROM [DT_node_lookup_11] LEFT OUTER JOIN [DT_node_data_11] ON [DT_node_lookup_11].node_id_2 = [DT_node_data_11].node_id), 
[AdaBoost_Estim_11] AS 
(SELECT [DT_Output_11].[KEY] AS [KEY], (1.0 * (CASE WHEN ([DT_Output_11].[Proba_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_11].[Proba_0] IS NULL OR [DT_Output_11].[Proba_0] > 0.0) THEN log([DT_Output_11].[Proba_0]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([DT_Output_11].[Proba_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_11].[Proba_0] IS NULL OR [DT_Output_11].[Proba_0] > 0.0) THEN log([DT_Output_11].[Proba_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_11].[Proba_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_11].[Proba_1] IS NULL OR [DT_Output_11].[Proba_1] > 0.0) THEN log([DT_Output_11].[Proba_1]) ELSE -1.79769313486231e+308 END END) / 2)) / 32.0 AS [Score_0], 1.0 * (CASE WHEN ([DT_Output_11].[Proba_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_11].[Proba_0] IS NULL OR [DT_Output_11].[Proba_0] > 0.0) THEN log([DT_Output_11].[Proba_0]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([DT_Output_11].[Proba_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_11].[Proba_0] IS NULL OR [DT_Output_11].[Proba_0] > 0.0) THEN log([DT_Output_11].[Proba_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_11].[Proba_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_11].[Proba_1] IS NULL OR [DT_Output_11].[Proba_1] > 0.0) THEN log([DT_Output_11].[Proba_1]) ELSE -1.79769313486231e+308 END END) / 2) AS [Proba_0], (1.0 * (CASE WHEN ([DT_Output_11].[Proba_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_11].[Proba_1] IS NULL OR [DT_Output_11].[Proba_1] > 0.0) THEN log([DT_Output_11].[Proba_1]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([DT_Output_11].[Proba_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_11].[Proba_0] IS NULL OR [DT_Output_11].[Proba_0] > 0.0) THEN log([DT_Output_11].[Proba_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_11].[Proba_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_11].[Proba_1] IS NULL OR [DT_Output_11].[Proba_1] > 0.0) THEN log([DT_Output_11].[Proba_1]) ELSE -1.79769313486231e+308 END END) / 2)) / 32.0 AS [Score_1], 1.0 * (CASE WHEN ([DT_Output_11].[Proba_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_11].[Proba_1] IS NULL OR [DT_Output_11].[Proba_1] > 0.0) THEN log([DT_Output_11].[Proba_1]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([DT_Output_11].[Proba_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_11].[Proba_0] IS NULL OR [DT_Output_11].[Proba_0] > 0.0) THEN log([DT_Output_11].[Proba_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_11].[Proba_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_11].[Proba_1] IS NULL OR [DT_Output_11].[Proba_1] > 0.0) THEN log([DT_Output_11].[Proba_1]) ELSE -1.79769313486231e+308 END END) / 2) AS [Proba_1] 
FROM [DT_Output_11]), 
[DT_node_lookup_12] AS 
(SELECT [ADS].[KEY] AS [KEY], CASE WHEN ([ADS].[Feature_256] <= 0.03838879242539406) THEN 1 ELSE 2 END AS node_id_2 
FROM [BinaryClass_500] AS [ADS]), 
[DT_node_data_12] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Proba_0] AS [Proba_0], [Values].[LogProba_0] AS [LogProba_0], [Values].[Proba_1] AS [Proba_1], [Values].[LogProba_1] AS [LogProba_1], [Values].[Decision] AS [Decision], [Values].[DecisionProba] AS [DecisionProba] 
FROM (SELECT 1 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 41 AS count, 1 AS depth, 0 AS parent_id, 0.9021950836479915 AS [Proba_0], -0.102924503316 AS [LogProba_0], 0.09780491635200851 AS [Proba_1], -2.32478043376 AS [LogProba_1], 0 AS [Decision], 0.902195083648 AS [DecisionProba] UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 39 AS count, 1 AS depth, 0 AS parent_id, 0.171046474348605 AS [Proba_0], -1.76581997959 AS [LogProba_0], 0.8289535256513949 AS [Proba_1], -0.187591186152 AS [LogProba_1], 1 AS [Decision], 0.828953525651 AS [DecisionProba]) AS [Values]), 
[DT_Output_12] AS 
(SELECT [DT_node_lookup_12].[KEY] AS [KEY], [DT_node_lookup_12].node_id_2 AS node_id_2, [DT_node_data_12].node_id AS node_id, [DT_node_data_12].feature AS feature, [DT_node_data_12].threshold AS threshold, [DT_node_data_12].count AS count, [DT_node_data_12].depth AS depth, [DT_node_data_12].parent_id AS parent_id, [DT_node_data_12].[Proba_0] AS [Proba_0], [DT_node_data_12].[LogProba_0] AS [LogProba_0], [DT_node_data_12].[Proba_1] AS [Proba_1], [DT_node_data_12].[LogProba_1] AS [LogProba_1], [DT_node_data_12].[Decision] AS [Decision], [DT_node_data_12].[DecisionProba] AS [DecisionProba] 
FROM [DT_node_lookup_12] LEFT OUTER JOIN [DT_node_data_12] ON [DT_node_lookup_12].node_id_2 = [DT_node_data_12].node_id), 
[AdaBoost_Estim_12] AS 
(SELECT [DT_Output_12].[KEY] AS [KEY], (1.0 * (CASE WHEN ([DT_Output_12].[Proba_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_12].[Proba_0] IS NULL OR [DT_Output_12].[Proba_0] > 0.0) THEN log([DT_Output_12].[Proba_0]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([DT_Output_12].[Proba_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_12].[Proba_0] IS NULL OR [DT_Output_12].[Proba_0] > 0.0) THEN log([DT_Output_12].[Proba_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_12].[Proba_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_12].[Proba_1] IS NULL OR [DT_Output_12].[Proba_1] > 0.0) THEN log([DT_Output_12].[Proba_1]) ELSE -1.79769313486231e+308 END END) / 2)) / 32.0 AS [Score_0], 1.0 * (CASE WHEN ([DT_Output_12].[Proba_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_12].[Proba_0] IS NULL OR [DT_Output_12].[Proba_0] > 0.0) THEN log([DT_Output_12].[Proba_0]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([DT_Output_12].[Proba_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_12].[Proba_0] IS NULL OR [DT_Output_12].[Proba_0] > 0.0) THEN log([DT_Output_12].[Proba_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_12].[Proba_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_12].[Proba_1] IS NULL OR [DT_Output_12].[Proba_1] > 0.0) THEN log([DT_Output_12].[Proba_1]) ELSE -1.79769313486231e+308 END END) / 2) AS [Proba_0], (1.0 * (CASE WHEN ([DT_Output_12].[Proba_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_12].[Proba_1] IS NULL OR [DT_Output_12].[Proba_1] > 0.0) THEN log([DT_Output_12].[Proba_1]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([DT_Output_12].[Proba_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_12].[Proba_0] IS NULL OR [DT_Output_12].[Proba_0] > 0.0) THEN log([DT_Output_12].[Proba_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_12].[Proba_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_12].[Proba_1] IS NULL OR [DT_Output_12].[Proba_1] > 0.0) THEN log([DT_Output_12].[Proba_1]) ELSE -1.79769313486231e+308 END END) / 2)) / 32.0 AS [Score_1], 1.0 * (CASE WHEN ([DT_Output_12].[Proba_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_12].[Proba_1] IS NULL OR [DT_Output_12].[Proba_1] > 0.0) THEN log([DT_Output_12].[Proba_1]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([DT_Output_12].[Proba_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_12].[Proba_0] IS NULL OR [DT_Output_12].[Proba_0] > 0.0) THEN log([DT_Output_12].[Proba_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_12].[Proba_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_12].[Proba_1] IS NULL OR [DT_Output_12].[Proba_1] > 0.0) THEN log([DT_Output_12].[Proba_1]) ELSE -1.79769313486231e+308 END END) / 2) AS [Proba_1] 
FROM [DT_Output_12]), 
[DT_node_lookup_13] AS 
(SELECT [ADS].[KEY] AS [KEY], CASE WHEN ([ADS].[Feature_46] <= -0.03459254652261734) THEN 1 ELSE 2 END AS node_id_2 
FROM [BinaryClass_500] AS [ADS]), 
[DT_node_data_13] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Proba_0] AS [Proba_0], [Values].[LogProba_0] AS [LogProba_0], [Values].[Proba_1] AS [Proba_1], [Values].[LogProba_1] AS [LogProba_1], [Values].[Decision] AS [Decision], [Values].[DecisionProba] AS [DecisionProba] 
FROM (SELECT 1 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 40 AS count, 1 AS depth, 0 AS parent_id, 0.13464581305884857 AS [Proba_0], -2.0051075552 AS [LogProba_0], 0.8653541869411514 AS [Proba_1], -0.144616391186 AS [LogProba_1], 1 AS [Decision], 0.865354186941 AS [DecisionProba] UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 40 AS count, 1 AS depth, 0 AS parent_id, 0.9488816729396748 AS [Proba_0], -0.052471174195 AS [LogProba_0], 0.05111832706032515 AS [Proba_1], -2.97361219519 AS [LogProba_1], 0 AS [Decision], 0.94888167294 AS [DecisionProba]) AS [Values]), 
[DT_Output_13] AS 
(SELECT [DT_node_lookup_13].[KEY] AS [KEY], [DT_node_lookup_13].node_id_2 AS node_id_2, [DT_node_data_13].node_id AS node_id, [DT_node_data_13].feature AS feature, [DT_node_data_13].threshold AS threshold, [DT_node_data_13].count AS count, [DT_node_data_13].depth AS depth, [DT_node_data_13].parent_id AS parent_id, [DT_node_data_13].[Proba_0] AS [Proba_0], [DT_node_data_13].[LogProba_0] AS [LogProba_0], [DT_node_data_13].[Proba_1] AS [Proba_1], [DT_node_data_13].[LogProba_1] AS [LogProba_1], [DT_node_data_13].[Decision] AS [Decision], [DT_node_data_13].[DecisionProba] AS [DecisionProba] 
FROM [DT_node_lookup_13] LEFT OUTER JOIN [DT_node_data_13] ON [DT_node_lookup_13].node_id_2 = [DT_node_data_13].node_id), 
[AdaBoost_Estim_13] AS 
(SELECT [DT_Output_13].[KEY] AS [KEY], (1.0 * (CASE WHEN ([DT_Output_13].[Proba_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_13].[Proba_0] IS NULL OR [DT_Output_13].[Proba_0] > 0.0) THEN log([DT_Output_13].[Proba_0]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([DT_Output_13].[Proba_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_13].[Proba_0] IS NULL OR [DT_Output_13].[Proba_0] > 0.0) THEN log([DT_Output_13].[Proba_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_13].[Proba_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_13].[Proba_1] IS NULL OR [DT_Output_13].[Proba_1] > 0.0) THEN log([DT_Output_13].[Proba_1]) ELSE -1.79769313486231e+308 END END) / 2)) / 32.0 AS [Score_0], 1.0 * (CASE WHEN ([DT_Output_13].[Proba_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_13].[Proba_0] IS NULL OR [DT_Output_13].[Proba_0] > 0.0) THEN log([DT_Output_13].[Proba_0]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([DT_Output_13].[Proba_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_13].[Proba_0] IS NULL OR [DT_Output_13].[Proba_0] > 0.0) THEN log([DT_Output_13].[Proba_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_13].[Proba_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_13].[Proba_1] IS NULL OR [DT_Output_13].[Proba_1] > 0.0) THEN log([DT_Output_13].[Proba_1]) ELSE -1.79769313486231e+308 END END) / 2) AS [Proba_0], (1.0 * (CASE WHEN ([DT_Output_13].[Proba_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_13].[Proba_1] IS NULL OR [DT_Output_13].[Proba_1] > 0.0) THEN log([DT_Output_13].[Proba_1]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([DT_Output_13].[Proba_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_13].[Proba_0] IS NULL OR [DT_Output_13].[Proba_0] > 0.0) THEN log([DT_Output_13].[Proba_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_13].[Proba_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_13].[Proba_1] IS NULL OR [DT_Output_13].[Proba_1] > 0.0) THEN log([DT_Output_13].[Proba_1]) ELSE -1.79769313486231e+308 END END) / 2)) / 32.0 AS [Score_1], 1.0 * (CASE WHEN ([DT_Output_13].[Proba_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_13].[Proba_1] IS NULL OR [DT_Output_13].[Proba_1] > 0.0) THEN log([DT_Output_13].[Proba_1]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([DT_Output_13].[Proba_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_13].[Proba_0] IS NULL OR [DT_Output_13].[Proba_0] > 0.0) THEN log([DT_Output_13].[Proba_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_13].[Proba_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_13].[Proba_1] IS NULL OR [DT_Output_13].[Proba_1] > 0.0) THEN log([DT_Output_13].[Proba_1]) ELSE -1.79769313486231e+308 END END) / 2) AS [Proba_1] 
FROM [DT_Output_13]), 
[DT_node_lookup_14] AS 
(SELECT [ADS].[KEY] AS [KEY], CASE WHEN ([ADS].[Feature_232] <= 0.020700067281723022) THEN 1 ELSE 2 END AS node_id_2 
FROM [BinaryClass_500] AS [ADS]), 
[DT_node_data_14] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Proba_0] AS [Proba_0], [Values].[LogProba_0] AS [LogProba_0], [Values].[Proba_1] AS [Proba_1], [Values].[LogProba_1] AS [LogProba_1], [Values].[Decision] AS [Decision], [Values].[DecisionProba] AS [DecisionProba] 
FROM (SELECT 1 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 40 AS count, 1 AS depth, 0 AS parent_id, 0.9392012839674067 AS [Proba_0], -0.062725462823 AS [LogProba_0], 0.06079871603259337 AS [Proba_1], -2.80018660812 AS [LogProba_1], 0 AS [Decision], 0.939201283967 AS [DecisionProba] UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 40 AS count, 1 AS depth, 0 AS parent_id, 0.21326456953682366 AS [Proba_0], -1.54522177355 AS [LogProba_0], 0.7867354304631764 AS [Proba_1], -0.239863261845 AS [LogProba_1], 1 AS [Decision], 0.786735430463 AS [DecisionProba]) AS [Values]), 
[DT_Output_14] AS 
(SELECT [DT_node_lookup_14].[KEY] AS [KEY], [DT_node_lookup_14].node_id_2 AS node_id_2, [DT_node_data_14].node_id AS node_id, [DT_node_data_14].feature AS feature, [DT_node_data_14].threshold AS threshold, [DT_node_data_14].count AS count, [DT_node_data_14].depth AS depth, [DT_node_data_14].parent_id AS parent_id, [DT_node_data_14].[Proba_0] AS [Proba_0], [DT_node_data_14].[LogProba_0] AS [LogProba_0], [DT_node_data_14].[Proba_1] AS [Proba_1], [DT_node_data_14].[LogProba_1] AS [LogProba_1], [DT_node_data_14].[Decision] AS [Decision], [DT_node_data_14].[DecisionProba] AS [DecisionProba] 
FROM [DT_node_lookup_14] LEFT OUTER JOIN [DT_node_data_14] ON [DT_node_lookup_14].node_id_2 = [DT_node_data_14].node_id), 
[AdaBoost_Estim_14] AS 
(SELECT [DT_Output_14].[KEY] AS [KEY], (1.0 * (CASE WHEN ([DT_Output_14].[Proba_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_14].[Proba_0] IS NULL OR [DT_Output_14].[Proba_0] > 0.0) THEN log([DT_Output_14].[Proba_0]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([DT_Output_14].[Proba_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_14].[Proba_0] IS NULL OR [DT_Output_14].[Proba_0] > 0.0) THEN log([DT_Output_14].[Proba_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_14].[Proba_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_14].[Proba_1] IS NULL OR [DT_Output_14].[Proba_1] > 0.0) THEN log([DT_Output_14].[Proba_1]) ELSE -1.79769313486231e+308 END END) / 2)) / 32.0 AS [Score_0], 1.0 * (CASE WHEN ([DT_Output_14].[Proba_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_14].[Proba_0] IS NULL OR [DT_Output_14].[Proba_0] > 0.0) THEN log([DT_Output_14].[Proba_0]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([DT_Output_14].[Proba_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_14].[Proba_0] IS NULL OR [DT_Output_14].[Proba_0] > 0.0) THEN log([DT_Output_14].[Proba_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_14].[Proba_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_14].[Proba_1] IS NULL OR [DT_Output_14].[Proba_1] > 0.0) THEN log([DT_Output_14].[Proba_1]) ELSE -1.79769313486231e+308 END END) / 2) AS [Proba_0], (1.0 * (CASE WHEN ([DT_Output_14].[Proba_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_14].[Proba_1] IS NULL OR [DT_Output_14].[Proba_1] > 0.0) THEN log([DT_Output_14].[Proba_1]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([DT_Output_14].[Proba_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_14].[Proba_0] IS NULL OR [DT_Output_14].[Proba_0] > 0.0) THEN log([DT_Output_14].[Proba_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_14].[Proba_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_14].[Proba_1] IS NULL OR [DT_Output_14].[Proba_1] > 0.0) THEN log([DT_Output_14].[Proba_1]) ELSE -1.79769313486231e+308 END END) / 2)) / 32.0 AS [Score_1], 1.0 * (CASE WHEN ([DT_Output_14].[Proba_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_14].[Proba_1] IS NULL OR [DT_Output_14].[Proba_1] > 0.0) THEN log([DT_Output_14].[Proba_1]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([DT_Output_14].[Proba_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_14].[Proba_0] IS NULL OR [DT_Output_14].[Proba_0] > 0.0) THEN log([DT_Output_14].[Proba_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_14].[Proba_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_14].[Proba_1] IS NULL OR [DT_Output_14].[Proba_1] > 0.0) THEN log([DT_Output_14].[Proba_1]) ELSE -1.79769313486231e+308 END END) / 2) AS [Proba_1] 
FROM [DT_Output_14]), 
[DT_node_lookup_15] AS 
(SELECT [ADS].[KEY] AS [KEY], CASE WHEN ([ADS].[Feature_477] <= 0.6700543165206909) THEN 1 ELSE 2 END AS node_id_2 
FROM [BinaryClass_500] AS [ADS]), 
[DT_node_data_15] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Proba_0] AS [Proba_0], [Values].[LogProba_0] AS [LogProba_0], [Values].[Proba_1] AS [Proba_1], [Values].[LogProba_1] AS [LogProba_1], [Values].[Decision] AS [Decision], [Values].[DecisionProba] AS [DecisionProba] 
FROM (SELECT 1 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 62 AS count, 1 AS depth, 0 AS parent_id, 0.16192854628252676 AS [Proba_0], -1.82060011338 AS [LogProba_0], 0.8380714537174732 AS [Proba_1], -0.176651915169 AS [LogProba_1], 1 AS [Decision], 0.838071453717 AS [DecisionProba] UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 18 AS count, 1 AS depth, 0 AS parent_id, 0.9985890308749222 AS [Proba_0], -0.00141196547934 AS [LogProba_0], 0.0014109691250776743 AS [Proba_1], -6.56347848794 AS [LogProba_1], 0 AS [Decision], 0.998589030875 AS [DecisionProba]) AS [Values]), 
[DT_Output_15] AS 
(SELECT [DT_node_lookup_15].[KEY] AS [KEY], [DT_node_lookup_15].node_id_2 AS node_id_2, [DT_node_data_15].node_id AS node_id, [DT_node_data_15].feature AS feature, [DT_node_data_15].threshold AS threshold, [DT_node_data_15].count AS count, [DT_node_data_15].depth AS depth, [DT_node_data_15].parent_id AS parent_id, [DT_node_data_15].[Proba_0] AS [Proba_0], [DT_node_data_15].[LogProba_0] AS [LogProba_0], [DT_node_data_15].[Proba_1] AS [Proba_1], [DT_node_data_15].[LogProba_1] AS [LogProba_1], [DT_node_data_15].[Decision] AS [Decision], [DT_node_data_15].[DecisionProba] AS [DecisionProba] 
FROM [DT_node_lookup_15] LEFT OUTER JOIN [DT_node_data_15] ON [DT_node_lookup_15].node_id_2 = [DT_node_data_15].node_id), 
[AdaBoost_Estim_15] AS 
(SELECT [DT_Output_15].[KEY] AS [KEY], (1.0 * (CASE WHEN ([DT_Output_15].[Proba_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_15].[Proba_0] IS NULL OR [DT_Output_15].[Proba_0] > 0.0) THEN log([DT_Output_15].[Proba_0]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([DT_Output_15].[Proba_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_15].[Proba_0] IS NULL OR [DT_Output_15].[Proba_0] > 0.0) THEN log([DT_Output_15].[Proba_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_15].[Proba_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_15].[Proba_1] IS NULL OR [DT_Output_15].[Proba_1] > 0.0) THEN log([DT_Output_15].[Proba_1]) ELSE -1.79769313486231e+308 END END) / 2)) / 32.0 AS [Score_0], 1.0 * (CASE WHEN ([DT_Output_15].[Proba_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_15].[Proba_0] IS NULL OR [DT_Output_15].[Proba_0] > 0.0) THEN log([DT_Output_15].[Proba_0]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([DT_Output_15].[Proba_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_15].[Proba_0] IS NULL OR [DT_Output_15].[Proba_0] > 0.0) THEN log([DT_Output_15].[Proba_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_15].[Proba_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_15].[Proba_1] IS NULL OR [DT_Output_15].[Proba_1] > 0.0) THEN log([DT_Output_15].[Proba_1]) ELSE -1.79769313486231e+308 END END) / 2) AS [Proba_0], (1.0 * (CASE WHEN ([DT_Output_15].[Proba_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_15].[Proba_1] IS NULL OR [DT_Output_15].[Proba_1] > 0.0) THEN log([DT_Output_15].[Proba_1]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([DT_Output_15].[Proba_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_15].[Proba_0] IS NULL OR [DT_Output_15].[Proba_0] > 0.0) THEN log([DT_Output_15].[Proba_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_15].[Proba_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_15].[Proba_1] IS NULL OR [DT_Output_15].[Proba_1] > 0.0) THEN log([DT_Output_15].[Proba_1]) ELSE -1.79769313486231e+308 END END) / 2)) / 32.0 AS [Score_1], 1.0 * (CASE WHEN ([DT_Output_15].[Proba_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_15].[Proba_1] IS NULL OR [DT_Output_15].[Proba_1] > 0.0) THEN log([DT_Output_15].[Proba_1]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([DT_Output_15].[Proba_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_15].[Proba_0] IS NULL OR [DT_Output_15].[Proba_0] > 0.0) THEN log([DT_Output_15].[Proba_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_15].[Proba_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_15].[Proba_1] IS NULL OR [DT_Output_15].[Proba_1] > 0.0) THEN log([DT_Output_15].[Proba_1]) ELSE -1.79769313486231e+308 END END) / 2) AS [Proba_1] 
FROM [DT_Output_15]), 
[DT_node_lookup_16] AS 
(SELECT [ADS].[KEY] AS [KEY], CASE WHEN ([ADS].[Feature_115] <= -0.6526205539703369) THEN 1 ELSE 2 END AS node_id_2 
FROM [BinaryClass_500] AS [ADS]), 
[DT_node_data_16] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Proba_0] AS [Proba_0], [Values].[LogProba_0] AS [LogProba_0], [Values].[Proba_1] AS [Proba_1], [Values].[LogProba_1] AS [LogProba_1], [Values].[Decision] AS [Decision], [Values].[DecisionProba] AS [DecisionProba] 
FROM (SELECT 1 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 21 AS count, 1 AS depth, 0 AS parent_id, 0.9999938156282053 AS [Proba_0], -6.18439091798e-06 AS [LogProba_0], 6.18437179460104e-06 AS [Proba_1], -11.9934851265 AS [LogProba_1], 0 AS [Decision], 0.999993815628 AS [DecisionProba] UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 59 AS count, 1 AS depth, 0 AS parent_id, 0.22649272727679656 AS [Proba_0], -1.48504244373 AS [LogProba_0], 0.7735072727232034 AS [Proba_1], -0.256820206656 AS [LogProba_1], 1 AS [Decision], 0.773507272723 AS [DecisionProba]) AS [Values]), 
[DT_Output_16] AS 
(SELECT [DT_node_lookup_16].[KEY] AS [KEY], [DT_node_lookup_16].node_id_2 AS node_id_2, [DT_node_data_16].node_id AS node_id, [DT_node_data_16].feature AS feature, [DT_node_data_16].threshold AS threshold, [DT_node_data_16].count AS count, [DT_node_data_16].depth AS depth, [DT_node_data_16].parent_id AS parent_id, [DT_node_data_16].[Proba_0] AS [Proba_0], [DT_node_data_16].[LogProba_0] AS [LogProba_0], [DT_node_data_16].[Proba_1] AS [Proba_1], [DT_node_data_16].[LogProba_1] AS [LogProba_1], [DT_node_data_16].[Decision] AS [Decision], [DT_node_data_16].[DecisionProba] AS [DecisionProba] 
FROM [DT_node_lookup_16] LEFT OUTER JOIN [DT_node_data_16] ON [DT_node_lookup_16].node_id_2 = [DT_node_data_16].node_id), 
[AdaBoost_Estim_16] AS 
(SELECT [DT_Output_16].[KEY] AS [KEY], (1.0 * (CASE WHEN ([DT_Output_16].[Proba_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_16].[Proba_0] IS NULL OR [DT_Output_16].[Proba_0] > 0.0) THEN log([DT_Output_16].[Proba_0]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([DT_Output_16].[Proba_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_16].[Proba_0] IS NULL OR [DT_Output_16].[Proba_0] > 0.0) THEN log([DT_Output_16].[Proba_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_16].[Proba_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_16].[Proba_1] IS NULL OR [DT_Output_16].[Proba_1] > 0.0) THEN log([DT_Output_16].[Proba_1]) ELSE -1.79769313486231e+308 END END) / 2)) / 32.0 AS [Score_0], 1.0 * (CASE WHEN ([DT_Output_16].[Proba_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_16].[Proba_0] IS NULL OR [DT_Output_16].[Proba_0] > 0.0) THEN log([DT_Output_16].[Proba_0]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([DT_Output_16].[Proba_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_16].[Proba_0] IS NULL OR [DT_Output_16].[Proba_0] > 0.0) THEN log([DT_Output_16].[Proba_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_16].[Proba_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_16].[Proba_1] IS NULL OR [DT_Output_16].[Proba_1] > 0.0) THEN log([DT_Output_16].[Proba_1]) ELSE -1.79769313486231e+308 END END) / 2) AS [Proba_0], (1.0 * (CASE WHEN ([DT_Output_16].[Proba_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_16].[Proba_1] IS NULL OR [DT_Output_16].[Proba_1] > 0.0) THEN log([DT_Output_16].[Proba_1]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([DT_Output_16].[Proba_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_16].[Proba_0] IS NULL OR [DT_Output_16].[Proba_0] > 0.0) THEN log([DT_Output_16].[Proba_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_16].[Proba_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_16].[Proba_1] IS NULL OR [DT_Output_16].[Proba_1] > 0.0) THEN log([DT_Output_16].[Proba_1]) ELSE -1.79769313486231e+308 END END) / 2)) / 32.0 AS [Score_1], 1.0 * (CASE WHEN ([DT_Output_16].[Proba_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_16].[Proba_1] IS NULL OR [DT_Output_16].[Proba_1] > 0.0) THEN log([DT_Output_16].[Proba_1]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([DT_Output_16].[Proba_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_16].[Proba_0] IS NULL OR [DT_Output_16].[Proba_0] > 0.0) THEN log([DT_Output_16].[Proba_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_16].[Proba_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_16].[Proba_1] IS NULL OR [DT_Output_16].[Proba_1] > 0.0) THEN log([DT_Output_16].[Proba_1]) ELSE -1.79769313486231e+308 END END) / 2) AS [Proba_1] 
FROM [DT_Output_16]), 
[DT_node_lookup_17] AS 
(SELECT [ADS].[KEY] AS [KEY], CASE WHEN ([ADS].[Feature_456] <= -0.3508431911468506) THEN 1 ELSE 2 END AS node_id_2 
FROM [BinaryClass_500] AS [ADS]), 
[DT_node_data_17] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Proba_0] AS [Proba_0], [Values].[LogProba_0] AS [LogProba_0], [Values].[Proba_1] AS [Proba_1], [Values].[LogProba_1] AS [LogProba_1], [Values].[Decision] AS [Decision], [Values].[DecisionProba] AS [DecisionProba] 
FROM (SELECT 1 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 26 AS count, 1 AS depth, 0 AS parent_id, 0.9244045009842976 AS [Proba_0], -0.0786055315065 AS [LogProba_0], 0.07559549901570241 AS [Proba_1], -2.5823585344 AS [LogProba_1], 0 AS [Decision], 0.924404500984 AS [DecisionProba] UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 54 AS count, 1 AS depth, 0 AS parent_id, 0.1902273446538583 AS [Proba_0], -1.65953537131 AS [LogProba_0], 0.8097726553461418 AS [Proba_1], -0.211001743124 AS [LogProba_1], 1 AS [Decision], 0.809772655346 AS [DecisionProba]) AS [Values]), 
[DT_Output_17] AS 
(SELECT [DT_node_lookup_17].[KEY] AS [KEY], [DT_node_lookup_17].node_id_2 AS node_id_2, [DT_node_data_17].node_id AS node_id, [DT_node_data_17].feature AS feature, [DT_node_data_17].threshold AS threshold, [DT_node_data_17].count AS count, [DT_node_data_17].depth AS depth, [DT_node_data_17].parent_id AS parent_id, [DT_node_data_17].[Proba_0] AS [Proba_0], [DT_node_data_17].[LogProba_0] AS [LogProba_0], [DT_node_data_17].[Proba_1] AS [Proba_1], [DT_node_data_17].[LogProba_1] AS [LogProba_1], [DT_node_data_17].[Decision] AS [Decision], [DT_node_data_17].[DecisionProba] AS [DecisionProba] 
FROM [DT_node_lookup_17] LEFT OUTER JOIN [DT_node_data_17] ON [DT_node_lookup_17].node_id_2 = [DT_node_data_17].node_id), 
[AdaBoost_Estim_17] AS 
(SELECT [DT_Output_17].[KEY] AS [KEY], (1.0 * (CASE WHEN ([DT_Output_17].[Proba_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_17].[Proba_0] IS NULL OR [DT_Output_17].[Proba_0] > 0.0) THEN log([DT_Output_17].[Proba_0]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([DT_Output_17].[Proba_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_17].[Proba_0] IS NULL OR [DT_Output_17].[Proba_0] > 0.0) THEN log([DT_Output_17].[Proba_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_17].[Proba_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_17].[Proba_1] IS NULL OR [DT_Output_17].[Proba_1] > 0.0) THEN log([DT_Output_17].[Proba_1]) ELSE -1.79769313486231e+308 END END) / 2)) / 32.0 AS [Score_0], 1.0 * (CASE WHEN ([DT_Output_17].[Proba_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_17].[Proba_0] IS NULL OR [DT_Output_17].[Proba_0] > 0.0) THEN log([DT_Output_17].[Proba_0]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([DT_Output_17].[Proba_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_17].[Proba_0] IS NULL OR [DT_Output_17].[Proba_0] > 0.0) THEN log([DT_Output_17].[Proba_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_17].[Proba_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_17].[Proba_1] IS NULL OR [DT_Output_17].[Proba_1] > 0.0) THEN log([DT_Output_17].[Proba_1]) ELSE -1.79769313486231e+308 END END) / 2) AS [Proba_0], (1.0 * (CASE WHEN ([DT_Output_17].[Proba_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_17].[Proba_1] IS NULL OR [DT_Output_17].[Proba_1] > 0.0) THEN log([DT_Output_17].[Proba_1]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([DT_Output_17].[Proba_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_17].[Proba_0] IS NULL OR [DT_Output_17].[Proba_0] > 0.0) THEN log([DT_Output_17].[Proba_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_17].[Proba_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_17].[Proba_1] IS NULL OR [DT_Output_17].[Proba_1] > 0.0) THEN log([DT_Output_17].[Proba_1]) ELSE -1.79769313486231e+308 END END) / 2)) / 32.0 AS [Score_1], 1.0 * (CASE WHEN ([DT_Output_17].[Proba_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_17].[Proba_1] IS NULL OR [DT_Output_17].[Proba_1] > 0.0) THEN log([DT_Output_17].[Proba_1]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([DT_Output_17].[Proba_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_17].[Proba_0] IS NULL OR [DT_Output_17].[Proba_0] > 0.0) THEN log([DT_Output_17].[Proba_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_17].[Proba_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_17].[Proba_1] IS NULL OR [DT_Output_17].[Proba_1] > 0.0) THEN log([DT_Output_17].[Proba_1]) ELSE -1.79769313486231e+308 END END) / 2) AS [Proba_1] 
FROM [DT_Output_17]), 
[DT_node_lookup_18] AS 
(SELECT [ADS].[KEY] AS [KEY], CASE WHEN ([ADS].[Feature_256] <= 0.8672657012939453) THEN 1 ELSE 2 END AS node_id_2 
FROM [BinaryClass_500] AS [ADS]), 
[DT_node_data_18] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Proba_0] AS [Proba_0], [Values].[LogProba_0] AS [LogProba_0], [Values].[Proba_1] AS [Proba_1], [Values].[LogProba_1] AS [LogProba_1], [Values].[Decision] AS [Decision], [Values].[DecisionProba] AS [DecisionProba] 
FROM (SELECT 1 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 66 AS count, 1 AS depth, 0 AS parent_id, 0.18800457335198578 AS [Proba_0], -1.67128899011 AS [LogProba_0], 0.8119954266480143 AS [Proba_1], -0.208260571043 AS [LogProba_1], 1 AS [Decision], 0.811995426648 AS [DecisionProba] UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 14 AS count, 1 AS depth, 0 AS parent_id, 0.9686846965216377 AS [Proba_0], -0.0318161106289 AS [LogProba_0], 0.03131530347836222 AS [Proba_1], -3.4636483719 AS [LogProba_1], 0 AS [Decision], 0.968684696522 AS [DecisionProba]) AS [Values]), 
[DT_Output_18] AS 
(SELECT [DT_node_lookup_18].[KEY] AS [KEY], [DT_node_lookup_18].node_id_2 AS node_id_2, [DT_node_data_18].node_id AS node_id, [DT_node_data_18].feature AS feature, [DT_node_data_18].threshold AS threshold, [DT_node_data_18].count AS count, [DT_node_data_18].depth AS depth, [DT_node_data_18].parent_id AS parent_id, [DT_node_data_18].[Proba_0] AS [Proba_0], [DT_node_data_18].[LogProba_0] AS [LogProba_0], [DT_node_data_18].[Proba_1] AS [Proba_1], [DT_node_data_18].[LogProba_1] AS [LogProba_1], [DT_node_data_18].[Decision] AS [Decision], [DT_node_data_18].[DecisionProba] AS [DecisionProba] 
FROM [DT_node_lookup_18] LEFT OUTER JOIN [DT_node_data_18] ON [DT_node_lookup_18].node_id_2 = [DT_node_data_18].node_id), 
[AdaBoost_Estim_18] AS 
(SELECT [DT_Output_18].[KEY] AS [KEY], (1.0 * (CASE WHEN ([DT_Output_18].[Proba_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_18].[Proba_0] IS NULL OR [DT_Output_18].[Proba_0] > 0.0) THEN log([DT_Output_18].[Proba_0]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([DT_Output_18].[Proba_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_18].[Proba_0] IS NULL OR [DT_Output_18].[Proba_0] > 0.0) THEN log([DT_Output_18].[Proba_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_18].[Proba_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_18].[Proba_1] IS NULL OR [DT_Output_18].[Proba_1] > 0.0) THEN log([DT_Output_18].[Proba_1]) ELSE -1.79769313486231e+308 END END) / 2)) / 32.0 AS [Score_0], 1.0 * (CASE WHEN ([DT_Output_18].[Proba_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_18].[Proba_0] IS NULL OR [DT_Output_18].[Proba_0] > 0.0) THEN log([DT_Output_18].[Proba_0]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([DT_Output_18].[Proba_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_18].[Proba_0] IS NULL OR [DT_Output_18].[Proba_0] > 0.0) THEN log([DT_Output_18].[Proba_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_18].[Proba_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_18].[Proba_1] IS NULL OR [DT_Output_18].[Proba_1] > 0.0) THEN log([DT_Output_18].[Proba_1]) ELSE -1.79769313486231e+308 END END) / 2) AS [Proba_0], (1.0 * (CASE WHEN ([DT_Output_18].[Proba_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_18].[Proba_1] IS NULL OR [DT_Output_18].[Proba_1] > 0.0) THEN log([DT_Output_18].[Proba_1]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([DT_Output_18].[Proba_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_18].[Proba_0] IS NULL OR [DT_Output_18].[Proba_0] > 0.0) THEN log([DT_Output_18].[Proba_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_18].[Proba_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_18].[Proba_1] IS NULL OR [DT_Output_18].[Proba_1] > 0.0) THEN log([DT_Output_18].[Proba_1]) ELSE -1.79769313486231e+308 END END) / 2)) / 32.0 AS [Score_1], 1.0 * (CASE WHEN ([DT_Output_18].[Proba_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_18].[Proba_1] IS NULL OR [DT_Output_18].[Proba_1] > 0.0) THEN log([DT_Output_18].[Proba_1]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([DT_Output_18].[Proba_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_18].[Proba_0] IS NULL OR [DT_Output_18].[Proba_0] > 0.0) THEN log([DT_Output_18].[Proba_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_18].[Proba_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_18].[Proba_1] IS NULL OR [DT_Output_18].[Proba_1] > 0.0) THEN log([DT_Output_18].[Proba_1]) ELSE -1.79769313486231e+308 END END) / 2) AS [Proba_1] 
FROM [DT_Output_18]), 
[DT_node_lookup_19] AS 
(SELECT [ADS].[KEY] AS [KEY], CASE WHEN ([ADS].[Feature_322] <= -0.7190277576446533) THEN 1 ELSE 2 END AS node_id_2 
FROM [BinaryClass_500] AS [ADS]), 
[DT_node_data_19] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Proba_0] AS [Proba_0], [Values].[LogProba_0] AS [LogProba_0], [Values].[Proba_1] AS [Proba_1], [Values].[LogProba_1] AS [LogProba_1], [Values].[Decision] AS [Decision], [Values].[DecisionProba] AS [DecisionProba] 
FROM (SELECT 1 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 21 AS count, 1 AS depth, 0 AS parent_id, 0.03239001107589206 AS [Proba_0], -3.42990520384 AS [LogProba_0], 0.967609988924108 AS [Proba_1], -0.0329261768972 AS [LogProba_1], 1 AS [Decision], 0.967609988924 AS [DecisionProba] UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 59 AS count, 1 AS depth, 0 AS parent_id, 0.8045362321383125 AS [Proba_0], -0.217489276723 AS [LogProba_0], 0.1954637678616874 AS [Proba_1], -1.63238024736 AS [LogProba_1], 0 AS [Decision], 0.804536232138 AS [DecisionProba]) AS [Values]), 
[DT_Output_19] AS 
(SELECT [DT_node_lookup_19].[KEY] AS [KEY], [DT_node_lookup_19].node_id_2 AS node_id_2, [DT_node_data_19].node_id AS node_id, [DT_node_data_19].feature AS feature, [DT_node_data_19].threshold AS threshold, [DT_node_data_19].count AS count, [DT_node_data_19].depth AS depth, [DT_node_data_19].parent_id AS parent_id, [DT_node_data_19].[Proba_0] AS [Proba_0], [DT_node_data_19].[LogProba_0] AS [LogProba_0], [DT_node_data_19].[Proba_1] AS [Proba_1], [DT_node_data_19].[LogProba_1] AS [LogProba_1], [DT_node_data_19].[Decision] AS [Decision], [DT_node_data_19].[DecisionProba] AS [DecisionProba] 
FROM [DT_node_lookup_19] LEFT OUTER JOIN [DT_node_data_19] ON [DT_node_lookup_19].node_id_2 = [DT_node_data_19].node_id), 
[AdaBoost_Estim_19] AS 
(SELECT [DT_Output_19].[KEY] AS [KEY], (1.0 * (CASE WHEN ([DT_Output_19].[Proba_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_19].[Proba_0] IS NULL OR [DT_Output_19].[Proba_0] > 0.0) THEN log([DT_Output_19].[Proba_0]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([DT_Output_19].[Proba_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_19].[Proba_0] IS NULL OR [DT_Output_19].[Proba_0] > 0.0) THEN log([DT_Output_19].[Proba_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_19].[Proba_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_19].[Proba_1] IS NULL OR [DT_Output_19].[Proba_1] > 0.0) THEN log([DT_Output_19].[Proba_1]) ELSE -1.79769313486231e+308 END END) / 2)) / 32.0 AS [Score_0], 1.0 * (CASE WHEN ([DT_Output_19].[Proba_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_19].[Proba_0] IS NULL OR [DT_Output_19].[Proba_0] > 0.0) THEN log([DT_Output_19].[Proba_0]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([DT_Output_19].[Proba_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_19].[Proba_0] IS NULL OR [DT_Output_19].[Proba_0] > 0.0) THEN log([DT_Output_19].[Proba_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_19].[Proba_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_19].[Proba_1] IS NULL OR [DT_Output_19].[Proba_1] > 0.0) THEN log([DT_Output_19].[Proba_1]) ELSE -1.79769313486231e+308 END END) / 2) AS [Proba_0], (1.0 * (CASE WHEN ([DT_Output_19].[Proba_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_19].[Proba_1] IS NULL OR [DT_Output_19].[Proba_1] > 0.0) THEN log([DT_Output_19].[Proba_1]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([DT_Output_19].[Proba_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_19].[Proba_0] IS NULL OR [DT_Output_19].[Proba_0] > 0.0) THEN log([DT_Output_19].[Proba_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_19].[Proba_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_19].[Proba_1] IS NULL OR [DT_Output_19].[Proba_1] > 0.0) THEN log([DT_Output_19].[Proba_1]) ELSE -1.79769313486231e+308 END END) / 2)) / 32.0 AS [Score_1], 1.0 * (CASE WHEN ([DT_Output_19].[Proba_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_19].[Proba_1] IS NULL OR [DT_Output_19].[Proba_1] > 0.0) THEN log([DT_Output_19].[Proba_1]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([DT_Output_19].[Proba_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_19].[Proba_0] IS NULL OR [DT_Output_19].[Proba_0] > 0.0) THEN log([DT_Output_19].[Proba_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_19].[Proba_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_19].[Proba_1] IS NULL OR [DT_Output_19].[Proba_1] > 0.0) THEN log([DT_Output_19].[Proba_1]) ELSE -1.79769313486231e+308 END END) / 2) AS [Proba_1] 
FROM [DT_Output_19]), 
[DT_node_lookup_20] AS 
(SELECT [ADS].[KEY] AS [KEY], CASE WHEN ([ADS].[Feature_220] <= -0.1373419165611267) THEN 1 ELSE 2 END AS node_id_2 
FROM [BinaryClass_500] AS [ADS]), 
[DT_node_data_20] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Proba_0] AS [Proba_0], [Values].[LogProba_0] AS [LogProba_0], [Values].[Proba_1] AS [Proba_1], [Values].[LogProba_1] AS [LogProba_1], [Values].[Decision] AS [Decision], [Values].[DecisionProba] AS [DecisionProba] 
FROM (SELECT 1 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 42 AS count, 1 AS depth, 0 AS parent_id, 0.18949809045817995 AS [Proba_0], -1.66337633125 AS [LogProba_0], 0.81050190954182 AS [Proba_1], -0.210101581804 AS [LogProba_1], 1 AS [Decision], 0.810501909542 AS [DecisionProba] UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 38 AS count, 1 AS depth, 0 AS parent_id, 0.8852674303991489 AS [Proba_0], -0.12186549838 AS [LogProba_0], 0.11473256960085104 AS [Proba_1], -2.16515134048 AS [LogProba_1], 0 AS [Decision], 0.885267430399 AS [DecisionProba]) AS [Values]), 
[DT_Output_20] AS 
(SELECT [DT_node_lookup_20].[KEY] AS [KEY], [DT_node_lookup_20].node_id_2 AS node_id_2, [DT_node_data_20].node_id AS node_id, [DT_node_data_20].feature AS feature, [DT_node_data_20].threshold AS threshold, [DT_node_data_20].count AS count, [DT_node_data_20].depth AS depth, [DT_node_data_20].parent_id AS parent_id, [DT_node_data_20].[Proba_0] AS [Proba_0], [DT_node_data_20].[LogProba_0] AS [LogProba_0], [DT_node_data_20].[Proba_1] AS [Proba_1], [DT_node_data_20].[LogProba_1] AS [LogProba_1], [DT_node_data_20].[Decision] AS [Decision], [DT_node_data_20].[DecisionProba] AS [DecisionProba] 
FROM [DT_node_lookup_20] LEFT OUTER JOIN [DT_node_data_20] ON [DT_node_lookup_20].node_id_2 = [DT_node_data_20].node_id), 
[AdaBoost_Estim_20] AS 
(SELECT [DT_Output_20].[KEY] AS [KEY], (1.0 * (CASE WHEN ([DT_Output_20].[Proba_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_20].[Proba_0] IS NULL OR [DT_Output_20].[Proba_0] > 0.0) THEN log([DT_Output_20].[Proba_0]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([DT_Output_20].[Proba_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_20].[Proba_0] IS NULL OR [DT_Output_20].[Proba_0] > 0.0) THEN log([DT_Output_20].[Proba_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_20].[Proba_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_20].[Proba_1] IS NULL OR [DT_Output_20].[Proba_1] > 0.0) THEN log([DT_Output_20].[Proba_1]) ELSE -1.79769313486231e+308 END END) / 2)) / 32.0 AS [Score_0], 1.0 * (CASE WHEN ([DT_Output_20].[Proba_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_20].[Proba_0] IS NULL OR [DT_Output_20].[Proba_0] > 0.0) THEN log([DT_Output_20].[Proba_0]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([DT_Output_20].[Proba_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_20].[Proba_0] IS NULL OR [DT_Output_20].[Proba_0] > 0.0) THEN log([DT_Output_20].[Proba_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_20].[Proba_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_20].[Proba_1] IS NULL OR [DT_Output_20].[Proba_1] > 0.0) THEN log([DT_Output_20].[Proba_1]) ELSE -1.79769313486231e+308 END END) / 2) AS [Proba_0], (1.0 * (CASE WHEN ([DT_Output_20].[Proba_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_20].[Proba_1] IS NULL OR [DT_Output_20].[Proba_1] > 0.0) THEN log([DT_Output_20].[Proba_1]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([DT_Output_20].[Proba_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_20].[Proba_0] IS NULL OR [DT_Output_20].[Proba_0] > 0.0) THEN log([DT_Output_20].[Proba_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_20].[Proba_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_20].[Proba_1] IS NULL OR [DT_Output_20].[Proba_1] > 0.0) THEN log([DT_Output_20].[Proba_1]) ELSE -1.79769313486231e+308 END END) / 2)) / 32.0 AS [Score_1], 1.0 * (CASE WHEN ([DT_Output_20].[Proba_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_20].[Proba_1] IS NULL OR [DT_Output_20].[Proba_1] > 0.0) THEN log([DT_Output_20].[Proba_1]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([DT_Output_20].[Proba_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_20].[Proba_0] IS NULL OR [DT_Output_20].[Proba_0] > 0.0) THEN log([DT_Output_20].[Proba_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_20].[Proba_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_20].[Proba_1] IS NULL OR [DT_Output_20].[Proba_1] > 0.0) THEN log([DT_Output_20].[Proba_1]) ELSE -1.79769313486231e+308 END END) / 2) AS [Proba_1] 
FROM [DT_Output_20]), 
[DT_node_lookup_21] AS 
(SELECT [ADS].[KEY] AS [KEY], CASE WHEN ([ADS].[Feature_441] <= -0.11166386306285858) THEN 1 ELSE 2 END AS node_id_2 
FROM [BinaryClass_500] AS [ADS]), 
[DT_node_data_21] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Proba_0] AS [Proba_0], [Values].[LogProba_0] AS [LogProba_0], [Values].[Proba_1] AS [Proba_1], [Values].[LogProba_1] AS [LogProba_1], [Values].[Decision] AS [Decision], [Values].[DecisionProba] AS [DecisionProba] 
FROM (SELECT 1 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 33 AS count, 1 AS depth, 0 AS parent_id, 0.11768413888745943 AS [Proba_0], -2.13975103261 AS [LogProba_0], 0.8823158611125406 AS [Proba_1], -0.125205167909 AS [LogProba_1], 1 AS [Decision], 0.882315861113 AS [DecisionProba] UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 47 AS count, 1 AS depth, 0 AS parent_id, 0.8836186847442563 AS [Proba_0], -0.123729661503 AS [LogProba_0], 0.11638131525574363 AS [Proba_1], -2.15088327843 AS [LogProba_1], 0 AS [Decision], 0.883618684744 AS [DecisionProba]) AS [Values]), 
[DT_Output_21] AS 
(SELECT [DT_node_lookup_21].[KEY] AS [KEY], [DT_node_lookup_21].node_id_2 AS node_id_2, [DT_node_data_21].node_id AS node_id, [DT_node_data_21].feature AS feature, [DT_node_data_21].threshold AS threshold, [DT_node_data_21].count AS count, [DT_node_data_21].depth AS depth, [DT_node_data_21].parent_id AS parent_id, [DT_node_data_21].[Proba_0] AS [Proba_0], [DT_node_data_21].[LogProba_0] AS [LogProba_0], [DT_node_data_21].[Proba_1] AS [Proba_1], [DT_node_data_21].[LogProba_1] AS [LogProba_1], [DT_node_data_21].[Decision] AS [Decision], [DT_node_data_21].[DecisionProba] AS [DecisionProba] 
FROM [DT_node_lookup_21] LEFT OUTER JOIN [DT_node_data_21] ON [DT_node_lookup_21].node_id_2 = [DT_node_data_21].node_id), 
[AdaBoost_Estim_21] AS 
(SELECT [DT_Output_21].[KEY] AS [KEY], (1.0 * (CASE WHEN ([DT_Output_21].[Proba_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_21].[Proba_0] IS NULL OR [DT_Output_21].[Proba_0] > 0.0) THEN log([DT_Output_21].[Proba_0]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([DT_Output_21].[Proba_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_21].[Proba_0] IS NULL OR [DT_Output_21].[Proba_0] > 0.0) THEN log([DT_Output_21].[Proba_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_21].[Proba_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_21].[Proba_1] IS NULL OR [DT_Output_21].[Proba_1] > 0.0) THEN log([DT_Output_21].[Proba_1]) ELSE -1.79769313486231e+308 END END) / 2)) / 32.0 AS [Score_0], 1.0 * (CASE WHEN ([DT_Output_21].[Proba_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_21].[Proba_0] IS NULL OR [DT_Output_21].[Proba_0] > 0.0) THEN log([DT_Output_21].[Proba_0]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([DT_Output_21].[Proba_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_21].[Proba_0] IS NULL OR [DT_Output_21].[Proba_0] > 0.0) THEN log([DT_Output_21].[Proba_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_21].[Proba_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_21].[Proba_1] IS NULL OR [DT_Output_21].[Proba_1] > 0.0) THEN log([DT_Output_21].[Proba_1]) ELSE -1.79769313486231e+308 END END) / 2) AS [Proba_0], (1.0 * (CASE WHEN ([DT_Output_21].[Proba_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_21].[Proba_1] IS NULL OR [DT_Output_21].[Proba_1] > 0.0) THEN log([DT_Output_21].[Proba_1]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([DT_Output_21].[Proba_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_21].[Proba_0] IS NULL OR [DT_Output_21].[Proba_0] > 0.0) THEN log([DT_Output_21].[Proba_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_21].[Proba_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_21].[Proba_1] IS NULL OR [DT_Output_21].[Proba_1] > 0.0) THEN log([DT_Output_21].[Proba_1]) ELSE -1.79769313486231e+308 END END) / 2)) / 32.0 AS [Score_1], 1.0 * (CASE WHEN ([DT_Output_21].[Proba_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_21].[Proba_1] IS NULL OR [DT_Output_21].[Proba_1] > 0.0) THEN log([DT_Output_21].[Proba_1]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([DT_Output_21].[Proba_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_21].[Proba_0] IS NULL OR [DT_Output_21].[Proba_0] > 0.0) THEN log([DT_Output_21].[Proba_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_21].[Proba_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_21].[Proba_1] IS NULL OR [DT_Output_21].[Proba_1] > 0.0) THEN log([DT_Output_21].[Proba_1]) ELSE -1.79769313486231e+308 END END) / 2) AS [Proba_1] 
FROM [DT_Output_21]), 
[DT_node_lookup_22] AS 
(SELECT [ADS].[KEY] AS [KEY], CASE WHEN ([ADS].[Feature_344] <= -0.28757673501968384) THEN 1 ELSE 2 END AS node_id_2 
FROM [BinaryClass_500] AS [ADS]), 
[DT_node_data_22] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Proba_0] AS [Proba_0], [Values].[LogProba_0] AS [LogProba_0], [Values].[Proba_1] AS [Proba_1], [Values].[LogProba_1] AS [LogProba_1], [Values].[Decision] AS [Decision], [Values].[DecisionProba] AS [DecisionProba] 
FROM (SELECT 1 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 28 AS count, 1 AS depth, 0 AS parent_id, 0.06700048342305322 AS [Proba_0], -2.70305544435 AS [LogProba_0], 0.9329995165769467 AS [Proba_1], -0.0693505962732 AS [LogProba_1], 1 AS [Decision], 0.932999516577 AS [DecisionProba] UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 52 AS count, 1 AS depth, 0 AS parent_id, 0.804513899389024 AS [Proba_0], -0.217517035646 AS [LogProba_0], 0.19548610061097596 AS [Proba_1], -1.6322659987 AS [LogProba_1], 0 AS [Decision], 0.804513899389 AS [DecisionProba]) AS [Values]), 
[DT_Output_22] AS 
(SELECT [DT_node_lookup_22].[KEY] AS [KEY], [DT_node_lookup_22].node_id_2 AS node_id_2, [DT_node_data_22].node_id AS node_id, [DT_node_data_22].feature AS feature, [DT_node_data_22].threshold AS threshold, [DT_node_data_22].count AS count, [DT_node_data_22].depth AS depth, [DT_node_data_22].parent_id AS parent_id, [DT_node_data_22].[Proba_0] AS [Proba_0], [DT_node_data_22].[LogProba_0] AS [LogProba_0], [DT_node_data_22].[Proba_1] AS [Proba_1], [DT_node_data_22].[LogProba_1] AS [LogProba_1], [DT_node_data_22].[Decision] AS [Decision], [DT_node_data_22].[DecisionProba] AS [DecisionProba] 
FROM [DT_node_lookup_22] LEFT OUTER JOIN [DT_node_data_22] ON [DT_node_lookup_22].node_id_2 = [DT_node_data_22].node_id), 
[AdaBoost_Estim_22] AS 
(SELECT [DT_Output_22].[KEY] AS [KEY], (1.0 * (CASE WHEN ([DT_Output_22].[Proba_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_22].[Proba_0] IS NULL OR [DT_Output_22].[Proba_0] > 0.0) THEN log([DT_Output_22].[Proba_0]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([DT_Output_22].[Proba_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_22].[Proba_0] IS NULL OR [DT_Output_22].[Proba_0] > 0.0) THEN log([DT_Output_22].[Proba_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_22].[Proba_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_22].[Proba_1] IS NULL OR [DT_Output_22].[Proba_1] > 0.0) THEN log([DT_Output_22].[Proba_1]) ELSE -1.79769313486231e+308 END END) / 2)) / 32.0 AS [Score_0], 1.0 * (CASE WHEN ([DT_Output_22].[Proba_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_22].[Proba_0] IS NULL OR [DT_Output_22].[Proba_0] > 0.0) THEN log([DT_Output_22].[Proba_0]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([DT_Output_22].[Proba_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_22].[Proba_0] IS NULL OR [DT_Output_22].[Proba_0] > 0.0) THEN log([DT_Output_22].[Proba_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_22].[Proba_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_22].[Proba_1] IS NULL OR [DT_Output_22].[Proba_1] > 0.0) THEN log([DT_Output_22].[Proba_1]) ELSE -1.79769313486231e+308 END END) / 2) AS [Proba_0], (1.0 * (CASE WHEN ([DT_Output_22].[Proba_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_22].[Proba_1] IS NULL OR [DT_Output_22].[Proba_1] > 0.0) THEN log([DT_Output_22].[Proba_1]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([DT_Output_22].[Proba_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_22].[Proba_0] IS NULL OR [DT_Output_22].[Proba_0] > 0.0) THEN log([DT_Output_22].[Proba_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_22].[Proba_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_22].[Proba_1] IS NULL OR [DT_Output_22].[Proba_1] > 0.0) THEN log([DT_Output_22].[Proba_1]) ELSE -1.79769313486231e+308 END END) / 2)) / 32.0 AS [Score_1], 1.0 * (CASE WHEN ([DT_Output_22].[Proba_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_22].[Proba_1] IS NULL OR [DT_Output_22].[Proba_1] > 0.0) THEN log([DT_Output_22].[Proba_1]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([DT_Output_22].[Proba_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_22].[Proba_0] IS NULL OR [DT_Output_22].[Proba_0] > 0.0) THEN log([DT_Output_22].[Proba_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_22].[Proba_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_22].[Proba_1] IS NULL OR [DT_Output_22].[Proba_1] > 0.0) THEN log([DT_Output_22].[Proba_1]) ELSE -1.79769313486231e+308 END END) / 2) AS [Proba_1] 
FROM [DT_Output_22]), 
[DT_node_lookup_23] AS 
(SELECT [ADS].[KEY] AS [KEY], CASE WHEN ([ADS].[Feature_353] <= -0.13693708181381226) THEN 1 ELSE 2 END AS node_id_2 
FROM [BinaryClass_500] AS [ADS]), 
[DT_node_data_23] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Proba_0] AS [Proba_0], [Values].[LogProba_0] AS [LogProba_0], [Values].[Proba_1] AS [Proba_1], [Values].[LogProba_1] AS [LogProba_1], [Values].[Decision] AS [Decision], [Values].[DecisionProba] AS [DecisionProba] 
FROM (SELECT 1 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 31 AS count, 1 AS depth, 0 AS parent_id, 0.060038393545567816 AS [Proba_0], -2.81277102898 AS [LogProba_0], 0.9399616064544322 AS [Proba_1], -0.0619162487496 AS [LogProba_1], 1 AS [Decision], 0.939961606454 AS [DecisionProba] UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 49 AS count, 1 AS depth, 0 AS parent_id, 0.7652830252259402 AS [Proba_0], -0.267509545961 AS [LogProba_0], 0.23471697477405987 AS [Proba_1], -1.44937485333 AS [LogProba_1], 0 AS [Decision], 0.765283025226 AS [DecisionProba]) AS [Values]), 
[DT_Output_23] AS 
(SELECT [DT_node_lookup_23].[KEY] AS [KEY], [DT_node_lookup_23].node_id_2 AS node_id_2, [DT_node_data_23].node_id AS node_id, [DT_node_data_23].feature AS feature, [DT_node_data_23].threshold AS threshold, [DT_node_data_23].count AS count, [DT_node_data_23].depth AS depth, [DT_node_data_23].parent_id AS parent_id, [DT_node_data_23].[Proba_0] AS [Proba_0], [DT_node_data_23].[LogProba_0] AS [LogProba_0], [DT_node_data_23].[Proba_1] AS [Proba_1], [DT_node_data_23].[LogProba_1] AS [LogProba_1], [DT_node_data_23].[Decision] AS [Decision], [DT_node_data_23].[DecisionProba] AS [DecisionProba] 
FROM [DT_node_lookup_23] LEFT OUTER JOIN [DT_node_data_23] ON [DT_node_lookup_23].node_id_2 = [DT_node_data_23].node_id), 
[AdaBoost_Estim_23] AS 
(SELECT [DT_Output_23].[KEY] AS [KEY], (1.0 * (CASE WHEN ([DT_Output_23].[Proba_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_23].[Proba_0] IS NULL OR [DT_Output_23].[Proba_0] > 0.0) THEN log([DT_Output_23].[Proba_0]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([DT_Output_23].[Proba_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_23].[Proba_0] IS NULL OR [DT_Output_23].[Proba_0] > 0.0) THEN log([DT_Output_23].[Proba_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_23].[Proba_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_23].[Proba_1] IS NULL OR [DT_Output_23].[Proba_1] > 0.0) THEN log([DT_Output_23].[Proba_1]) ELSE -1.79769313486231e+308 END END) / 2)) / 32.0 AS [Score_0], 1.0 * (CASE WHEN ([DT_Output_23].[Proba_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_23].[Proba_0] IS NULL OR [DT_Output_23].[Proba_0] > 0.0) THEN log([DT_Output_23].[Proba_0]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([DT_Output_23].[Proba_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_23].[Proba_0] IS NULL OR [DT_Output_23].[Proba_0] > 0.0) THEN log([DT_Output_23].[Proba_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_23].[Proba_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_23].[Proba_1] IS NULL OR [DT_Output_23].[Proba_1] > 0.0) THEN log([DT_Output_23].[Proba_1]) ELSE -1.79769313486231e+308 END END) / 2) AS [Proba_0], (1.0 * (CASE WHEN ([DT_Output_23].[Proba_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_23].[Proba_1] IS NULL OR [DT_Output_23].[Proba_1] > 0.0) THEN log([DT_Output_23].[Proba_1]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([DT_Output_23].[Proba_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_23].[Proba_0] IS NULL OR [DT_Output_23].[Proba_0] > 0.0) THEN log([DT_Output_23].[Proba_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_23].[Proba_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_23].[Proba_1] IS NULL OR [DT_Output_23].[Proba_1] > 0.0) THEN log([DT_Output_23].[Proba_1]) ELSE -1.79769313486231e+308 END END) / 2)) / 32.0 AS [Score_1], 1.0 * (CASE WHEN ([DT_Output_23].[Proba_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_23].[Proba_1] IS NULL OR [DT_Output_23].[Proba_1] > 0.0) THEN log([DT_Output_23].[Proba_1]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([DT_Output_23].[Proba_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_23].[Proba_0] IS NULL OR [DT_Output_23].[Proba_0] > 0.0) THEN log([DT_Output_23].[Proba_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_23].[Proba_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_23].[Proba_1] IS NULL OR [DT_Output_23].[Proba_1] > 0.0) THEN log([DT_Output_23].[Proba_1]) ELSE -1.79769313486231e+308 END END) / 2) AS [Proba_1] 
FROM [DT_Output_23]), 
[DT_node_lookup_24] AS 
(SELECT [ADS].[KEY] AS [KEY], CASE WHEN ([ADS].[Feature_192] <= -0.10254906862974167) THEN 1 ELSE 2 END AS node_id_2 
FROM [BinaryClass_500] AS [ADS]), 
[DT_node_data_24] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Proba_0] AS [Proba_0], [Values].[LogProba_0] AS [LogProba_0], [Values].[Proba_1] AS [Proba_1], [Values].[LogProba_1] AS [LogProba_1], [Values].[Decision] AS [Decision], [Values].[DecisionProba] AS [DecisionProba] 
FROM (SELECT 1 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 38 AS count, 1 AS depth, 0 AS parent_id, 0.866690791878085 AS [Proba_0], -0.143073007246 AS [LogProba_0], 0.1333092081219151 AS [Proba_1], -2.015083976 AS [LogProba_1], 0 AS [Decision], 0.866690791878 AS [DecisionProba] UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 42 AS count, 1 AS depth, 0 AS parent_id, 0.12264729944377771 AS [Proba_0], -2.09844252692 AS [LogProba_0], 0.8773527005562223 AS [Proba_1], -0.130846200347 AS [LogProba_1], 1 AS [Decision], 0.877352700556 AS [DecisionProba]) AS [Values]), 
[DT_Output_24] AS 
(SELECT [DT_node_lookup_24].[KEY] AS [KEY], [DT_node_lookup_24].node_id_2 AS node_id_2, [DT_node_data_24].node_id AS node_id, [DT_node_data_24].feature AS feature, [DT_node_data_24].threshold AS threshold, [DT_node_data_24].count AS count, [DT_node_data_24].depth AS depth, [DT_node_data_24].parent_id AS parent_id, [DT_node_data_24].[Proba_0] AS [Proba_0], [DT_node_data_24].[LogProba_0] AS [LogProba_0], [DT_node_data_24].[Proba_1] AS [Proba_1], [DT_node_data_24].[LogProba_1] AS [LogProba_1], [DT_node_data_24].[Decision] AS [Decision], [DT_node_data_24].[DecisionProba] AS [DecisionProba] 
FROM [DT_node_lookup_24] LEFT OUTER JOIN [DT_node_data_24] ON [DT_node_lookup_24].node_id_2 = [DT_node_data_24].node_id), 
[AdaBoost_Estim_24] AS 
(SELECT [DT_Output_24].[KEY] AS [KEY], (1.0 * (CASE WHEN ([DT_Output_24].[Proba_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_24].[Proba_0] IS NULL OR [DT_Output_24].[Proba_0] > 0.0) THEN log([DT_Output_24].[Proba_0]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([DT_Output_24].[Proba_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_24].[Proba_0] IS NULL OR [DT_Output_24].[Proba_0] > 0.0) THEN log([DT_Output_24].[Proba_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_24].[Proba_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_24].[Proba_1] IS NULL OR [DT_Output_24].[Proba_1] > 0.0) THEN log([DT_Output_24].[Proba_1]) ELSE -1.79769313486231e+308 END END) / 2)) / 32.0 AS [Score_0], 1.0 * (CASE WHEN ([DT_Output_24].[Proba_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_24].[Proba_0] IS NULL OR [DT_Output_24].[Proba_0] > 0.0) THEN log([DT_Output_24].[Proba_0]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([DT_Output_24].[Proba_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_24].[Proba_0] IS NULL OR [DT_Output_24].[Proba_0] > 0.0) THEN log([DT_Output_24].[Proba_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_24].[Proba_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_24].[Proba_1] IS NULL OR [DT_Output_24].[Proba_1] > 0.0) THEN log([DT_Output_24].[Proba_1]) ELSE -1.79769313486231e+308 END END) / 2) AS [Proba_0], (1.0 * (CASE WHEN ([DT_Output_24].[Proba_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_24].[Proba_1] IS NULL OR [DT_Output_24].[Proba_1] > 0.0) THEN log([DT_Output_24].[Proba_1]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([DT_Output_24].[Proba_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_24].[Proba_0] IS NULL OR [DT_Output_24].[Proba_0] > 0.0) THEN log([DT_Output_24].[Proba_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_24].[Proba_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_24].[Proba_1] IS NULL OR [DT_Output_24].[Proba_1] > 0.0) THEN log([DT_Output_24].[Proba_1]) ELSE -1.79769313486231e+308 END END) / 2)) / 32.0 AS [Score_1], 1.0 * (CASE WHEN ([DT_Output_24].[Proba_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_24].[Proba_1] IS NULL OR [DT_Output_24].[Proba_1] > 0.0) THEN log([DT_Output_24].[Proba_1]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([DT_Output_24].[Proba_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_24].[Proba_0] IS NULL OR [DT_Output_24].[Proba_0] > 0.0) THEN log([DT_Output_24].[Proba_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_24].[Proba_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_24].[Proba_1] IS NULL OR [DT_Output_24].[Proba_1] > 0.0) THEN log([DT_Output_24].[Proba_1]) ELSE -1.79769313486231e+308 END END) / 2) AS [Proba_1] 
FROM [DT_Output_24]), 
[DT_node_lookup_25] AS 
(SELECT [ADS].[KEY] AS [KEY], CASE WHEN ([ADS].[Feature_113] <= 0.34293925762176514) THEN 1 ELSE 2 END AS node_id_2 
FROM [BinaryClass_500] AS [ADS]), 
[DT_node_data_25] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Proba_0] AS [Proba_0], [Values].[LogProba_0] AS [LogProba_0], [Values].[Proba_1] AS [Proba_1], [Values].[LogProba_1] AS [LogProba_1], [Values].[Decision] AS [Decision], [Values].[DecisionProba] AS [DecisionProba] 
FROM (SELECT 1 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 52 AS count, 1 AS depth, 0 AS parent_id, 0.7411203866396036 AS [Proba_0], -0.299592201781 AS [LogProba_0], 0.25887961336039644 AS [Proba_1], -1.35139213862 AS [LogProba_1], 0 AS [Decision], 0.74112038664 AS [DecisionProba] UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 28 AS count, 1 AS depth, 0 AS parent_id, 0.07067160030947203 AS [Proba_0], -2.64971147972 AS [LogProba_0], 0.9293283996905279 AS [Proba_1], -0.0732931045818 AS [LogProba_1], 1 AS [Decision], 0.929328399691 AS [DecisionProba]) AS [Values]), 
[DT_Output_25] AS 
(SELECT [DT_node_lookup_25].[KEY] AS [KEY], [DT_node_lookup_25].node_id_2 AS node_id_2, [DT_node_data_25].node_id AS node_id, [DT_node_data_25].feature AS feature, [DT_node_data_25].threshold AS threshold, [DT_node_data_25].count AS count, [DT_node_data_25].depth AS depth, [DT_node_data_25].parent_id AS parent_id, [DT_node_data_25].[Proba_0] AS [Proba_0], [DT_node_data_25].[LogProba_0] AS [LogProba_0], [DT_node_data_25].[Proba_1] AS [Proba_1], [DT_node_data_25].[LogProba_1] AS [LogProba_1], [DT_node_data_25].[Decision] AS [Decision], [DT_node_data_25].[DecisionProba] AS [DecisionProba] 
FROM [DT_node_lookup_25] LEFT OUTER JOIN [DT_node_data_25] ON [DT_node_lookup_25].node_id_2 = [DT_node_data_25].node_id), 
[AdaBoost_Estim_25] AS 
(SELECT [DT_Output_25].[KEY] AS [KEY], (1.0 * (CASE WHEN ([DT_Output_25].[Proba_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_25].[Proba_0] IS NULL OR [DT_Output_25].[Proba_0] > 0.0) THEN log([DT_Output_25].[Proba_0]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([DT_Output_25].[Proba_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_25].[Proba_0] IS NULL OR [DT_Output_25].[Proba_0] > 0.0) THEN log([DT_Output_25].[Proba_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_25].[Proba_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_25].[Proba_1] IS NULL OR [DT_Output_25].[Proba_1] > 0.0) THEN log([DT_Output_25].[Proba_1]) ELSE -1.79769313486231e+308 END END) / 2)) / 32.0 AS [Score_0], 1.0 * (CASE WHEN ([DT_Output_25].[Proba_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_25].[Proba_0] IS NULL OR [DT_Output_25].[Proba_0] > 0.0) THEN log([DT_Output_25].[Proba_0]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([DT_Output_25].[Proba_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_25].[Proba_0] IS NULL OR [DT_Output_25].[Proba_0] > 0.0) THEN log([DT_Output_25].[Proba_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_25].[Proba_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_25].[Proba_1] IS NULL OR [DT_Output_25].[Proba_1] > 0.0) THEN log([DT_Output_25].[Proba_1]) ELSE -1.79769313486231e+308 END END) / 2) AS [Proba_0], (1.0 * (CASE WHEN ([DT_Output_25].[Proba_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_25].[Proba_1] IS NULL OR [DT_Output_25].[Proba_1] > 0.0) THEN log([DT_Output_25].[Proba_1]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([DT_Output_25].[Proba_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_25].[Proba_0] IS NULL OR [DT_Output_25].[Proba_0] > 0.0) THEN log([DT_Output_25].[Proba_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_25].[Proba_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_25].[Proba_1] IS NULL OR [DT_Output_25].[Proba_1] > 0.0) THEN log([DT_Output_25].[Proba_1]) ELSE -1.79769313486231e+308 END END) / 2)) / 32.0 AS [Score_1], 1.0 * (CASE WHEN ([DT_Output_25].[Proba_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_25].[Proba_1] IS NULL OR [DT_Output_25].[Proba_1] > 0.0) THEN log([DT_Output_25].[Proba_1]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([DT_Output_25].[Proba_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_25].[Proba_0] IS NULL OR [DT_Output_25].[Proba_0] > 0.0) THEN log([DT_Output_25].[Proba_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_25].[Proba_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_25].[Proba_1] IS NULL OR [DT_Output_25].[Proba_1] > 0.0) THEN log([DT_Output_25].[Proba_1]) ELSE -1.79769313486231e+308 END END) / 2) AS [Proba_1] 
FROM [DT_Output_25]), 
[DT_node_lookup_26] AS 
(SELECT [ADS].[KEY] AS [KEY], CASE WHEN ([ADS].[Feature_191] <= -0.007071951869875193) THEN 1 ELSE 2 END AS node_id_2 
FROM [BinaryClass_500] AS [ADS]), 
[DT_node_data_26] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Proba_0] AS [Proba_0], [Values].[LogProba_0] AS [LogProba_0], [Values].[Proba_1] AS [Proba_1], [Values].[LogProba_1] AS [LogProba_1], [Values].[Decision] AS [Decision], [Values].[DecisionProba] AS [DecisionProba] 
FROM (SELECT 1 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 36 AS count, 1 AS depth, 0 AS parent_id, 0.1227801401386378 AS [Proba_0], -2.0973600016 AS [LogProba_0], 0.8772198598613622 AS [Proba_1], -0.130997622634 AS [LogProba_1], 1 AS [Decision], 0.877219859861 AS [DecisionProba] UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 44 AS count, 1 AS depth, 0 AS parent_id, 0.8295863976492033 AS [Proba_0], -0.186828018478 AS [LogProba_0], 0.17041360235079664 AS [Proba_1], -1.76952684177 AS [LogProba_1], 0 AS [Decision], 0.829586397649 AS [DecisionProba]) AS [Values]), 
[DT_Output_26] AS 
(SELECT [DT_node_lookup_26].[KEY] AS [KEY], [DT_node_lookup_26].node_id_2 AS node_id_2, [DT_node_data_26].node_id AS node_id, [DT_node_data_26].feature AS feature, [DT_node_data_26].threshold AS threshold, [DT_node_data_26].count AS count, [DT_node_data_26].depth AS depth, [DT_node_data_26].parent_id AS parent_id, [DT_node_data_26].[Proba_0] AS [Proba_0], [DT_node_data_26].[LogProba_0] AS [LogProba_0], [DT_node_data_26].[Proba_1] AS [Proba_1], [DT_node_data_26].[LogProba_1] AS [LogProba_1], [DT_node_data_26].[Decision] AS [Decision], [DT_node_data_26].[DecisionProba] AS [DecisionProba] 
FROM [DT_node_lookup_26] LEFT OUTER JOIN [DT_node_data_26] ON [DT_node_lookup_26].node_id_2 = [DT_node_data_26].node_id), 
[AdaBoost_Estim_26] AS 
(SELECT [DT_Output_26].[KEY] AS [KEY], (1.0 * (CASE WHEN ([DT_Output_26].[Proba_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_26].[Proba_0] IS NULL OR [DT_Output_26].[Proba_0] > 0.0) THEN log([DT_Output_26].[Proba_0]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([DT_Output_26].[Proba_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_26].[Proba_0] IS NULL OR [DT_Output_26].[Proba_0] > 0.0) THEN log([DT_Output_26].[Proba_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_26].[Proba_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_26].[Proba_1] IS NULL OR [DT_Output_26].[Proba_1] > 0.0) THEN log([DT_Output_26].[Proba_1]) ELSE -1.79769313486231e+308 END END) / 2)) / 32.0 AS [Score_0], 1.0 * (CASE WHEN ([DT_Output_26].[Proba_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_26].[Proba_0] IS NULL OR [DT_Output_26].[Proba_0] > 0.0) THEN log([DT_Output_26].[Proba_0]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([DT_Output_26].[Proba_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_26].[Proba_0] IS NULL OR [DT_Output_26].[Proba_0] > 0.0) THEN log([DT_Output_26].[Proba_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_26].[Proba_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_26].[Proba_1] IS NULL OR [DT_Output_26].[Proba_1] > 0.0) THEN log([DT_Output_26].[Proba_1]) ELSE -1.79769313486231e+308 END END) / 2) AS [Proba_0], (1.0 * (CASE WHEN ([DT_Output_26].[Proba_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_26].[Proba_1] IS NULL OR [DT_Output_26].[Proba_1] > 0.0) THEN log([DT_Output_26].[Proba_1]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([DT_Output_26].[Proba_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_26].[Proba_0] IS NULL OR [DT_Output_26].[Proba_0] > 0.0) THEN log([DT_Output_26].[Proba_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_26].[Proba_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_26].[Proba_1] IS NULL OR [DT_Output_26].[Proba_1] > 0.0) THEN log([DT_Output_26].[Proba_1]) ELSE -1.79769313486231e+308 END END) / 2)) / 32.0 AS [Score_1], 1.0 * (CASE WHEN ([DT_Output_26].[Proba_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_26].[Proba_1] IS NULL OR [DT_Output_26].[Proba_1] > 0.0) THEN log([DT_Output_26].[Proba_1]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([DT_Output_26].[Proba_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_26].[Proba_0] IS NULL OR [DT_Output_26].[Proba_0] > 0.0) THEN log([DT_Output_26].[Proba_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_26].[Proba_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_26].[Proba_1] IS NULL OR [DT_Output_26].[Proba_1] > 0.0) THEN log([DT_Output_26].[Proba_1]) ELSE -1.79769313486231e+308 END END) / 2) AS [Proba_1] 
FROM [DT_Output_26]), 
[DT_node_lookup_27] AS 
(SELECT [ADS].[KEY] AS [KEY], CASE WHEN ([ADS].[Feature_122] <= -0.09140226244926453) THEN 1 ELSE 2 END AS node_id_2 
FROM [BinaryClass_500] AS [ADS]), 
[DT_node_data_27] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Proba_0] AS [Proba_0], [Values].[LogProba_0] AS [LogProba_0], [Values].[Proba_1] AS [Proba_1], [Values].[LogProba_1] AS [LogProba_1], [Values].[Decision] AS [Decision], [Values].[DecisionProba] AS [DecisionProba] 
FROM (SELECT 1 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 34 AS count, 1 AS depth, 0 AS parent_id, 0.9513016829156117 AS [Proba_0], -0.049924039702 AS [LogProba_0], 0.048698317084388376 AS [Proba_1], -3.02211080628 AS [LogProba_1], 0 AS [Decision], 0.951301682916 AS [DecisionProba] UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 46 AS count, 1 AS depth, 0 AS parent_id, 0.2095388177787255 AS [Proba_0], -1.56284626906 AS [LogProba_0], 0.7904611822212745 AS [Proba_1], -0.235138728888 AS [LogProba_1], 1 AS [Decision], 0.790461182221 AS [DecisionProba]) AS [Values]), 
[DT_Output_27] AS 
(SELECT [DT_node_lookup_27].[KEY] AS [KEY], [DT_node_lookup_27].node_id_2 AS node_id_2, [DT_node_data_27].node_id AS node_id, [DT_node_data_27].feature AS feature, [DT_node_data_27].threshold AS threshold, [DT_node_data_27].count AS count, [DT_node_data_27].depth AS depth, [DT_node_data_27].parent_id AS parent_id, [DT_node_data_27].[Proba_0] AS [Proba_0], [DT_node_data_27].[LogProba_0] AS [LogProba_0], [DT_node_data_27].[Proba_1] AS [Proba_1], [DT_node_data_27].[LogProba_1] AS [LogProba_1], [DT_node_data_27].[Decision] AS [Decision], [DT_node_data_27].[DecisionProba] AS [DecisionProba] 
FROM [DT_node_lookup_27] LEFT OUTER JOIN [DT_node_data_27] ON [DT_node_lookup_27].node_id_2 = [DT_node_data_27].node_id), 
[AdaBoost_Estim_27] AS 
(SELECT [DT_Output_27].[KEY] AS [KEY], (1.0 * (CASE WHEN ([DT_Output_27].[Proba_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_27].[Proba_0] IS NULL OR [DT_Output_27].[Proba_0] > 0.0) THEN log([DT_Output_27].[Proba_0]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([DT_Output_27].[Proba_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_27].[Proba_0] IS NULL OR [DT_Output_27].[Proba_0] > 0.0) THEN log([DT_Output_27].[Proba_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_27].[Proba_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_27].[Proba_1] IS NULL OR [DT_Output_27].[Proba_1] > 0.0) THEN log([DT_Output_27].[Proba_1]) ELSE -1.79769313486231e+308 END END) / 2)) / 32.0 AS [Score_0], 1.0 * (CASE WHEN ([DT_Output_27].[Proba_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_27].[Proba_0] IS NULL OR [DT_Output_27].[Proba_0] > 0.0) THEN log([DT_Output_27].[Proba_0]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([DT_Output_27].[Proba_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_27].[Proba_0] IS NULL OR [DT_Output_27].[Proba_0] > 0.0) THEN log([DT_Output_27].[Proba_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_27].[Proba_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_27].[Proba_1] IS NULL OR [DT_Output_27].[Proba_1] > 0.0) THEN log([DT_Output_27].[Proba_1]) ELSE -1.79769313486231e+308 END END) / 2) AS [Proba_0], (1.0 * (CASE WHEN ([DT_Output_27].[Proba_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_27].[Proba_1] IS NULL OR [DT_Output_27].[Proba_1] > 0.0) THEN log([DT_Output_27].[Proba_1]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([DT_Output_27].[Proba_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_27].[Proba_0] IS NULL OR [DT_Output_27].[Proba_0] > 0.0) THEN log([DT_Output_27].[Proba_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_27].[Proba_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_27].[Proba_1] IS NULL OR [DT_Output_27].[Proba_1] > 0.0) THEN log([DT_Output_27].[Proba_1]) ELSE -1.79769313486231e+308 END END) / 2)) / 32.0 AS [Score_1], 1.0 * (CASE WHEN ([DT_Output_27].[Proba_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_27].[Proba_1] IS NULL OR [DT_Output_27].[Proba_1] > 0.0) THEN log([DT_Output_27].[Proba_1]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([DT_Output_27].[Proba_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_27].[Proba_0] IS NULL OR [DT_Output_27].[Proba_0] > 0.0) THEN log([DT_Output_27].[Proba_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_27].[Proba_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_27].[Proba_1] IS NULL OR [DT_Output_27].[Proba_1] > 0.0) THEN log([DT_Output_27].[Proba_1]) ELSE -1.79769313486231e+308 END END) / 2) AS [Proba_1] 
FROM [DT_Output_27]), 
[DT_node_lookup_28] AS 
(SELECT [ADS].[KEY] AS [KEY], CASE WHEN ([ADS].[Feature_456] <= -0.3508431911468506) THEN 1 ELSE 2 END AS node_id_2 
FROM [BinaryClass_500] AS [ADS]), 
[DT_node_data_28] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Proba_0] AS [Proba_0], [Values].[LogProba_0] AS [LogProba_0], [Values].[Proba_1] AS [Proba_1], [Values].[LogProba_1] AS [LogProba_1], [Values].[Decision] AS [Decision], [Values].[DecisionProba] AS [DecisionProba] 
FROM (SELECT 1 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 26 AS count, 1 AS depth, 0 AS parent_id, 0.9519367678864022 AS [Proba_0], -0.0492566666841 AS [LogProba_0], 0.04806323211359785 AS [Proba_1], -3.0352377993 AS [LogProba_1], 0 AS [Decision], 0.951936767886 AS [DecisionProba] UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 54 AS count, 1 AS depth, 0 AS parent_id, 0.19187486003127024 AS [Proba_0], -1.65091189012 AS [LogProba_0], 0.8081251399687297 AS [Proba_1], -0.213038356254 AS [LogProba_1], 1 AS [Decision], 0.808125139969 AS [DecisionProba]) AS [Values]), 
[DT_Output_28] AS 
(SELECT [DT_node_lookup_28].[KEY] AS [KEY], [DT_node_lookup_28].node_id_2 AS node_id_2, [DT_node_data_28].node_id AS node_id, [DT_node_data_28].feature AS feature, [DT_node_data_28].threshold AS threshold, [DT_node_data_28].count AS count, [DT_node_data_28].depth AS depth, [DT_node_data_28].parent_id AS parent_id, [DT_node_data_28].[Proba_0] AS [Proba_0], [DT_node_data_28].[LogProba_0] AS [LogProba_0], [DT_node_data_28].[Proba_1] AS [Proba_1], [DT_node_data_28].[LogProba_1] AS [LogProba_1], [DT_node_data_28].[Decision] AS [Decision], [DT_node_data_28].[DecisionProba] AS [DecisionProba] 
FROM [DT_node_lookup_28] LEFT OUTER JOIN [DT_node_data_28] ON [DT_node_lookup_28].node_id_2 = [DT_node_data_28].node_id), 
[AdaBoost_Estim_28] AS 
(SELECT [DT_Output_28].[KEY] AS [KEY], (1.0 * (CASE WHEN ([DT_Output_28].[Proba_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_28].[Proba_0] IS NULL OR [DT_Output_28].[Proba_0] > 0.0) THEN log([DT_Output_28].[Proba_0]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([DT_Output_28].[Proba_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_28].[Proba_0] IS NULL OR [DT_Output_28].[Proba_0] > 0.0) THEN log([DT_Output_28].[Proba_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_28].[Proba_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_28].[Proba_1] IS NULL OR [DT_Output_28].[Proba_1] > 0.0) THEN log([DT_Output_28].[Proba_1]) ELSE -1.79769313486231e+308 END END) / 2)) / 32.0 AS [Score_0], 1.0 * (CASE WHEN ([DT_Output_28].[Proba_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_28].[Proba_0] IS NULL OR [DT_Output_28].[Proba_0] > 0.0) THEN log([DT_Output_28].[Proba_0]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([DT_Output_28].[Proba_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_28].[Proba_0] IS NULL OR [DT_Output_28].[Proba_0] > 0.0) THEN log([DT_Output_28].[Proba_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_28].[Proba_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_28].[Proba_1] IS NULL OR [DT_Output_28].[Proba_1] > 0.0) THEN log([DT_Output_28].[Proba_1]) ELSE -1.79769313486231e+308 END END) / 2) AS [Proba_0], (1.0 * (CASE WHEN ([DT_Output_28].[Proba_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_28].[Proba_1] IS NULL OR [DT_Output_28].[Proba_1] > 0.0) THEN log([DT_Output_28].[Proba_1]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([DT_Output_28].[Proba_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_28].[Proba_0] IS NULL OR [DT_Output_28].[Proba_0] > 0.0) THEN log([DT_Output_28].[Proba_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_28].[Proba_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_28].[Proba_1] IS NULL OR [DT_Output_28].[Proba_1] > 0.0) THEN log([DT_Output_28].[Proba_1]) ELSE -1.79769313486231e+308 END END) / 2)) / 32.0 AS [Score_1], 1.0 * (CASE WHEN ([DT_Output_28].[Proba_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_28].[Proba_1] IS NULL OR [DT_Output_28].[Proba_1] > 0.0) THEN log([DT_Output_28].[Proba_1]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([DT_Output_28].[Proba_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_28].[Proba_0] IS NULL OR [DT_Output_28].[Proba_0] > 0.0) THEN log([DT_Output_28].[Proba_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_28].[Proba_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_28].[Proba_1] IS NULL OR [DT_Output_28].[Proba_1] > 0.0) THEN log([DT_Output_28].[Proba_1]) ELSE -1.79769313486231e+308 END END) / 2) AS [Proba_1] 
FROM [DT_Output_28]), 
[DT_node_lookup_29] AS 
(SELECT [ADS].[KEY] AS [KEY], CASE WHEN ([ADS].[Feature_244] <= 0.03440605849027634) THEN 1 ELSE 2 END AS node_id_2 
FROM [BinaryClass_500] AS [ADS]), 
[DT_node_data_29] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Proba_0] AS [Proba_0], [Values].[LogProba_0] AS [LogProba_0], [Values].[Proba_1] AS [Proba_1], [Values].[LogProba_1] AS [LogProba_1], [Values].[Decision] AS [Decision], [Values].[DecisionProba] AS [DecisionProba] 
FROM (SELECT 1 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 48 AS count, 1 AS depth, 0 AS parent_id, 0.7762640202989876 AS [Proba_0], -0.253262584321 AS [LogProba_0], 0.22373597970101253 AS [Proba_1], -1.49728858434 AS [LogProba_1], 0 AS [Decision], 0.776264020299 AS [DecisionProba] UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 32 AS count, 1 AS depth, 0 AS parent_id, 0.015589704162410348 AS [Proba_0], -4.1611445722 AS [LogProba_0], 0.9844102958375897 AS [Proba_1], -0.015712501522 AS [LogProba_1], 1 AS [Decision], 0.984410295838 AS [DecisionProba]) AS [Values]), 
[DT_Output_29] AS 
(SELECT [DT_node_lookup_29].[KEY] AS [KEY], [DT_node_lookup_29].node_id_2 AS node_id_2, [DT_node_data_29].node_id AS node_id, [DT_node_data_29].feature AS feature, [DT_node_data_29].threshold AS threshold, [DT_node_data_29].count AS count, [DT_node_data_29].depth AS depth, [DT_node_data_29].parent_id AS parent_id, [DT_node_data_29].[Proba_0] AS [Proba_0], [DT_node_data_29].[LogProba_0] AS [LogProba_0], [DT_node_data_29].[Proba_1] AS [Proba_1], [DT_node_data_29].[LogProba_1] AS [LogProba_1], [DT_node_data_29].[Decision] AS [Decision], [DT_node_data_29].[DecisionProba] AS [DecisionProba] 
FROM [DT_node_lookup_29] LEFT OUTER JOIN [DT_node_data_29] ON [DT_node_lookup_29].node_id_2 = [DT_node_data_29].node_id), 
[AdaBoost_Estim_29] AS 
(SELECT [DT_Output_29].[KEY] AS [KEY], (1.0 * (CASE WHEN ([DT_Output_29].[Proba_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_29].[Proba_0] IS NULL OR [DT_Output_29].[Proba_0] > 0.0) THEN log([DT_Output_29].[Proba_0]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([DT_Output_29].[Proba_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_29].[Proba_0] IS NULL OR [DT_Output_29].[Proba_0] > 0.0) THEN log([DT_Output_29].[Proba_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_29].[Proba_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_29].[Proba_1] IS NULL OR [DT_Output_29].[Proba_1] > 0.0) THEN log([DT_Output_29].[Proba_1]) ELSE -1.79769313486231e+308 END END) / 2)) / 32.0 AS [Score_0], 1.0 * (CASE WHEN ([DT_Output_29].[Proba_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_29].[Proba_0] IS NULL OR [DT_Output_29].[Proba_0] > 0.0) THEN log([DT_Output_29].[Proba_0]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([DT_Output_29].[Proba_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_29].[Proba_0] IS NULL OR [DT_Output_29].[Proba_0] > 0.0) THEN log([DT_Output_29].[Proba_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_29].[Proba_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_29].[Proba_1] IS NULL OR [DT_Output_29].[Proba_1] > 0.0) THEN log([DT_Output_29].[Proba_1]) ELSE -1.79769313486231e+308 END END) / 2) AS [Proba_0], (1.0 * (CASE WHEN ([DT_Output_29].[Proba_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_29].[Proba_1] IS NULL OR [DT_Output_29].[Proba_1] > 0.0) THEN log([DT_Output_29].[Proba_1]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([DT_Output_29].[Proba_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_29].[Proba_0] IS NULL OR [DT_Output_29].[Proba_0] > 0.0) THEN log([DT_Output_29].[Proba_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_29].[Proba_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_29].[Proba_1] IS NULL OR [DT_Output_29].[Proba_1] > 0.0) THEN log([DT_Output_29].[Proba_1]) ELSE -1.79769313486231e+308 END END) / 2)) / 32.0 AS [Score_1], 1.0 * (CASE WHEN ([DT_Output_29].[Proba_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_29].[Proba_1] IS NULL OR [DT_Output_29].[Proba_1] > 0.0) THEN log([DT_Output_29].[Proba_1]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([DT_Output_29].[Proba_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_29].[Proba_0] IS NULL OR [DT_Output_29].[Proba_0] > 0.0) THEN log([DT_Output_29].[Proba_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_29].[Proba_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_29].[Proba_1] IS NULL OR [DT_Output_29].[Proba_1] > 0.0) THEN log([DT_Output_29].[Proba_1]) ELSE -1.79769313486231e+308 END END) / 2) AS [Proba_1] 
FROM [DT_Output_29]), 
[DT_node_lookup_30] AS 
(SELECT [ADS].[KEY] AS [KEY], CASE WHEN ([ADS].[Feature_144] <= 0.5076126456260681) THEN 1 ELSE 2 END AS node_id_2 
FROM [BinaryClass_500] AS [ADS]), 
[DT_node_data_30] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Proba_0] AS [Proba_0], [Values].[LogProba_0] AS [LogProba_0], [Values].[Proba_1] AS [Proba_1], [Values].[LogProba_1] AS [LogProba_1], [Values].[Decision] AS [Decision], [Values].[DecisionProba] AS [DecisionProba] 
FROM (SELECT 1 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 44 AS count, 1 AS depth, 0 AS parent_id, 0.1723375922885404 AS [Proba_0], -1.75829997997 AS [LogProba_0], 0.8276624077114596 AS [Proba_1], -0.189149927893 AS [LogProba_1], 1 AS [Decision], 0.827662407711 AS [DecisionProba] UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 36 AS count, 1 AS depth, 0 AS parent_id, 0.8675813425786855 AS [Proba_0], -0.142046004896 AS [LogProba_0], 0.13241865742131453 AS [Proba_1], -2.02178672833 AS [LogProba_1], 0 AS [Decision], 0.867581342579 AS [DecisionProba]) AS [Values]), 
[DT_Output_30] AS 
(SELECT [DT_node_lookup_30].[KEY] AS [KEY], [DT_node_lookup_30].node_id_2 AS node_id_2, [DT_node_data_30].node_id AS node_id, [DT_node_data_30].feature AS feature, [DT_node_data_30].threshold AS threshold, [DT_node_data_30].count AS count, [DT_node_data_30].depth AS depth, [DT_node_data_30].parent_id AS parent_id, [DT_node_data_30].[Proba_0] AS [Proba_0], [DT_node_data_30].[LogProba_0] AS [LogProba_0], [DT_node_data_30].[Proba_1] AS [Proba_1], [DT_node_data_30].[LogProba_1] AS [LogProba_1], [DT_node_data_30].[Decision] AS [Decision], [DT_node_data_30].[DecisionProba] AS [DecisionProba] 
FROM [DT_node_lookup_30] LEFT OUTER JOIN [DT_node_data_30] ON [DT_node_lookup_30].node_id_2 = [DT_node_data_30].node_id), 
[AdaBoost_Estim_30] AS 
(SELECT [DT_Output_30].[KEY] AS [KEY], (1.0 * (CASE WHEN ([DT_Output_30].[Proba_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_30].[Proba_0] IS NULL OR [DT_Output_30].[Proba_0] > 0.0) THEN log([DT_Output_30].[Proba_0]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([DT_Output_30].[Proba_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_30].[Proba_0] IS NULL OR [DT_Output_30].[Proba_0] > 0.0) THEN log([DT_Output_30].[Proba_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_30].[Proba_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_30].[Proba_1] IS NULL OR [DT_Output_30].[Proba_1] > 0.0) THEN log([DT_Output_30].[Proba_1]) ELSE -1.79769313486231e+308 END END) / 2)) / 32.0 AS [Score_0], 1.0 * (CASE WHEN ([DT_Output_30].[Proba_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_30].[Proba_0] IS NULL OR [DT_Output_30].[Proba_0] > 0.0) THEN log([DT_Output_30].[Proba_0]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([DT_Output_30].[Proba_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_30].[Proba_0] IS NULL OR [DT_Output_30].[Proba_0] > 0.0) THEN log([DT_Output_30].[Proba_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_30].[Proba_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_30].[Proba_1] IS NULL OR [DT_Output_30].[Proba_1] > 0.0) THEN log([DT_Output_30].[Proba_1]) ELSE -1.79769313486231e+308 END END) / 2) AS [Proba_0], (1.0 * (CASE WHEN ([DT_Output_30].[Proba_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_30].[Proba_1] IS NULL OR [DT_Output_30].[Proba_1] > 0.0) THEN log([DT_Output_30].[Proba_1]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([DT_Output_30].[Proba_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_30].[Proba_0] IS NULL OR [DT_Output_30].[Proba_0] > 0.0) THEN log([DT_Output_30].[Proba_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_30].[Proba_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_30].[Proba_1] IS NULL OR [DT_Output_30].[Proba_1] > 0.0) THEN log([DT_Output_30].[Proba_1]) ELSE -1.79769313486231e+308 END END) / 2)) / 32.0 AS [Score_1], 1.0 * (CASE WHEN ([DT_Output_30].[Proba_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_30].[Proba_1] IS NULL OR [DT_Output_30].[Proba_1] > 0.0) THEN log([DT_Output_30].[Proba_1]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([DT_Output_30].[Proba_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_30].[Proba_0] IS NULL OR [DT_Output_30].[Proba_0] > 0.0) THEN log([DT_Output_30].[Proba_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_30].[Proba_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_30].[Proba_1] IS NULL OR [DT_Output_30].[Proba_1] > 0.0) THEN log([DT_Output_30].[Proba_1]) ELSE -1.79769313486231e+308 END END) / 2) AS [Proba_1] 
FROM [DT_Output_30]), 
[DT_node_lookup_31] AS 
(SELECT [ADS].[KEY] AS [KEY], CASE WHEN ([ADS].[Feature_113] <= 0.34293925762176514) THEN 1 ELSE 2 END AS node_id_2 
FROM [BinaryClass_500] AS [ADS]), 
[DT_node_data_31] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Proba_0] AS [Proba_0], [Values].[LogProba_0] AS [LogProba_0], [Values].[Proba_1] AS [Proba_1], [Values].[LogProba_1] AS [LogProba_1], [Values].[Decision] AS [Decision], [Values].[DecisionProba] AS [DecisionProba] 
FROM (SELECT 1 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 52 AS count, 1 AS depth, 0 AS parent_id, 0.7971707264463264 AS [Proba_0], -0.226686411781 AS [LogProba_0], 0.20282927355367358 AS [Proba_1], -1.59539067077 AS [LogProba_1], 0 AS [Decision], 0.797170726446 AS [DecisionProba] UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 28 AS count, 1 AS depth, 0 AS parent_id, 0.10892792538611397 AS [Proba_0], -2.21706885046 AS [LogProba_0], 0.891072074613886 AS [Proba_1], -0.11532996296 AS [LogProba_1], 1 AS [Decision], 0.891072074614 AS [DecisionProba]) AS [Values]), 
[DT_Output_31] AS 
(SELECT [DT_node_lookup_31].[KEY] AS [KEY], [DT_node_lookup_31].node_id_2 AS node_id_2, [DT_node_data_31].node_id AS node_id, [DT_node_data_31].feature AS feature, [DT_node_data_31].threshold AS threshold, [DT_node_data_31].count AS count, [DT_node_data_31].depth AS depth, [DT_node_data_31].parent_id AS parent_id, [DT_node_data_31].[Proba_0] AS [Proba_0], [DT_node_data_31].[LogProba_0] AS [LogProba_0], [DT_node_data_31].[Proba_1] AS [Proba_1], [DT_node_data_31].[LogProba_1] AS [LogProba_1], [DT_node_data_31].[Decision] AS [Decision], [DT_node_data_31].[DecisionProba] AS [DecisionProba] 
FROM [DT_node_lookup_31] LEFT OUTER JOIN [DT_node_data_31] ON [DT_node_lookup_31].node_id_2 = [DT_node_data_31].node_id), 
[AdaBoost_Estim_31] AS 
(SELECT [DT_Output_31].[KEY] AS [KEY], (1.0 * (CASE WHEN ([DT_Output_31].[Proba_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_31].[Proba_0] IS NULL OR [DT_Output_31].[Proba_0] > 0.0) THEN log([DT_Output_31].[Proba_0]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([DT_Output_31].[Proba_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_31].[Proba_0] IS NULL OR [DT_Output_31].[Proba_0] > 0.0) THEN log([DT_Output_31].[Proba_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_31].[Proba_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_31].[Proba_1] IS NULL OR [DT_Output_31].[Proba_1] > 0.0) THEN log([DT_Output_31].[Proba_1]) ELSE -1.79769313486231e+308 END END) / 2)) / 32.0 AS [Score_0], 1.0 * (CASE WHEN ([DT_Output_31].[Proba_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_31].[Proba_0] IS NULL OR [DT_Output_31].[Proba_0] > 0.0) THEN log([DT_Output_31].[Proba_0]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([DT_Output_31].[Proba_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_31].[Proba_0] IS NULL OR [DT_Output_31].[Proba_0] > 0.0) THEN log([DT_Output_31].[Proba_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_31].[Proba_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_31].[Proba_1] IS NULL OR [DT_Output_31].[Proba_1] > 0.0) THEN log([DT_Output_31].[Proba_1]) ELSE -1.79769313486231e+308 END END) / 2) AS [Proba_0], (1.0 * (CASE WHEN ([DT_Output_31].[Proba_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_31].[Proba_1] IS NULL OR [DT_Output_31].[Proba_1] > 0.0) THEN log([DT_Output_31].[Proba_1]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([DT_Output_31].[Proba_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_31].[Proba_0] IS NULL OR [DT_Output_31].[Proba_0] > 0.0) THEN log([DT_Output_31].[Proba_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_31].[Proba_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_31].[Proba_1] IS NULL OR [DT_Output_31].[Proba_1] > 0.0) THEN log([DT_Output_31].[Proba_1]) ELSE -1.79769313486231e+308 END END) / 2)) / 32.0 AS [Score_1], 1.0 * (CASE WHEN ([DT_Output_31].[Proba_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_31].[Proba_1] IS NULL OR [DT_Output_31].[Proba_1] > 0.0) THEN log([DT_Output_31].[Proba_1]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([DT_Output_31].[Proba_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_31].[Proba_0] IS NULL OR [DT_Output_31].[Proba_0] > 0.0) THEN log([DT_Output_31].[Proba_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_31].[Proba_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_31].[Proba_1] IS NULL OR [DT_Output_31].[Proba_1] > 0.0) THEN log([DT_Output_31].[Proba_1]) ELSE -1.79769313486231e+308 END END) / 2) AS [Proba_1] 
FROM [DT_Output_31]), 
[Score_Union_CTE] AS 
(SELECT ensemble_score_union.[KEY] AS [KEY], ensemble_score_union.[Score_0] AS [Score_0], ensemble_score_union.[Proba_0] AS [Proba_0], ensemble_score_union.[Score_1] AS [Score_1], ensemble_score_union.[Proba_1] AS [Proba_1] 
FROM (SELECT [AdaBoost_Estim_0].[KEY] AS [KEY], [AdaBoost_Estim_0].[Score_0] AS [Score_0], [AdaBoost_Estim_0].[Proba_0] AS [Proba_0], [AdaBoost_Estim_0].[Score_1] AS [Score_1], [AdaBoost_Estim_0].[Proba_1] AS [Proba_1] 
FROM [AdaBoost_Estim_0] UNION ALL SELECT [AdaBoost_Estim_1].[KEY] AS [KEY], [AdaBoost_Estim_1].[Score_0] AS [Score_0], [AdaBoost_Estim_1].[Proba_0] AS [Proba_0], [AdaBoost_Estim_1].[Score_1] AS [Score_1], [AdaBoost_Estim_1].[Proba_1] AS [Proba_1] 
FROM [AdaBoost_Estim_1] UNION ALL SELECT [AdaBoost_Estim_2].[KEY] AS [KEY], [AdaBoost_Estim_2].[Score_0] AS [Score_0], [AdaBoost_Estim_2].[Proba_0] AS [Proba_0], [AdaBoost_Estim_2].[Score_1] AS [Score_1], [AdaBoost_Estim_2].[Proba_1] AS [Proba_1] 
FROM [AdaBoost_Estim_2] UNION ALL SELECT [AdaBoost_Estim_3].[KEY] AS [KEY], [AdaBoost_Estim_3].[Score_0] AS [Score_0], [AdaBoost_Estim_3].[Proba_0] AS [Proba_0], [AdaBoost_Estim_3].[Score_1] AS [Score_1], [AdaBoost_Estim_3].[Proba_1] AS [Proba_1] 
FROM [AdaBoost_Estim_3] UNION ALL SELECT [AdaBoost_Estim_4].[KEY] AS [KEY], [AdaBoost_Estim_4].[Score_0] AS [Score_0], [AdaBoost_Estim_4].[Proba_0] AS [Proba_0], [AdaBoost_Estim_4].[Score_1] AS [Score_1], [AdaBoost_Estim_4].[Proba_1] AS [Proba_1] 
FROM [AdaBoost_Estim_4] UNION ALL SELECT [AdaBoost_Estim_5].[KEY] AS [KEY], [AdaBoost_Estim_5].[Score_0] AS [Score_0], [AdaBoost_Estim_5].[Proba_0] AS [Proba_0], [AdaBoost_Estim_5].[Score_1] AS [Score_1], [AdaBoost_Estim_5].[Proba_1] AS [Proba_1] 
FROM [AdaBoost_Estim_5] UNION ALL SELECT [AdaBoost_Estim_6].[KEY] AS [KEY], [AdaBoost_Estim_6].[Score_0] AS [Score_0], [AdaBoost_Estim_6].[Proba_0] AS [Proba_0], [AdaBoost_Estim_6].[Score_1] AS [Score_1], [AdaBoost_Estim_6].[Proba_1] AS [Proba_1] 
FROM [AdaBoost_Estim_6] UNION ALL SELECT [AdaBoost_Estim_7].[KEY] AS [KEY], [AdaBoost_Estim_7].[Score_0] AS [Score_0], [AdaBoost_Estim_7].[Proba_0] AS [Proba_0], [AdaBoost_Estim_7].[Score_1] AS [Score_1], [AdaBoost_Estim_7].[Proba_1] AS [Proba_1] 
FROM [AdaBoost_Estim_7] UNION ALL SELECT [AdaBoost_Estim_8].[KEY] AS [KEY], [AdaBoost_Estim_8].[Score_0] AS [Score_0], [AdaBoost_Estim_8].[Proba_0] AS [Proba_0], [AdaBoost_Estim_8].[Score_1] AS [Score_1], [AdaBoost_Estim_8].[Proba_1] AS [Proba_1] 
FROM [AdaBoost_Estim_8] UNION ALL SELECT [AdaBoost_Estim_9].[KEY] AS [KEY], [AdaBoost_Estim_9].[Score_0] AS [Score_0], [AdaBoost_Estim_9].[Proba_0] AS [Proba_0], [AdaBoost_Estim_9].[Score_1] AS [Score_1], [AdaBoost_Estim_9].[Proba_1] AS [Proba_1] 
FROM [AdaBoost_Estim_9] UNION ALL SELECT [AdaBoost_Estim_10].[KEY] AS [KEY], [AdaBoost_Estim_10].[Score_0] AS [Score_0], [AdaBoost_Estim_10].[Proba_0] AS [Proba_0], [AdaBoost_Estim_10].[Score_1] AS [Score_1], [AdaBoost_Estim_10].[Proba_1] AS [Proba_1] 
FROM [AdaBoost_Estim_10] UNION ALL SELECT [AdaBoost_Estim_11].[KEY] AS [KEY], [AdaBoost_Estim_11].[Score_0] AS [Score_0], [AdaBoost_Estim_11].[Proba_0] AS [Proba_0], [AdaBoost_Estim_11].[Score_1] AS [Score_1], [AdaBoost_Estim_11].[Proba_1] AS [Proba_1] 
FROM [AdaBoost_Estim_11] UNION ALL SELECT [AdaBoost_Estim_12].[KEY] AS [KEY], [AdaBoost_Estim_12].[Score_0] AS [Score_0], [AdaBoost_Estim_12].[Proba_0] AS [Proba_0], [AdaBoost_Estim_12].[Score_1] AS [Score_1], [AdaBoost_Estim_12].[Proba_1] AS [Proba_1] 
FROM [AdaBoost_Estim_12] UNION ALL SELECT [AdaBoost_Estim_13].[KEY] AS [KEY], [AdaBoost_Estim_13].[Score_0] AS [Score_0], [AdaBoost_Estim_13].[Proba_0] AS [Proba_0], [AdaBoost_Estim_13].[Score_1] AS [Score_1], [AdaBoost_Estim_13].[Proba_1] AS [Proba_1] 
FROM [AdaBoost_Estim_13] UNION ALL SELECT [AdaBoost_Estim_14].[KEY] AS [KEY], [AdaBoost_Estim_14].[Score_0] AS [Score_0], [AdaBoost_Estim_14].[Proba_0] AS [Proba_0], [AdaBoost_Estim_14].[Score_1] AS [Score_1], [AdaBoost_Estim_14].[Proba_1] AS [Proba_1] 
FROM [AdaBoost_Estim_14] UNION ALL SELECT [AdaBoost_Estim_15].[KEY] AS [KEY], [AdaBoost_Estim_15].[Score_0] AS [Score_0], [AdaBoost_Estim_15].[Proba_0] AS [Proba_0], [AdaBoost_Estim_15].[Score_1] AS [Score_1], [AdaBoost_Estim_15].[Proba_1] AS [Proba_1] 
FROM [AdaBoost_Estim_15] UNION ALL SELECT [AdaBoost_Estim_16].[KEY] AS [KEY], [AdaBoost_Estim_16].[Score_0] AS [Score_0], [AdaBoost_Estim_16].[Proba_0] AS [Proba_0], [AdaBoost_Estim_16].[Score_1] AS [Score_1], [AdaBoost_Estim_16].[Proba_1] AS [Proba_1] 
FROM [AdaBoost_Estim_16] UNION ALL SELECT [AdaBoost_Estim_17].[KEY] AS [KEY], [AdaBoost_Estim_17].[Score_0] AS [Score_0], [AdaBoost_Estim_17].[Proba_0] AS [Proba_0], [AdaBoost_Estim_17].[Score_1] AS [Score_1], [AdaBoost_Estim_17].[Proba_1] AS [Proba_1] 
FROM [AdaBoost_Estim_17] UNION ALL SELECT [AdaBoost_Estim_18].[KEY] AS [KEY], [AdaBoost_Estim_18].[Score_0] AS [Score_0], [AdaBoost_Estim_18].[Proba_0] AS [Proba_0], [AdaBoost_Estim_18].[Score_1] AS [Score_1], [AdaBoost_Estim_18].[Proba_1] AS [Proba_1] 
FROM [AdaBoost_Estim_18] UNION ALL SELECT [AdaBoost_Estim_19].[KEY] AS [KEY], [AdaBoost_Estim_19].[Score_0] AS [Score_0], [AdaBoost_Estim_19].[Proba_0] AS [Proba_0], [AdaBoost_Estim_19].[Score_1] AS [Score_1], [AdaBoost_Estim_19].[Proba_1] AS [Proba_1] 
FROM [AdaBoost_Estim_19] UNION ALL SELECT [AdaBoost_Estim_20].[KEY] AS [KEY], [AdaBoost_Estim_20].[Score_0] AS [Score_0], [AdaBoost_Estim_20].[Proba_0] AS [Proba_0], [AdaBoost_Estim_20].[Score_1] AS [Score_1], [AdaBoost_Estim_20].[Proba_1] AS [Proba_1] 
FROM [AdaBoost_Estim_20] UNION ALL SELECT [AdaBoost_Estim_21].[KEY] AS [KEY], [AdaBoost_Estim_21].[Score_0] AS [Score_0], [AdaBoost_Estim_21].[Proba_0] AS [Proba_0], [AdaBoost_Estim_21].[Score_1] AS [Score_1], [AdaBoost_Estim_21].[Proba_1] AS [Proba_1] 
FROM [AdaBoost_Estim_21] UNION ALL SELECT [AdaBoost_Estim_22].[KEY] AS [KEY], [AdaBoost_Estim_22].[Score_0] AS [Score_0], [AdaBoost_Estim_22].[Proba_0] AS [Proba_0], [AdaBoost_Estim_22].[Score_1] AS [Score_1], [AdaBoost_Estim_22].[Proba_1] AS [Proba_1] 
FROM [AdaBoost_Estim_22] UNION ALL SELECT [AdaBoost_Estim_23].[KEY] AS [KEY], [AdaBoost_Estim_23].[Score_0] AS [Score_0], [AdaBoost_Estim_23].[Proba_0] AS [Proba_0], [AdaBoost_Estim_23].[Score_1] AS [Score_1], [AdaBoost_Estim_23].[Proba_1] AS [Proba_1] 
FROM [AdaBoost_Estim_23] UNION ALL SELECT [AdaBoost_Estim_24].[KEY] AS [KEY], [AdaBoost_Estim_24].[Score_0] AS [Score_0], [AdaBoost_Estim_24].[Proba_0] AS [Proba_0], [AdaBoost_Estim_24].[Score_1] AS [Score_1], [AdaBoost_Estim_24].[Proba_1] AS [Proba_1] 
FROM [AdaBoost_Estim_24] UNION ALL SELECT [AdaBoost_Estim_25].[KEY] AS [KEY], [AdaBoost_Estim_25].[Score_0] AS [Score_0], [AdaBoost_Estim_25].[Proba_0] AS [Proba_0], [AdaBoost_Estim_25].[Score_1] AS [Score_1], [AdaBoost_Estim_25].[Proba_1] AS [Proba_1] 
FROM [AdaBoost_Estim_25] UNION ALL SELECT [AdaBoost_Estim_26].[KEY] AS [KEY], [AdaBoost_Estim_26].[Score_0] AS [Score_0], [AdaBoost_Estim_26].[Proba_0] AS [Proba_0], [AdaBoost_Estim_26].[Score_1] AS [Score_1], [AdaBoost_Estim_26].[Proba_1] AS [Proba_1] 
FROM [AdaBoost_Estim_26] UNION ALL SELECT [AdaBoost_Estim_27].[KEY] AS [KEY], [AdaBoost_Estim_27].[Score_0] AS [Score_0], [AdaBoost_Estim_27].[Proba_0] AS [Proba_0], [AdaBoost_Estim_27].[Score_1] AS [Score_1], [AdaBoost_Estim_27].[Proba_1] AS [Proba_1] 
FROM [AdaBoost_Estim_27] UNION ALL SELECT [AdaBoost_Estim_28].[KEY] AS [KEY], [AdaBoost_Estim_28].[Score_0] AS [Score_0], [AdaBoost_Estim_28].[Proba_0] AS [Proba_0], [AdaBoost_Estim_28].[Score_1] AS [Score_1], [AdaBoost_Estim_28].[Proba_1] AS [Proba_1] 
FROM [AdaBoost_Estim_28] UNION ALL SELECT [AdaBoost_Estim_29].[KEY] AS [KEY], [AdaBoost_Estim_29].[Score_0] AS [Score_0], [AdaBoost_Estim_29].[Proba_0] AS [Proba_0], [AdaBoost_Estim_29].[Score_1] AS [Score_1], [AdaBoost_Estim_29].[Proba_1] AS [Proba_1] 
FROM [AdaBoost_Estim_29] UNION ALL SELECT [AdaBoost_Estim_30].[KEY] AS [KEY], [AdaBoost_Estim_30].[Score_0] AS [Score_0], [AdaBoost_Estim_30].[Proba_0] AS [Proba_0], [AdaBoost_Estim_30].[Score_1] AS [Score_1], [AdaBoost_Estim_30].[Proba_1] AS [Proba_1] 
FROM [AdaBoost_Estim_30] UNION ALL SELECT [AdaBoost_Estim_31].[KEY] AS [KEY], [AdaBoost_Estim_31].[Score_0] AS [Score_0], [AdaBoost_Estim_31].[Proba_0] AS [Proba_0], [AdaBoost_Estim_31].[Score_1] AS [Score_1], [AdaBoost_Estim_31].[Proba_1] AS [Proba_1] 
FROM [AdaBoost_Estim_31]) AS ensemble_score_union), 
[ADA_Sum_Scores] AS 
(SELECT [T].[KEY] AS [KEY], [T].[Score_0] AS [Score_0], [T].[Proba_0] AS [Proba_0], [T].[Score_1] AS [Score_1], [T].[Proba_1] AS [Proba_1] 
FROM (SELECT [Score_Union_CTE].[KEY] AS [KEY], sum([Score_Union_CTE].[Score_0]) AS [Score_0], sum([Score_Union_CTE].[Proba_0]) AS [Proba_0], sum([Score_Union_CTE].[Score_1]) AS [Score_1], sum([Score_Union_CTE].[Proba_1]) AS [Proba_1] 
FROM [Score_Union_CTE] GROUP BY [Score_Union_CTE].[KEY]) AS [T]), 
[AdaBoost_AVG_Scores_BN] AS 
(SELECT [ADA_Sum_Scores].[KEY] AS [KEY], [ADA_Sum_Scores].[Score_0] AS [Score_0], [ADA_Sum_Scores].[Proba_0] AS [Proba_0], [ADA_Sum_Scores].[Score_1] AS [Score_1], [ADA_Sum_Scores].[Proba_1] AS [Proba_1] 
FROM [ADA_Sum_Scores]), 
[AdaBoost_AVG_Scores] AS 
(SELECT [AdaBoost_AVG_Scores_BN].[KEY] AS [KEY], -([AdaBoost_AVG_Scores_BN].[Score_1] - [AdaBoost_AVG_Scores_BN].[Score_0]) AS [Score_0], exp(([AdaBoost_AVG_Scores_BN].[Proba_0] / 32.0) / 1) / (exp(([AdaBoost_AVG_Scores_BN].[Proba_0] / 32.0) / 1) + exp(([AdaBoost_AVG_Scores_BN].[Proba_1] / 32.0) / 1)) AS [Proba_0], CAST(NULL AS FLOAT) AS [LogProba_0], [AdaBoost_AVG_Scores_BN].[Score_1] - [AdaBoost_AVG_Scores_BN].[Score_0] AS [Score_1], exp(([AdaBoost_AVG_Scores_BN].[Proba_1] / 32.0) / 1) / (exp(([AdaBoost_AVG_Scores_BN].[Proba_0] / 32.0) / 1) + exp(([AdaBoost_AVG_Scores_BN].[Proba_1] / 32.0) / 1)) AS [Proba_1], CAST(NULL AS FLOAT) AS [LogProba_1] 
FROM [AdaBoost_AVG_Scores_BN]), 
orig_cte AS 
(SELECT [AdaBoost_AVG_Scores].[KEY] AS [KEY], [AdaBoost_AVG_Scores].[Score_0] AS [Score_0], [AdaBoost_AVG_Scores].[Score_1] AS [Score_1], [AdaBoost_AVG_Scores].[Proba_0] AS [Proba_0], [AdaBoost_AVG_Scores].[Proba_1] AS [Proba_1], [AdaBoost_AVG_Scores].[LogProba_0] AS [LogProba_0], [AdaBoost_AVG_Scores].[LogProba_1] AS [LogProba_1], CAST(NULL AS INTEGER) AS [Decision], CAST(NULL AS FLOAT) AS [DecisionProba] 
FROM [AdaBoost_AVG_Scores]), 
score_class_union AS 
(SELECT scu.[KEY_u] AS [KEY_u], scu.class AS class, scu.[LogProba] AS [LogProba], scu.[Proba] AS [Proba], scu.[Score] AS [Score] 
FROM (SELECT orig_cte.[KEY] AS [KEY_u], 0 AS class, orig_cte.[LogProba_0] AS [LogProba], orig_cte.[Proba_0] AS [Proba], orig_cte.[Score_0] AS [Score] 
FROM orig_cte UNION ALL SELECT orig_cte.[KEY] AS [KEY_u], 1 AS class, orig_cte.[LogProba_1] AS [LogProba], orig_cte.[Proba_1] AS [Proba], orig_cte.[Score_1] AS [Score] 
FROM orig_cte) AS scu), 
score_max AS 
(SELECT orig_cte.[KEY] AS [KEY], orig_cte.[Score_0] AS [Score_0], orig_cte.[Score_1] AS [Score_1], orig_cte.[Proba_0] AS [Proba_0], orig_cte.[Proba_1] AS [Proba_1], orig_cte.[LogProba_0] AS [LogProba_0], orig_cte.[LogProba_1] AS [LogProba_1], orig_cte.[Decision] AS [Decision], orig_cte.[DecisionProba] AS [DecisionProba], max_select.[KEY_m] AS [KEY_m], max_select.[max_Score] AS [max_Score] 
FROM orig_cte LEFT OUTER JOIN (SELECT score_class_union.[KEY_u] AS [KEY_m], max(score_class_union.[Score]) AS [max_Score] 
FROM score_class_union GROUP BY score_class_union.[KEY_u]) AS max_select ON orig_cte.[KEY] = max_select.[KEY_m]), 
union_with_max AS 
(SELECT score_class_union.[KEY_u] AS [KEY_u], score_class_union.class AS class, score_class_union.[LogProba] AS [LogProba], score_class_union.[Proba] AS [Proba], score_class_union.[Score] AS [Score], score_max.[KEY] AS [KEY], score_max.[Score_0] AS [Score_0], score_max.[Score_1] AS [Score_1], score_max.[Proba_0] AS [Proba_0], score_max.[Proba_1] AS [Proba_1], score_max.[LogProba_0] AS [LogProba_0], score_max.[LogProba_1] AS [LogProba_1], score_max.[Decision] AS [Decision], score_max.[DecisionProba] AS [DecisionProba], score_max.[KEY_m] AS [KEY_m], score_max.[max_Score] AS [max_Score] 
FROM score_class_union LEFT OUTER JOIN score_max ON score_class_union.[KEY_u] = score_max.[KEY]), 
arg_max_cte AS 
(SELECT score_max.[KEY] AS [KEY], score_max.[Score_0] AS [Score_0], score_max.[Score_1] AS [Score_1], score_max.[Proba_0] AS [Proba_0], score_max.[Proba_1] AS [Proba_1], score_max.[LogProba_0] AS [LogProba_0], score_max.[LogProba_1] AS [LogProba_1], score_max.[Decision] AS [Decision], score_max.[DecisionProba] AS [DecisionProba], score_max.[KEY_m] AS [KEY_m], score_max.[max_Score] AS [max_Score], [arg_max_t_Score].[KEY_Score] AS [KEY_Score], [arg_max_t_Score].[arg_max_Score] AS [arg_max_Score] 
FROM score_max LEFT OUTER JOIN (SELECT union_with_max.[KEY] AS [KEY_Score], min(union_with_max.class) AS [arg_max_Score] 
FROM union_with_max 
WHERE union_with_max.[max_Score] <= union_with_max.[Score] GROUP BY union_with_max.[KEY]) AS [arg_max_t_Score] ON score_max.[KEY] = [arg_max_t_Score].[KEY_Score])
 SELECT arg_max_cte.[KEY] AS [KEY], arg_max_cte.[Score_0] AS [Score_0], arg_max_cte.[Score_1] AS [Score_1], arg_max_cte.[Proba_0] AS [Proba_0], arg_max_cte.[Proba_1] AS [Proba_1], CASE WHEN (arg_max_cte.[Proba_0] IS NULL OR arg_max_cte.[Proba_0] > 0.0) THEN log(arg_max_cte.[Proba_0]) ELSE -1.79769313486231e+308 END AS [LogProba_0], CASE WHEN (arg_max_cte.[Proba_1] IS NULL OR arg_max_cte.[Proba_1] > 0.0) THEN log(arg_max_cte.[Proba_1]) ELSE -1.79769313486231e+308 END AS [LogProba_1], arg_max_cte.[arg_max_Score] AS [Decision], CASE WHEN (arg_max_cte.[arg_max_Score] = 0) THEN arg_max_cte.[Proba_0] WHEN (arg_max_cte.[arg_max_Score] = 1) THEN arg_max_cte.[Proba_1] END AS [DecisionProba] 
FROM arg_max_cte