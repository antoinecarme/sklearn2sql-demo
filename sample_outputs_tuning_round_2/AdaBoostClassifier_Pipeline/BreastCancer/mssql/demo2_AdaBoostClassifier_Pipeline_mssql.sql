-- This SQL code was generated by sklearn2sql (development version).
-- Copyright 2017

WITH [ADS_imp_1_OUT] AS 
(SELECT [ADS].[KEY] AS [KEY], CASE WHEN ([ADS].[Feature_0] IS NULL) THEN 14.0777120879 ELSE [ADS].[Feature_0] END AS impter_2, CASE WHEN ([ADS].[Feature_1] IS NULL) THEN 19.0390549451 ELSE [ADS].[Feature_1] END AS impter_3, CASE WHEN ([ADS].[Feature_2] IS NULL) THEN 91.6617802198 ELSE [ADS].[Feature_2] END AS impter_4, CASE WHEN ([ADS].[Feature_3] IS NULL) THEN 650.967692308 ELSE [ADS].[Feature_3] END AS impter_5, CASE WHEN ([ADS].[Feature_4] IS NULL) THEN 0.0964218461538 ELSE [ADS].[Feature_4] END AS impter_6, CASE WHEN ([ADS].[Feature_5] IS NULL) THEN 0.104416131868 ELSE [ADS].[Feature_5] END AS impter_7, CASE WHEN ([ADS].[Feature_6] IS NULL) THEN 0.0882623268132 ELSE [ADS].[Feature_6] END AS impter_8, CASE WHEN ([ADS].[Feature_7] IS NULL) THEN 0.0485164 ELSE [ADS].[Feature_7] END AS impter_9, CASE WHEN ([ADS].[Feature_8] IS NULL) THEN 0.181588571429 ELSE [ADS].[Feature_8] END AS impter_10, CASE WHEN ([ADS].[Feature_9] IS NULL) THEN 0.0629403076923 ELSE [ADS].[Feature_9] END AS impter_11, CASE WHEN ([ADS].[Feature_10] IS NULL) THEN 0.409917362637 ELSE [ADS].[Feature_10] END AS impter_12, CASE WHEN ([ADS].[Feature_11] IS NULL) THEN 1.21706945055 ELSE [ADS].[Feature_11] END AS impter_13, CASE WHEN ([ADS].[Feature_12] IS NULL) THEN 2.90524901099 ELSE [ADS].[Feature_12] END AS impter_14, CASE WHEN ([ADS].[Feature_13] IS NULL) THEN 40.8798857143 ELSE [ADS].[Feature_13] END AS impter_15, CASE WHEN ([ADS].[Feature_14] IS NULL) THEN 0.00705597142857 ELSE [ADS].[Feature_14] END AS impter_16, CASE WHEN ([ADS].[Feature_15] IS NULL) THEN 0.0255678307692 ELSE [ADS].[Feature_15] END AS impter_17, CASE WHEN ([ADS].[Feature_16] IS NULL) THEN 0.0319992562637 ELSE [ADS].[Feature_16] END AS impter_18, CASE WHEN ([ADS].[Feature_17] IS NULL) THEN 0.0119723692308 ELSE [ADS].[Feature_17] END AS impter_19, CASE WHEN ([ADS].[Feature_18] IS NULL) THEN 0.0208962 ELSE [ADS].[Feature_18] END AS impter_20, CASE WHEN ([ADS].[Feature_19] IS NULL) THEN 0.00384655186813 ELSE [ADS].[Feature_19] END AS impter_21, CASE WHEN ([ADS].[Feature_20] IS NULL) THEN 16.1777648352 ELSE [ADS].[Feature_20] END AS impter_22, CASE WHEN ([ADS].[Feature_21] IS NULL) THEN 25.2650549451 ELSE [ADS].[Feature_21] END AS impter_23, CASE WHEN ([ADS].[Feature_22] IS NULL) THEN 106.68156044 ELSE [ADS].[Feature_22] END AS impter_24, CASE WHEN ([ADS].[Feature_23] IS NULL) THEN 870.863956044 ELSE [ADS].[Feature_23] END AS impter_25, CASE WHEN ([ADS].[Feature_24] IS NULL) THEN 0.13182756044 ELSE [ADS].[Feature_24] END AS impter_26, CASE WHEN ([ADS].[Feature_25] IS NULL) THEN 0.249918065934 ELSE [ADS].[Feature_25] END AS impter_27, CASE WHEN ([ADS].[Feature_26] IS NULL) THEN 0.265461593407 ELSE [ADS].[Feature_26] END AS impter_28, CASE WHEN ([ADS].[Feature_27] IS NULL) THEN 0.11348798022 ELSE [ADS].[Feature_27] END AS impter_29, CASE WHEN ([ADS].[Feature_28] IS NULL) THEN 0.289788131868 ELSE [ADS].[Feature_28] END AS impter_30, CASE WHEN ([ADS].[Feature_29] IS NULL) THEN 0.0836414505495 ELSE [ADS].[Feature_29] END AS impter_31 
FROM [BreastCancer] AS [ADS]), 
[ADS_sca_2_OUT] AS 
(SELECT [ADS_imp_1_OUT].[KEY] AS [KEY], (CAST([ADS_imp_1_OUT].impter_2 AS FLOAT) - 14.0777120879) / 3.5451492987 AS scaler_2, (CAST([ADS_imp_1_OUT].impter_3 AS FLOAT) - 19.0390549451) / 4.16229715042 AS scaler_3, (CAST([ADS_imp_1_OUT].impter_4 AS FLOAT) - 91.6617802198) / 24.5039719435 AS scaler_4, (CAST([ADS_imp_1_OUT].impter_5 AS FLOAT) - 650.967692308) / 355.702823164 AS scaler_5, (CAST([ADS_imp_1_OUT].impter_6 AS FLOAT) - 0.0964218461538) / 0.0141978196631 AS scaler_6, (CAST([ADS_imp_1_OUT].impter_7 AS FLOAT) - 0.104416131868) / 0.0534036946697 AS scaler_7, (CAST([ADS_imp_1_OUT].impter_8 AS FLOAT) - 0.0882623268132) / 0.0819120016263 AS scaler_8, (CAST([ADS_imp_1_OUT].impter_9 AS FLOAT) - 0.0485164) / 0.0393731173967 AS scaler_9, (CAST([ADS_imp_1_OUT].impter_10 AS FLOAT) - 0.181588571429) / 0.0277900583287 AS scaler_10, (CAST([ADS_imp_1_OUT].impter_11 AS FLOAT) - 0.0629403076923) / 0.00701935458617 AS scaler_11, (CAST([ADS_imp_1_OUT].impter_12 AS FLOAT) - 0.409917362637) / 0.291204008368 AS scaler_12, (CAST([ADS_imp_1_OUT].impter_13 AS FLOAT) - 1.21706945055) / 0.536389639634 AS scaler_13, (CAST([ADS_imp_1_OUT].impter_14 AS FLOAT) - 2.90524901099) / 2.14249442998 AS scaler_14, (CAST([ADS_imp_1_OUT].impter_15 AS FLOAT) - 40.8798857143) / 48.2247544796 AS scaler_15, (CAST([ADS_imp_1_OUT].impter_16 AS FLOAT) - 0.00705597142857) / 0.00286365165657 AS scaler_16, (CAST([ADS_imp_1_OUT].impter_17 AS FLOAT) - 0.0255678307692) / 0.017947013631 AS scaler_17, (CAST([ADS_imp_1_OUT].impter_18 AS FLOAT) - 0.0319992562637) / 0.0316649367214 AS scaler_18, (CAST([ADS_imp_1_OUT].impter_19 AS FLOAT) - 0.0119723692308) / 0.0063920055894 AS scaler_19, (CAST([ADS_imp_1_OUT].impter_20 AS FLOAT) - 0.0208962) / 0.00858291007987 AS scaler_20, (CAST([ADS_imp_1_OUT].impter_21 AS FLOAT) - 0.00384655186813) / 0.00274360758662 AS scaler_21, (CAST([ADS_imp_1_OUT].impter_22 AS FLOAT) - 16.1777648352) / 4.8174588162 AS scaler_22, (CAST([ADS_imp_1_OUT].impter_23 AS FLOAT) - 25.2650549451) / 5.92332412867 AS scaler_23, (CAST([ADS_imp_1_OUT].impter_24 AS FLOAT) - 106.68156044) / 33.7038583761 AS scaler_24, (CAST([ADS_imp_1_OUT].impter_25 AS FLOAT) - 870.863956044) / 566.995055987 AS scaler_25, (CAST([ADS_imp_1_OUT].impter_26 AS FLOAT) - 0.13182756044) / 0.0227482075223 AS scaler_26, (CAST([ADS_imp_1_OUT].impter_27 AS FLOAT) - 0.249918065934) / 0.152468936443 AS scaler_27, (CAST([ADS_imp_1_OUT].impter_28 AS FLOAT) - 0.265461593407) / 0.206925686782 AS scaler_28, (CAST([ADS_imp_1_OUT].impter_29 AS FLOAT) - 0.11348798022) / 0.0663814127852 AS scaler_29, (CAST([ADS_imp_1_OUT].impter_30 AS FLOAT) - 0.289788131868) / 0.0622047066505 AS scaler_30, (CAST([ADS_imp_1_OUT].impter_31 AS FLOAT) - 0.0836414505495) / 0.0170651458069 AS scaler_31 
FROM [ADS_imp_1_OUT]), 
[DT_node_lookup] AS 
(SELECT [ADS_sca_2_OUT].[KEY] AS [KEY], CASE WHEN ([ADS_sca_2_OUT].scaler_29 <= 0.48149049282073975) THEN 1 ELSE 2 END AS node_id_2 
FROM [ADS_sca_2_OUT]), 
[DT_node_data] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Proba_0] AS [Proba_0], [Values].[LogProba_0] AS [LogProba_0], [Values].[Proba_1] AS [Proba_1], [Values].[LogProba_1] AS [LogProba_1], [Values].[Decision] AS [Decision], [Values].[DecisionProba] AS [DecisionProba] 
FROM (SELECT 1 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 309 AS count, 1 AS depth, 0 AS parent_id, 0.06472491909385128 AS [Proba_0], -2.73760900334 AS [LogProba_0], 0.9352750809061487 AS [Proba_1], -0.0669145887853 AS [LogProba_1], 1 AS [Decision], 0.935275080906 AS [DecisionProba] UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 146 AS count, 1 AS depth, 0 AS parent_id, 0.958904109589041 AS [Proba_0], -0.041964199099 AS [LogProba_0], 0.04109589041095896 AS [Proba_1], -3.19184715248 AS [LogProba_1], 0 AS [Decision], 0.958904109589 AS [DecisionProba]) AS [Values]), 
[DT_Output] AS 
(SELECT [DT_node_lookup].[KEY] AS [KEY], [DT_node_lookup].node_id_2 AS node_id_2, [DT_node_data].node_id AS node_id, [DT_node_data].feature AS feature, [DT_node_data].threshold AS threshold, [DT_node_data].count AS count, [DT_node_data].depth AS depth, [DT_node_data].parent_id AS parent_id, [DT_node_data].[Proba_0] AS [Proba_0], [DT_node_data].[LogProba_0] AS [LogProba_0], [DT_node_data].[Proba_1] AS [Proba_1], [DT_node_data].[LogProba_1] AS [LogProba_1], [DT_node_data].[Decision] AS [Decision], [DT_node_data].[DecisionProba] AS [DecisionProba] 
FROM [DT_node_lookup] LEFT OUTER JOIN [DT_node_data] ON [DT_node_lookup].node_id_2 = [DT_node_data].node_id), 
[AdaBoost_Estim_0] AS 
(SELECT [DT_Output].[KEY] AS [KEY], (1.0 * (CASE WHEN ([DT_Output].[Proba_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output].[Proba_0] IS NULL OR [DT_Output].[Proba_0] > 0.0) THEN log([DT_Output].[Proba_0]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([DT_Output].[Proba_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output].[Proba_0] IS NULL OR [DT_Output].[Proba_0] > 0.0) THEN log([DT_Output].[Proba_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output].[Proba_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output].[Proba_1] IS NULL OR [DT_Output].[Proba_1] > 0.0) THEN log([DT_Output].[Proba_1]) ELSE -1.79769313486231e+308 END END) / 2)) / 32.0 AS [Score_0], 1.0 * (CASE WHEN ([DT_Output].[Proba_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output].[Proba_0] IS NULL OR [DT_Output].[Proba_0] > 0.0) THEN log([DT_Output].[Proba_0]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([DT_Output].[Proba_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output].[Proba_0] IS NULL OR [DT_Output].[Proba_0] > 0.0) THEN log([DT_Output].[Proba_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output].[Proba_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output].[Proba_1] IS NULL OR [DT_Output].[Proba_1] > 0.0) THEN log([DT_Output].[Proba_1]) ELSE -1.79769313486231e+308 END END) / 2) AS [Proba_0], (1.0 * (CASE WHEN ([DT_Output].[Proba_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output].[Proba_1] IS NULL OR [DT_Output].[Proba_1] > 0.0) THEN log([DT_Output].[Proba_1]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([DT_Output].[Proba_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output].[Proba_0] IS NULL OR [DT_Output].[Proba_0] > 0.0) THEN log([DT_Output].[Proba_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output].[Proba_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output].[Proba_1] IS NULL OR [DT_Output].[Proba_1] > 0.0) THEN log([DT_Output].[Proba_1]) ELSE -1.79769313486231e+308 END END) / 2)) / 32.0 AS [Score_1], 1.0 * (CASE WHEN ([DT_Output].[Proba_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output].[Proba_1] IS NULL OR [DT_Output].[Proba_1] > 0.0) THEN log([DT_Output].[Proba_1]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([DT_Output].[Proba_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output].[Proba_0] IS NULL OR [DT_Output].[Proba_0] > 0.0) THEN log([DT_Output].[Proba_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output].[Proba_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output].[Proba_1] IS NULL OR [DT_Output].[Proba_1] > 0.0) THEN log([DT_Output].[Proba_1]) ELSE -1.79769313486231e+308 END END) / 2) AS [Proba_1] 
FROM [DT_Output]), 
[DT_node_lookup_1] AS 
(SELECT [ADS_sca_2_OUT].[KEY] AS [KEY], CASE WHEN ([ADS_sca_2_OUT].scaler_22 <= 0.0409417450428009) THEN 1 ELSE 2 END AS node_id_2 
FROM [ADS_sca_2_OUT]), 
[DT_node_data_1] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Proba_0] AS [Proba_0], [Values].[LogProba_0] AS [LogProba_0], [Values].[Proba_1] AS [Proba_1], [Values].[LogProba_1] AS [LogProba_1], [Values].[Decision] AS [Decision], [Values].[DecisionProba] AS [DecisionProba] 
FROM (SELECT 1 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 292 AS count, 1 AS depth, 0 AS parent_id, 0.1539570955001853 AS [Proba_0], -1.87108131603 AS [LogProba_0], 0.8460429044998148 AS [Proba_1], -0.167185206123 AS [LogProba_1], 1 AS [Decision], 0.8460429045 AS [DecisionProba] UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 163 AS count, 1 AS depth, 0 AS parent_id, 0.9402314464975295 AS [Proba_0], -0.061629214347 AS [LogProba_0], 0.05976855350247043 AS [Proba_1], -2.8172756175 AS [LogProba_1], 0 AS [Decision], 0.940231446498 AS [DecisionProba]) AS [Values]), 
[DT_Output_1] AS 
(SELECT [DT_node_lookup_1].[KEY] AS [KEY], [DT_node_lookup_1].node_id_2 AS node_id_2, [DT_node_data_1].node_id AS node_id, [DT_node_data_1].feature AS feature, [DT_node_data_1].threshold AS threshold, [DT_node_data_1].count AS count, [DT_node_data_1].depth AS depth, [DT_node_data_1].parent_id AS parent_id, [DT_node_data_1].[Proba_0] AS [Proba_0], [DT_node_data_1].[LogProba_0] AS [LogProba_0], [DT_node_data_1].[Proba_1] AS [Proba_1], [DT_node_data_1].[LogProba_1] AS [LogProba_1], [DT_node_data_1].[Decision] AS [Decision], [DT_node_data_1].[DecisionProba] AS [DecisionProba] 
FROM [DT_node_lookup_1] LEFT OUTER JOIN [DT_node_data_1] ON [DT_node_lookup_1].node_id_2 = [DT_node_data_1].node_id), 
[AdaBoost_Estim_1] AS 
(SELECT [DT_Output_1].[KEY] AS [KEY], (1.0 * (CASE WHEN ([DT_Output_1].[Proba_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_1].[Proba_0] IS NULL OR [DT_Output_1].[Proba_0] > 0.0) THEN log([DT_Output_1].[Proba_0]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([DT_Output_1].[Proba_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_1].[Proba_0] IS NULL OR [DT_Output_1].[Proba_0] > 0.0) THEN log([DT_Output_1].[Proba_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_1].[Proba_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_1].[Proba_1] IS NULL OR [DT_Output_1].[Proba_1] > 0.0) THEN log([DT_Output_1].[Proba_1]) ELSE -1.79769313486231e+308 END END) / 2)) / 32.0 AS [Score_0], 1.0 * (CASE WHEN ([DT_Output_1].[Proba_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_1].[Proba_0] IS NULL OR [DT_Output_1].[Proba_0] > 0.0) THEN log([DT_Output_1].[Proba_0]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([DT_Output_1].[Proba_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_1].[Proba_0] IS NULL OR [DT_Output_1].[Proba_0] > 0.0) THEN log([DT_Output_1].[Proba_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_1].[Proba_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_1].[Proba_1] IS NULL OR [DT_Output_1].[Proba_1] > 0.0) THEN log([DT_Output_1].[Proba_1]) ELSE -1.79769313486231e+308 END END) / 2) AS [Proba_0], (1.0 * (CASE WHEN ([DT_Output_1].[Proba_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_1].[Proba_1] IS NULL OR [DT_Output_1].[Proba_1] > 0.0) THEN log([DT_Output_1].[Proba_1]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([DT_Output_1].[Proba_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_1].[Proba_0] IS NULL OR [DT_Output_1].[Proba_0] > 0.0) THEN log([DT_Output_1].[Proba_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_1].[Proba_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_1].[Proba_1] IS NULL OR [DT_Output_1].[Proba_1] > 0.0) THEN log([DT_Output_1].[Proba_1]) ELSE -1.79769313486231e+308 END END) / 2)) / 32.0 AS [Score_1], 1.0 * (CASE WHEN ([DT_Output_1].[Proba_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_1].[Proba_1] IS NULL OR [DT_Output_1].[Proba_1] > 0.0) THEN log([DT_Output_1].[Proba_1]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([DT_Output_1].[Proba_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_1].[Proba_0] IS NULL OR [DT_Output_1].[Proba_0] > 0.0) THEN log([DT_Output_1].[Proba_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_1].[Proba_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_1].[Proba_1] IS NULL OR [DT_Output_1].[Proba_1] > 0.0) THEN log([DT_Output_1].[Proba_1]) ELSE -1.79769313486231e+308 END END) / 2) AS [Proba_1] 
FROM [DT_Output_1]), 
[DT_node_lookup_2] AS 
(SELECT [ADS_sca_2_OUT].[KEY] AS [KEY], CASE WHEN ([ADS_sca_2_OUT].scaler_15 <= -0.16329550743103027) THEN 1 ELSE 2 END AS node_id_2 
FROM [ADS_sca_2_OUT]), 
[DT_node_data_2] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Proba_0] AS [Proba_0], [Values].[LogProba_0] AS [LogProba_0], [Values].[Proba_1] AS [Proba_1], [Values].[LogProba_1] AS [LogProba_1], [Values].[Decision] AS [Decision], [Values].[DecisionProba] AS [DecisionProba] 
FROM (SELECT 1 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 294 AS count, 1 AS depth, 0 AS parent_id, 0.14115714255582834 AS [Proba_0], -1.95788152297 AS [LogProba_0], 0.8588428574441717 AS [Proba_1], -0.152169310352 AS [LogProba_1], 1 AS [Decision], 0.858842857444 AS [DecisionProba] UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 161 AS count, 1 AS depth, 0 AS parent_id, 0.8401012721269864 AS [Proba_0], -0.174232832356 AS [LogProba_0], 0.1598987278730137 AS [Proba_1], -1.83321461494 AS [LogProba_1], 0 AS [Decision], 0.840101272127 AS [DecisionProba]) AS [Values]), 
[DT_Output_2] AS 
(SELECT [DT_node_lookup_2].[KEY] AS [KEY], [DT_node_lookup_2].node_id_2 AS node_id_2, [DT_node_data_2].node_id AS node_id, [DT_node_data_2].feature AS feature, [DT_node_data_2].threshold AS threshold, [DT_node_data_2].count AS count, [DT_node_data_2].depth AS depth, [DT_node_data_2].parent_id AS parent_id, [DT_node_data_2].[Proba_0] AS [Proba_0], [DT_node_data_2].[LogProba_0] AS [LogProba_0], [DT_node_data_2].[Proba_1] AS [Proba_1], [DT_node_data_2].[LogProba_1] AS [LogProba_1], [DT_node_data_2].[Decision] AS [Decision], [DT_node_data_2].[DecisionProba] AS [DecisionProba] 
FROM [DT_node_lookup_2] LEFT OUTER JOIN [DT_node_data_2] ON [DT_node_lookup_2].node_id_2 = [DT_node_data_2].node_id), 
[AdaBoost_Estim_2] AS 
(SELECT [DT_Output_2].[KEY] AS [KEY], (1.0 * (CASE WHEN ([DT_Output_2].[Proba_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_2].[Proba_0] IS NULL OR [DT_Output_2].[Proba_0] > 0.0) THEN log([DT_Output_2].[Proba_0]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([DT_Output_2].[Proba_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_2].[Proba_0] IS NULL OR [DT_Output_2].[Proba_0] > 0.0) THEN log([DT_Output_2].[Proba_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_2].[Proba_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_2].[Proba_1] IS NULL OR [DT_Output_2].[Proba_1] > 0.0) THEN log([DT_Output_2].[Proba_1]) ELSE -1.79769313486231e+308 END END) / 2)) / 32.0 AS [Score_0], 1.0 * (CASE WHEN ([DT_Output_2].[Proba_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_2].[Proba_0] IS NULL OR [DT_Output_2].[Proba_0] > 0.0) THEN log([DT_Output_2].[Proba_0]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([DT_Output_2].[Proba_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_2].[Proba_0] IS NULL OR [DT_Output_2].[Proba_0] > 0.0) THEN log([DT_Output_2].[Proba_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_2].[Proba_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_2].[Proba_1] IS NULL OR [DT_Output_2].[Proba_1] > 0.0) THEN log([DT_Output_2].[Proba_1]) ELSE -1.79769313486231e+308 END END) / 2) AS [Proba_0], (1.0 * (CASE WHEN ([DT_Output_2].[Proba_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_2].[Proba_1] IS NULL OR [DT_Output_2].[Proba_1] > 0.0) THEN log([DT_Output_2].[Proba_1]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([DT_Output_2].[Proba_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_2].[Proba_0] IS NULL OR [DT_Output_2].[Proba_0] > 0.0) THEN log([DT_Output_2].[Proba_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_2].[Proba_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_2].[Proba_1] IS NULL OR [DT_Output_2].[Proba_1] > 0.0) THEN log([DT_Output_2].[Proba_1]) ELSE -1.79769313486231e+308 END END) / 2)) / 32.0 AS [Score_1], 1.0 * (CASE WHEN ([DT_Output_2].[Proba_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_2].[Proba_1] IS NULL OR [DT_Output_2].[Proba_1] > 0.0) THEN log([DT_Output_2].[Proba_1]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([DT_Output_2].[Proba_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_2].[Proba_0] IS NULL OR [DT_Output_2].[Proba_0] > 0.0) THEN log([DT_Output_2].[Proba_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_2].[Proba_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_2].[Proba_1] IS NULL OR [DT_Output_2].[Proba_1] > 0.0) THEN log([DT_Output_2].[Proba_1]) ELSE -1.79769313486231e+308 END END) / 2) AS [Proba_1] 
FROM [DT_Output_2]), 
[DT_node_lookup_3] AS 
(SELECT [ADS_sca_2_OUT].[KEY] AS [KEY], CASE WHEN ([ADS_sca_2_OUT].scaler_23 <= -0.3781753182411194) THEN 1 ELSE 2 END AS node_id_2 
FROM [ADS_sca_2_OUT]), 
[DT_node_data_3] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Proba_0] AS [Proba_0], [Values].[LogProba_0] AS [LogProba_0], [Values].[Proba_1] AS [Proba_1], [Values].[LogProba_1] AS [LogProba_1], [Values].[Decision] AS [Decision], [Values].[DecisionProba] AS [DecisionProba] 
FROM (SELECT 1 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 174 AS count, 1 AS depth, 0 AS parent_id, 0.031741451231945966 AS [Proba_0], -3.45013184244 AS [LogProba_0], 0.968258548768054 AS [Proba_1], -0.0322561315345 AS [LogProba_1], 1 AS [Decision], 0.968258548768 AS [DecisionProba] UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 281 AS count, 1 AS depth, 0 AS parent_id, 0.733245871966448 AS [Proba_0], -0.310274200917 AS [LogProba_0], 0.26675412803355203 AS [Proba_1], -1.32142791363 AS [LogProba_1], 0 AS [Decision], 0.733245871966 AS [DecisionProba]) AS [Values]), 
[DT_Output_3] AS 
(SELECT [DT_node_lookup_3].[KEY] AS [KEY], [DT_node_lookup_3].node_id_2 AS node_id_2, [DT_node_data_3].node_id AS node_id, [DT_node_data_3].feature AS feature, [DT_node_data_3].threshold AS threshold, [DT_node_data_3].count AS count, [DT_node_data_3].depth AS depth, [DT_node_data_3].parent_id AS parent_id, [DT_node_data_3].[Proba_0] AS [Proba_0], [DT_node_data_3].[LogProba_0] AS [LogProba_0], [DT_node_data_3].[Proba_1] AS [Proba_1], [DT_node_data_3].[LogProba_1] AS [LogProba_1], [DT_node_data_3].[Decision] AS [Decision], [DT_node_data_3].[DecisionProba] AS [DecisionProba] 
FROM [DT_node_lookup_3] LEFT OUTER JOIN [DT_node_data_3] ON [DT_node_lookup_3].node_id_2 = [DT_node_data_3].node_id), 
[AdaBoost_Estim_3] AS 
(SELECT [DT_Output_3].[KEY] AS [KEY], (1.0 * (CASE WHEN ([DT_Output_3].[Proba_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_3].[Proba_0] IS NULL OR [DT_Output_3].[Proba_0] > 0.0) THEN log([DT_Output_3].[Proba_0]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([DT_Output_3].[Proba_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_3].[Proba_0] IS NULL OR [DT_Output_3].[Proba_0] > 0.0) THEN log([DT_Output_3].[Proba_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_3].[Proba_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_3].[Proba_1] IS NULL OR [DT_Output_3].[Proba_1] > 0.0) THEN log([DT_Output_3].[Proba_1]) ELSE -1.79769313486231e+308 END END) / 2)) / 32.0 AS [Score_0], 1.0 * (CASE WHEN ([DT_Output_3].[Proba_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_3].[Proba_0] IS NULL OR [DT_Output_3].[Proba_0] > 0.0) THEN log([DT_Output_3].[Proba_0]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([DT_Output_3].[Proba_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_3].[Proba_0] IS NULL OR [DT_Output_3].[Proba_0] > 0.0) THEN log([DT_Output_3].[Proba_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_3].[Proba_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_3].[Proba_1] IS NULL OR [DT_Output_3].[Proba_1] > 0.0) THEN log([DT_Output_3].[Proba_1]) ELSE -1.79769313486231e+308 END END) / 2) AS [Proba_0], (1.0 * (CASE WHEN ([DT_Output_3].[Proba_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_3].[Proba_1] IS NULL OR [DT_Output_3].[Proba_1] > 0.0) THEN log([DT_Output_3].[Proba_1]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([DT_Output_3].[Proba_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_3].[Proba_0] IS NULL OR [DT_Output_3].[Proba_0] > 0.0) THEN log([DT_Output_3].[Proba_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_3].[Proba_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_3].[Proba_1] IS NULL OR [DT_Output_3].[Proba_1] > 0.0) THEN log([DT_Output_3].[Proba_1]) ELSE -1.79769313486231e+308 END END) / 2)) / 32.0 AS [Score_1], 1.0 * (CASE WHEN ([DT_Output_3].[Proba_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_3].[Proba_1] IS NULL OR [DT_Output_3].[Proba_1] > 0.0) THEN log([DT_Output_3].[Proba_1]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([DT_Output_3].[Proba_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_3].[Proba_0] IS NULL OR [DT_Output_3].[Proba_0] > 0.0) THEN log([DT_Output_3].[Proba_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_3].[Proba_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_3].[Proba_1] IS NULL OR [DT_Output_3].[Proba_1] > 0.0) THEN log([DT_Output_3].[Proba_1]) ELSE -1.79769313486231e+308 END END) / 2) AS [Proba_1] 
FROM [DT_Output_3]), 
[DT_node_lookup_4] AS 
(SELECT [ADS_sca_2_OUT].[KEY] AS [KEY], CASE WHEN ([ADS_sca_2_OUT].scaler_9 <= 0.01025064941495657) THEN 1 ELSE 2 END AS node_id_2 
FROM [ADS_sca_2_OUT]), 
[DT_node_data_4] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Proba_0] AS [Proba_0], [Values].[LogProba_0] AS [LogProba_0], [Values].[Proba_1] AS [Proba_1], [Values].[LogProba_1] AS [LogProba_1], [Values].[Decision] AS [Decision], [Values].[DecisionProba] AS [DecisionProba] 
FROM (SELECT 1 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 281 AS count, 1 AS depth, 0 AS parent_id, 0.2624896697802413 AS [Proba_0], -1.33754355094 AS [LogProba_0], 0.7375103302197588 AS [Proba_1], -0.304475183789 AS [LogProba_1], 1 AS [Decision], 0.73751033022 AS [DecisionProba] UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 174 AS count, 1 AS depth, 0 AS parent_id, 0.8297285754857712 AS [Proba_0], -0.18665664916 AS [LogProba_0], 0.1702714245142288 AS [Proba_1], -1.77036150038 AS [LogProba_1], 0 AS [Decision], 0.829728575486 AS [DecisionProba]) AS [Values]), 
[DT_Output_4] AS 
(SELECT [DT_node_lookup_4].[KEY] AS [KEY], [DT_node_lookup_4].node_id_2 AS node_id_2, [DT_node_data_4].node_id AS node_id, [DT_node_data_4].feature AS feature, [DT_node_data_4].threshold AS threshold, [DT_node_data_4].count AS count, [DT_node_data_4].depth AS depth, [DT_node_data_4].parent_id AS parent_id, [DT_node_data_4].[Proba_0] AS [Proba_0], [DT_node_data_4].[LogProba_0] AS [LogProba_0], [DT_node_data_4].[Proba_1] AS [Proba_1], [DT_node_data_4].[LogProba_1] AS [LogProba_1], [DT_node_data_4].[Decision] AS [Decision], [DT_node_data_4].[DecisionProba] AS [DecisionProba] 
FROM [DT_node_lookup_4] LEFT OUTER JOIN [DT_node_data_4] ON [DT_node_lookup_4].node_id_2 = [DT_node_data_4].node_id), 
[AdaBoost_Estim_4] AS 
(SELECT [DT_Output_4].[KEY] AS [KEY], (1.0 * (CASE WHEN ([DT_Output_4].[Proba_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_4].[Proba_0] IS NULL OR [DT_Output_4].[Proba_0] > 0.0) THEN log([DT_Output_4].[Proba_0]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([DT_Output_4].[Proba_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_4].[Proba_0] IS NULL OR [DT_Output_4].[Proba_0] > 0.0) THEN log([DT_Output_4].[Proba_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_4].[Proba_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_4].[Proba_1] IS NULL OR [DT_Output_4].[Proba_1] > 0.0) THEN log([DT_Output_4].[Proba_1]) ELSE -1.79769313486231e+308 END END) / 2)) / 32.0 AS [Score_0], 1.0 * (CASE WHEN ([DT_Output_4].[Proba_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_4].[Proba_0] IS NULL OR [DT_Output_4].[Proba_0] > 0.0) THEN log([DT_Output_4].[Proba_0]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([DT_Output_4].[Proba_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_4].[Proba_0] IS NULL OR [DT_Output_4].[Proba_0] > 0.0) THEN log([DT_Output_4].[Proba_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_4].[Proba_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_4].[Proba_1] IS NULL OR [DT_Output_4].[Proba_1] > 0.0) THEN log([DT_Output_4].[Proba_1]) ELSE -1.79769313486231e+308 END END) / 2) AS [Proba_0], (1.0 * (CASE WHEN ([DT_Output_4].[Proba_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_4].[Proba_1] IS NULL OR [DT_Output_4].[Proba_1] > 0.0) THEN log([DT_Output_4].[Proba_1]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([DT_Output_4].[Proba_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_4].[Proba_0] IS NULL OR [DT_Output_4].[Proba_0] > 0.0) THEN log([DT_Output_4].[Proba_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_4].[Proba_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_4].[Proba_1] IS NULL OR [DT_Output_4].[Proba_1] > 0.0) THEN log([DT_Output_4].[Proba_1]) ELSE -1.79769313486231e+308 END END) / 2)) / 32.0 AS [Score_1], 1.0 * (CASE WHEN ([DT_Output_4].[Proba_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_4].[Proba_1] IS NULL OR [DT_Output_4].[Proba_1] > 0.0) THEN log([DT_Output_4].[Proba_1]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([DT_Output_4].[Proba_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_4].[Proba_0] IS NULL OR [DT_Output_4].[Proba_0] > 0.0) THEN log([DT_Output_4].[Proba_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_4].[Proba_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_4].[Proba_1] IS NULL OR [DT_Output_4].[Proba_1] > 0.0) THEN log([DT_Output_4].[Proba_1]) ELSE -1.79769313486231e+308 END END) / 2) AS [Proba_1] 
FROM [DT_Output_4]), 
[DT_node_lookup_5] AS 
(SELECT [ADS_sca_2_OUT].[KEY] AS [KEY], CASE WHEN ([ADS_sca_2_OUT].scaler_17 <= -0.769645094871521) THEN 1 ELSE 2 END AS node_id_2 
FROM [ADS_sca_2_OUT]), 
[DT_node_data_5] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Proba_0] AS [Proba_0], [Values].[LogProba_0] AS [LogProba_0], [Values].[Proba_1] AS [Proba_1], [Values].[LogProba_1] AS [LogProba_1], [Values].[Decision] AS [Decision], [Values].[DecisionProba] AS [DecisionProba] 
FROM (SELECT 1 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 89 AS count, 1 AS depth, 0 AS parent_id, 0.8470946900106654 AS [Proba_0], -0.165942795997 AS [LogProba_0], 0.1529053099893346 AS [Proba_1], -1.87793643814 AS [LogProba_1], 0 AS [Decision], 0.847094690011 AS [DecisionProba] UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 366 AS count, 1 AS depth, 0 AS parent_id, 0.3427558765785804 AS [Proba_0], -1.07073681531 AS [LogProba_0], 0.6572441234214196 AS [Proba_1], -0.419699756574 AS [LogProba_1], 1 AS [Decision], 0.657244123421 AS [DecisionProba]) AS [Values]), 
[DT_Output_5] AS 
(SELECT [DT_node_lookup_5].[KEY] AS [KEY], [DT_node_lookup_5].node_id_2 AS node_id_2, [DT_node_data_5].node_id AS node_id, [DT_node_data_5].feature AS feature, [DT_node_data_5].threshold AS threshold, [DT_node_data_5].count AS count, [DT_node_data_5].depth AS depth, [DT_node_data_5].parent_id AS parent_id, [DT_node_data_5].[Proba_0] AS [Proba_0], [DT_node_data_5].[LogProba_0] AS [LogProba_0], [DT_node_data_5].[Proba_1] AS [Proba_1], [DT_node_data_5].[LogProba_1] AS [LogProba_1], [DT_node_data_5].[Decision] AS [Decision], [DT_node_data_5].[DecisionProba] AS [DecisionProba] 
FROM [DT_node_lookup_5] LEFT OUTER JOIN [DT_node_data_5] ON [DT_node_lookup_5].node_id_2 = [DT_node_data_5].node_id), 
[AdaBoost_Estim_5] AS 
(SELECT [DT_Output_5].[KEY] AS [KEY], (1.0 * (CASE WHEN ([DT_Output_5].[Proba_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_5].[Proba_0] IS NULL OR [DT_Output_5].[Proba_0] > 0.0) THEN log([DT_Output_5].[Proba_0]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([DT_Output_5].[Proba_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_5].[Proba_0] IS NULL OR [DT_Output_5].[Proba_0] > 0.0) THEN log([DT_Output_5].[Proba_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_5].[Proba_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_5].[Proba_1] IS NULL OR [DT_Output_5].[Proba_1] > 0.0) THEN log([DT_Output_5].[Proba_1]) ELSE -1.79769313486231e+308 END END) / 2)) / 32.0 AS [Score_0], 1.0 * (CASE WHEN ([DT_Output_5].[Proba_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_5].[Proba_0] IS NULL OR [DT_Output_5].[Proba_0] > 0.0) THEN log([DT_Output_5].[Proba_0]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([DT_Output_5].[Proba_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_5].[Proba_0] IS NULL OR [DT_Output_5].[Proba_0] > 0.0) THEN log([DT_Output_5].[Proba_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_5].[Proba_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_5].[Proba_1] IS NULL OR [DT_Output_5].[Proba_1] > 0.0) THEN log([DT_Output_5].[Proba_1]) ELSE -1.79769313486231e+308 END END) / 2) AS [Proba_0], (1.0 * (CASE WHEN ([DT_Output_5].[Proba_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_5].[Proba_1] IS NULL OR [DT_Output_5].[Proba_1] > 0.0) THEN log([DT_Output_5].[Proba_1]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([DT_Output_5].[Proba_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_5].[Proba_0] IS NULL OR [DT_Output_5].[Proba_0] > 0.0) THEN log([DT_Output_5].[Proba_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_5].[Proba_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_5].[Proba_1] IS NULL OR [DT_Output_5].[Proba_1] > 0.0) THEN log([DT_Output_5].[Proba_1]) ELSE -1.79769313486231e+308 END END) / 2)) / 32.0 AS [Score_1], 1.0 * (CASE WHEN ([DT_Output_5].[Proba_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_5].[Proba_1] IS NULL OR [DT_Output_5].[Proba_1] > 0.0) THEN log([DT_Output_5].[Proba_1]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([DT_Output_5].[Proba_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_5].[Proba_0] IS NULL OR [DT_Output_5].[Proba_0] > 0.0) THEN log([DT_Output_5].[Proba_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_5].[Proba_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_5].[Proba_1] IS NULL OR [DT_Output_5].[Proba_1] > 0.0) THEN log([DT_Output_5].[Proba_1]) ELSE -1.79769313486231e+308 END END) / 2) AS [Proba_1] 
FROM [DT_Output_5]), 
[DT_node_lookup_6] AS 
(SELECT [ADS_sca_2_OUT].[KEY] AS [KEY], CASE WHEN ([ADS_sca_2_OUT].scaler_28 <= -0.19650337100028992) THEN 1 ELSE 2 END AS node_id_2 
FROM [ADS_sca_2_OUT]), 
[DT_node_data_6] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Proba_0] AS [Proba_0], [Values].[LogProba_0] AS [LogProba_0], [Values].[Proba_1] AS [Proba_1], [Values].[LogProba_1] AS [LogProba_1], [Values].[Decision] AS [Decision], [Values].[DecisionProba] AS [DecisionProba] 
FROM (SELECT 1 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 231 AS count, 1 AS depth, 0 AS parent_id, 0.20400415805922534 AS [Proba_0], -1.5896149027 AS [LogProba_0], 0.7959958419407747 AS [Proba_1], -0.228161316844 AS [LogProba_1], 1 AS [Decision], 0.795995841941 AS [DecisionProba] UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 224 AS count, 1 AS depth, 0 AS parent_id, 0.7137038175255146 AS [Proba_0], -0.337287224098 AS [LogProba_0], 0.28629618247448546 AS [Proba_1], -1.25072840097 AS [LogProba_1], 0 AS [Decision], 0.713703817526 AS [DecisionProba]) AS [Values]), 
[DT_Output_6] AS 
(SELECT [DT_node_lookup_6].[KEY] AS [KEY], [DT_node_lookup_6].node_id_2 AS node_id_2, [DT_node_data_6].node_id AS node_id, [DT_node_data_6].feature AS feature, [DT_node_data_6].threshold AS threshold, [DT_node_data_6].count AS count, [DT_node_data_6].depth AS depth, [DT_node_data_6].parent_id AS parent_id, [DT_node_data_6].[Proba_0] AS [Proba_0], [DT_node_data_6].[LogProba_0] AS [LogProba_0], [DT_node_data_6].[Proba_1] AS [Proba_1], [DT_node_data_6].[LogProba_1] AS [LogProba_1], [DT_node_data_6].[Decision] AS [Decision], [DT_node_data_6].[DecisionProba] AS [DecisionProba] 
FROM [DT_node_lookup_6] LEFT OUTER JOIN [DT_node_data_6] ON [DT_node_lookup_6].node_id_2 = [DT_node_data_6].node_id), 
[AdaBoost_Estim_6] AS 
(SELECT [DT_Output_6].[KEY] AS [KEY], (1.0 * (CASE WHEN ([DT_Output_6].[Proba_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_6].[Proba_0] IS NULL OR [DT_Output_6].[Proba_0] > 0.0) THEN log([DT_Output_6].[Proba_0]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([DT_Output_6].[Proba_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_6].[Proba_0] IS NULL OR [DT_Output_6].[Proba_0] > 0.0) THEN log([DT_Output_6].[Proba_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_6].[Proba_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_6].[Proba_1] IS NULL OR [DT_Output_6].[Proba_1] > 0.0) THEN log([DT_Output_6].[Proba_1]) ELSE -1.79769313486231e+308 END END) / 2)) / 32.0 AS [Score_0], 1.0 * (CASE WHEN ([DT_Output_6].[Proba_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_6].[Proba_0] IS NULL OR [DT_Output_6].[Proba_0] > 0.0) THEN log([DT_Output_6].[Proba_0]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([DT_Output_6].[Proba_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_6].[Proba_0] IS NULL OR [DT_Output_6].[Proba_0] > 0.0) THEN log([DT_Output_6].[Proba_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_6].[Proba_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_6].[Proba_1] IS NULL OR [DT_Output_6].[Proba_1] > 0.0) THEN log([DT_Output_6].[Proba_1]) ELSE -1.79769313486231e+308 END END) / 2) AS [Proba_0], (1.0 * (CASE WHEN ([DT_Output_6].[Proba_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_6].[Proba_1] IS NULL OR [DT_Output_6].[Proba_1] > 0.0) THEN log([DT_Output_6].[Proba_1]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([DT_Output_6].[Proba_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_6].[Proba_0] IS NULL OR [DT_Output_6].[Proba_0] > 0.0) THEN log([DT_Output_6].[Proba_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_6].[Proba_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_6].[Proba_1] IS NULL OR [DT_Output_6].[Proba_1] > 0.0) THEN log([DT_Output_6].[Proba_1]) ELSE -1.79769313486231e+308 END END) / 2)) / 32.0 AS [Score_1], 1.0 * (CASE WHEN ([DT_Output_6].[Proba_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_6].[Proba_1] IS NULL OR [DT_Output_6].[Proba_1] > 0.0) THEN log([DT_Output_6].[Proba_1]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([DT_Output_6].[Proba_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_6].[Proba_0] IS NULL OR [DT_Output_6].[Proba_0] > 0.0) THEN log([DT_Output_6].[Proba_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_6].[Proba_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_6].[Proba_1] IS NULL OR [DT_Output_6].[Proba_1] > 0.0) THEN log([DT_Output_6].[Proba_1]) ELSE -1.79769313486231e+308 END END) / 2) AS [Proba_1] 
FROM [DT_Output_6]), 
[DT_node_lookup_7] AS 
(SELECT [ADS_sca_2_OUT].[KEY] AS [KEY], CASE WHEN ([ADS_sca_2_OUT].scaler_20 <= 0.539304256439209) THEN 1 ELSE 2 END AS node_id_2 
FROM [ADS_sca_2_OUT]), 
[DT_node_data_7] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Proba_0] AS [Proba_0], [Values].[LogProba_0] AS [LogProba_0], [Values].[Proba_1] AS [Proba_1], [Values].[LogProba_1] AS [LogProba_1], [Values].[Decision] AS [Decision], [Values].[DecisionProba] AS [DecisionProba] 
FROM (SELECT 1 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 358 AS count, 1 AS depth, 0 AS parent_id, 0.6264516023256158 AS [Proba_0], -0.467683758507 AS [LogProba_0], 0.37354839767438414 AS [Proba_1], -0.984707704024 AS [LogProba_1], 0 AS [Decision], 0.626451602326 AS [DecisionProba] UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 97 AS count, 1 AS depth, 0 AS parent_id, 0.12193443686486664 AS [Proba_0], -2.10427178145 AS [LogProba_0], 0.8780655631351334 AS [Proba_1], -0.13003401486 AS [LogProba_1], 1 AS [Decision], 0.878065563135 AS [DecisionProba]) AS [Values]), 
[DT_Output_7] AS 
(SELECT [DT_node_lookup_7].[KEY] AS [KEY], [DT_node_lookup_7].node_id_2 AS node_id_2, [DT_node_data_7].node_id AS node_id, [DT_node_data_7].feature AS feature, [DT_node_data_7].threshold AS threshold, [DT_node_data_7].count AS count, [DT_node_data_7].depth AS depth, [DT_node_data_7].parent_id AS parent_id, [DT_node_data_7].[Proba_0] AS [Proba_0], [DT_node_data_7].[LogProba_0] AS [LogProba_0], [DT_node_data_7].[Proba_1] AS [Proba_1], [DT_node_data_7].[LogProba_1] AS [LogProba_1], [DT_node_data_7].[Decision] AS [Decision], [DT_node_data_7].[DecisionProba] AS [DecisionProba] 
FROM [DT_node_lookup_7] LEFT OUTER JOIN [DT_node_data_7] ON [DT_node_lookup_7].node_id_2 = [DT_node_data_7].node_id), 
[AdaBoost_Estim_7] AS 
(SELECT [DT_Output_7].[KEY] AS [KEY], (1.0 * (CASE WHEN ([DT_Output_7].[Proba_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_7].[Proba_0] IS NULL OR [DT_Output_7].[Proba_0] > 0.0) THEN log([DT_Output_7].[Proba_0]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([DT_Output_7].[Proba_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_7].[Proba_0] IS NULL OR [DT_Output_7].[Proba_0] > 0.0) THEN log([DT_Output_7].[Proba_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_7].[Proba_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_7].[Proba_1] IS NULL OR [DT_Output_7].[Proba_1] > 0.0) THEN log([DT_Output_7].[Proba_1]) ELSE -1.79769313486231e+308 END END) / 2)) / 32.0 AS [Score_0], 1.0 * (CASE WHEN ([DT_Output_7].[Proba_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_7].[Proba_0] IS NULL OR [DT_Output_7].[Proba_0] > 0.0) THEN log([DT_Output_7].[Proba_0]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([DT_Output_7].[Proba_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_7].[Proba_0] IS NULL OR [DT_Output_7].[Proba_0] > 0.0) THEN log([DT_Output_7].[Proba_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_7].[Proba_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_7].[Proba_1] IS NULL OR [DT_Output_7].[Proba_1] > 0.0) THEN log([DT_Output_7].[Proba_1]) ELSE -1.79769313486231e+308 END END) / 2) AS [Proba_0], (1.0 * (CASE WHEN ([DT_Output_7].[Proba_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_7].[Proba_1] IS NULL OR [DT_Output_7].[Proba_1] > 0.0) THEN log([DT_Output_7].[Proba_1]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([DT_Output_7].[Proba_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_7].[Proba_0] IS NULL OR [DT_Output_7].[Proba_0] > 0.0) THEN log([DT_Output_7].[Proba_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_7].[Proba_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_7].[Proba_1] IS NULL OR [DT_Output_7].[Proba_1] > 0.0) THEN log([DT_Output_7].[Proba_1]) ELSE -1.79769313486231e+308 END END) / 2)) / 32.0 AS [Score_1], 1.0 * (CASE WHEN ([DT_Output_7].[Proba_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_7].[Proba_1] IS NULL OR [DT_Output_7].[Proba_1] > 0.0) THEN log([DT_Output_7].[Proba_1]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([DT_Output_7].[Proba_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_7].[Proba_0] IS NULL OR [DT_Output_7].[Proba_0] > 0.0) THEN log([DT_Output_7].[Proba_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_7].[Proba_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_7].[Proba_1] IS NULL OR [DT_Output_7].[Proba_1] > 0.0) THEN log([DT_Output_7].[Proba_1]) ELSE -1.79769313486231e+308 END END) / 2) AS [Proba_1] 
FROM [DT_Output_7]), 
[DT_node_lookup_8] AS 
(SELECT [ADS_sca_2_OUT].[KEY] AS [KEY], CASE WHEN ([ADS_sca_2_OUT].scaler_14 <= 0.5588116645812988) THEN 1 ELSE 2 END AS node_id_2 
FROM [ADS_sca_2_OUT]), 
[DT_node_data_8] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Proba_0] AS [Proba_0], [Values].[LogProba_0] AS [LogProba_0], [Values].[Proba_1] AS [Proba_1], [Values].[LogProba_1] AS [LogProba_1], [Values].[Decision] AS [Decision], [Values].[DecisionProba] AS [DecisionProba] 
FROM (SELECT 1 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 373 AS count, 1 AS depth, 0 AS parent_id, 0.3850058016750016 AS [Proba_0], -0.954496875522 AS [LogProba_0], 0.6149941983249984 AS [Proba_1], -0.486142444838 AS [LogProba_1], 1 AS [Decision], 0.614994198325 AS [DecisionProba] UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 82 AS count, 1 AS depth, 0 AS parent_id, 0.9349792436170534 AS [Proba_0], -0.0672309492799 AS [LogProba_0], 0.06502075638294656 AS [Proba_1], -2.73304873109 AS [LogProba_1], 0 AS [Decision], 0.934979243617 AS [DecisionProba]) AS [Values]), 
[DT_Output_8] AS 
(SELECT [DT_node_lookup_8].[KEY] AS [KEY], [DT_node_lookup_8].node_id_2 AS node_id_2, [DT_node_data_8].node_id AS node_id, [DT_node_data_8].feature AS feature, [DT_node_data_8].threshold AS threshold, [DT_node_data_8].count AS count, [DT_node_data_8].depth AS depth, [DT_node_data_8].parent_id AS parent_id, [DT_node_data_8].[Proba_0] AS [Proba_0], [DT_node_data_8].[LogProba_0] AS [LogProba_0], [DT_node_data_8].[Proba_1] AS [Proba_1], [DT_node_data_8].[LogProba_1] AS [LogProba_1], [DT_node_data_8].[Decision] AS [Decision], [DT_node_data_8].[DecisionProba] AS [DecisionProba] 
FROM [DT_node_lookup_8] LEFT OUTER JOIN [DT_node_data_8] ON [DT_node_lookup_8].node_id_2 = [DT_node_data_8].node_id), 
[AdaBoost_Estim_8] AS 
(SELECT [DT_Output_8].[KEY] AS [KEY], (1.0 * (CASE WHEN ([DT_Output_8].[Proba_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_8].[Proba_0] IS NULL OR [DT_Output_8].[Proba_0] > 0.0) THEN log([DT_Output_8].[Proba_0]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([DT_Output_8].[Proba_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_8].[Proba_0] IS NULL OR [DT_Output_8].[Proba_0] > 0.0) THEN log([DT_Output_8].[Proba_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_8].[Proba_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_8].[Proba_1] IS NULL OR [DT_Output_8].[Proba_1] > 0.0) THEN log([DT_Output_8].[Proba_1]) ELSE -1.79769313486231e+308 END END) / 2)) / 32.0 AS [Score_0], 1.0 * (CASE WHEN ([DT_Output_8].[Proba_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_8].[Proba_0] IS NULL OR [DT_Output_8].[Proba_0] > 0.0) THEN log([DT_Output_8].[Proba_0]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([DT_Output_8].[Proba_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_8].[Proba_0] IS NULL OR [DT_Output_8].[Proba_0] > 0.0) THEN log([DT_Output_8].[Proba_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_8].[Proba_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_8].[Proba_1] IS NULL OR [DT_Output_8].[Proba_1] > 0.0) THEN log([DT_Output_8].[Proba_1]) ELSE -1.79769313486231e+308 END END) / 2) AS [Proba_0], (1.0 * (CASE WHEN ([DT_Output_8].[Proba_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_8].[Proba_1] IS NULL OR [DT_Output_8].[Proba_1] > 0.0) THEN log([DT_Output_8].[Proba_1]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([DT_Output_8].[Proba_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_8].[Proba_0] IS NULL OR [DT_Output_8].[Proba_0] > 0.0) THEN log([DT_Output_8].[Proba_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_8].[Proba_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_8].[Proba_1] IS NULL OR [DT_Output_8].[Proba_1] > 0.0) THEN log([DT_Output_8].[Proba_1]) ELSE -1.79769313486231e+308 END END) / 2)) / 32.0 AS [Score_1], 1.0 * (CASE WHEN ([DT_Output_8].[Proba_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_8].[Proba_1] IS NULL OR [DT_Output_8].[Proba_1] > 0.0) THEN log([DT_Output_8].[Proba_1]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([DT_Output_8].[Proba_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_8].[Proba_0] IS NULL OR [DT_Output_8].[Proba_0] > 0.0) THEN log([DT_Output_8].[Proba_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_8].[Proba_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_8].[Proba_1] IS NULL OR [DT_Output_8].[Proba_1] > 0.0) THEN log([DT_Output_8].[Proba_1]) ELSE -1.79769313486231e+308 END END) / 2) AS [Proba_1] 
FROM [DT_Output_8]), 
[DT_node_lookup_9] AS 
(SELECT [ADS_sca_2_OUT].[KEY] AS [KEY], CASE WHEN ([ADS_sca_2_OUT].scaler_30 <= 0.8256909847259521) THEN 1 ELSE 2 END AS node_id_2 
FROM [ADS_sca_2_OUT]), 
[DT_node_data_9] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Proba_0] AS [Proba_0], [Values].[LogProba_0] AS [LogProba_0], [Values].[Proba_1] AS [Proba_1], [Values].[LogProba_1] AS [LogProba_1], [Values].[Decision] AS [Decision], [Values].[DecisionProba] AS [DecisionProba] 
FROM (SELECT 1 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 392 AS count, 1 AS depth, 0 AS parent_id, 0.3579367999880461 AS [Proba_0], -1.02739884451 AS [LogProba_0], 0.6420632000119539 AS [Proba_1], -0.443068537751 AS [LogProba_1], 1 AS [Decision], 0.642063200012 AS [DecisionProba] UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 63 AS count, 1 AS depth, 0 AS parent_id, 0.946591487513847 AS [Proba_0], -0.0548876542466 AS [LogProba_0], 0.05340851248615303 AS [Proba_1], -2.92978513587 AS [LogProba_1], 0 AS [Decision], 0.946591487514 AS [DecisionProba]) AS [Values]), 
[DT_Output_9] AS 
(SELECT [DT_node_lookup_9].[KEY] AS [KEY], [DT_node_lookup_9].node_id_2 AS node_id_2, [DT_node_data_9].node_id AS node_id, [DT_node_data_9].feature AS feature, [DT_node_data_9].threshold AS threshold, [DT_node_data_9].count AS count, [DT_node_data_9].depth AS depth, [DT_node_data_9].parent_id AS parent_id, [DT_node_data_9].[Proba_0] AS [Proba_0], [DT_node_data_9].[LogProba_0] AS [LogProba_0], [DT_node_data_9].[Proba_1] AS [Proba_1], [DT_node_data_9].[LogProba_1] AS [LogProba_1], [DT_node_data_9].[Decision] AS [Decision], [DT_node_data_9].[DecisionProba] AS [DecisionProba] 
FROM [DT_node_lookup_9] LEFT OUTER JOIN [DT_node_data_9] ON [DT_node_lookup_9].node_id_2 = [DT_node_data_9].node_id), 
[AdaBoost_Estim_9] AS 
(SELECT [DT_Output_9].[KEY] AS [KEY], (1.0 * (CASE WHEN ([DT_Output_9].[Proba_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_9].[Proba_0] IS NULL OR [DT_Output_9].[Proba_0] > 0.0) THEN log([DT_Output_9].[Proba_0]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([DT_Output_9].[Proba_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_9].[Proba_0] IS NULL OR [DT_Output_9].[Proba_0] > 0.0) THEN log([DT_Output_9].[Proba_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_9].[Proba_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_9].[Proba_1] IS NULL OR [DT_Output_9].[Proba_1] > 0.0) THEN log([DT_Output_9].[Proba_1]) ELSE -1.79769313486231e+308 END END) / 2)) / 32.0 AS [Score_0], 1.0 * (CASE WHEN ([DT_Output_9].[Proba_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_9].[Proba_0] IS NULL OR [DT_Output_9].[Proba_0] > 0.0) THEN log([DT_Output_9].[Proba_0]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([DT_Output_9].[Proba_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_9].[Proba_0] IS NULL OR [DT_Output_9].[Proba_0] > 0.0) THEN log([DT_Output_9].[Proba_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_9].[Proba_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_9].[Proba_1] IS NULL OR [DT_Output_9].[Proba_1] > 0.0) THEN log([DT_Output_9].[Proba_1]) ELSE -1.79769313486231e+308 END END) / 2) AS [Proba_0], (1.0 * (CASE WHEN ([DT_Output_9].[Proba_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_9].[Proba_1] IS NULL OR [DT_Output_9].[Proba_1] > 0.0) THEN log([DT_Output_9].[Proba_1]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([DT_Output_9].[Proba_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_9].[Proba_0] IS NULL OR [DT_Output_9].[Proba_0] > 0.0) THEN log([DT_Output_9].[Proba_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_9].[Proba_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_9].[Proba_1] IS NULL OR [DT_Output_9].[Proba_1] > 0.0) THEN log([DT_Output_9].[Proba_1]) ELSE -1.79769313486231e+308 END END) / 2)) / 32.0 AS [Score_1], 1.0 * (CASE WHEN ([DT_Output_9].[Proba_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_9].[Proba_1] IS NULL OR [DT_Output_9].[Proba_1] > 0.0) THEN log([DT_Output_9].[Proba_1]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([DT_Output_9].[Proba_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_9].[Proba_0] IS NULL OR [DT_Output_9].[Proba_0] > 0.0) THEN log([DT_Output_9].[Proba_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_9].[Proba_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_9].[Proba_1] IS NULL OR [DT_Output_9].[Proba_1] > 0.0) THEN log([DT_Output_9].[Proba_1]) ELSE -1.79769313486231e+308 END END) / 2) AS [Proba_1] 
FROM [DT_Output_9]), 
[DT_node_lookup_10] AS 
(SELECT [ADS_sca_2_OUT].[KEY] AS [KEY], CASE WHEN ([ADS_sca_2_OUT].scaler_15 <= -0.38890576362609863) THEN 1 ELSE 2 END AS node_id_2 
FROM [ADS_sca_2_OUT]), 
[DT_node_data_10] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Proba_0] AS [Proba_0], [Values].[LogProba_0] AS [LogProba_0], [Values].[Proba_1] AS [Proba_1], [Values].[LogProba_1] AS [LogProba_1], [Values].[Decision] AS [Decision], [Values].[DecisionProba] AS [DecisionProba] 
FROM (SELECT 1 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 198 AS count, 1 AS depth, 0 AS parent_id, 0.12408513579276456 AS [Proba_0], -2.08678736999 AS [LogProba_0], 0.8759148642072355 AS [Proba_1], -0.132486379747 AS [LogProba_1], 1 AS [Decision], 0.875914864207 AS [DecisionProba] UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 257 AS count, 1 AS depth, 0 AS parent_id, 0.617026301208613 AS [Proba_0], -0.482843628419 AS [LogProba_0], 0.3829736987913871 AS [Proba_1], -0.959788963722 AS [LogProba_1], 0 AS [Decision], 0.617026301209 AS [DecisionProba]) AS [Values]), 
[DT_Output_10] AS 
(SELECT [DT_node_lookup_10].[KEY] AS [KEY], [DT_node_lookup_10].node_id_2 AS node_id_2, [DT_node_data_10].node_id AS node_id, [DT_node_data_10].feature AS feature, [DT_node_data_10].threshold AS threshold, [DT_node_data_10].count AS count, [DT_node_data_10].depth AS depth, [DT_node_data_10].parent_id AS parent_id, [DT_node_data_10].[Proba_0] AS [Proba_0], [DT_node_data_10].[LogProba_0] AS [LogProba_0], [DT_node_data_10].[Proba_1] AS [Proba_1], [DT_node_data_10].[LogProba_1] AS [LogProba_1], [DT_node_data_10].[Decision] AS [Decision], [DT_node_data_10].[DecisionProba] AS [DecisionProba] 
FROM [DT_node_lookup_10] LEFT OUTER JOIN [DT_node_data_10] ON [DT_node_lookup_10].node_id_2 = [DT_node_data_10].node_id), 
[AdaBoost_Estim_10] AS 
(SELECT [DT_Output_10].[KEY] AS [KEY], (1.0 * (CASE WHEN ([DT_Output_10].[Proba_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_10].[Proba_0] IS NULL OR [DT_Output_10].[Proba_0] > 0.0) THEN log([DT_Output_10].[Proba_0]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([DT_Output_10].[Proba_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_10].[Proba_0] IS NULL OR [DT_Output_10].[Proba_0] > 0.0) THEN log([DT_Output_10].[Proba_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_10].[Proba_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_10].[Proba_1] IS NULL OR [DT_Output_10].[Proba_1] > 0.0) THEN log([DT_Output_10].[Proba_1]) ELSE -1.79769313486231e+308 END END) / 2)) / 32.0 AS [Score_0], 1.0 * (CASE WHEN ([DT_Output_10].[Proba_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_10].[Proba_0] IS NULL OR [DT_Output_10].[Proba_0] > 0.0) THEN log([DT_Output_10].[Proba_0]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([DT_Output_10].[Proba_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_10].[Proba_0] IS NULL OR [DT_Output_10].[Proba_0] > 0.0) THEN log([DT_Output_10].[Proba_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_10].[Proba_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_10].[Proba_1] IS NULL OR [DT_Output_10].[Proba_1] > 0.0) THEN log([DT_Output_10].[Proba_1]) ELSE -1.79769313486231e+308 END END) / 2) AS [Proba_0], (1.0 * (CASE WHEN ([DT_Output_10].[Proba_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_10].[Proba_1] IS NULL OR [DT_Output_10].[Proba_1] > 0.0) THEN log([DT_Output_10].[Proba_1]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([DT_Output_10].[Proba_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_10].[Proba_0] IS NULL OR [DT_Output_10].[Proba_0] > 0.0) THEN log([DT_Output_10].[Proba_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_10].[Proba_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_10].[Proba_1] IS NULL OR [DT_Output_10].[Proba_1] > 0.0) THEN log([DT_Output_10].[Proba_1]) ELSE -1.79769313486231e+308 END END) / 2)) / 32.0 AS [Score_1], 1.0 * (CASE WHEN ([DT_Output_10].[Proba_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_10].[Proba_1] IS NULL OR [DT_Output_10].[Proba_1] > 0.0) THEN log([DT_Output_10].[Proba_1]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([DT_Output_10].[Proba_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_10].[Proba_0] IS NULL OR [DT_Output_10].[Proba_0] > 0.0) THEN log([DT_Output_10].[Proba_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_10].[Proba_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_10].[Proba_1] IS NULL OR [DT_Output_10].[Proba_1] > 0.0) THEN log([DT_Output_10].[Proba_1]) ELSE -1.79769313486231e+308 END END) / 2) AS [Proba_1] 
FROM [DT_Output_10]), 
[DT_node_lookup_11] AS 
(SELECT [ADS_sca_2_OUT].[KEY] AS [KEY], CASE WHEN ([ADS_sca_2_OUT].scaler_3 <= 0.42307049036026) THEN 1 ELSE 2 END AS node_id_2 
FROM [ADS_sca_2_OUT]), 
[DT_node_data_11] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Proba_0] AS [Proba_0], [Values].[LogProba_0] AS [LogProba_0], [Values].[Proba_1] AS [Proba_1], [Values].[LogProba_1] AS [LogProba_1], [Values].[Decision] AS [Decision], [Values].[DecisionProba] AS [DecisionProba] 
FROM (SELECT 1 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 320 AS count, 1 AS depth, 0 AS parent_id, 0.32265698838615137 AS [Proba_0], -1.13116547549 AS [LogProba_0], 0.6773430116138486 AS [Proba_1], -0.389577470254 AS [LogProba_1], 1 AS [Decision], 0.677343011614 AS [DecisionProba] UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 135 AS count, 1 AS depth, 0 AS parent_id, 0.8056023794530995 AS [Proba_0], -0.216164983941 AS [LogProba_0], 0.19439762054690043 AS [Proba_1], -1.63784962702 AS [LogProba_1], 0 AS [Decision], 0.805602379453 AS [DecisionProba]) AS [Values]), 
[DT_Output_11] AS 
(SELECT [DT_node_lookup_11].[KEY] AS [KEY], [DT_node_lookup_11].node_id_2 AS node_id_2, [DT_node_data_11].node_id AS node_id, [DT_node_data_11].feature AS feature, [DT_node_data_11].threshold AS threshold, [DT_node_data_11].count AS count, [DT_node_data_11].depth AS depth, [DT_node_data_11].parent_id AS parent_id, [DT_node_data_11].[Proba_0] AS [Proba_0], [DT_node_data_11].[LogProba_0] AS [LogProba_0], [DT_node_data_11].[Proba_1] AS [Proba_1], [DT_node_data_11].[LogProba_1] AS [LogProba_1], [DT_node_data_11].[Decision] AS [Decision], [DT_node_data_11].[DecisionProba] AS [DecisionProba] 
FROM [DT_node_lookup_11] LEFT OUTER JOIN [DT_node_data_11] ON [DT_node_lookup_11].node_id_2 = [DT_node_data_11].node_id), 
[AdaBoost_Estim_11] AS 
(SELECT [DT_Output_11].[KEY] AS [KEY], (1.0 * (CASE WHEN ([DT_Output_11].[Proba_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_11].[Proba_0] IS NULL OR [DT_Output_11].[Proba_0] > 0.0) THEN log([DT_Output_11].[Proba_0]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([DT_Output_11].[Proba_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_11].[Proba_0] IS NULL OR [DT_Output_11].[Proba_0] > 0.0) THEN log([DT_Output_11].[Proba_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_11].[Proba_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_11].[Proba_1] IS NULL OR [DT_Output_11].[Proba_1] > 0.0) THEN log([DT_Output_11].[Proba_1]) ELSE -1.79769313486231e+308 END END) / 2)) / 32.0 AS [Score_0], 1.0 * (CASE WHEN ([DT_Output_11].[Proba_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_11].[Proba_0] IS NULL OR [DT_Output_11].[Proba_0] > 0.0) THEN log([DT_Output_11].[Proba_0]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([DT_Output_11].[Proba_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_11].[Proba_0] IS NULL OR [DT_Output_11].[Proba_0] > 0.0) THEN log([DT_Output_11].[Proba_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_11].[Proba_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_11].[Proba_1] IS NULL OR [DT_Output_11].[Proba_1] > 0.0) THEN log([DT_Output_11].[Proba_1]) ELSE -1.79769313486231e+308 END END) / 2) AS [Proba_0], (1.0 * (CASE WHEN ([DT_Output_11].[Proba_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_11].[Proba_1] IS NULL OR [DT_Output_11].[Proba_1] > 0.0) THEN log([DT_Output_11].[Proba_1]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([DT_Output_11].[Proba_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_11].[Proba_0] IS NULL OR [DT_Output_11].[Proba_0] > 0.0) THEN log([DT_Output_11].[Proba_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_11].[Proba_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_11].[Proba_1] IS NULL OR [DT_Output_11].[Proba_1] > 0.0) THEN log([DT_Output_11].[Proba_1]) ELSE -1.79769313486231e+308 END END) / 2)) / 32.0 AS [Score_1], 1.0 * (CASE WHEN ([DT_Output_11].[Proba_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_11].[Proba_1] IS NULL OR [DT_Output_11].[Proba_1] > 0.0) THEN log([DT_Output_11].[Proba_1]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([DT_Output_11].[Proba_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_11].[Proba_0] IS NULL OR [DT_Output_11].[Proba_0] > 0.0) THEN log([DT_Output_11].[Proba_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_11].[Proba_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_11].[Proba_1] IS NULL OR [DT_Output_11].[Proba_1] > 0.0) THEN log([DT_Output_11].[Proba_1]) ELSE -1.79769313486231e+308 END END) / 2) AS [Proba_1] 
FROM [DT_Output_11]), 
[DT_node_lookup_12] AS 
(SELECT [ADS_sca_2_OUT].[KEY] AS [KEY], CASE WHEN ([ADS_sca_2_OUT].scaler_29 <= 0.7051976919174194) THEN 1 ELSE 2 END AS node_id_2 
FROM [ADS_sca_2_OUT]), 
[DT_node_data_12] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Proba_0] AS [Proba_0], [Values].[LogProba_0] AS [LogProba_0], [Values].[Proba_1] AS [Proba_1], [Values].[LogProba_1] AS [LogProba_1], [Values].[Decision] AS [Decision], [Values].[DecisionProba] AS [DecisionProba] 
FROM (SELECT 1 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 338 AS count, 1 AS depth, 0 AS parent_id, 0.3979578499018765 AS [Proba_0], -0.921409184075 AS [LogProba_0], 0.6020421500981236 AS [Proba_1], -0.50742781935 AS [LogProba_1], 1 AS [Decision], 0.602042150098 AS [DecisionProba] UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 117 AS count, 1 AS depth, 0 AS parent_id, 0.9907903909031662 AS [Proba_0], -0.00925227973535 AS [LogProba_0], 0.009209609096833807 AS [Proba_1], -4.68750787296 AS [LogProba_1], 0 AS [Decision], 0.990790390903 AS [DecisionProba]) AS [Values]), 
[DT_Output_12] AS 
(SELECT [DT_node_lookup_12].[KEY] AS [KEY], [DT_node_lookup_12].node_id_2 AS node_id_2, [DT_node_data_12].node_id AS node_id, [DT_node_data_12].feature AS feature, [DT_node_data_12].threshold AS threshold, [DT_node_data_12].count AS count, [DT_node_data_12].depth AS depth, [DT_node_data_12].parent_id AS parent_id, [DT_node_data_12].[Proba_0] AS [Proba_0], [DT_node_data_12].[LogProba_0] AS [LogProba_0], [DT_node_data_12].[Proba_1] AS [Proba_1], [DT_node_data_12].[LogProba_1] AS [LogProba_1], [DT_node_data_12].[Decision] AS [Decision], [DT_node_data_12].[DecisionProba] AS [DecisionProba] 
FROM [DT_node_lookup_12] LEFT OUTER JOIN [DT_node_data_12] ON [DT_node_lookup_12].node_id_2 = [DT_node_data_12].node_id), 
[AdaBoost_Estim_12] AS 
(SELECT [DT_Output_12].[KEY] AS [KEY], (1.0 * (CASE WHEN ([DT_Output_12].[Proba_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_12].[Proba_0] IS NULL OR [DT_Output_12].[Proba_0] > 0.0) THEN log([DT_Output_12].[Proba_0]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([DT_Output_12].[Proba_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_12].[Proba_0] IS NULL OR [DT_Output_12].[Proba_0] > 0.0) THEN log([DT_Output_12].[Proba_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_12].[Proba_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_12].[Proba_1] IS NULL OR [DT_Output_12].[Proba_1] > 0.0) THEN log([DT_Output_12].[Proba_1]) ELSE -1.79769313486231e+308 END END) / 2)) / 32.0 AS [Score_0], 1.0 * (CASE WHEN ([DT_Output_12].[Proba_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_12].[Proba_0] IS NULL OR [DT_Output_12].[Proba_0] > 0.0) THEN log([DT_Output_12].[Proba_0]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([DT_Output_12].[Proba_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_12].[Proba_0] IS NULL OR [DT_Output_12].[Proba_0] > 0.0) THEN log([DT_Output_12].[Proba_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_12].[Proba_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_12].[Proba_1] IS NULL OR [DT_Output_12].[Proba_1] > 0.0) THEN log([DT_Output_12].[Proba_1]) ELSE -1.79769313486231e+308 END END) / 2) AS [Proba_0], (1.0 * (CASE WHEN ([DT_Output_12].[Proba_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_12].[Proba_1] IS NULL OR [DT_Output_12].[Proba_1] > 0.0) THEN log([DT_Output_12].[Proba_1]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([DT_Output_12].[Proba_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_12].[Proba_0] IS NULL OR [DT_Output_12].[Proba_0] > 0.0) THEN log([DT_Output_12].[Proba_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_12].[Proba_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_12].[Proba_1] IS NULL OR [DT_Output_12].[Proba_1] > 0.0) THEN log([DT_Output_12].[Proba_1]) ELSE -1.79769313486231e+308 END END) / 2)) / 32.0 AS [Score_1], 1.0 * (CASE WHEN ([DT_Output_12].[Proba_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_12].[Proba_1] IS NULL OR [DT_Output_12].[Proba_1] > 0.0) THEN log([DT_Output_12].[Proba_1]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([DT_Output_12].[Proba_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_12].[Proba_0] IS NULL OR [DT_Output_12].[Proba_0] > 0.0) THEN log([DT_Output_12].[Proba_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_12].[Proba_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_12].[Proba_1] IS NULL OR [DT_Output_12].[Proba_1] > 0.0) THEN log([DT_Output_12].[Proba_1]) ELSE -1.79769313486231e+308 END END) / 2) AS [Proba_1] 
FROM [DT_Output_12]), 
[DT_node_lookup_13] AS 
(SELECT [ADS_sca_2_OUT].[KEY] AS [KEY], CASE WHEN ([ADS_sca_2_OUT].scaler_31 <= 0.059978947043418884) THEN 1 ELSE 2 END AS node_id_2 
FROM [ADS_sca_2_OUT]), 
[DT_node_data_13] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Proba_0] AS [Proba_0], [Values].[LogProba_0] AS [LogProba_0], [Values].[Proba_1] AS [Proba_1], [Values].[LogProba_1] AS [LogProba_1], [Values].[Decision] AS [Decision], [Values].[DecisionProba] AS [DecisionProba] 
FROM (SELECT 1 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 286 AS count, 1 AS depth, 0 AS parent_id, 0.6695459073992124 AS [Proba_0], -0.401155546524 AS [LogProba_0], 0.3304540926007876 AS [Proba_1], -1.10728753221 AS [LogProba_1], 0 AS [Decision], 0.669545907399 AS [DecisionProba] UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 169 AS count, 1 AS depth, 0 AS parent_id, 0.09060190503500624 AS [Proba_0], -2.40128003928 AS [LogProba_0], 0.9093980949649938 AS [Proba_1], -0.0949723324197 AS [LogProba_1], 1 AS [Decision], 0.909398094965 AS [DecisionProba]) AS [Values]), 
[DT_Output_13] AS 
(SELECT [DT_node_lookup_13].[KEY] AS [KEY], [DT_node_lookup_13].node_id_2 AS node_id_2, [DT_node_data_13].node_id AS node_id, [DT_node_data_13].feature AS feature, [DT_node_data_13].threshold AS threshold, [DT_node_data_13].count AS count, [DT_node_data_13].depth AS depth, [DT_node_data_13].parent_id AS parent_id, [DT_node_data_13].[Proba_0] AS [Proba_0], [DT_node_data_13].[LogProba_0] AS [LogProba_0], [DT_node_data_13].[Proba_1] AS [Proba_1], [DT_node_data_13].[LogProba_1] AS [LogProba_1], [DT_node_data_13].[Decision] AS [Decision], [DT_node_data_13].[DecisionProba] AS [DecisionProba] 
FROM [DT_node_lookup_13] LEFT OUTER JOIN [DT_node_data_13] ON [DT_node_lookup_13].node_id_2 = [DT_node_data_13].node_id), 
[AdaBoost_Estim_13] AS 
(SELECT [DT_Output_13].[KEY] AS [KEY], (1.0 * (CASE WHEN ([DT_Output_13].[Proba_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_13].[Proba_0] IS NULL OR [DT_Output_13].[Proba_0] > 0.0) THEN log([DT_Output_13].[Proba_0]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([DT_Output_13].[Proba_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_13].[Proba_0] IS NULL OR [DT_Output_13].[Proba_0] > 0.0) THEN log([DT_Output_13].[Proba_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_13].[Proba_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_13].[Proba_1] IS NULL OR [DT_Output_13].[Proba_1] > 0.0) THEN log([DT_Output_13].[Proba_1]) ELSE -1.79769313486231e+308 END END) / 2)) / 32.0 AS [Score_0], 1.0 * (CASE WHEN ([DT_Output_13].[Proba_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_13].[Proba_0] IS NULL OR [DT_Output_13].[Proba_0] > 0.0) THEN log([DT_Output_13].[Proba_0]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([DT_Output_13].[Proba_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_13].[Proba_0] IS NULL OR [DT_Output_13].[Proba_0] > 0.0) THEN log([DT_Output_13].[Proba_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_13].[Proba_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_13].[Proba_1] IS NULL OR [DT_Output_13].[Proba_1] > 0.0) THEN log([DT_Output_13].[Proba_1]) ELSE -1.79769313486231e+308 END END) / 2) AS [Proba_0], (1.0 * (CASE WHEN ([DT_Output_13].[Proba_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_13].[Proba_1] IS NULL OR [DT_Output_13].[Proba_1] > 0.0) THEN log([DT_Output_13].[Proba_1]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([DT_Output_13].[Proba_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_13].[Proba_0] IS NULL OR [DT_Output_13].[Proba_0] > 0.0) THEN log([DT_Output_13].[Proba_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_13].[Proba_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_13].[Proba_1] IS NULL OR [DT_Output_13].[Proba_1] > 0.0) THEN log([DT_Output_13].[Proba_1]) ELSE -1.79769313486231e+308 END END) / 2)) / 32.0 AS [Score_1], 1.0 * (CASE WHEN ([DT_Output_13].[Proba_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_13].[Proba_1] IS NULL OR [DT_Output_13].[Proba_1] > 0.0) THEN log([DT_Output_13].[Proba_1]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([DT_Output_13].[Proba_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_13].[Proba_0] IS NULL OR [DT_Output_13].[Proba_0] > 0.0) THEN log([DT_Output_13].[Proba_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_13].[Proba_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_13].[Proba_1] IS NULL OR [DT_Output_13].[Proba_1] > 0.0) THEN log([DT_Output_13].[Proba_1]) ELSE -1.79769313486231e+308 END END) / 2) AS [Proba_1] 
FROM [DT_Output_13]), 
[DT_node_lookup_14] AS 
(SELECT [ADS_sca_2_OUT].[KEY] AS [KEY], CASE WHEN ([ADS_sca_2_OUT].scaler_9 <= -0.5121870040893555) THEN 1 ELSE 2 END AS node_id_2 
FROM [ADS_sca_2_OUT]), 
[DT_node_data_14] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Proba_0] AS [Proba_0], [Values].[LogProba_0] AS [LogProba_0], [Values].[Proba_1] AS [Proba_1], [Values].[LogProba_1] AS [LogProba_1], [Values].[Decision] AS [Decision], [Values].[DecisionProba] AS [DecisionProba] 
FROM (SELECT 1 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 191 AS count, 1 AS depth, 0 AS parent_id, 0.12813697627517043 AS [Proba_0], -2.05465546009 AS [LogProba_0], 0.8718630237248295 AS [Proba_1], -0.137122950296 AS [LogProba_1], 1 AS [Decision], 0.871863023725 AS [DecisionProba] UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 264 AS count, 1 AS depth, 0 AS parent_id, 0.6268220904685273 AS [Proba_0], -0.467092525872 AS [LogProba_0], 0.3731779095314727 AS [Proba_1], -0.985700003799 AS [LogProba_1], 0 AS [Decision], 0.626822090469 AS [DecisionProba]) AS [Values]), 
[DT_Output_14] AS 
(SELECT [DT_node_lookup_14].[KEY] AS [KEY], [DT_node_lookup_14].node_id_2 AS node_id_2, [DT_node_data_14].node_id AS node_id, [DT_node_data_14].feature AS feature, [DT_node_data_14].threshold AS threshold, [DT_node_data_14].count AS count, [DT_node_data_14].depth AS depth, [DT_node_data_14].parent_id AS parent_id, [DT_node_data_14].[Proba_0] AS [Proba_0], [DT_node_data_14].[LogProba_0] AS [LogProba_0], [DT_node_data_14].[Proba_1] AS [Proba_1], [DT_node_data_14].[LogProba_1] AS [LogProba_1], [DT_node_data_14].[Decision] AS [Decision], [DT_node_data_14].[DecisionProba] AS [DecisionProba] 
FROM [DT_node_lookup_14] LEFT OUTER JOIN [DT_node_data_14] ON [DT_node_lookup_14].node_id_2 = [DT_node_data_14].node_id), 
[AdaBoost_Estim_14] AS 
(SELECT [DT_Output_14].[KEY] AS [KEY], (1.0 * (CASE WHEN ([DT_Output_14].[Proba_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_14].[Proba_0] IS NULL OR [DT_Output_14].[Proba_0] > 0.0) THEN log([DT_Output_14].[Proba_0]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([DT_Output_14].[Proba_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_14].[Proba_0] IS NULL OR [DT_Output_14].[Proba_0] > 0.0) THEN log([DT_Output_14].[Proba_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_14].[Proba_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_14].[Proba_1] IS NULL OR [DT_Output_14].[Proba_1] > 0.0) THEN log([DT_Output_14].[Proba_1]) ELSE -1.79769313486231e+308 END END) / 2)) / 32.0 AS [Score_0], 1.0 * (CASE WHEN ([DT_Output_14].[Proba_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_14].[Proba_0] IS NULL OR [DT_Output_14].[Proba_0] > 0.0) THEN log([DT_Output_14].[Proba_0]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([DT_Output_14].[Proba_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_14].[Proba_0] IS NULL OR [DT_Output_14].[Proba_0] > 0.0) THEN log([DT_Output_14].[Proba_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_14].[Proba_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_14].[Proba_1] IS NULL OR [DT_Output_14].[Proba_1] > 0.0) THEN log([DT_Output_14].[Proba_1]) ELSE -1.79769313486231e+308 END END) / 2) AS [Proba_0], (1.0 * (CASE WHEN ([DT_Output_14].[Proba_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_14].[Proba_1] IS NULL OR [DT_Output_14].[Proba_1] > 0.0) THEN log([DT_Output_14].[Proba_1]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([DT_Output_14].[Proba_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_14].[Proba_0] IS NULL OR [DT_Output_14].[Proba_0] > 0.0) THEN log([DT_Output_14].[Proba_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_14].[Proba_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_14].[Proba_1] IS NULL OR [DT_Output_14].[Proba_1] > 0.0) THEN log([DT_Output_14].[Proba_1]) ELSE -1.79769313486231e+308 END END) / 2)) / 32.0 AS [Score_1], 1.0 * (CASE WHEN ([DT_Output_14].[Proba_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_14].[Proba_1] IS NULL OR [DT_Output_14].[Proba_1] > 0.0) THEN log([DT_Output_14].[Proba_1]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([DT_Output_14].[Proba_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_14].[Proba_0] IS NULL OR [DT_Output_14].[Proba_0] > 0.0) THEN log([DT_Output_14].[Proba_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_14].[Proba_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_14].[Proba_1] IS NULL OR [DT_Output_14].[Proba_1] > 0.0) THEN log([DT_Output_14].[Proba_1]) ELSE -1.79769313486231e+308 END END) / 2) AS [Proba_1] 
FROM [DT_Output_14]), 
[DT_node_lookup_15] AS 
(SELECT [ADS_sca_2_OUT].[KEY] AS [KEY], CASE WHEN ([ADS_sca_2_OUT].scaler_24 <= 0.4174133241176605) THEN 1 ELSE 2 END AS node_id_2 
FROM [ADS_sca_2_OUT]), 
[DT_node_data_15] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Proba_0] AS [Proba_0], [Values].[LogProba_0] AS [LogProba_0], [Values].[Proba_1] AS [Proba_1], [Values].[LogProba_1] AS [LogProba_1], [Values].[Decision] AS [Decision], [Values].[DecisionProba] AS [DecisionProba] 
FROM (SELECT 1 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 332 AS count, 1 AS depth, 0 AS parent_id, 0.3990862553964448 AS [Proba_0], -0.918577706517 AS [LogProba_0], 0.6009137446035552 AS [Proba_1], -0.509303874541 AS [LogProba_1], 1 AS [Decision], 0.600913744604 AS [DecisionProba] UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 123 AS count, 1 AS depth, 0 AS parent_id, 1.0 AS [Proba_0], 0.0 AS [LogProba_0], 0.0 AS [Proba_1], -1.79769313486231e+308 AS [LogProba_1], 0 AS [Decision], 1.0 AS [DecisionProba]) AS [Values]), 
[DT_Output_15] AS 
(SELECT [DT_node_lookup_15].[KEY] AS [KEY], [DT_node_lookup_15].node_id_2 AS node_id_2, [DT_node_data_15].node_id AS node_id, [DT_node_data_15].feature AS feature, [DT_node_data_15].threshold AS threshold, [DT_node_data_15].count AS count, [DT_node_data_15].depth AS depth, [DT_node_data_15].parent_id AS parent_id, [DT_node_data_15].[Proba_0] AS [Proba_0], [DT_node_data_15].[LogProba_0] AS [LogProba_0], [DT_node_data_15].[Proba_1] AS [Proba_1], [DT_node_data_15].[LogProba_1] AS [LogProba_1], [DT_node_data_15].[Decision] AS [Decision], [DT_node_data_15].[DecisionProba] AS [DecisionProba] 
FROM [DT_node_lookup_15] LEFT OUTER JOIN [DT_node_data_15] ON [DT_node_lookup_15].node_id_2 = [DT_node_data_15].node_id), 
[AdaBoost_Estim_15] AS 
(SELECT [DT_Output_15].[KEY] AS [KEY], (1.0 * (CASE WHEN ([DT_Output_15].[Proba_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_15].[Proba_0] IS NULL OR [DT_Output_15].[Proba_0] > 0.0) THEN log([DT_Output_15].[Proba_0]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([DT_Output_15].[Proba_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_15].[Proba_0] IS NULL OR [DT_Output_15].[Proba_0] > 0.0) THEN log([DT_Output_15].[Proba_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_15].[Proba_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_15].[Proba_1] IS NULL OR [DT_Output_15].[Proba_1] > 0.0) THEN log([DT_Output_15].[Proba_1]) ELSE -1.79769313486231e+308 END END) / 2)) / 32.0 AS [Score_0], 1.0 * (CASE WHEN ([DT_Output_15].[Proba_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_15].[Proba_0] IS NULL OR [DT_Output_15].[Proba_0] > 0.0) THEN log([DT_Output_15].[Proba_0]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([DT_Output_15].[Proba_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_15].[Proba_0] IS NULL OR [DT_Output_15].[Proba_0] > 0.0) THEN log([DT_Output_15].[Proba_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_15].[Proba_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_15].[Proba_1] IS NULL OR [DT_Output_15].[Proba_1] > 0.0) THEN log([DT_Output_15].[Proba_1]) ELSE -1.79769313486231e+308 END END) / 2) AS [Proba_0], (1.0 * (CASE WHEN ([DT_Output_15].[Proba_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_15].[Proba_1] IS NULL OR [DT_Output_15].[Proba_1] > 0.0) THEN log([DT_Output_15].[Proba_1]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([DT_Output_15].[Proba_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_15].[Proba_0] IS NULL OR [DT_Output_15].[Proba_0] > 0.0) THEN log([DT_Output_15].[Proba_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_15].[Proba_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_15].[Proba_1] IS NULL OR [DT_Output_15].[Proba_1] > 0.0) THEN log([DT_Output_15].[Proba_1]) ELSE -1.79769313486231e+308 END END) / 2)) / 32.0 AS [Score_1], 1.0 * (CASE WHEN ([DT_Output_15].[Proba_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_15].[Proba_1] IS NULL OR [DT_Output_15].[Proba_1] > 0.0) THEN log([DT_Output_15].[Proba_1]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([DT_Output_15].[Proba_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_15].[Proba_0] IS NULL OR [DT_Output_15].[Proba_0] > 0.0) THEN log([DT_Output_15].[Proba_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_15].[Proba_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_15].[Proba_1] IS NULL OR [DT_Output_15].[Proba_1] > 0.0) THEN log([DT_Output_15].[Proba_1]) ELSE -1.79769313486231e+308 END END) / 2) AS [Proba_1] 
FROM [DT_Output_15]), 
[DT_node_lookup_16] AS 
(SELECT [ADS_sca_2_OUT].[KEY] AS [KEY], CASE WHEN ([ADS_sca_2_OUT].scaler_26 <= 0.8054454326629639) THEN 1 ELSE 2 END AS node_id_2 
FROM [ADS_sca_2_OUT]), 
[DT_node_data_16] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Proba_0] AS [Proba_0], [Values].[LogProba_0] AS [LogProba_0], [Values].[Proba_1] AS [Proba_1], [Values].[LogProba_1] AS [LogProba_1], [Values].[Decision] AS [Decision], [Values].[DecisionProba] AS [DecisionProba] 
FROM (SELECT 1 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 365 AS count, 1 AS depth, 0 AS parent_id, 0.3763761460163705 AS [Proba_0], -0.977166247306 AS [LogProba_0], 0.6236238539836296 AS [Proba_1], -0.472207890472 AS [LogProba_1], 1 AS [Decision], 0.623623853984 AS [DecisionProba] UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 90 AS count, 1 AS depth, 0 AS parent_id, 0.9483876551035344 AS [Proba_0], -0.0529919414261 AS [LogProba_0], 0.05161234489646558 AS [Proba_1], -2.96399439293 AS [LogProba_1], 0 AS [Decision], 0.948387655104 AS [DecisionProba]) AS [Values]), 
[DT_Output_16] AS 
(SELECT [DT_node_lookup_16].[KEY] AS [KEY], [DT_node_lookup_16].node_id_2 AS node_id_2, [DT_node_data_16].node_id AS node_id, [DT_node_data_16].feature AS feature, [DT_node_data_16].threshold AS threshold, [DT_node_data_16].count AS count, [DT_node_data_16].depth AS depth, [DT_node_data_16].parent_id AS parent_id, [DT_node_data_16].[Proba_0] AS [Proba_0], [DT_node_data_16].[LogProba_0] AS [LogProba_0], [DT_node_data_16].[Proba_1] AS [Proba_1], [DT_node_data_16].[LogProba_1] AS [LogProba_1], [DT_node_data_16].[Decision] AS [Decision], [DT_node_data_16].[DecisionProba] AS [DecisionProba] 
FROM [DT_node_lookup_16] LEFT OUTER JOIN [DT_node_data_16] ON [DT_node_lookup_16].node_id_2 = [DT_node_data_16].node_id), 
[AdaBoost_Estim_16] AS 
(SELECT [DT_Output_16].[KEY] AS [KEY], (1.0 * (CASE WHEN ([DT_Output_16].[Proba_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_16].[Proba_0] IS NULL OR [DT_Output_16].[Proba_0] > 0.0) THEN log([DT_Output_16].[Proba_0]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([DT_Output_16].[Proba_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_16].[Proba_0] IS NULL OR [DT_Output_16].[Proba_0] > 0.0) THEN log([DT_Output_16].[Proba_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_16].[Proba_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_16].[Proba_1] IS NULL OR [DT_Output_16].[Proba_1] > 0.0) THEN log([DT_Output_16].[Proba_1]) ELSE -1.79769313486231e+308 END END) / 2)) / 32.0 AS [Score_0], 1.0 * (CASE WHEN ([DT_Output_16].[Proba_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_16].[Proba_0] IS NULL OR [DT_Output_16].[Proba_0] > 0.0) THEN log([DT_Output_16].[Proba_0]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([DT_Output_16].[Proba_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_16].[Proba_0] IS NULL OR [DT_Output_16].[Proba_0] > 0.0) THEN log([DT_Output_16].[Proba_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_16].[Proba_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_16].[Proba_1] IS NULL OR [DT_Output_16].[Proba_1] > 0.0) THEN log([DT_Output_16].[Proba_1]) ELSE -1.79769313486231e+308 END END) / 2) AS [Proba_0], (1.0 * (CASE WHEN ([DT_Output_16].[Proba_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_16].[Proba_1] IS NULL OR [DT_Output_16].[Proba_1] > 0.0) THEN log([DT_Output_16].[Proba_1]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([DT_Output_16].[Proba_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_16].[Proba_0] IS NULL OR [DT_Output_16].[Proba_0] > 0.0) THEN log([DT_Output_16].[Proba_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_16].[Proba_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_16].[Proba_1] IS NULL OR [DT_Output_16].[Proba_1] > 0.0) THEN log([DT_Output_16].[Proba_1]) ELSE -1.79769313486231e+308 END END) / 2)) / 32.0 AS [Score_1], 1.0 * (CASE WHEN ([DT_Output_16].[Proba_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_16].[Proba_1] IS NULL OR [DT_Output_16].[Proba_1] > 0.0) THEN log([DT_Output_16].[Proba_1]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([DT_Output_16].[Proba_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_16].[Proba_0] IS NULL OR [DT_Output_16].[Proba_0] > 0.0) THEN log([DT_Output_16].[Proba_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_16].[Proba_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_16].[Proba_1] IS NULL OR [DT_Output_16].[Proba_1] > 0.0) THEN log([DT_Output_16].[Proba_1]) ELSE -1.79769313486231e+308 END END) / 2) AS [Proba_1] 
FROM [DT_Output_16]), 
[DT_node_lookup_17] AS 
(SELECT [ADS_sca_2_OUT].[KEY] AS [KEY], CASE WHEN ([ADS_sca_2_OUT].scaler_17 <= -0.769645094871521) THEN 1 ELSE 2 END AS node_id_2 
FROM [ADS_sca_2_OUT]), 
[DT_node_data_17] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Proba_0] AS [Proba_0], [Values].[LogProba_0] AS [LogProba_0], [Values].[Proba_1] AS [Proba_1], [Values].[LogProba_1] AS [LogProba_1], [Values].[Decision] AS [Decision], [Values].[DecisionProba] AS [DecisionProba] 
FROM (SELECT 1 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 89 AS count, 1 AS depth, 0 AS parent_id, 0.8724043081339136 AS [Proba_0], -0.136502306412 AS [LogProba_0], 0.12759569186608644 AS [Proba_1], -2.05888867145 AS [LogProba_1], 0 AS [Decision], 0.872404308134 AS [DecisionProba] UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 366 AS count, 1 AS depth, 0 AS parent_id, 0.3111242581790128 AS [Proba_0], -1.16756290262 AS [LogProba_0], 0.6888757418209871 AS [Proba_1], -0.372694369921 AS [LogProba_1], 1 AS [Decision], 0.688875741821 AS [DecisionProba]) AS [Values]), 
[DT_Output_17] AS 
(SELECT [DT_node_lookup_17].[KEY] AS [KEY], [DT_node_lookup_17].node_id_2 AS node_id_2, [DT_node_data_17].node_id AS node_id, [DT_node_data_17].feature AS feature, [DT_node_data_17].threshold AS threshold, [DT_node_data_17].count AS count, [DT_node_data_17].depth AS depth, [DT_node_data_17].parent_id AS parent_id, [DT_node_data_17].[Proba_0] AS [Proba_0], [DT_node_data_17].[LogProba_0] AS [LogProba_0], [DT_node_data_17].[Proba_1] AS [Proba_1], [DT_node_data_17].[LogProba_1] AS [LogProba_1], [DT_node_data_17].[Decision] AS [Decision], [DT_node_data_17].[DecisionProba] AS [DecisionProba] 
FROM [DT_node_lookup_17] LEFT OUTER JOIN [DT_node_data_17] ON [DT_node_lookup_17].node_id_2 = [DT_node_data_17].node_id), 
[AdaBoost_Estim_17] AS 
(SELECT [DT_Output_17].[KEY] AS [KEY], (1.0 * (CASE WHEN ([DT_Output_17].[Proba_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_17].[Proba_0] IS NULL OR [DT_Output_17].[Proba_0] > 0.0) THEN log([DT_Output_17].[Proba_0]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([DT_Output_17].[Proba_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_17].[Proba_0] IS NULL OR [DT_Output_17].[Proba_0] > 0.0) THEN log([DT_Output_17].[Proba_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_17].[Proba_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_17].[Proba_1] IS NULL OR [DT_Output_17].[Proba_1] > 0.0) THEN log([DT_Output_17].[Proba_1]) ELSE -1.79769313486231e+308 END END) / 2)) / 32.0 AS [Score_0], 1.0 * (CASE WHEN ([DT_Output_17].[Proba_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_17].[Proba_0] IS NULL OR [DT_Output_17].[Proba_0] > 0.0) THEN log([DT_Output_17].[Proba_0]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([DT_Output_17].[Proba_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_17].[Proba_0] IS NULL OR [DT_Output_17].[Proba_0] > 0.0) THEN log([DT_Output_17].[Proba_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_17].[Proba_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_17].[Proba_1] IS NULL OR [DT_Output_17].[Proba_1] > 0.0) THEN log([DT_Output_17].[Proba_1]) ELSE -1.79769313486231e+308 END END) / 2) AS [Proba_0], (1.0 * (CASE WHEN ([DT_Output_17].[Proba_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_17].[Proba_1] IS NULL OR [DT_Output_17].[Proba_1] > 0.0) THEN log([DT_Output_17].[Proba_1]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([DT_Output_17].[Proba_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_17].[Proba_0] IS NULL OR [DT_Output_17].[Proba_0] > 0.0) THEN log([DT_Output_17].[Proba_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_17].[Proba_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_17].[Proba_1] IS NULL OR [DT_Output_17].[Proba_1] > 0.0) THEN log([DT_Output_17].[Proba_1]) ELSE -1.79769313486231e+308 END END) / 2)) / 32.0 AS [Score_1], 1.0 * (CASE WHEN ([DT_Output_17].[Proba_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_17].[Proba_1] IS NULL OR [DT_Output_17].[Proba_1] > 0.0) THEN log([DT_Output_17].[Proba_1]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([DT_Output_17].[Proba_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_17].[Proba_0] IS NULL OR [DT_Output_17].[Proba_0] > 0.0) THEN log([DT_Output_17].[Proba_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_17].[Proba_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_17].[Proba_1] IS NULL OR [DT_Output_17].[Proba_1] > 0.0) THEN log([DT_Output_17].[Proba_1]) ELSE -1.79769313486231e+308 END END) / 2) AS [Proba_1] 
FROM [DT_Output_17]), 
[DT_node_lookup_18] AS 
(SELECT [ADS_sca_2_OUT].[KEY] AS [KEY], CASE WHEN ([ADS_sca_2_OUT].scaler_19 <= -0.018361877650022507) THEN 1 ELSE 2 END AS node_id_2 
FROM [ADS_sca_2_OUT]), 
[DT_node_data_18] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Proba_0] AS [Proba_0], [Values].[LogProba_0] AS [LogProba_0], [Values].[Proba_1] AS [Proba_1], [Values].[LogProba_1] AS [LogProba_1], [Values].[Decision] AS [Decision], [Values].[DecisionProba] AS [DecisionProba] 
FROM (SELECT 1 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 254 AS count, 1 AS depth, 0 AS parent_id, 0.17182323225125057 AS [Proba_0], -1.7612890501 AS [LogProba_0], 0.8281767677487494 AS [Proba_1], -0.188528659763 AS [LogProba_1], 1 AS [Decision], 0.828176767749 AS [DecisionProba] UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 201 AS count, 1 AS depth, 0 AS parent_id, 0.7084974322753838 AS [Proba_0], -0.344608844028 AS [LogProba_0], 0.2915025677246163 AS [Proba_1], -1.23270646457 AS [LogProba_1], 0 AS [Decision], 0.708497432275 AS [DecisionProba]) AS [Values]), 
[DT_Output_18] AS 
(SELECT [DT_node_lookup_18].[KEY] AS [KEY], [DT_node_lookup_18].node_id_2 AS node_id_2, [DT_node_data_18].node_id AS node_id, [DT_node_data_18].feature AS feature, [DT_node_data_18].threshold AS threshold, [DT_node_data_18].count AS count, [DT_node_data_18].depth AS depth, [DT_node_data_18].parent_id AS parent_id, [DT_node_data_18].[Proba_0] AS [Proba_0], [DT_node_data_18].[LogProba_0] AS [LogProba_0], [DT_node_data_18].[Proba_1] AS [Proba_1], [DT_node_data_18].[LogProba_1] AS [LogProba_1], [DT_node_data_18].[Decision] AS [Decision], [DT_node_data_18].[DecisionProba] AS [DecisionProba] 
FROM [DT_node_lookup_18] LEFT OUTER JOIN [DT_node_data_18] ON [DT_node_lookup_18].node_id_2 = [DT_node_data_18].node_id), 
[AdaBoost_Estim_18] AS 
(SELECT [DT_Output_18].[KEY] AS [KEY], (1.0 * (CASE WHEN ([DT_Output_18].[Proba_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_18].[Proba_0] IS NULL OR [DT_Output_18].[Proba_0] > 0.0) THEN log([DT_Output_18].[Proba_0]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([DT_Output_18].[Proba_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_18].[Proba_0] IS NULL OR [DT_Output_18].[Proba_0] > 0.0) THEN log([DT_Output_18].[Proba_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_18].[Proba_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_18].[Proba_1] IS NULL OR [DT_Output_18].[Proba_1] > 0.0) THEN log([DT_Output_18].[Proba_1]) ELSE -1.79769313486231e+308 END END) / 2)) / 32.0 AS [Score_0], 1.0 * (CASE WHEN ([DT_Output_18].[Proba_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_18].[Proba_0] IS NULL OR [DT_Output_18].[Proba_0] > 0.0) THEN log([DT_Output_18].[Proba_0]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([DT_Output_18].[Proba_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_18].[Proba_0] IS NULL OR [DT_Output_18].[Proba_0] > 0.0) THEN log([DT_Output_18].[Proba_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_18].[Proba_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_18].[Proba_1] IS NULL OR [DT_Output_18].[Proba_1] > 0.0) THEN log([DT_Output_18].[Proba_1]) ELSE -1.79769313486231e+308 END END) / 2) AS [Proba_0], (1.0 * (CASE WHEN ([DT_Output_18].[Proba_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_18].[Proba_1] IS NULL OR [DT_Output_18].[Proba_1] > 0.0) THEN log([DT_Output_18].[Proba_1]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([DT_Output_18].[Proba_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_18].[Proba_0] IS NULL OR [DT_Output_18].[Proba_0] > 0.0) THEN log([DT_Output_18].[Proba_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_18].[Proba_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_18].[Proba_1] IS NULL OR [DT_Output_18].[Proba_1] > 0.0) THEN log([DT_Output_18].[Proba_1]) ELSE -1.79769313486231e+308 END END) / 2)) / 32.0 AS [Score_1], 1.0 * (CASE WHEN ([DT_Output_18].[Proba_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_18].[Proba_1] IS NULL OR [DT_Output_18].[Proba_1] > 0.0) THEN log([DT_Output_18].[Proba_1]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([DT_Output_18].[Proba_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_18].[Proba_0] IS NULL OR [DT_Output_18].[Proba_0] > 0.0) THEN log([DT_Output_18].[Proba_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_18].[Proba_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_18].[Proba_1] IS NULL OR [DT_Output_18].[Proba_1] > 0.0) THEN log([DT_Output_18].[Proba_1]) ELSE -1.79769313486231e+308 END END) / 2) AS [Proba_1] 
FROM [DT_Output_18]), 
[DT_node_lookup_19] AS 
(SELECT [ADS_sca_2_OUT].[KEY] AS [KEY], CASE WHEN ([ADS_sca_2_OUT].scaler_23 <= 0.6685342788696289) THEN 1 ELSE 2 END AS node_id_2 
FROM [ADS_sca_2_OUT]), 
[DT_node_data_19] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Proba_0] AS [Proba_0], [Values].[LogProba_0] AS [LogProba_0], [Values].[Proba_1] AS [Proba_1], [Values].[LogProba_1] AS [LogProba_1], [Values].[Decision] AS [Decision], [Values].[DecisionProba] AS [DecisionProba] 
FROM (SELECT 1 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 348 AS count, 1 AS depth, 0 AS parent_id, 0.2858969300308735 AS [Proba_0], -1.25212391762 AS [LogProba_0], 0.7141030699691265 AS [Proba_1], -0.336727971362 AS [LogProba_1], 1 AS [Decision], 0.714103069969 AS [DecisionProba] UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 107 AS count, 1 AS depth, 0 AS parent_id, 0.8112243245117217 AS [Proba_0], -0.209210660757 AS [LogProba_0], 0.1887756754882784 AS [Proba_1], -1.66719587103 AS [LogProba_1], 0 AS [Decision], 0.811224324512 AS [DecisionProba]) AS [Values]), 
[DT_Output_19] AS 
(SELECT [DT_node_lookup_19].[KEY] AS [KEY], [DT_node_lookup_19].node_id_2 AS node_id_2, [DT_node_data_19].node_id AS node_id, [DT_node_data_19].feature AS feature, [DT_node_data_19].threshold AS threshold, [DT_node_data_19].count AS count, [DT_node_data_19].depth AS depth, [DT_node_data_19].parent_id AS parent_id, [DT_node_data_19].[Proba_0] AS [Proba_0], [DT_node_data_19].[LogProba_0] AS [LogProba_0], [DT_node_data_19].[Proba_1] AS [Proba_1], [DT_node_data_19].[LogProba_1] AS [LogProba_1], [DT_node_data_19].[Decision] AS [Decision], [DT_node_data_19].[DecisionProba] AS [DecisionProba] 
FROM [DT_node_lookup_19] LEFT OUTER JOIN [DT_node_data_19] ON [DT_node_lookup_19].node_id_2 = [DT_node_data_19].node_id), 
[AdaBoost_Estim_19] AS 
(SELECT [DT_Output_19].[KEY] AS [KEY], (1.0 * (CASE WHEN ([DT_Output_19].[Proba_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_19].[Proba_0] IS NULL OR [DT_Output_19].[Proba_0] > 0.0) THEN log([DT_Output_19].[Proba_0]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([DT_Output_19].[Proba_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_19].[Proba_0] IS NULL OR [DT_Output_19].[Proba_0] > 0.0) THEN log([DT_Output_19].[Proba_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_19].[Proba_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_19].[Proba_1] IS NULL OR [DT_Output_19].[Proba_1] > 0.0) THEN log([DT_Output_19].[Proba_1]) ELSE -1.79769313486231e+308 END END) / 2)) / 32.0 AS [Score_0], 1.0 * (CASE WHEN ([DT_Output_19].[Proba_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_19].[Proba_0] IS NULL OR [DT_Output_19].[Proba_0] > 0.0) THEN log([DT_Output_19].[Proba_0]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([DT_Output_19].[Proba_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_19].[Proba_0] IS NULL OR [DT_Output_19].[Proba_0] > 0.0) THEN log([DT_Output_19].[Proba_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_19].[Proba_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_19].[Proba_1] IS NULL OR [DT_Output_19].[Proba_1] > 0.0) THEN log([DT_Output_19].[Proba_1]) ELSE -1.79769313486231e+308 END END) / 2) AS [Proba_0], (1.0 * (CASE WHEN ([DT_Output_19].[Proba_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_19].[Proba_1] IS NULL OR [DT_Output_19].[Proba_1] > 0.0) THEN log([DT_Output_19].[Proba_1]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([DT_Output_19].[Proba_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_19].[Proba_0] IS NULL OR [DT_Output_19].[Proba_0] > 0.0) THEN log([DT_Output_19].[Proba_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_19].[Proba_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_19].[Proba_1] IS NULL OR [DT_Output_19].[Proba_1] > 0.0) THEN log([DT_Output_19].[Proba_1]) ELSE -1.79769313486231e+308 END END) / 2)) / 32.0 AS [Score_1], 1.0 * (CASE WHEN ([DT_Output_19].[Proba_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_19].[Proba_1] IS NULL OR [DT_Output_19].[Proba_1] > 0.0) THEN log([DT_Output_19].[Proba_1]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([DT_Output_19].[Proba_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_19].[Proba_0] IS NULL OR [DT_Output_19].[Proba_0] > 0.0) THEN log([DT_Output_19].[Proba_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_19].[Proba_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_19].[Proba_1] IS NULL OR [DT_Output_19].[Proba_1] > 0.0) THEN log([DT_Output_19].[Proba_1]) ELSE -1.79769313486231e+308 END END) / 2) AS [Proba_1] 
FROM [DT_Output_19]), 
[DT_node_lookup_20] AS 
(SELECT [ADS_sca_2_OUT].[KEY] AS [KEY], CASE WHEN ([ADS_sca_2_OUT].scaler_26 <= -1.0364580154418945) THEN 1 ELSE 2 END AS node_id_2 
FROM [ADS_sca_2_OUT]), 
[DT_node_data_20] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Proba_0] AS [Proba_0], [Values].[LogProba_0] AS [LogProba_0], [Values].[Proba_1] AS [Proba_1], [Values].[LogProba_1] AS [LogProba_1], [Values].[Decision] AS [Decision], [Values].[DecisionProba] AS [DecisionProba] 
FROM (SELECT 1 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 69 AS count, 1 AS depth, 0 AS parent_id, 0.10916730664178391 AS [Proba_0], -2.21487365022 AS [LogProba_0], 0.890832693358216 AS [Proba_1], -0.115598643152 AS [LogProba_1], 1 AS [Decision], 0.890832693358 AS [DecisionProba] UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 386 AS count, 1 AS depth, 0 AS parent_id, 0.6195558020605263 AS [Proba_0], -0.478752506004 AS [LogProba_0], 0.3804441979394738 AS [Proba_1], -0.966415766996 AS [LogProba_1], 0 AS [Decision], 0.619555802061 AS [DecisionProba]) AS [Values]), 
[DT_Output_20] AS 
(SELECT [DT_node_lookup_20].[KEY] AS [KEY], [DT_node_lookup_20].node_id_2 AS node_id_2, [DT_node_data_20].node_id AS node_id, [DT_node_data_20].feature AS feature, [DT_node_data_20].threshold AS threshold, [DT_node_data_20].count AS count, [DT_node_data_20].depth AS depth, [DT_node_data_20].parent_id AS parent_id, [DT_node_data_20].[Proba_0] AS [Proba_0], [DT_node_data_20].[LogProba_0] AS [LogProba_0], [DT_node_data_20].[Proba_1] AS [Proba_1], [DT_node_data_20].[LogProba_1] AS [LogProba_1], [DT_node_data_20].[Decision] AS [Decision], [DT_node_data_20].[DecisionProba] AS [DecisionProba] 
FROM [DT_node_lookup_20] LEFT OUTER JOIN [DT_node_data_20] ON [DT_node_lookup_20].node_id_2 = [DT_node_data_20].node_id), 
[AdaBoost_Estim_20] AS 
(SELECT [DT_Output_20].[KEY] AS [KEY], (1.0 * (CASE WHEN ([DT_Output_20].[Proba_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_20].[Proba_0] IS NULL OR [DT_Output_20].[Proba_0] > 0.0) THEN log([DT_Output_20].[Proba_0]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([DT_Output_20].[Proba_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_20].[Proba_0] IS NULL OR [DT_Output_20].[Proba_0] > 0.0) THEN log([DT_Output_20].[Proba_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_20].[Proba_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_20].[Proba_1] IS NULL OR [DT_Output_20].[Proba_1] > 0.0) THEN log([DT_Output_20].[Proba_1]) ELSE -1.79769313486231e+308 END END) / 2)) / 32.0 AS [Score_0], 1.0 * (CASE WHEN ([DT_Output_20].[Proba_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_20].[Proba_0] IS NULL OR [DT_Output_20].[Proba_0] > 0.0) THEN log([DT_Output_20].[Proba_0]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([DT_Output_20].[Proba_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_20].[Proba_0] IS NULL OR [DT_Output_20].[Proba_0] > 0.0) THEN log([DT_Output_20].[Proba_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_20].[Proba_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_20].[Proba_1] IS NULL OR [DT_Output_20].[Proba_1] > 0.0) THEN log([DT_Output_20].[Proba_1]) ELSE -1.79769313486231e+308 END END) / 2) AS [Proba_0], (1.0 * (CASE WHEN ([DT_Output_20].[Proba_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_20].[Proba_1] IS NULL OR [DT_Output_20].[Proba_1] > 0.0) THEN log([DT_Output_20].[Proba_1]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([DT_Output_20].[Proba_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_20].[Proba_0] IS NULL OR [DT_Output_20].[Proba_0] > 0.0) THEN log([DT_Output_20].[Proba_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_20].[Proba_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_20].[Proba_1] IS NULL OR [DT_Output_20].[Proba_1] > 0.0) THEN log([DT_Output_20].[Proba_1]) ELSE -1.79769313486231e+308 END END) / 2)) / 32.0 AS [Score_1], 1.0 * (CASE WHEN ([DT_Output_20].[Proba_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_20].[Proba_1] IS NULL OR [DT_Output_20].[Proba_1] > 0.0) THEN log([DT_Output_20].[Proba_1]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([DT_Output_20].[Proba_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_20].[Proba_0] IS NULL OR [DT_Output_20].[Proba_0] > 0.0) THEN log([DT_Output_20].[Proba_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_20].[Proba_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_20].[Proba_1] IS NULL OR [DT_Output_20].[Proba_1] > 0.0) THEN log([DT_Output_20].[Proba_1]) ELSE -1.79769313486231e+308 END END) / 2) AS [Proba_1] 
FROM [DT_Output_20]), 
[DT_node_lookup_21] AS 
(SELECT [ADS_sca_2_OUT].[KEY] AS [KEY], CASE WHEN ([ADS_sca_2_OUT].scaler_31 <= -0.8485981225967407) THEN 1 ELSE 2 END AS node_id_2 
FROM [ADS_sca_2_OUT]), 
[DT_node_data_21] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Proba_0] AS [Proba_0], [Values].[LogProba_0] AS [LogProba_0], [Values].[Proba_1] AS [Proba_1], [Values].[LogProba_1] AS [LogProba_1], [Values].[Decision] AS [Decision], [Values].[DecisionProba] AS [DecisionProba] 
FROM (SELECT 1 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 82 AS count, 1 AS depth, 0 AS parent_id, 0.7757915651672005 AS [Proba_0], -0.253871396467 AS [LogProba_0], 0.2242084348327994 AS [Proba_1], -1.49517914714 AS [LogProba_1], 0 AS [Decision], 0.775791565167 AS [DecisionProba] UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 373 AS count, 1 AS depth, 0 AS parent_id, 0.33558921916951573 AS [Proba_0], -1.09186742895 AS [LogProba_0], 0.6644107808304843 AS [Proba_1], -0.408854674959 AS [LogProba_1], 1 AS [Decision], 0.66441078083 AS [DecisionProba]) AS [Values]), 
[DT_Output_21] AS 
(SELECT [DT_node_lookup_21].[KEY] AS [KEY], [DT_node_lookup_21].node_id_2 AS node_id_2, [DT_node_data_21].node_id AS node_id, [DT_node_data_21].feature AS feature, [DT_node_data_21].threshold AS threshold, [DT_node_data_21].count AS count, [DT_node_data_21].depth AS depth, [DT_node_data_21].parent_id AS parent_id, [DT_node_data_21].[Proba_0] AS [Proba_0], [DT_node_data_21].[LogProba_0] AS [LogProba_0], [DT_node_data_21].[Proba_1] AS [Proba_1], [DT_node_data_21].[LogProba_1] AS [LogProba_1], [DT_node_data_21].[Decision] AS [Decision], [DT_node_data_21].[DecisionProba] AS [DecisionProba] 
FROM [DT_node_lookup_21] LEFT OUTER JOIN [DT_node_data_21] ON [DT_node_lookup_21].node_id_2 = [DT_node_data_21].node_id), 
[AdaBoost_Estim_21] AS 
(SELECT [DT_Output_21].[KEY] AS [KEY], (1.0 * (CASE WHEN ([DT_Output_21].[Proba_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_21].[Proba_0] IS NULL OR [DT_Output_21].[Proba_0] > 0.0) THEN log([DT_Output_21].[Proba_0]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([DT_Output_21].[Proba_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_21].[Proba_0] IS NULL OR [DT_Output_21].[Proba_0] > 0.0) THEN log([DT_Output_21].[Proba_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_21].[Proba_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_21].[Proba_1] IS NULL OR [DT_Output_21].[Proba_1] > 0.0) THEN log([DT_Output_21].[Proba_1]) ELSE -1.79769313486231e+308 END END) / 2)) / 32.0 AS [Score_0], 1.0 * (CASE WHEN ([DT_Output_21].[Proba_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_21].[Proba_0] IS NULL OR [DT_Output_21].[Proba_0] > 0.0) THEN log([DT_Output_21].[Proba_0]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([DT_Output_21].[Proba_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_21].[Proba_0] IS NULL OR [DT_Output_21].[Proba_0] > 0.0) THEN log([DT_Output_21].[Proba_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_21].[Proba_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_21].[Proba_1] IS NULL OR [DT_Output_21].[Proba_1] > 0.0) THEN log([DT_Output_21].[Proba_1]) ELSE -1.79769313486231e+308 END END) / 2) AS [Proba_0], (1.0 * (CASE WHEN ([DT_Output_21].[Proba_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_21].[Proba_1] IS NULL OR [DT_Output_21].[Proba_1] > 0.0) THEN log([DT_Output_21].[Proba_1]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([DT_Output_21].[Proba_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_21].[Proba_0] IS NULL OR [DT_Output_21].[Proba_0] > 0.0) THEN log([DT_Output_21].[Proba_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_21].[Proba_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_21].[Proba_1] IS NULL OR [DT_Output_21].[Proba_1] > 0.0) THEN log([DT_Output_21].[Proba_1]) ELSE -1.79769313486231e+308 END END) / 2)) / 32.0 AS [Score_1], 1.0 * (CASE WHEN ([DT_Output_21].[Proba_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_21].[Proba_1] IS NULL OR [DT_Output_21].[Proba_1] > 0.0) THEN log([DT_Output_21].[Proba_1]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([DT_Output_21].[Proba_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_21].[Proba_0] IS NULL OR [DT_Output_21].[Proba_0] > 0.0) THEN log([DT_Output_21].[Proba_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_21].[Proba_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_21].[Proba_1] IS NULL OR [DT_Output_21].[Proba_1] > 0.0) THEN log([DT_Output_21].[Proba_1]) ELSE -1.79769313486231e+308 END END) / 2) AS [Proba_1] 
FROM [DT_Output_21]), 
[DT_node_lookup_22] AS 
(SELECT [ADS_sca_2_OUT].[KEY] AS [KEY], CASE WHEN ([ADS_sca_2_OUT].scaler_28 <= 0.2671896815299988) THEN 1 ELSE 2 END AS node_id_2 
FROM [ADS_sca_2_OUT]), 
[DT_node_data_22] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Proba_0] AS [Proba_0], [Values].[LogProba_0] AS [LogProba_0], [Values].[Proba_1] AS [Proba_1], [Values].[LogProba_1] AS [LogProba_1], [Values].[Decision] AS [Decision], [Values].[DecisionProba] AS [DecisionProba] 
FROM (SELECT 1 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 302 AS count, 1 AS depth, 0 AS parent_id, 0.27412129533267054 AS [Proba_0], -1.29418458685 AS [LogProba_0], 0.7258787046673294 AS [Proba_1], -0.320372351577 AS [LogProba_1], 1 AS [Decision], 0.725878704667 AS [DecisionProba] UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 153 AS count, 1 AS depth, 0 AS parent_id, 0.7884355741782004 AS [Proba_0], -0.23770458273 AS [LogProba_0], 0.2115644258217996 AS [Proba_1], -1.55322571307 AS [LogProba_1], 0 AS [Decision], 0.788435574178 AS [DecisionProba]) AS [Values]), 
[DT_Output_22] AS 
(SELECT [DT_node_lookup_22].[KEY] AS [KEY], [DT_node_lookup_22].node_id_2 AS node_id_2, [DT_node_data_22].node_id AS node_id, [DT_node_data_22].feature AS feature, [DT_node_data_22].threshold AS threshold, [DT_node_data_22].count AS count, [DT_node_data_22].depth AS depth, [DT_node_data_22].parent_id AS parent_id, [DT_node_data_22].[Proba_0] AS [Proba_0], [DT_node_data_22].[LogProba_0] AS [LogProba_0], [DT_node_data_22].[Proba_1] AS [Proba_1], [DT_node_data_22].[LogProba_1] AS [LogProba_1], [DT_node_data_22].[Decision] AS [Decision], [DT_node_data_22].[DecisionProba] AS [DecisionProba] 
FROM [DT_node_lookup_22] LEFT OUTER JOIN [DT_node_data_22] ON [DT_node_lookup_22].node_id_2 = [DT_node_data_22].node_id), 
[AdaBoost_Estim_22] AS 
(SELECT [DT_Output_22].[KEY] AS [KEY], (1.0 * (CASE WHEN ([DT_Output_22].[Proba_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_22].[Proba_0] IS NULL OR [DT_Output_22].[Proba_0] > 0.0) THEN log([DT_Output_22].[Proba_0]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([DT_Output_22].[Proba_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_22].[Proba_0] IS NULL OR [DT_Output_22].[Proba_0] > 0.0) THEN log([DT_Output_22].[Proba_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_22].[Proba_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_22].[Proba_1] IS NULL OR [DT_Output_22].[Proba_1] > 0.0) THEN log([DT_Output_22].[Proba_1]) ELSE -1.79769313486231e+308 END END) / 2)) / 32.0 AS [Score_0], 1.0 * (CASE WHEN ([DT_Output_22].[Proba_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_22].[Proba_0] IS NULL OR [DT_Output_22].[Proba_0] > 0.0) THEN log([DT_Output_22].[Proba_0]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([DT_Output_22].[Proba_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_22].[Proba_0] IS NULL OR [DT_Output_22].[Proba_0] > 0.0) THEN log([DT_Output_22].[Proba_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_22].[Proba_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_22].[Proba_1] IS NULL OR [DT_Output_22].[Proba_1] > 0.0) THEN log([DT_Output_22].[Proba_1]) ELSE -1.79769313486231e+308 END END) / 2) AS [Proba_0], (1.0 * (CASE WHEN ([DT_Output_22].[Proba_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_22].[Proba_1] IS NULL OR [DT_Output_22].[Proba_1] > 0.0) THEN log([DT_Output_22].[Proba_1]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([DT_Output_22].[Proba_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_22].[Proba_0] IS NULL OR [DT_Output_22].[Proba_0] > 0.0) THEN log([DT_Output_22].[Proba_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_22].[Proba_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_22].[Proba_1] IS NULL OR [DT_Output_22].[Proba_1] > 0.0) THEN log([DT_Output_22].[Proba_1]) ELSE -1.79769313486231e+308 END END) / 2)) / 32.0 AS [Score_1], 1.0 * (CASE WHEN ([DT_Output_22].[Proba_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_22].[Proba_1] IS NULL OR [DT_Output_22].[Proba_1] > 0.0) THEN log([DT_Output_22].[Proba_1]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([DT_Output_22].[Proba_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_22].[Proba_0] IS NULL OR [DT_Output_22].[Proba_0] > 0.0) THEN log([DT_Output_22].[Proba_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_22].[Proba_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_22].[Proba_1] IS NULL OR [DT_Output_22].[Proba_1] > 0.0) THEN log([DT_Output_22].[Proba_1]) ELSE -1.79769313486231e+308 END END) / 2) AS [Proba_1] 
FROM [DT_Output_22]), 
[DT_node_lookup_23] AS 
(SELECT [ADS_sca_2_OUT].[KEY] AS [KEY], CASE WHEN ([ADS_sca_2_OUT].scaler_20 <= -1.2211709022521973) THEN 1 ELSE 2 END AS node_id_2 
FROM [ADS_sca_2_OUT]), 
[DT_node_data_23] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Proba_0] AS [Proba_0], [Values].[LogProba_0] AS [LogProba_0], [Values].[Proba_1] AS [Proba_1], [Values].[LogProba_1] AS [LogProba_1], [Values].[Decision] AS [Decision], [Values].[DecisionProba] AS [DecisionProba] 
FROM (SELECT 1 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS count, 1 AS depth, 0 AS parent_id, 0.9983335721641866 AS [Proba_0], -0.00166781787116 AS [LogProba_0], 0.0016664278358134155 AS [Proba_1], -6.397072964 AS [LogProba_1], 0 AS [Decision], 0.998333572164 AS [DecisionProba] UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 451 AS count, 1 AS depth, 0 AS parent_id, 0.40082829908423234 AS [Proba_0], -0.914222125206 AS [LogProba_0], 0.5991717009157678 AS [Proba_1], -0.512207076006 AS [LogProba_1], 1 AS [Decision], 0.599171700916 AS [DecisionProba]) AS [Values]), 
[DT_Output_23] AS 
(SELECT [DT_node_lookup_23].[KEY] AS [KEY], [DT_node_lookup_23].node_id_2 AS node_id_2, [DT_node_data_23].node_id AS node_id, [DT_node_data_23].feature AS feature, [DT_node_data_23].threshold AS threshold, [DT_node_data_23].count AS count, [DT_node_data_23].depth AS depth, [DT_node_data_23].parent_id AS parent_id, [DT_node_data_23].[Proba_0] AS [Proba_0], [DT_node_data_23].[LogProba_0] AS [LogProba_0], [DT_node_data_23].[Proba_1] AS [Proba_1], [DT_node_data_23].[LogProba_1] AS [LogProba_1], [DT_node_data_23].[Decision] AS [Decision], [DT_node_data_23].[DecisionProba] AS [DecisionProba] 
FROM [DT_node_lookup_23] LEFT OUTER JOIN [DT_node_data_23] ON [DT_node_lookup_23].node_id_2 = [DT_node_data_23].node_id), 
[AdaBoost_Estim_23] AS 
(SELECT [DT_Output_23].[KEY] AS [KEY], (1.0 * (CASE WHEN ([DT_Output_23].[Proba_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_23].[Proba_0] IS NULL OR [DT_Output_23].[Proba_0] > 0.0) THEN log([DT_Output_23].[Proba_0]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([DT_Output_23].[Proba_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_23].[Proba_0] IS NULL OR [DT_Output_23].[Proba_0] > 0.0) THEN log([DT_Output_23].[Proba_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_23].[Proba_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_23].[Proba_1] IS NULL OR [DT_Output_23].[Proba_1] > 0.0) THEN log([DT_Output_23].[Proba_1]) ELSE -1.79769313486231e+308 END END) / 2)) / 32.0 AS [Score_0], 1.0 * (CASE WHEN ([DT_Output_23].[Proba_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_23].[Proba_0] IS NULL OR [DT_Output_23].[Proba_0] > 0.0) THEN log([DT_Output_23].[Proba_0]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([DT_Output_23].[Proba_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_23].[Proba_0] IS NULL OR [DT_Output_23].[Proba_0] > 0.0) THEN log([DT_Output_23].[Proba_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_23].[Proba_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_23].[Proba_1] IS NULL OR [DT_Output_23].[Proba_1] > 0.0) THEN log([DT_Output_23].[Proba_1]) ELSE -1.79769313486231e+308 END END) / 2) AS [Proba_0], (1.0 * (CASE WHEN ([DT_Output_23].[Proba_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_23].[Proba_1] IS NULL OR [DT_Output_23].[Proba_1] > 0.0) THEN log([DT_Output_23].[Proba_1]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([DT_Output_23].[Proba_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_23].[Proba_0] IS NULL OR [DT_Output_23].[Proba_0] > 0.0) THEN log([DT_Output_23].[Proba_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_23].[Proba_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_23].[Proba_1] IS NULL OR [DT_Output_23].[Proba_1] > 0.0) THEN log([DT_Output_23].[Proba_1]) ELSE -1.79769313486231e+308 END END) / 2)) / 32.0 AS [Score_1], 1.0 * (CASE WHEN ([DT_Output_23].[Proba_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_23].[Proba_1] IS NULL OR [DT_Output_23].[Proba_1] > 0.0) THEN log([DT_Output_23].[Proba_1]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([DT_Output_23].[Proba_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_23].[Proba_0] IS NULL OR [DT_Output_23].[Proba_0] > 0.0) THEN log([DT_Output_23].[Proba_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_23].[Proba_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_23].[Proba_1] IS NULL OR [DT_Output_23].[Proba_1] > 0.0) THEN log([DT_Output_23].[Proba_1]) ELSE -1.79769313486231e+308 END END) / 2) AS [Proba_1] 
FROM [DT_Output_23]), 
[DT_node_lookup_24] AS 
(SELECT [ADS_sca_2_OUT].[KEY] AS [KEY], CASE WHEN ([ADS_sca_2_OUT].scaler_23 <= -0.5402464866638184) THEN 1 ELSE 2 END AS node_id_2 
FROM [ADS_sca_2_OUT]), 
[DT_node_data_24] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Proba_0] AS [Proba_0], [Values].[LogProba_0] AS [LogProba_0], [Values].[Proba_1] AS [Proba_1], [Values].[LogProba_1] AS [LogProba_1], [Values].[Decision] AS [Decision], [Values].[DecisionProba] AS [DecisionProba] 
FROM (SELECT 1 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 149 AS count, 1 AS depth, 0 AS parent_id, 1.1808231485351963e-08 AS [Proba_0], -18.2544689652 AS [LogProba_0], 0.9999999881917685 AS [Proba_1], -1.18082315734e-08 AS [LogProba_1], 1 AS [Decision], 0.999999988192 AS [DecisionProba] UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 306 AS count, 1 AS depth, 0 AS parent_id, 0.5969834232932878 AS [Proba_0], -0.515865932653 AS [LogProba_0], 0.40301657670671215 AS [Proba_1], -0.908777584614 AS [LogProba_1], 0 AS [Decision], 0.596983423293 AS [DecisionProba]) AS [Values]), 
[DT_Output_24] AS 
(SELECT [DT_node_lookup_24].[KEY] AS [KEY], [DT_node_lookup_24].node_id_2 AS node_id_2, [DT_node_data_24].node_id AS node_id, [DT_node_data_24].feature AS feature, [DT_node_data_24].threshold AS threshold, [DT_node_data_24].count AS count, [DT_node_data_24].depth AS depth, [DT_node_data_24].parent_id AS parent_id, [DT_node_data_24].[Proba_0] AS [Proba_0], [DT_node_data_24].[LogProba_0] AS [LogProba_0], [DT_node_data_24].[Proba_1] AS [Proba_1], [DT_node_data_24].[LogProba_1] AS [LogProba_1], [DT_node_data_24].[Decision] AS [Decision], [DT_node_data_24].[DecisionProba] AS [DecisionProba] 
FROM [DT_node_lookup_24] LEFT OUTER JOIN [DT_node_data_24] ON [DT_node_lookup_24].node_id_2 = [DT_node_data_24].node_id), 
[AdaBoost_Estim_24] AS 
(SELECT [DT_Output_24].[KEY] AS [KEY], (1.0 * (CASE WHEN ([DT_Output_24].[Proba_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_24].[Proba_0] IS NULL OR [DT_Output_24].[Proba_0] > 0.0) THEN log([DT_Output_24].[Proba_0]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([DT_Output_24].[Proba_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_24].[Proba_0] IS NULL OR [DT_Output_24].[Proba_0] > 0.0) THEN log([DT_Output_24].[Proba_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_24].[Proba_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_24].[Proba_1] IS NULL OR [DT_Output_24].[Proba_1] > 0.0) THEN log([DT_Output_24].[Proba_1]) ELSE -1.79769313486231e+308 END END) / 2)) / 32.0 AS [Score_0], 1.0 * (CASE WHEN ([DT_Output_24].[Proba_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_24].[Proba_0] IS NULL OR [DT_Output_24].[Proba_0] > 0.0) THEN log([DT_Output_24].[Proba_0]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([DT_Output_24].[Proba_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_24].[Proba_0] IS NULL OR [DT_Output_24].[Proba_0] > 0.0) THEN log([DT_Output_24].[Proba_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_24].[Proba_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_24].[Proba_1] IS NULL OR [DT_Output_24].[Proba_1] > 0.0) THEN log([DT_Output_24].[Proba_1]) ELSE -1.79769313486231e+308 END END) / 2) AS [Proba_0], (1.0 * (CASE WHEN ([DT_Output_24].[Proba_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_24].[Proba_1] IS NULL OR [DT_Output_24].[Proba_1] > 0.0) THEN log([DT_Output_24].[Proba_1]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([DT_Output_24].[Proba_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_24].[Proba_0] IS NULL OR [DT_Output_24].[Proba_0] > 0.0) THEN log([DT_Output_24].[Proba_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_24].[Proba_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_24].[Proba_1] IS NULL OR [DT_Output_24].[Proba_1] > 0.0) THEN log([DT_Output_24].[Proba_1]) ELSE -1.79769313486231e+308 END END) / 2)) / 32.0 AS [Score_1], 1.0 * (CASE WHEN ([DT_Output_24].[Proba_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_24].[Proba_1] IS NULL OR [DT_Output_24].[Proba_1] > 0.0) THEN log([DT_Output_24].[Proba_1]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([DT_Output_24].[Proba_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_24].[Proba_0] IS NULL OR [DT_Output_24].[Proba_0] > 0.0) THEN log([DT_Output_24].[Proba_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_24].[Proba_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_24].[Proba_1] IS NULL OR [DT_Output_24].[Proba_1] > 0.0) THEN log([DT_Output_24].[Proba_1]) ELSE -1.79769313486231e+308 END END) / 2) AS [Proba_1] 
FROM [DT_Output_24]), 
[DT_node_lookup_25] AS 
(SELECT [ADS_sca_2_OUT].[KEY] AS [KEY], CASE WHEN ([ADS_sca_2_OUT].scaler_9 <= 0.01025064941495657) THEN 1 ELSE 2 END AS node_id_2 
FROM [ADS_sca_2_OUT]), 
[DT_node_data_25] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Proba_0] AS [Proba_0], [Values].[LogProba_0] AS [LogProba_0], [Values].[Proba_1] AS [Proba_1], [Values].[LogProba_1] AS [LogProba_1], [Values].[Decision] AS [Decision], [Values].[DecisionProba] AS [DecisionProba] 
FROM (SELECT 1 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 281 AS count, 1 AS depth, 0 AS parent_id, 0.2608660215398434 AS [Proba_0], -1.34374833089 AS [LogProba_0], 0.7391339784601566 AS [Proba_1], -0.302276077497 AS [LogProba_1], 1 AS [Decision], 0.73913397846 AS [DecisionProba] UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 174 AS count, 1 AS depth, 0 AS parent_id, 0.823359209048426 AS [Proba_0], -0.194362710528 AS [LogProba_0], 0.17664079095157398 AS [Proba_1], -1.73363703814 AS [LogProba_1], 0 AS [Decision], 0.823359209048 AS [DecisionProba]) AS [Values]), 
[DT_Output_25] AS 
(SELECT [DT_node_lookup_25].[KEY] AS [KEY], [DT_node_lookup_25].node_id_2 AS node_id_2, [DT_node_data_25].node_id AS node_id, [DT_node_data_25].feature AS feature, [DT_node_data_25].threshold AS threshold, [DT_node_data_25].count AS count, [DT_node_data_25].depth AS depth, [DT_node_data_25].parent_id AS parent_id, [DT_node_data_25].[Proba_0] AS [Proba_0], [DT_node_data_25].[LogProba_0] AS [LogProba_0], [DT_node_data_25].[Proba_1] AS [Proba_1], [DT_node_data_25].[LogProba_1] AS [LogProba_1], [DT_node_data_25].[Decision] AS [Decision], [DT_node_data_25].[DecisionProba] AS [DecisionProba] 
FROM [DT_node_lookup_25] LEFT OUTER JOIN [DT_node_data_25] ON [DT_node_lookup_25].node_id_2 = [DT_node_data_25].node_id), 
[AdaBoost_Estim_25] AS 
(SELECT [DT_Output_25].[KEY] AS [KEY], (1.0 * (CASE WHEN ([DT_Output_25].[Proba_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_25].[Proba_0] IS NULL OR [DT_Output_25].[Proba_0] > 0.0) THEN log([DT_Output_25].[Proba_0]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([DT_Output_25].[Proba_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_25].[Proba_0] IS NULL OR [DT_Output_25].[Proba_0] > 0.0) THEN log([DT_Output_25].[Proba_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_25].[Proba_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_25].[Proba_1] IS NULL OR [DT_Output_25].[Proba_1] > 0.0) THEN log([DT_Output_25].[Proba_1]) ELSE -1.79769313486231e+308 END END) / 2)) / 32.0 AS [Score_0], 1.0 * (CASE WHEN ([DT_Output_25].[Proba_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_25].[Proba_0] IS NULL OR [DT_Output_25].[Proba_0] > 0.0) THEN log([DT_Output_25].[Proba_0]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([DT_Output_25].[Proba_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_25].[Proba_0] IS NULL OR [DT_Output_25].[Proba_0] > 0.0) THEN log([DT_Output_25].[Proba_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_25].[Proba_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_25].[Proba_1] IS NULL OR [DT_Output_25].[Proba_1] > 0.0) THEN log([DT_Output_25].[Proba_1]) ELSE -1.79769313486231e+308 END END) / 2) AS [Proba_0], (1.0 * (CASE WHEN ([DT_Output_25].[Proba_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_25].[Proba_1] IS NULL OR [DT_Output_25].[Proba_1] > 0.0) THEN log([DT_Output_25].[Proba_1]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([DT_Output_25].[Proba_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_25].[Proba_0] IS NULL OR [DT_Output_25].[Proba_0] > 0.0) THEN log([DT_Output_25].[Proba_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_25].[Proba_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_25].[Proba_1] IS NULL OR [DT_Output_25].[Proba_1] > 0.0) THEN log([DT_Output_25].[Proba_1]) ELSE -1.79769313486231e+308 END END) / 2)) / 32.0 AS [Score_1], 1.0 * (CASE WHEN ([DT_Output_25].[Proba_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_25].[Proba_1] IS NULL OR [DT_Output_25].[Proba_1] > 0.0) THEN log([DT_Output_25].[Proba_1]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([DT_Output_25].[Proba_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_25].[Proba_0] IS NULL OR [DT_Output_25].[Proba_0] > 0.0) THEN log([DT_Output_25].[Proba_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_25].[Proba_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_25].[Proba_1] IS NULL OR [DT_Output_25].[Proba_1] > 0.0) THEN log([DT_Output_25].[Proba_1]) ELSE -1.79769313486231e+308 END END) / 2) AS [Proba_1] 
FROM [DT_Output_25]), 
[DT_node_lookup_26] AS 
(SELECT [ADS_sca_2_OUT].[KEY] AS [KEY], CASE WHEN ([ADS_sca_2_OUT].scaler_15 <= -0.11809051036834717) THEN 1 ELSE 2 END AS node_id_2 
FROM [ADS_sca_2_OUT]), 
[DT_node_data_26] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Proba_0] AS [Proba_0], [Values].[LogProba_0] AS [LogProba_0], [Values].[Proba_1] AS [Proba_1], [Values].[LogProba_1] AS [LogProba_1], [Values].[Decision] AS [Decision], [Values].[DecisionProba] AS [DecisionProba] 
FROM (SELECT 1 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 311 AS count, 1 AS depth, 0 AS parent_id, 0.26508252796175474 AS [Proba_0], -1.32771407521 AS [LogProba_0], 0.7349174720382452 AS [Proba_1], -0.307997069015 AS [LogProba_1], 1 AS [Decision], 0.734917472038 AS [DecisionProba] UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 144 AS count, 1 AS depth, 0 AS parent_id, 0.9226811974169369 AS [Proba_0], -0.0804715023912 AS [LogProba_0], 0.07731880258306302 AS [Proba_1], -2.55981811127 AS [LogProba_1], 0 AS [Decision], 0.922681197417 AS [DecisionProba]) AS [Values]), 
[DT_Output_26] AS 
(SELECT [DT_node_lookup_26].[KEY] AS [KEY], [DT_node_lookup_26].node_id_2 AS node_id_2, [DT_node_data_26].node_id AS node_id, [DT_node_data_26].feature AS feature, [DT_node_data_26].threshold AS threshold, [DT_node_data_26].count AS count, [DT_node_data_26].depth AS depth, [DT_node_data_26].parent_id AS parent_id, [DT_node_data_26].[Proba_0] AS [Proba_0], [DT_node_data_26].[LogProba_0] AS [LogProba_0], [DT_node_data_26].[Proba_1] AS [Proba_1], [DT_node_data_26].[LogProba_1] AS [LogProba_1], [DT_node_data_26].[Decision] AS [Decision], [DT_node_data_26].[DecisionProba] AS [DecisionProba] 
FROM [DT_node_lookup_26] LEFT OUTER JOIN [DT_node_data_26] ON [DT_node_lookup_26].node_id_2 = [DT_node_data_26].node_id), 
[AdaBoost_Estim_26] AS 
(SELECT [DT_Output_26].[KEY] AS [KEY], (1.0 * (CASE WHEN ([DT_Output_26].[Proba_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_26].[Proba_0] IS NULL OR [DT_Output_26].[Proba_0] > 0.0) THEN log([DT_Output_26].[Proba_0]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([DT_Output_26].[Proba_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_26].[Proba_0] IS NULL OR [DT_Output_26].[Proba_0] > 0.0) THEN log([DT_Output_26].[Proba_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_26].[Proba_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_26].[Proba_1] IS NULL OR [DT_Output_26].[Proba_1] > 0.0) THEN log([DT_Output_26].[Proba_1]) ELSE -1.79769313486231e+308 END END) / 2)) / 32.0 AS [Score_0], 1.0 * (CASE WHEN ([DT_Output_26].[Proba_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_26].[Proba_0] IS NULL OR [DT_Output_26].[Proba_0] > 0.0) THEN log([DT_Output_26].[Proba_0]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([DT_Output_26].[Proba_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_26].[Proba_0] IS NULL OR [DT_Output_26].[Proba_0] > 0.0) THEN log([DT_Output_26].[Proba_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_26].[Proba_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_26].[Proba_1] IS NULL OR [DT_Output_26].[Proba_1] > 0.0) THEN log([DT_Output_26].[Proba_1]) ELSE -1.79769313486231e+308 END END) / 2) AS [Proba_0], (1.0 * (CASE WHEN ([DT_Output_26].[Proba_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_26].[Proba_1] IS NULL OR [DT_Output_26].[Proba_1] > 0.0) THEN log([DT_Output_26].[Proba_1]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([DT_Output_26].[Proba_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_26].[Proba_0] IS NULL OR [DT_Output_26].[Proba_0] > 0.0) THEN log([DT_Output_26].[Proba_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_26].[Proba_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_26].[Proba_1] IS NULL OR [DT_Output_26].[Proba_1] > 0.0) THEN log([DT_Output_26].[Proba_1]) ELSE -1.79769313486231e+308 END END) / 2)) / 32.0 AS [Score_1], 1.0 * (CASE WHEN ([DT_Output_26].[Proba_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_26].[Proba_1] IS NULL OR [DT_Output_26].[Proba_1] > 0.0) THEN log([DT_Output_26].[Proba_1]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([DT_Output_26].[Proba_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_26].[Proba_0] IS NULL OR [DT_Output_26].[Proba_0] > 0.0) THEN log([DT_Output_26].[Proba_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_26].[Proba_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_26].[Proba_1] IS NULL OR [DT_Output_26].[Proba_1] > 0.0) THEN log([DT_Output_26].[Proba_1]) ELSE -1.79769313486231e+308 END END) / 2) AS [Proba_1] 
FROM [DT_Output_26]), 
[DT_node_lookup_27] AS 
(SELECT [ADS_sca_2_OUT].[KEY] AS [KEY], CASE WHEN ([ADS_sca_2_OUT].scaler_25 <= -0.2322135865688324) THEN 1 ELSE 2 END AS node_id_2 
FROM [ADS_sca_2_OUT]), 
[DT_node_data_27] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Proba_0] AS [Proba_0], [Values].[LogProba_0] AS [LogProba_0], [Values].[Proba_1] AS [Proba_1], [Values].[LogProba_1] AS [LogProba_1], [Values].[Decision] AS [Decision], [Values].[DecisionProba] AS [DecisionProba] 
FROM (SELECT 1 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 257 AS count, 1 AS depth, 0 AS parent_id, 0.2688789021493305 AS [Proba_0], -1.31349417862 AS [LogProba_0], 0.7311210978506694 AS [Proba_1], -0.313176172418 AS [LogProba_1], 1 AS [Decision], 0.731121097851 AS [DecisionProba] UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 198 AS count, 1 AS depth, 0 AS parent_id, 0.7466508190944103 AS [Proba_0], -0.292157647454 AS [LogProba_0], 0.2533491809055897 AS [Proba_1], -1.37298658012 AS [LogProba_1], 0 AS [Decision], 0.746650819094 AS [DecisionProba]) AS [Values]), 
[DT_Output_27] AS 
(SELECT [DT_node_lookup_27].[KEY] AS [KEY], [DT_node_lookup_27].node_id_2 AS node_id_2, [DT_node_data_27].node_id AS node_id, [DT_node_data_27].feature AS feature, [DT_node_data_27].threshold AS threshold, [DT_node_data_27].count AS count, [DT_node_data_27].depth AS depth, [DT_node_data_27].parent_id AS parent_id, [DT_node_data_27].[Proba_0] AS [Proba_0], [DT_node_data_27].[LogProba_0] AS [LogProba_0], [DT_node_data_27].[Proba_1] AS [Proba_1], [DT_node_data_27].[LogProba_1] AS [LogProba_1], [DT_node_data_27].[Decision] AS [Decision], [DT_node_data_27].[DecisionProba] AS [DecisionProba] 
FROM [DT_node_lookup_27] LEFT OUTER JOIN [DT_node_data_27] ON [DT_node_lookup_27].node_id_2 = [DT_node_data_27].node_id), 
[AdaBoost_Estim_27] AS 
(SELECT [DT_Output_27].[KEY] AS [KEY], (1.0 * (CASE WHEN ([DT_Output_27].[Proba_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_27].[Proba_0] IS NULL OR [DT_Output_27].[Proba_0] > 0.0) THEN log([DT_Output_27].[Proba_0]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([DT_Output_27].[Proba_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_27].[Proba_0] IS NULL OR [DT_Output_27].[Proba_0] > 0.0) THEN log([DT_Output_27].[Proba_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_27].[Proba_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_27].[Proba_1] IS NULL OR [DT_Output_27].[Proba_1] > 0.0) THEN log([DT_Output_27].[Proba_1]) ELSE -1.79769313486231e+308 END END) / 2)) / 32.0 AS [Score_0], 1.0 * (CASE WHEN ([DT_Output_27].[Proba_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_27].[Proba_0] IS NULL OR [DT_Output_27].[Proba_0] > 0.0) THEN log([DT_Output_27].[Proba_0]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([DT_Output_27].[Proba_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_27].[Proba_0] IS NULL OR [DT_Output_27].[Proba_0] > 0.0) THEN log([DT_Output_27].[Proba_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_27].[Proba_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_27].[Proba_1] IS NULL OR [DT_Output_27].[Proba_1] > 0.0) THEN log([DT_Output_27].[Proba_1]) ELSE -1.79769313486231e+308 END END) / 2) AS [Proba_0], (1.0 * (CASE WHEN ([DT_Output_27].[Proba_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_27].[Proba_1] IS NULL OR [DT_Output_27].[Proba_1] > 0.0) THEN log([DT_Output_27].[Proba_1]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([DT_Output_27].[Proba_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_27].[Proba_0] IS NULL OR [DT_Output_27].[Proba_0] > 0.0) THEN log([DT_Output_27].[Proba_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_27].[Proba_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_27].[Proba_1] IS NULL OR [DT_Output_27].[Proba_1] > 0.0) THEN log([DT_Output_27].[Proba_1]) ELSE -1.79769313486231e+308 END END) / 2)) / 32.0 AS [Score_1], 1.0 * (CASE WHEN ([DT_Output_27].[Proba_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_27].[Proba_1] IS NULL OR [DT_Output_27].[Proba_1] > 0.0) THEN log([DT_Output_27].[Proba_1]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([DT_Output_27].[Proba_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_27].[Proba_0] IS NULL OR [DT_Output_27].[Proba_0] > 0.0) THEN log([DT_Output_27].[Proba_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_27].[Proba_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_27].[Proba_1] IS NULL OR [DT_Output_27].[Proba_1] > 0.0) THEN log([DT_Output_27].[Proba_1]) ELSE -1.79769313486231e+308 END END) / 2) AS [Proba_1] 
FROM [DT_Output_27]), 
[DT_node_lookup_28] AS 
(SELECT [ADS_sca_2_OUT].[KEY] AS [KEY], CASE WHEN ([ADS_sca_2_OUT].scaler_3 <= -0.21239592134952545) THEN 1 ELSE 2 END AS node_id_2 
FROM [ADS_sca_2_OUT]), 
[DT_node_data_28] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Proba_0] AS [Proba_0], [Values].[LogProba_0] AS [LogProba_0], [Values].[Proba_1] AS [Proba_1], [Values].[LogProba_1] AS [LogProba_1], [Values].[Decision] AS [Decision], [Values].[DecisionProba] AS [DecisionProba] 
FROM (SELECT 1 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 199 AS count, 1 AS depth, 0 AS parent_id, 0.8957518582328222 AS [Proba_0], -0.1100918483 AS [LogProba_0], 0.10424814176717774 AS [Proba_1], -2.26098124324 AS [LogProba_1], 0 AS [Decision], 0.895751858233 AS [DecisionProba] UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 256 AS count, 1 AS depth, 0 AS parent_id, 0.33140315365336065 AS [Proba_0], -1.10441965788 AS [LogProba_0], 0.6685968463466394 AS [Proba_1], -0.402574021809 AS [LogProba_1], 1 AS [Decision], 0.668596846347 AS [DecisionProba]) AS [Values]), 
[DT_Output_28] AS 
(SELECT [DT_node_lookup_28].[KEY] AS [KEY], [DT_node_lookup_28].node_id_2 AS node_id_2, [DT_node_data_28].node_id AS node_id, [DT_node_data_28].feature AS feature, [DT_node_data_28].threshold AS threshold, [DT_node_data_28].count AS count, [DT_node_data_28].depth AS depth, [DT_node_data_28].parent_id AS parent_id, [DT_node_data_28].[Proba_0] AS [Proba_0], [DT_node_data_28].[LogProba_0] AS [LogProba_0], [DT_node_data_28].[Proba_1] AS [Proba_1], [DT_node_data_28].[LogProba_1] AS [LogProba_1], [DT_node_data_28].[Decision] AS [Decision], [DT_node_data_28].[DecisionProba] AS [DecisionProba] 
FROM [DT_node_lookup_28] LEFT OUTER JOIN [DT_node_data_28] ON [DT_node_lookup_28].node_id_2 = [DT_node_data_28].node_id), 
[AdaBoost_Estim_28] AS 
(SELECT [DT_Output_28].[KEY] AS [KEY], (1.0 * (CASE WHEN ([DT_Output_28].[Proba_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_28].[Proba_0] IS NULL OR [DT_Output_28].[Proba_0] > 0.0) THEN log([DT_Output_28].[Proba_0]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([DT_Output_28].[Proba_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_28].[Proba_0] IS NULL OR [DT_Output_28].[Proba_0] > 0.0) THEN log([DT_Output_28].[Proba_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_28].[Proba_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_28].[Proba_1] IS NULL OR [DT_Output_28].[Proba_1] > 0.0) THEN log([DT_Output_28].[Proba_1]) ELSE -1.79769313486231e+308 END END) / 2)) / 32.0 AS [Score_0], 1.0 * (CASE WHEN ([DT_Output_28].[Proba_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_28].[Proba_0] IS NULL OR [DT_Output_28].[Proba_0] > 0.0) THEN log([DT_Output_28].[Proba_0]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([DT_Output_28].[Proba_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_28].[Proba_0] IS NULL OR [DT_Output_28].[Proba_0] > 0.0) THEN log([DT_Output_28].[Proba_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_28].[Proba_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_28].[Proba_1] IS NULL OR [DT_Output_28].[Proba_1] > 0.0) THEN log([DT_Output_28].[Proba_1]) ELSE -1.79769313486231e+308 END END) / 2) AS [Proba_0], (1.0 * (CASE WHEN ([DT_Output_28].[Proba_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_28].[Proba_1] IS NULL OR [DT_Output_28].[Proba_1] > 0.0) THEN log([DT_Output_28].[Proba_1]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([DT_Output_28].[Proba_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_28].[Proba_0] IS NULL OR [DT_Output_28].[Proba_0] > 0.0) THEN log([DT_Output_28].[Proba_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_28].[Proba_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_28].[Proba_1] IS NULL OR [DT_Output_28].[Proba_1] > 0.0) THEN log([DT_Output_28].[Proba_1]) ELSE -1.79769313486231e+308 END END) / 2)) / 32.0 AS [Score_1], 1.0 * (CASE WHEN ([DT_Output_28].[Proba_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_28].[Proba_1] IS NULL OR [DT_Output_28].[Proba_1] > 0.0) THEN log([DT_Output_28].[Proba_1]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([DT_Output_28].[Proba_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_28].[Proba_0] IS NULL OR [DT_Output_28].[Proba_0] > 0.0) THEN log([DT_Output_28].[Proba_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_28].[Proba_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_28].[Proba_1] IS NULL OR [DT_Output_28].[Proba_1] > 0.0) THEN log([DT_Output_28].[Proba_1]) ELSE -1.79769313486231e+308 END END) / 2) AS [Proba_1] 
FROM [DT_Output_28]), 
[DT_node_lookup_29] AS 
(SELECT [ADS_sca_2_OUT].[KEY] AS [KEY], CASE WHEN ([ADS_sca_2_OUT].scaler_23 <= 1.0745562314987183) THEN 1 ELSE 2 END AS node_id_2 
FROM [ADS_sca_2_OUT]), 
[DT_node_data_29] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Proba_0] AS [Proba_0], [Values].[LogProba_0] AS [LogProba_0], [Values].[Proba_1] AS [Proba_1], [Values].[LogProba_1] AS [LogProba_1], [Values].[Decision] AS [Decision], [Values].[DecisionProba] AS [DecisionProba] 
FROM (SELECT 1 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 384 AS count, 1 AS depth, 0 AS parent_id, 0.34380308757900063 AS [Proba_0], -1.06768620533 AS [LogProba_0], 0.6561969124209993 AS [Proba_1], -0.421294363707 AS [LogProba_1], 1 AS [Decision], 0.656196912421 AS [DecisionProba] UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 71 AS count, 1 AS depth, 0 AS parent_id, 0.8276875202765601 AS [Proba_0], -0.189119586797 AS [LogProba_0], 0.1723124797234398 AS [Proba_1], -1.75844570787 AS [LogProba_1], 0 AS [Decision], 0.827687520277 AS [DecisionProba]) AS [Values]), 
[DT_Output_29] AS 
(SELECT [DT_node_lookup_29].[KEY] AS [KEY], [DT_node_lookup_29].node_id_2 AS node_id_2, [DT_node_data_29].node_id AS node_id, [DT_node_data_29].feature AS feature, [DT_node_data_29].threshold AS threshold, [DT_node_data_29].count AS count, [DT_node_data_29].depth AS depth, [DT_node_data_29].parent_id AS parent_id, [DT_node_data_29].[Proba_0] AS [Proba_0], [DT_node_data_29].[LogProba_0] AS [LogProba_0], [DT_node_data_29].[Proba_1] AS [Proba_1], [DT_node_data_29].[LogProba_1] AS [LogProba_1], [DT_node_data_29].[Decision] AS [Decision], [DT_node_data_29].[DecisionProba] AS [DecisionProba] 
FROM [DT_node_lookup_29] LEFT OUTER JOIN [DT_node_data_29] ON [DT_node_lookup_29].node_id_2 = [DT_node_data_29].node_id), 
[AdaBoost_Estim_29] AS 
(SELECT [DT_Output_29].[KEY] AS [KEY], (1.0 * (CASE WHEN ([DT_Output_29].[Proba_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_29].[Proba_0] IS NULL OR [DT_Output_29].[Proba_0] > 0.0) THEN log([DT_Output_29].[Proba_0]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([DT_Output_29].[Proba_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_29].[Proba_0] IS NULL OR [DT_Output_29].[Proba_0] > 0.0) THEN log([DT_Output_29].[Proba_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_29].[Proba_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_29].[Proba_1] IS NULL OR [DT_Output_29].[Proba_1] > 0.0) THEN log([DT_Output_29].[Proba_1]) ELSE -1.79769313486231e+308 END END) / 2)) / 32.0 AS [Score_0], 1.0 * (CASE WHEN ([DT_Output_29].[Proba_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_29].[Proba_0] IS NULL OR [DT_Output_29].[Proba_0] > 0.0) THEN log([DT_Output_29].[Proba_0]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([DT_Output_29].[Proba_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_29].[Proba_0] IS NULL OR [DT_Output_29].[Proba_0] > 0.0) THEN log([DT_Output_29].[Proba_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_29].[Proba_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_29].[Proba_1] IS NULL OR [DT_Output_29].[Proba_1] > 0.0) THEN log([DT_Output_29].[Proba_1]) ELSE -1.79769313486231e+308 END END) / 2) AS [Proba_0], (1.0 * (CASE WHEN ([DT_Output_29].[Proba_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_29].[Proba_1] IS NULL OR [DT_Output_29].[Proba_1] > 0.0) THEN log([DT_Output_29].[Proba_1]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([DT_Output_29].[Proba_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_29].[Proba_0] IS NULL OR [DT_Output_29].[Proba_0] > 0.0) THEN log([DT_Output_29].[Proba_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_29].[Proba_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_29].[Proba_1] IS NULL OR [DT_Output_29].[Proba_1] > 0.0) THEN log([DT_Output_29].[Proba_1]) ELSE -1.79769313486231e+308 END END) / 2)) / 32.0 AS [Score_1], 1.0 * (CASE WHEN ([DT_Output_29].[Proba_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_29].[Proba_1] IS NULL OR [DT_Output_29].[Proba_1] > 0.0) THEN log([DT_Output_29].[Proba_1]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([DT_Output_29].[Proba_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_29].[Proba_0] IS NULL OR [DT_Output_29].[Proba_0] > 0.0) THEN log([DT_Output_29].[Proba_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_29].[Proba_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_29].[Proba_1] IS NULL OR [DT_Output_29].[Proba_1] > 0.0) THEN log([DT_Output_29].[Proba_1]) ELSE -1.79769313486231e+308 END END) / 2) AS [Proba_1] 
FROM [DT_Output_29]), 
[DT_node_lookup_30] AS 
(SELECT [ADS_sca_2_OUT].[KEY] AS [KEY], CASE WHEN ([ADS_sca_2_OUT].scaler_6 <= -0.41850411891937256) THEN 1 ELSE 2 END AS node_id_2 
FROM [ADS_sca_2_OUT]), 
[DT_node_data_30] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Proba_0] AS [Proba_0], [Values].[LogProba_0] AS [LogProba_0], [Values].[Proba_1] AS [Proba_1], [Values].[LogProba_1] AS [LogProba_1], [Values].[Decision] AS [Decision], [Values].[DecisionProba] AS [DecisionProba] 
FROM (SELECT 1 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 165 AS count, 1 AS depth, 0 AS parent_id, 0.14891632599995347 AS [Proba_0], -1.90437070125 AS [LogProba_0], 0.8510836740000465 AS [Proba_1], -0.161244830918 AS [LogProba_1], 1 AS [Decision], 0.851083674 AS [DecisionProba] UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 290 AS count, 1 AS depth, 0 AS parent_id, 0.6859371985588736 AS [Proba_0], -0.376969202737 AS [LogProba_0], 0.31406280144112647 AS [Proba_1], -1.15816230848 AS [LogProba_1], 0 AS [Decision], 0.685937198559 AS [DecisionProba]) AS [Values]), 
[DT_Output_30] AS 
(SELECT [DT_node_lookup_30].[KEY] AS [KEY], [DT_node_lookup_30].node_id_2 AS node_id_2, [DT_node_data_30].node_id AS node_id, [DT_node_data_30].feature AS feature, [DT_node_data_30].threshold AS threshold, [DT_node_data_30].count AS count, [DT_node_data_30].depth AS depth, [DT_node_data_30].parent_id AS parent_id, [DT_node_data_30].[Proba_0] AS [Proba_0], [DT_node_data_30].[LogProba_0] AS [LogProba_0], [DT_node_data_30].[Proba_1] AS [Proba_1], [DT_node_data_30].[LogProba_1] AS [LogProba_1], [DT_node_data_30].[Decision] AS [Decision], [DT_node_data_30].[DecisionProba] AS [DecisionProba] 
FROM [DT_node_lookup_30] LEFT OUTER JOIN [DT_node_data_30] ON [DT_node_lookup_30].node_id_2 = [DT_node_data_30].node_id), 
[AdaBoost_Estim_30] AS 
(SELECT [DT_Output_30].[KEY] AS [KEY], (1.0 * (CASE WHEN ([DT_Output_30].[Proba_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_30].[Proba_0] IS NULL OR [DT_Output_30].[Proba_0] > 0.0) THEN log([DT_Output_30].[Proba_0]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([DT_Output_30].[Proba_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_30].[Proba_0] IS NULL OR [DT_Output_30].[Proba_0] > 0.0) THEN log([DT_Output_30].[Proba_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_30].[Proba_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_30].[Proba_1] IS NULL OR [DT_Output_30].[Proba_1] > 0.0) THEN log([DT_Output_30].[Proba_1]) ELSE -1.79769313486231e+308 END END) / 2)) / 32.0 AS [Score_0], 1.0 * (CASE WHEN ([DT_Output_30].[Proba_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_30].[Proba_0] IS NULL OR [DT_Output_30].[Proba_0] > 0.0) THEN log([DT_Output_30].[Proba_0]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([DT_Output_30].[Proba_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_30].[Proba_0] IS NULL OR [DT_Output_30].[Proba_0] > 0.0) THEN log([DT_Output_30].[Proba_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_30].[Proba_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_30].[Proba_1] IS NULL OR [DT_Output_30].[Proba_1] > 0.0) THEN log([DT_Output_30].[Proba_1]) ELSE -1.79769313486231e+308 END END) / 2) AS [Proba_0], (1.0 * (CASE WHEN ([DT_Output_30].[Proba_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_30].[Proba_1] IS NULL OR [DT_Output_30].[Proba_1] > 0.0) THEN log([DT_Output_30].[Proba_1]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([DT_Output_30].[Proba_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_30].[Proba_0] IS NULL OR [DT_Output_30].[Proba_0] > 0.0) THEN log([DT_Output_30].[Proba_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_30].[Proba_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_30].[Proba_1] IS NULL OR [DT_Output_30].[Proba_1] > 0.0) THEN log([DT_Output_30].[Proba_1]) ELSE -1.79769313486231e+308 END END) / 2)) / 32.0 AS [Score_1], 1.0 * (CASE WHEN ([DT_Output_30].[Proba_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_30].[Proba_1] IS NULL OR [DT_Output_30].[Proba_1] > 0.0) THEN log([DT_Output_30].[Proba_1]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([DT_Output_30].[Proba_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_30].[Proba_0] IS NULL OR [DT_Output_30].[Proba_0] > 0.0) THEN log([DT_Output_30].[Proba_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_30].[Proba_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_30].[Proba_1] IS NULL OR [DT_Output_30].[Proba_1] > 0.0) THEN log([DT_Output_30].[Proba_1]) ELSE -1.79769313486231e+308 END END) / 2) AS [Proba_1] 
FROM [DT_Output_30]), 
[DT_node_lookup_31] AS 
(SELECT [ADS_sca_2_OUT].[KEY] AS [KEY], CASE WHEN ([ADS_sca_2_OUT].scaler_25 <= -0.5600824356079102) THEN 1 ELSE 2 END AS node_id_2 
FROM [ADS_sca_2_OUT]), 
[DT_node_data_31] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Proba_0] AS [Proba_0], [Values].[LogProba_0] AS [LogProba_0], [Values].[Proba_1] AS [Proba_1], [Values].[LogProba_1] AS [LogProba_1], [Values].[Decision] AS [Decision], [Values].[DecisionProba] AS [DecisionProba] 
FROM (SELECT 1 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 158 AS count, 1 AS depth, 0 AS parent_id, 0.014545388850624556 AS [Proba_0], -4.23048125308 AS [LogProba_0], 0.9854546111493755 AS [Proba_1], -0.0146522101224 AS [LogProba_1], 1 AS [Decision], 0.985454611149 AS [DecisionProba] UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 297 AS count, 1 AS depth, 0 AS parent_id, 0.6134719248817463 AS [Proba_0], -0.488620778092 AS [LogProba_0], 0.3865280751182537 AS [Proba_1], -0.950550774218 AS [LogProba_1], 0 AS [Decision], 0.613471924882 AS [DecisionProba]) AS [Values]), 
[DT_Output_31] AS 
(SELECT [DT_node_lookup_31].[KEY] AS [KEY], [DT_node_lookup_31].node_id_2 AS node_id_2, [DT_node_data_31].node_id AS node_id, [DT_node_data_31].feature AS feature, [DT_node_data_31].threshold AS threshold, [DT_node_data_31].count AS count, [DT_node_data_31].depth AS depth, [DT_node_data_31].parent_id AS parent_id, [DT_node_data_31].[Proba_0] AS [Proba_0], [DT_node_data_31].[LogProba_0] AS [LogProba_0], [DT_node_data_31].[Proba_1] AS [Proba_1], [DT_node_data_31].[LogProba_1] AS [LogProba_1], [DT_node_data_31].[Decision] AS [Decision], [DT_node_data_31].[DecisionProba] AS [DecisionProba] 
FROM [DT_node_lookup_31] LEFT OUTER JOIN [DT_node_data_31] ON [DT_node_lookup_31].node_id_2 = [DT_node_data_31].node_id), 
[AdaBoost_Estim_31] AS 
(SELECT [DT_Output_31].[KEY] AS [KEY], (1.0 * (CASE WHEN ([DT_Output_31].[Proba_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_31].[Proba_0] IS NULL OR [DT_Output_31].[Proba_0] > 0.0) THEN log([DT_Output_31].[Proba_0]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([DT_Output_31].[Proba_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_31].[Proba_0] IS NULL OR [DT_Output_31].[Proba_0] > 0.0) THEN log([DT_Output_31].[Proba_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_31].[Proba_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_31].[Proba_1] IS NULL OR [DT_Output_31].[Proba_1] > 0.0) THEN log([DT_Output_31].[Proba_1]) ELSE -1.79769313486231e+308 END END) / 2)) / 32.0 AS [Score_0], 1.0 * (CASE WHEN ([DT_Output_31].[Proba_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_31].[Proba_0] IS NULL OR [DT_Output_31].[Proba_0] > 0.0) THEN log([DT_Output_31].[Proba_0]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([DT_Output_31].[Proba_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_31].[Proba_0] IS NULL OR [DT_Output_31].[Proba_0] > 0.0) THEN log([DT_Output_31].[Proba_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_31].[Proba_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_31].[Proba_1] IS NULL OR [DT_Output_31].[Proba_1] > 0.0) THEN log([DT_Output_31].[Proba_1]) ELSE -1.79769313486231e+308 END END) / 2) AS [Proba_0], (1.0 * (CASE WHEN ([DT_Output_31].[Proba_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_31].[Proba_1] IS NULL OR [DT_Output_31].[Proba_1] > 0.0) THEN log([DT_Output_31].[Proba_1]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([DT_Output_31].[Proba_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_31].[Proba_0] IS NULL OR [DT_Output_31].[Proba_0] > 0.0) THEN log([DT_Output_31].[Proba_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_31].[Proba_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_31].[Proba_1] IS NULL OR [DT_Output_31].[Proba_1] > 0.0) THEN log([DT_Output_31].[Proba_1]) ELSE -1.79769313486231e+308 END END) / 2)) / 32.0 AS [Score_1], 1.0 * (CASE WHEN ([DT_Output_31].[Proba_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_31].[Proba_1] IS NULL OR [DT_Output_31].[Proba_1] > 0.0) THEN log([DT_Output_31].[Proba_1]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([DT_Output_31].[Proba_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_31].[Proba_0] IS NULL OR [DT_Output_31].[Proba_0] > 0.0) THEN log([DT_Output_31].[Proba_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_31].[Proba_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([DT_Output_31].[Proba_1] IS NULL OR [DT_Output_31].[Proba_1] > 0.0) THEN log([DT_Output_31].[Proba_1]) ELSE -1.79769313486231e+308 END END) / 2) AS [Proba_1] 
FROM [DT_Output_31]), 
[Score_Union_CTE] AS 
(SELECT ensemble_score_union.[KEY] AS [KEY], ensemble_score_union.[Score_0] AS [Score_0], ensemble_score_union.[Proba_0] AS [Proba_0], ensemble_score_union.[Score_1] AS [Score_1], ensemble_score_union.[Proba_1] AS [Proba_1] 
FROM (SELECT [AdaBoost_Estim_0].[KEY] AS [KEY], [AdaBoost_Estim_0].[Score_0] AS [Score_0], [AdaBoost_Estim_0].[Proba_0] AS [Proba_0], [AdaBoost_Estim_0].[Score_1] AS [Score_1], [AdaBoost_Estim_0].[Proba_1] AS [Proba_1] 
FROM [AdaBoost_Estim_0] UNION ALL SELECT [AdaBoost_Estim_1].[KEY] AS [KEY], [AdaBoost_Estim_1].[Score_0] AS [Score_0], [AdaBoost_Estim_1].[Proba_0] AS [Proba_0], [AdaBoost_Estim_1].[Score_1] AS [Score_1], [AdaBoost_Estim_1].[Proba_1] AS [Proba_1] 
FROM [AdaBoost_Estim_1] UNION ALL SELECT [AdaBoost_Estim_2].[KEY] AS [KEY], [AdaBoost_Estim_2].[Score_0] AS [Score_0], [AdaBoost_Estim_2].[Proba_0] AS [Proba_0], [AdaBoost_Estim_2].[Score_1] AS [Score_1], [AdaBoost_Estim_2].[Proba_1] AS [Proba_1] 
FROM [AdaBoost_Estim_2] UNION ALL SELECT [AdaBoost_Estim_3].[KEY] AS [KEY], [AdaBoost_Estim_3].[Score_0] AS [Score_0], [AdaBoost_Estim_3].[Proba_0] AS [Proba_0], [AdaBoost_Estim_3].[Score_1] AS [Score_1], [AdaBoost_Estim_3].[Proba_1] AS [Proba_1] 
FROM [AdaBoost_Estim_3] UNION ALL SELECT [AdaBoost_Estim_4].[KEY] AS [KEY], [AdaBoost_Estim_4].[Score_0] AS [Score_0], [AdaBoost_Estim_4].[Proba_0] AS [Proba_0], [AdaBoost_Estim_4].[Score_1] AS [Score_1], [AdaBoost_Estim_4].[Proba_1] AS [Proba_1] 
FROM [AdaBoost_Estim_4] UNION ALL SELECT [AdaBoost_Estim_5].[KEY] AS [KEY], [AdaBoost_Estim_5].[Score_0] AS [Score_0], [AdaBoost_Estim_5].[Proba_0] AS [Proba_0], [AdaBoost_Estim_5].[Score_1] AS [Score_1], [AdaBoost_Estim_5].[Proba_1] AS [Proba_1] 
FROM [AdaBoost_Estim_5] UNION ALL SELECT [AdaBoost_Estim_6].[KEY] AS [KEY], [AdaBoost_Estim_6].[Score_0] AS [Score_0], [AdaBoost_Estim_6].[Proba_0] AS [Proba_0], [AdaBoost_Estim_6].[Score_1] AS [Score_1], [AdaBoost_Estim_6].[Proba_1] AS [Proba_1] 
FROM [AdaBoost_Estim_6] UNION ALL SELECT [AdaBoost_Estim_7].[KEY] AS [KEY], [AdaBoost_Estim_7].[Score_0] AS [Score_0], [AdaBoost_Estim_7].[Proba_0] AS [Proba_0], [AdaBoost_Estim_7].[Score_1] AS [Score_1], [AdaBoost_Estim_7].[Proba_1] AS [Proba_1] 
FROM [AdaBoost_Estim_7] UNION ALL SELECT [AdaBoost_Estim_8].[KEY] AS [KEY], [AdaBoost_Estim_8].[Score_0] AS [Score_0], [AdaBoost_Estim_8].[Proba_0] AS [Proba_0], [AdaBoost_Estim_8].[Score_1] AS [Score_1], [AdaBoost_Estim_8].[Proba_1] AS [Proba_1] 
FROM [AdaBoost_Estim_8] UNION ALL SELECT [AdaBoost_Estim_9].[KEY] AS [KEY], [AdaBoost_Estim_9].[Score_0] AS [Score_0], [AdaBoost_Estim_9].[Proba_0] AS [Proba_0], [AdaBoost_Estim_9].[Score_1] AS [Score_1], [AdaBoost_Estim_9].[Proba_1] AS [Proba_1] 
FROM [AdaBoost_Estim_9] UNION ALL SELECT [AdaBoost_Estim_10].[KEY] AS [KEY], [AdaBoost_Estim_10].[Score_0] AS [Score_0], [AdaBoost_Estim_10].[Proba_0] AS [Proba_0], [AdaBoost_Estim_10].[Score_1] AS [Score_1], [AdaBoost_Estim_10].[Proba_1] AS [Proba_1] 
FROM [AdaBoost_Estim_10] UNION ALL SELECT [AdaBoost_Estim_11].[KEY] AS [KEY], [AdaBoost_Estim_11].[Score_0] AS [Score_0], [AdaBoost_Estim_11].[Proba_0] AS [Proba_0], [AdaBoost_Estim_11].[Score_1] AS [Score_1], [AdaBoost_Estim_11].[Proba_1] AS [Proba_1] 
FROM [AdaBoost_Estim_11] UNION ALL SELECT [AdaBoost_Estim_12].[KEY] AS [KEY], [AdaBoost_Estim_12].[Score_0] AS [Score_0], [AdaBoost_Estim_12].[Proba_0] AS [Proba_0], [AdaBoost_Estim_12].[Score_1] AS [Score_1], [AdaBoost_Estim_12].[Proba_1] AS [Proba_1] 
FROM [AdaBoost_Estim_12] UNION ALL SELECT [AdaBoost_Estim_13].[KEY] AS [KEY], [AdaBoost_Estim_13].[Score_0] AS [Score_0], [AdaBoost_Estim_13].[Proba_0] AS [Proba_0], [AdaBoost_Estim_13].[Score_1] AS [Score_1], [AdaBoost_Estim_13].[Proba_1] AS [Proba_1] 
FROM [AdaBoost_Estim_13] UNION ALL SELECT [AdaBoost_Estim_14].[KEY] AS [KEY], [AdaBoost_Estim_14].[Score_0] AS [Score_0], [AdaBoost_Estim_14].[Proba_0] AS [Proba_0], [AdaBoost_Estim_14].[Score_1] AS [Score_1], [AdaBoost_Estim_14].[Proba_1] AS [Proba_1] 
FROM [AdaBoost_Estim_14] UNION ALL SELECT [AdaBoost_Estim_15].[KEY] AS [KEY], [AdaBoost_Estim_15].[Score_0] AS [Score_0], [AdaBoost_Estim_15].[Proba_0] AS [Proba_0], [AdaBoost_Estim_15].[Score_1] AS [Score_1], [AdaBoost_Estim_15].[Proba_1] AS [Proba_1] 
FROM [AdaBoost_Estim_15] UNION ALL SELECT [AdaBoost_Estim_16].[KEY] AS [KEY], [AdaBoost_Estim_16].[Score_0] AS [Score_0], [AdaBoost_Estim_16].[Proba_0] AS [Proba_0], [AdaBoost_Estim_16].[Score_1] AS [Score_1], [AdaBoost_Estim_16].[Proba_1] AS [Proba_1] 
FROM [AdaBoost_Estim_16] UNION ALL SELECT [AdaBoost_Estim_17].[KEY] AS [KEY], [AdaBoost_Estim_17].[Score_0] AS [Score_0], [AdaBoost_Estim_17].[Proba_0] AS [Proba_0], [AdaBoost_Estim_17].[Score_1] AS [Score_1], [AdaBoost_Estim_17].[Proba_1] AS [Proba_1] 
FROM [AdaBoost_Estim_17] UNION ALL SELECT [AdaBoost_Estim_18].[KEY] AS [KEY], [AdaBoost_Estim_18].[Score_0] AS [Score_0], [AdaBoost_Estim_18].[Proba_0] AS [Proba_0], [AdaBoost_Estim_18].[Score_1] AS [Score_1], [AdaBoost_Estim_18].[Proba_1] AS [Proba_1] 
FROM [AdaBoost_Estim_18] UNION ALL SELECT [AdaBoost_Estim_19].[KEY] AS [KEY], [AdaBoost_Estim_19].[Score_0] AS [Score_0], [AdaBoost_Estim_19].[Proba_0] AS [Proba_0], [AdaBoost_Estim_19].[Score_1] AS [Score_1], [AdaBoost_Estim_19].[Proba_1] AS [Proba_1] 
FROM [AdaBoost_Estim_19] UNION ALL SELECT [AdaBoost_Estim_20].[KEY] AS [KEY], [AdaBoost_Estim_20].[Score_0] AS [Score_0], [AdaBoost_Estim_20].[Proba_0] AS [Proba_0], [AdaBoost_Estim_20].[Score_1] AS [Score_1], [AdaBoost_Estim_20].[Proba_1] AS [Proba_1] 
FROM [AdaBoost_Estim_20] UNION ALL SELECT [AdaBoost_Estim_21].[KEY] AS [KEY], [AdaBoost_Estim_21].[Score_0] AS [Score_0], [AdaBoost_Estim_21].[Proba_0] AS [Proba_0], [AdaBoost_Estim_21].[Score_1] AS [Score_1], [AdaBoost_Estim_21].[Proba_1] AS [Proba_1] 
FROM [AdaBoost_Estim_21] UNION ALL SELECT [AdaBoost_Estim_22].[KEY] AS [KEY], [AdaBoost_Estim_22].[Score_0] AS [Score_0], [AdaBoost_Estim_22].[Proba_0] AS [Proba_0], [AdaBoost_Estim_22].[Score_1] AS [Score_1], [AdaBoost_Estim_22].[Proba_1] AS [Proba_1] 
FROM [AdaBoost_Estim_22] UNION ALL SELECT [AdaBoost_Estim_23].[KEY] AS [KEY], [AdaBoost_Estim_23].[Score_0] AS [Score_0], [AdaBoost_Estim_23].[Proba_0] AS [Proba_0], [AdaBoost_Estim_23].[Score_1] AS [Score_1], [AdaBoost_Estim_23].[Proba_1] AS [Proba_1] 
FROM [AdaBoost_Estim_23] UNION ALL SELECT [AdaBoost_Estim_24].[KEY] AS [KEY], [AdaBoost_Estim_24].[Score_0] AS [Score_0], [AdaBoost_Estim_24].[Proba_0] AS [Proba_0], [AdaBoost_Estim_24].[Score_1] AS [Score_1], [AdaBoost_Estim_24].[Proba_1] AS [Proba_1] 
FROM [AdaBoost_Estim_24] UNION ALL SELECT [AdaBoost_Estim_25].[KEY] AS [KEY], [AdaBoost_Estim_25].[Score_0] AS [Score_0], [AdaBoost_Estim_25].[Proba_0] AS [Proba_0], [AdaBoost_Estim_25].[Score_1] AS [Score_1], [AdaBoost_Estim_25].[Proba_1] AS [Proba_1] 
FROM [AdaBoost_Estim_25] UNION ALL SELECT [AdaBoost_Estim_26].[KEY] AS [KEY], [AdaBoost_Estim_26].[Score_0] AS [Score_0], [AdaBoost_Estim_26].[Proba_0] AS [Proba_0], [AdaBoost_Estim_26].[Score_1] AS [Score_1], [AdaBoost_Estim_26].[Proba_1] AS [Proba_1] 
FROM [AdaBoost_Estim_26] UNION ALL SELECT [AdaBoost_Estim_27].[KEY] AS [KEY], [AdaBoost_Estim_27].[Score_0] AS [Score_0], [AdaBoost_Estim_27].[Proba_0] AS [Proba_0], [AdaBoost_Estim_27].[Score_1] AS [Score_1], [AdaBoost_Estim_27].[Proba_1] AS [Proba_1] 
FROM [AdaBoost_Estim_27] UNION ALL SELECT [AdaBoost_Estim_28].[KEY] AS [KEY], [AdaBoost_Estim_28].[Score_0] AS [Score_0], [AdaBoost_Estim_28].[Proba_0] AS [Proba_0], [AdaBoost_Estim_28].[Score_1] AS [Score_1], [AdaBoost_Estim_28].[Proba_1] AS [Proba_1] 
FROM [AdaBoost_Estim_28] UNION ALL SELECT [AdaBoost_Estim_29].[KEY] AS [KEY], [AdaBoost_Estim_29].[Score_0] AS [Score_0], [AdaBoost_Estim_29].[Proba_0] AS [Proba_0], [AdaBoost_Estim_29].[Score_1] AS [Score_1], [AdaBoost_Estim_29].[Proba_1] AS [Proba_1] 
FROM [AdaBoost_Estim_29] UNION ALL SELECT [AdaBoost_Estim_30].[KEY] AS [KEY], [AdaBoost_Estim_30].[Score_0] AS [Score_0], [AdaBoost_Estim_30].[Proba_0] AS [Proba_0], [AdaBoost_Estim_30].[Score_1] AS [Score_1], [AdaBoost_Estim_30].[Proba_1] AS [Proba_1] 
FROM [AdaBoost_Estim_30] UNION ALL SELECT [AdaBoost_Estim_31].[KEY] AS [KEY], [AdaBoost_Estim_31].[Score_0] AS [Score_0], [AdaBoost_Estim_31].[Proba_0] AS [Proba_0], [AdaBoost_Estim_31].[Score_1] AS [Score_1], [AdaBoost_Estim_31].[Proba_1] AS [Proba_1] 
FROM [AdaBoost_Estim_31]) AS ensemble_score_union), 
[ADA_Sum_Scores] AS 
(SELECT [T].[KEY] AS [KEY], [T].[Score_0] AS [Score_0], [T].[Proba_0] AS [Proba_0], [T].[Score_1] AS [Score_1], [T].[Proba_1] AS [Proba_1] 
FROM (SELECT [Score_Union_CTE].[KEY] AS [KEY], sum([Score_Union_CTE].[Score_0]) AS [Score_0], sum([Score_Union_CTE].[Proba_0]) AS [Proba_0], sum([Score_Union_CTE].[Score_1]) AS [Score_1], sum([Score_Union_CTE].[Proba_1]) AS [Proba_1] 
FROM [Score_Union_CTE] GROUP BY [Score_Union_CTE].[KEY]) AS [T]), 
[AdaBoost_AVG_Scores_BN] AS 
(SELECT [ADA_Sum_Scores].[KEY] AS [KEY], [ADA_Sum_Scores].[Score_0] AS [Score_0], [ADA_Sum_Scores].[Proba_0] AS [Proba_0], [ADA_Sum_Scores].[Score_1] AS [Score_1], [ADA_Sum_Scores].[Proba_1] AS [Proba_1] 
FROM [ADA_Sum_Scores]), 
[AdaBoost_AVG_Scores] AS 
(SELECT [AdaBoost_AVG_Scores_BN].[KEY] AS [KEY], -([AdaBoost_AVG_Scores_BN].[Score_1] - [AdaBoost_AVG_Scores_BN].[Score_0]) AS [Score_0], exp(([AdaBoost_AVG_Scores_BN].[Proba_0] / 32.0) / 1) / (exp(([AdaBoost_AVG_Scores_BN].[Proba_0] / 32.0) / 1) + exp(([AdaBoost_AVG_Scores_BN].[Proba_1] / 32.0) / 1)) AS [Proba_0], CAST(NULL AS FLOAT) AS [LogProba_0], [AdaBoost_AVG_Scores_BN].[Score_1] - [AdaBoost_AVG_Scores_BN].[Score_0] AS [Score_1], exp(([AdaBoost_AVG_Scores_BN].[Proba_1] / 32.0) / 1) / (exp(([AdaBoost_AVG_Scores_BN].[Proba_0] / 32.0) / 1) + exp(([AdaBoost_AVG_Scores_BN].[Proba_1] / 32.0) / 1)) AS [Proba_1], CAST(NULL AS FLOAT) AS [LogProba_1] 
FROM [AdaBoost_AVG_Scores_BN]), 
orig_cte AS 
(SELECT [AdaBoost_AVG_Scores].[KEY] AS [KEY], [AdaBoost_AVG_Scores].[Score_0] AS [Score_0], [AdaBoost_AVG_Scores].[Score_1] AS [Score_1], [AdaBoost_AVG_Scores].[Proba_0] AS [Proba_0], [AdaBoost_AVG_Scores].[Proba_1] AS [Proba_1], [AdaBoost_AVG_Scores].[LogProba_0] AS [LogProba_0], [AdaBoost_AVG_Scores].[LogProba_1] AS [LogProba_1], CAST(NULL AS INTEGER) AS [Decision], CAST(NULL AS FLOAT) AS [DecisionProba] 
FROM [AdaBoost_AVG_Scores]), 
score_class_union AS 
(SELECT scu.[KEY_u] AS [KEY_u], scu.class AS class, scu.[LogProba] AS [LogProba], scu.[Proba] AS [Proba], scu.[Score] AS [Score] 
FROM (SELECT orig_cte.[KEY] AS [KEY_u], 0 AS class, orig_cte.[LogProba_0] AS [LogProba], orig_cte.[Proba_0] AS [Proba], orig_cte.[Score_0] AS [Score] 
FROM orig_cte UNION ALL SELECT orig_cte.[KEY] AS [KEY_u], 1 AS class, orig_cte.[LogProba_1] AS [LogProba], orig_cte.[Proba_1] AS [Proba], orig_cte.[Score_1] AS [Score] 
FROM orig_cte) AS scu), 
score_max AS 
(SELECT orig_cte.[KEY] AS [KEY], orig_cte.[Score_0] AS [Score_0], orig_cte.[Score_1] AS [Score_1], orig_cte.[Proba_0] AS [Proba_0], orig_cte.[Proba_1] AS [Proba_1], orig_cte.[LogProba_0] AS [LogProba_0], orig_cte.[LogProba_1] AS [LogProba_1], orig_cte.[Decision] AS [Decision], orig_cte.[DecisionProba] AS [DecisionProba], max_select.[KEY_m] AS [KEY_m], max_select.[max_Score] AS [max_Score] 
FROM orig_cte LEFT OUTER JOIN (SELECT score_class_union.[KEY_u] AS [KEY_m], max(score_class_union.[Score]) AS [max_Score] 
FROM score_class_union GROUP BY score_class_union.[KEY_u]) AS max_select ON orig_cte.[KEY] = max_select.[KEY_m]), 
union_with_max AS 
(SELECT score_class_union.[KEY_u] AS [KEY_u], score_class_union.class AS class, score_class_union.[LogProba] AS [LogProba], score_class_union.[Proba] AS [Proba], score_class_union.[Score] AS [Score], score_max.[KEY] AS [KEY], score_max.[Score_0] AS [Score_0], score_max.[Score_1] AS [Score_1], score_max.[Proba_0] AS [Proba_0], score_max.[Proba_1] AS [Proba_1], score_max.[LogProba_0] AS [LogProba_0], score_max.[LogProba_1] AS [LogProba_1], score_max.[Decision] AS [Decision], score_max.[DecisionProba] AS [DecisionProba], score_max.[KEY_m] AS [KEY_m], score_max.[max_Score] AS [max_Score] 
FROM score_class_union LEFT OUTER JOIN score_max ON score_class_union.[KEY_u] = score_max.[KEY]), 
arg_max_cte AS 
(SELECT score_max.[KEY] AS [KEY], score_max.[Score_0] AS [Score_0], score_max.[Score_1] AS [Score_1], score_max.[Proba_0] AS [Proba_0], score_max.[Proba_1] AS [Proba_1], score_max.[LogProba_0] AS [LogProba_0], score_max.[LogProba_1] AS [LogProba_1], score_max.[Decision] AS [Decision], score_max.[DecisionProba] AS [DecisionProba], score_max.[KEY_m] AS [KEY_m], score_max.[max_Score] AS [max_Score], [arg_max_t_Score].[KEY_Score] AS [KEY_Score], [arg_max_t_Score].[arg_max_Score] AS [arg_max_Score] 
FROM score_max LEFT OUTER JOIN (SELECT union_with_max.[KEY] AS [KEY_Score], min(union_with_max.class) AS [arg_max_Score] 
FROM union_with_max 
WHERE union_with_max.[max_Score] <= union_with_max.[Score] GROUP BY union_with_max.[KEY]) AS [arg_max_t_Score] ON score_max.[KEY] = [arg_max_t_Score].[KEY_Score])
 SELECT arg_max_cte.[KEY] AS [KEY], arg_max_cte.[Score_0] AS [Score_0], arg_max_cte.[Score_1] AS [Score_1], arg_max_cte.[Proba_0] AS [Proba_0], arg_max_cte.[Proba_1] AS [Proba_1], CASE WHEN (arg_max_cte.[Proba_0] IS NULL OR arg_max_cte.[Proba_0] > 0.0) THEN log(arg_max_cte.[Proba_0]) ELSE -1.79769313486231e+308 END AS [LogProba_0], CASE WHEN (arg_max_cte.[Proba_1] IS NULL OR arg_max_cte.[Proba_1] > 0.0) THEN log(arg_max_cte.[Proba_1]) ELSE -1.79769313486231e+308 END AS [LogProba_1], arg_max_cte.[arg_max_Score] AS [Decision], CASE WHEN (arg_max_cte.[arg_max_Score] = 0) THEN arg_max_cte.[Proba_0] WHEN (arg_max_cte.[arg_max_Score] = 1) THEN arg_max_cte.[Proba_1] END AS [DecisionProba] 
FROM arg_max_cte