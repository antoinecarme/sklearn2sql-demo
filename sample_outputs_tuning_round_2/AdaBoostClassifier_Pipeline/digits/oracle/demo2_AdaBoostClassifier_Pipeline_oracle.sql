-- This SQL code was generated by sklearn2sql (development version).
-- Copyright 2017

WITH "ADS_imp_1_OUT" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_0" IS NULL) THEN 0.0 ELSE "ADS"."Feature_0" END AS impter_2, CASE WHEN ("ADS"."Feature_1" IS NULL) THEN 0.295059151009 ELSE "ADS"."Feature_1" END AS impter_3, CASE WHEN ("ADS"."Feature_2" IS NULL) THEN 5.10438413361 ELSE "ADS"."Feature_2" END AS impter_4, CASE WHEN ("ADS"."Feature_3" IS NULL) THEN 11.791927627 ELSE "ADS"."Feature_3" END AS impter_5, CASE WHEN ("ADS"."Feature_4" IS NULL) THEN 11.8482950592 ELSE "ADS"."Feature_4" END AS impter_6, CASE WHEN ("ADS"."Feature_5" IS NULL) THEN 5.82324286708 ELSE "ADS"."Feature_5" END AS impter_7, CASE WHEN ("ADS"."Feature_6" IS NULL) THEN 1.39457202505 ELSE "ADS"."Feature_6" END AS impter_8, CASE WHEN ("ADS"."Feature_7" IS NULL) THEN 0.134307585247 ELSE "ADS"."Feature_7" END AS impter_9, CASE WHEN ("ADS"."Feature_8" IS NULL) THEN 0.00556715379262 ELSE "ADS"."Feature_8" END AS impter_10, CASE WHEN ("ADS"."Feature_9" IS NULL) THEN 1.97703549061 ELSE "ADS"."Feature_9" END AS impter_11, CASE WHEN ("ADS"."Feature_10" IS NULL) THEN 10.3625608907 ELSE "ADS"."Feature_10" END AS impter_12, CASE WHEN ("ADS"."Feature_11" IS NULL) THEN 12.0306193459 ELSE "ADS"."Feature_11" END AS impter_13, CASE WHEN ("ADS"."Feature_12" IS NULL) THEN 10.2713987474 ELSE "ADS"."Feature_12" END AS impter_14, CASE WHEN ("ADS"."Feature_13" IS NULL) THEN 8.12178148921 ELSE "ADS"."Feature_13" END AS impter_15, CASE WHEN ("ADS"."Feature_14" IS NULL) THEN 1.89213639527 ELSE "ADS"."Feature_14" END AS impter_16, CASE WHEN ("ADS"."Feature_15" IS NULL) THEN 0.117606123869 ELSE "ADS"."Feature_15" END AS impter_17, CASE WHEN ("ADS"."Feature_16" IS NULL) THEN 0.00208768267223 ELSE "ADS"."Feature_16" END AS impter_18, CASE WHEN ("ADS"."Feature_17" IS NULL) THEN 2.54279749478 ELSE "ADS"."Feature_17" END AS impter_19, CASE WHEN ("ADS"."Feature_18" IS NULL) THEN 9.93528183716 ELSE "ADS"."Feature_18" END AS impter_20, CASE WHEN ("ADS"."Feature_19" IS NULL) THEN 7.09951287404 ELSE "ADS"."Feature_19" END AS impter_21, CASE WHEN ("ADS"."Feature_20" IS NULL) THEN 7.1329157968 ELSE "ADS"."Feature_20" END AS impter_22, CASE WHEN ("ADS"."Feature_21" IS NULL) THEN 7.81419624217 ELSE "ADS"."Feature_21" END AS impter_23, CASE WHEN ("ADS"."Feature_22" IS NULL) THEN 1.84342379958 ELSE "ADS"."Feature_22" END AS impter_24, CASE WHEN ("ADS"."Feature_23" IS NULL) THEN 0.0577592205985 ELSE "ADS"."Feature_23" END AS impter_25, CASE WHEN ("ADS"."Feature_24" IS NULL) THEN 0.000695894224078 ELSE "ADS"."Feature_24" END AS impter_26, CASE WHEN ("ADS"."Feature_25" IS NULL) THEN 2.48086290884 ELSE "ADS"."Feature_25" END AS impter_27, CASE WHEN ("ADS"."Feature_26" IS NULL) THEN 9.14335421016 ELSE "ADS"."Feature_26" END AS impter_28, CASE WHEN ("ADS"."Feature_27" IS NULL) THEN 8.96033402923 ELSE "ADS"."Feature_27" END AS impter_29, CASE WHEN ("ADS"."Feature_28" IS NULL) THEN 10.0368823939 ELSE "ADS"."Feature_28" END AS impter_30, CASE WHEN ("ADS"."Feature_29" IS NULL) THEN 7.59498956159 ELSE "ADS"."Feature_29" END AS impter_31, CASE WHEN ("ADS"."Feature_30" IS NULL) THEN 2.33750869868 ELSE "ADS"."Feature_30" END AS impter_32, CASE WHEN ("ADS"."Feature_31" IS NULL) THEN 0.00278357689631 ELSE "ADS"."Feature_31" END AS impter_33, CASE WHEN ("ADS"."Feature_32" IS NULL) THEN 0.0 ELSE "ADS"."Feature_32" END AS impter_34, CASE WHEN ("ADS"."Feature_33" IS NULL) THEN 2.33194154489 ELSE "ADS"."Feature_33" END AS impter_35, CASE WHEN ("ADS"."Feature_34" IS NULL) THEN 7.60890744607 ELSE "ADS"."Feature_34" END AS impter_36, CASE WHEN ("ADS"."Feature_35" IS NULL) THEN 9.02853166319 ELSE "ADS"."Feature_35" END AS impter_37, CASE WHEN ("ADS"."Feature_36" IS NULL) THEN 10.2700069589 ELSE "ADS"."Feature_36" END AS impter_38, CASE WHEN ("ADS"."Feature_37" IS NULL) THEN 8.80654140571 ELSE "ADS"."Feature_37" END AS impter_39, CASE WHEN ("ADS"."Feature_38" IS NULL) THEN 2.87543493389 ELSE "ADS"."Feature_38" END AS impter_40, CASE WHEN ("ADS"."Feature_39" IS NULL) THEN 0.0 ELSE "ADS"."Feature_39" END AS impter_41, CASE WHEN ("ADS"."Feature_40" IS NULL) THEN 0.0104384133612 ELSE "ADS"."Feature_40" END AS impter_42, CASE WHEN ("ADS"."Feature_41" IS NULL) THEN 1.57550452331 ELSE "ADS"."Feature_41" END AS impter_43, CASE WHEN ("ADS"."Feature_42" IS NULL) THEN 6.85873347251 ELSE "ADS"."Feature_42" END AS impter_44, CASE WHEN ("ADS"."Feature_43" IS NULL) THEN 7.25887265136 ELSE "ADS"."Feature_43" END AS impter_45, CASE WHEN ("ADS"."Feature_44" IS NULL) THEN 7.71050800278 ELSE "ADS"."Feature_44" END AS impter_46, CASE WHEN ("ADS"."Feature_45" IS NULL) THEN 8.28114126653 ELSE "ADS"."Feature_45" END AS impter_47, CASE WHEN ("ADS"."Feature_46" IS NULL) THEN 3.43215031315 ELSE "ADS"."Feature_46" END AS impter_48, CASE WHEN ("ADS"."Feature_47" IS NULL) THEN 0.0313152400835 ELSE "ADS"."Feature_47" END AS impter_49, CASE WHEN ("ADS"."Feature_48" IS NULL) THEN 0.00904662491301 ELSE "ADS"."Feature_48" END AS impter_50, CASE WHEN ("ADS"."Feature_49" IS NULL) THEN 0.708420320111 ELSE "ADS"."Feature_49" END AS impter_51, CASE WHEN ("ADS"."Feature_50" IS NULL) THEN 7.49269311065 ELSE "ADS"."Feature_50" END AS impter_52, CASE WHEN ("ADS"."Feature_51" IS NULL) THEN 9.52957550452 ELSE "ADS"."Feature_51" END AS impter_53, CASE WHEN ("ADS"."Feature_52" IS NULL) THEN 9.54140570633 ELSE "ADS"."Feature_52" END AS impter_54, CASE WHEN ("ADS"."Feature_53" IS NULL) THEN 8.7543493389 ELSE "ADS"."Feature_53" END AS impter_55, CASE WHEN ("ADS"."Feature_54" IS NULL) THEN 3.73973556019 ELSE "ADS"."Feature_54" END AS impter_56, CASE WHEN ("ADS"."Feature_55" IS NULL) THEN 0.219206680585 ELSE "ADS"."Feature_55" END AS impter_57, CASE WHEN ("ADS"."Feature_56" IS NULL) THEN 0.000695894224078 ELSE "ADS"."Feature_56" END AS impter_58, CASE WHEN ("ADS"."Feature_57" IS NULL) THEN 0.263743910926 ELSE "ADS"."Feature_57" END AS impter_59, CASE WHEN ("ADS"."Feature_58" IS NULL) THEN 5.47459986082 ELSE "ADS"."Feature_58" END AS impter_60, CASE WHEN ("ADS"."Feature_59" IS NULL) THEN 12.0974251914 ELSE "ADS"."Feature_59" END AS impter_61, CASE WHEN ("ADS"."Feature_60" IS NULL) THEN 11.8580375783 ELSE "ADS"."Feature_60" END AS impter_62, CASE WHEN ("ADS"."Feature_61" IS NULL) THEN 6.7167710508 ELSE "ADS"."Feature_61" END AS impter_63, CASE WHEN ("ADS"."Feature_62" IS NULL) THEN 2.08698677801 ELSE "ADS"."Feature_62" END AS impter_64, CASE WHEN ("ADS"."Feature_63" IS NULL) THEN 0.386221294363 ELSE "ADS"."Feature_63" END AS impter_65 
FROM digits "ADS"), 
"ADS_sca_2_OUT" AS 
(SELECT "ADS_imp_1_OUT"."KEY" AS "KEY", (CAST("ADS_imp_1_OUT".impter_2 AS FLOAT) - 0.0) / 1.0 AS scaler_2, (CAST("ADS_imp_1_OUT".impter_3 AS FLOAT) - 0.295059151009) / 0.886335971514 AS scaler_3, (CAST("ADS_imp_1_OUT".impter_4 AS FLOAT) - 5.10438413361) / 4.71456252236 AS scaler_4, (CAST("ADS_imp_1_OUT".impter_5 AS FLOAT) - 11.791927627) / 4.24270517756 AS scaler_5, (CAST("ADS_imp_1_OUT".impter_6 AS FLOAT) - 11.8482950592) / 4.29860785049 AS scaler_6, (CAST("ADS_imp_1_OUT".impter_7 AS FLOAT) - 5.82324286708) / 5.66405259335 AS scaler_7, (CAST("ADS_imp_1_OUT".impter_8 AS FLOAT) - 1.39457202505) / 3.36725374989 AS scaler_8, (CAST("ADS_imp_1_OUT".impter_9 AS FLOAT) - 0.134307585247) / 1.07384889611 AS scaler_9, (CAST("ADS_imp_1_OUT".impter_10 AS FLOAT) - 0.00556715379262) / 0.0912125950052 AS scaler_10, (CAST("ADS_imp_1_OUT".impter_11 AS FLOAT) - 1.97703549061) / 3.17657595134 AS scaler_11, (CAST("ADS_imp_1_OUT".impter_12 AS FLOAT) - 10.3625608907) / 5.42745576804 AS scaler_12, (CAST("ADS_imp_1_OUT".impter_13 AS FLOAT) - 12.0306193459) / 3.9240043127 AS scaler_13, (CAST("ADS_imp_1_OUT".impter_14 AS FLOAT) - 10.2713987474) / 4.75130678201 AS scaler_14, (CAST("ADS_imp_1_OUT".impter_15 AS FLOAT) - 8.12178148921) / 6.05574247042 AS scaler_15, (CAST("ADS_imp_1_OUT".impter_16 AS FLOAT) - 1.89213639527) / 3.63584960156 AS scaler_16, (CAST("ADS_imp_1_OUT".impter_17 AS FLOAT) - 0.117606123869) / 0.880913584841 AS scaler_17, (CAST("ADS_imp_1_OUT".impter_18 AS FLOAT) - 0.00208768267223) / 0.0456434469918 AS scaler_18, (CAST("ADS_imp_1_OUT".impter_19 AS FLOAT) - 2.54279749478) / 3.5359391483 AS scaler_19, (CAST("ADS_imp_1_OUT".impter_20 AS FLOAT) - 9.93528183716) / 5.67423342754 AS scaler_20, (CAST("ADS_imp_1_OUT".impter_21 AS FLOAT) - 7.09951287404) / 5.82896862212 AS scaler_21, (CAST("ADS_imp_1_OUT".impter_22 AS FLOAT) - 7.1329157968) / 6.16416638076 AS scaler_22, (CAST("ADS_imp_1_OUT".impter_23 AS FLOAT) - 7.81419624217) / 6.23721464144 AS scaler_23, (CAST("ADS_imp_1_OUT".impter_24 AS FLOAT) - 1.84342379958) / 3.35529684953 AS scaler_24, (CAST("ADS_imp_1_OUT".impter_25 AS FLOAT) - 0.0577592205985) / 0.470571680845 AS scaler_25, (CAST("ADS_imp_1_OUT".impter_26 AS FLOAT) - 0.000695894224078) / 0.0263706267523 AS scaler_26, (CAST("ADS_imp_1_OUT".impter_27 AS FLOAT) - 2.48086290884) / 3.15795311405 AS scaler_27, (CAST("ADS_imp_1_OUT".impter_28 AS FLOAT) - 9.14335421016) / 6.21144862077 AS scaler_28, (CAST("ADS_imp_1_OUT".impter_29 AS FLOAT) - 8.96033402923) / 5.8724993369 AS scaler_29, (CAST("ADS_imp_1_OUT".impter_30 AS FLOAT) - 10.0368823939) / 6.13119413882 AS scaler_30, (CAST("ADS_imp_1_OUT".impter_31 AS FLOAT) - 7.59498956159) / 5.88300951231 AS scaler_31, (CAST("ADS_imp_1_OUT".impter_32 AS FLOAT) - 2.33750869868) / 3.7555163121 AS scaler_32, (CAST("ADS_imp_1_OUT".impter_33 AS FLOAT) - 0.00278357689631) / 0.0526861328622 AS scaler_33, (CAST("ADS_imp_1_OUT".impter_34 AS FLOAT) - 0.0) / 1.0 AS scaler_34, (CAST("ADS_imp_1_OUT".impter_35 AS FLOAT) - 2.33194154489) / 3.5203616767 AS scaler_35, (CAST("ADS_imp_1_OUT".impter_36 AS FLOAT) - 7.60890744607) / 6.33742712715 AS scaler_36, (CAST("ADS_imp_1_OUT".impter_37 AS FLOAT) - 9.02853166319) / 6.25539879291 AS scaler_37, (CAST("ADS_imp_1_OUT".impter_38 AS FLOAT) - 10.2700069589) / 5.9183282366 AS scaler_38, (CAST("ADS_imp_1_OUT".impter_39 AS FLOAT) - 8.80654140571) / 5.86250594875 AS scaler_39, (CAST("ADS_imp_1_OUT".impter_40 AS FLOAT) - 2.87543493389) / 3.52155138888 AS scaler_40, (CAST("ADS_imp_1_OUT".impter_41 AS FLOAT) - 0.0) / 1.0 AS scaler_41, (CAST("ADS_imp_1_OUT".impter_42 AS FLOAT) - 0.0104384133612) / 0.160122221498 AS scaler_42, (CAST("ADS_imp_1_OUT".impter_43 AS FLOAT) - 1.57550452331) / 3.01481585756 AS scaler_43, (CAST("ADS_imp_1_OUT".impter_44 AS FLOAT) - 6.85873347251) / 6.54220934077 AS scaler_44, (CAST("ADS_imp_1_OUT".impter_45 AS FLOAT) - 7.25887265136) / 6.49091755443 AS scaler_45, (CAST("ADS_imp_1_OUT".impter_46 AS FLOAT) - 7.71050800278) / 6.29287362068 AS scaler_46, (CAST("ADS_imp_1_OUT".impter_47 AS FLOAT) - 8.28114126653) / 5.71330954915 AS scaler_47, (CAST("ADS_imp_1_OUT".impter_48 AS FLOAT) - 3.43215031315) / 4.32650025914 AS scaler_48, (CAST("ADS_imp_1_OUT".impter_49 AS FLOAT) - 0.0313152400835) / 0.333254145983 AS scaler_49, (CAST("ADS_imp_1_OUT".impter_50 AS FLOAT) - 0.00904662491301) / 0.228276642221 AS scaler_50, (CAST("ADS_imp_1_OUT".impter_51 AS FLOAT) - 0.708420320111) / 1.76307682322 AS scaler_51, (CAST("ADS_imp_1_OUT".impter_52 AS FLOAT) - 7.49269311065) / 5.67473574734 AS scaler_52, (CAST("ADS_imp_1_OUT".impter_53 AS FLOAT) - 9.52957550452) / 5.23079002251 AS scaler_53, (CAST("ADS_imp_1_OUT".impter_54 AS FLOAT) - 9.54140570633) / 5.25155551469 AS scaler_54, (CAST("ADS_imp_1_OUT".impter_55 AS FLOAT) - 8.7543493389) / 6.03436489776 AS scaler_55, (CAST("ADS_imp_1_OUT".impter_56 AS FLOAT) - 3.73973556019) / 4.95383426986 AS scaler_56, (CAST("ADS_imp_1_OUT".impter_57 AS FLOAT) - 0.219206680585) / 1.02574714206 AS scaler_57, (CAST("ADS_imp_1_OUT".impter_58 AS FLOAT) - 0.000695894224078) / 0.0263706267523 AS scaler_58, (CAST("ADS_imp_1_OUT".impter_59 AS FLOAT) - 0.263743910926) / 0.893431165158 AS scaler_59, (CAST("ADS_imp_1_OUT".impter_60 AS FLOAT) - 5.47459986082) / 5.06659361292 AS scaler_60, (CAST("ADS_imp_1_OUT".impter_61 AS FLOAT) - 12.0974251914) / 4.35996530676 AS scaler_61, (CAST("ADS_imp_1_OUT".impter_62 AS FLOAT) - 11.8580375783) / 4.88924228226 AS scaler_62, (CAST("ADS_imp_1_OUT".impter_63 AS FLOAT) - 6.7167710508) / 5.87255780346 AS scaler_63, (CAST("ADS_imp_1_OUT".impter_64 AS FLOAT) - 2.08698677801) / 4.12826085472 AS scaler_64, (CAST("ADS_imp_1_OUT".impter_65 AS FLOAT) - 0.386221294363) / 1.9151535006 AS scaler_65 
FROM "ADS_imp_1_OUT"), 
"DT_node_lookup" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_38 <= -1.6508052349090576) THEN 1 ELSE 2 END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Proba_0" AS "Proba_0", "Values"."LogProba_0" AS "LogProba_0", "Values"."Proba_1" AS "Proba_1", "Values"."LogProba_1" AS "LogProba_1", "Values"."Proba_2" AS "Proba_2", "Values"."LogProba_2" AS "LogProba_2", "Values"."Proba_3" AS "Proba_3", "Values"."LogProba_3" AS "LogProba_3", "Values"."Proba_4" AS "Proba_4", "Values"."LogProba_4" AS "LogProba_4", "Values"."Proba_5" AS "Proba_5", "Values"."LogProba_5" AS "LogProba_5", "Values"."Proba_6" AS "Proba_6", "Values"."LogProba_6" AS "LogProba_6", "Values"."Proba_7" AS "Proba_7", "Values"."LogProba_7" AS "LogProba_7", "Values"."Proba_8" AS "Proba_8", "Values"."LogProba_8" AS "LogProba_8", "Values"."Proba_9" AS "Proba_9", "Values"."LogProba_9" AS "LogProba_9", "Values"."Decision" AS "Decision", "Values"."DecisionProba" AS "DecisionProba" 
FROM (SELECT 1 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 219 AS count, 1 AS depth, 0 AS parent_id, 0.6118721461187213 AS "Proba_0", -0.491231929866 AS "LogProba_0", 0.0 AS "Proba_1", -BINARY_FLOAT_INFINITY AS "LogProba_1", 0.013698630136986313 AS "Proba_2", -4.29045944115 AS "LogProba_2", 0.004566210045662104 AS "Proba_3", -5.38907172982 AS "LogProba_3", 0.027397260273972626 AS "Proba_4", -3.59731226059 AS "LogProba_4", 0.08675799086758001 AS "Proba_5", -2.44463275065 AS "LogProba_5", 0.018264840182648415 AS "Proba_6", -4.0027773687 AS "LogProba_6", 0.0 AS "Proba_7", -BINARY_FLOAT_INFINITY AS "LogProba_7", 0.013698630136986313 AS "Proba_8", -4.29045944115 AS "LogProba_8", 0.22374429223744302 AS "Proba_9", -1.49725143171 AS "LogProba_9", 0 AS "Decision", 0.611872146119 AS "DecisionProba" FROM DUAL UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1218 AS count, 1 AS depth, 0 AS parent_id, 0.0032840722495894943 AS "Proba_0", -5.71867108715 AS "LogProba_0", 0.12068965517241378 AS "Proba_1", -2.11453286149 AS "LogProba_1", 0.11904761904761904 AS "Proba_2", -2.12823170585 AS "LogProba_2", 0.11822660098522167 AS "Proba_3", -2.13515214869 AS "LogProba_3", 0.11904761904761904 AS "Proba_4", -2.12823170585 AS "LogProba_4", 0.10262725779967159 AS "Proba_5", -2.27665171097 AS "LogProba_5", 0.11330049261083744 AS "Proba_6", -2.17771176311 AS "LogProba_6", 0.11494252873563218 AS "Proba_7", -2.16332302566 AS "LogProba_7", 0.10837438423645321 AS "Proba_8", -2.22216352568 AS "LogProba_8", 0.08045977011494254 AS "Proba_9", -2.5199979696 AS "LogProba_9", 1 AS "Decision", 0.120689655172 AS "DecisionProba" FROM DUAL) "Values"), 
"DT_Output" AS 
(SELECT "DT_node_lookup"."KEY" AS "KEY", "DT_node_lookup".node_id_2 AS node_id_2, "DT_node_data".node_id AS node_id, "DT_node_data".feature AS feature, "DT_node_data".threshold AS threshold, "DT_node_data".count AS count, "DT_node_data".depth AS depth, "DT_node_data".parent_id AS parent_id, "DT_node_data"."Proba_0" AS "Proba_0", "DT_node_data"."LogProba_0" AS "LogProba_0", "DT_node_data"."Proba_1" AS "Proba_1", "DT_node_data"."LogProba_1" AS "LogProba_1", "DT_node_data"."Proba_2" AS "Proba_2", "DT_node_data"."LogProba_2" AS "LogProba_2", "DT_node_data"."Proba_3" AS "Proba_3", "DT_node_data"."LogProba_3" AS "LogProba_3", "DT_node_data"."Proba_4" AS "Proba_4", "DT_node_data"."LogProba_4" AS "LogProba_4", "DT_node_data"."Proba_5" AS "Proba_5", "DT_node_data"."LogProba_5" AS "LogProba_5", "DT_node_data"."Proba_6" AS "Proba_6", "DT_node_data"."LogProba_6" AS "LogProba_6", "DT_node_data"."Proba_7" AS "Proba_7", "DT_node_data"."LogProba_7" AS "LogProba_7", "DT_node_data"."Proba_8" AS "Proba_8", "DT_node_data"."LogProba_8" AS "LogProba_8", "DT_node_data"."Proba_9" AS "Proba_9", "DT_node_data"."LogProba_9" AS "LogProba_9", "DT_node_data"."Decision" AS "Decision", "DT_node_data"."DecisionProba" AS "DecisionProba" 
FROM "DT_node_lookup" LEFT OUTER JOIN "DT_node_data" ON "DT_node_lookup".node_id_2 = "DT_node_data".node_id), 
"AdaBoost_Estim_0" AS 
(SELECT "DT_Output"."KEY" AS "KEY", (9.0 * (CASE WHEN ("DT_Output"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output"."Proba_0" IS NULL OR "DT_Output"."Proba_0" > 0.0) THEN ln("DT_Output"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output"."Proba_0" IS NULL OR "DT_Output"."Proba_0" > 0.0) THEN ln("DT_Output"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output"."Proba_1" IS NULL OR "DT_Output"."Proba_1" > 0.0) THEN ln("DT_Output"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output"."Proba_2" IS NULL OR "DT_Output"."Proba_2" > 0.0) THEN ln("DT_Output"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output"."Proba_3" IS NULL OR "DT_Output"."Proba_3" > 0.0) THEN ln("DT_Output"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output"."Proba_4" IS NULL OR "DT_Output"."Proba_4" > 0.0) THEN ln("DT_Output"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output"."Proba_5" IS NULL OR "DT_Output"."Proba_5" > 0.0) THEN ln("DT_Output"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output"."Proba_6" IS NULL OR "DT_Output"."Proba_6" > 0.0) THEN ln("DT_Output"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output"."Proba_7" IS NULL OR "DT_Output"."Proba_7" > 0.0) THEN ln("DT_Output"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output"."Proba_8" IS NULL OR "DT_Output"."Proba_8" > 0.0) THEN ln("DT_Output"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output"."Proba_9" IS NULL OR "DT_Output"."Proba_9" > 0.0) THEN ln("DT_Output"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10)) / 32.0 AS "Score_0", 9.0 * (CASE WHEN ("DT_Output"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output"."Proba_0" IS NULL OR "DT_Output"."Proba_0" > 0.0) THEN ln("DT_Output"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output"."Proba_0" IS NULL OR "DT_Output"."Proba_0" > 0.0) THEN ln("DT_Output"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output"."Proba_1" IS NULL OR "DT_Output"."Proba_1" > 0.0) THEN ln("DT_Output"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output"."Proba_2" IS NULL OR "DT_Output"."Proba_2" > 0.0) THEN ln("DT_Output"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output"."Proba_3" IS NULL OR "DT_Output"."Proba_3" > 0.0) THEN ln("DT_Output"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output"."Proba_4" IS NULL OR "DT_Output"."Proba_4" > 0.0) THEN ln("DT_Output"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output"."Proba_5" IS NULL OR "DT_Output"."Proba_5" > 0.0) THEN ln("DT_Output"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output"."Proba_6" IS NULL OR "DT_Output"."Proba_6" > 0.0) THEN ln("DT_Output"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output"."Proba_7" IS NULL OR "DT_Output"."Proba_7" > 0.0) THEN ln("DT_Output"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output"."Proba_8" IS NULL OR "DT_Output"."Proba_8" > 0.0) THEN ln("DT_Output"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output"."Proba_9" IS NULL OR "DT_Output"."Proba_9" > 0.0) THEN ln("DT_Output"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10) AS "Proba_0", (9.0 * (CASE WHEN ("DT_Output"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output"."Proba_1" IS NULL OR "DT_Output"."Proba_1" > 0.0) THEN ln("DT_Output"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output"."Proba_0" IS NULL OR "DT_Output"."Proba_0" > 0.0) THEN ln("DT_Output"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output"."Proba_1" IS NULL OR "DT_Output"."Proba_1" > 0.0) THEN ln("DT_Output"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output"."Proba_2" IS NULL OR "DT_Output"."Proba_2" > 0.0) THEN ln("DT_Output"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output"."Proba_3" IS NULL OR "DT_Output"."Proba_3" > 0.0) THEN ln("DT_Output"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output"."Proba_4" IS NULL OR "DT_Output"."Proba_4" > 0.0) THEN ln("DT_Output"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output"."Proba_5" IS NULL OR "DT_Output"."Proba_5" > 0.0) THEN ln("DT_Output"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output"."Proba_6" IS NULL OR "DT_Output"."Proba_6" > 0.0) THEN ln("DT_Output"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output"."Proba_7" IS NULL OR "DT_Output"."Proba_7" > 0.0) THEN ln("DT_Output"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output"."Proba_8" IS NULL OR "DT_Output"."Proba_8" > 0.0) THEN ln("DT_Output"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output"."Proba_9" IS NULL OR "DT_Output"."Proba_9" > 0.0) THEN ln("DT_Output"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10)) / 32.0 AS "Score_1", 9.0 * (CASE WHEN ("DT_Output"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output"."Proba_1" IS NULL OR "DT_Output"."Proba_1" > 0.0) THEN ln("DT_Output"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output"."Proba_0" IS NULL OR "DT_Output"."Proba_0" > 0.0) THEN ln("DT_Output"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output"."Proba_1" IS NULL OR "DT_Output"."Proba_1" > 0.0) THEN ln("DT_Output"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output"."Proba_2" IS NULL OR "DT_Output"."Proba_2" > 0.0) THEN ln("DT_Output"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output"."Proba_3" IS NULL OR "DT_Output"."Proba_3" > 0.0) THEN ln("DT_Output"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output"."Proba_4" IS NULL OR "DT_Output"."Proba_4" > 0.0) THEN ln("DT_Output"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output"."Proba_5" IS NULL OR "DT_Output"."Proba_5" > 0.0) THEN ln("DT_Output"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output"."Proba_6" IS NULL OR "DT_Output"."Proba_6" > 0.0) THEN ln("DT_Output"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output"."Proba_7" IS NULL OR "DT_Output"."Proba_7" > 0.0) THEN ln("DT_Output"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output"."Proba_8" IS NULL OR "DT_Output"."Proba_8" > 0.0) THEN ln("DT_Output"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output"."Proba_9" IS NULL OR "DT_Output"."Proba_9" > 0.0) THEN ln("DT_Output"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10) AS "Proba_1", (9.0 * (CASE WHEN ("DT_Output"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output"."Proba_2" IS NULL OR "DT_Output"."Proba_2" > 0.0) THEN ln("DT_Output"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output"."Proba_0" IS NULL OR "DT_Output"."Proba_0" > 0.0) THEN ln("DT_Output"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output"."Proba_1" IS NULL OR "DT_Output"."Proba_1" > 0.0) THEN ln("DT_Output"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output"."Proba_2" IS NULL OR "DT_Output"."Proba_2" > 0.0) THEN ln("DT_Output"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output"."Proba_3" IS NULL OR "DT_Output"."Proba_3" > 0.0) THEN ln("DT_Output"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output"."Proba_4" IS NULL OR "DT_Output"."Proba_4" > 0.0) THEN ln("DT_Output"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output"."Proba_5" IS NULL OR "DT_Output"."Proba_5" > 0.0) THEN ln("DT_Output"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output"."Proba_6" IS NULL OR "DT_Output"."Proba_6" > 0.0) THEN ln("DT_Output"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output"."Proba_7" IS NULL OR "DT_Output"."Proba_7" > 0.0) THEN ln("DT_Output"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output"."Proba_8" IS NULL OR "DT_Output"."Proba_8" > 0.0) THEN ln("DT_Output"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output"."Proba_9" IS NULL OR "DT_Output"."Proba_9" > 0.0) THEN ln("DT_Output"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10)) / 32.0 AS "Score_2", 9.0 * (CASE WHEN ("DT_Output"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output"."Proba_2" IS NULL OR "DT_Output"."Proba_2" > 0.0) THEN ln("DT_Output"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output"."Proba_0" IS NULL OR "DT_Output"."Proba_0" > 0.0) THEN ln("DT_Output"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output"."Proba_1" IS NULL OR "DT_Output"."Proba_1" > 0.0) THEN ln("DT_Output"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output"."Proba_2" IS NULL OR "DT_Output"."Proba_2" > 0.0) THEN ln("DT_Output"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output"."Proba_3" IS NULL OR "DT_Output"."Proba_3" > 0.0) THEN ln("DT_Output"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output"."Proba_4" IS NULL OR "DT_Output"."Proba_4" > 0.0) THEN ln("DT_Output"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output"."Proba_5" IS NULL OR "DT_Output"."Proba_5" > 0.0) THEN ln("DT_Output"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output"."Proba_6" IS NULL OR "DT_Output"."Proba_6" > 0.0) THEN ln("DT_Output"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output"."Proba_7" IS NULL OR "DT_Output"."Proba_7" > 0.0) THEN ln("DT_Output"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output"."Proba_8" IS NULL OR "DT_Output"."Proba_8" > 0.0) THEN ln("DT_Output"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output"."Proba_9" IS NULL OR "DT_Output"."Proba_9" > 0.0) THEN ln("DT_Output"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10) AS "Proba_2", (9.0 * (CASE WHEN ("DT_Output"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output"."Proba_3" IS NULL OR "DT_Output"."Proba_3" > 0.0) THEN ln("DT_Output"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output"."Proba_0" IS NULL OR "DT_Output"."Proba_0" > 0.0) THEN ln("DT_Output"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output"."Proba_1" IS NULL OR "DT_Output"."Proba_1" > 0.0) THEN ln("DT_Output"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output"."Proba_2" IS NULL OR "DT_Output"."Proba_2" > 0.0) THEN ln("DT_Output"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output"."Proba_3" IS NULL OR "DT_Output"."Proba_3" > 0.0) THEN ln("DT_Output"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output"."Proba_4" IS NULL OR "DT_Output"."Proba_4" > 0.0) THEN ln("DT_Output"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output"."Proba_5" IS NULL OR "DT_Output"."Proba_5" > 0.0) THEN ln("DT_Output"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output"."Proba_6" IS NULL OR "DT_Output"."Proba_6" > 0.0) THEN ln("DT_Output"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output"."Proba_7" IS NULL OR "DT_Output"."Proba_7" > 0.0) THEN ln("DT_Output"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output"."Proba_8" IS NULL OR "DT_Output"."Proba_8" > 0.0) THEN ln("DT_Output"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output"."Proba_9" IS NULL OR "DT_Output"."Proba_9" > 0.0) THEN ln("DT_Output"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10)) / 32.0 AS "Score_3", 9.0 * (CASE WHEN ("DT_Output"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output"."Proba_3" IS NULL OR "DT_Output"."Proba_3" > 0.0) THEN ln("DT_Output"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output"."Proba_0" IS NULL OR "DT_Output"."Proba_0" > 0.0) THEN ln("DT_Output"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output"."Proba_1" IS NULL OR "DT_Output"."Proba_1" > 0.0) THEN ln("DT_Output"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output"."Proba_2" IS NULL OR "DT_Output"."Proba_2" > 0.0) THEN ln("DT_Output"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output"."Proba_3" IS NULL OR "DT_Output"."Proba_3" > 0.0) THEN ln("DT_Output"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output"."Proba_4" IS NULL OR "DT_Output"."Proba_4" > 0.0) THEN ln("DT_Output"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output"."Proba_5" IS NULL OR "DT_Output"."Proba_5" > 0.0) THEN ln("DT_Output"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output"."Proba_6" IS NULL OR "DT_Output"."Proba_6" > 0.0) THEN ln("DT_Output"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output"."Proba_7" IS NULL OR "DT_Output"."Proba_7" > 0.0) THEN ln("DT_Output"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output"."Proba_8" IS NULL OR "DT_Output"."Proba_8" > 0.0) THEN ln("DT_Output"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output"."Proba_9" IS NULL OR "DT_Output"."Proba_9" > 0.0) THEN ln("DT_Output"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10) AS "Proba_3", (9.0 * (CASE WHEN ("DT_Output"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output"."Proba_4" IS NULL OR "DT_Output"."Proba_4" > 0.0) THEN ln("DT_Output"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output"."Proba_0" IS NULL OR "DT_Output"."Proba_0" > 0.0) THEN ln("DT_Output"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output"."Proba_1" IS NULL OR "DT_Output"."Proba_1" > 0.0) THEN ln("DT_Output"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output"."Proba_2" IS NULL OR "DT_Output"."Proba_2" > 0.0) THEN ln("DT_Output"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output"."Proba_3" IS NULL OR "DT_Output"."Proba_3" > 0.0) THEN ln("DT_Output"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output"."Proba_4" IS NULL OR "DT_Output"."Proba_4" > 0.0) THEN ln("DT_Output"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output"."Proba_5" IS NULL OR "DT_Output"."Proba_5" > 0.0) THEN ln("DT_Output"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output"."Proba_6" IS NULL OR "DT_Output"."Proba_6" > 0.0) THEN ln("DT_Output"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output"."Proba_7" IS NULL OR "DT_Output"."Proba_7" > 0.0) THEN ln("DT_Output"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output"."Proba_8" IS NULL OR "DT_Output"."Proba_8" > 0.0) THEN ln("DT_Output"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output"."Proba_9" IS NULL OR "DT_Output"."Proba_9" > 0.0) THEN ln("DT_Output"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10)) / 32.0 AS "Score_4", 9.0 * (CASE WHEN ("DT_Output"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output"."Proba_4" IS NULL OR "DT_Output"."Proba_4" > 0.0) THEN ln("DT_Output"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output"."Proba_0" IS NULL OR "DT_Output"."Proba_0" > 0.0) THEN ln("DT_Output"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output"."Proba_1" IS NULL OR "DT_Output"."Proba_1" > 0.0) THEN ln("DT_Output"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output"."Proba_2" IS NULL OR "DT_Output"."Proba_2" > 0.0) THEN ln("DT_Output"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output"."Proba_3" IS NULL OR "DT_Output"."Proba_3" > 0.0) THEN ln("DT_Output"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output"."Proba_4" IS NULL OR "DT_Output"."Proba_4" > 0.0) THEN ln("DT_Output"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output"."Proba_5" IS NULL OR "DT_Output"."Proba_5" > 0.0) THEN ln("DT_Output"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output"."Proba_6" IS NULL OR "DT_Output"."Proba_6" > 0.0) THEN ln("DT_Output"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output"."Proba_7" IS NULL OR "DT_Output"."Proba_7" > 0.0) THEN ln("DT_Output"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output"."Proba_8" IS NULL OR "DT_Output"."Proba_8" > 0.0) THEN ln("DT_Output"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output"."Proba_9" IS NULL OR "DT_Output"."Proba_9" > 0.0) THEN ln("DT_Output"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10) AS "Proba_4", (9.0 * (CASE WHEN ("DT_Output"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output"."Proba_5" IS NULL OR "DT_Output"."Proba_5" > 0.0) THEN ln("DT_Output"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output"."Proba_0" IS NULL OR "DT_Output"."Proba_0" > 0.0) THEN ln("DT_Output"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output"."Proba_1" IS NULL OR "DT_Output"."Proba_1" > 0.0) THEN ln("DT_Output"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output"."Proba_2" IS NULL OR "DT_Output"."Proba_2" > 0.0) THEN ln("DT_Output"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output"."Proba_3" IS NULL OR "DT_Output"."Proba_3" > 0.0) THEN ln("DT_Output"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output"."Proba_4" IS NULL OR "DT_Output"."Proba_4" > 0.0) THEN ln("DT_Output"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output"."Proba_5" IS NULL OR "DT_Output"."Proba_5" > 0.0) THEN ln("DT_Output"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output"."Proba_6" IS NULL OR "DT_Output"."Proba_6" > 0.0) THEN ln("DT_Output"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output"."Proba_7" IS NULL OR "DT_Output"."Proba_7" > 0.0) THEN ln("DT_Output"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output"."Proba_8" IS NULL OR "DT_Output"."Proba_8" > 0.0) THEN ln("DT_Output"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output"."Proba_9" IS NULL OR "DT_Output"."Proba_9" > 0.0) THEN ln("DT_Output"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10)) / 32.0 AS "Score_5", 9.0 * (CASE WHEN ("DT_Output"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output"."Proba_5" IS NULL OR "DT_Output"."Proba_5" > 0.0) THEN ln("DT_Output"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output"."Proba_0" IS NULL OR "DT_Output"."Proba_0" > 0.0) THEN ln("DT_Output"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output"."Proba_1" IS NULL OR "DT_Output"."Proba_1" > 0.0) THEN ln("DT_Output"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output"."Proba_2" IS NULL OR "DT_Output"."Proba_2" > 0.0) THEN ln("DT_Output"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output"."Proba_3" IS NULL OR "DT_Output"."Proba_3" > 0.0) THEN ln("DT_Output"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output"."Proba_4" IS NULL OR "DT_Output"."Proba_4" > 0.0) THEN ln("DT_Output"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output"."Proba_5" IS NULL OR "DT_Output"."Proba_5" > 0.0) THEN ln("DT_Output"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output"."Proba_6" IS NULL OR "DT_Output"."Proba_6" > 0.0) THEN ln("DT_Output"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output"."Proba_7" IS NULL OR "DT_Output"."Proba_7" > 0.0) THEN ln("DT_Output"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output"."Proba_8" IS NULL OR "DT_Output"."Proba_8" > 0.0) THEN ln("DT_Output"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output"."Proba_9" IS NULL OR "DT_Output"."Proba_9" > 0.0) THEN ln("DT_Output"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10) AS "Proba_5", (9.0 * (CASE WHEN ("DT_Output"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output"."Proba_6" IS NULL OR "DT_Output"."Proba_6" > 0.0) THEN ln("DT_Output"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output"."Proba_0" IS NULL OR "DT_Output"."Proba_0" > 0.0) THEN ln("DT_Output"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output"."Proba_1" IS NULL OR "DT_Output"."Proba_1" > 0.0) THEN ln("DT_Output"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output"."Proba_2" IS NULL OR "DT_Output"."Proba_2" > 0.0) THEN ln("DT_Output"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output"."Proba_3" IS NULL OR "DT_Output"."Proba_3" > 0.0) THEN ln("DT_Output"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output"."Proba_4" IS NULL OR "DT_Output"."Proba_4" > 0.0) THEN ln("DT_Output"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output"."Proba_5" IS NULL OR "DT_Output"."Proba_5" > 0.0) THEN ln("DT_Output"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output"."Proba_6" IS NULL OR "DT_Output"."Proba_6" > 0.0) THEN ln("DT_Output"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output"."Proba_7" IS NULL OR "DT_Output"."Proba_7" > 0.0) THEN ln("DT_Output"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output"."Proba_8" IS NULL OR "DT_Output"."Proba_8" > 0.0) THEN ln("DT_Output"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output"."Proba_9" IS NULL OR "DT_Output"."Proba_9" > 0.0) THEN ln("DT_Output"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10)) / 32.0 AS "Score_6", 9.0 * (CASE WHEN ("DT_Output"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output"."Proba_6" IS NULL OR "DT_Output"."Proba_6" > 0.0) THEN ln("DT_Output"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output"."Proba_0" IS NULL OR "DT_Output"."Proba_0" > 0.0) THEN ln("DT_Output"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output"."Proba_1" IS NULL OR "DT_Output"."Proba_1" > 0.0) THEN ln("DT_Output"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output"."Proba_2" IS NULL OR "DT_Output"."Proba_2" > 0.0) THEN ln("DT_Output"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output"."Proba_3" IS NULL OR "DT_Output"."Proba_3" > 0.0) THEN ln("DT_Output"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output"."Proba_4" IS NULL OR "DT_Output"."Proba_4" > 0.0) THEN ln("DT_Output"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output"."Proba_5" IS NULL OR "DT_Output"."Proba_5" > 0.0) THEN ln("DT_Output"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output"."Proba_6" IS NULL OR "DT_Output"."Proba_6" > 0.0) THEN ln("DT_Output"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output"."Proba_7" IS NULL OR "DT_Output"."Proba_7" > 0.0) THEN ln("DT_Output"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output"."Proba_8" IS NULL OR "DT_Output"."Proba_8" > 0.0) THEN ln("DT_Output"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output"."Proba_9" IS NULL OR "DT_Output"."Proba_9" > 0.0) THEN ln("DT_Output"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10) AS "Proba_6", (9.0 * (CASE WHEN ("DT_Output"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output"."Proba_7" IS NULL OR "DT_Output"."Proba_7" > 0.0) THEN ln("DT_Output"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output"."Proba_0" IS NULL OR "DT_Output"."Proba_0" > 0.0) THEN ln("DT_Output"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output"."Proba_1" IS NULL OR "DT_Output"."Proba_1" > 0.0) THEN ln("DT_Output"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output"."Proba_2" IS NULL OR "DT_Output"."Proba_2" > 0.0) THEN ln("DT_Output"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output"."Proba_3" IS NULL OR "DT_Output"."Proba_3" > 0.0) THEN ln("DT_Output"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output"."Proba_4" IS NULL OR "DT_Output"."Proba_4" > 0.0) THEN ln("DT_Output"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output"."Proba_5" IS NULL OR "DT_Output"."Proba_5" > 0.0) THEN ln("DT_Output"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output"."Proba_6" IS NULL OR "DT_Output"."Proba_6" > 0.0) THEN ln("DT_Output"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output"."Proba_7" IS NULL OR "DT_Output"."Proba_7" > 0.0) THEN ln("DT_Output"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output"."Proba_8" IS NULL OR "DT_Output"."Proba_8" > 0.0) THEN ln("DT_Output"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output"."Proba_9" IS NULL OR "DT_Output"."Proba_9" > 0.0) THEN ln("DT_Output"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10)) / 32.0 AS "Score_7", 9.0 * (CASE WHEN ("DT_Output"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output"."Proba_7" IS NULL OR "DT_Output"."Proba_7" > 0.0) THEN ln("DT_Output"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output"."Proba_0" IS NULL OR "DT_Output"."Proba_0" > 0.0) THEN ln("DT_Output"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output"."Proba_1" IS NULL OR "DT_Output"."Proba_1" > 0.0) THEN ln("DT_Output"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output"."Proba_2" IS NULL OR "DT_Output"."Proba_2" > 0.0) THEN ln("DT_Output"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output"."Proba_3" IS NULL OR "DT_Output"."Proba_3" > 0.0) THEN ln("DT_Output"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output"."Proba_4" IS NULL OR "DT_Output"."Proba_4" > 0.0) THEN ln("DT_Output"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output"."Proba_5" IS NULL OR "DT_Output"."Proba_5" > 0.0) THEN ln("DT_Output"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output"."Proba_6" IS NULL OR "DT_Output"."Proba_6" > 0.0) THEN ln("DT_Output"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output"."Proba_7" IS NULL OR "DT_Output"."Proba_7" > 0.0) THEN ln("DT_Output"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output"."Proba_8" IS NULL OR "DT_Output"."Proba_8" > 0.0) THEN ln("DT_Output"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output"."Proba_9" IS NULL OR "DT_Output"."Proba_9" > 0.0) THEN ln("DT_Output"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10) AS "Proba_7", (9.0 * (CASE WHEN ("DT_Output"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output"."Proba_8" IS NULL OR "DT_Output"."Proba_8" > 0.0) THEN ln("DT_Output"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output"."Proba_0" IS NULL OR "DT_Output"."Proba_0" > 0.0) THEN ln("DT_Output"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output"."Proba_1" IS NULL OR "DT_Output"."Proba_1" > 0.0) THEN ln("DT_Output"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output"."Proba_2" IS NULL OR "DT_Output"."Proba_2" > 0.0) THEN ln("DT_Output"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output"."Proba_3" IS NULL OR "DT_Output"."Proba_3" > 0.0) THEN ln("DT_Output"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output"."Proba_4" IS NULL OR "DT_Output"."Proba_4" > 0.0) THEN ln("DT_Output"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output"."Proba_5" IS NULL OR "DT_Output"."Proba_5" > 0.0) THEN ln("DT_Output"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output"."Proba_6" IS NULL OR "DT_Output"."Proba_6" > 0.0) THEN ln("DT_Output"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output"."Proba_7" IS NULL OR "DT_Output"."Proba_7" > 0.0) THEN ln("DT_Output"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output"."Proba_8" IS NULL OR "DT_Output"."Proba_8" > 0.0) THEN ln("DT_Output"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output"."Proba_9" IS NULL OR "DT_Output"."Proba_9" > 0.0) THEN ln("DT_Output"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10)) / 32.0 AS "Score_8", 9.0 * (CASE WHEN ("DT_Output"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output"."Proba_8" IS NULL OR "DT_Output"."Proba_8" > 0.0) THEN ln("DT_Output"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output"."Proba_0" IS NULL OR "DT_Output"."Proba_0" > 0.0) THEN ln("DT_Output"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output"."Proba_1" IS NULL OR "DT_Output"."Proba_1" > 0.0) THEN ln("DT_Output"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output"."Proba_2" IS NULL OR "DT_Output"."Proba_2" > 0.0) THEN ln("DT_Output"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output"."Proba_3" IS NULL OR "DT_Output"."Proba_3" > 0.0) THEN ln("DT_Output"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output"."Proba_4" IS NULL OR "DT_Output"."Proba_4" > 0.0) THEN ln("DT_Output"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output"."Proba_5" IS NULL OR "DT_Output"."Proba_5" > 0.0) THEN ln("DT_Output"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output"."Proba_6" IS NULL OR "DT_Output"."Proba_6" > 0.0) THEN ln("DT_Output"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output"."Proba_7" IS NULL OR "DT_Output"."Proba_7" > 0.0) THEN ln("DT_Output"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output"."Proba_8" IS NULL OR "DT_Output"."Proba_8" > 0.0) THEN ln("DT_Output"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output"."Proba_9" IS NULL OR "DT_Output"."Proba_9" > 0.0) THEN ln("DT_Output"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10) AS "Proba_8", (9.0 * (CASE WHEN ("DT_Output"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output"."Proba_9" IS NULL OR "DT_Output"."Proba_9" > 0.0) THEN ln("DT_Output"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output"."Proba_0" IS NULL OR "DT_Output"."Proba_0" > 0.0) THEN ln("DT_Output"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output"."Proba_1" IS NULL OR "DT_Output"."Proba_1" > 0.0) THEN ln("DT_Output"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output"."Proba_2" IS NULL OR "DT_Output"."Proba_2" > 0.0) THEN ln("DT_Output"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output"."Proba_3" IS NULL OR "DT_Output"."Proba_3" > 0.0) THEN ln("DT_Output"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output"."Proba_4" IS NULL OR "DT_Output"."Proba_4" > 0.0) THEN ln("DT_Output"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output"."Proba_5" IS NULL OR "DT_Output"."Proba_5" > 0.0) THEN ln("DT_Output"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output"."Proba_6" IS NULL OR "DT_Output"."Proba_6" > 0.0) THEN ln("DT_Output"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output"."Proba_7" IS NULL OR "DT_Output"."Proba_7" > 0.0) THEN ln("DT_Output"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output"."Proba_8" IS NULL OR "DT_Output"."Proba_8" > 0.0) THEN ln("DT_Output"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output"."Proba_9" IS NULL OR "DT_Output"."Proba_9" > 0.0) THEN ln("DT_Output"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10)) / 32.0 AS "Score_9", 9.0 * (CASE WHEN ("DT_Output"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output"."Proba_9" IS NULL OR "DT_Output"."Proba_9" > 0.0) THEN ln("DT_Output"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output"."Proba_0" IS NULL OR "DT_Output"."Proba_0" > 0.0) THEN ln("DT_Output"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output"."Proba_1" IS NULL OR "DT_Output"."Proba_1" > 0.0) THEN ln("DT_Output"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output"."Proba_2" IS NULL OR "DT_Output"."Proba_2" > 0.0) THEN ln("DT_Output"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output"."Proba_3" IS NULL OR "DT_Output"."Proba_3" > 0.0) THEN ln("DT_Output"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output"."Proba_4" IS NULL OR "DT_Output"."Proba_4" > 0.0) THEN ln("DT_Output"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output"."Proba_5" IS NULL OR "DT_Output"."Proba_5" > 0.0) THEN ln("DT_Output"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output"."Proba_6" IS NULL OR "DT_Output"."Proba_6" > 0.0) THEN ln("DT_Output"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output"."Proba_7" IS NULL OR "DT_Output"."Proba_7" > 0.0) THEN ln("DT_Output"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output"."Proba_8" IS NULL OR "DT_Output"."Proba_8" > 0.0) THEN ln("DT_Output"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output"."Proba_9" IS NULL OR "DT_Output"."Proba_9" > 0.0) THEN ln("DT_Output"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10) AS "Proba_9" 
FROM "DT_Output"), 
"DT_node_lookup_1" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_23 <= -1.1726703643798828) THEN 1 ELSE 2 END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_1" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Proba_0" AS "Proba_0", "Values"."LogProba_0" AS "LogProba_0", "Values"."Proba_1" AS "Proba_1", "Values"."LogProba_1" AS "LogProba_1", "Values"."Proba_2" AS "Proba_2", "Values"."LogProba_2" AS "LogProba_2", "Values"."Proba_3" AS "Proba_3", "Values"."LogProba_3" AS "LogProba_3", "Values"."Proba_4" AS "Proba_4", "Values"."LogProba_4" AS "LogProba_4", "Values"."Proba_5" AS "Proba_5", "Values"."LogProba_5" AS "LogProba_5", "Values"."Proba_6" AS "Proba_6", "Values"."LogProba_6" AS "LogProba_6", "Values"."Proba_7" AS "Proba_7", "Values"."LogProba_7" AS "LogProba_7", "Values"."Proba_8" AS "Proba_8", "Values"."LogProba_8" AS "LogProba_8", "Values"."Proba_9" AS "Proba_9", "Values"."LogProba_9" AS "LogProba_9", "Values"."Decision" AS "Decision", "Values"."DecisionProba" AS "DecisionProba" 
FROM (SELECT 1 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 393 AS count, 1 AS depth, 0 AS parent_id, 3.4568306677105506e-07 AS "Proba_0", -14.8777434737 AS "LogProba_0", 0.08889138562216585 AS "Proba_1", -2.4203400408 AS "LogProba_1", 0.09265161787866981 AS "Proba_2", -2.37890886414 AS "LogProba_2", 0.027727116232839934 AS "Proba_3", -3.58534441925 AS "LogProba_3", 0.06512344339224879 AS "Proba_4", -2.73147068104 AS "LogProba_4", 0.3455723881530495 AS "Proba_5", -1.06255314063 AS "LogProba_5", 0.35511717828023104 AS "Proba_6", -1.03530746431 AS "LogProba_6", 0.012963327069899193 AS "Proba_7", -4.34563090265 AS "LogProba_7", 0.008249389953572212 AS "Proba_8", -4.79761602639 AS "LogProba_8", 0.0037038077342569113 AS "Proba_9", -5.59839387114 AS "LogProba_9", 6 AS "Decision", 0.35511717828 AS "DecisionProba" FROM DUAL UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1044 AS count, 1 AS depth, 0 AS parent_id, 0.13802472788136472 AS "Proba_0", -1.98032242233 AS "LogProba_0", 0.10420955404542699 AS "Proba_1", -2.26135146437 AS "LogProba_1", 0.1027974755362372 AS "Proba_2", -2.2749944833 AS "LogProba_2", 0.12748263903869606 AS "Proba_3", -2.05977508806 AS "LogProba_3", 0.11326405550058524 AS "Proba_4", -2.17803341194 AS "LogProba_4", 0.006633617376042149 AS "Proba_5", -5.01560501633 AS "LogProba_5", 0.0030045605652337564 AS "Proba_6", -5.80762395622 AS "LogProba_6", 0.133078416990444 AS "Proba_7", -2.01681672308 AS "LogProba_7", 0.13488833096811198 AS "Proba_8", -2.00330802086 AS "LogProba_8", 0.13661662209785788 AS "Proba_9", -1.99057665478 AS "LogProba_9", 0 AS "Decision", 0.138024727881 AS "DecisionProba" FROM DUAL) "Values"), 
"DT_Output_1" AS 
(SELECT "DT_node_lookup_1"."KEY" AS "KEY", "DT_node_lookup_1".node_id_2 AS node_id_2, "DT_node_data_1".node_id AS node_id, "DT_node_data_1".feature AS feature, "DT_node_data_1".threshold AS threshold, "DT_node_data_1".count AS count, "DT_node_data_1".depth AS depth, "DT_node_data_1".parent_id AS parent_id, "DT_node_data_1"."Proba_0" AS "Proba_0", "DT_node_data_1"."LogProba_0" AS "LogProba_0", "DT_node_data_1"."Proba_1" AS "Proba_1", "DT_node_data_1"."LogProba_1" AS "LogProba_1", "DT_node_data_1"."Proba_2" AS "Proba_2", "DT_node_data_1"."LogProba_2" AS "LogProba_2", "DT_node_data_1"."Proba_3" AS "Proba_3", "DT_node_data_1"."LogProba_3" AS "LogProba_3", "DT_node_data_1"."Proba_4" AS "Proba_4", "DT_node_data_1"."LogProba_4" AS "LogProba_4", "DT_node_data_1"."Proba_5" AS "Proba_5", "DT_node_data_1"."LogProba_5" AS "LogProba_5", "DT_node_data_1"."Proba_6" AS "Proba_6", "DT_node_data_1"."LogProba_6" AS "LogProba_6", "DT_node_data_1"."Proba_7" AS "Proba_7", "DT_node_data_1"."LogProba_7" AS "LogProba_7", "DT_node_data_1"."Proba_8" AS "Proba_8", "DT_node_data_1"."LogProba_8" AS "LogProba_8", "DT_node_data_1"."Proba_9" AS "Proba_9", "DT_node_data_1"."LogProba_9" AS "LogProba_9", "DT_node_data_1"."Decision" AS "Decision", "DT_node_data_1"."DecisionProba" AS "DecisionProba" 
FROM "DT_node_lookup_1" LEFT OUTER JOIN "DT_node_data_1" ON "DT_node_lookup_1".node_id_2 = "DT_node_data_1".node_id), 
"AdaBoost_Estim_1" AS 
(SELECT "DT_Output_1"."KEY" AS "KEY", (9.0 * (CASE WHEN ("DT_Output_1"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_1"."Proba_0" IS NULL OR "DT_Output_1"."Proba_0" > 0.0) THEN ln("DT_Output_1"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_1"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_1"."Proba_0" IS NULL OR "DT_Output_1"."Proba_0" > 0.0) THEN ln("DT_Output_1"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_1"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_1"."Proba_1" IS NULL OR "DT_Output_1"."Proba_1" > 0.0) THEN ln("DT_Output_1"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_1"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_1"."Proba_2" IS NULL OR "DT_Output_1"."Proba_2" > 0.0) THEN ln("DT_Output_1"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_1"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_1"."Proba_3" IS NULL OR "DT_Output_1"."Proba_3" > 0.0) THEN ln("DT_Output_1"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_1"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_1"."Proba_4" IS NULL OR "DT_Output_1"."Proba_4" > 0.0) THEN ln("DT_Output_1"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_1"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_1"."Proba_5" IS NULL OR "DT_Output_1"."Proba_5" > 0.0) THEN ln("DT_Output_1"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_1"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_1"."Proba_6" IS NULL OR "DT_Output_1"."Proba_6" > 0.0) THEN ln("DT_Output_1"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_1"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_1"."Proba_7" IS NULL OR "DT_Output_1"."Proba_7" > 0.0) THEN ln("DT_Output_1"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_1"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_1"."Proba_8" IS NULL OR "DT_Output_1"."Proba_8" > 0.0) THEN ln("DT_Output_1"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_1"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_1"."Proba_9" IS NULL OR "DT_Output_1"."Proba_9" > 0.0) THEN ln("DT_Output_1"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10)) / 32.0 AS "Score_0", 9.0 * (CASE WHEN ("DT_Output_1"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_1"."Proba_0" IS NULL OR "DT_Output_1"."Proba_0" > 0.0) THEN ln("DT_Output_1"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_1"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_1"."Proba_0" IS NULL OR "DT_Output_1"."Proba_0" > 0.0) THEN ln("DT_Output_1"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_1"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_1"."Proba_1" IS NULL OR "DT_Output_1"."Proba_1" > 0.0) THEN ln("DT_Output_1"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_1"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_1"."Proba_2" IS NULL OR "DT_Output_1"."Proba_2" > 0.0) THEN ln("DT_Output_1"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_1"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_1"."Proba_3" IS NULL OR "DT_Output_1"."Proba_3" > 0.0) THEN ln("DT_Output_1"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_1"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_1"."Proba_4" IS NULL OR "DT_Output_1"."Proba_4" > 0.0) THEN ln("DT_Output_1"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_1"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_1"."Proba_5" IS NULL OR "DT_Output_1"."Proba_5" > 0.0) THEN ln("DT_Output_1"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_1"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_1"."Proba_6" IS NULL OR "DT_Output_1"."Proba_6" > 0.0) THEN ln("DT_Output_1"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_1"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_1"."Proba_7" IS NULL OR "DT_Output_1"."Proba_7" > 0.0) THEN ln("DT_Output_1"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_1"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_1"."Proba_8" IS NULL OR "DT_Output_1"."Proba_8" > 0.0) THEN ln("DT_Output_1"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_1"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_1"."Proba_9" IS NULL OR "DT_Output_1"."Proba_9" > 0.0) THEN ln("DT_Output_1"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10) AS "Proba_0", (9.0 * (CASE WHEN ("DT_Output_1"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_1"."Proba_1" IS NULL OR "DT_Output_1"."Proba_1" > 0.0) THEN ln("DT_Output_1"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_1"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_1"."Proba_0" IS NULL OR "DT_Output_1"."Proba_0" > 0.0) THEN ln("DT_Output_1"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_1"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_1"."Proba_1" IS NULL OR "DT_Output_1"."Proba_1" > 0.0) THEN ln("DT_Output_1"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_1"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_1"."Proba_2" IS NULL OR "DT_Output_1"."Proba_2" > 0.0) THEN ln("DT_Output_1"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_1"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_1"."Proba_3" IS NULL OR "DT_Output_1"."Proba_3" > 0.0) THEN ln("DT_Output_1"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_1"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_1"."Proba_4" IS NULL OR "DT_Output_1"."Proba_4" > 0.0) THEN ln("DT_Output_1"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_1"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_1"."Proba_5" IS NULL OR "DT_Output_1"."Proba_5" > 0.0) THEN ln("DT_Output_1"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_1"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_1"."Proba_6" IS NULL OR "DT_Output_1"."Proba_6" > 0.0) THEN ln("DT_Output_1"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_1"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_1"."Proba_7" IS NULL OR "DT_Output_1"."Proba_7" > 0.0) THEN ln("DT_Output_1"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_1"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_1"."Proba_8" IS NULL OR "DT_Output_1"."Proba_8" > 0.0) THEN ln("DT_Output_1"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_1"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_1"."Proba_9" IS NULL OR "DT_Output_1"."Proba_9" > 0.0) THEN ln("DT_Output_1"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10)) / 32.0 AS "Score_1", 9.0 * (CASE WHEN ("DT_Output_1"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_1"."Proba_1" IS NULL OR "DT_Output_1"."Proba_1" > 0.0) THEN ln("DT_Output_1"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_1"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_1"."Proba_0" IS NULL OR "DT_Output_1"."Proba_0" > 0.0) THEN ln("DT_Output_1"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_1"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_1"."Proba_1" IS NULL OR "DT_Output_1"."Proba_1" > 0.0) THEN ln("DT_Output_1"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_1"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_1"."Proba_2" IS NULL OR "DT_Output_1"."Proba_2" > 0.0) THEN ln("DT_Output_1"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_1"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_1"."Proba_3" IS NULL OR "DT_Output_1"."Proba_3" > 0.0) THEN ln("DT_Output_1"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_1"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_1"."Proba_4" IS NULL OR "DT_Output_1"."Proba_4" > 0.0) THEN ln("DT_Output_1"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_1"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_1"."Proba_5" IS NULL OR "DT_Output_1"."Proba_5" > 0.0) THEN ln("DT_Output_1"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_1"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_1"."Proba_6" IS NULL OR "DT_Output_1"."Proba_6" > 0.0) THEN ln("DT_Output_1"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_1"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_1"."Proba_7" IS NULL OR "DT_Output_1"."Proba_7" > 0.0) THEN ln("DT_Output_1"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_1"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_1"."Proba_8" IS NULL OR "DT_Output_1"."Proba_8" > 0.0) THEN ln("DT_Output_1"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_1"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_1"."Proba_9" IS NULL OR "DT_Output_1"."Proba_9" > 0.0) THEN ln("DT_Output_1"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10) AS "Proba_1", (9.0 * (CASE WHEN ("DT_Output_1"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_1"."Proba_2" IS NULL OR "DT_Output_1"."Proba_2" > 0.0) THEN ln("DT_Output_1"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_1"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_1"."Proba_0" IS NULL OR "DT_Output_1"."Proba_0" > 0.0) THEN ln("DT_Output_1"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_1"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_1"."Proba_1" IS NULL OR "DT_Output_1"."Proba_1" > 0.0) THEN ln("DT_Output_1"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_1"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_1"."Proba_2" IS NULL OR "DT_Output_1"."Proba_2" > 0.0) THEN ln("DT_Output_1"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_1"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_1"."Proba_3" IS NULL OR "DT_Output_1"."Proba_3" > 0.0) THEN ln("DT_Output_1"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_1"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_1"."Proba_4" IS NULL OR "DT_Output_1"."Proba_4" > 0.0) THEN ln("DT_Output_1"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_1"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_1"."Proba_5" IS NULL OR "DT_Output_1"."Proba_5" > 0.0) THEN ln("DT_Output_1"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_1"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_1"."Proba_6" IS NULL OR "DT_Output_1"."Proba_6" > 0.0) THEN ln("DT_Output_1"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_1"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_1"."Proba_7" IS NULL OR "DT_Output_1"."Proba_7" > 0.0) THEN ln("DT_Output_1"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_1"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_1"."Proba_8" IS NULL OR "DT_Output_1"."Proba_8" > 0.0) THEN ln("DT_Output_1"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_1"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_1"."Proba_9" IS NULL OR "DT_Output_1"."Proba_9" > 0.0) THEN ln("DT_Output_1"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10)) / 32.0 AS "Score_2", 9.0 * (CASE WHEN ("DT_Output_1"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_1"."Proba_2" IS NULL OR "DT_Output_1"."Proba_2" > 0.0) THEN ln("DT_Output_1"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_1"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_1"."Proba_0" IS NULL OR "DT_Output_1"."Proba_0" > 0.0) THEN ln("DT_Output_1"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_1"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_1"."Proba_1" IS NULL OR "DT_Output_1"."Proba_1" > 0.0) THEN ln("DT_Output_1"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_1"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_1"."Proba_2" IS NULL OR "DT_Output_1"."Proba_2" > 0.0) THEN ln("DT_Output_1"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_1"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_1"."Proba_3" IS NULL OR "DT_Output_1"."Proba_3" > 0.0) THEN ln("DT_Output_1"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_1"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_1"."Proba_4" IS NULL OR "DT_Output_1"."Proba_4" > 0.0) THEN ln("DT_Output_1"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_1"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_1"."Proba_5" IS NULL OR "DT_Output_1"."Proba_5" > 0.0) THEN ln("DT_Output_1"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_1"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_1"."Proba_6" IS NULL OR "DT_Output_1"."Proba_6" > 0.0) THEN ln("DT_Output_1"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_1"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_1"."Proba_7" IS NULL OR "DT_Output_1"."Proba_7" > 0.0) THEN ln("DT_Output_1"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_1"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_1"."Proba_8" IS NULL OR "DT_Output_1"."Proba_8" > 0.0) THEN ln("DT_Output_1"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_1"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_1"."Proba_9" IS NULL OR "DT_Output_1"."Proba_9" > 0.0) THEN ln("DT_Output_1"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10) AS "Proba_2", (9.0 * (CASE WHEN ("DT_Output_1"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_1"."Proba_3" IS NULL OR "DT_Output_1"."Proba_3" > 0.0) THEN ln("DT_Output_1"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_1"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_1"."Proba_0" IS NULL OR "DT_Output_1"."Proba_0" > 0.0) THEN ln("DT_Output_1"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_1"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_1"."Proba_1" IS NULL OR "DT_Output_1"."Proba_1" > 0.0) THEN ln("DT_Output_1"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_1"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_1"."Proba_2" IS NULL OR "DT_Output_1"."Proba_2" > 0.0) THEN ln("DT_Output_1"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_1"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_1"."Proba_3" IS NULL OR "DT_Output_1"."Proba_3" > 0.0) THEN ln("DT_Output_1"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_1"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_1"."Proba_4" IS NULL OR "DT_Output_1"."Proba_4" > 0.0) THEN ln("DT_Output_1"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_1"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_1"."Proba_5" IS NULL OR "DT_Output_1"."Proba_5" > 0.0) THEN ln("DT_Output_1"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_1"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_1"."Proba_6" IS NULL OR "DT_Output_1"."Proba_6" > 0.0) THEN ln("DT_Output_1"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_1"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_1"."Proba_7" IS NULL OR "DT_Output_1"."Proba_7" > 0.0) THEN ln("DT_Output_1"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_1"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_1"."Proba_8" IS NULL OR "DT_Output_1"."Proba_8" > 0.0) THEN ln("DT_Output_1"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_1"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_1"."Proba_9" IS NULL OR "DT_Output_1"."Proba_9" > 0.0) THEN ln("DT_Output_1"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10)) / 32.0 AS "Score_3", 9.0 * (CASE WHEN ("DT_Output_1"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_1"."Proba_3" IS NULL OR "DT_Output_1"."Proba_3" > 0.0) THEN ln("DT_Output_1"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_1"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_1"."Proba_0" IS NULL OR "DT_Output_1"."Proba_0" > 0.0) THEN ln("DT_Output_1"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_1"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_1"."Proba_1" IS NULL OR "DT_Output_1"."Proba_1" > 0.0) THEN ln("DT_Output_1"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_1"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_1"."Proba_2" IS NULL OR "DT_Output_1"."Proba_2" > 0.0) THEN ln("DT_Output_1"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_1"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_1"."Proba_3" IS NULL OR "DT_Output_1"."Proba_3" > 0.0) THEN ln("DT_Output_1"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_1"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_1"."Proba_4" IS NULL OR "DT_Output_1"."Proba_4" > 0.0) THEN ln("DT_Output_1"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_1"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_1"."Proba_5" IS NULL OR "DT_Output_1"."Proba_5" > 0.0) THEN ln("DT_Output_1"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_1"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_1"."Proba_6" IS NULL OR "DT_Output_1"."Proba_6" > 0.0) THEN ln("DT_Output_1"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_1"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_1"."Proba_7" IS NULL OR "DT_Output_1"."Proba_7" > 0.0) THEN ln("DT_Output_1"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_1"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_1"."Proba_8" IS NULL OR "DT_Output_1"."Proba_8" > 0.0) THEN ln("DT_Output_1"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_1"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_1"."Proba_9" IS NULL OR "DT_Output_1"."Proba_9" > 0.0) THEN ln("DT_Output_1"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10) AS "Proba_3", (9.0 * (CASE WHEN ("DT_Output_1"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_1"."Proba_4" IS NULL OR "DT_Output_1"."Proba_4" > 0.0) THEN ln("DT_Output_1"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_1"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_1"."Proba_0" IS NULL OR "DT_Output_1"."Proba_0" > 0.0) THEN ln("DT_Output_1"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_1"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_1"."Proba_1" IS NULL OR "DT_Output_1"."Proba_1" > 0.0) THEN ln("DT_Output_1"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_1"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_1"."Proba_2" IS NULL OR "DT_Output_1"."Proba_2" > 0.0) THEN ln("DT_Output_1"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_1"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_1"."Proba_3" IS NULL OR "DT_Output_1"."Proba_3" > 0.0) THEN ln("DT_Output_1"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_1"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_1"."Proba_4" IS NULL OR "DT_Output_1"."Proba_4" > 0.0) THEN ln("DT_Output_1"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_1"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_1"."Proba_5" IS NULL OR "DT_Output_1"."Proba_5" > 0.0) THEN ln("DT_Output_1"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_1"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_1"."Proba_6" IS NULL OR "DT_Output_1"."Proba_6" > 0.0) THEN ln("DT_Output_1"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_1"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_1"."Proba_7" IS NULL OR "DT_Output_1"."Proba_7" > 0.0) THEN ln("DT_Output_1"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_1"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_1"."Proba_8" IS NULL OR "DT_Output_1"."Proba_8" > 0.0) THEN ln("DT_Output_1"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_1"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_1"."Proba_9" IS NULL OR "DT_Output_1"."Proba_9" > 0.0) THEN ln("DT_Output_1"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10)) / 32.0 AS "Score_4", 9.0 * (CASE WHEN ("DT_Output_1"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_1"."Proba_4" IS NULL OR "DT_Output_1"."Proba_4" > 0.0) THEN ln("DT_Output_1"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_1"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_1"."Proba_0" IS NULL OR "DT_Output_1"."Proba_0" > 0.0) THEN ln("DT_Output_1"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_1"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_1"."Proba_1" IS NULL OR "DT_Output_1"."Proba_1" > 0.0) THEN ln("DT_Output_1"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_1"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_1"."Proba_2" IS NULL OR "DT_Output_1"."Proba_2" > 0.0) THEN ln("DT_Output_1"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_1"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_1"."Proba_3" IS NULL OR "DT_Output_1"."Proba_3" > 0.0) THEN ln("DT_Output_1"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_1"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_1"."Proba_4" IS NULL OR "DT_Output_1"."Proba_4" > 0.0) THEN ln("DT_Output_1"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_1"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_1"."Proba_5" IS NULL OR "DT_Output_1"."Proba_5" > 0.0) THEN ln("DT_Output_1"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_1"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_1"."Proba_6" IS NULL OR "DT_Output_1"."Proba_6" > 0.0) THEN ln("DT_Output_1"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_1"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_1"."Proba_7" IS NULL OR "DT_Output_1"."Proba_7" > 0.0) THEN ln("DT_Output_1"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_1"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_1"."Proba_8" IS NULL OR "DT_Output_1"."Proba_8" > 0.0) THEN ln("DT_Output_1"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_1"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_1"."Proba_9" IS NULL OR "DT_Output_1"."Proba_9" > 0.0) THEN ln("DT_Output_1"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10) AS "Proba_4", (9.0 * (CASE WHEN ("DT_Output_1"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_1"."Proba_5" IS NULL OR "DT_Output_1"."Proba_5" > 0.0) THEN ln("DT_Output_1"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_1"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_1"."Proba_0" IS NULL OR "DT_Output_1"."Proba_0" > 0.0) THEN ln("DT_Output_1"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_1"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_1"."Proba_1" IS NULL OR "DT_Output_1"."Proba_1" > 0.0) THEN ln("DT_Output_1"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_1"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_1"."Proba_2" IS NULL OR "DT_Output_1"."Proba_2" > 0.0) THEN ln("DT_Output_1"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_1"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_1"."Proba_3" IS NULL OR "DT_Output_1"."Proba_3" > 0.0) THEN ln("DT_Output_1"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_1"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_1"."Proba_4" IS NULL OR "DT_Output_1"."Proba_4" > 0.0) THEN ln("DT_Output_1"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_1"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_1"."Proba_5" IS NULL OR "DT_Output_1"."Proba_5" > 0.0) THEN ln("DT_Output_1"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_1"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_1"."Proba_6" IS NULL OR "DT_Output_1"."Proba_6" > 0.0) THEN ln("DT_Output_1"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_1"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_1"."Proba_7" IS NULL OR "DT_Output_1"."Proba_7" > 0.0) THEN ln("DT_Output_1"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_1"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_1"."Proba_8" IS NULL OR "DT_Output_1"."Proba_8" > 0.0) THEN ln("DT_Output_1"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_1"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_1"."Proba_9" IS NULL OR "DT_Output_1"."Proba_9" > 0.0) THEN ln("DT_Output_1"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10)) / 32.0 AS "Score_5", 9.0 * (CASE WHEN ("DT_Output_1"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_1"."Proba_5" IS NULL OR "DT_Output_1"."Proba_5" > 0.0) THEN ln("DT_Output_1"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_1"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_1"."Proba_0" IS NULL OR "DT_Output_1"."Proba_0" > 0.0) THEN ln("DT_Output_1"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_1"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_1"."Proba_1" IS NULL OR "DT_Output_1"."Proba_1" > 0.0) THEN ln("DT_Output_1"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_1"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_1"."Proba_2" IS NULL OR "DT_Output_1"."Proba_2" > 0.0) THEN ln("DT_Output_1"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_1"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_1"."Proba_3" IS NULL OR "DT_Output_1"."Proba_3" > 0.0) THEN ln("DT_Output_1"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_1"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_1"."Proba_4" IS NULL OR "DT_Output_1"."Proba_4" > 0.0) THEN ln("DT_Output_1"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_1"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_1"."Proba_5" IS NULL OR "DT_Output_1"."Proba_5" > 0.0) THEN ln("DT_Output_1"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_1"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_1"."Proba_6" IS NULL OR "DT_Output_1"."Proba_6" > 0.0) THEN ln("DT_Output_1"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_1"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_1"."Proba_7" IS NULL OR "DT_Output_1"."Proba_7" > 0.0) THEN ln("DT_Output_1"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_1"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_1"."Proba_8" IS NULL OR "DT_Output_1"."Proba_8" > 0.0) THEN ln("DT_Output_1"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_1"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_1"."Proba_9" IS NULL OR "DT_Output_1"."Proba_9" > 0.0) THEN ln("DT_Output_1"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10) AS "Proba_5", (9.0 * (CASE WHEN ("DT_Output_1"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_1"."Proba_6" IS NULL OR "DT_Output_1"."Proba_6" > 0.0) THEN ln("DT_Output_1"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_1"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_1"."Proba_0" IS NULL OR "DT_Output_1"."Proba_0" > 0.0) THEN ln("DT_Output_1"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_1"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_1"."Proba_1" IS NULL OR "DT_Output_1"."Proba_1" > 0.0) THEN ln("DT_Output_1"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_1"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_1"."Proba_2" IS NULL OR "DT_Output_1"."Proba_2" > 0.0) THEN ln("DT_Output_1"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_1"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_1"."Proba_3" IS NULL OR "DT_Output_1"."Proba_3" > 0.0) THEN ln("DT_Output_1"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_1"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_1"."Proba_4" IS NULL OR "DT_Output_1"."Proba_4" > 0.0) THEN ln("DT_Output_1"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_1"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_1"."Proba_5" IS NULL OR "DT_Output_1"."Proba_5" > 0.0) THEN ln("DT_Output_1"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_1"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_1"."Proba_6" IS NULL OR "DT_Output_1"."Proba_6" > 0.0) THEN ln("DT_Output_1"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_1"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_1"."Proba_7" IS NULL OR "DT_Output_1"."Proba_7" > 0.0) THEN ln("DT_Output_1"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_1"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_1"."Proba_8" IS NULL OR "DT_Output_1"."Proba_8" > 0.0) THEN ln("DT_Output_1"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_1"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_1"."Proba_9" IS NULL OR "DT_Output_1"."Proba_9" > 0.0) THEN ln("DT_Output_1"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10)) / 32.0 AS "Score_6", 9.0 * (CASE WHEN ("DT_Output_1"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_1"."Proba_6" IS NULL OR "DT_Output_1"."Proba_6" > 0.0) THEN ln("DT_Output_1"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_1"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_1"."Proba_0" IS NULL OR "DT_Output_1"."Proba_0" > 0.0) THEN ln("DT_Output_1"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_1"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_1"."Proba_1" IS NULL OR "DT_Output_1"."Proba_1" > 0.0) THEN ln("DT_Output_1"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_1"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_1"."Proba_2" IS NULL OR "DT_Output_1"."Proba_2" > 0.0) THEN ln("DT_Output_1"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_1"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_1"."Proba_3" IS NULL OR "DT_Output_1"."Proba_3" > 0.0) THEN ln("DT_Output_1"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_1"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_1"."Proba_4" IS NULL OR "DT_Output_1"."Proba_4" > 0.0) THEN ln("DT_Output_1"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_1"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_1"."Proba_5" IS NULL OR "DT_Output_1"."Proba_5" > 0.0) THEN ln("DT_Output_1"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_1"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_1"."Proba_6" IS NULL OR "DT_Output_1"."Proba_6" > 0.0) THEN ln("DT_Output_1"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_1"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_1"."Proba_7" IS NULL OR "DT_Output_1"."Proba_7" > 0.0) THEN ln("DT_Output_1"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_1"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_1"."Proba_8" IS NULL OR "DT_Output_1"."Proba_8" > 0.0) THEN ln("DT_Output_1"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_1"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_1"."Proba_9" IS NULL OR "DT_Output_1"."Proba_9" > 0.0) THEN ln("DT_Output_1"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10) AS "Proba_6", (9.0 * (CASE WHEN ("DT_Output_1"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_1"."Proba_7" IS NULL OR "DT_Output_1"."Proba_7" > 0.0) THEN ln("DT_Output_1"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_1"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_1"."Proba_0" IS NULL OR "DT_Output_1"."Proba_0" > 0.0) THEN ln("DT_Output_1"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_1"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_1"."Proba_1" IS NULL OR "DT_Output_1"."Proba_1" > 0.0) THEN ln("DT_Output_1"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_1"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_1"."Proba_2" IS NULL OR "DT_Output_1"."Proba_2" > 0.0) THEN ln("DT_Output_1"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_1"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_1"."Proba_3" IS NULL OR "DT_Output_1"."Proba_3" > 0.0) THEN ln("DT_Output_1"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_1"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_1"."Proba_4" IS NULL OR "DT_Output_1"."Proba_4" > 0.0) THEN ln("DT_Output_1"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_1"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_1"."Proba_5" IS NULL OR "DT_Output_1"."Proba_5" > 0.0) THEN ln("DT_Output_1"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_1"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_1"."Proba_6" IS NULL OR "DT_Output_1"."Proba_6" > 0.0) THEN ln("DT_Output_1"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_1"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_1"."Proba_7" IS NULL OR "DT_Output_1"."Proba_7" > 0.0) THEN ln("DT_Output_1"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_1"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_1"."Proba_8" IS NULL OR "DT_Output_1"."Proba_8" > 0.0) THEN ln("DT_Output_1"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_1"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_1"."Proba_9" IS NULL OR "DT_Output_1"."Proba_9" > 0.0) THEN ln("DT_Output_1"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10)) / 32.0 AS "Score_7", 9.0 * (CASE WHEN ("DT_Output_1"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_1"."Proba_7" IS NULL OR "DT_Output_1"."Proba_7" > 0.0) THEN ln("DT_Output_1"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_1"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_1"."Proba_0" IS NULL OR "DT_Output_1"."Proba_0" > 0.0) THEN ln("DT_Output_1"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_1"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_1"."Proba_1" IS NULL OR "DT_Output_1"."Proba_1" > 0.0) THEN ln("DT_Output_1"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_1"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_1"."Proba_2" IS NULL OR "DT_Output_1"."Proba_2" > 0.0) THEN ln("DT_Output_1"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_1"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_1"."Proba_3" IS NULL OR "DT_Output_1"."Proba_3" > 0.0) THEN ln("DT_Output_1"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_1"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_1"."Proba_4" IS NULL OR "DT_Output_1"."Proba_4" > 0.0) THEN ln("DT_Output_1"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_1"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_1"."Proba_5" IS NULL OR "DT_Output_1"."Proba_5" > 0.0) THEN ln("DT_Output_1"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_1"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_1"."Proba_6" IS NULL OR "DT_Output_1"."Proba_6" > 0.0) THEN ln("DT_Output_1"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_1"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_1"."Proba_7" IS NULL OR "DT_Output_1"."Proba_7" > 0.0) THEN ln("DT_Output_1"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_1"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_1"."Proba_8" IS NULL OR "DT_Output_1"."Proba_8" > 0.0) THEN ln("DT_Output_1"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_1"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_1"."Proba_9" IS NULL OR "DT_Output_1"."Proba_9" > 0.0) THEN ln("DT_Output_1"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10) AS "Proba_7", (9.0 * (CASE WHEN ("DT_Output_1"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_1"."Proba_8" IS NULL OR "DT_Output_1"."Proba_8" > 0.0) THEN ln("DT_Output_1"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_1"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_1"."Proba_0" IS NULL OR "DT_Output_1"."Proba_0" > 0.0) THEN ln("DT_Output_1"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_1"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_1"."Proba_1" IS NULL OR "DT_Output_1"."Proba_1" > 0.0) THEN ln("DT_Output_1"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_1"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_1"."Proba_2" IS NULL OR "DT_Output_1"."Proba_2" > 0.0) THEN ln("DT_Output_1"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_1"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_1"."Proba_3" IS NULL OR "DT_Output_1"."Proba_3" > 0.0) THEN ln("DT_Output_1"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_1"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_1"."Proba_4" IS NULL OR "DT_Output_1"."Proba_4" > 0.0) THEN ln("DT_Output_1"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_1"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_1"."Proba_5" IS NULL OR "DT_Output_1"."Proba_5" > 0.0) THEN ln("DT_Output_1"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_1"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_1"."Proba_6" IS NULL OR "DT_Output_1"."Proba_6" > 0.0) THEN ln("DT_Output_1"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_1"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_1"."Proba_7" IS NULL OR "DT_Output_1"."Proba_7" > 0.0) THEN ln("DT_Output_1"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_1"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_1"."Proba_8" IS NULL OR "DT_Output_1"."Proba_8" > 0.0) THEN ln("DT_Output_1"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_1"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_1"."Proba_9" IS NULL OR "DT_Output_1"."Proba_9" > 0.0) THEN ln("DT_Output_1"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10)) / 32.0 AS "Score_8", 9.0 * (CASE WHEN ("DT_Output_1"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_1"."Proba_8" IS NULL OR "DT_Output_1"."Proba_8" > 0.0) THEN ln("DT_Output_1"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_1"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_1"."Proba_0" IS NULL OR "DT_Output_1"."Proba_0" > 0.0) THEN ln("DT_Output_1"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_1"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_1"."Proba_1" IS NULL OR "DT_Output_1"."Proba_1" > 0.0) THEN ln("DT_Output_1"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_1"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_1"."Proba_2" IS NULL OR "DT_Output_1"."Proba_2" > 0.0) THEN ln("DT_Output_1"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_1"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_1"."Proba_3" IS NULL OR "DT_Output_1"."Proba_3" > 0.0) THEN ln("DT_Output_1"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_1"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_1"."Proba_4" IS NULL OR "DT_Output_1"."Proba_4" > 0.0) THEN ln("DT_Output_1"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_1"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_1"."Proba_5" IS NULL OR "DT_Output_1"."Proba_5" > 0.0) THEN ln("DT_Output_1"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_1"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_1"."Proba_6" IS NULL OR "DT_Output_1"."Proba_6" > 0.0) THEN ln("DT_Output_1"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_1"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_1"."Proba_7" IS NULL OR "DT_Output_1"."Proba_7" > 0.0) THEN ln("DT_Output_1"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_1"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_1"."Proba_8" IS NULL OR "DT_Output_1"."Proba_8" > 0.0) THEN ln("DT_Output_1"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_1"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_1"."Proba_9" IS NULL OR "DT_Output_1"."Proba_9" > 0.0) THEN ln("DT_Output_1"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10) AS "Proba_8", (9.0 * (CASE WHEN ("DT_Output_1"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_1"."Proba_9" IS NULL OR "DT_Output_1"."Proba_9" > 0.0) THEN ln("DT_Output_1"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_1"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_1"."Proba_0" IS NULL OR "DT_Output_1"."Proba_0" > 0.0) THEN ln("DT_Output_1"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_1"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_1"."Proba_1" IS NULL OR "DT_Output_1"."Proba_1" > 0.0) THEN ln("DT_Output_1"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_1"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_1"."Proba_2" IS NULL OR "DT_Output_1"."Proba_2" > 0.0) THEN ln("DT_Output_1"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_1"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_1"."Proba_3" IS NULL OR "DT_Output_1"."Proba_3" > 0.0) THEN ln("DT_Output_1"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_1"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_1"."Proba_4" IS NULL OR "DT_Output_1"."Proba_4" > 0.0) THEN ln("DT_Output_1"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_1"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_1"."Proba_5" IS NULL OR "DT_Output_1"."Proba_5" > 0.0) THEN ln("DT_Output_1"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_1"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_1"."Proba_6" IS NULL OR "DT_Output_1"."Proba_6" > 0.0) THEN ln("DT_Output_1"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_1"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_1"."Proba_7" IS NULL OR "DT_Output_1"."Proba_7" > 0.0) THEN ln("DT_Output_1"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_1"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_1"."Proba_8" IS NULL OR "DT_Output_1"."Proba_8" > 0.0) THEN ln("DT_Output_1"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_1"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_1"."Proba_9" IS NULL OR "DT_Output_1"."Proba_9" > 0.0) THEN ln("DT_Output_1"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10)) / 32.0 AS "Score_9", 9.0 * (CASE WHEN ("DT_Output_1"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_1"."Proba_9" IS NULL OR "DT_Output_1"."Proba_9" > 0.0) THEN ln("DT_Output_1"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_1"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_1"."Proba_0" IS NULL OR "DT_Output_1"."Proba_0" > 0.0) THEN ln("DT_Output_1"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_1"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_1"."Proba_1" IS NULL OR "DT_Output_1"."Proba_1" > 0.0) THEN ln("DT_Output_1"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_1"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_1"."Proba_2" IS NULL OR "DT_Output_1"."Proba_2" > 0.0) THEN ln("DT_Output_1"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_1"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_1"."Proba_3" IS NULL OR "DT_Output_1"."Proba_3" > 0.0) THEN ln("DT_Output_1"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_1"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_1"."Proba_4" IS NULL OR "DT_Output_1"."Proba_4" > 0.0) THEN ln("DT_Output_1"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_1"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_1"."Proba_5" IS NULL OR "DT_Output_1"."Proba_5" > 0.0) THEN ln("DT_Output_1"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_1"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_1"."Proba_6" IS NULL OR "DT_Output_1"."Proba_6" > 0.0) THEN ln("DT_Output_1"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_1"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_1"."Proba_7" IS NULL OR "DT_Output_1"."Proba_7" > 0.0) THEN ln("DT_Output_1"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_1"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_1"."Proba_8" IS NULL OR "DT_Output_1"."Proba_8" > 0.0) THEN ln("DT_Output_1"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_1"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_1"."Proba_9" IS NULL OR "DT_Output_1"."Proba_9" > 0.0) THEN ln("DT_Output_1"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10) AS "Proba_9" 
FROM "DT_Output_1"), 
"DT_node_lookup_2" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_30 <= -1.555469036102295) THEN 1 ELSE 2 END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_2" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Proba_0" AS "Proba_0", "Values"."LogProba_0" AS "LogProba_0", "Values"."Proba_1" AS "Proba_1", "Values"."LogProba_1" AS "LogProba_1", "Values"."Proba_2" AS "Proba_2", "Values"."LogProba_2" AS "LogProba_2", "Values"."Proba_3" AS "Proba_3", "Values"."LogProba_3" AS "LogProba_3", "Values"."Proba_4" AS "Proba_4", "Values"."LogProba_4" AS "LogProba_4", "Values"."Proba_5" AS "Proba_5", "Values"."LogProba_5" AS "LogProba_5", "Values"."Proba_6" AS "Proba_6", "Values"."LogProba_6" AS "LogProba_6", "Values"."Proba_7" AS "Proba_7", "Values"."LogProba_7" AS "LogProba_7", "Values"."Proba_8" AS "Proba_8", "Values"."LogProba_8" AS "LogProba_8", "Values"."Proba_9" AS "Proba_9", "Values"."LogProba_9" AS "LogProba_9", "Values"."Decision" AS "Decision", "Values"."DecisionProba" AS "DecisionProba" 
FROM (SELECT 1 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 246 AS count, 1 AS depth, 0 AS parent_id, 0.8200137388830062 AS "Proba_0", -0.198434184129 AS "LogProba_0", 0.006822762732228794 AS "Proba_1", -4.98749079645 AS "LogProba_1", 0.014067017276077478 AS "Proba_2", -4.26392242208 AS "LogProba_2", 0.011392944986726041 AS "Proba_3", -4.47476097597 AS "LogProba_3", 0.0853778576330954 AS "Proba_4", -2.46066849011 AS "LogProba_4", 0.008430814954946709 AS "Proba_5", -4.77586183846 AS "LogProba_5", 0.02925889726414113 AS "Proba_6", -3.53157157159 AS "LogProba_6", 0.016829481406164356 AS "Proba_7", -4.08462308491 AS "LogProba_7", 0.0 AS "Proba_8", -BINARY_FLOAT_INFINITY AS "LogProba_8", 0.007806484863613861 AS "Proba_9", -4.85280049793 AS "LogProba_9", 0 AS "Decision", 0.820013738883 AS "DecisionProba" FROM DUAL UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1191 AS count, 1 AS depth, 0 AS parent_id, 1.1017395863598151e-06 AS "Proba_0", -13.7186201852 AS "LogProba_0", 0.11294089343931273 AS "Proba_1", -2.18089066403 AS "LogProba_1", 0.11193477725849307 AS "Proba_2", -2.18983892322 AS "LogProba_2", 0.11230616500898098 AS "Proba_3", -2.18652652107 AS "LogProba_3", 0.10203079198067228 AS "Proba_4", -2.28248062909 AS "LogProba_4", 0.11271755957506394 AS "Proba_5", -2.18287006195 AS "LogProba_5", 0.10982485743436904 AS "Proba_6", -2.20886838724 AS "LogProba_6", 0.11155111323296805 AS "Proba_7", -2.19327237848 AS "LogProba_7", 0.11388847085272974 AS "Proba_8", -2.17253563531 AS "LogProba_8", 0.11280426947782386 AS "Proba_9", -2.18210109065 AS "LogProba_9", 8 AS "Decision", 0.113888470853 AS "DecisionProba" FROM DUAL) "Values"), 
"DT_Output_2" AS 
(SELECT "DT_node_lookup_2"."KEY" AS "KEY", "DT_node_lookup_2".node_id_2 AS node_id_2, "DT_node_data_2".node_id AS node_id, "DT_node_data_2".feature AS feature, "DT_node_data_2".threshold AS threshold, "DT_node_data_2".count AS count, "DT_node_data_2".depth AS depth, "DT_node_data_2".parent_id AS parent_id, "DT_node_data_2"."Proba_0" AS "Proba_0", "DT_node_data_2"."LogProba_0" AS "LogProba_0", "DT_node_data_2"."Proba_1" AS "Proba_1", "DT_node_data_2"."LogProba_1" AS "LogProba_1", "DT_node_data_2"."Proba_2" AS "Proba_2", "DT_node_data_2"."LogProba_2" AS "LogProba_2", "DT_node_data_2"."Proba_3" AS "Proba_3", "DT_node_data_2"."LogProba_3" AS "LogProba_3", "DT_node_data_2"."Proba_4" AS "Proba_4", "DT_node_data_2"."LogProba_4" AS "LogProba_4", "DT_node_data_2"."Proba_5" AS "Proba_5", "DT_node_data_2"."LogProba_5" AS "LogProba_5", "DT_node_data_2"."Proba_6" AS "Proba_6", "DT_node_data_2"."LogProba_6" AS "LogProba_6", "DT_node_data_2"."Proba_7" AS "Proba_7", "DT_node_data_2"."LogProba_7" AS "LogProba_7", "DT_node_data_2"."Proba_8" AS "Proba_8", "DT_node_data_2"."LogProba_8" AS "LogProba_8", "DT_node_data_2"."Proba_9" AS "Proba_9", "DT_node_data_2"."LogProba_9" AS "LogProba_9", "DT_node_data_2"."Decision" AS "Decision", "DT_node_data_2"."DecisionProba" AS "DecisionProba" 
FROM "DT_node_lookup_2" LEFT OUTER JOIN "DT_node_data_2" ON "DT_node_lookup_2".node_id_2 = "DT_node_data_2".node_id), 
"AdaBoost_Estim_2" AS 
(SELECT "DT_Output_2"."KEY" AS "KEY", (9.0 * (CASE WHEN ("DT_Output_2"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_2"."Proba_0" IS NULL OR "DT_Output_2"."Proba_0" > 0.0) THEN ln("DT_Output_2"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_2"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_2"."Proba_0" IS NULL OR "DT_Output_2"."Proba_0" > 0.0) THEN ln("DT_Output_2"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_2"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_2"."Proba_1" IS NULL OR "DT_Output_2"."Proba_1" > 0.0) THEN ln("DT_Output_2"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_2"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_2"."Proba_2" IS NULL OR "DT_Output_2"."Proba_2" > 0.0) THEN ln("DT_Output_2"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_2"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_2"."Proba_3" IS NULL OR "DT_Output_2"."Proba_3" > 0.0) THEN ln("DT_Output_2"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_2"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_2"."Proba_4" IS NULL OR "DT_Output_2"."Proba_4" > 0.0) THEN ln("DT_Output_2"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_2"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_2"."Proba_5" IS NULL OR "DT_Output_2"."Proba_5" > 0.0) THEN ln("DT_Output_2"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_2"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_2"."Proba_6" IS NULL OR "DT_Output_2"."Proba_6" > 0.0) THEN ln("DT_Output_2"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_2"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_2"."Proba_7" IS NULL OR "DT_Output_2"."Proba_7" > 0.0) THEN ln("DT_Output_2"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_2"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_2"."Proba_8" IS NULL OR "DT_Output_2"."Proba_8" > 0.0) THEN ln("DT_Output_2"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_2"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_2"."Proba_9" IS NULL OR "DT_Output_2"."Proba_9" > 0.0) THEN ln("DT_Output_2"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10)) / 32.0 AS "Score_0", 9.0 * (CASE WHEN ("DT_Output_2"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_2"."Proba_0" IS NULL OR "DT_Output_2"."Proba_0" > 0.0) THEN ln("DT_Output_2"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_2"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_2"."Proba_0" IS NULL OR "DT_Output_2"."Proba_0" > 0.0) THEN ln("DT_Output_2"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_2"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_2"."Proba_1" IS NULL OR "DT_Output_2"."Proba_1" > 0.0) THEN ln("DT_Output_2"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_2"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_2"."Proba_2" IS NULL OR "DT_Output_2"."Proba_2" > 0.0) THEN ln("DT_Output_2"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_2"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_2"."Proba_3" IS NULL OR "DT_Output_2"."Proba_3" > 0.0) THEN ln("DT_Output_2"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_2"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_2"."Proba_4" IS NULL OR "DT_Output_2"."Proba_4" > 0.0) THEN ln("DT_Output_2"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_2"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_2"."Proba_5" IS NULL OR "DT_Output_2"."Proba_5" > 0.0) THEN ln("DT_Output_2"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_2"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_2"."Proba_6" IS NULL OR "DT_Output_2"."Proba_6" > 0.0) THEN ln("DT_Output_2"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_2"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_2"."Proba_7" IS NULL OR "DT_Output_2"."Proba_7" > 0.0) THEN ln("DT_Output_2"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_2"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_2"."Proba_8" IS NULL OR "DT_Output_2"."Proba_8" > 0.0) THEN ln("DT_Output_2"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_2"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_2"."Proba_9" IS NULL OR "DT_Output_2"."Proba_9" > 0.0) THEN ln("DT_Output_2"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10) AS "Proba_0", (9.0 * (CASE WHEN ("DT_Output_2"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_2"."Proba_1" IS NULL OR "DT_Output_2"."Proba_1" > 0.0) THEN ln("DT_Output_2"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_2"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_2"."Proba_0" IS NULL OR "DT_Output_2"."Proba_0" > 0.0) THEN ln("DT_Output_2"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_2"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_2"."Proba_1" IS NULL OR "DT_Output_2"."Proba_1" > 0.0) THEN ln("DT_Output_2"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_2"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_2"."Proba_2" IS NULL OR "DT_Output_2"."Proba_2" > 0.0) THEN ln("DT_Output_2"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_2"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_2"."Proba_3" IS NULL OR "DT_Output_2"."Proba_3" > 0.0) THEN ln("DT_Output_2"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_2"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_2"."Proba_4" IS NULL OR "DT_Output_2"."Proba_4" > 0.0) THEN ln("DT_Output_2"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_2"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_2"."Proba_5" IS NULL OR "DT_Output_2"."Proba_5" > 0.0) THEN ln("DT_Output_2"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_2"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_2"."Proba_6" IS NULL OR "DT_Output_2"."Proba_6" > 0.0) THEN ln("DT_Output_2"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_2"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_2"."Proba_7" IS NULL OR "DT_Output_2"."Proba_7" > 0.0) THEN ln("DT_Output_2"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_2"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_2"."Proba_8" IS NULL OR "DT_Output_2"."Proba_8" > 0.0) THEN ln("DT_Output_2"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_2"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_2"."Proba_9" IS NULL OR "DT_Output_2"."Proba_9" > 0.0) THEN ln("DT_Output_2"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10)) / 32.0 AS "Score_1", 9.0 * (CASE WHEN ("DT_Output_2"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_2"."Proba_1" IS NULL OR "DT_Output_2"."Proba_1" > 0.0) THEN ln("DT_Output_2"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_2"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_2"."Proba_0" IS NULL OR "DT_Output_2"."Proba_0" > 0.0) THEN ln("DT_Output_2"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_2"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_2"."Proba_1" IS NULL OR "DT_Output_2"."Proba_1" > 0.0) THEN ln("DT_Output_2"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_2"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_2"."Proba_2" IS NULL OR "DT_Output_2"."Proba_2" > 0.0) THEN ln("DT_Output_2"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_2"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_2"."Proba_3" IS NULL OR "DT_Output_2"."Proba_3" > 0.0) THEN ln("DT_Output_2"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_2"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_2"."Proba_4" IS NULL OR "DT_Output_2"."Proba_4" > 0.0) THEN ln("DT_Output_2"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_2"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_2"."Proba_5" IS NULL OR "DT_Output_2"."Proba_5" > 0.0) THEN ln("DT_Output_2"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_2"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_2"."Proba_6" IS NULL OR "DT_Output_2"."Proba_6" > 0.0) THEN ln("DT_Output_2"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_2"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_2"."Proba_7" IS NULL OR "DT_Output_2"."Proba_7" > 0.0) THEN ln("DT_Output_2"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_2"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_2"."Proba_8" IS NULL OR "DT_Output_2"."Proba_8" > 0.0) THEN ln("DT_Output_2"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_2"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_2"."Proba_9" IS NULL OR "DT_Output_2"."Proba_9" > 0.0) THEN ln("DT_Output_2"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10) AS "Proba_1", (9.0 * (CASE WHEN ("DT_Output_2"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_2"."Proba_2" IS NULL OR "DT_Output_2"."Proba_2" > 0.0) THEN ln("DT_Output_2"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_2"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_2"."Proba_0" IS NULL OR "DT_Output_2"."Proba_0" > 0.0) THEN ln("DT_Output_2"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_2"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_2"."Proba_1" IS NULL OR "DT_Output_2"."Proba_1" > 0.0) THEN ln("DT_Output_2"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_2"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_2"."Proba_2" IS NULL OR "DT_Output_2"."Proba_2" > 0.0) THEN ln("DT_Output_2"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_2"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_2"."Proba_3" IS NULL OR "DT_Output_2"."Proba_3" > 0.0) THEN ln("DT_Output_2"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_2"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_2"."Proba_4" IS NULL OR "DT_Output_2"."Proba_4" > 0.0) THEN ln("DT_Output_2"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_2"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_2"."Proba_5" IS NULL OR "DT_Output_2"."Proba_5" > 0.0) THEN ln("DT_Output_2"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_2"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_2"."Proba_6" IS NULL OR "DT_Output_2"."Proba_6" > 0.0) THEN ln("DT_Output_2"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_2"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_2"."Proba_7" IS NULL OR "DT_Output_2"."Proba_7" > 0.0) THEN ln("DT_Output_2"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_2"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_2"."Proba_8" IS NULL OR "DT_Output_2"."Proba_8" > 0.0) THEN ln("DT_Output_2"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_2"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_2"."Proba_9" IS NULL OR "DT_Output_2"."Proba_9" > 0.0) THEN ln("DT_Output_2"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10)) / 32.0 AS "Score_2", 9.0 * (CASE WHEN ("DT_Output_2"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_2"."Proba_2" IS NULL OR "DT_Output_2"."Proba_2" > 0.0) THEN ln("DT_Output_2"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_2"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_2"."Proba_0" IS NULL OR "DT_Output_2"."Proba_0" > 0.0) THEN ln("DT_Output_2"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_2"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_2"."Proba_1" IS NULL OR "DT_Output_2"."Proba_1" > 0.0) THEN ln("DT_Output_2"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_2"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_2"."Proba_2" IS NULL OR "DT_Output_2"."Proba_2" > 0.0) THEN ln("DT_Output_2"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_2"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_2"."Proba_3" IS NULL OR "DT_Output_2"."Proba_3" > 0.0) THEN ln("DT_Output_2"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_2"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_2"."Proba_4" IS NULL OR "DT_Output_2"."Proba_4" > 0.0) THEN ln("DT_Output_2"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_2"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_2"."Proba_5" IS NULL OR "DT_Output_2"."Proba_5" > 0.0) THEN ln("DT_Output_2"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_2"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_2"."Proba_6" IS NULL OR "DT_Output_2"."Proba_6" > 0.0) THEN ln("DT_Output_2"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_2"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_2"."Proba_7" IS NULL OR "DT_Output_2"."Proba_7" > 0.0) THEN ln("DT_Output_2"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_2"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_2"."Proba_8" IS NULL OR "DT_Output_2"."Proba_8" > 0.0) THEN ln("DT_Output_2"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_2"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_2"."Proba_9" IS NULL OR "DT_Output_2"."Proba_9" > 0.0) THEN ln("DT_Output_2"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10) AS "Proba_2", (9.0 * (CASE WHEN ("DT_Output_2"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_2"."Proba_3" IS NULL OR "DT_Output_2"."Proba_3" > 0.0) THEN ln("DT_Output_2"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_2"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_2"."Proba_0" IS NULL OR "DT_Output_2"."Proba_0" > 0.0) THEN ln("DT_Output_2"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_2"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_2"."Proba_1" IS NULL OR "DT_Output_2"."Proba_1" > 0.0) THEN ln("DT_Output_2"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_2"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_2"."Proba_2" IS NULL OR "DT_Output_2"."Proba_2" > 0.0) THEN ln("DT_Output_2"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_2"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_2"."Proba_3" IS NULL OR "DT_Output_2"."Proba_3" > 0.0) THEN ln("DT_Output_2"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_2"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_2"."Proba_4" IS NULL OR "DT_Output_2"."Proba_4" > 0.0) THEN ln("DT_Output_2"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_2"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_2"."Proba_5" IS NULL OR "DT_Output_2"."Proba_5" > 0.0) THEN ln("DT_Output_2"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_2"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_2"."Proba_6" IS NULL OR "DT_Output_2"."Proba_6" > 0.0) THEN ln("DT_Output_2"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_2"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_2"."Proba_7" IS NULL OR "DT_Output_2"."Proba_7" > 0.0) THEN ln("DT_Output_2"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_2"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_2"."Proba_8" IS NULL OR "DT_Output_2"."Proba_8" > 0.0) THEN ln("DT_Output_2"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_2"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_2"."Proba_9" IS NULL OR "DT_Output_2"."Proba_9" > 0.0) THEN ln("DT_Output_2"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10)) / 32.0 AS "Score_3", 9.0 * (CASE WHEN ("DT_Output_2"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_2"."Proba_3" IS NULL OR "DT_Output_2"."Proba_3" > 0.0) THEN ln("DT_Output_2"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_2"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_2"."Proba_0" IS NULL OR "DT_Output_2"."Proba_0" > 0.0) THEN ln("DT_Output_2"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_2"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_2"."Proba_1" IS NULL OR "DT_Output_2"."Proba_1" > 0.0) THEN ln("DT_Output_2"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_2"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_2"."Proba_2" IS NULL OR "DT_Output_2"."Proba_2" > 0.0) THEN ln("DT_Output_2"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_2"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_2"."Proba_3" IS NULL OR "DT_Output_2"."Proba_3" > 0.0) THEN ln("DT_Output_2"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_2"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_2"."Proba_4" IS NULL OR "DT_Output_2"."Proba_4" > 0.0) THEN ln("DT_Output_2"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_2"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_2"."Proba_5" IS NULL OR "DT_Output_2"."Proba_5" > 0.0) THEN ln("DT_Output_2"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_2"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_2"."Proba_6" IS NULL OR "DT_Output_2"."Proba_6" > 0.0) THEN ln("DT_Output_2"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_2"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_2"."Proba_7" IS NULL OR "DT_Output_2"."Proba_7" > 0.0) THEN ln("DT_Output_2"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_2"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_2"."Proba_8" IS NULL OR "DT_Output_2"."Proba_8" > 0.0) THEN ln("DT_Output_2"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_2"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_2"."Proba_9" IS NULL OR "DT_Output_2"."Proba_9" > 0.0) THEN ln("DT_Output_2"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10) AS "Proba_3", (9.0 * (CASE WHEN ("DT_Output_2"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_2"."Proba_4" IS NULL OR "DT_Output_2"."Proba_4" > 0.0) THEN ln("DT_Output_2"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_2"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_2"."Proba_0" IS NULL OR "DT_Output_2"."Proba_0" > 0.0) THEN ln("DT_Output_2"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_2"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_2"."Proba_1" IS NULL OR "DT_Output_2"."Proba_1" > 0.0) THEN ln("DT_Output_2"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_2"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_2"."Proba_2" IS NULL OR "DT_Output_2"."Proba_2" > 0.0) THEN ln("DT_Output_2"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_2"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_2"."Proba_3" IS NULL OR "DT_Output_2"."Proba_3" > 0.0) THEN ln("DT_Output_2"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_2"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_2"."Proba_4" IS NULL OR "DT_Output_2"."Proba_4" > 0.0) THEN ln("DT_Output_2"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_2"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_2"."Proba_5" IS NULL OR "DT_Output_2"."Proba_5" > 0.0) THEN ln("DT_Output_2"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_2"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_2"."Proba_6" IS NULL OR "DT_Output_2"."Proba_6" > 0.0) THEN ln("DT_Output_2"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_2"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_2"."Proba_7" IS NULL OR "DT_Output_2"."Proba_7" > 0.0) THEN ln("DT_Output_2"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_2"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_2"."Proba_8" IS NULL OR "DT_Output_2"."Proba_8" > 0.0) THEN ln("DT_Output_2"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_2"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_2"."Proba_9" IS NULL OR "DT_Output_2"."Proba_9" > 0.0) THEN ln("DT_Output_2"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10)) / 32.0 AS "Score_4", 9.0 * (CASE WHEN ("DT_Output_2"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_2"."Proba_4" IS NULL OR "DT_Output_2"."Proba_4" > 0.0) THEN ln("DT_Output_2"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_2"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_2"."Proba_0" IS NULL OR "DT_Output_2"."Proba_0" > 0.0) THEN ln("DT_Output_2"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_2"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_2"."Proba_1" IS NULL OR "DT_Output_2"."Proba_1" > 0.0) THEN ln("DT_Output_2"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_2"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_2"."Proba_2" IS NULL OR "DT_Output_2"."Proba_2" > 0.0) THEN ln("DT_Output_2"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_2"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_2"."Proba_3" IS NULL OR "DT_Output_2"."Proba_3" > 0.0) THEN ln("DT_Output_2"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_2"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_2"."Proba_4" IS NULL OR "DT_Output_2"."Proba_4" > 0.0) THEN ln("DT_Output_2"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_2"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_2"."Proba_5" IS NULL OR "DT_Output_2"."Proba_5" > 0.0) THEN ln("DT_Output_2"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_2"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_2"."Proba_6" IS NULL OR "DT_Output_2"."Proba_6" > 0.0) THEN ln("DT_Output_2"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_2"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_2"."Proba_7" IS NULL OR "DT_Output_2"."Proba_7" > 0.0) THEN ln("DT_Output_2"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_2"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_2"."Proba_8" IS NULL OR "DT_Output_2"."Proba_8" > 0.0) THEN ln("DT_Output_2"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_2"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_2"."Proba_9" IS NULL OR "DT_Output_2"."Proba_9" > 0.0) THEN ln("DT_Output_2"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10) AS "Proba_4", (9.0 * (CASE WHEN ("DT_Output_2"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_2"."Proba_5" IS NULL OR "DT_Output_2"."Proba_5" > 0.0) THEN ln("DT_Output_2"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_2"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_2"."Proba_0" IS NULL OR "DT_Output_2"."Proba_0" > 0.0) THEN ln("DT_Output_2"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_2"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_2"."Proba_1" IS NULL OR "DT_Output_2"."Proba_1" > 0.0) THEN ln("DT_Output_2"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_2"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_2"."Proba_2" IS NULL OR "DT_Output_2"."Proba_2" > 0.0) THEN ln("DT_Output_2"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_2"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_2"."Proba_3" IS NULL OR "DT_Output_2"."Proba_3" > 0.0) THEN ln("DT_Output_2"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_2"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_2"."Proba_4" IS NULL OR "DT_Output_2"."Proba_4" > 0.0) THEN ln("DT_Output_2"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_2"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_2"."Proba_5" IS NULL OR "DT_Output_2"."Proba_5" > 0.0) THEN ln("DT_Output_2"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_2"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_2"."Proba_6" IS NULL OR "DT_Output_2"."Proba_6" > 0.0) THEN ln("DT_Output_2"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_2"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_2"."Proba_7" IS NULL OR "DT_Output_2"."Proba_7" > 0.0) THEN ln("DT_Output_2"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_2"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_2"."Proba_8" IS NULL OR "DT_Output_2"."Proba_8" > 0.0) THEN ln("DT_Output_2"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_2"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_2"."Proba_9" IS NULL OR "DT_Output_2"."Proba_9" > 0.0) THEN ln("DT_Output_2"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10)) / 32.0 AS "Score_5", 9.0 * (CASE WHEN ("DT_Output_2"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_2"."Proba_5" IS NULL OR "DT_Output_2"."Proba_5" > 0.0) THEN ln("DT_Output_2"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_2"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_2"."Proba_0" IS NULL OR "DT_Output_2"."Proba_0" > 0.0) THEN ln("DT_Output_2"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_2"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_2"."Proba_1" IS NULL OR "DT_Output_2"."Proba_1" > 0.0) THEN ln("DT_Output_2"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_2"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_2"."Proba_2" IS NULL OR "DT_Output_2"."Proba_2" > 0.0) THEN ln("DT_Output_2"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_2"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_2"."Proba_3" IS NULL OR "DT_Output_2"."Proba_3" > 0.0) THEN ln("DT_Output_2"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_2"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_2"."Proba_4" IS NULL OR "DT_Output_2"."Proba_4" > 0.0) THEN ln("DT_Output_2"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_2"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_2"."Proba_5" IS NULL OR "DT_Output_2"."Proba_5" > 0.0) THEN ln("DT_Output_2"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_2"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_2"."Proba_6" IS NULL OR "DT_Output_2"."Proba_6" > 0.0) THEN ln("DT_Output_2"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_2"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_2"."Proba_7" IS NULL OR "DT_Output_2"."Proba_7" > 0.0) THEN ln("DT_Output_2"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_2"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_2"."Proba_8" IS NULL OR "DT_Output_2"."Proba_8" > 0.0) THEN ln("DT_Output_2"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_2"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_2"."Proba_9" IS NULL OR "DT_Output_2"."Proba_9" > 0.0) THEN ln("DT_Output_2"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10) AS "Proba_5", (9.0 * (CASE WHEN ("DT_Output_2"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_2"."Proba_6" IS NULL OR "DT_Output_2"."Proba_6" > 0.0) THEN ln("DT_Output_2"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_2"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_2"."Proba_0" IS NULL OR "DT_Output_2"."Proba_0" > 0.0) THEN ln("DT_Output_2"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_2"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_2"."Proba_1" IS NULL OR "DT_Output_2"."Proba_1" > 0.0) THEN ln("DT_Output_2"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_2"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_2"."Proba_2" IS NULL OR "DT_Output_2"."Proba_2" > 0.0) THEN ln("DT_Output_2"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_2"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_2"."Proba_3" IS NULL OR "DT_Output_2"."Proba_3" > 0.0) THEN ln("DT_Output_2"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_2"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_2"."Proba_4" IS NULL OR "DT_Output_2"."Proba_4" > 0.0) THEN ln("DT_Output_2"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_2"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_2"."Proba_5" IS NULL OR "DT_Output_2"."Proba_5" > 0.0) THEN ln("DT_Output_2"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_2"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_2"."Proba_6" IS NULL OR "DT_Output_2"."Proba_6" > 0.0) THEN ln("DT_Output_2"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_2"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_2"."Proba_7" IS NULL OR "DT_Output_2"."Proba_7" > 0.0) THEN ln("DT_Output_2"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_2"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_2"."Proba_8" IS NULL OR "DT_Output_2"."Proba_8" > 0.0) THEN ln("DT_Output_2"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_2"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_2"."Proba_9" IS NULL OR "DT_Output_2"."Proba_9" > 0.0) THEN ln("DT_Output_2"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10)) / 32.0 AS "Score_6", 9.0 * (CASE WHEN ("DT_Output_2"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_2"."Proba_6" IS NULL OR "DT_Output_2"."Proba_6" > 0.0) THEN ln("DT_Output_2"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_2"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_2"."Proba_0" IS NULL OR "DT_Output_2"."Proba_0" > 0.0) THEN ln("DT_Output_2"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_2"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_2"."Proba_1" IS NULL OR "DT_Output_2"."Proba_1" > 0.0) THEN ln("DT_Output_2"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_2"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_2"."Proba_2" IS NULL OR "DT_Output_2"."Proba_2" > 0.0) THEN ln("DT_Output_2"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_2"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_2"."Proba_3" IS NULL OR "DT_Output_2"."Proba_3" > 0.0) THEN ln("DT_Output_2"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_2"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_2"."Proba_4" IS NULL OR "DT_Output_2"."Proba_4" > 0.0) THEN ln("DT_Output_2"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_2"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_2"."Proba_5" IS NULL OR "DT_Output_2"."Proba_5" > 0.0) THEN ln("DT_Output_2"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_2"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_2"."Proba_6" IS NULL OR "DT_Output_2"."Proba_6" > 0.0) THEN ln("DT_Output_2"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_2"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_2"."Proba_7" IS NULL OR "DT_Output_2"."Proba_7" > 0.0) THEN ln("DT_Output_2"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_2"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_2"."Proba_8" IS NULL OR "DT_Output_2"."Proba_8" > 0.0) THEN ln("DT_Output_2"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_2"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_2"."Proba_9" IS NULL OR "DT_Output_2"."Proba_9" > 0.0) THEN ln("DT_Output_2"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10) AS "Proba_6", (9.0 * (CASE WHEN ("DT_Output_2"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_2"."Proba_7" IS NULL OR "DT_Output_2"."Proba_7" > 0.0) THEN ln("DT_Output_2"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_2"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_2"."Proba_0" IS NULL OR "DT_Output_2"."Proba_0" > 0.0) THEN ln("DT_Output_2"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_2"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_2"."Proba_1" IS NULL OR "DT_Output_2"."Proba_1" > 0.0) THEN ln("DT_Output_2"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_2"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_2"."Proba_2" IS NULL OR "DT_Output_2"."Proba_2" > 0.0) THEN ln("DT_Output_2"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_2"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_2"."Proba_3" IS NULL OR "DT_Output_2"."Proba_3" > 0.0) THEN ln("DT_Output_2"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_2"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_2"."Proba_4" IS NULL OR "DT_Output_2"."Proba_4" > 0.0) THEN ln("DT_Output_2"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_2"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_2"."Proba_5" IS NULL OR "DT_Output_2"."Proba_5" > 0.0) THEN ln("DT_Output_2"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_2"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_2"."Proba_6" IS NULL OR "DT_Output_2"."Proba_6" > 0.0) THEN ln("DT_Output_2"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_2"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_2"."Proba_7" IS NULL OR "DT_Output_2"."Proba_7" > 0.0) THEN ln("DT_Output_2"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_2"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_2"."Proba_8" IS NULL OR "DT_Output_2"."Proba_8" > 0.0) THEN ln("DT_Output_2"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_2"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_2"."Proba_9" IS NULL OR "DT_Output_2"."Proba_9" > 0.0) THEN ln("DT_Output_2"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10)) / 32.0 AS "Score_7", 9.0 * (CASE WHEN ("DT_Output_2"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_2"."Proba_7" IS NULL OR "DT_Output_2"."Proba_7" > 0.0) THEN ln("DT_Output_2"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_2"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_2"."Proba_0" IS NULL OR "DT_Output_2"."Proba_0" > 0.0) THEN ln("DT_Output_2"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_2"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_2"."Proba_1" IS NULL OR "DT_Output_2"."Proba_1" > 0.0) THEN ln("DT_Output_2"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_2"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_2"."Proba_2" IS NULL OR "DT_Output_2"."Proba_2" > 0.0) THEN ln("DT_Output_2"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_2"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_2"."Proba_3" IS NULL OR "DT_Output_2"."Proba_3" > 0.0) THEN ln("DT_Output_2"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_2"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_2"."Proba_4" IS NULL OR "DT_Output_2"."Proba_4" > 0.0) THEN ln("DT_Output_2"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_2"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_2"."Proba_5" IS NULL OR "DT_Output_2"."Proba_5" > 0.0) THEN ln("DT_Output_2"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_2"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_2"."Proba_6" IS NULL OR "DT_Output_2"."Proba_6" > 0.0) THEN ln("DT_Output_2"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_2"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_2"."Proba_7" IS NULL OR "DT_Output_2"."Proba_7" > 0.0) THEN ln("DT_Output_2"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_2"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_2"."Proba_8" IS NULL OR "DT_Output_2"."Proba_8" > 0.0) THEN ln("DT_Output_2"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_2"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_2"."Proba_9" IS NULL OR "DT_Output_2"."Proba_9" > 0.0) THEN ln("DT_Output_2"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10) AS "Proba_7", (9.0 * (CASE WHEN ("DT_Output_2"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_2"."Proba_8" IS NULL OR "DT_Output_2"."Proba_8" > 0.0) THEN ln("DT_Output_2"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_2"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_2"."Proba_0" IS NULL OR "DT_Output_2"."Proba_0" > 0.0) THEN ln("DT_Output_2"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_2"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_2"."Proba_1" IS NULL OR "DT_Output_2"."Proba_1" > 0.0) THEN ln("DT_Output_2"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_2"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_2"."Proba_2" IS NULL OR "DT_Output_2"."Proba_2" > 0.0) THEN ln("DT_Output_2"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_2"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_2"."Proba_3" IS NULL OR "DT_Output_2"."Proba_3" > 0.0) THEN ln("DT_Output_2"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_2"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_2"."Proba_4" IS NULL OR "DT_Output_2"."Proba_4" > 0.0) THEN ln("DT_Output_2"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_2"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_2"."Proba_5" IS NULL OR "DT_Output_2"."Proba_5" > 0.0) THEN ln("DT_Output_2"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_2"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_2"."Proba_6" IS NULL OR "DT_Output_2"."Proba_6" > 0.0) THEN ln("DT_Output_2"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_2"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_2"."Proba_7" IS NULL OR "DT_Output_2"."Proba_7" > 0.0) THEN ln("DT_Output_2"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_2"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_2"."Proba_8" IS NULL OR "DT_Output_2"."Proba_8" > 0.0) THEN ln("DT_Output_2"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_2"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_2"."Proba_9" IS NULL OR "DT_Output_2"."Proba_9" > 0.0) THEN ln("DT_Output_2"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10)) / 32.0 AS "Score_8", 9.0 * (CASE WHEN ("DT_Output_2"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_2"."Proba_8" IS NULL OR "DT_Output_2"."Proba_8" > 0.0) THEN ln("DT_Output_2"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_2"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_2"."Proba_0" IS NULL OR "DT_Output_2"."Proba_0" > 0.0) THEN ln("DT_Output_2"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_2"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_2"."Proba_1" IS NULL OR "DT_Output_2"."Proba_1" > 0.0) THEN ln("DT_Output_2"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_2"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_2"."Proba_2" IS NULL OR "DT_Output_2"."Proba_2" > 0.0) THEN ln("DT_Output_2"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_2"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_2"."Proba_3" IS NULL OR "DT_Output_2"."Proba_3" > 0.0) THEN ln("DT_Output_2"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_2"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_2"."Proba_4" IS NULL OR "DT_Output_2"."Proba_4" > 0.0) THEN ln("DT_Output_2"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_2"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_2"."Proba_5" IS NULL OR "DT_Output_2"."Proba_5" > 0.0) THEN ln("DT_Output_2"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_2"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_2"."Proba_6" IS NULL OR "DT_Output_2"."Proba_6" > 0.0) THEN ln("DT_Output_2"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_2"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_2"."Proba_7" IS NULL OR "DT_Output_2"."Proba_7" > 0.0) THEN ln("DT_Output_2"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_2"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_2"."Proba_8" IS NULL OR "DT_Output_2"."Proba_8" > 0.0) THEN ln("DT_Output_2"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_2"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_2"."Proba_9" IS NULL OR "DT_Output_2"."Proba_9" > 0.0) THEN ln("DT_Output_2"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10) AS "Proba_8", (9.0 * (CASE WHEN ("DT_Output_2"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_2"."Proba_9" IS NULL OR "DT_Output_2"."Proba_9" > 0.0) THEN ln("DT_Output_2"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_2"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_2"."Proba_0" IS NULL OR "DT_Output_2"."Proba_0" > 0.0) THEN ln("DT_Output_2"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_2"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_2"."Proba_1" IS NULL OR "DT_Output_2"."Proba_1" > 0.0) THEN ln("DT_Output_2"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_2"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_2"."Proba_2" IS NULL OR "DT_Output_2"."Proba_2" > 0.0) THEN ln("DT_Output_2"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_2"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_2"."Proba_3" IS NULL OR "DT_Output_2"."Proba_3" > 0.0) THEN ln("DT_Output_2"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_2"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_2"."Proba_4" IS NULL OR "DT_Output_2"."Proba_4" > 0.0) THEN ln("DT_Output_2"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_2"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_2"."Proba_5" IS NULL OR "DT_Output_2"."Proba_5" > 0.0) THEN ln("DT_Output_2"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_2"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_2"."Proba_6" IS NULL OR "DT_Output_2"."Proba_6" > 0.0) THEN ln("DT_Output_2"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_2"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_2"."Proba_7" IS NULL OR "DT_Output_2"."Proba_7" > 0.0) THEN ln("DT_Output_2"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_2"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_2"."Proba_8" IS NULL OR "DT_Output_2"."Proba_8" > 0.0) THEN ln("DT_Output_2"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_2"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_2"."Proba_9" IS NULL OR "DT_Output_2"."Proba_9" > 0.0) THEN ln("DT_Output_2"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10)) / 32.0 AS "Score_9", 9.0 * (CASE WHEN ("DT_Output_2"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_2"."Proba_9" IS NULL OR "DT_Output_2"."Proba_9" > 0.0) THEN ln("DT_Output_2"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_2"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_2"."Proba_0" IS NULL OR "DT_Output_2"."Proba_0" > 0.0) THEN ln("DT_Output_2"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_2"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_2"."Proba_1" IS NULL OR "DT_Output_2"."Proba_1" > 0.0) THEN ln("DT_Output_2"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_2"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_2"."Proba_2" IS NULL OR "DT_Output_2"."Proba_2" > 0.0) THEN ln("DT_Output_2"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_2"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_2"."Proba_3" IS NULL OR "DT_Output_2"."Proba_3" > 0.0) THEN ln("DT_Output_2"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_2"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_2"."Proba_4" IS NULL OR "DT_Output_2"."Proba_4" > 0.0) THEN ln("DT_Output_2"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_2"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_2"."Proba_5" IS NULL OR "DT_Output_2"."Proba_5" > 0.0) THEN ln("DT_Output_2"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_2"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_2"."Proba_6" IS NULL OR "DT_Output_2"."Proba_6" > 0.0) THEN ln("DT_Output_2"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_2"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_2"."Proba_7" IS NULL OR "DT_Output_2"."Proba_7" > 0.0) THEN ln("DT_Output_2"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_2"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_2"."Proba_8" IS NULL OR "DT_Output_2"."Proba_8" > 0.0) THEN ln("DT_Output_2"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_2"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_2"."Proba_9" IS NULL OR "DT_Output_2"."Proba_9" > 0.0) THEN ln("DT_Output_2"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10) AS "Proba_9" 
FROM "DT_Output_2"), 
"DT_node_lookup_3" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_38 <= -1.6508052349090576) THEN 1 ELSE 2 END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_3" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Proba_0" AS "Proba_0", "Values"."LogProba_0" AS "LogProba_0", "Values"."Proba_1" AS "Proba_1", "Values"."LogProba_1" AS "LogProba_1", "Values"."Proba_2" AS "Proba_2", "Values"."LogProba_2" AS "LogProba_2", "Values"."Proba_3" AS "Proba_3", "Values"."LogProba_3" AS "LogProba_3", "Values"."Proba_4" AS "Proba_4", "Values"."LogProba_4" AS "LogProba_4", "Values"."Proba_5" AS "Proba_5", "Values"."LogProba_5" AS "LogProba_5", "Values"."Proba_6" AS "Proba_6", "Values"."LogProba_6" AS "LogProba_6", "Values"."Proba_7" AS "Proba_7", "Values"."LogProba_7" AS "LogProba_7", "Values"."Proba_8" AS "Proba_8", "Values"."LogProba_8" AS "LogProba_8", "Values"."Proba_9" AS "Proba_9", "Values"."LogProba_9" AS "LogProba_9", "Values"."Decision" AS "Decision", "Values"."DecisionProba" AS "DecisionProba" 
FROM (SELECT 1 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 219 AS count, 1 AS depth, 0 AS parent_id, 0.9968768192530113 AS "Proba_0", -0.00312806805459 AS "LogProba_0", 0.0 AS "Proba_1", -BINARY_FLOAT_INFINITY AS "LogProba_1", 3.7264412185948446e-05 AS "Proba_2", -10.1974717836 AS "LogProba_2", 0.00012894688506913594 AS "Proba_3", -8.95610998204 AS "LogProba_3", 1.2230695729073658e-05 AS "Proba_4", -11.3115617228 AS "LogProba_4", 0.0013029763672534236 AS "Proba_5", -6.64310411818 AS "LogProba_5", 0.0014017937820514402 AS "Proba_6", -6.5700025896 AS "LogProba_6", 0.0 AS "Proba_7", -BINARY_FLOAT_INFINITY AS "LogProba_7", 0.00012017423198661139 AS "Proba_8", -9.026567935 AS "LogProba_8", 0.000119794372713099 AS "Proba_9", -9.02973384573 AS "LogProba_9", 0 AS "Decision", 0.996876819253 AS "DecisionProba" FROM DUAL UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1218 AS count, 1 AS depth, 0 AS parent_id, 0.00038130527807022686 AS "Proba_0", -7.87191024889 AS "LogProba_0", 0.11115318433344484 AS "Proba_1", -2.19684599001 AS "LogProba_1", 0.1111490435520766 AS "Proba_2", -2.19688324363 AS "LogProba_2", 0.11113885589438209 AS "Proba_3", -2.19697490546 AS "LogProba_3", 0.11115182527170131 AS "Proba_4", -2.19685821701 AS "LogProba_4", 0.11100839900212053 AS "Proba_5", -2.19814941385 AS "LogProba_5", 0.1109974185173606 AS "Proba_6", -2.19824833454 AS "LogProba_6", 0.11115318433344523 AS "Proba_7", -2.19684599001 AS "LogProba_7", 0.11072691090569513 AS "Proba_8", -2.2006883712 AS "LogProba_8", 0.11113987291170337 AS "Proba_9", -2.19696575463 AS "LogProba_9", 7 AS "Decision", 0.111153184333 AS "DecisionProba" FROM DUAL) "Values"), 
"DT_Output_3" AS 
(SELECT "DT_node_lookup_3"."KEY" AS "KEY", "DT_node_lookup_3".node_id_2 AS node_id_2, "DT_node_data_3".node_id AS node_id, "DT_node_data_3".feature AS feature, "DT_node_data_3".threshold AS threshold, "DT_node_data_3".count AS count, "DT_node_data_3".depth AS depth, "DT_node_data_3".parent_id AS parent_id, "DT_node_data_3"."Proba_0" AS "Proba_0", "DT_node_data_3"."LogProba_0" AS "LogProba_0", "DT_node_data_3"."Proba_1" AS "Proba_1", "DT_node_data_3"."LogProba_1" AS "LogProba_1", "DT_node_data_3"."Proba_2" AS "Proba_2", "DT_node_data_3"."LogProba_2" AS "LogProba_2", "DT_node_data_3"."Proba_3" AS "Proba_3", "DT_node_data_3"."LogProba_3" AS "LogProba_3", "DT_node_data_3"."Proba_4" AS "Proba_4", "DT_node_data_3"."LogProba_4" AS "LogProba_4", "DT_node_data_3"."Proba_5" AS "Proba_5", "DT_node_data_3"."LogProba_5" AS "LogProba_5", "DT_node_data_3"."Proba_6" AS "Proba_6", "DT_node_data_3"."LogProba_6" AS "LogProba_6", "DT_node_data_3"."Proba_7" AS "Proba_7", "DT_node_data_3"."LogProba_7" AS "LogProba_7", "DT_node_data_3"."Proba_8" AS "Proba_8", "DT_node_data_3"."LogProba_8" AS "LogProba_8", "DT_node_data_3"."Proba_9" AS "Proba_9", "DT_node_data_3"."LogProba_9" AS "LogProba_9", "DT_node_data_3"."Decision" AS "Decision", "DT_node_data_3"."DecisionProba" AS "DecisionProba" 
FROM "DT_node_lookup_3" LEFT OUTER JOIN "DT_node_data_3" ON "DT_node_lookup_3".node_id_2 = "DT_node_data_3".node_id), 
"AdaBoost_Estim_3" AS 
(SELECT "DT_Output_3"."KEY" AS "KEY", (9.0 * (CASE WHEN ("DT_Output_3"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_3"."Proba_0" IS NULL OR "DT_Output_3"."Proba_0" > 0.0) THEN ln("DT_Output_3"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_3"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_3"."Proba_0" IS NULL OR "DT_Output_3"."Proba_0" > 0.0) THEN ln("DT_Output_3"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_3"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_3"."Proba_1" IS NULL OR "DT_Output_3"."Proba_1" > 0.0) THEN ln("DT_Output_3"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_3"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_3"."Proba_2" IS NULL OR "DT_Output_3"."Proba_2" > 0.0) THEN ln("DT_Output_3"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_3"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_3"."Proba_3" IS NULL OR "DT_Output_3"."Proba_3" > 0.0) THEN ln("DT_Output_3"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_3"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_3"."Proba_4" IS NULL OR "DT_Output_3"."Proba_4" > 0.0) THEN ln("DT_Output_3"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_3"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_3"."Proba_5" IS NULL OR "DT_Output_3"."Proba_5" > 0.0) THEN ln("DT_Output_3"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_3"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_3"."Proba_6" IS NULL OR "DT_Output_3"."Proba_6" > 0.0) THEN ln("DT_Output_3"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_3"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_3"."Proba_7" IS NULL OR "DT_Output_3"."Proba_7" > 0.0) THEN ln("DT_Output_3"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_3"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_3"."Proba_8" IS NULL OR "DT_Output_3"."Proba_8" > 0.0) THEN ln("DT_Output_3"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_3"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_3"."Proba_9" IS NULL OR "DT_Output_3"."Proba_9" > 0.0) THEN ln("DT_Output_3"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10)) / 32.0 AS "Score_0", 9.0 * (CASE WHEN ("DT_Output_3"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_3"."Proba_0" IS NULL OR "DT_Output_3"."Proba_0" > 0.0) THEN ln("DT_Output_3"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_3"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_3"."Proba_0" IS NULL OR "DT_Output_3"."Proba_0" > 0.0) THEN ln("DT_Output_3"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_3"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_3"."Proba_1" IS NULL OR "DT_Output_3"."Proba_1" > 0.0) THEN ln("DT_Output_3"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_3"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_3"."Proba_2" IS NULL OR "DT_Output_3"."Proba_2" > 0.0) THEN ln("DT_Output_3"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_3"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_3"."Proba_3" IS NULL OR "DT_Output_3"."Proba_3" > 0.0) THEN ln("DT_Output_3"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_3"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_3"."Proba_4" IS NULL OR "DT_Output_3"."Proba_4" > 0.0) THEN ln("DT_Output_3"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_3"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_3"."Proba_5" IS NULL OR "DT_Output_3"."Proba_5" > 0.0) THEN ln("DT_Output_3"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_3"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_3"."Proba_6" IS NULL OR "DT_Output_3"."Proba_6" > 0.0) THEN ln("DT_Output_3"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_3"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_3"."Proba_7" IS NULL OR "DT_Output_3"."Proba_7" > 0.0) THEN ln("DT_Output_3"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_3"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_3"."Proba_8" IS NULL OR "DT_Output_3"."Proba_8" > 0.0) THEN ln("DT_Output_3"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_3"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_3"."Proba_9" IS NULL OR "DT_Output_3"."Proba_9" > 0.0) THEN ln("DT_Output_3"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10) AS "Proba_0", (9.0 * (CASE WHEN ("DT_Output_3"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_3"."Proba_1" IS NULL OR "DT_Output_3"."Proba_1" > 0.0) THEN ln("DT_Output_3"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_3"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_3"."Proba_0" IS NULL OR "DT_Output_3"."Proba_0" > 0.0) THEN ln("DT_Output_3"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_3"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_3"."Proba_1" IS NULL OR "DT_Output_3"."Proba_1" > 0.0) THEN ln("DT_Output_3"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_3"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_3"."Proba_2" IS NULL OR "DT_Output_3"."Proba_2" > 0.0) THEN ln("DT_Output_3"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_3"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_3"."Proba_3" IS NULL OR "DT_Output_3"."Proba_3" > 0.0) THEN ln("DT_Output_3"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_3"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_3"."Proba_4" IS NULL OR "DT_Output_3"."Proba_4" > 0.0) THEN ln("DT_Output_3"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_3"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_3"."Proba_5" IS NULL OR "DT_Output_3"."Proba_5" > 0.0) THEN ln("DT_Output_3"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_3"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_3"."Proba_6" IS NULL OR "DT_Output_3"."Proba_6" > 0.0) THEN ln("DT_Output_3"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_3"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_3"."Proba_7" IS NULL OR "DT_Output_3"."Proba_7" > 0.0) THEN ln("DT_Output_3"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_3"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_3"."Proba_8" IS NULL OR "DT_Output_3"."Proba_8" > 0.0) THEN ln("DT_Output_3"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_3"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_3"."Proba_9" IS NULL OR "DT_Output_3"."Proba_9" > 0.0) THEN ln("DT_Output_3"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10)) / 32.0 AS "Score_1", 9.0 * (CASE WHEN ("DT_Output_3"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_3"."Proba_1" IS NULL OR "DT_Output_3"."Proba_1" > 0.0) THEN ln("DT_Output_3"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_3"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_3"."Proba_0" IS NULL OR "DT_Output_3"."Proba_0" > 0.0) THEN ln("DT_Output_3"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_3"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_3"."Proba_1" IS NULL OR "DT_Output_3"."Proba_1" > 0.0) THEN ln("DT_Output_3"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_3"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_3"."Proba_2" IS NULL OR "DT_Output_3"."Proba_2" > 0.0) THEN ln("DT_Output_3"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_3"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_3"."Proba_3" IS NULL OR "DT_Output_3"."Proba_3" > 0.0) THEN ln("DT_Output_3"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_3"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_3"."Proba_4" IS NULL OR "DT_Output_3"."Proba_4" > 0.0) THEN ln("DT_Output_3"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_3"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_3"."Proba_5" IS NULL OR "DT_Output_3"."Proba_5" > 0.0) THEN ln("DT_Output_3"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_3"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_3"."Proba_6" IS NULL OR "DT_Output_3"."Proba_6" > 0.0) THEN ln("DT_Output_3"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_3"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_3"."Proba_7" IS NULL OR "DT_Output_3"."Proba_7" > 0.0) THEN ln("DT_Output_3"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_3"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_3"."Proba_8" IS NULL OR "DT_Output_3"."Proba_8" > 0.0) THEN ln("DT_Output_3"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_3"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_3"."Proba_9" IS NULL OR "DT_Output_3"."Proba_9" > 0.0) THEN ln("DT_Output_3"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10) AS "Proba_1", (9.0 * (CASE WHEN ("DT_Output_3"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_3"."Proba_2" IS NULL OR "DT_Output_3"."Proba_2" > 0.0) THEN ln("DT_Output_3"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_3"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_3"."Proba_0" IS NULL OR "DT_Output_3"."Proba_0" > 0.0) THEN ln("DT_Output_3"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_3"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_3"."Proba_1" IS NULL OR "DT_Output_3"."Proba_1" > 0.0) THEN ln("DT_Output_3"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_3"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_3"."Proba_2" IS NULL OR "DT_Output_3"."Proba_2" > 0.0) THEN ln("DT_Output_3"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_3"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_3"."Proba_3" IS NULL OR "DT_Output_3"."Proba_3" > 0.0) THEN ln("DT_Output_3"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_3"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_3"."Proba_4" IS NULL OR "DT_Output_3"."Proba_4" > 0.0) THEN ln("DT_Output_3"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_3"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_3"."Proba_5" IS NULL OR "DT_Output_3"."Proba_5" > 0.0) THEN ln("DT_Output_3"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_3"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_3"."Proba_6" IS NULL OR "DT_Output_3"."Proba_6" > 0.0) THEN ln("DT_Output_3"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_3"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_3"."Proba_7" IS NULL OR "DT_Output_3"."Proba_7" > 0.0) THEN ln("DT_Output_3"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_3"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_3"."Proba_8" IS NULL OR "DT_Output_3"."Proba_8" > 0.0) THEN ln("DT_Output_3"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_3"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_3"."Proba_9" IS NULL OR "DT_Output_3"."Proba_9" > 0.0) THEN ln("DT_Output_3"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10)) / 32.0 AS "Score_2", 9.0 * (CASE WHEN ("DT_Output_3"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_3"."Proba_2" IS NULL OR "DT_Output_3"."Proba_2" > 0.0) THEN ln("DT_Output_3"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_3"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_3"."Proba_0" IS NULL OR "DT_Output_3"."Proba_0" > 0.0) THEN ln("DT_Output_3"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_3"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_3"."Proba_1" IS NULL OR "DT_Output_3"."Proba_1" > 0.0) THEN ln("DT_Output_3"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_3"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_3"."Proba_2" IS NULL OR "DT_Output_3"."Proba_2" > 0.0) THEN ln("DT_Output_3"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_3"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_3"."Proba_3" IS NULL OR "DT_Output_3"."Proba_3" > 0.0) THEN ln("DT_Output_3"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_3"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_3"."Proba_4" IS NULL OR "DT_Output_3"."Proba_4" > 0.0) THEN ln("DT_Output_3"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_3"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_3"."Proba_5" IS NULL OR "DT_Output_3"."Proba_5" > 0.0) THEN ln("DT_Output_3"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_3"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_3"."Proba_6" IS NULL OR "DT_Output_3"."Proba_6" > 0.0) THEN ln("DT_Output_3"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_3"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_3"."Proba_7" IS NULL OR "DT_Output_3"."Proba_7" > 0.0) THEN ln("DT_Output_3"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_3"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_3"."Proba_8" IS NULL OR "DT_Output_3"."Proba_8" > 0.0) THEN ln("DT_Output_3"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_3"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_3"."Proba_9" IS NULL OR "DT_Output_3"."Proba_9" > 0.0) THEN ln("DT_Output_3"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10) AS "Proba_2", (9.0 * (CASE WHEN ("DT_Output_3"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_3"."Proba_3" IS NULL OR "DT_Output_3"."Proba_3" > 0.0) THEN ln("DT_Output_3"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_3"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_3"."Proba_0" IS NULL OR "DT_Output_3"."Proba_0" > 0.0) THEN ln("DT_Output_3"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_3"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_3"."Proba_1" IS NULL OR "DT_Output_3"."Proba_1" > 0.0) THEN ln("DT_Output_3"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_3"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_3"."Proba_2" IS NULL OR "DT_Output_3"."Proba_2" > 0.0) THEN ln("DT_Output_3"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_3"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_3"."Proba_3" IS NULL OR "DT_Output_3"."Proba_3" > 0.0) THEN ln("DT_Output_3"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_3"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_3"."Proba_4" IS NULL OR "DT_Output_3"."Proba_4" > 0.0) THEN ln("DT_Output_3"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_3"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_3"."Proba_5" IS NULL OR "DT_Output_3"."Proba_5" > 0.0) THEN ln("DT_Output_3"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_3"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_3"."Proba_6" IS NULL OR "DT_Output_3"."Proba_6" > 0.0) THEN ln("DT_Output_3"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_3"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_3"."Proba_7" IS NULL OR "DT_Output_3"."Proba_7" > 0.0) THEN ln("DT_Output_3"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_3"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_3"."Proba_8" IS NULL OR "DT_Output_3"."Proba_8" > 0.0) THEN ln("DT_Output_3"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_3"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_3"."Proba_9" IS NULL OR "DT_Output_3"."Proba_9" > 0.0) THEN ln("DT_Output_3"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10)) / 32.0 AS "Score_3", 9.0 * (CASE WHEN ("DT_Output_3"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_3"."Proba_3" IS NULL OR "DT_Output_3"."Proba_3" > 0.0) THEN ln("DT_Output_3"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_3"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_3"."Proba_0" IS NULL OR "DT_Output_3"."Proba_0" > 0.0) THEN ln("DT_Output_3"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_3"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_3"."Proba_1" IS NULL OR "DT_Output_3"."Proba_1" > 0.0) THEN ln("DT_Output_3"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_3"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_3"."Proba_2" IS NULL OR "DT_Output_3"."Proba_2" > 0.0) THEN ln("DT_Output_3"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_3"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_3"."Proba_3" IS NULL OR "DT_Output_3"."Proba_3" > 0.0) THEN ln("DT_Output_3"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_3"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_3"."Proba_4" IS NULL OR "DT_Output_3"."Proba_4" > 0.0) THEN ln("DT_Output_3"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_3"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_3"."Proba_5" IS NULL OR "DT_Output_3"."Proba_5" > 0.0) THEN ln("DT_Output_3"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_3"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_3"."Proba_6" IS NULL OR "DT_Output_3"."Proba_6" > 0.0) THEN ln("DT_Output_3"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_3"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_3"."Proba_7" IS NULL OR "DT_Output_3"."Proba_7" > 0.0) THEN ln("DT_Output_3"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_3"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_3"."Proba_8" IS NULL OR "DT_Output_3"."Proba_8" > 0.0) THEN ln("DT_Output_3"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_3"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_3"."Proba_9" IS NULL OR "DT_Output_3"."Proba_9" > 0.0) THEN ln("DT_Output_3"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10) AS "Proba_3", (9.0 * (CASE WHEN ("DT_Output_3"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_3"."Proba_4" IS NULL OR "DT_Output_3"."Proba_4" > 0.0) THEN ln("DT_Output_3"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_3"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_3"."Proba_0" IS NULL OR "DT_Output_3"."Proba_0" > 0.0) THEN ln("DT_Output_3"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_3"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_3"."Proba_1" IS NULL OR "DT_Output_3"."Proba_1" > 0.0) THEN ln("DT_Output_3"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_3"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_3"."Proba_2" IS NULL OR "DT_Output_3"."Proba_2" > 0.0) THEN ln("DT_Output_3"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_3"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_3"."Proba_3" IS NULL OR "DT_Output_3"."Proba_3" > 0.0) THEN ln("DT_Output_3"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_3"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_3"."Proba_4" IS NULL OR "DT_Output_3"."Proba_4" > 0.0) THEN ln("DT_Output_3"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_3"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_3"."Proba_5" IS NULL OR "DT_Output_3"."Proba_5" > 0.0) THEN ln("DT_Output_3"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_3"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_3"."Proba_6" IS NULL OR "DT_Output_3"."Proba_6" > 0.0) THEN ln("DT_Output_3"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_3"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_3"."Proba_7" IS NULL OR "DT_Output_3"."Proba_7" > 0.0) THEN ln("DT_Output_3"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_3"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_3"."Proba_8" IS NULL OR "DT_Output_3"."Proba_8" > 0.0) THEN ln("DT_Output_3"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_3"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_3"."Proba_9" IS NULL OR "DT_Output_3"."Proba_9" > 0.0) THEN ln("DT_Output_3"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10)) / 32.0 AS "Score_4", 9.0 * (CASE WHEN ("DT_Output_3"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_3"."Proba_4" IS NULL OR "DT_Output_3"."Proba_4" > 0.0) THEN ln("DT_Output_3"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_3"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_3"."Proba_0" IS NULL OR "DT_Output_3"."Proba_0" > 0.0) THEN ln("DT_Output_3"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_3"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_3"."Proba_1" IS NULL OR "DT_Output_3"."Proba_1" > 0.0) THEN ln("DT_Output_3"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_3"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_3"."Proba_2" IS NULL OR "DT_Output_3"."Proba_2" > 0.0) THEN ln("DT_Output_3"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_3"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_3"."Proba_3" IS NULL OR "DT_Output_3"."Proba_3" > 0.0) THEN ln("DT_Output_3"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_3"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_3"."Proba_4" IS NULL OR "DT_Output_3"."Proba_4" > 0.0) THEN ln("DT_Output_3"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_3"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_3"."Proba_5" IS NULL OR "DT_Output_3"."Proba_5" > 0.0) THEN ln("DT_Output_3"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_3"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_3"."Proba_6" IS NULL OR "DT_Output_3"."Proba_6" > 0.0) THEN ln("DT_Output_3"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_3"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_3"."Proba_7" IS NULL OR "DT_Output_3"."Proba_7" > 0.0) THEN ln("DT_Output_3"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_3"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_3"."Proba_8" IS NULL OR "DT_Output_3"."Proba_8" > 0.0) THEN ln("DT_Output_3"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_3"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_3"."Proba_9" IS NULL OR "DT_Output_3"."Proba_9" > 0.0) THEN ln("DT_Output_3"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10) AS "Proba_4", (9.0 * (CASE WHEN ("DT_Output_3"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_3"."Proba_5" IS NULL OR "DT_Output_3"."Proba_5" > 0.0) THEN ln("DT_Output_3"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_3"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_3"."Proba_0" IS NULL OR "DT_Output_3"."Proba_0" > 0.0) THEN ln("DT_Output_3"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_3"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_3"."Proba_1" IS NULL OR "DT_Output_3"."Proba_1" > 0.0) THEN ln("DT_Output_3"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_3"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_3"."Proba_2" IS NULL OR "DT_Output_3"."Proba_2" > 0.0) THEN ln("DT_Output_3"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_3"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_3"."Proba_3" IS NULL OR "DT_Output_3"."Proba_3" > 0.0) THEN ln("DT_Output_3"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_3"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_3"."Proba_4" IS NULL OR "DT_Output_3"."Proba_4" > 0.0) THEN ln("DT_Output_3"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_3"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_3"."Proba_5" IS NULL OR "DT_Output_3"."Proba_5" > 0.0) THEN ln("DT_Output_3"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_3"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_3"."Proba_6" IS NULL OR "DT_Output_3"."Proba_6" > 0.0) THEN ln("DT_Output_3"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_3"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_3"."Proba_7" IS NULL OR "DT_Output_3"."Proba_7" > 0.0) THEN ln("DT_Output_3"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_3"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_3"."Proba_8" IS NULL OR "DT_Output_3"."Proba_8" > 0.0) THEN ln("DT_Output_3"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_3"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_3"."Proba_9" IS NULL OR "DT_Output_3"."Proba_9" > 0.0) THEN ln("DT_Output_3"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10)) / 32.0 AS "Score_5", 9.0 * (CASE WHEN ("DT_Output_3"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_3"."Proba_5" IS NULL OR "DT_Output_3"."Proba_5" > 0.0) THEN ln("DT_Output_3"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_3"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_3"."Proba_0" IS NULL OR "DT_Output_3"."Proba_0" > 0.0) THEN ln("DT_Output_3"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_3"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_3"."Proba_1" IS NULL OR "DT_Output_3"."Proba_1" > 0.0) THEN ln("DT_Output_3"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_3"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_3"."Proba_2" IS NULL OR "DT_Output_3"."Proba_2" > 0.0) THEN ln("DT_Output_3"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_3"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_3"."Proba_3" IS NULL OR "DT_Output_3"."Proba_3" > 0.0) THEN ln("DT_Output_3"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_3"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_3"."Proba_4" IS NULL OR "DT_Output_3"."Proba_4" > 0.0) THEN ln("DT_Output_3"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_3"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_3"."Proba_5" IS NULL OR "DT_Output_3"."Proba_5" > 0.0) THEN ln("DT_Output_3"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_3"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_3"."Proba_6" IS NULL OR "DT_Output_3"."Proba_6" > 0.0) THEN ln("DT_Output_3"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_3"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_3"."Proba_7" IS NULL OR "DT_Output_3"."Proba_7" > 0.0) THEN ln("DT_Output_3"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_3"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_3"."Proba_8" IS NULL OR "DT_Output_3"."Proba_8" > 0.0) THEN ln("DT_Output_3"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_3"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_3"."Proba_9" IS NULL OR "DT_Output_3"."Proba_9" > 0.0) THEN ln("DT_Output_3"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10) AS "Proba_5", (9.0 * (CASE WHEN ("DT_Output_3"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_3"."Proba_6" IS NULL OR "DT_Output_3"."Proba_6" > 0.0) THEN ln("DT_Output_3"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_3"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_3"."Proba_0" IS NULL OR "DT_Output_3"."Proba_0" > 0.0) THEN ln("DT_Output_3"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_3"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_3"."Proba_1" IS NULL OR "DT_Output_3"."Proba_1" > 0.0) THEN ln("DT_Output_3"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_3"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_3"."Proba_2" IS NULL OR "DT_Output_3"."Proba_2" > 0.0) THEN ln("DT_Output_3"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_3"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_3"."Proba_3" IS NULL OR "DT_Output_3"."Proba_3" > 0.0) THEN ln("DT_Output_3"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_3"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_3"."Proba_4" IS NULL OR "DT_Output_3"."Proba_4" > 0.0) THEN ln("DT_Output_3"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_3"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_3"."Proba_5" IS NULL OR "DT_Output_3"."Proba_5" > 0.0) THEN ln("DT_Output_3"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_3"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_3"."Proba_6" IS NULL OR "DT_Output_3"."Proba_6" > 0.0) THEN ln("DT_Output_3"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_3"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_3"."Proba_7" IS NULL OR "DT_Output_3"."Proba_7" > 0.0) THEN ln("DT_Output_3"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_3"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_3"."Proba_8" IS NULL OR "DT_Output_3"."Proba_8" > 0.0) THEN ln("DT_Output_3"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_3"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_3"."Proba_9" IS NULL OR "DT_Output_3"."Proba_9" > 0.0) THEN ln("DT_Output_3"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10)) / 32.0 AS "Score_6", 9.0 * (CASE WHEN ("DT_Output_3"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_3"."Proba_6" IS NULL OR "DT_Output_3"."Proba_6" > 0.0) THEN ln("DT_Output_3"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_3"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_3"."Proba_0" IS NULL OR "DT_Output_3"."Proba_0" > 0.0) THEN ln("DT_Output_3"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_3"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_3"."Proba_1" IS NULL OR "DT_Output_3"."Proba_1" > 0.0) THEN ln("DT_Output_3"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_3"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_3"."Proba_2" IS NULL OR "DT_Output_3"."Proba_2" > 0.0) THEN ln("DT_Output_3"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_3"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_3"."Proba_3" IS NULL OR "DT_Output_3"."Proba_3" > 0.0) THEN ln("DT_Output_3"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_3"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_3"."Proba_4" IS NULL OR "DT_Output_3"."Proba_4" > 0.0) THEN ln("DT_Output_3"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_3"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_3"."Proba_5" IS NULL OR "DT_Output_3"."Proba_5" > 0.0) THEN ln("DT_Output_3"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_3"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_3"."Proba_6" IS NULL OR "DT_Output_3"."Proba_6" > 0.0) THEN ln("DT_Output_3"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_3"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_3"."Proba_7" IS NULL OR "DT_Output_3"."Proba_7" > 0.0) THEN ln("DT_Output_3"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_3"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_3"."Proba_8" IS NULL OR "DT_Output_3"."Proba_8" > 0.0) THEN ln("DT_Output_3"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_3"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_3"."Proba_9" IS NULL OR "DT_Output_3"."Proba_9" > 0.0) THEN ln("DT_Output_3"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10) AS "Proba_6", (9.0 * (CASE WHEN ("DT_Output_3"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_3"."Proba_7" IS NULL OR "DT_Output_3"."Proba_7" > 0.0) THEN ln("DT_Output_3"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_3"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_3"."Proba_0" IS NULL OR "DT_Output_3"."Proba_0" > 0.0) THEN ln("DT_Output_3"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_3"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_3"."Proba_1" IS NULL OR "DT_Output_3"."Proba_1" > 0.0) THEN ln("DT_Output_3"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_3"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_3"."Proba_2" IS NULL OR "DT_Output_3"."Proba_2" > 0.0) THEN ln("DT_Output_3"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_3"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_3"."Proba_3" IS NULL OR "DT_Output_3"."Proba_3" > 0.0) THEN ln("DT_Output_3"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_3"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_3"."Proba_4" IS NULL OR "DT_Output_3"."Proba_4" > 0.0) THEN ln("DT_Output_3"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_3"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_3"."Proba_5" IS NULL OR "DT_Output_3"."Proba_5" > 0.0) THEN ln("DT_Output_3"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_3"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_3"."Proba_6" IS NULL OR "DT_Output_3"."Proba_6" > 0.0) THEN ln("DT_Output_3"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_3"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_3"."Proba_7" IS NULL OR "DT_Output_3"."Proba_7" > 0.0) THEN ln("DT_Output_3"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_3"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_3"."Proba_8" IS NULL OR "DT_Output_3"."Proba_8" > 0.0) THEN ln("DT_Output_3"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_3"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_3"."Proba_9" IS NULL OR "DT_Output_3"."Proba_9" > 0.0) THEN ln("DT_Output_3"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10)) / 32.0 AS "Score_7", 9.0 * (CASE WHEN ("DT_Output_3"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_3"."Proba_7" IS NULL OR "DT_Output_3"."Proba_7" > 0.0) THEN ln("DT_Output_3"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_3"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_3"."Proba_0" IS NULL OR "DT_Output_3"."Proba_0" > 0.0) THEN ln("DT_Output_3"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_3"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_3"."Proba_1" IS NULL OR "DT_Output_3"."Proba_1" > 0.0) THEN ln("DT_Output_3"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_3"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_3"."Proba_2" IS NULL OR "DT_Output_3"."Proba_2" > 0.0) THEN ln("DT_Output_3"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_3"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_3"."Proba_3" IS NULL OR "DT_Output_3"."Proba_3" > 0.0) THEN ln("DT_Output_3"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_3"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_3"."Proba_4" IS NULL OR "DT_Output_3"."Proba_4" > 0.0) THEN ln("DT_Output_3"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_3"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_3"."Proba_5" IS NULL OR "DT_Output_3"."Proba_5" > 0.0) THEN ln("DT_Output_3"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_3"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_3"."Proba_6" IS NULL OR "DT_Output_3"."Proba_6" > 0.0) THEN ln("DT_Output_3"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_3"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_3"."Proba_7" IS NULL OR "DT_Output_3"."Proba_7" > 0.0) THEN ln("DT_Output_3"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_3"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_3"."Proba_8" IS NULL OR "DT_Output_3"."Proba_8" > 0.0) THEN ln("DT_Output_3"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_3"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_3"."Proba_9" IS NULL OR "DT_Output_3"."Proba_9" > 0.0) THEN ln("DT_Output_3"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10) AS "Proba_7", (9.0 * (CASE WHEN ("DT_Output_3"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_3"."Proba_8" IS NULL OR "DT_Output_3"."Proba_8" > 0.0) THEN ln("DT_Output_3"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_3"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_3"."Proba_0" IS NULL OR "DT_Output_3"."Proba_0" > 0.0) THEN ln("DT_Output_3"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_3"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_3"."Proba_1" IS NULL OR "DT_Output_3"."Proba_1" > 0.0) THEN ln("DT_Output_3"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_3"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_3"."Proba_2" IS NULL OR "DT_Output_3"."Proba_2" > 0.0) THEN ln("DT_Output_3"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_3"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_3"."Proba_3" IS NULL OR "DT_Output_3"."Proba_3" > 0.0) THEN ln("DT_Output_3"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_3"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_3"."Proba_4" IS NULL OR "DT_Output_3"."Proba_4" > 0.0) THEN ln("DT_Output_3"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_3"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_3"."Proba_5" IS NULL OR "DT_Output_3"."Proba_5" > 0.0) THEN ln("DT_Output_3"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_3"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_3"."Proba_6" IS NULL OR "DT_Output_3"."Proba_6" > 0.0) THEN ln("DT_Output_3"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_3"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_3"."Proba_7" IS NULL OR "DT_Output_3"."Proba_7" > 0.0) THEN ln("DT_Output_3"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_3"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_3"."Proba_8" IS NULL OR "DT_Output_3"."Proba_8" > 0.0) THEN ln("DT_Output_3"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_3"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_3"."Proba_9" IS NULL OR "DT_Output_3"."Proba_9" > 0.0) THEN ln("DT_Output_3"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10)) / 32.0 AS "Score_8", 9.0 * (CASE WHEN ("DT_Output_3"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_3"."Proba_8" IS NULL OR "DT_Output_3"."Proba_8" > 0.0) THEN ln("DT_Output_3"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_3"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_3"."Proba_0" IS NULL OR "DT_Output_3"."Proba_0" > 0.0) THEN ln("DT_Output_3"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_3"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_3"."Proba_1" IS NULL OR "DT_Output_3"."Proba_1" > 0.0) THEN ln("DT_Output_3"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_3"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_3"."Proba_2" IS NULL OR "DT_Output_3"."Proba_2" > 0.0) THEN ln("DT_Output_3"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_3"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_3"."Proba_3" IS NULL OR "DT_Output_3"."Proba_3" > 0.0) THEN ln("DT_Output_3"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_3"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_3"."Proba_4" IS NULL OR "DT_Output_3"."Proba_4" > 0.0) THEN ln("DT_Output_3"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_3"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_3"."Proba_5" IS NULL OR "DT_Output_3"."Proba_5" > 0.0) THEN ln("DT_Output_3"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_3"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_3"."Proba_6" IS NULL OR "DT_Output_3"."Proba_6" > 0.0) THEN ln("DT_Output_3"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_3"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_3"."Proba_7" IS NULL OR "DT_Output_3"."Proba_7" > 0.0) THEN ln("DT_Output_3"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_3"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_3"."Proba_8" IS NULL OR "DT_Output_3"."Proba_8" > 0.0) THEN ln("DT_Output_3"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_3"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_3"."Proba_9" IS NULL OR "DT_Output_3"."Proba_9" > 0.0) THEN ln("DT_Output_3"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10) AS "Proba_8", (9.0 * (CASE WHEN ("DT_Output_3"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_3"."Proba_9" IS NULL OR "DT_Output_3"."Proba_9" > 0.0) THEN ln("DT_Output_3"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_3"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_3"."Proba_0" IS NULL OR "DT_Output_3"."Proba_0" > 0.0) THEN ln("DT_Output_3"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_3"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_3"."Proba_1" IS NULL OR "DT_Output_3"."Proba_1" > 0.0) THEN ln("DT_Output_3"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_3"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_3"."Proba_2" IS NULL OR "DT_Output_3"."Proba_2" > 0.0) THEN ln("DT_Output_3"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_3"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_3"."Proba_3" IS NULL OR "DT_Output_3"."Proba_3" > 0.0) THEN ln("DT_Output_3"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_3"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_3"."Proba_4" IS NULL OR "DT_Output_3"."Proba_4" > 0.0) THEN ln("DT_Output_3"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_3"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_3"."Proba_5" IS NULL OR "DT_Output_3"."Proba_5" > 0.0) THEN ln("DT_Output_3"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_3"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_3"."Proba_6" IS NULL OR "DT_Output_3"."Proba_6" > 0.0) THEN ln("DT_Output_3"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_3"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_3"."Proba_7" IS NULL OR "DT_Output_3"."Proba_7" > 0.0) THEN ln("DT_Output_3"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_3"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_3"."Proba_8" IS NULL OR "DT_Output_3"."Proba_8" > 0.0) THEN ln("DT_Output_3"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_3"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_3"."Proba_9" IS NULL OR "DT_Output_3"."Proba_9" > 0.0) THEN ln("DT_Output_3"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10)) / 32.0 AS "Score_9", 9.0 * (CASE WHEN ("DT_Output_3"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_3"."Proba_9" IS NULL OR "DT_Output_3"."Proba_9" > 0.0) THEN ln("DT_Output_3"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_3"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_3"."Proba_0" IS NULL OR "DT_Output_3"."Proba_0" > 0.0) THEN ln("DT_Output_3"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_3"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_3"."Proba_1" IS NULL OR "DT_Output_3"."Proba_1" > 0.0) THEN ln("DT_Output_3"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_3"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_3"."Proba_2" IS NULL OR "DT_Output_3"."Proba_2" > 0.0) THEN ln("DT_Output_3"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_3"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_3"."Proba_3" IS NULL OR "DT_Output_3"."Proba_3" > 0.0) THEN ln("DT_Output_3"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_3"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_3"."Proba_4" IS NULL OR "DT_Output_3"."Proba_4" > 0.0) THEN ln("DT_Output_3"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_3"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_3"."Proba_5" IS NULL OR "DT_Output_3"."Proba_5" > 0.0) THEN ln("DT_Output_3"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_3"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_3"."Proba_6" IS NULL OR "DT_Output_3"."Proba_6" > 0.0) THEN ln("DT_Output_3"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_3"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_3"."Proba_7" IS NULL OR "DT_Output_3"."Proba_7" > 0.0) THEN ln("DT_Output_3"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_3"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_3"."Proba_8" IS NULL OR "DT_Output_3"."Proba_8" > 0.0) THEN ln("DT_Output_3"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_3"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_3"."Proba_9" IS NULL OR "DT_Output_3"."Proba_9" > 0.0) THEN ln("DT_Output_3"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10) AS "Proba_9" 
FROM "DT_Output_3"), 
"DT_node_lookup_4" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_30 <= -1.555469036102295) THEN 1 ELSE 2 END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_4" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Proba_0" AS "Proba_0", "Values"."LogProba_0" AS "LogProba_0", "Values"."Proba_1" AS "Proba_1", "Values"."LogProba_1" AS "LogProba_1", "Values"."Proba_2" AS "Proba_2", "Values"."LogProba_2" AS "LogProba_2", "Values"."Proba_3" AS "Proba_3", "Values"."LogProba_3" AS "LogProba_3", "Values"."Proba_4" AS "Proba_4", "Values"."LogProba_4" AS "LogProba_4", "Values"."Proba_5" AS "Proba_5", "Values"."LogProba_5" AS "LogProba_5", "Values"."Proba_6" AS "Proba_6", "Values"."LogProba_6" AS "LogProba_6", "Values"."Proba_7" AS "Proba_7", "Values"."LogProba_7" AS "LogProba_7", "Values"."Proba_8" AS "Proba_8", "Values"."LogProba_8" AS "LogProba_8", "Values"."Proba_9" AS "Proba_9", "Values"."LogProba_9" AS "LogProba_9", "Values"."Decision" AS "Decision", "Values"."DecisionProba" AS "DecisionProba" 
FROM (SELECT 1 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 246 AS count, 1 AS depth, 0 AS parent_id, 0.9711410080867539 AS "Proba_0", -0.0292836017833 AS "LogProba_0", 0.0036076640492230016 AS "Proba_1", -5.62469479386 AS "LogProba_1", 0.003597516029995951 AS "Proba_2", -5.62751166334 AS "LogProba_2", 0.003608129162833103 AS "Proba_3", -5.62456587841 AS "LogProba_3", 0.003606086647190256 AS "Proba_4", -5.62513212587 AS "LogProba_4", 0.003611612947833673 AS "Proba_5", -5.62360080647 AS "LogProba_5", 0.0036122228813360874 AS "Proba_6", -5.62343193953 AS "LogProba_6", 0.003607664049222985 AS "Proba_7", -5.62469479386 AS "LogProba_7", 0.0 AS "Proba_8", -BINARY_FLOAT_INFINITY AS "LogProba_8", 0.0036080961456111116 AS "Proba_9", -5.62457502924 AS "LogProba_9", 0 AS "Decision", 0.971141008087 AS "DecisionProba" FROM DUAL UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1191 AS count, 1 AS depth, 0 AS parent_id, 3.0321580895474893e-07 AS "Proba_0", -15.0088210442 AS "LogProba_0", 0.11106479748951871 AS "Proba_1", -2.19764148683 AS "LogProba_1", 0.11106626570027162 AS "Proba_2", -2.19762826751 AS "LogProba_2", 0.11106504740070883 AS "Proba_3", -2.19763923669 AS "LogProba_3", 0.11106528186455196 AS "Proba_4", -2.19763712564 AS "LogProba_4", 0.1110646474911051 AS "Proba_5", -2.19764283737 AS "LogProba_5", 0.11106457747580206 AS "Proba_6", -2.19764346778 AS "LogProba_6", 0.11106479748951846 AS "Proba_7", -2.19764148683 AS "LogProba_7", 0.11147923068190288 AS "Proba_8", -2.19391697734 AS "LogProba_8", 0.11106505119081142 AS "Proba_9", -2.19763920256 AS "LogProba_9", 8 AS "Decision", 0.111479230682 AS "DecisionProba" FROM DUAL) "Values"), 
"DT_Output_4" AS 
(SELECT "DT_node_lookup_4"."KEY" AS "KEY", "DT_node_lookup_4".node_id_2 AS node_id_2, "DT_node_data_4".node_id AS node_id, "DT_node_data_4".feature AS feature, "DT_node_data_4".threshold AS threshold, "DT_node_data_4".count AS count, "DT_node_data_4".depth AS depth, "DT_node_data_4".parent_id AS parent_id, "DT_node_data_4"."Proba_0" AS "Proba_0", "DT_node_data_4"."LogProba_0" AS "LogProba_0", "DT_node_data_4"."Proba_1" AS "Proba_1", "DT_node_data_4"."LogProba_1" AS "LogProba_1", "DT_node_data_4"."Proba_2" AS "Proba_2", "DT_node_data_4"."LogProba_2" AS "LogProba_2", "DT_node_data_4"."Proba_3" AS "Proba_3", "DT_node_data_4"."LogProba_3" AS "LogProba_3", "DT_node_data_4"."Proba_4" AS "Proba_4", "DT_node_data_4"."LogProba_4" AS "LogProba_4", "DT_node_data_4"."Proba_5" AS "Proba_5", "DT_node_data_4"."LogProba_5" AS "LogProba_5", "DT_node_data_4"."Proba_6" AS "Proba_6", "DT_node_data_4"."LogProba_6" AS "LogProba_6", "DT_node_data_4"."Proba_7" AS "Proba_7", "DT_node_data_4"."LogProba_7" AS "LogProba_7", "DT_node_data_4"."Proba_8" AS "Proba_8", "DT_node_data_4"."LogProba_8" AS "LogProba_8", "DT_node_data_4"."Proba_9" AS "Proba_9", "DT_node_data_4"."LogProba_9" AS "LogProba_9", "DT_node_data_4"."Decision" AS "Decision", "DT_node_data_4"."DecisionProba" AS "DecisionProba" 
FROM "DT_node_lookup_4" LEFT OUTER JOIN "DT_node_data_4" ON "DT_node_lookup_4".node_id_2 = "DT_node_data_4".node_id), 
"AdaBoost_Estim_4" AS 
(SELECT "DT_Output_4"."KEY" AS "KEY", (9.0 * (CASE WHEN ("DT_Output_4"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_4"."Proba_0" IS NULL OR "DT_Output_4"."Proba_0" > 0.0) THEN ln("DT_Output_4"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_4"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_4"."Proba_0" IS NULL OR "DT_Output_4"."Proba_0" > 0.0) THEN ln("DT_Output_4"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_4"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_4"."Proba_1" IS NULL OR "DT_Output_4"."Proba_1" > 0.0) THEN ln("DT_Output_4"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_4"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_4"."Proba_2" IS NULL OR "DT_Output_4"."Proba_2" > 0.0) THEN ln("DT_Output_4"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_4"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_4"."Proba_3" IS NULL OR "DT_Output_4"."Proba_3" > 0.0) THEN ln("DT_Output_4"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_4"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_4"."Proba_4" IS NULL OR "DT_Output_4"."Proba_4" > 0.0) THEN ln("DT_Output_4"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_4"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_4"."Proba_5" IS NULL OR "DT_Output_4"."Proba_5" > 0.0) THEN ln("DT_Output_4"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_4"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_4"."Proba_6" IS NULL OR "DT_Output_4"."Proba_6" > 0.0) THEN ln("DT_Output_4"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_4"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_4"."Proba_7" IS NULL OR "DT_Output_4"."Proba_7" > 0.0) THEN ln("DT_Output_4"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_4"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_4"."Proba_8" IS NULL OR "DT_Output_4"."Proba_8" > 0.0) THEN ln("DT_Output_4"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_4"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_4"."Proba_9" IS NULL OR "DT_Output_4"."Proba_9" > 0.0) THEN ln("DT_Output_4"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10)) / 32.0 AS "Score_0", 9.0 * (CASE WHEN ("DT_Output_4"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_4"."Proba_0" IS NULL OR "DT_Output_4"."Proba_0" > 0.0) THEN ln("DT_Output_4"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_4"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_4"."Proba_0" IS NULL OR "DT_Output_4"."Proba_0" > 0.0) THEN ln("DT_Output_4"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_4"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_4"."Proba_1" IS NULL OR "DT_Output_4"."Proba_1" > 0.0) THEN ln("DT_Output_4"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_4"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_4"."Proba_2" IS NULL OR "DT_Output_4"."Proba_2" > 0.0) THEN ln("DT_Output_4"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_4"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_4"."Proba_3" IS NULL OR "DT_Output_4"."Proba_3" > 0.0) THEN ln("DT_Output_4"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_4"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_4"."Proba_4" IS NULL OR "DT_Output_4"."Proba_4" > 0.0) THEN ln("DT_Output_4"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_4"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_4"."Proba_5" IS NULL OR "DT_Output_4"."Proba_5" > 0.0) THEN ln("DT_Output_4"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_4"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_4"."Proba_6" IS NULL OR "DT_Output_4"."Proba_6" > 0.0) THEN ln("DT_Output_4"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_4"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_4"."Proba_7" IS NULL OR "DT_Output_4"."Proba_7" > 0.0) THEN ln("DT_Output_4"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_4"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_4"."Proba_8" IS NULL OR "DT_Output_4"."Proba_8" > 0.0) THEN ln("DT_Output_4"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_4"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_4"."Proba_9" IS NULL OR "DT_Output_4"."Proba_9" > 0.0) THEN ln("DT_Output_4"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10) AS "Proba_0", (9.0 * (CASE WHEN ("DT_Output_4"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_4"."Proba_1" IS NULL OR "DT_Output_4"."Proba_1" > 0.0) THEN ln("DT_Output_4"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_4"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_4"."Proba_0" IS NULL OR "DT_Output_4"."Proba_0" > 0.0) THEN ln("DT_Output_4"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_4"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_4"."Proba_1" IS NULL OR "DT_Output_4"."Proba_1" > 0.0) THEN ln("DT_Output_4"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_4"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_4"."Proba_2" IS NULL OR "DT_Output_4"."Proba_2" > 0.0) THEN ln("DT_Output_4"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_4"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_4"."Proba_3" IS NULL OR "DT_Output_4"."Proba_3" > 0.0) THEN ln("DT_Output_4"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_4"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_4"."Proba_4" IS NULL OR "DT_Output_4"."Proba_4" > 0.0) THEN ln("DT_Output_4"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_4"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_4"."Proba_5" IS NULL OR "DT_Output_4"."Proba_5" > 0.0) THEN ln("DT_Output_4"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_4"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_4"."Proba_6" IS NULL OR "DT_Output_4"."Proba_6" > 0.0) THEN ln("DT_Output_4"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_4"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_4"."Proba_7" IS NULL OR "DT_Output_4"."Proba_7" > 0.0) THEN ln("DT_Output_4"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_4"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_4"."Proba_8" IS NULL OR "DT_Output_4"."Proba_8" > 0.0) THEN ln("DT_Output_4"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_4"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_4"."Proba_9" IS NULL OR "DT_Output_4"."Proba_9" > 0.0) THEN ln("DT_Output_4"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10)) / 32.0 AS "Score_1", 9.0 * (CASE WHEN ("DT_Output_4"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_4"."Proba_1" IS NULL OR "DT_Output_4"."Proba_1" > 0.0) THEN ln("DT_Output_4"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_4"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_4"."Proba_0" IS NULL OR "DT_Output_4"."Proba_0" > 0.0) THEN ln("DT_Output_4"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_4"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_4"."Proba_1" IS NULL OR "DT_Output_4"."Proba_1" > 0.0) THEN ln("DT_Output_4"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_4"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_4"."Proba_2" IS NULL OR "DT_Output_4"."Proba_2" > 0.0) THEN ln("DT_Output_4"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_4"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_4"."Proba_3" IS NULL OR "DT_Output_4"."Proba_3" > 0.0) THEN ln("DT_Output_4"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_4"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_4"."Proba_4" IS NULL OR "DT_Output_4"."Proba_4" > 0.0) THEN ln("DT_Output_4"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_4"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_4"."Proba_5" IS NULL OR "DT_Output_4"."Proba_5" > 0.0) THEN ln("DT_Output_4"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_4"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_4"."Proba_6" IS NULL OR "DT_Output_4"."Proba_6" > 0.0) THEN ln("DT_Output_4"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_4"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_4"."Proba_7" IS NULL OR "DT_Output_4"."Proba_7" > 0.0) THEN ln("DT_Output_4"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_4"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_4"."Proba_8" IS NULL OR "DT_Output_4"."Proba_8" > 0.0) THEN ln("DT_Output_4"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_4"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_4"."Proba_9" IS NULL OR "DT_Output_4"."Proba_9" > 0.0) THEN ln("DT_Output_4"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10) AS "Proba_1", (9.0 * (CASE WHEN ("DT_Output_4"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_4"."Proba_2" IS NULL OR "DT_Output_4"."Proba_2" > 0.0) THEN ln("DT_Output_4"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_4"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_4"."Proba_0" IS NULL OR "DT_Output_4"."Proba_0" > 0.0) THEN ln("DT_Output_4"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_4"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_4"."Proba_1" IS NULL OR "DT_Output_4"."Proba_1" > 0.0) THEN ln("DT_Output_4"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_4"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_4"."Proba_2" IS NULL OR "DT_Output_4"."Proba_2" > 0.0) THEN ln("DT_Output_4"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_4"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_4"."Proba_3" IS NULL OR "DT_Output_4"."Proba_3" > 0.0) THEN ln("DT_Output_4"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_4"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_4"."Proba_4" IS NULL OR "DT_Output_4"."Proba_4" > 0.0) THEN ln("DT_Output_4"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_4"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_4"."Proba_5" IS NULL OR "DT_Output_4"."Proba_5" > 0.0) THEN ln("DT_Output_4"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_4"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_4"."Proba_6" IS NULL OR "DT_Output_4"."Proba_6" > 0.0) THEN ln("DT_Output_4"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_4"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_4"."Proba_7" IS NULL OR "DT_Output_4"."Proba_7" > 0.0) THEN ln("DT_Output_4"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_4"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_4"."Proba_8" IS NULL OR "DT_Output_4"."Proba_8" > 0.0) THEN ln("DT_Output_4"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_4"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_4"."Proba_9" IS NULL OR "DT_Output_4"."Proba_9" > 0.0) THEN ln("DT_Output_4"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10)) / 32.0 AS "Score_2", 9.0 * (CASE WHEN ("DT_Output_4"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_4"."Proba_2" IS NULL OR "DT_Output_4"."Proba_2" > 0.0) THEN ln("DT_Output_4"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_4"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_4"."Proba_0" IS NULL OR "DT_Output_4"."Proba_0" > 0.0) THEN ln("DT_Output_4"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_4"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_4"."Proba_1" IS NULL OR "DT_Output_4"."Proba_1" > 0.0) THEN ln("DT_Output_4"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_4"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_4"."Proba_2" IS NULL OR "DT_Output_4"."Proba_2" > 0.0) THEN ln("DT_Output_4"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_4"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_4"."Proba_3" IS NULL OR "DT_Output_4"."Proba_3" > 0.0) THEN ln("DT_Output_4"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_4"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_4"."Proba_4" IS NULL OR "DT_Output_4"."Proba_4" > 0.0) THEN ln("DT_Output_4"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_4"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_4"."Proba_5" IS NULL OR "DT_Output_4"."Proba_5" > 0.0) THEN ln("DT_Output_4"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_4"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_4"."Proba_6" IS NULL OR "DT_Output_4"."Proba_6" > 0.0) THEN ln("DT_Output_4"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_4"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_4"."Proba_7" IS NULL OR "DT_Output_4"."Proba_7" > 0.0) THEN ln("DT_Output_4"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_4"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_4"."Proba_8" IS NULL OR "DT_Output_4"."Proba_8" > 0.0) THEN ln("DT_Output_4"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_4"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_4"."Proba_9" IS NULL OR "DT_Output_4"."Proba_9" > 0.0) THEN ln("DT_Output_4"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10) AS "Proba_2", (9.0 * (CASE WHEN ("DT_Output_4"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_4"."Proba_3" IS NULL OR "DT_Output_4"."Proba_3" > 0.0) THEN ln("DT_Output_4"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_4"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_4"."Proba_0" IS NULL OR "DT_Output_4"."Proba_0" > 0.0) THEN ln("DT_Output_4"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_4"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_4"."Proba_1" IS NULL OR "DT_Output_4"."Proba_1" > 0.0) THEN ln("DT_Output_4"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_4"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_4"."Proba_2" IS NULL OR "DT_Output_4"."Proba_2" > 0.0) THEN ln("DT_Output_4"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_4"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_4"."Proba_3" IS NULL OR "DT_Output_4"."Proba_3" > 0.0) THEN ln("DT_Output_4"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_4"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_4"."Proba_4" IS NULL OR "DT_Output_4"."Proba_4" > 0.0) THEN ln("DT_Output_4"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_4"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_4"."Proba_5" IS NULL OR "DT_Output_4"."Proba_5" > 0.0) THEN ln("DT_Output_4"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_4"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_4"."Proba_6" IS NULL OR "DT_Output_4"."Proba_6" > 0.0) THEN ln("DT_Output_4"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_4"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_4"."Proba_7" IS NULL OR "DT_Output_4"."Proba_7" > 0.0) THEN ln("DT_Output_4"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_4"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_4"."Proba_8" IS NULL OR "DT_Output_4"."Proba_8" > 0.0) THEN ln("DT_Output_4"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_4"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_4"."Proba_9" IS NULL OR "DT_Output_4"."Proba_9" > 0.0) THEN ln("DT_Output_4"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10)) / 32.0 AS "Score_3", 9.0 * (CASE WHEN ("DT_Output_4"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_4"."Proba_3" IS NULL OR "DT_Output_4"."Proba_3" > 0.0) THEN ln("DT_Output_4"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_4"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_4"."Proba_0" IS NULL OR "DT_Output_4"."Proba_0" > 0.0) THEN ln("DT_Output_4"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_4"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_4"."Proba_1" IS NULL OR "DT_Output_4"."Proba_1" > 0.0) THEN ln("DT_Output_4"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_4"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_4"."Proba_2" IS NULL OR "DT_Output_4"."Proba_2" > 0.0) THEN ln("DT_Output_4"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_4"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_4"."Proba_3" IS NULL OR "DT_Output_4"."Proba_3" > 0.0) THEN ln("DT_Output_4"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_4"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_4"."Proba_4" IS NULL OR "DT_Output_4"."Proba_4" > 0.0) THEN ln("DT_Output_4"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_4"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_4"."Proba_5" IS NULL OR "DT_Output_4"."Proba_5" > 0.0) THEN ln("DT_Output_4"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_4"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_4"."Proba_6" IS NULL OR "DT_Output_4"."Proba_6" > 0.0) THEN ln("DT_Output_4"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_4"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_4"."Proba_7" IS NULL OR "DT_Output_4"."Proba_7" > 0.0) THEN ln("DT_Output_4"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_4"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_4"."Proba_8" IS NULL OR "DT_Output_4"."Proba_8" > 0.0) THEN ln("DT_Output_4"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_4"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_4"."Proba_9" IS NULL OR "DT_Output_4"."Proba_9" > 0.0) THEN ln("DT_Output_4"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10) AS "Proba_3", (9.0 * (CASE WHEN ("DT_Output_4"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_4"."Proba_4" IS NULL OR "DT_Output_4"."Proba_4" > 0.0) THEN ln("DT_Output_4"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_4"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_4"."Proba_0" IS NULL OR "DT_Output_4"."Proba_0" > 0.0) THEN ln("DT_Output_4"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_4"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_4"."Proba_1" IS NULL OR "DT_Output_4"."Proba_1" > 0.0) THEN ln("DT_Output_4"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_4"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_4"."Proba_2" IS NULL OR "DT_Output_4"."Proba_2" > 0.0) THEN ln("DT_Output_4"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_4"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_4"."Proba_3" IS NULL OR "DT_Output_4"."Proba_3" > 0.0) THEN ln("DT_Output_4"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_4"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_4"."Proba_4" IS NULL OR "DT_Output_4"."Proba_4" > 0.0) THEN ln("DT_Output_4"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_4"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_4"."Proba_5" IS NULL OR "DT_Output_4"."Proba_5" > 0.0) THEN ln("DT_Output_4"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_4"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_4"."Proba_6" IS NULL OR "DT_Output_4"."Proba_6" > 0.0) THEN ln("DT_Output_4"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_4"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_4"."Proba_7" IS NULL OR "DT_Output_4"."Proba_7" > 0.0) THEN ln("DT_Output_4"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_4"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_4"."Proba_8" IS NULL OR "DT_Output_4"."Proba_8" > 0.0) THEN ln("DT_Output_4"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_4"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_4"."Proba_9" IS NULL OR "DT_Output_4"."Proba_9" > 0.0) THEN ln("DT_Output_4"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10)) / 32.0 AS "Score_4", 9.0 * (CASE WHEN ("DT_Output_4"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_4"."Proba_4" IS NULL OR "DT_Output_4"."Proba_4" > 0.0) THEN ln("DT_Output_4"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_4"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_4"."Proba_0" IS NULL OR "DT_Output_4"."Proba_0" > 0.0) THEN ln("DT_Output_4"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_4"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_4"."Proba_1" IS NULL OR "DT_Output_4"."Proba_1" > 0.0) THEN ln("DT_Output_4"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_4"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_4"."Proba_2" IS NULL OR "DT_Output_4"."Proba_2" > 0.0) THEN ln("DT_Output_4"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_4"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_4"."Proba_3" IS NULL OR "DT_Output_4"."Proba_3" > 0.0) THEN ln("DT_Output_4"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_4"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_4"."Proba_4" IS NULL OR "DT_Output_4"."Proba_4" > 0.0) THEN ln("DT_Output_4"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_4"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_4"."Proba_5" IS NULL OR "DT_Output_4"."Proba_5" > 0.0) THEN ln("DT_Output_4"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_4"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_4"."Proba_6" IS NULL OR "DT_Output_4"."Proba_6" > 0.0) THEN ln("DT_Output_4"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_4"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_4"."Proba_7" IS NULL OR "DT_Output_4"."Proba_7" > 0.0) THEN ln("DT_Output_4"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_4"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_4"."Proba_8" IS NULL OR "DT_Output_4"."Proba_8" > 0.0) THEN ln("DT_Output_4"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_4"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_4"."Proba_9" IS NULL OR "DT_Output_4"."Proba_9" > 0.0) THEN ln("DT_Output_4"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10) AS "Proba_4", (9.0 * (CASE WHEN ("DT_Output_4"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_4"."Proba_5" IS NULL OR "DT_Output_4"."Proba_5" > 0.0) THEN ln("DT_Output_4"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_4"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_4"."Proba_0" IS NULL OR "DT_Output_4"."Proba_0" > 0.0) THEN ln("DT_Output_4"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_4"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_4"."Proba_1" IS NULL OR "DT_Output_4"."Proba_1" > 0.0) THEN ln("DT_Output_4"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_4"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_4"."Proba_2" IS NULL OR "DT_Output_4"."Proba_2" > 0.0) THEN ln("DT_Output_4"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_4"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_4"."Proba_3" IS NULL OR "DT_Output_4"."Proba_3" > 0.0) THEN ln("DT_Output_4"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_4"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_4"."Proba_4" IS NULL OR "DT_Output_4"."Proba_4" > 0.0) THEN ln("DT_Output_4"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_4"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_4"."Proba_5" IS NULL OR "DT_Output_4"."Proba_5" > 0.0) THEN ln("DT_Output_4"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_4"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_4"."Proba_6" IS NULL OR "DT_Output_4"."Proba_6" > 0.0) THEN ln("DT_Output_4"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_4"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_4"."Proba_7" IS NULL OR "DT_Output_4"."Proba_7" > 0.0) THEN ln("DT_Output_4"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_4"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_4"."Proba_8" IS NULL OR "DT_Output_4"."Proba_8" > 0.0) THEN ln("DT_Output_4"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_4"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_4"."Proba_9" IS NULL OR "DT_Output_4"."Proba_9" > 0.0) THEN ln("DT_Output_4"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10)) / 32.0 AS "Score_5", 9.0 * (CASE WHEN ("DT_Output_4"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_4"."Proba_5" IS NULL OR "DT_Output_4"."Proba_5" > 0.0) THEN ln("DT_Output_4"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_4"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_4"."Proba_0" IS NULL OR "DT_Output_4"."Proba_0" > 0.0) THEN ln("DT_Output_4"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_4"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_4"."Proba_1" IS NULL OR "DT_Output_4"."Proba_1" > 0.0) THEN ln("DT_Output_4"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_4"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_4"."Proba_2" IS NULL OR "DT_Output_4"."Proba_2" > 0.0) THEN ln("DT_Output_4"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_4"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_4"."Proba_3" IS NULL OR "DT_Output_4"."Proba_3" > 0.0) THEN ln("DT_Output_4"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_4"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_4"."Proba_4" IS NULL OR "DT_Output_4"."Proba_4" > 0.0) THEN ln("DT_Output_4"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_4"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_4"."Proba_5" IS NULL OR "DT_Output_4"."Proba_5" > 0.0) THEN ln("DT_Output_4"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_4"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_4"."Proba_6" IS NULL OR "DT_Output_4"."Proba_6" > 0.0) THEN ln("DT_Output_4"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_4"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_4"."Proba_7" IS NULL OR "DT_Output_4"."Proba_7" > 0.0) THEN ln("DT_Output_4"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_4"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_4"."Proba_8" IS NULL OR "DT_Output_4"."Proba_8" > 0.0) THEN ln("DT_Output_4"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_4"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_4"."Proba_9" IS NULL OR "DT_Output_4"."Proba_9" > 0.0) THEN ln("DT_Output_4"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10) AS "Proba_5", (9.0 * (CASE WHEN ("DT_Output_4"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_4"."Proba_6" IS NULL OR "DT_Output_4"."Proba_6" > 0.0) THEN ln("DT_Output_4"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_4"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_4"."Proba_0" IS NULL OR "DT_Output_4"."Proba_0" > 0.0) THEN ln("DT_Output_4"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_4"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_4"."Proba_1" IS NULL OR "DT_Output_4"."Proba_1" > 0.0) THEN ln("DT_Output_4"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_4"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_4"."Proba_2" IS NULL OR "DT_Output_4"."Proba_2" > 0.0) THEN ln("DT_Output_4"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_4"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_4"."Proba_3" IS NULL OR "DT_Output_4"."Proba_3" > 0.0) THEN ln("DT_Output_4"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_4"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_4"."Proba_4" IS NULL OR "DT_Output_4"."Proba_4" > 0.0) THEN ln("DT_Output_4"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_4"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_4"."Proba_5" IS NULL OR "DT_Output_4"."Proba_5" > 0.0) THEN ln("DT_Output_4"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_4"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_4"."Proba_6" IS NULL OR "DT_Output_4"."Proba_6" > 0.0) THEN ln("DT_Output_4"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_4"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_4"."Proba_7" IS NULL OR "DT_Output_4"."Proba_7" > 0.0) THEN ln("DT_Output_4"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_4"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_4"."Proba_8" IS NULL OR "DT_Output_4"."Proba_8" > 0.0) THEN ln("DT_Output_4"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_4"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_4"."Proba_9" IS NULL OR "DT_Output_4"."Proba_9" > 0.0) THEN ln("DT_Output_4"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10)) / 32.0 AS "Score_6", 9.0 * (CASE WHEN ("DT_Output_4"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_4"."Proba_6" IS NULL OR "DT_Output_4"."Proba_6" > 0.0) THEN ln("DT_Output_4"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_4"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_4"."Proba_0" IS NULL OR "DT_Output_4"."Proba_0" > 0.0) THEN ln("DT_Output_4"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_4"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_4"."Proba_1" IS NULL OR "DT_Output_4"."Proba_1" > 0.0) THEN ln("DT_Output_4"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_4"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_4"."Proba_2" IS NULL OR "DT_Output_4"."Proba_2" > 0.0) THEN ln("DT_Output_4"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_4"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_4"."Proba_3" IS NULL OR "DT_Output_4"."Proba_3" > 0.0) THEN ln("DT_Output_4"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_4"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_4"."Proba_4" IS NULL OR "DT_Output_4"."Proba_4" > 0.0) THEN ln("DT_Output_4"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_4"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_4"."Proba_5" IS NULL OR "DT_Output_4"."Proba_5" > 0.0) THEN ln("DT_Output_4"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_4"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_4"."Proba_6" IS NULL OR "DT_Output_4"."Proba_6" > 0.0) THEN ln("DT_Output_4"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_4"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_4"."Proba_7" IS NULL OR "DT_Output_4"."Proba_7" > 0.0) THEN ln("DT_Output_4"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_4"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_4"."Proba_8" IS NULL OR "DT_Output_4"."Proba_8" > 0.0) THEN ln("DT_Output_4"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_4"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_4"."Proba_9" IS NULL OR "DT_Output_4"."Proba_9" > 0.0) THEN ln("DT_Output_4"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10) AS "Proba_6", (9.0 * (CASE WHEN ("DT_Output_4"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_4"."Proba_7" IS NULL OR "DT_Output_4"."Proba_7" > 0.0) THEN ln("DT_Output_4"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_4"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_4"."Proba_0" IS NULL OR "DT_Output_4"."Proba_0" > 0.0) THEN ln("DT_Output_4"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_4"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_4"."Proba_1" IS NULL OR "DT_Output_4"."Proba_1" > 0.0) THEN ln("DT_Output_4"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_4"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_4"."Proba_2" IS NULL OR "DT_Output_4"."Proba_2" > 0.0) THEN ln("DT_Output_4"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_4"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_4"."Proba_3" IS NULL OR "DT_Output_4"."Proba_3" > 0.0) THEN ln("DT_Output_4"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_4"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_4"."Proba_4" IS NULL OR "DT_Output_4"."Proba_4" > 0.0) THEN ln("DT_Output_4"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_4"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_4"."Proba_5" IS NULL OR "DT_Output_4"."Proba_5" > 0.0) THEN ln("DT_Output_4"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_4"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_4"."Proba_6" IS NULL OR "DT_Output_4"."Proba_6" > 0.0) THEN ln("DT_Output_4"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_4"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_4"."Proba_7" IS NULL OR "DT_Output_4"."Proba_7" > 0.0) THEN ln("DT_Output_4"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_4"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_4"."Proba_8" IS NULL OR "DT_Output_4"."Proba_8" > 0.0) THEN ln("DT_Output_4"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_4"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_4"."Proba_9" IS NULL OR "DT_Output_4"."Proba_9" > 0.0) THEN ln("DT_Output_4"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10)) / 32.0 AS "Score_7", 9.0 * (CASE WHEN ("DT_Output_4"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_4"."Proba_7" IS NULL OR "DT_Output_4"."Proba_7" > 0.0) THEN ln("DT_Output_4"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_4"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_4"."Proba_0" IS NULL OR "DT_Output_4"."Proba_0" > 0.0) THEN ln("DT_Output_4"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_4"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_4"."Proba_1" IS NULL OR "DT_Output_4"."Proba_1" > 0.0) THEN ln("DT_Output_4"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_4"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_4"."Proba_2" IS NULL OR "DT_Output_4"."Proba_2" > 0.0) THEN ln("DT_Output_4"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_4"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_4"."Proba_3" IS NULL OR "DT_Output_4"."Proba_3" > 0.0) THEN ln("DT_Output_4"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_4"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_4"."Proba_4" IS NULL OR "DT_Output_4"."Proba_4" > 0.0) THEN ln("DT_Output_4"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_4"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_4"."Proba_5" IS NULL OR "DT_Output_4"."Proba_5" > 0.0) THEN ln("DT_Output_4"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_4"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_4"."Proba_6" IS NULL OR "DT_Output_4"."Proba_6" > 0.0) THEN ln("DT_Output_4"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_4"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_4"."Proba_7" IS NULL OR "DT_Output_4"."Proba_7" > 0.0) THEN ln("DT_Output_4"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_4"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_4"."Proba_8" IS NULL OR "DT_Output_4"."Proba_8" > 0.0) THEN ln("DT_Output_4"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_4"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_4"."Proba_9" IS NULL OR "DT_Output_4"."Proba_9" > 0.0) THEN ln("DT_Output_4"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10) AS "Proba_7", (9.0 * (CASE WHEN ("DT_Output_4"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_4"."Proba_8" IS NULL OR "DT_Output_4"."Proba_8" > 0.0) THEN ln("DT_Output_4"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_4"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_4"."Proba_0" IS NULL OR "DT_Output_4"."Proba_0" > 0.0) THEN ln("DT_Output_4"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_4"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_4"."Proba_1" IS NULL OR "DT_Output_4"."Proba_1" > 0.0) THEN ln("DT_Output_4"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_4"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_4"."Proba_2" IS NULL OR "DT_Output_4"."Proba_2" > 0.0) THEN ln("DT_Output_4"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_4"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_4"."Proba_3" IS NULL OR "DT_Output_4"."Proba_3" > 0.0) THEN ln("DT_Output_4"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_4"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_4"."Proba_4" IS NULL OR "DT_Output_4"."Proba_4" > 0.0) THEN ln("DT_Output_4"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_4"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_4"."Proba_5" IS NULL OR "DT_Output_4"."Proba_5" > 0.0) THEN ln("DT_Output_4"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_4"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_4"."Proba_6" IS NULL OR "DT_Output_4"."Proba_6" > 0.0) THEN ln("DT_Output_4"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_4"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_4"."Proba_7" IS NULL OR "DT_Output_4"."Proba_7" > 0.0) THEN ln("DT_Output_4"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_4"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_4"."Proba_8" IS NULL OR "DT_Output_4"."Proba_8" > 0.0) THEN ln("DT_Output_4"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_4"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_4"."Proba_9" IS NULL OR "DT_Output_4"."Proba_9" > 0.0) THEN ln("DT_Output_4"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10)) / 32.0 AS "Score_8", 9.0 * (CASE WHEN ("DT_Output_4"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_4"."Proba_8" IS NULL OR "DT_Output_4"."Proba_8" > 0.0) THEN ln("DT_Output_4"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_4"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_4"."Proba_0" IS NULL OR "DT_Output_4"."Proba_0" > 0.0) THEN ln("DT_Output_4"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_4"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_4"."Proba_1" IS NULL OR "DT_Output_4"."Proba_1" > 0.0) THEN ln("DT_Output_4"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_4"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_4"."Proba_2" IS NULL OR "DT_Output_4"."Proba_2" > 0.0) THEN ln("DT_Output_4"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_4"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_4"."Proba_3" IS NULL OR "DT_Output_4"."Proba_3" > 0.0) THEN ln("DT_Output_4"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_4"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_4"."Proba_4" IS NULL OR "DT_Output_4"."Proba_4" > 0.0) THEN ln("DT_Output_4"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_4"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_4"."Proba_5" IS NULL OR "DT_Output_4"."Proba_5" > 0.0) THEN ln("DT_Output_4"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_4"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_4"."Proba_6" IS NULL OR "DT_Output_4"."Proba_6" > 0.0) THEN ln("DT_Output_4"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_4"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_4"."Proba_7" IS NULL OR "DT_Output_4"."Proba_7" > 0.0) THEN ln("DT_Output_4"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_4"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_4"."Proba_8" IS NULL OR "DT_Output_4"."Proba_8" > 0.0) THEN ln("DT_Output_4"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_4"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_4"."Proba_9" IS NULL OR "DT_Output_4"."Proba_9" > 0.0) THEN ln("DT_Output_4"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10) AS "Proba_8", (9.0 * (CASE WHEN ("DT_Output_4"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_4"."Proba_9" IS NULL OR "DT_Output_4"."Proba_9" > 0.0) THEN ln("DT_Output_4"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_4"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_4"."Proba_0" IS NULL OR "DT_Output_4"."Proba_0" > 0.0) THEN ln("DT_Output_4"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_4"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_4"."Proba_1" IS NULL OR "DT_Output_4"."Proba_1" > 0.0) THEN ln("DT_Output_4"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_4"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_4"."Proba_2" IS NULL OR "DT_Output_4"."Proba_2" > 0.0) THEN ln("DT_Output_4"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_4"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_4"."Proba_3" IS NULL OR "DT_Output_4"."Proba_3" > 0.0) THEN ln("DT_Output_4"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_4"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_4"."Proba_4" IS NULL OR "DT_Output_4"."Proba_4" > 0.0) THEN ln("DT_Output_4"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_4"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_4"."Proba_5" IS NULL OR "DT_Output_4"."Proba_5" > 0.0) THEN ln("DT_Output_4"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_4"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_4"."Proba_6" IS NULL OR "DT_Output_4"."Proba_6" > 0.0) THEN ln("DT_Output_4"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_4"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_4"."Proba_7" IS NULL OR "DT_Output_4"."Proba_7" > 0.0) THEN ln("DT_Output_4"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_4"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_4"."Proba_8" IS NULL OR "DT_Output_4"."Proba_8" > 0.0) THEN ln("DT_Output_4"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_4"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_4"."Proba_9" IS NULL OR "DT_Output_4"."Proba_9" > 0.0) THEN ln("DT_Output_4"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10)) / 32.0 AS "Score_9", 9.0 * (CASE WHEN ("DT_Output_4"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_4"."Proba_9" IS NULL OR "DT_Output_4"."Proba_9" > 0.0) THEN ln("DT_Output_4"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_4"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_4"."Proba_0" IS NULL OR "DT_Output_4"."Proba_0" > 0.0) THEN ln("DT_Output_4"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_4"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_4"."Proba_1" IS NULL OR "DT_Output_4"."Proba_1" > 0.0) THEN ln("DT_Output_4"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_4"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_4"."Proba_2" IS NULL OR "DT_Output_4"."Proba_2" > 0.0) THEN ln("DT_Output_4"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_4"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_4"."Proba_3" IS NULL OR "DT_Output_4"."Proba_3" > 0.0) THEN ln("DT_Output_4"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_4"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_4"."Proba_4" IS NULL OR "DT_Output_4"."Proba_4" > 0.0) THEN ln("DT_Output_4"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_4"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_4"."Proba_5" IS NULL OR "DT_Output_4"."Proba_5" > 0.0) THEN ln("DT_Output_4"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_4"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_4"."Proba_6" IS NULL OR "DT_Output_4"."Proba_6" > 0.0) THEN ln("DT_Output_4"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_4"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_4"."Proba_7" IS NULL OR "DT_Output_4"."Proba_7" > 0.0) THEN ln("DT_Output_4"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_4"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_4"."Proba_8" IS NULL OR "DT_Output_4"."Proba_8" > 0.0) THEN ln("DT_Output_4"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_4"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_4"."Proba_9" IS NULL OR "DT_Output_4"."Proba_9" > 0.0) THEN ln("DT_Output_4"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10) AS "Proba_9" 
FROM "DT_Output_4"), 
"DT_node_lookup_5" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_38 <= -1.6508052349090576) THEN 1 ELSE 2 END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_5" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Proba_0" AS "Proba_0", "Values"."LogProba_0" AS "LogProba_0", "Values"."Proba_1" AS "Proba_1", "Values"."LogProba_1" AS "LogProba_1", "Values"."Proba_2" AS "Proba_2", "Values"."LogProba_2" AS "LogProba_2", "Values"."Proba_3" AS "Proba_3", "Values"."LogProba_3" AS "LogProba_3", "Values"."Proba_4" AS "Proba_4", "Values"."LogProba_4" AS "LogProba_4", "Values"."Proba_5" AS "Proba_5", "Values"."LogProba_5" AS "LogProba_5", "Values"."Proba_6" AS "Proba_6", "Values"."LogProba_6" AS "LogProba_6", "Values"."Proba_7" AS "Proba_7", "Values"."LogProba_7" AS "LogProba_7", "Values"."Proba_8" AS "Proba_8", "Values"."LogProba_8" AS "LogProba_8", "Values"."Proba_9" AS "Proba_9", "Values"."LogProba_9" AS "LogProba_9", "Values"."Decision" AS "Decision", "Values"."DecisionProba" AS "DecisionProba" 
FROM (SELECT 1 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 219 AS count, 1 AS depth, 0 AS parent_id, 0.9999818165231056 AS "Proba_0", -1.81836422158e-05 AS "LogProba_0", 0.0 AS "Proba_1", -BINARY_FLOAT_INFINITY AS "LogProba_1", 2.145987514846921e-06 AS "Proba_2", -13.0519107316 AS "LogProba_2", 2.730803831372348e-06 AS "Proba_3", -12.8109145484 AS "LogProba_3", 2.395446115745433e-06 AS "Proba_4", -12.9419410748 AS "LogProba_4", 2.7296702038430408e-06 AS "Proba_5", -12.8113297605 AS "LogProba_5", 2.7301075247271482e-06 AS "Proba_6", -12.8111695632 AS "LogProba_6", 0.0 AS "Proba_7", -BINARY_FLOAT_INFINITY AS "LogProba_7", 2.7206579657769727e-06 AS "Proba_8", -12.8146368077 AS "LogProba_8", 2.730803738183483e-06 AS "Proba_9", -12.8109145825 AS "LogProba_9", 0 AS "Decision", 0.999981816523 AS "DecisionProba" FROM DUAL UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1218 AS count, 1 AS depth, 0 AS parent_id, 0.00012443730969741808 AS "Proba_0", -8.99170850544 AS "LogProba_0", 0.11111133535160998 AS "Proba_1", -2.19722255917 AS "LogProba_1", 0.11111109717078158 AS "Proba_2", -2.1972247028 AS "LogProba_2", 0.11111103226265255 AS "Proba_3", -2.19722528697 AS "LogProba_3", 0.11111106948364179 AS "Proba_4", -2.19722495198 AS "LogProba_4", 0.11111103238847242 AS "Proba_5", -2.19722528584 AS "LogProba_5", 0.1111110323399348 AS "Proba_6", -2.19722528628 AS "LogProba_6", 0.1111113353516101 AS "Proba_7", -2.19722255917 AS "LogProba_7", 0.11098659607893657 AS "Proba_8", -2.19834584101 AS "LogProba_8", 0.11111103226266278 AS "Proba_9", -2.19722528697 AS "LogProba_9", 7 AS "Decision", 0.111111335352 AS "DecisionProba" FROM DUAL) "Values"), 
"DT_Output_5" AS 
(SELECT "DT_node_lookup_5"."KEY" AS "KEY", "DT_node_lookup_5".node_id_2 AS node_id_2, "DT_node_data_5".node_id AS node_id, "DT_node_data_5".feature AS feature, "DT_node_data_5".threshold AS threshold, "DT_node_data_5".count AS count, "DT_node_data_5".depth AS depth, "DT_node_data_5".parent_id AS parent_id, "DT_node_data_5"."Proba_0" AS "Proba_0", "DT_node_data_5"."LogProba_0" AS "LogProba_0", "DT_node_data_5"."Proba_1" AS "Proba_1", "DT_node_data_5"."LogProba_1" AS "LogProba_1", "DT_node_data_5"."Proba_2" AS "Proba_2", "DT_node_data_5"."LogProba_2" AS "LogProba_2", "DT_node_data_5"."Proba_3" AS "Proba_3", "DT_node_data_5"."LogProba_3" AS "LogProba_3", "DT_node_data_5"."Proba_4" AS "Proba_4", "DT_node_data_5"."LogProba_4" AS "LogProba_4", "DT_node_data_5"."Proba_5" AS "Proba_5", "DT_node_data_5"."LogProba_5" AS "LogProba_5", "DT_node_data_5"."Proba_6" AS "Proba_6", "DT_node_data_5"."LogProba_6" AS "LogProba_6", "DT_node_data_5"."Proba_7" AS "Proba_7", "DT_node_data_5"."LogProba_7" AS "LogProba_7", "DT_node_data_5"."Proba_8" AS "Proba_8", "DT_node_data_5"."LogProba_8" AS "LogProba_8", "DT_node_data_5"."Proba_9" AS "Proba_9", "DT_node_data_5"."LogProba_9" AS "LogProba_9", "DT_node_data_5"."Decision" AS "Decision", "DT_node_data_5"."DecisionProba" AS "DecisionProba" 
FROM "DT_node_lookup_5" LEFT OUTER JOIN "DT_node_data_5" ON "DT_node_lookup_5".node_id_2 = "DT_node_data_5".node_id), 
"AdaBoost_Estim_5" AS 
(SELECT "DT_Output_5"."KEY" AS "KEY", (9.0 * (CASE WHEN ("DT_Output_5"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_5"."Proba_0" IS NULL OR "DT_Output_5"."Proba_0" > 0.0) THEN ln("DT_Output_5"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_5"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_5"."Proba_0" IS NULL OR "DT_Output_5"."Proba_0" > 0.0) THEN ln("DT_Output_5"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_5"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_5"."Proba_1" IS NULL OR "DT_Output_5"."Proba_1" > 0.0) THEN ln("DT_Output_5"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_5"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_5"."Proba_2" IS NULL OR "DT_Output_5"."Proba_2" > 0.0) THEN ln("DT_Output_5"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_5"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_5"."Proba_3" IS NULL OR "DT_Output_5"."Proba_3" > 0.0) THEN ln("DT_Output_5"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_5"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_5"."Proba_4" IS NULL OR "DT_Output_5"."Proba_4" > 0.0) THEN ln("DT_Output_5"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_5"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_5"."Proba_5" IS NULL OR "DT_Output_5"."Proba_5" > 0.0) THEN ln("DT_Output_5"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_5"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_5"."Proba_6" IS NULL OR "DT_Output_5"."Proba_6" > 0.0) THEN ln("DT_Output_5"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_5"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_5"."Proba_7" IS NULL OR "DT_Output_5"."Proba_7" > 0.0) THEN ln("DT_Output_5"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_5"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_5"."Proba_8" IS NULL OR "DT_Output_5"."Proba_8" > 0.0) THEN ln("DT_Output_5"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_5"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_5"."Proba_9" IS NULL OR "DT_Output_5"."Proba_9" > 0.0) THEN ln("DT_Output_5"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10)) / 32.0 AS "Score_0", 9.0 * (CASE WHEN ("DT_Output_5"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_5"."Proba_0" IS NULL OR "DT_Output_5"."Proba_0" > 0.0) THEN ln("DT_Output_5"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_5"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_5"."Proba_0" IS NULL OR "DT_Output_5"."Proba_0" > 0.0) THEN ln("DT_Output_5"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_5"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_5"."Proba_1" IS NULL OR "DT_Output_5"."Proba_1" > 0.0) THEN ln("DT_Output_5"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_5"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_5"."Proba_2" IS NULL OR "DT_Output_5"."Proba_2" > 0.0) THEN ln("DT_Output_5"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_5"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_5"."Proba_3" IS NULL OR "DT_Output_5"."Proba_3" > 0.0) THEN ln("DT_Output_5"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_5"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_5"."Proba_4" IS NULL OR "DT_Output_5"."Proba_4" > 0.0) THEN ln("DT_Output_5"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_5"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_5"."Proba_5" IS NULL OR "DT_Output_5"."Proba_5" > 0.0) THEN ln("DT_Output_5"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_5"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_5"."Proba_6" IS NULL OR "DT_Output_5"."Proba_6" > 0.0) THEN ln("DT_Output_5"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_5"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_5"."Proba_7" IS NULL OR "DT_Output_5"."Proba_7" > 0.0) THEN ln("DT_Output_5"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_5"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_5"."Proba_8" IS NULL OR "DT_Output_5"."Proba_8" > 0.0) THEN ln("DT_Output_5"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_5"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_5"."Proba_9" IS NULL OR "DT_Output_5"."Proba_9" > 0.0) THEN ln("DT_Output_5"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10) AS "Proba_0", (9.0 * (CASE WHEN ("DT_Output_5"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_5"."Proba_1" IS NULL OR "DT_Output_5"."Proba_1" > 0.0) THEN ln("DT_Output_5"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_5"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_5"."Proba_0" IS NULL OR "DT_Output_5"."Proba_0" > 0.0) THEN ln("DT_Output_5"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_5"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_5"."Proba_1" IS NULL OR "DT_Output_5"."Proba_1" > 0.0) THEN ln("DT_Output_5"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_5"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_5"."Proba_2" IS NULL OR "DT_Output_5"."Proba_2" > 0.0) THEN ln("DT_Output_5"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_5"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_5"."Proba_3" IS NULL OR "DT_Output_5"."Proba_3" > 0.0) THEN ln("DT_Output_5"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_5"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_5"."Proba_4" IS NULL OR "DT_Output_5"."Proba_4" > 0.0) THEN ln("DT_Output_5"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_5"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_5"."Proba_5" IS NULL OR "DT_Output_5"."Proba_5" > 0.0) THEN ln("DT_Output_5"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_5"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_5"."Proba_6" IS NULL OR "DT_Output_5"."Proba_6" > 0.0) THEN ln("DT_Output_5"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_5"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_5"."Proba_7" IS NULL OR "DT_Output_5"."Proba_7" > 0.0) THEN ln("DT_Output_5"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_5"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_5"."Proba_8" IS NULL OR "DT_Output_5"."Proba_8" > 0.0) THEN ln("DT_Output_5"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_5"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_5"."Proba_9" IS NULL OR "DT_Output_5"."Proba_9" > 0.0) THEN ln("DT_Output_5"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10)) / 32.0 AS "Score_1", 9.0 * (CASE WHEN ("DT_Output_5"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_5"."Proba_1" IS NULL OR "DT_Output_5"."Proba_1" > 0.0) THEN ln("DT_Output_5"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_5"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_5"."Proba_0" IS NULL OR "DT_Output_5"."Proba_0" > 0.0) THEN ln("DT_Output_5"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_5"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_5"."Proba_1" IS NULL OR "DT_Output_5"."Proba_1" > 0.0) THEN ln("DT_Output_5"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_5"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_5"."Proba_2" IS NULL OR "DT_Output_5"."Proba_2" > 0.0) THEN ln("DT_Output_5"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_5"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_5"."Proba_3" IS NULL OR "DT_Output_5"."Proba_3" > 0.0) THEN ln("DT_Output_5"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_5"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_5"."Proba_4" IS NULL OR "DT_Output_5"."Proba_4" > 0.0) THEN ln("DT_Output_5"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_5"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_5"."Proba_5" IS NULL OR "DT_Output_5"."Proba_5" > 0.0) THEN ln("DT_Output_5"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_5"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_5"."Proba_6" IS NULL OR "DT_Output_5"."Proba_6" > 0.0) THEN ln("DT_Output_5"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_5"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_5"."Proba_7" IS NULL OR "DT_Output_5"."Proba_7" > 0.0) THEN ln("DT_Output_5"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_5"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_5"."Proba_8" IS NULL OR "DT_Output_5"."Proba_8" > 0.0) THEN ln("DT_Output_5"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_5"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_5"."Proba_9" IS NULL OR "DT_Output_5"."Proba_9" > 0.0) THEN ln("DT_Output_5"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10) AS "Proba_1", (9.0 * (CASE WHEN ("DT_Output_5"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_5"."Proba_2" IS NULL OR "DT_Output_5"."Proba_2" > 0.0) THEN ln("DT_Output_5"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_5"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_5"."Proba_0" IS NULL OR "DT_Output_5"."Proba_0" > 0.0) THEN ln("DT_Output_5"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_5"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_5"."Proba_1" IS NULL OR "DT_Output_5"."Proba_1" > 0.0) THEN ln("DT_Output_5"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_5"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_5"."Proba_2" IS NULL OR "DT_Output_5"."Proba_2" > 0.0) THEN ln("DT_Output_5"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_5"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_5"."Proba_3" IS NULL OR "DT_Output_5"."Proba_3" > 0.0) THEN ln("DT_Output_5"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_5"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_5"."Proba_4" IS NULL OR "DT_Output_5"."Proba_4" > 0.0) THEN ln("DT_Output_5"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_5"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_5"."Proba_5" IS NULL OR "DT_Output_5"."Proba_5" > 0.0) THEN ln("DT_Output_5"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_5"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_5"."Proba_6" IS NULL OR "DT_Output_5"."Proba_6" > 0.0) THEN ln("DT_Output_5"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_5"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_5"."Proba_7" IS NULL OR "DT_Output_5"."Proba_7" > 0.0) THEN ln("DT_Output_5"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_5"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_5"."Proba_8" IS NULL OR "DT_Output_5"."Proba_8" > 0.0) THEN ln("DT_Output_5"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_5"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_5"."Proba_9" IS NULL OR "DT_Output_5"."Proba_9" > 0.0) THEN ln("DT_Output_5"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10)) / 32.0 AS "Score_2", 9.0 * (CASE WHEN ("DT_Output_5"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_5"."Proba_2" IS NULL OR "DT_Output_5"."Proba_2" > 0.0) THEN ln("DT_Output_5"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_5"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_5"."Proba_0" IS NULL OR "DT_Output_5"."Proba_0" > 0.0) THEN ln("DT_Output_5"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_5"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_5"."Proba_1" IS NULL OR "DT_Output_5"."Proba_1" > 0.0) THEN ln("DT_Output_5"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_5"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_5"."Proba_2" IS NULL OR "DT_Output_5"."Proba_2" > 0.0) THEN ln("DT_Output_5"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_5"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_5"."Proba_3" IS NULL OR "DT_Output_5"."Proba_3" > 0.0) THEN ln("DT_Output_5"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_5"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_5"."Proba_4" IS NULL OR "DT_Output_5"."Proba_4" > 0.0) THEN ln("DT_Output_5"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_5"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_5"."Proba_5" IS NULL OR "DT_Output_5"."Proba_5" > 0.0) THEN ln("DT_Output_5"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_5"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_5"."Proba_6" IS NULL OR "DT_Output_5"."Proba_6" > 0.0) THEN ln("DT_Output_5"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_5"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_5"."Proba_7" IS NULL OR "DT_Output_5"."Proba_7" > 0.0) THEN ln("DT_Output_5"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_5"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_5"."Proba_8" IS NULL OR "DT_Output_5"."Proba_8" > 0.0) THEN ln("DT_Output_5"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_5"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_5"."Proba_9" IS NULL OR "DT_Output_5"."Proba_9" > 0.0) THEN ln("DT_Output_5"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10) AS "Proba_2", (9.0 * (CASE WHEN ("DT_Output_5"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_5"."Proba_3" IS NULL OR "DT_Output_5"."Proba_3" > 0.0) THEN ln("DT_Output_5"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_5"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_5"."Proba_0" IS NULL OR "DT_Output_5"."Proba_0" > 0.0) THEN ln("DT_Output_5"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_5"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_5"."Proba_1" IS NULL OR "DT_Output_5"."Proba_1" > 0.0) THEN ln("DT_Output_5"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_5"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_5"."Proba_2" IS NULL OR "DT_Output_5"."Proba_2" > 0.0) THEN ln("DT_Output_5"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_5"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_5"."Proba_3" IS NULL OR "DT_Output_5"."Proba_3" > 0.0) THEN ln("DT_Output_5"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_5"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_5"."Proba_4" IS NULL OR "DT_Output_5"."Proba_4" > 0.0) THEN ln("DT_Output_5"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_5"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_5"."Proba_5" IS NULL OR "DT_Output_5"."Proba_5" > 0.0) THEN ln("DT_Output_5"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_5"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_5"."Proba_6" IS NULL OR "DT_Output_5"."Proba_6" > 0.0) THEN ln("DT_Output_5"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_5"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_5"."Proba_7" IS NULL OR "DT_Output_5"."Proba_7" > 0.0) THEN ln("DT_Output_5"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_5"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_5"."Proba_8" IS NULL OR "DT_Output_5"."Proba_8" > 0.0) THEN ln("DT_Output_5"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_5"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_5"."Proba_9" IS NULL OR "DT_Output_5"."Proba_9" > 0.0) THEN ln("DT_Output_5"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10)) / 32.0 AS "Score_3", 9.0 * (CASE WHEN ("DT_Output_5"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_5"."Proba_3" IS NULL OR "DT_Output_5"."Proba_3" > 0.0) THEN ln("DT_Output_5"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_5"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_5"."Proba_0" IS NULL OR "DT_Output_5"."Proba_0" > 0.0) THEN ln("DT_Output_5"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_5"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_5"."Proba_1" IS NULL OR "DT_Output_5"."Proba_1" > 0.0) THEN ln("DT_Output_5"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_5"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_5"."Proba_2" IS NULL OR "DT_Output_5"."Proba_2" > 0.0) THEN ln("DT_Output_5"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_5"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_5"."Proba_3" IS NULL OR "DT_Output_5"."Proba_3" > 0.0) THEN ln("DT_Output_5"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_5"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_5"."Proba_4" IS NULL OR "DT_Output_5"."Proba_4" > 0.0) THEN ln("DT_Output_5"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_5"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_5"."Proba_5" IS NULL OR "DT_Output_5"."Proba_5" > 0.0) THEN ln("DT_Output_5"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_5"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_5"."Proba_6" IS NULL OR "DT_Output_5"."Proba_6" > 0.0) THEN ln("DT_Output_5"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_5"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_5"."Proba_7" IS NULL OR "DT_Output_5"."Proba_7" > 0.0) THEN ln("DT_Output_5"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_5"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_5"."Proba_8" IS NULL OR "DT_Output_5"."Proba_8" > 0.0) THEN ln("DT_Output_5"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_5"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_5"."Proba_9" IS NULL OR "DT_Output_5"."Proba_9" > 0.0) THEN ln("DT_Output_5"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10) AS "Proba_3", (9.0 * (CASE WHEN ("DT_Output_5"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_5"."Proba_4" IS NULL OR "DT_Output_5"."Proba_4" > 0.0) THEN ln("DT_Output_5"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_5"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_5"."Proba_0" IS NULL OR "DT_Output_5"."Proba_0" > 0.0) THEN ln("DT_Output_5"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_5"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_5"."Proba_1" IS NULL OR "DT_Output_5"."Proba_1" > 0.0) THEN ln("DT_Output_5"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_5"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_5"."Proba_2" IS NULL OR "DT_Output_5"."Proba_2" > 0.0) THEN ln("DT_Output_5"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_5"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_5"."Proba_3" IS NULL OR "DT_Output_5"."Proba_3" > 0.0) THEN ln("DT_Output_5"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_5"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_5"."Proba_4" IS NULL OR "DT_Output_5"."Proba_4" > 0.0) THEN ln("DT_Output_5"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_5"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_5"."Proba_5" IS NULL OR "DT_Output_5"."Proba_5" > 0.0) THEN ln("DT_Output_5"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_5"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_5"."Proba_6" IS NULL OR "DT_Output_5"."Proba_6" > 0.0) THEN ln("DT_Output_5"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_5"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_5"."Proba_7" IS NULL OR "DT_Output_5"."Proba_7" > 0.0) THEN ln("DT_Output_5"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_5"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_5"."Proba_8" IS NULL OR "DT_Output_5"."Proba_8" > 0.0) THEN ln("DT_Output_5"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_5"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_5"."Proba_9" IS NULL OR "DT_Output_5"."Proba_9" > 0.0) THEN ln("DT_Output_5"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10)) / 32.0 AS "Score_4", 9.0 * (CASE WHEN ("DT_Output_5"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_5"."Proba_4" IS NULL OR "DT_Output_5"."Proba_4" > 0.0) THEN ln("DT_Output_5"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_5"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_5"."Proba_0" IS NULL OR "DT_Output_5"."Proba_0" > 0.0) THEN ln("DT_Output_5"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_5"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_5"."Proba_1" IS NULL OR "DT_Output_5"."Proba_1" > 0.0) THEN ln("DT_Output_5"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_5"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_5"."Proba_2" IS NULL OR "DT_Output_5"."Proba_2" > 0.0) THEN ln("DT_Output_5"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_5"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_5"."Proba_3" IS NULL OR "DT_Output_5"."Proba_3" > 0.0) THEN ln("DT_Output_5"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_5"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_5"."Proba_4" IS NULL OR "DT_Output_5"."Proba_4" > 0.0) THEN ln("DT_Output_5"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_5"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_5"."Proba_5" IS NULL OR "DT_Output_5"."Proba_5" > 0.0) THEN ln("DT_Output_5"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_5"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_5"."Proba_6" IS NULL OR "DT_Output_5"."Proba_6" > 0.0) THEN ln("DT_Output_5"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_5"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_5"."Proba_7" IS NULL OR "DT_Output_5"."Proba_7" > 0.0) THEN ln("DT_Output_5"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_5"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_5"."Proba_8" IS NULL OR "DT_Output_5"."Proba_8" > 0.0) THEN ln("DT_Output_5"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_5"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_5"."Proba_9" IS NULL OR "DT_Output_5"."Proba_9" > 0.0) THEN ln("DT_Output_5"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10) AS "Proba_4", (9.0 * (CASE WHEN ("DT_Output_5"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_5"."Proba_5" IS NULL OR "DT_Output_5"."Proba_5" > 0.0) THEN ln("DT_Output_5"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_5"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_5"."Proba_0" IS NULL OR "DT_Output_5"."Proba_0" > 0.0) THEN ln("DT_Output_5"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_5"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_5"."Proba_1" IS NULL OR "DT_Output_5"."Proba_1" > 0.0) THEN ln("DT_Output_5"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_5"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_5"."Proba_2" IS NULL OR "DT_Output_5"."Proba_2" > 0.0) THEN ln("DT_Output_5"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_5"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_5"."Proba_3" IS NULL OR "DT_Output_5"."Proba_3" > 0.0) THEN ln("DT_Output_5"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_5"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_5"."Proba_4" IS NULL OR "DT_Output_5"."Proba_4" > 0.0) THEN ln("DT_Output_5"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_5"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_5"."Proba_5" IS NULL OR "DT_Output_5"."Proba_5" > 0.0) THEN ln("DT_Output_5"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_5"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_5"."Proba_6" IS NULL OR "DT_Output_5"."Proba_6" > 0.0) THEN ln("DT_Output_5"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_5"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_5"."Proba_7" IS NULL OR "DT_Output_5"."Proba_7" > 0.0) THEN ln("DT_Output_5"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_5"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_5"."Proba_8" IS NULL OR "DT_Output_5"."Proba_8" > 0.0) THEN ln("DT_Output_5"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_5"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_5"."Proba_9" IS NULL OR "DT_Output_5"."Proba_9" > 0.0) THEN ln("DT_Output_5"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10)) / 32.0 AS "Score_5", 9.0 * (CASE WHEN ("DT_Output_5"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_5"."Proba_5" IS NULL OR "DT_Output_5"."Proba_5" > 0.0) THEN ln("DT_Output_5"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_5"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_5"."Proba_0" IS NULL OR "DT_Output_5"."Proba_0" > 0.0) THEN ln("DT_Output_5"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_5"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_5"."Proba_1" IS NULL OR "DT_Output_5"."Proba_1" > 0.0) THEN ln("DT_Output_5"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_5"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_5"."Proba_2" IS NULL OR "DT_Output_5"."Proba_2" > 0.0) THEN ln("DT_Output_5"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_5"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_5"."Proba_3" IS NULL OR "DT_Output_5"."Proba_3" > 0.0) THEN ln("DT_Output_5"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_5"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_5"."Proba_4" IS NULL OR "DT_Output_5"."Proba_4" > 0.0) THEN ln("DT_Output_5"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_5"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_5"."Proba_5" IS NULL OR "DT_Output_5"."Proba_5" > 0.0) THEN ln("DT_Output_5"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_5"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_5"."Proba_6" IS NULL OR "DT_Output_5"."Proba_6" > 0.0) THEN ln("DT_Output_5"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_5"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_5"."Proba_7" IS NULL OR "DT_Output_5"."Proba_7" > 0.0) THEN ln("DT_Output_5"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_5"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_5"."Proba_8" IS NULL OR "DT_Output_5"."Proba_8" > 0.0) THEN ln("DT_Output_5"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_5"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_5"."Proba_9" IS NULL OR "DT_Output_5"."Proba_9" > 0.0) THEN ln("DT_Output_5"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10) AS "Proba_5", (9.0 * (CASE WHEN ("DT_Output_5"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_5"."Proba_6" IS NULL OR "DT_Output_5"."Proba_6" > 0.0) THEN ln("DT_Output_5"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_5"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_5"."Proba_0" IS NULL OR "DT_Output_5"."Proba_0" > 0.0) THEN ln("DT_Output_5"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_5"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_5"."Proba_1" IS NULL OR "DT_Output_5"."Proba_1" > 0.0) THEN ln("DT_Output_5"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_5"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_5"."Proba_2" IS NULL OR "DT_Output_5"."Proba_2" > 0.0) THEN ln("DT_Output_5"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_5"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_5"."Proba_3" IS NULL OR "DT_Output_5"."Proba_3" > 0.0) THEN ln("DT_Output_5"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_5"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_5"."Proba_4" IS NULL OR "DT_Output_5"."Proba_4" > 0.0) THEN ln("DT_Output_5"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_5"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_5"."Proba_5" IS NULL OR "DT_Output_5"."Proba_5" > 0.0) THEN ln("DT_Output_5"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_5"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_5"."Proba_6" IS NULL OR "DT_Output_5"."Proba_6" > 0.0) THEN ln("DT_Output_5"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_5"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_5"."Proba_7" IS NULL OR "DT_Output_5"."Proba_7" > 0.0) THEN ln("DT_Output_5"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_5"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_5"."Proba_8" IS NULL OR "DT_Output_5"."Proba_8" > 0.0) THEN ln("DT_Output_5"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_5"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_5"."Proba_9" IS NULL OR "DT_Output_5"."Proba_9" > 0.0) THEN ln("DT_Output_5"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10)) / 32.0 AS "Score_6", 9.0 * (CASE WHEN ("DT_Output_5"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_5"."Proba_6" IS NULL OR "DT_Output_5"."Proba_6" > 0.0) THEN ln("DT_Output_5"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_5"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_5"."Proba_0" IS NULL OR "DT_Output_5"."Proba_0" > 0.0) THEN ln("DT_Output_5"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_5"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_5"."Proba_1" IS NULL OR "DT_Output_5"."Proba_1" > 0.0) THEN ln("DT_Output_5"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_5"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_5"."Proba_2" IS NULL OR "DT_Output_5"."Proba_2" > 0.0) THEN ln("DT_Output_5"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_5"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_5"."Proba_3" IS NULL OR "DT_Output_5"."Proba_3" > 0.0) THEN ln("DT_Output_5"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_5"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_5"."Proba_4" IS NULL OR "DT_Output_5"."Proba_4" > 0.0) THEN ln("DT_Output_5"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_5"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_5"."Proba_5" IS NULL OR "DT_Output_5"."Proba_5" > 0.0) THEN ln("DT_Output_5"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_5"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_5"."Proba_6" IS NULL OR "DT_Output_5"."Proba_6" > 0.0) THEN ln("DT_Output_5"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_5"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_5"."Proba_7" IS NULL OR "DT_Output_5"."Proba_7" > 0.0) THEN ln("DT_Output_5"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_5"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_5"."Proba_8" IS NULL OR "DT_Output_5"."Proba_8" > 0.0) THEN ln("DT_Output_5"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_5"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_5"."Proba_9" IS NULL OR "DT_Output_5"."Proba_9" > 0.0) THEN ln("DT_Output_5"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10) AS "Proba_6", (9.0 * (CASE WHEN ("DT_Output_5"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_5"."Proba_7" IS NULL OR "DT_Output_5"."Proba_7" > 0.0) THEN ln("DT_Output_5"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_5"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_5"."Proba_0" IS NULL OR "DT_Output_5"."Proba_0" > 0.0) THEN ln("DT_Output_5"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_5"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_5"."Proba_1" IS NULL OR "DT_Output_5"."Proba_1" > 0.0) THEN ln("DT_Output_5"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_5"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_5"."Proba_2" IS NULL OR "DT_Output_5"."Proba_2" > 0.0) THEN ln("DT_Output_5"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_5"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_5"."Proba_3" IS NULL OR "DT_Output_5"."Proba_3" > 0.0) THEN ln("DT_Output_5"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_5"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_5"."Proba_4" IS NULL OR "DT_Output_5"."Proba_4" > 0.0) THEN ln("DT_Output_5"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_5"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_5"."Proba_5" IS NULL OR "DT_Output_5"."Proba_5" > 0.0) THEN ln("DT_Output_5"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_5"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_5"."Proba_6" IS NULL OR "DT_Output_5"."Proba_6" > 0.0) THEN ln("DT_Output_5"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_5"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_5"."Proba_7" IS NULL OR "DT_Output_5"."Proba_7" > 0.0) THEN ln("DT_Output_5"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_5"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_5"."Proba_8" IS NULL OR "DT_Output_5"."Proba_8" > 0.0) THEN ln("DT_Output_5"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_5"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_5"."Proba_9" IS NULL OR "DT_Output_5"."Proba_9" > 0.0) THEN ln("DT_Output_5"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10)) / 32.0 AS "Score_7", 9.0 * (CASE WHEN ("DT_Output_5"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_5"."Proba_7" IS NULL OR "DT_Output_5"."Proba_7" > 0.0) THEN ln("DT_Output_5"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_5"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_5"."Proba_0" IS NULL OR "DT_Output_5"."Proba_0" > 0.0) THEN ln("DT_Output_5"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_5"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_5"."Proba_1" IS NULL OR "DT_Output_5"."Proba_1" > 0.0) THEN ln("DT_Output_5"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_5"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_5"."Proba_2" IS NULL OR "DT_Output_5"."Proba_2" > 0.0) THEN ln("DT_Output_5"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_5"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_5"."Proba_3" IS NULL OR "DT_Output_5"."Proba_3" > 0.0) THEN ln("DT_Output_5"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_5"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_5"."Proba_4" IS NULL OR "DT_Output_5"."Proba_4" > 0.0) THEN ln("DT_Output_5"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_5"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_5"."Proba_5" IS NULL OR "DT_Output_5"."Proba_5" > 0.0) THEN ln("DT_Output_5"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_5"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_5"."Proba_6" IS NULL OR "DT_Output_5"."Proba_6" > 0.0) THEN ln("DT_Output_5"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_5"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_5"."Proba_7" IS NULL OR "DT_Output_5"."Proba_7" > 0.0) THEN ln("DT_Output_5"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_5"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_5"."Proba_8" IS NULL OR "DT_Output_5"."Proba_8" > 0.0) THEN ln("DT_Output_5"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_5"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_5"."Proba_9" IS NULL OR "DT_Output_5"."Proba_9" > 0.0) THEN ln("DT_Output_5"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10) AS "Proba_7", (9.0 * (CASE WHEN ("DT_Output_5"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_5"."Proba_8" IS NULL OR "DT_Output_5"."Proba_8" > 0.0) THEN ln("DT_Output_5"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_5"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_5"."Proba_0" IS NULL OR "DT_Output_5"."Proba_0" > 0.0) THEN ln("DT_Output_5"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_5"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_5"."Proba_1" IS NULL OR "DT_Output_5"."Proba_1" > 0.0) THEN ln("DT_Output_5"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_5"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_5"."Proba_2" IS NULL OR "DT_Output_5"."Proba_2" > 0.0) THEN ln("DT_Output_5"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_5"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_5"."Proba_3" IS NULL OR "DT_Output_5"."Proba_3" > 0.0) THEN ln("DT_Output_5"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_5"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_5"."Proba_4" IS NULL OR "DT_Output_5"."Proba_4" > 0.0) THEN ln("DT_Output_5"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_5"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_5"."Proba_5" IS NULL OR "DT_Output_5"."Proba_5" > 0.0) THEN ln("DT_Output_5"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_5"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_5"."Proba_6" IS NULL OR "DT_Output_5"."Proba_6" > 0.0) THEN ln("DT_Output_5"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_5"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_5"."Proba_7" IS NULL OR "DT_Output_5"."Proba_7" > 0.0) THEN ln("DT_Output_5"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_5"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_5"."Proba_8" IS NULL OR "DT_Output_5"."Proba_8" > 0.0) THEN ln("DT_Output_5"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_5"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_5"."Proba_9" IS NULL OR "DT_Output_5"."Proba_9" > 0.0) THEN ln("DT_Output_5"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10)) / 32.0 AS "Score_8", 9.0 * (CASE WHEN ("DT_Output_5"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_5"."Proba_8" IS NULL OR "DT_Output_5"."Proba_8" > 0.0) THEN ln("DT_Output_5"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_5"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_5"."Proba_0" IS NULL OR "DT_Output_5"."Proba_0" > 0.0) THEN ln("DT_Output_5"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_5"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_5"."Proba_1" IS NULL OR "DT_Output_5"."Proba_1" > 0.0) THEN ln("DT_Output_5"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_5"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_5"."Proba_2" IS NULL OR "DT_Output_5"."Proba_2" > 0.0) THEN ln("DT_Output_5"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_5"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_5"."Proba_3" IS NULL OR "DT_Output_5"."Proba_3" > 0.0) THEN ln("DT_Output_5"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_5"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_5"."Proba_4" IS NULL OR "DT_Output_5"."Proba_4" > 0.0) THEN ln("DT_Output_5"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_5"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_5"."Proba_5" IS NULL OR "DT_Output_5"."Proba_5" > 0.0) THEN ln("DT_Output_5"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_5"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_5"."Proba_6" IS NULL OR "DT_Output_5"."Proba_6" > 0.0) THEN ln("DT_Output_5"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_5"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_5"."Proba_7" IS NULL OR "DT_Output_5"."Proba_7" > 0.0) THEN ln("DT_Output_5"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_5"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_5"."Proba_8" IS NULL OR "DT_Output_5"."Proba_8" > 0.0) THEN ln("DT_Output_5"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_5"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_5"."Proba_9" IS NULL OR "DT_Output_5"."Proba_9" > 0.0) THEN ln("DT_Output_5"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10) AS "Proba_8", (9.0 * (CASE WHEN ("DT_Output_5"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_5"."Proba_9" IS NULL OR "DT_Output_5"."Proba_9" > 0.0) THEN ln("DT_Output_5"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_5"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_5"."Proba_0" IS NULL OR "DT_Output_5"."Proba_0" > 0.0) THEN ln("DT_Output_5"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_5"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_5"."Proba_1" IS NULL OR "DT_Output_5"."Proba_1" > 0.0) THEN ln("DT_Output_5"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_5"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_5"."Proba_2" IS NULL OR "DT_Output_5"."Proba_2" > 0.0) THEN ln("DT_Output_5"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_5"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_5"."Proba_3" IS NULL OR "DT_Output_5"."Proba_3" > 0.0) THEN ln("DT_Output_5"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_5"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_5"."Proba_4" IS NULL OR "DT_Output_5"."Proba_4" > 0.0) THEN ln("DT_Output_5"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_5"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_5"."Proba_5" IS NULL OR "DT_Output_5"."Proba_5" > 0.0) THEN ln("DT_Output_5"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_5"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_5"."Proba_6" IS NULL OR "DT_Output_5"."Proba_6" > 0.0) THEN ln("DT_Output_5"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_5"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_5"."Proba_7" IS NULL OR "DT_Output_5"."Proba_7" > 0.0) THEN ln("DT_Output_5"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_5"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_5"."Proba_8" IS NULL OR "DT_Output_5"."Proba_8" > 0.0) THEN ln("DT_Output_5"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_5"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_5"."Proba_9" IS NULL OR "DT_Output_5"."Proba_9" > 0.0) THEN ln("DT_Output_5"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10)) / 32.0 AS "Score_9", 9.0 * (CASE WHEN ("DT_Output_5"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_5"."Proba_9" IS NULL OR "DT_Output_5"."Proba_9" > 0.0) THEN ln("DT_Output_5"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_5"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_5"."Proba_0" IS NULL OR "DT_Output_5"."Proba_0" > 0.0) THEN ln("DT_Output_5"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_5"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_5"."Proba_1" IS NULL OR "DT_Output_5"."Proba_1" > 0.0) THEN ln("DT_Output_5"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_5"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_5"."Proba_2" IS NULL OR "DT_Output_5"."Proba_2" > 0.0) THEN ln("DT_Output_5"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_5"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_5"."Proba_3" IS NULL OR "DT_Output_5"."Proba_3" > 0.0) THEN ln("DT_Output_5"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_5"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_5"."Proba_4" IS NULL OR "DT_Output_5"."Proba_4" > 0.0) THEN ln("DT_Output_5"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_5"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_5"."Proba_5" IS NULL OR "DT_Output_5"."Proba_5" > 0.0) THEN ln("DT_Output_5"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_5"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_5"."Proba_6" IS NULL OR "DT_Output_5"."Proba_6" > 0.0) THEN ln("DT_Output_5"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_5"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_5"."Proba_7" IS NULL OR "DT_Output_5"."Proba_7" > 0.0) THEN ln("DT_Output_5"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_5"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_5"."Proba_8" IS NULL OR "DT_Output_5"."Proba_8" > 0.0) THEN ln("DT_Output_5"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_5"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_5"."Proba_9" IS NULL OR "DT_Output_5"."Proba_9" > 0.0) THEN ln("DT_Output_5"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10) AS "Proba_9" 
FROM "DT_Output_5"), 
"DT_node_lookup_6" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_30 <= -1.555469036102295) THEN 1 ELSE 2 END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_6" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Proba_0" AS "Proba_0", "Values"."LogProba_0" AS "LogProba_0", "Values"."Proba_1" AS "Proba_1", "Values"."LogProba_1" AS "LogProba_1", "Values"."Proba_2" AS "Proba_2", "Values"."LogProba_2" AS "LogProba_2", "Values"."Proba_3" AS "Proba_3", "Values"."LogProba_3" AS "LogProba_3", "Values"."Proba_4" AS "Proba_4", "Values"."LogProba_4" AS "LogProba_4", "Values"."Proba_5" AS "Proba_5", "Values"."LogProba_5" AS "LogProba_5", "Values"."Proba_6" AS "Proba_6", "Values"."LogProba_6" AS "LogProba_6", "Values"."Proba_7" AS "Proba_7", "Values"."LogProba_7" AS "LogProba_7", "Values"."Proba_8" AS "Proba_8", "Values"."LogProba_8" AS "LogProba_8", "Values"."Proba_9" AS "Proba_9", "Values"."LogProba_9" AS "LogProba_9", "Values"."Decision" AS "Decision", "Values"."DecisionProba" AS "DecisionProba" 
FROM (SELECT 1 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 246 AS count, 1 AS depth, 0 AS parent_id, 0.9911204327968381 AS "Proba_0", -0.00891922550024 AS "LogProba_0", 0.0011099890029119264 AS "Proba_1", -6.80340517099 AS "LogProba_1", 0.0011097623106321544 AS "Proba_2", -6.80360942115 AS "LogProba_2", 0.001109992030742763 AS "Proba_3", -6.80340244319 AS "LogProba_3", 0.00110985950088987 AS "Proba_4", -6.80352184744 AS "LogProba_4", 0.0011099915753984464 AS "Proba_5", -6.80340285342 AS "LogProba_5", 0.0011099917489321197 AS "Proba_6", -6.80340269708 AS "LogProba_6", 0.0011099890029119257 AS "Proba_7", -6.80340517099 AS "LogProba_7", 0.0 AS "Proba_8", -BINARY_FLOAT_INFINITY AS "LogProba_8", 0.0011099920307426593 AS "Proba_9", -6.80340244319 AS "LogProba_9", 0 AS "Decision", 0.991120432797 AS "DecisionProba" FROM DUAL UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1191 AS count, 1 AS depth, 0 AS parent_id, 1.991519365655419e-08 AS "Proba_0", -17.7317828962 AS "LogProba_0", 0.11109724899436066 AS "Proba_1", -2.19734934417 AS "LogProba_1", 0.11109729434856758 AS "Proba_2", -2.19734893593 AS "LogProba_2", 0.11109726856977617 AS "Proba_3", -2.19734916797 AS "LogProba_3", 0.11109728344204602 AS "Proba_4", -2.1973490341 AS "LogProba_4", 0.1110972686208745 AS "Proba_5", -2.19734916751 AS "LogProba_5", 0.11109726860140084 AS "Proba_6", -2.19734916768 AS "LogProba_6", 0.11109724899436073 AS "Proba_7", -2.19734934417 AS "LogProba_7", 0.11122182994364334 AS "Proba_8", -2.19622860399 AS "LogProba_8", 0.11109726856977663 AS "Proba_9", -2.19734916797 AS "LogProba_9", 8 AS "Decision", 0.111221829944 AS "DecisionProba" FROM DUAL) "Values"), 
"DT_Output_6" AS 
(SELECT "DT_node_lookup_6"."KEY" AS "KEY", "DT_node_lookup_6".node_id_2 AS node_id_2, "DT_node_data_6".node_id AS node_id, "DT_node_data_6".feature AS feature, "DT_node_data_6".threshold AS threshold, "DT_node_data_6".count AS count, "DT_node_data_6".depth AS depth, "DT_node_data_6".parent_id AS parent_id, "DT_node_data_6"."Proba_0" AS "Proba_0", "DT_node_data_6"."LogProba_0" AS "LogProba_0", "DT_node_data_6"."Proba_1" AS "Proba_1", "DT_node_data_6"."LogProba_1" AS "LogProba_1", "DT_node_data_6"."Proba_2" AS "Proba_2", "DT_node_data_6"."LogProba_2" AS "LogProba_2", "DT_node_data_6"."Proba_3" AS "Proba_3", "DT_node_data_6"."LogProba_3" AS "LogProba_3", "DT_node_data_6"."Proba_4" AS "Proba_4", "DT_node_data_6"."LogProba_4" AS "LogProba_4", "DT_node_data_6"."Proba_5" AS "Proba_5", "DT_node_data_6"."LogProba_5" AS "LogProba_5", "DT_node_data_6"."Proba_6" AS "Proba_6", "DT_node_data_6"."LogProba_6" AS "LogProba_6", "DT_node_data_6"."Proba_7" AS "Proba_7", "DT_node_data_6"."LogProba_7" AS "LogProba_7", "DT_node_data_6"."Proba_8" AS "Proba_8", "DT_node_data_6"."LogProba_8" AS "LogProba_8", "DT_node_data_6"."Proba_9" AS "Proba_9", "DT_node_data_6"."LogProba_9" AS "LogProba_9", "DT_node_data_6"."Decision" AS "Decision", "DT_node_data_6"."DecisionProba" AS "DecisionProba" 
FROM "DT_node_lookup_6" LEFT OUTER JOIN "DT_node_data_6" ON "DT_node_lookup_6".node_id_2 = "DT_node_data_6".node_id), 
"AdaBoost_Estim_6" AS 
(SELECT "DT_Output_6"."KEY" AS "KEY", (9.0 * (CASE WHEN ("DT_Output_6"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_6"."Proba_0" IS NULL OR "DT_Output_6"."Proba_0" > 0.0) THEN ln("DT_Output_6"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_6"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_6"."Proba_0" IS NULL OR "DT_Output_6"."Proba_0" > 0.0) THEN ln("DT_Output_6"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_6"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_6"."Proba_1" IS NULL OR "DT_Output_6"."Proba_1" > 0.0) THEN ln("DT_Output_6"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_6"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_6"."Proba_2" IS NULL OR "DT_Output_6"."Proba_2" > 0.0) THEN ln("DT_Output_6"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_6"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_6"."Proba_3" IS NULL OR "DT_Output_6"."Proba_3" > 0.0) THEN ln("DT_Output_6"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_6"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_6"."Proba_4" IS NULL OR "DT_Output_6"."Proba_4" > 0.0) THEN ln("DT_Output_6"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_6"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_6"."Proba_5" IS NULL OR "DT_Output_6"."Proba_5" > 0.0) THEN ln("DT_Output_6"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_6"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_6"."Proba_6" IS NULL OR "DT_Output_6"."Proba_6" > 0.0) THEN ln("DT_Output_6"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_6"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_6"."Proba_7" IS NULL OR "DT_Output_6"."Proba_7" > 0.0) THEN ln("DT_Output_6"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_6"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_6"."Proba_8" IS NULL OR "DT_Output_6"."Proba_8" > 0.0) THEN ln("DT_Output_6"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_6"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_6"."Proba_9" IS NULL OR "DT_Output_6"."Proba_9" > 0.0) THEN ln("DT_Output_6"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10)) / 32.0 AS "Score_0", 9.0 * (CASE WHEN ("DT_Output_6"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_6"."Proba_0" IS NULL OR "DT_Output_6"."Proba_0" > 0.0) THEN ln("DT_Output_6"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_6"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_6"."Proba_0" IS NULL OR "DT_Output_6"."Proba_0" > 0.0) THEN ln("DT_Output_6"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_6"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_6"."Proba_1" IS NULL OR "DT_Output_6"."Proba_1" > 0.0) THEN ln("DT_Output_6"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_6"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_6"."Proba_2" IS NULL OR "DT_Output_6"."Proba_2" > 0.0) THEN ln("DT_Output_6"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_6"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_6"."Proba_3" IS NULL OR "DT_Output_6"."Proba_3" > 0.0) THEN ln("DT_Output_6"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_6"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_6"."Proba_4" IS NULL OR "DT_Output_6"."Proba_4" > 0.0) THEN ln("DT_Output_6"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_6"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_6"."Proba_5" IS NULL OR "DT_Output_6"."Proba_5" > 0.0) THEN ln("DT_Output_6"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_6"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_6"."Proba_6" IS NULL OR "DT_Output_6"."Proba_6" > 0.0) THEN ln("DT_Output_6"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_6"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_6"."Proba_7" IS NULL OR "DT_Output_6"."Proba_7" > 0.0) THEN ln("DT_Output_6"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_6"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_6"."Proba_8" IS NULL OR "DT_Output_6"."Proba_8" > 0.0) THEN ln("DT_Output_6"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_6"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_6"."Proba_9" IS NULL OR "DT_Output_6"."Proba_9" > 0.0) THEN ln("DT_Output_6"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10) AS "Proba_0", (9.0 * (CASE WHEN ("DT_Output_6"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_6"."Proba_1" IS NULL OR "DT_Output_6"."Proba_1" > 0.0) THEN ln("DT_Output_6"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_6"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_6"."Proba_0" IS NULL OR "DT_Output_6"."Proba_0" > 0.0) THEN ln("DT_Output_6"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_6"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_6"."Proba_1" IS NULL OR "DT_Output_6"."Proba_1" > 0.0) THEN ln("DT_Output_6"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_6"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_6"."Proba_2" IS NULL OR "DT_Output_6"."Proba_2" > 0.0) THEN ln("DT_Output_6"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_6"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_6"."Proba_3" IS NULL OR "DT_Output_6"."Proba_3" > 0.0) THEN ln("DT_Output_6"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_6"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_6"."Proba_4" IS NULL OR "DT_Output_6"."Proba_4" > 0.0) THEN ln("DT_Output_6"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_6"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_6"."Proba_5" IS NULL OR "DT_Output_6"."Proba_5" > 0.0) THEN ln("DT_Output_6"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_6"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_6"."Proba_6" IS NULL OR "DT_Output_6"."Proba_6" > 0.0) THEN ln("DT_Output_6"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_6"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_6"."Proba_7" IS NULL OR "DT_Output_6"."Proba_7" > 0.0) THEN ln("DT_Output_6"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_6"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_6"."Proba_8" IS NULL OR "DT_Output_6"."Proba_8" > 0.0) THEN ln("DT_Output_6"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_6"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_6"."Proba_9" IS NULL OR "DT_Output_6"."Proba_9" > 0.0) THEN ln("DT_Output_6"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10)) / 32.0 AS "Score_1", 9.0 * (CASE WHEN ("DT_Output_6"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_6"."Proba_1" IS NULL OR "DT_Output_6"."Proba_1" > 0.0) THEN ln("DT_Output_6"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_6"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_6"."Proba_0" IS NULL OR "DT_Output_6"."Proba_0" > 0.0) THEN ln("DT_Output_6"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_6"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_6"."Proba_1" IS NULL OR "DT_Output_6"."Proba_1" > 0.0) THEN ln("DT_Output_6"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_6"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_6"."Proba_2" IS NULL OR "DT_Output_6"."Proba_2" > 0.0) THEN ln("DT_Output_6"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_6"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_6"."Proba_3" IS NULL OR "DT_Output_6"."Proba_3" > 0.0) THEN ln("DT_Output_6"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_6"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_6"."Proba_4" IS NULL OR "DT_Output_6"."Proba_4" > 0.0) THEN ln("DT_Output_6"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_6"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_6"."Proba_5" IS NULL OR "DT_Output_6"."Proba_5" > 0.0) THEN ln("DT_Output_6"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_6"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_6"."Proba_6" IS NULL OR "DT_Output_6"."Proba_6" > 0.0) THEN ln("DT_Output_6"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_6"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_6"."Proba_7" IS NULL OR "DT_Output_6"."Proba_7" > 0.0) THEN ln("DT_Output_6"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_6"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_6"."Proba_8" IS NULL OR "DT_Output_6"."Proba_8" > 0.0) THEN ln("DT_Output_6"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_6"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_6"."Proba_9" IS NULL OR "DT_Output_6"."Proba_9" > 0.0) THEN ln("DT_Output_6"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10) AS "Proba_1", (9.0 * (CASE WHEN ("DT_Output_6"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_6"."Proba_2" IS NULL OR "DT_Output_6"."Proba_2" > 0.0) THEN ln("DT_Output_6"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_6"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_6"."Proba_0" IS NULL OR "DT_Output_6"."Proba_0" > 0.0) THEN ln("DT_Output_6"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_6"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_6"."Proba_1" IS NULL OR "DT_Output_6"."Proba_1" > 0.0) THEN ln("DT_Output_6"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_6"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_6"."Proba_2" IS NULL OR "DT_Output_6"."Proba_2" > 0.0) THEN ln("DT_Output_6"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_6"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_6"."Proba_3" IS NULL OR "DT_Output_6"."Proba_3" > 0.0) THEN ln("DT_Output_6"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_6"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_6"."Proba_4" IS NULL OR "DT_Output_6"."Proba_4" > 0.0) THEN ln("DT_Output_6"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_6"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_6"."Proba_5" IS NULL OR "DT_Output_6"."Proba_5" > 0.0) THEN ln("DT_Output_6"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_6"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_6"."Proba_6" IS NULL OR "DT_Output_6"."Proba_6" > 0.0) THEN ln("DT_Output_6"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_6"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_6"."Proba_7" IS NULL OR "DT_Output_6"."Proba_7" > 0.0) THEN ln("DT_Output_6"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_6"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_6"."Proba_8" IS NULL OR "DT_Output_6"."Proba_8" > 0.0) THEN ln("DT_Output_6"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_6"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_6"."Proba_9" IS NULL OR "DT_Output_6"."Proba_9" > 0.0) THEN ln("DT_Output_6"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10)) / 32.0 AS "Score_2", 9.0 * (CASE WHEN ("DT_Output_6"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_6"."Proba_2" IS NULL OR "DT_Output_6"."Proba_2" > 0.0) THEN ln("DT_Output_6"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_6"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_6"."Proba_0" IS NULL OR "DT_Output_6"."Proba_0" > 0.0) THEN ln("DT_Output_6"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_6"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_6"."Proba_1" IS NULL OR "DT_Output_6"."Proba_1" > 0.0) THEN ln("DT_Output_6"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_6"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_6"."Proba_2" IS NULL OR "DT_Output_6"."Proba_2" > 0.0) THEN ln("DT_Output_6"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_6"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_6"."Proba_3" IS NULL OR "DT_Output_6"."Proba_3" > 0.0) THEN ln("DT_Output_6"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_6"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_6"."Proba_4" IS NULL OR "DT_Output_6"."Proba_4" > 0.0) THEN ln("DT_Output_6"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_6"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_6"."Proba_5" IS NULL OR "DT_Output_6"."Proba_5" > 0.0) THEN ln("DT_Output_6"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_6"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_6"."Proba_6" IS NULL OR "DT_Output_6"."Proba_6" > 0.0) THEN ln("DT_Output_6"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_6"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_6"."Proba_7" IS NULL OR "DT_Output_6"."Proba_7" > 0.0) THEN ln("DT_Output_6"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_6"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_6"."Proba_8" IS NULL OR "DT_Output_6"."Proba_8" > 0.0) THEN ln("DT_Output_6"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_6"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_6"."Proba_9" IS NULL OR "DT_Output_6"."Proba_9" > 0.0) THEN ln("DT_Output_6"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10) AS "Proba_2", (9.0 * (CASE WHEN ("DT_Output_6"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_6"."Proba_3" IS NULL OR "DT_Output_6"."Proba_3" > 0.0) THEN ln("DT_Output_6"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_6"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_6"."Proba_0" IS NULL OR "DT_Output_6"."Proba_0" > 0.0) THEN ln("DT_Output_6"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_6"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_6"."Proba_1" IS NULL OR "DT_Output_6"."Proba_1" > 0.0) THEN ln("DT_Output_6"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_6"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_6"."Proba_2" IS NULL OR "DT_Output_6"."Proba_2" > 0.0) THEN ln("DT_Output_6"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_6"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_6"."Proba_3" IS NULL OR "DT_Output_6"."Proba_3" > 0.0) THEN ln("DT_Output_6"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_6"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_6"."Proba_4" IS NULL OR "DT_Output_6"."Proba_4" > 0.0) THEN ln("DT_Output_6"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_6"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_6"."Proba_5" IS NULL OR "DT_Output_6"."Proba_5" > 0.0) THEN ln("DT_Output_6"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_6"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_6"."Proba_6" IS NULL OR "DT_Output_6"."Proba_6" > 0.0) THEN ln("DT_Output_6"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_6"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_6"."Proba_7" IS NULL OR "DT_Output_6"."Proba_7" > 0.0) THEN ln("DT_Output_6"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_6"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_6"."Proba_8" IS NULL OR "DT_Output_6"."Proba_8" > 0.0) THEN ln("DT_Output_6"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_6"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_6"."Proba_9" IS NULL OR "DT_Output_6"."Proba_9" > 0.0) THEN ln("DT_Output_6"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10)) / 32.0 AS "Score_3", 9.0 * (CASE WHEN ("DT_Output_6"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_6"."Proba_3" IS NULL OR "DT_Output_6"."Proba_3" > 0.0) THEN ln("DT_Output_6"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_6"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_6"."Proba_0" IS NULL OR "DT_Output_6"."Proba_0" > 0.0) THEN ln("DT_Output_6"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_6"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_6"."Proba_1" IS NULL OR "DT_Output_6"."Proba_1" > 0.0) THEN ln("DT_Output_6"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_6"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_6"."Proba_2" IS NULL OR "DT_Output_6"."Proba_2" > 0.0) THEN ln("DT_Output_6"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_6"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_6"."Proba_3" IS NULL OR "DT_Output_6"."Proba_3" > 0.0) THEN ln("DT_Output_6"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_6"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_6"."Proba_4" IS NULL OR "DT_Output_6"."Proba_4" > 0.0) THEN ln("DT_Output_6"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_6"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_6"."Proba_5" IS NULL OR "DT_Output_6"."Proba_5" > 0.0) THEN ln("DT_Output_6"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_6"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_6"."Proba_6" IS NULL OR "DT_Output_6"."Proba_6" > 0.0) THEN ln("DT_Output_6"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_6"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_6"."Proba_7" IS NULL OR "DT_Output_6"."Proba_7" > 0.0) THEN ln("DT_Output_6"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_6"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_6"."Proba_8" IS NULL OR "DT_Output_6"."Proba_8" > 0.0) THEN ln("DT_Output_6"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_6"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_6"."Proba_9" IS NULL OR "DT_Output_6"."Proba_9" > 0.0) THEN ln("DT_Output_6"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10) AS "Proba_3", (9.0 * (CASE WHEN ("DT_Output_6"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_6"."Proba_4" IS NULL OR "DT_Output_6"."Proba_4" > 0.0) THEN ln("DT_Output_6"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_6"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_6"."Proba_0" IS NULL OR "DT_Output_6"."Proba_0" > 0.0) THEN ln("DT_Output_6"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_6"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_6"."Proba_1" IS NULL OR "DT_Output_6"."Proba_1" > 0.0) THEN ln("DT_Output_6"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_6"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_6"."Proba_2" IS NULL OR "DT_Output_6"."Proba_2" > 0.0) THEN ln("DT_Output_6"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_6"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_6"."Proba_3" IS NULL OR "DT_Output_6"."Proba_3" > 0.0) THEN ln("DT_Output_6"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_6"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_6"."Proba_4" IS NULL OR "DT_Output_6"."Proba_4" > 0.0) THEN ln("DT_Output_6"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_6"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_6"."Proba_5" IS NULL OR "DT_Output_6"."Proba_5" > 0.0) THEN ln("DT_Output_6"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_6"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_6"."Proba_6" IS NULL OR "DT_Output_6"."Proba_6" > 0.0) THEN ln("DT_Output_6"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_6"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_6"."Proba_7" IS NULL OR "DT_Output_6"."Proba_7" > 0.0) THEN ln("DT_Output_6"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_6"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_6"."Proba_8" IS NULL OR "DT_Output_6"."Proba_8" > 0.0) THEN ln("DT_Output_6"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_6"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_6"."Proba_9" IS NULL OR "DT_Output_6"."Proba_9" > 0.0) THEN ln("DT_Output_6"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10)) / 32.0 AS "Score_4", 9.0 * (CASE WHEN ("DT_Output_6"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_6"."Proba_4" IS NULL OR "DT_Output_6"."Proba_4" > 0.0) THEN ln("DT_Output_6"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_6"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_6"."Proba_0" IS NULL OR "DT_Output_6"."Proba_0" > 0.0) THEN ln("DT_Output_6"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_6"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_6"."Proba_1" IS NULL OR "DT_Output_6"."Proba_1" > 0.0) THEN ln("DT_Output_6"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_6"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_6"."Proba_2" IS NULL OR "DT_Output_6"."Proba_2" > 0.0) THEN ln("DT_Output_6"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_6"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_6"."Proba_3" IS NULL OR "DT_Output_6"."Proba_3" > 0.0) THEN ln("DT_Output_6"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_6"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_6"."Proba_4" IS NULL OR "DT_Output_6"."Proba_4" > 0.0) THEN ln("DT_Output_6"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_6"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_6"."Proba_5" IS NULL OR "DT_Output_6"."Proba_5" > 0.0) THEN ln("DT_Output_6"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_6"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_6"."Proba_6" IS NULL OR "DT_Output_6"."Proba_6" > 0.0) THEN ln("DT_Output_6"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_6"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_6"."Proba_7" IS NULL OR "DT_Output_6"."Proba_7" > 0.0) THEN ln("DT_Output_6"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_6"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_6"."Proba_8" IS NULL OR "DT_Output_6"."Proba_8" > 0.0) THEN ln("DT_Output_6"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_6"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_6"."Proba_9" IS NULL OR "DT_Output_6"."Proba_9" > 0.0) THEN ln("DT_Output_6"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10) AS "Proba_4", (9.0 * (CASE WHEN ("DT_Output_6"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_6"."Proba_5" IS NULL OR "DT_Output_6"."Proba_5" > 0.0) THEN ln("DT_Output_6"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_6"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_6"."Proba_0" IS NULL OR "DT_Output_6"."Proba_0" > 0.0) THEN ln("DT_Output_6"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_6"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_6"."Proba_1" IS NULL OR "DT_Output_6"."Proba_1" > 0.0) THEN ln("DT_Output_6"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_6"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_6"."Proba_2" IS NULL OR "DT_Output_6"."Proba_2" > 0.0) THEN ln("DT_Output_6"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_6"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_6"."Proba_3" IS NULL OR "DT_Output_6"."Proba_3" > 0.0) THEN ln("DT_Output_6"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_6"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_6"."Proba_4" IS NULL OR "DT_Output_6"."Proba_4" > 0.0) THEN ln("DT_Output_6"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_6"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_6"."Proba_5" IS NULL OR "DT_Output_6"."Proba_5" > 0.0) THEN ln("DT_Output_6"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_6"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_6"."Proba_6" IS NULL OR "DT_Output_6"."Proba_6" > 0.0) THEN ln("DT_Output_6"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_6"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_6"."Proba_7" IS NULL OR "DT_Output_6"."Proba_7" > 0.0) THEN ln("DT_Output_6"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_6"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_6"."Proba_8" IS NULL OR "DT_Output_6"."Proba_8" > 0.0) THEN ln("DT_Output_6"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_6"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_6"."Proba_9" IS NULL OR "DT_Output_6"."Proba_9" > 0.0) THEN ln("DT_Output_6"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10)) / 32.0 AS "Score_5", 9.0 * (CASE WHEN ("DT_Output_6"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_6"."Proba_5" IS NULL OR "DT_Output_6"."Proba_5" > 0.0) THEN ln("DT_Output_6"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_6"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_6"."Proba_0" IS NULL OR "DT_Output_6"."Proba_0" > 0.0) THEN ln("DT_Output_6"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_6"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_6"."Proba_1" IS NULL OR "DT_Output_6"."Proba_1" > 0.0) THEN ln("DT_Output_6"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_6"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_6"."Proba_2" IS NULL OR "DT_Output_6"."Proba_2" > 0.0) THEN ln("DT_Output_6"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_6"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_6"."Proba_3" IS NULL OR "DT_Output_6"."Proba_3" > 0.0) THEN ln("DT_Output_6"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_6"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_6"."Proba_4" IS NULL OR "DT_Output_6"."Proba_4" > 0.0) THEN ln("DT_Output_6"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_6"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_6"."Proba_5" IS NULL OR "DT_Output_6"."Proba_5" > 0.0) THEN ln("DT_Output_6"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_6"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_6"."Proba_6" IS NULL OR "DT_Output_6"."Proba_6" > 0.0) THEN ln("DT_Output_6"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_6"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_6"."Proba_7" IS NULL OR "DT_Output_6"."Proba_7" > 0.0) THEN ln("DT_Output_6"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_6"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_6"."Proba_8" IS NULL OR "DT_Output_6"."Proba_8" > 0.0) THEN ln("DT_Output_6"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_6"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_6"."Proba_9" IS NULL OR "DT_Output_6"."Proba_9" > 0.0) THEN ln("DT_Output_6"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10) AS "Proba_5", (9.0 * (CASE WHEN ("DT_Output_6"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_6"."Proba_6" IS NULL OR "DT_Output_6"."Proba_6" > 0.0) THEN ln("DT_Output_6"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_6"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_6"."Proba_0" IS NULL OR "DT_Output_6"."Proba_0" > 0.0) THEN ln("DT_Output_6"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_6"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_6"."Proba_1" IS NULL OR "DT_Output_6"."Proba_1" > 0.0) THEN ln("DT_Output_6"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_6"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_6"."Proba_2" IS NULL OR "DT_Output_6"."Proba_2" > 0.0) THEN ln("DT_Output_6"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_6"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_6"."Proba_3" IS NULL OR "DT_Output_6"."Proba_3" > 0.0) THEN ln("DT_Output_6"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_6"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_6"."Proba_4" IS NULL OR "DT_Output_6"."Proba_4" > 0.0) THEN ln("DT_Output_6"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_6"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_6"."Proba_5" IS NULL OR "DT_Output_6"."Proba_5" > 0.0) THEN ln("DT_Output_6"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_6"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_6"."Proba_6" IS NULL OR "DT_Output_6"."Proba_6" > 0.0) THEN ln("DT_Output_6"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_6"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_6"."Proba_7" IS NULL OR "DT_Output_6"."Proba_7" > 0.0) THEN ln("DT_Output_6"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_6"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_6"."Proba_8" IS NULL OR "DT_Output_6"."Proba_8" > 0.0) THEN ln("DT_Output_6"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_6"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_6"."Proba_9" IS NULL OR "DT_Output_6"."Proba_9" > 0.0) THEN ln("DT_Output_6"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10)) / 32.0 AS "Score_6", 9.0 * (CASE WHEN ("DT_Output_6"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_6"."Proba_6" IS NULL OR "DT_Output_6"."Proba_6" > 0.0) THEN ln("DT_Output_6"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_6"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_6"."Proba_0" IS NULL OR "DT_Output_6"."Proba_0" > 0.0) THEN ln("DT_Output_6"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_6"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_6"."Proba_1" IS NULL OR "DT_Output_6"."Proba_1" > 0.0) THEN ln("DT_Output_6"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_6"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_6"."Proba_2" IS NULL OR "DT_Output_6"."Proba_2" > 0.0) THEN ln("DT_Output_6"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_6"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_6"."Proba_3" IS NULL OR "DT_Output_6"."Proba_3" > 0.0) THEN ln("DT_Output_6"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_6"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_6"."Proba_4" IS NULL OR "DT_Output_6"."Proba_4" > 0.0) THEN ln("DT_Output_6"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_6"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_6"."Proba_5" IS NULL OR "DT_Output_6"."Proba_5" > 0.0) THEN ln("DT_Output_6"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_6"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_6"."Proba_6" IS NULL OR "DT_Output_6"."Proba_6" > 0.0) THEN ln("DT_Output_6"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_6"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_6"."Proba_7" IS NULL OR "DT_Output_6"."Proba_7" > 0.0) THEN ln("DT_Output_6"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_6"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_6"."Proba_8" IS NULL OR "DT_Output_6"."Proba_8" > 0.0) THEN ln("DT_Output_6"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_6"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_6"."Proba_9" IS NULL OR "DT_Output_6"."Proba_9" > 0.0) THEN ln("DT_Output_6"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10) AS "Proba_6", (9.0 * (CASE WHEN ("DT_Output_6"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_6"."Proba_7" IS NULL OR "DT_Output_6"."Proba_7" > 0.0) THEN ln("DT_Output_6"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_6"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_6"."Proba_0" IS NULL OR "DT_Output_6"."Proba_0" > 0.0) THEN ln("DT_Output_6"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_6"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_6"."Proba_1" IS NULL OR "DT_Output_6"."Proba_1" > 0.0) THEN ln("DT_Output_6"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_6"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_6"."Proba_2" IS NULL OR "DT_Output_6"."Proba_2" > 0.0) THEN ln("DT_Output_6"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_6"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_6"."Proba_3" IS NULL OR "DT_Output_6"."Proba_3" > 0.0) THEN ln("DT_Output_6"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_6"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_6"."Proba_4" IS NULL OR "DT_Output_6"."Proba_4" > 0.0) THEN ln("DT_Output_6"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_6"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_6"."Proba_5" IS NULL OR "DT_Output_6"."Proba_5" > 0.0) THEN ln("DT_Output_6"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_6"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_6"."Proba_6" IS NULL OR "DT_Output_6"."Proba_6" > 0.0) THEN ln("DT_Output_6"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_6"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_6"."Proba_7" IS NULL OR "DT_Output_6"."Proba_7" > 0.0) THEN ln("DT_Output_6"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_6"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_6"."Proba_8" IS NULL OR "DT_Output_6"."Proba_8" > 0.0) THEN ln("DT_Output_6"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_6"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_6"."Proba_9" IS NULL OR "DT_Output_6"."Proba_9" > 0.0) THEN ln("DT_Output_6"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10)) / 32.0 AS "Score_7", 9.0 * (CASE WHEN ("DT_Output_6"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_6"."Proba_7" IS NULL OR "DT_Output_6"."Proba_7" > 0.0) THEN ln("DT_Output_6"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_6"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_6"."Proba_0" IS NULL OR "DT_Output_6"."Proba_0" > 0.0) THEN ln("DT_Output_6"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_6"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_6"."Proba_1" IS NULL OR "DT_Output_6"."Proba_1" > 0.0) THEN ln("DT_Output_6"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_6"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_6"."Proba_2" IS NULL OR "DT_Output_6"."Proba_2" > 0.0) THEN ln("DT_Output_6"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_6"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_6"."Proba_3" IS NULL OR "DT_Output_6"."Proba_3" > 0.0) THEN ln("DT_Output_6"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_6"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_6"."Proba_4" IS NULL OR "DT_Output_6"."Proba_4" > 0.0) THEN ln("DT_Output_6"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_6"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_6"."Proba_5" IS NULL OR "DT_Output_6"."Proba_5" > 0.0) THEN ln("DT_Output_6"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_6"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_6"."Proba_6" IS NULL OR "DT_Output_6"."Proba_6" > 0.0) THEN ln("DT_Output_6"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_6"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_6"."Proba_7" IS NULL OR "DT_Output_6"."Proba_7" > 0.0) THEN ln("DT_Output_6"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_6"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_6"."Proba_8" IS NULL OR "DT_Output_6"."Proba_8" > 0.0) THEN ln("DT_Output_6"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_6"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_6"."Proba_9" IS NULL OR "DT_Output_6"."Proba_9" > 0.0) THEN ln("DT_Output_6"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10) AS "Proba_7", (9.0 * (CASE WHEN ("DT_Output_6"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_6"."Proba_8" IS NULL OR "DT_Output_6"."Proba_8" > 0.0) THEN ln("DT_Output_6"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_6"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_6"."Proba_0" IS NULL OR "DT_Output_6"."Proba_0" > 0.0) THEN ln("DT_Output_6"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_6"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_6"."Proba_1" IS NULL OR "DT_Output_6"."Proba_1" > 0.0) THEN ln("DT_Output_6"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_6"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_6"."Proba_2" IS NULL OR "DT_Output_6"."Proba_2" > 0.0) THEN ln("DT_Output_6"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_6"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_6"."Proba_3" IS NULL OR "DT_Output_6"."Proba_3" > 0.0) THEN ln("DT_Output_6"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_6"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_6"."Proba_4" IS NULL OR "DT_Output_6"."Proba_4" > 0.0) THEN ln("DT_Output_6"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_6"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_6"."Proba_5" IS NULL OR "DT_Output_6"."Proba_5" > 0.0) THEN ln("DT_Output_6"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_6"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_6"."Proba_6" IS NULL OR "DT_Output_6"."Proba_6" > 0.0) THEN ln("DT_Output_6"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_6"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_6"."Proba_7" IS NULL OR "DT_Output_6"."Proba_7" > 0.0) THEN ln("DT_Output_6"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_6"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_6"."Proba_8" IS NULL OR "DT_Output_6"."Proba_8" > 0.0) THEN ln("DT_Output_6"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_6"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_6"."Proba_9" IS NULL OR "DT_Output_6"."Proba_9" > 0.0) THEN ln("DT_Output_6"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10)) / 32.0 AS "Score_8", 9.0 * (CASE WHEN ("DT_Output_6"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_6"."Proba_8" IS NULL OR "DT_Output_6"."Proba_8" > 0.0) THEN ln("DT_Output_6"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_6"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_6"."Proba_0" IS NULL OR "DT_Output_6"."Proba_0" > 0.0) THEN ln("DT_Output_6"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_6"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_6"."Proba_1" IS NULL OR "DT_Output_6"."Proba_1" > 0.0) THEN ln("DT_Output_6"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_6"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_6"."Proba_2" IS NULL OR "DT_Output_6"."Proba_2" > 0.0) THEN ln("DT_Output_6"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_6"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_6"."Proba_3" IS NULL OR "DT_Output_6"."Proba_3" > 0.0) THEN ln("DT_Output_6"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_6"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_6"."Proba_4" IS NULL OR "DT_Output_6"."Proba_4" > 0.0) THEN ln("DT_Output_6"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_6"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_6"."Proba_5" IS NULL OR "DT_Output_6"."Proba_5" > 0.0) THEN ln("DT_Output_6"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_6"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_6"."Proba_6" IS NULL OR "DT_Output_6"."Proba_6" > 0.0) THEN ln("DT_Output_6"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_6"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_6"."Proba_7" IS NULL OR "DT_Output_6"."Proba_7" > 0.0) THEN ln("DT_Output_6"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_6"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_6"."Proba_8" IS NULL OR "DT_Output_6"."Proba_8" > 0.0) THEN ln("DT_Output_6"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_6"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_6"."Proba_9" IS NULL OR "DT_Output_6"."Proba_9" > 0.0) THEN ln("DT_Output_6"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10) AS "Proba_8", (9.0 * (CASE WHEN ("DT_Output_6"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_6"."Proba_9" IS NULL OR "DT_Output_6"."Proba_9" > 0.0) THEN ln("DT_Output_6"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_6"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_6"."Proba_0" IS NULL OR "DT_Output_6"."Proba_0" > 0.0) THEN ln("DT_Output_6"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_6"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_6"."Proba_1" IS NULL OR "DT_Output_6"."Proba_1" > 0.0) THEN ln("DT_Output_6"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_6"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_6"."Proba_2" IS NULL OR "DT_Output_6"."Proba_2" > 0.0) THEN ln("DT_Output_6"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_6"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_6"."Proba_3" IS NULL OR "DT_Output_6"."Proba_3" > 0.0) THEN ln("DT_Output_6"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_6"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_6"."Proba_4" IS NULL OR "DT_Output_6"."Proba_4" > 0.0) THEN ln("DT_Output_6"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_6"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_6"."Proba_5" IS NULL OR "DT_Output_6"."Proba_5" > 0.0) THEN ln("DT_Output_6"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_6"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_6"."Proba_6" IS NULL OR "DT_Output_6"."Proba_6" > 0.0) THEN ln("DT_Output_6"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_6"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_6"."Proba_7" IS NULL OR "DT_Output_6"."Proba_7" > 0.0) THEN ln("DT_Output_6"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_6"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_6"."Proba_8" IS NULL OR "DT_Output_6"."Proba_8" > 0.0) THEN ln("DT_Output_6"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_6"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_6"."Proba_9" IS NULL OR "DT_Output_6"."Proba_9" > 0.0) THEN ln("DT_Output_6"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10)) / 32.0 AS "Score_9", 9.0 * (CASE WHEN ("DT_Output_6"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_6"."Proba_9" IS NULL OR "DT_Output_6"."Proba_9" > 0.0) THEN ln("DT_Output_6"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_6"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_6"."Proba_0" IS NULL OR "DT_Output_6"."Proba_0" > 0.0) THEN ln("DT_Output_6"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_6"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_6"."Proba_1" IS NULL OR "DT_Output_6"."Proba_1" > 0.0) THEN ln("DT_Output_6"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_6"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_6"."Proba_2" IS NULL OR "DT_Output_6"."Proba_2" > 0.0) THEN ln("DT_Output_6"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_6"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_6"."Proba_3" IS NULL OR "DT_Output_6"."Proba_3" > 0.0) THEN ln("DT_Output_6"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_6"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_6"."Proba_4" IS NULL OR "DT_Output_6"."Proba_4" > 0.0) THEN ln("DT_Output_6"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_6"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_6"."Proba_5" IS NULL OR "DT_Output_6"."Proba_5" > 0.0) THEN ln("DT_Output_6"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_6"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_6"."Proba_6" IS NULL OR "DT_Output_6"."Proba_6" > 0.0) THEN ln("DT_Output_6"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_6"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_6"."Proba_7" IS NULL OR "DT_Output_6"."Proba_7" > 0.0) THEN ln("DT_Output_6"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_6"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_6"."Proba_8" IS NULL OR "DT_Output_6"."Proba_8" > 0.0) THEN ln("DT_Output_6"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_6"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_6"."Proba_9" IS NULL OR "DT_Output_6"."Proba_9" > 0.0) THEN ln("DT_Output_6"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10) AS "Proba_9" 
FROM "DT_Output_6"), 
"DT_node_lookup_7" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_38 <= -1.6508052349090576) THEN 1 ELSE 2 END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_7" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Proba_0" AS "Proba_0", "Values"."LogProba_0" AS "LogProba_0", "Values"."Proba_1" AS "Proba_1", "Values"."LogProba_1" AS "LogProba_1", "Values"."Proba_2" AS "Proba_2", "Values"."LogProba_2" AS "LogProba_2", "Values"."Proba_3" AS "Proba_3", "Values"."LogProba_3" AS "LogProba_3", "Values"."Proba_4" AS "Proba_4", "Values"."LogProba_4" AS "LogProba_4", "Values"."Proba_5" AS "Proba_5", "Values"."LogProba_5" AS "LogProba_5", "Values"."Proba_6" AS "Proba_6", "Values"."LogProba_6" AS "LogProba_6", "Values"."Proba_7" AS "Proba_7", "Values"."LogProba_7" AS "LogProba_7", "Values"."Proba_8" AS "Proba_8", "Values"."LogProba_8" AS "LogProba_8", "Values"."Proba_9" AS "Proba_9", "Values"."LogProba_9" AS "LogProba_9", "Values"."Decision" AS "Decision", "Values"."DecisionProba" AS "DecisionProba" 
FROM (SELECT 1 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 219 AS count, 1 AS depth, 0 AS parent_id, 0.9999987613254807 AS "Proba_0", -1.23867528645e-06 AS "LogProba_0", 0.0 AS "Proba_1", -BINARY_FLOAT_INFINITY AS "LogProba_1", 1.687361699464324e-07 AS "Proba_2", -15.5949294664 AS "LogProba_2", 1.7925885347595692e-07 AS "Proba_3", -15.5344349669 AS "LogProba_3", 1.738708847143929e-07 AS "Proba_4", -15.5649528551 AS "LogProba_4", 1.7924276483247108e-07 AS "Proba_5", -15.5345247218 AS "LogProba_5", 1.7924889778135697e-07 AS "Proba_6", -15.5344905065 AS "LogProba_6", 0.0 AS "Proba_7", -BINARY_FLOAT_INFINITY AS "LogProba_7", 1.7905809496408828e-07 AS "Proba_8", -15.5355555309 AS "LogProba_8", 1.7925885347595673e-07 AS "Proba_9", -15.5344349669 AS "LogProba_9", 0 AS "Decision", 0.999998761325 AS "DecisionProba" FROM DUAL UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1218 AS count, 1 AS depth, 0 AS parent_id, 6.236991892276812e-05 AS "Proba_0", -9.68242746737 AS "LogProba_0", 0.11111112639482627 AS "Proba_1", -2.19722443978 AS "LogProba_1", 0.11111110765686072 AS "Proba_2", -2.19722460842 AS "LogProba_2", 0.11111110648832909 AS "Proba_3", -2.19722461894 AS "LogProba_3", 0.11111110708665639 AS "Proba_4", -2.19722461356 AS "LogProba_4", 0.11111110649011564 AS "Proba_5", -2.19722461893 AS "LogProba_5", 0.11111110648943405 AS "Proba_6", -2.19722461893 AS "LogProba_6", 0.11111112639482623 AS "Proba_7", -2.19722443978 AS "LogProba_7", 0.11104873659169992 AS "Proba_8", -2.19778610564 AS "LogProba_8", 0.11111110648832884 AS "Proba_9", -2.19722461894 AS "LogProba_9", 1 AS "Decision", 0.111111126395 AS "DecisionProba" FROM DUAL) "Values"), 
"DT_Output_7" AS 
(SELECT "DT_node_lookup_7"."KEY" AS "KEY", "DT_node_lookup_7".node_id_2 AS node_id_2, "DT_node_data_7".node_id AS node_id, "DT_node_data_7".feature AS feature, "DT_node_data_7".threshold AS threshold, "DT_node_data_7".count AS count, "DT_node_data_7".depth AS depth, "DT_node_data_7".parent_id AS parent_id, "DT_node_data_7"."Proba_0" AS "Proba_0", "DT_node_data_7"."LogProba_0" AS "LogProba_0", "DT_node_data_7"."Proba_1" AS "Proba_1", "DT_node_data_7"."LogProba_1" AS "LogProba_1", "DT_node_data_7"."Proba_2" AS "Proba_2", "DT_node_data_7"."LogProba_2" AS "LogProba_2", "DT_node_data_7"."Proba_3" AS "Proba_3", "DT_node_data_7"."LogProba_3" AS "LogProba_3", "DT_node_data_7"."Proba_4" AS "Proba_4", "DT_node_data_7"."LogProba_4" AS "LogProba_4", "DT_node_data_7"."Proba_5" AS "Proba_5", "DT_node_data_7"."LogProba_5" AS "LogProba_5", "DT_node_data_7"."Proba_6" AS "Proba_6", "DT_node_data_7"."LogProba_6" AS "LogProba_6", "DT_node_data_7"."Proba_7" AS "Proba_7", "DT_node_data_7"."LogProba_7" AS "LogProba_7", "DT_node_data_7"."Proba_8" AS "Proba_8", "DT_node_data_7"."LogProba_8" AS "LogProba_8", "DT_node_data_7"."Proba_9" AS "Proba_9", "DT_node_data_7"."LogProba_9" AS "LogProba_9", "DT_node_data_7"."Decision" AS "Decision", "DT_node_data_7"."DecisionProba" AS "DecisionProba" 
FROM "DT_node_lookup_7" LEFT OUTER JOIN "DT_node_data_7" ON "DT_node_lookup_7".node_id_2 = "DT_node_data_7".node_id), 
"AdaBoost_Estim_7" AS 
(SELECT "DT_Output_7"."KEY" AS "KEY", (9.0 * (CASE WHEN ("DT_Output_7"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_7"."Proba_0" IS NULL OR "DT_Output_7"."Proba_0" > 0.0) THEN ln("DT_Output_7"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_7"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_7"."Proba_0" IS NULL OR "DT_Output_7"."Proba_0" > 0.0) THEN ln("DT_Output_7"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_7"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_7"."Proba_1" IS NULL OR "DT_Output_7"."Proba_1" > 0.0) THEN ln("DT_Output_7"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_7"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_7"."Proba_2" IS NULL OR "DT_Output_7"."Proba_2" > 0.0) THEN ln("DT_Output_7"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_7"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_7"."Proba_3" IS NULL OR "DT_Output_7"."Proba_3" > 0.0) THEN ln("DT_Output_7"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_7"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_7"."Proba_4" IS NULL OR "DT_Output_7"."Proba_4" > 0.0) THEN ln("DT_Output_7"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_7"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_7"."Proba_5" IS NULL OR "DT_Output_7"."Proba_5" > 0.0) THEN ln("DT_Output_7"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_7"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_7"."Proba_6" IS NULL OR "DT_Output_7"."Proba_6" > 0.0) THEN ln("DT_Output_7"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_7"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_7"."Proba_7" IS NULL OR "DT_Output_7"."Proba_7" > 0.0) THEN ln("DT_Output_7"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_7"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_7"."Proba_8" IS NULL OR "DT_Output_7"."Proba_8" > 0.0) THEN ln("DT_Output_7"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_7"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_7"."Proba_9" IS NULL OR "DT_Output_7"."Proba_9" > 0.0) THEN ln("DT_Output_7"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10)) / 32.0 AS "Score_0", 9.0 * (CASE WHEN ("DT_Output_7"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_7"."Proba_0" IS NULL OR "DT_Output_7"."Proba_0" > 0.0) THEN ln("DT_Output_7"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_7"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_7"."Proba_0" IS NULL OR "DT_Output_7"."Proba_0" > 0.0) THEN ln("DT_Output_7"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_7"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_7"."Proba_1" IS NULL OR "DT_Output_7"."Proba_1" > 0.0) THEN ln("DT_Output_7"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_7"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_7"."Proba_2" IS NULL OR "DT_Output_7"."Proba_2" > 0.0) THEN ln("DT_Output_7"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_7"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_7"."Proba_3" IS NULL OR "DT_Output_7"."Proba_3" > 0.0) THEN ln("DT_Output_7"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_7"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_7"."Proba_4" IS NULL OR "DT_Output_7"."Proba_4" > 0.0) THEN ln("DT_Output_7"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_7"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_7"."Proba_5" IS NULL OR "DT_Output_7"."Proba_5" > 0.0) THEN ln("DT_Output_7"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_7"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_7"."Proba_6" IS NULL OR "DT_Output_7"."Proba_6" > 0.0) THEN ln("DT_Output_7"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_7"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_7"."Proba_7" IS NULL OR "DT_Output_7"."Proba_7" > 0.0) THEN ln("DT_Output_7"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_7"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_7"."Proba_8" IS NULL OR "DT_Output_7"."Proba_8" > 0.0) THEN ln("DT_Output_7"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_7"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_7"."Proba_9" IS NULL OR "DT_Output_7"."Proba_9" > 0.0) THEN ln("DT_Output_7"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10) AS "Proba_0", (9.0 * (CASE WHEN ("DT_Output_7"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_7"."Proba_1" IS NULL OR "DT_Output_7"."Proba_1" > 0.0) THEN ln("DT_Output_7"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_7"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_7"."Proba_0" IS NULL OR "DT_Output_7"."Proba_0" > 0.0) THEN ln("DT_Output_7"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_7"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_7"."Proba_1" IS NULL OR "DT_Output_7"."Proba_1" > 0.0) THEN ln("DT_Output_7"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_7"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_7"."Proba_2" IS NULL OR "DT_Output_7"."Proba_2" > 0.0) THEN ln("DT_Output_7"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_7"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_7"."Proba_3" IS NULL OR "DT_Output_7"."Proba_3" > 0.0) THEN ln("DT_Output_7"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_7"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_7"."Proba_4" IS NULL OR "DT_Output_7"."Proba_4" > 0.0) THEN ln("DT_Output_7"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_7"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_7"."Proba_5" IS NULL OR "DT_Output_7"."Proba_5" > 0.0) THEN ln("DT_Output_7"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_7"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_7"."Proba_6" IS NULL OR "DT_Output_7"."Proba_6" > 0.0) THEN ln("DT_Output_7"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_7"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_7"."Proba_7" IS NULL OR "DT_Output_7"."Proba_7" > 0.0) THEN ln("DT_Output_7"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_7"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_7"."Proba_8" IS NULL OR "DT_Output_7"."Proba_8" > 0.0) THEN ln("DT_Output_7"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_7"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_7"."Proba_9" IS NULL OR "DT_Output_7"."Proba_9" > 0.0) THEN ln("DT_Output_7"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10)) / 32.0 AS "Score_1", 9.0 * (CASE WHEN ("DT_Output_7"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_7"."Proba_1" IS NULL OR "DT_Output_7"."Proba_1" > 0.0) THEN ln("DT_Output_7"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_7"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_7"."Proba_0" IS NULL OR "DT_Output_7"."Proba_0" > 0.0) THEN ln("DT_Output_7"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_7"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_7"."Proba_1" IS NULL OR "DT_Output_7"."Proba_1" > 0.0) THEN ln("DT_Output_7"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_7"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_7"."Proba_2" IS NULL OR "DT_Output_7"."Proba_2" > 0.0) THEN ln("DT_Output_7"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_7"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_7"."Proba_3" IS NULL OR "DT_Output_7"."Proba_3" > 0.0) THEN ln("DT_Output_7"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_7"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_7"."Proba_4" IS NULL OR "DT_Output_7"."Proba_4" > 0.0) THEN ln("DT_Output_7"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_7"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_7"."Proba_5" IS NULL OR "DT_Output_7"."Proba_5" > 0.0) THEN ln("DT_Output_7"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_7"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_7"."Proba_6" IS NULL OR "DT_Output_7"."Proba_6" > 0.0) THEN ln("DT_Output_7"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_7"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_7"."Proba_7" IS NULL OR "DT_Output_7"."Proba_7" > 0.0) THEN ln("DT_Output_7"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_7"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_7"."Proba_8" IS NULL OR "DT_Output_7"."Proba_8" > 0.0) THEN ln("DT_Output_7"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_7"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_7"."Proba_9" IS NULL OR "DT_Output_7"."Proba_9" > 0.0) THEN ln("DT_Output_7"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10) AS "Proba_1", (9.0 * (CASE WHEN ("DT_Output_7"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_7"."Proba_2" IS NULL OR "DT_Output_7"."Proba_2" > 0.0) THEN ln("DT_Output_7"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_7"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_7"."Proba_0" IS NULL OR "DT_Output_7"."Proba_0" > 0.0) THEN ln("DT_Output_7"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_7"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_7"."Proba_1" IS NULL OR "DT_Output_7"."Proba_1" > 0.0) THEN ln("DT_Output_7"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_7"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_7"."Proba_2" IS NULL OR "DT_Output_7"."Proba_2" > 0.0) THEN ln("DT_Output_7"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_7"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_7"."Proba_3" IS NULL OR "DT_Output_7"."Proba_3" > 0.0) THEN ln("DT_Output_7"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_7"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_7"."Proba_4" IS NULL OR "DT_Output_7"."Proba_4" > 0.0) THEN ln("DT_Output_7"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_7"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_7"."Proba_5" IS NULL OR "DT_Output_7"."Proba_5" > 0.0) THEN ln("DT_Output_7"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_7"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_7"."Proba_6" IS NULL OR "DT_Output_7"."Proba_6" > 0.0) THEN ln("DT_Output_7"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_7"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_7"."Proba_7" IS NULL OR "DT_Output_7"."Proba_7" > 0.0) THEN ln("DT_Output_7"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_7"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_7"."Proba_8" IS NULL OR "DT_Output_7"."Proba_8" > 0.0) THEN ln("DT_Output_7"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_7"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_7"."Proba_9" IS NULL OR "DT_Output_7"."Proba_9" > 0.0) THEN ln("DT_Output_7"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10)) / 32.0 AS "Score_2", 9.0 * (CASE WHEN ("DT_Output_7"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_7"."Proba_2" IS NULL OR "DT_Output_7"."Proba_2" > 0.0) THEN ln("DT_Output_7"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_7"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_7"."Proba_0" IS NULL OR "DT_Output_7"."Proba_0" > 0.0) THEN ln("DT_Output_7"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_7"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_7"."Proba_1" IS NULL OR "DT_Output_7"."Proba_1" > 0.0) THEN ln("DT_Output_7"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_7"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_7"."Proba_2" IS NULL OR "DT_Output_7"."Proba_2" > 0.0) THEN ln("DT_Output_7"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_7"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_7"."Proba_3" IS NULL OR "DT_Output_7"."Proba_3" > 0.0) THEN ln("DT_Output_7"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_7"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_7"."Proba_4" IS NULL OR "DT_Output_7"."Proba_4" > 0.0) THEN ln("DT_Output_7"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_7"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_7"."Proba_5" IS NULL OR "DT_Output_7"."Proba_5" > 0.0) THEN ln("DT_Output_7"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_7"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_7"."Proba_6" IS NULL OR "DT_Output_7"."Proba_6" > 0.0) THEN ln("DT_Output_7"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_7"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_7"."Proba_7" IS NULL OR "DT_Output_7"."Proba_7" > 0.0) THEN ln("DT_Output_7"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_7"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_7"."Proba_8" IS NULL OR "DT_Output_7"."Proba_8" > 0.0) THEN ln("DT_Output_7"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_7"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_7"."Proba_9" IS NULL OR "DT_Output_7"."Proba_9" > 0.0) THEN ln("DT_Output_7"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10) AS "Proba_2", (9.0 * (CASE WHEN ("DT_Output_7"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_7"."Proba_3" IS NULL OR "DT_Output_7"."Proba_3" > 0.0) THEN ln("DT_Output_7"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_7"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_7"."Proba_0" IS NULL OR "DT_Output_7"."Proba_0" > 0.0) THEN ln("DT_Output_7"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_7"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_7"."Proba_1" IS NULL OR "DT_Output_7"."Proba_1" > 0.0) THEN ln("DT_Output_7"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_7"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_7"."Proba_2" IS NULL OR "DT_Output_7"."Proba_2" > 0.0) THEN ln("DT_Output_7"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_7"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_7"."Proba_3" IS NULL OR "DT_Output_7"."Proba_3" > 0.0) THEN ln("DT_Output_7"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_7"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_7"."Proba_4" IS NULL OR "DT_Output_7"."Proba_4" > 0.0) THEN ln("DT_Output_7"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_7"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_7"."Proba_5" IS NULL OR "DT_Output_7"."Proba_5" > 0.0) THEN ln("DT_Output_7"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_7"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_7"."Proba_6" IS NULL OR "DT_Output_7"."Proba_6" > 0.0) THEN ln("DT_Output_7"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_7"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_7"."Proba_7" IS NULL OR "DT_Output_7"."Proba_7" > 0.0) THEN ln("DT_Output_7"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_7"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_7"."Proba_8" IS NULL OR "DT_Output_7"."Proba_8" > 0.0) THEN ln("DT_Output_7"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_7"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_7"."Proba_9" IS NULL OR "DT_Output_7"."Proba_9" > 0.0) THEN ln("DT_Output_7"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10)) / 32.0 AS "Score_3", 9.0 * (CASE WHEN ("DT_Output_7"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_7"."Proba_3" IS NULL OR "DT_Output_7"."Proba_3" > 0.0) THEN ln("DT_Output_7"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_7"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_7"."Proba_0" IS NULL OR "DT_Output_7"."Proba_0" > 0.0) THEN ln("DT_Output_7"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_7"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_7"."Proba_1" IS NULL OR "DT_Output_7"."Proba_1" > 0.0) THEN ln("DT_Output_7"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_7"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_7"."Proba_2" IS NULL OR "DT_Output_7"."Proba_2" > 0.0) THEN ln("DT_Output_7"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_7"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_7"."Proba_3" IS NULL OR "DT_Output_7"."Proba_3" > 0.0) THEN ln("DT_Output_7"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_7"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_7"."Proba_4" IS NULL OR "DT_Output_7"."Proba_4" > 0.0) THEN ln("DT_Output_7"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_7"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_7"."Proba_5" IS NULL OR "DT_Output_7"."Proba_5" > 0.0) THEN ln("DT_Output_7"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_7"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_7"."Proba_6" IS NULL OR "DT_Output_7"."Proba_6" > 0.0) THEN ln("DT_Output_7"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_7"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_7"."Proba_7" IS NULL OR "DT_Output_7"."Proba_7" > 0.0) THEN ln("DT_Output_7"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_7"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_7"."Proba_8" IS NULL OR "DT_Output_7"."Proba_8" > 0.0) THEN ln("DT_Output_7"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_7"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_7"."Proba_9" IS NULL OR "DT_Output_7"."Proba_9" > 0.0) THEN ln("DT_Output_7"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10) AS "Proba_3", (9.0 * (CASE WHEN ("DT_Output_7"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_7"."Proba_4" IS NULL OR "DT_Output_7"."Proba_4" > 0.0) THEN ln("DT_Output_7"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_7"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_7"."Proba_0" IS NULL OR "DT_Output_7"."Proba_0" > 0.0) THEN ln("DT_Output_7"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_7"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_7"."Proba_1" IS NULL OR "DT_Output_7"."Proba_1" > 0.0) THEN ln("DT_Output_7"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_7"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_7"."Proba_2" IS NULL OR "DT_Output_7"."Proba_2" > 0.0) THEN ln("DT_Output_7"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_7"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_7"."Proba_3" IS NULL OR "DT_Output_7"."Proba_3" > 0.0) THEN ln("DT_Output_7"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_7"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_7"."Proba_4" IS NULL OR "DT_Output_7"."Proba_4" > 0.0) THEN ln("DT_Output_7"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_7"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_7"."Proba_5" IS NULL OR "DT_Output_7"."Proba_5" > 0.0) THEN ln("DT_Output_7"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_7"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_7"."Proba_6" IS NULL OR "DT_Output_7"."Proba_6" > 0.0) THEN ln("DT_Output_7"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_7"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_7"."Proba_7" IS NULL OR "DT_Output_7"."Proba_7" > 0.0) THEN ln("DT_Output_7"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_7"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_7"."Proba_8" IS NULL OR "DT_Output_7"."Proba_8" > 0.0) THEN ln("DT_Output_7"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_7"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_7"."Proba_9" IS NULL OR "DT_Output_7"."Proba_9" > 0.0) THEN ln("DT_Output_7"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10)) / 32.0 AS "Score_4", 9.0 * (CASE WHEN ("DT_Output_7"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_7"."Proba_4" IS NULL OR "DT_Output_7"."Proba_4" > 0.0) THEN ln("DT_Output_7"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_7"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_7"."Proba_0" IS NULL OR "DT_Output_7"."Proba_0" > 0.0) THEN ln("DT_Output_7"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_7"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_7"."Proba_1" IS NULL OR "DT_Output_7"."Proba_1" > 0.0) THEN ln("DT_Output_7"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_7"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_7"."Proba_2" IS NULL OR "DT_Output_7"."Proba_2" > 0.0) THEN ln("DT_Output_7"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_7"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_7"."Proba_3" IS NULL OR "DT_Output_7"."Proba_3" > 0.0) THEN ln("DT_Output_7"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_7"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_7"."Proba_4" IS NULL OR "DT_Output_7"."Proba_4" > 0.0) THEN ln("DT_Output_7"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_7"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_7"."Proba_5" IS NULL OR "DT_Output_7"."Proba_5" > 0.0) THEN ln("DT_Output_7"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_7"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_7"."Proba_6" IS NULL OR "DT_Output_7"."Proba_6" > 0.0) THEN ln("DT_Output_7"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_7"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_7"."Proba_7" IS NULL OR "DT_Output_7"."Proba_7" > 0.0) THEN ln("DT_Output_7"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_7"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_7"."Proba_8" IS NULL OR "DT_Output_7"."Proba_8" > 0.0) THEN ln("DT_Output_7"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_7"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_7"."Proba_9" IS NULL OR "DT_Output_7"."Proba_9" > 0.0) THEN ln("DT_Output_7"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10) AS "Proba_4", (9.0 * (CASE WHEN ("DT_Output_7"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_7"."Proba_5" IS NULL OR "DT_Output_7"."Proba_5" > 0.0) THEN ln("DT_Output_7"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_7"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_7"."Proba_0" IS NULL OR "DT_Output_7"."Proba_0" > 0.0) THEN ln("DT_Output_7"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_7"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_7"."Proba_1" IS NULL OR "DT_Output_7"."Proba_1" > 0.0) THEN ln("DT_Output_7"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_7"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_7"."Proba_2" IS NULL OR "DT_Output_7"."Proba_2" > 0.0) THEN ln("DT_Output_7"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_7"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_7"."Proba_3" IS NULL OR "DT_Output_7"."Proba_3" > 0.0) THEN ln("DT_Output_7"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_7"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_7"."Proba_4" IS NULL OR "DT_Output_7"."Proba_4" > 0.0) THEN ln("DT_Output_7"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_7"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_7"."Proba_5" IS NULL OR "DT_Output_7"."Proba_5" > 0.0) THEN ln("DT_Output_7"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_7"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_7"."Proba_6" IS NULL OR "DT_Output_7"."Proba_6" > 0.0) THEN ln("DT_Output_7"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_7"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_7"."Proba_7" IS NULL OR "DT_Output_7"."Proba_7" > 0.0) THEN ln("DT_Output_7"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_7"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_7"."Proba_8" IS NULL OR "DT_Output_7"."Proba_8" > 0.0) THEN ln("DT_Output_7"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_7"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_7"."Proba_9" IS NULL OR "DT_Output_7"."Proba_9" > 0.0) THEN ln("DT_Output_7"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10)) / 32.0 AS "Score_5", 9.0 * (CASE WHEN ("DT_Output_7"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_7"."Proba_5" IS NULL OR "DT_Output_7"."Proba_5" > 0.0) THEN ln("DT_Output_7"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_7"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_7"."Proba_0" IS NULL OR "DT_Output_7"."Proba_0" > 0.0) THEN ln("DT_Output_7"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_7"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_7"."Proba_1" IS NULL OR "DT_Output_7"."Proba_1" > 0.0) THEN ln("DT_Output_7"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_7"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_7"."Proba_2" IS NULL OR "DT_Output_7"."Proba_2" > 0.0) THEN ln("DT_Output_7"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_7"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_7"."Proba_3" IS NULL OR "DT_Output_7"."Proba_3" > 0.0) THEN ln("DT_Output_7"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_7"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_7"."Proba_4" IS NULL OR "DT_Output_7"."Proba_4" > 0.0) THEN ln("DT_Output_7"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_7"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_7"."Proba_5" IS NULL OR "DT_Output_7"."Proba_5" > 0.0) THEN ln("DT_Output_7"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_7"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_7"."Proba_6" IS NULL OR "DT_Output_7"."Proba_6" > 0.0) THEN ln("DT_Output_7"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_7"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_7"."Proba_7" IS NULL OR "DT_Output_7"."Proba_7" > 0.0) THEN ln("DT_Output_7"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_7"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_7"."Proba_8" IS NULL OR "DT_Output_7"."Proba_8" > 0.0) THEN ln("DT_Output_7"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_7"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_7"."Proba_9" IS NULL OR "DT_Output_7"."Proba_9" > 0.0) THEN ln("DT_Output_7"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10) AS "Proba_5", (9.0 * (CASE WHEN ("DT_Output_7"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_7"."Proba_6" IS NULL OR "DT_Output_7"."Proba_6" > 0.0) THEN ln("DT_Output_7"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_7"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_7"."Proba_0" IS NULL OR "DT_Output_7"."Proba_0" > 0.0) THEN ln("DT_Output_7"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_7"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_7"."Proba_1" IS NULL OR "DT_Output_7"."Proba_1" > 0.0) THEN ln("DT_Output_7"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_7"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_7"."Proba_2" IS NULL OR "DT_Output_7"."Proba_2" > 0.0) THEN ln("DT_Output_7"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_7"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_7"."Proba_3" IS NULL OR "DT_Output_7"."Proba_3" > 0.0) THEN ln("DT_Output_7"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_7"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_7"."Proba_4" IS NULL OR "DT_Output_7"."Proba_4" > 0.0) THEN ln("DT_Output_7"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_7"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_7"."Proba_5" IS NULL OR "DT_Output_7"."Proba_5" > 0.0) THEN ln("DT_Output_7"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_7"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_7"."Proba_6" IS NULL OR "DT_Output_7"."Proba_6" > 0.0) THEN ln("DT_Output_7"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_7"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_7"."Proba_7" IS NULL OR "DT_Output_7"."Proba_7" > 0.0) THEN ln("DT_Output_7"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_7"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_7"."Proba_8" IS NULL OR "DT_Output_7"."Proba_8" > 0.0) THEN ln("DT_Output_7"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_7"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_7"."Proba_9" IS NULL OR "DT_Output_7"."Proba_9" > 0.0) THEN ln("DT_Output_7"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10)) / 32.0 AS "Score_6", 9.0 * (CASE WHEN ("DT_Output_7"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_7"."Proba_6" IS NULL OR "DT_Output_7"."Proba_6" > 0.0) THEN ln("DT_Output_7"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_7"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_7"."Proba_0" IS NULL OR "DT_Output_7"."Proba_0" > 0.0) THEN ln("DT_Output_7"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_7"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_7"."Proba_1" IS NULL OR "DT_Output_7"."Proba_1" > 0.0) THEN ln("DT_Output_7"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_7"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_7"."Proba_2" IS NULL OR "DT_Output_7"."Proba_2" > 0.0) THEN ln("DT_Output_7"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_7"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_7"."Proba_3" IS NULL OR "DT_Output_7"."Proba_3" > 0.0) THEN ln("DT_Output_7"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_7"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_7"."Proba_4" IS NULL OR "DT_Output_7"."Proba_4" > 0.0) THEN ln("DT_Output_7"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_7"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_7"."Proba_5" IS NULL OR "DT_Output_7"."Proba_5" > 0.0) THEN ln("DT_Output_7"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_7"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_7"."Proba_6" IS NULL OR "DT_Output_7"."Proba_6" > 0.0) THEN ln("DT_Output_7"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_7"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_7"."Proba_7" IS NULL OR "DT_Output_7"."Proba_7" > 0.0) THEN ln("DT_Output_7"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_7"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_7"."Proba_8" IS NULL OR "DT_Output_7"."Proba_8" > 0.0) THEN ln("DT_Output_7"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_7"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_7"."Proba_9" IS NULL OR "DT_Output_7"."Proba_9" > 0.0) THEN ln("DT_Output_7"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10) AS "Proba_6", (9.0 * (CASE WHEN ("DT_Output_7"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_7"."Proba_7" IS NULL OR "DT_Output_7"."Proba_7" > 0.0) THEN ln("DT_Output_7"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_7"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_7"."Proba_0" IS NULL OR "DT_Output_7"."Proba_0" > 0.0) THEN ln("DT_Output_7"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_7"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_7"."Proba_1" IS NULL OR "DT_Output_7"."Proba_1" > 0.0) THEN ln("DT_Output_7"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_7"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_7"."Proba_2" IS NULL OR "DT_Output_7"."Proba_2" > 0.0) THEN ln("DT_Output_7"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_7"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_7"."Proba_3" IS NULL OR "DT_Output_7"."Proba_3" > 0.0) THEN ln("DT_Output_7"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_7"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_7"."Proba_4" IS NULL OR "DT_Output_7"."Proba_4" > 0.0) THEN ln("DT_Output_7"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_7"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_7"."Proba_5" IS NULL OR "DT_Output_7"."Proba_5" > 0.0) THEN ln("DT_Output_7"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_7"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_7"."Proba_6" IS NULL OR "DT_Output_7"."Proba_6" > 0.0) THEN ln("DT_Output_7"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_7"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_7"."Proba_7" IS NULL OR "DT_Output_7"."Proba_7" > 0.0) THEN ln("DT_Output_7"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_7"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_7"."Proba_8" IS NULL OR "DT_Output_7"."Proba_8" > 0.0) THEN ln("DT_Output_7"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_7"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_7"."Proba_9" IS NULL OR "DT_Output_7"."Proba_9" > 0.0) THEN ln("DT_Output_7"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10)) / 32.0 AS "Score_7", 9.0 * (CASE WHEN ("DT_Output_7"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_7"."Proba_7" IS NULL OR "DT_Output_7"."Proba_7" > 0.0) THEN ln("DT_Output_7"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_7"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_7"."Proba_0" IS NULL OR "DT_Output_7"."Proba_0" > 0.0) THEN ln("DT_Output_7"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_7"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_7"."Proba_1" IS NULL OR "DT_Output_7"."Proba_1" > 0.0) THEN ln("DT_Output_7"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_7"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_7"."Proba_2" IS NULL OR "DT_Output_7"."Proba_2" > 0.0) THEN ln("DT_Output_7"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_7"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_7"."Proba_3" IS NULL OR "DT_Output_7"."Proba_3" > 0.0) THEN ln("DT_Output_7"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_7"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_7"."Proba_4" IS NULL OR "DT_Output_7"."Proba_4" > 0.0) THEN ln("DT_Output_7"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_7"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_7"."Proba_5" IS NULL OR "DT_Output_7"."Proba_5" > 0.0) THEN ln("DT_Output_7"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_7"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_7"."Proba_6" IS NULL OR "DT_Output_7"."Proba_6" > 0.0) THEN ln("DT_Output_7"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_7"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_7"."Proba_7" IS NULL OR "DT_Output_7"."Proba_7" > 0.0) THEN ln("DT_Output_7"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_7"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_7"."Proba_8" IS NULL OR "DT_Output_7"."Proba_8" > 0.0) THEN ln("DT_Output_7"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_7"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_7"."Proba_9" IS NULL OR "DT_Output_7"."Proba_9" > 0.0) THEN ln("DT_Output_7"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10) AS "Proba_7", (9.0 * (CASE WHEN ("DT_Output_7"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_7"."Proba_8" IS NULL OR "DT_Output_7"."Proba_8" > 0.0) THEN ln("DT_Output_7"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_7"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_7"."Proba_0" IS NULL OR "DT_Output_7"."Proba_0" > 0.0) THEN ln("DT_Output_7"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_7"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_7"."Proba_1" IS NULL OR "DT_Output_7"."Proba_1" > 0.0) THEN ln("DT_Output_7"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_7"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_7"."Proba_2" IS NULL OR "DT_Output_7"."Proba_2" > 0.0) THEN ln("DT_Output_7"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_7"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_7"."Proba_3" IS NULL OR "DT_Output_7"."Proba_3" > 0.0) THEN ln("DT_Output_7"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_7"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_7"."Proba_4" IS NULL OR "DT_Output_7"."Proba_4" > 0.0) THEN ln("DT_Output_7"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_7"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_7"."Proba_5" IS NULL OR "DT_Output_7"."Proba_5" > 0.0) THEN ln("DT_Output_7"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_7"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_7"."Proba_6" IS NULL OR "DT_Output_7"."Proba_6" > 0.0) THEN ln("DT_Output_7"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_7"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_7"."Proba_7" IS NULL OR "DT_Output_7"."Proba_7" > 0.0) THEN ln("DT_Output_7"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_7"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_7"."Proba_8" IS NULL OR "DT_Output_7"."Proba_8" > 0.0) THEN ln("DT_Output_7"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_7"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_7"."Proba_9" IS NULL OR "DT_Output_7"."Proba_9" > 0.0) THEN ln("DT_Output_7"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10)) / 32.0 AS "Score_8", 9.0 * (CASE WHEN ("DT_Output_7"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_7"."Proba_8" IS NULL OR "DT_Output_7"."Proba_8" > 0.0) THEN ln("DT_Output_7"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_7"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_7"."Proba_0" IS NULL OR "DT_Output_7"."Proba_0" > 0.0) THEN ln("DT_Output_7"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_7"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_7"."Proba_1" IS NULL OR "DT_Output_7"."Proba_1" > 0.0) THEN ln("DT_Output_7"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_7"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_7"."Proba_2" IS NULL OR "DT_Output_7"."Proba_2" > 0.0) THEN ln("DT_Output_7"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_7"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_7"."Proba_3" IS NULL OR "DT_Output_7"."Proba_3" > 0.0) THEN ln("DT_Output_7"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_7"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_7"."Proba_4" IS NULL OR "DT_Output_7"."Proba_4" > 0.0) THEN ln("DT_Output_7"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_7"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_7"."Proba_5" IS NULL OR "DT_Output_7"."Proba_5" > 0.0) THEN ln("DT_Output_7"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_7"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_7"."Proba_6" IS NULL OR "DT_Output_7"."Proba_6" > 0.0) THEN ln("DT_Output_7"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_7"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_7"."Proba_7" IS NULL OR "DT_Output_7"."Proba_7" > 0.0) THEN ln("DT_Output_7"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_7"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_7"."Proba_8" IS NULL OR "DT_Output_7"."Proba_8" > 0.0) THEN ln("DT_Output_7"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_7"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_7"."Proba_9" IS NULL OR "DT_Output_7"."Proba_9" > 0.0) THEN ln("DT_Output_7"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10) AS "Proba_8", (9.0 * (CASE WHEN ("DT_Output_7"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_7"."Proba_9" IS NULL OR "DT_Output_7"."Proba_9" > 0.0) THEN ln("DT_Output_7"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_7"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_7"."Proba_0" IS NULL OR "DT_Output_7"."Proba_0" > 0.0) THEN ln("DT_Output_7"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_7"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_7"."Proba_1" IS NULL OR "DT_Output_7"."Proba_1" > 0.0) THEN ln("DT_Output_7"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_7"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_7"."Proba_2" IS NULL OR "DT_Output_7"."Proba_2" > 0.0) THEN ln("DT_Output_7"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_7"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_7"."Proba_3" IS NULL OR "DT_Output_7"."Proba_3" > 0.0) THEN ln("DT_Output_7"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_7"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_7"."Proba_4" IS NULL OR "DT_Output_7"."Proba_4" > 0.0) THEN ln("DT_Output_7"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_7"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_7"."Proba_5" IS NULL OR "DT_Output_7"."Proba_5" > 0.0) THEN ln("DT_Output_7"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_7"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_7"."Proba_6" IS NULL OR "DT_Output_7"."Proba_6" > 0.0) THEN ln("DT_Output_7"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_7"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_7"."Proba_7" IS NULL OR "DT_Output_7"."Proba_7" > 0.0) THEN ln("DT_Output_7"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_7"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_7"."Proba_8" IS NULL OR "DT_Output_7"."Proba_8" > 0.0) THEN ln("DT_Output_7"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_7"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_7"."Proba_9" IS NULL OR "DT_Output_7"."Proba_9" > 0.0) THEN ln("DT_Output_7"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10)) / 32.0 AS "Score_9", 9.0 * (CASE WHEN ("DT_Output_7"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_7"."Proba_9" IS NULL OR "DT_Output_7"."Proba_9" > 0.0) THEN ln("DT_Output_7"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_7"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_7"."Proba_0" IS NULL OR "DT_Output_7"."Proba_0" > 0.0) THEN ln("DT_Output_7"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_7"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_7"."Proba_1" IS NULL OR "DT_Output_7"."Proba_1" > 0.0) THEN ln("DT_Output_7"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_7"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_7"."Proba_2" IS NULL OR "DT_Output_7"."Proba_2" > 0.0) THEN ln("DT_Output_7"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_7"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_7"."Proba_3" IS NULL OR "DT_Output_7"."Proba_3" > 0.0) THEN ln("DT_Output_7"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_7"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_7"."Proba_4" IS NULL OR "DT_Output_7"."Proba_4" > 0.0) THEN ln("DT_Output_7"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_7"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_7"."Proba_5" IS NULL OR "DT_Output_7"."Proba_5" > 0.0) THEN ln("DT_Output_7"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_7"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_7"."Proba_6" IS NULL OR "DT_Output_7"."Proba_6" > 0.0) THEN ln("DT_Output_7"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_7"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_7"."Proba_7" IS NULL OR "DT_Output_7"."Proba_7" > 0.0) THEN ln("DT_Output_7"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_7"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_7"."Proba_8" IS NULL OR "DT_Output_7"."Proba_8" > 0.0) THEN ln("DT_Output_7"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_7"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_7"."Proba_9" IS NULL OR "DT_Output_7"."Proba_9" > 0.0) THEN ln("DT_Output_7"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10) AS "Proba_9" 
FROM "DT_Output_7"), 
"DT_node_lookup_8" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_30 <= -1.555469036102295) THEN 1 ELSE 2 END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_8" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Proba_0" AS "Proba_0", "Values"."LogProba_0" AS "LogProba_0", "Values"."Proba_1" AS "Proba_1", "Values"."LogProba_1" AS "LogProba_1", "Values"."Proba_2" AS "Proba_2", "Values"."LogProba_2" AS "LogProba_2", "Values"."Proba_3" AS "Proba_3", "Values"."LogProba_3" AS "LogProba_3", "Values"."Proba_4" AS "Proba_4", "Values"."LogProba_4" AS "LogProba_4", "Values"."Proba_5" AS "Proba_5", "Values"."LogProba_5" AS "LogProba_5", "Values"."Proba_6" AS "Proba_6", "Values"."LogProba_6" AS "LogProba_6", "Values"."Proba_7" AS "Proba_7", "Values"."LogProba_7" AS "LogProba_7", "Values"."Proba_8" AS "Proba_8", "Values"."LogProba_8" AS "LogProba_8", "Values"."Proba_9" AS "Proba_9", "Values"."LogProba_9" AS "LogProba_9", "Values"."Decision" AS "Decision", "Values"."DecisionProba" AS "DecisionProba" 
FROM (SELECT 1 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 246 AS count, 1 AS depth, 0 AS parent_id, 0.9955294546232453 AS "Proba_0", -0.00448056814739 AS "LogProba_0", 0.0005588197454631396 AS "Proba_1", -7.48968359573 AS "LogProba_1", 0.0005588111559508147 AS "Proba_2", -7.48969896666 AS "LogProba_2", 0.0005588198455804367 AS "Proba_3", -7.48968341657 AS "LogProba_3", 0.0005588153693197443 AS "Proba_4", -7.48969142681 AS "LogProba_4", 0.0005588198321360536 AS "Proba_5", -7.48968344063 AS "LogProba_5", 0.0005588198372609675 AS "Proba_6", -7.48968343146 AS "LogProba_6", 0.0005588197454631391 AS "Proba_7", -7.48968359573 AS "LogProba_7", 0.0 AS "Proba_8", -BINARY_FLOAT_INFINITY AS "LogProba_8", 0.0005588198455804377 AS "Proba_9", -7.48968341657 AS "LogProba_9", 0 AS "Decision", 0.995529454623 AS "DecisionProba" FROM DUAL UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1191 AS count, 1 AS depth, 0 AS parent_id, 3.2624992406096054e-09 AS "Proba_0", -19.5407722971 AS "LogProba_0", 0.11110417460558507 AS "Proba_1", -2.19728700783 AS "LogProba_1", 0.11110417882723904 AS "Proba_2", -2.19728696984 AS "LogProba_2", 0.11110417785690452 AS "Proba_3", -2.19728697857 AS "LogProba_3", 0.11110417835675021 AS "Proba_4", -2.19728697407 AS "LogProba_4", 0.11110417785840529 AS "Proba_5", -2.19728697856 AS "LogProba_5", 0.1111041778578339 AS "Proba_6", -2.19728697856 AS "LogProba_6", 0.11110417460558566 AS "Proba_7", -2.19728700783 AS "LogProba_7", 0.1111665789122923 AS "Proba_8", -2.19672549169 AS "LogProba_8", 0.11110417785690477 AS "Proba_9", -2.19728697857 AS "LogProba_9", 8 AS "Decision", 0.111166578912 AS "DecisionProba" FROM DUAL) "Values"), 
"DT_Output_8" AS 
(SELECT "DT_node_lookup_8"."KEY" AS "KEY", "DT_node_lookup_8".node_id_2 AS node_id_2, "DT_node_data_8".node_id AS node_id, "DT_node_data_8".feature AS feature, "DT_node_data_8".threshold AS threshold, "DT_node_data_8".count AS count, "DT_node_data_8".depth AS depth, "DT_node_data_8".parent_id AS parent_id, "DT_node_data_8"."Proba_0" AS "Proba_0", "DT_node_data_8"."LogProba_0" AS "LogProba_0", "DT_node_data_8"."Proba_1" AS "Proba_1", "DT_node_data_8"."LogProba_1" AS "LogProba_1", "DT_node_data_8"."Proba_2" AS "Proba_2", "DT_node_data_8"."LogProba_2" AS "LogProba_2", "DT_node_data_8"."Proba_3" AS "Proba_3", "DT_node_data_8"."LogProba_3" AS "LogProba_3", "DT_node_data_8"."Proba_4" AS "Proba_4", "DT_node_data_8"."LogProba_4" AS "LogProba_4", "DT_node_data_8"."Proba_5" AS "Proba_5", "DT_node_data_8"."LogProba_5" AS "LogProba_5", "DT_node_data_8"."Proba_6" AS "Proba_6", "DT_node_data_8"."LogProba_6" AS "LogProba_6", "DT_node_data_8"."Proba_7" AS "Proba_7", "DT_node_data_8"."LogProba_7" AS "LogProba_7", "DT_node_data_8"."Proba_8" AS "Proba_8", "DT_node_data_8"."LogProba_8" AS "LogProba_8", "DT_node_data_8"."Proba_9" AS "Proba_9", "DT_node_data_8"."LogProba_9" AS "LogProba_9", "DT_node_data_8"."Decision" AS "Decision", "DT_node_data_8"."DecisionProba" AS "DecisionProba" 
FROM "DT_node_lookup_8" LEFT OUTER JOIN "DT_node_data_8" ON "DT_node_lookup_8".node_id_2 = "DT_node_data_8".node_id), 
"AdaBoost_Estim_8" AS 
(SELECT "DT_Output_8"."KEY" AS "KEY", (9.0 * (CASE WHEN ("DT_Output_8"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_8"."Proba_0" IS NULL OR "DT_Output_8"."Proba_0" > 0.0) THEN ln("DT_Output_8"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_8"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_8"."Proba_0" IS NULL OR "DT_Output_8"."Proba_0" > 0.0) THEN ln("DT_Output_8"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_8"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_8"."Proba_1" IS NULL OR "DT_Output_8"."Proba_1" > 0.0) THEN ln("DT_Output_8"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_8"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_8"."Proba_2" IS NULL OR "DT_Output_8"."Proba_2" > 0.0) THEN ln("DT_Output_8"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_8"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_8"."Proba_3" IS NULL OR "DT_Output_8"."Proba_3" > 0.0) THEN ln("DT_Output_8"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_8"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_8"."Proba_4" IS NULL OR "DT_Output_8"."Proba_4" > 0.0) THEN ln("DT_Output_8"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_8"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_8"."Proba_5" IS NULL OR "DT_Output_8"."Proba_5" > 0.0) THEN ln("DT_Output_8"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_8"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_8"."Proba_6" IS NULL OR "DT_Output_8"."Proba_6" > 0.0) THEN ln("DT_Output_8"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_8"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_8"."Proba_7" IS NULL OR "DT_Output_8"."Proba_7" > 0.0) THEN ln("DT_Output_8"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_8"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_8"."Proba_8" IS NULL OR "DT_Output_8"."Proba_8" > 0.0) THEN ln("DT_Output_8"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_8"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_8"."Proba_9" IS NULL OR "DT_Output_8"."Proba_9" > 0.0) THEN ln("DT_Output_8"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10)) / 32.0 AS "Score_0", 9.0 * (CASE WHEN ("DT_Output_8"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_8"."Proba_0" IS NULL OR "DT_Output_8"."Proba_0" > 0.0) THEN ln("DT_Output_8"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_8"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_8"."Proba_0" IS NULL OR "DT_Output_8"."Proba_0" > 0.0) THEN ln("DT_Output_8"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_8"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_8"."Proba_1" IS NULL OR "DT_Output_8"."Proba_1" > 0.0) THEN ln("DT_Output_8"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_8"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_8"."Proba_2" IS NULL OR "DT_Output_8"."Proba_2" > 0.0) THEN ln("DT_Output_8"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_8"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_8"."Proba_3" IS NULL OR "DT_Output_8"."Proba_3" > 0.0) THEN ln("DT_Output_8"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_8"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_8"."Proba_4" IS NULL OR "DT_Output_8"."Proba_4" > 0.0) THEN ln("DT_Output_8"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_8"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_8"."Proba_5" IS NULL OR "DT_Output_8"."Proba_5" > 0.0) THEN ln("DT_Output_8"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_8"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_8"."Proba_6" IS NULL OR "DT_Output_8"."Proba_6" > 0.0) THEN ln("DT_Output_8"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_8"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_8"."Proba_7" IS NULL OR "DT_Output_8"."Proba_7" > 0.0) THEN ln("DT_Output_8"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_8"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_8"."Proba_8" IS NULL OR "DT_Output_8"."Proba_8" > 0.0) THEN ln("DT_Output_8"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_8"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_8"."Proba_9" IS NULL OR "DT_Output_8"."Proba_9" > 0.0) THEN ln("DT_Output_8"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10) AS "Proba_0", (9.0 * (CASE WHEN ("DT_Output_8"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_8"."Proba_1" IS NULL OR "DT_Output_8"."Proba_1" > 0.0) THEN ln("DT_Output_8"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_8"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_8"."Proba_0" IS NULL OR "DT_Output_8"."Proba_0" > 0.0) THEN ln("DT_Output_8"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_8"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_8"."Proba_1" IS NULL OR "DT_Output_8"."Proba_1" > 0.0) THEN ln("DT_Output_8"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_8"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_8"."Proba_2" IS NULL OR "DT_Output_8"."Proba_2" > 0.0) THEN ln("DT_Output_8"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_8"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_8"."Proba_3" IS NULL OR "DT_Output_8"."Proba_3" > 0.0) THEN ln("DT_Output_8"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_8"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_8"."Proba_4" IS NULL OR "DT_Output_8"."Proba_4" > 0.0) THEN ln("DT_Output_8"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_8"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_8"."Proba_5" IS NULL OR "DT_Output_8"."Proba_5" > 0.0) THEN ln("DT_Output_8"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_8"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_8"."Proba_6" IS NULL OR "DT_Output_8"."Proba_6" > 0.0) THEN ln("DT_Output_8"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_8"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_8"."Proba_7" IS NULL OR "DT_Output_8"."Proba_7" > 0.0) THEN ln("DT_Output_8"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_8"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_8"."Proba_8" IS NULL OR "DT_Output_8"."Proba_8" > 0.0) THEN ln("DT_Output_8"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_8"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_8"."Proba_9" IS NULL OR "DT_Output_8"."Proba_9" > 0.0) THEN ln("DT_Output_8"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10)) / 32.0 AS "Score_1", 9.0 * (CASE WHEN ("DT_Output_8"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_8"."Proba_1" IS NULL OR "DT_Output_8"."Proba_1" > 0.0) THEN ln("DT_Output_8"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_8"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_8"."Proba_0" IS NULL OR "DT_Output_8"."Proba_0" > 0.0) THEN ln("DT_Output_8"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_8"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_8"."Proba_1" IS NULL OR "DT_Output_8"."Proba_1" > 0.0) THEN ln("DT_Output_8"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_8"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_8"."Proba_2" IS NULL OR "DT_Output_8"."Proba_2" > 0.0) THEN ln("DT_Output_8"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_8"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_8"."Proba_3" IS NULL OR "DT_Output_8"."Proba_3" > 0.0) THEN ln("DT_Output_8"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_8"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_8"."Proba_4" IS NULL OR "DT_Output_8"."Proba_4" > 0.0) THEN ln("DT_Output_8"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_8"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_8"."Proba_5" IS NULL OR "DT_Output_8"."Proba_5" > 0.0) THEN ln("DT_Output_8"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_8"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_8"."Proba_6" IS NULL OR "DT_Output_8"."Proba_6" > 0.0) THEN ln("DT_Output_8"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_8"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_8"."Proba_7" IS NULL OR "DT_Output_8"."Proba_7" > 0.0) THEN ln("DT_Output_8"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_8"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_8"."Proba_8" IS NULL OR "DT_Output_8"."Proba_8" > 0.0) THEN ln("DT_Output_8"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_8"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_8"."Proba_9" IS NULL OR "DT_Output_8"."Proba_9" > 0.0) THEN ln("DT_Output_8"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10) AS "Proba_1", (9.0 * (CASE WHEN ("DT_Output_8"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_8"."Proba_2" IS NULL OR "DT_Output_8"."Proba_2" > 0.0) THEN ln("DT_Output_8"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_8"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_8"."Proba_0" IS NULL OR "DT_Output_8"."Proba_0" > 0.0) THEN ln("DT_Output_8"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_8"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_8"."Proba_1" IS NULL OR "DT_Output_8"."Proba_1" > 0.0) THEN ln("DT_Output_8"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_8"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_8"."Proba_2" IS NULL OR "DT_Output_8"."Proba_2" > 0.0) THEN ln("DT_Output_8"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_8"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_8"."Proba_3" IS NULL OR "DT_Output_8"."Proba_3" > 0.0) THEN ln("DT_Output_8"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_8"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_8"."Proba_4" IS NULL OR "DT_Output_8"."Proba_4" > 0.0) THEN ln("DT_Output_8"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_8"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_8"."Proba_5" IS NULL OR "DT_Output_8"."Proba_5" > 0.0) THEN ln("DT_Output_8"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_8"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_8"."Proba_6" IS NULL OR "DT_Output_8"."Proba_6" > 0.0) THEN ln("DT_Output_8"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_8"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_8"."Proba_7" IS NULL OR "DT_Output_8"."Proba_7" > 0.0) THEN ln("DT_Output_8"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_8"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_8"."Proba_8" IS NULL OR "DT_Output_8"."Proba_8" > 0.0) THEN ln("DT_Output_8"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_8"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_8"."Proba_9" IS NULL OR "DT_Output_8"."Proba_9" > 0.0) THEN ln("DT_Output_8"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10)) / 32.0 AS "Score_2", 9.0 * (CASE WHEN ("DT_Output_8"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_8"."Proba_2" IS NULL OR "DT_Output_8"."Proba_2" > 0.0) THEN ln("DT_Output_8"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_8"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_8"."Proba_0" IS NULL OR "DT_Output_8"."Proba_0" > 0.0) THEN ln("DT_Output_8"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_8"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_8"."Proba_1" IS NULL OR "DT_Output_8"."Proba_1" > 0.0) THEN ln("DT_Output_8"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_8"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_8"."Proba_2" IS NULL OR "DT_Output_8"."Proba_2" > 0.0) THEN ln("DT_Output_8"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_8"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_8"."Proba_3" IS NULL OR "DT_Output_8"."Proba_3" > 0.0) THEN ln("DT_Output_8"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_8"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_8"."Proba_4" IS NULL OR "DT_Output_8"."Proba_4" > 0.0) THEN ln("DT_Output_8"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_8"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_8"."Proba_5" IS NULL OR "DT_Output_8"."Proba_5" > 0.0) THEN ln("DT_Output_8"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_8"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_8"."Proba_6" IS NULL OR "DT_Output_8"."Proba_6" > 0.0) THEN ln("DT_Output_8"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_8"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_8"."Proba_7" IS NULL OR "DT_Output_8"."Proba_7" > 0.0) THEN ln("DT_Output_8"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_8"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_8"."Proba_8" IS NULL OR "DT_Output_8"."Proba_8" > 0.0) THEN ln("DT_Output_8"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_8"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_8"."Proba_9" IS NULL OR "DT_Output_8"."Proba_9" > 0.0) THEN ln("DT_Output_8"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10) AS "Proba_2", (9.0 * (CASE WHEN ("DT_Output_8"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_8"."Proba_3" IS NULL OR "DT_Output_8"."Proba_3" > 0.0) THEN ln("DT_Output_8"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_8"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_8"."Proba_0" IS NULL OR "DT_Output_8"."Proba_0" > 0.0) THEN ln("DT_Output_8"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_8"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_8"."Proba_1" IS NULL OR "DT_Output_8"."Proba_1" > 0.0) THEN ln("DT_Output_8"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_8"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_8"."Proba_2" IS NULL OR "DT_Output_8"."Proba_2" > 0.0) THEN ln("DT_Output_8"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_8"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_8"."Proba_3" IS NULL OR "DT_Output_8"."Proba_3" > 0.0) THEN ln("DT_Output_8"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_8"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_8"."Proba_4" IS NULL OR "DT_Output_8"."Proba_4" > 0.0) THEN ln("DT_Output_8"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_8"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_8"."Proba_5" IS NULL OR "DT_Output_8"."Proba_5" > 0.0) THEN ln("DT_Output_8"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_8"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_8"."Proba_6" IS NULL OR "DT_Output_8"."Proba_6" > 0.0) THEN ln("DT_Output_8"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_8"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_8"."Proba_7" IS NULL OR "DT_Output_8"."Proba_7" > 0.0) THEN ln("DT_Output_8"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_8"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_8"."Proba_8" IS NULL OR "DT_Output_8"."Proba_8" > 0.0) THEN ln("DT_Output_8"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_8"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_8"."Proba_9" IS NULL OR "DT_Output_8"."Proba_9" > 0.0) THEN ln("DT_Output_8"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10)) / 32.0 AS "Score_3", 9.0 * (CASE WHEN ("DT_Output_8"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_8"."Proba_3" IS NULL OR "DT_Output_8"."Proba_3" > 0.0) THEN ln("DT_Output_8"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_8"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_8"."Proba_0" IS NULL OR "DT_Output_8"."Proba_0" > 0.0) THEN ln("DT_Output_8"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_8"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_8"."Proba_1" IS NULL OR "DT_Output_8"."Proba_1" > 0.0) THEN ln("DT_Output_8"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_8"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_8"."Proba_2" IS NULL OR "DT_Output_8"."Proba_2" > 0.0) THEN ln("DT_Output_8"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_8"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_8"."Proba_3" IS NULL OR "DT_Output_8"."Proba_3" > 0.0) THEN ln("DT_Output_8"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_8"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_8"."Proba_4" IS NULL OR "DT_Output_8"."Proba_4" > 0.0) THEN ln("DT_Output_8"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_8"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_8"."Proba_5" IS NULL OR "DT_Output_8"."Proba_5" > 0.0) THEN ln("DT_Output_8"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_8"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_8"."Proba_6" IS NULL OR "DT_Output_8"."Proba_6" > 0.0) THEN ln("DT_Output_8"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_8"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_8"."Proba_7" IS NULL OR "DT_Output_8"."Proba_7" > 0.0) THEN ln("DT_Output_8"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_8"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_8"."Proba_8" IS NULL OR "DT_Output_8"."Proba_8" > 0.0) THEN ln("DT_Output_8"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_8"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_8"."Proba_9" IS NULL OR "DT_Output_8"."Proba_9" > 0.0) THEN ln("DT_Output_8"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10) AS "Proba_3", (9.0 * (CASE WHEN ("DT_Output_8"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_8"."Proba_4" IS NULL OR "DT_Output_8"."Proba_4" > 0.0) THEN ln("DT_Output_8"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_8"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_8"."Proba_0" IS NULL OR "DT_Output_8"."Proba_0" > 0.0) THEN ln("DT_Output_8"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_8"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_8"."Proba_1" IS NULL OR "DT_Output_8"."Proba_1" > 0.0) THEN ln("DT_Output_8"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_8"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_8"."Proba_2" IS NULL OR "DT_Output_8"."Proba_2" > 0.0) THEN ln("DT_Output_8"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_8"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_8"."Proba_3" IS NULL OR "DT_Output_8"."Proba_3" > 0.0) THEN ln("DT_Output_8"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_8"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_8"."Proba_4" IS NULL OR "DT_Output_8"."Proba_4" > 0.0) THEN ln("DT_Output_8"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_8"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_8"."Proba_5" IS NULL OR "DT_Output_8"."Proba_5" > 0.0) THEN ln("DT_Output_8"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_8"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_8"."Proba_6" IS NULL OR "DT_Output_8"."Proba_6" > 0.0) THEN ln("DT_Output_8"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_8"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_8"."Proba_7" IS NULL OR "DT_Output_8"."Proba_7" > 0.0) THEN ln("DT_Output_8"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_8"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_8"."Proba_8" IS NULL OR "DT_Output_8"."Proba_8" > 0.0) THEN ln("DT_Output_8"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_8"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_8"."Proba_9" IS NULL OR "DT_Output_8"."Proba_9" > 0.0) THEN ln("DT_Output_8"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10)) / 32.0 AS "Score_4", 9.0 * (CASE WHEN ("DT_Output_8"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_8"."Proba_4" IS NULL OR "DT_Output_8"."Proba_4" > 0.0) THEN ln("DT_Output_8"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_8"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_8"."Proba_0" IS NULL OR "DT_Output_8"."Proba_0" > 0.0) THEN ln("DT_Output_8"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_8"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_8"."Proba_1" IS NULL OR "DT_Output_8"."Proba_1" > 0.0) THEN ln("DT_Output_8"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_8"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_8"."Proba_2" IS NULL OR "DT_Output_8"."Proba_2" > 0.0) THEN ln("DT_Output_8"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_8"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_8"."Proba_3" IS NULL OR "DT_Output_8"."Proba_3" > 0.0) THEN ln("DT_Output_8"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_8"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_8"."Proba_4" IS NULL OR "DT_Output_8"."Proba_4" > 0.0) THEN ln("DT_Output_8"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_8"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_8"."Proba_5" IS NULL OR "DT_Output_8"."Proba_5" > 0.0) THEN ln("DT_Output_8"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_8"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_8"."Proba_6" IS NULL OR "DT_Output_8"."Proba_6" > 0.0) THEN ln("DT_Output_8"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_8"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_8"."Proba_7" IS NULL OR "DT_Output_8"."Proba_7" > 0.0) THEN ln("DT_Output_8"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_8"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_8"."Proba_8" IS NULL OR "DT_Output_8"."Proba_8" > 0.0) THEN ln("DT_Output_8"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_8"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_8"."Proba_9" IS NULL OR "DT_Output_8"."Proba_9" > 0.0) THEN ln("DT_Output_8"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10) AS "Proba_4", (9.0 * (CASE WHEN ("DT_Output_8"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_8"."Proba_5" IS NULL OR "DT_Output_8"."Proba_5" > 0.0) THEN ln("DT_Output_8"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_8"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_8"."Proba_0" IS NULL OR "DT_Output_8"."Proba_0" > 0.0) THEN ln("DT_Output_8"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_8"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_8"."Proba_1" IS NULL OR "DT_Output_8"."Proba_1" > 0.0) THEN ln("DT_Output_8"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_8"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_8"."Proba_2" IS NULL OR "DT_Output_8"."Proba_2" > 0.0) THEN ln("DT_Output_8"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_8"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_8"."Proba_3" IS NULL OR "DT_Output_8"."Proba_3" > 0.0) THEN ln("DT_Output_8"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_8"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_8"."Proba_4" IS NULL OR "DT_Output_8"."Proba_4" > 0.0) THEN ln("DT_Output_8"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_8"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_8"."Proba_5" IS NULL OR "DT_Output_8"."Proba_5" > 0.0) THEN ln("DT_Output_8"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_8"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_8"."Proba_6" IS NULL OR "DT_Output_8"."Proba_6" > 0.0) THEN ln("DT_Output_8"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_8"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_8"."Proba_7" IS NULL OR "DT_Output_8"."Proba_7" > 0.0) THEN ln("DT_Output_8"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_8"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_8"."Proba_8" IS NULL OR "DT_Output_8"."Proba_8" > 0.0) THEN ln("DT_Output_8"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_8"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_8"."Proba_9" IS NULL OR "DT_Output_8"."Proba_9" > 0.0) THEN ln("DT_Output_8"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10)) / 32.0 AS "Score_5", 9.0 * (CASE WHEN ("DT_Output_8"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_8"."Proba_5" IS NULL OR "DT_Output_8"."Proba_5" > 0.0) THEN ln("DT_Output_8"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_8"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_8"."Proba_0" IS NULL OR "DT_Output_8"."Proba_0" > 0.0) THEN ln("DT_Output_8"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_8"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_8"."Proba_1" IS NULL OR "DT_Output_8"."Proba_1" > 0.0) THEN ln("DT_Output_8"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_8"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_8"."Proba_2" IS NULL OR "DT_Output_8"."Proba_2" > 0.0) THEN ln("DT_Output_8"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_8"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_8"."Proba_3" IS NULL OR "DT_Output_8"."Proba_3" > 0.0) THEN ln("DT_Output_8"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_8"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_8"."Proba_4" IS NULL OR "DT_Output_8"."Proba_4" > 0.0) THEN ln("DT_Output_8"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_8"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_8"."Proba_5" IS NULL OR "DT_Output_8"."Proba_5" > 0.0) THEN ln("DT_Output_8"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_8"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_8"."Proba_6" IS NULL OR "DT_Output_8"."Proba_6" > 0.0) THEN ln("DT_Output_8"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_8"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_8"."Proba_7" IS NULL OR "DT_Output_8"."Proba_7" > 0.0) THEN ln("DT_Output_8"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_8"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_8"."Proba_8" IS NULL OR "DT_Output_8"."Proba_8" > 0.0) THEN ln("DT_Output_8"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_8"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_8"."Proba_9" IS NULL OR "DT_Output_8"."Proba_9" > 0.0) THEN ln("DT_Output_8"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10) AS "Proba_5", (9.0 * (CASE WHEN ("DT_Output_8"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_8"."Proba_6" IS NULL OR "DT_Output_8"."Proba_6" > 0.0) THEN ln("DT_Output_8"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_8"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_8"."Proba_0" IS NULL OR "DT_Output_8"."Proba_0" > 0.0) THEN ln("DT_Output_8"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_8"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_8"."Proba_1" IS NULL OR "DT_Output_8"."Proba_1" > 0.0) THEN ln("DT_Output_8"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_8"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_8"."Proba_2" IS NULL OR "DT_Output_8"."Proba_2" > 0.0) THEN ln("DT_Output_8"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_8"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_8"."Proba_3" IS NULL OR "DT_Output_8"."Proba_3" > 0.0) THEN ln("DT_Output_8"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_8"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_8"."Proba_4" IS NULL OR "DT_Output_8"."Proba_4" > 0.0) THEN ln("DT_Output_8"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_8"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_8"."Proba_5" IS NULL OR "DT_Output_8"."Proba_5" > 0.0) THEN ln("DT_Output_8"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_8"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_8"."Proba_6" IS NULL OR "DT_Output_8"."Proba_6" > 0.0) THEN ln("DT_Output_8"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_8"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_8"."Proba_7" IS NULL OR "DT_Output_8"."Proba_7" > 0.0) THEN ln("DT_Output_8"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_8"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_8"."Proba_8" IS NULL OR "DT_Output_8"."Proba_8" > 0.0) THEN ln("DT_Output_8"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_8"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_8"."Proba_9" IS NULL OR "DT_Output_8"."Proba_9" > 0.0) THEN ln("DT_Output_8"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10)) / 32.0 AS "Score_6", 9.0 * (CASE WHEN ("DT_Output_8"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_8"."Proba_6" IS NULL OR "DT_Output_8"."Proba_6" > 0.0) THEN ln("DT_Output_8"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_8"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_8"."Proba_0" IS NULL OR "DT_Output_8"."Proba_0" > 0.0) THEN ln("DT_Output_8"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_8"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_8"."Proba_1" IS NULL OR "DT_Output_8"."Proba_1" > 0.0) THEN ln("DT_Output_8"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_8"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_8"."Proba_2" IS NULL OR "DT_Output_8"."Proba_2" > 0.0) THEN ln("DT_Output_8"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_8"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_8"."Proba_3" IS NULL OR "DT_Output_8"."Proba_3" > 0.0) THEN ln("DT_Output_8"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_8"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_8"."Proba_4" IS NULL OR "DT_Output_8"."Proba_4" > 0.0) THEN ln("DT_Output_8"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_8"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_8"."Proba_5" IS NULL OR "DT_Output_8"."Proba_5" > 0.0) THEN ln("DT_Output_8"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_8"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_8"."Proba_6" IS NULL OR "DT_Output_8"."Proba_6" > 0.0) THEN ln("DT_Output_8"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_8"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_8"."Proba_7" IS NULL OR "DT_Output_8"."Proba_7" > 0.0) THEN ln("DT_Output_8"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_8"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_8"."Proba_8" IS NULL OR "DT_Output_8"."Proba_8" > 0.0) THEN ln("DT_Output_8"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_8"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_8"."Proba_9" IS NULL OR "DT_Output_8"."Proba_9" > 0.0) THEN ln("DT_Output_8"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10) AS "Proba_6", (9.0 * (CASE WHEN ("DT_Output_8"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_8"."Proba_7" IS NULL OR "DT_Output_8"."Proba_7" > 0.0) THEN ln("DT_Output_8"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_8"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_8"."Proba_0" IS NULL OR "DT_Output_8"."Proba_0" > 0.0) THEN ln("DT_Output_8"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_8"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_8"."Proba_1" IS NULL OR "DT_Output_8"."Proba_1" > 0.0) THEN ln("DT_Output_8"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_8"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_8"."Proba_2" IS NULL OR "DT_Output_8"."Proba_2" > 0.0) THEN ln("DT_Output_8"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_8"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_8"."Proba_3" IS NULL OR "DT_Output_8"."Proba_3" > 0.0) THEN ln("DT_Output_8"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_8"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_8"."Proba_4" IS NULL OR "DT_Output_8"."Proba_4" > 0.0) THEN ln("DT_Output_8"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_8"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_8"."Proba_5" IS NULL OR "DT_Output_8"."Proba_5" > 0.0) THEN ln("DT_Output_8"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_8"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_8"."Proba_6" IS NULL OR "DT_Output_8"."Proba_6" > 0.0) THEN ln("DT_Output_8"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_8"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_8"."Proba_7" IS NULL OR "DT_Output_8"."Proba_7" > 0.0) THEN ln("DT_Output_8"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_8"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_8"."Proba_8" IS NULL OR "DT_Output_8"."Proba_8" > 0.0) THEN ln("DT_Output_8"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_8"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_8"."Proba_9" IS NULL OR "DT_Output_8"."Proba_9" > 0.0) THEN ln("DT_Output_8"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10)) / 32.0 AS "Score_7", 9.0 * (CASE WHEN ("DT_Output_8"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_8"."Proba_7" IS NULL OR "DT_Output_8"."Proba_7" > 0.0) THEN ln("DT_Output_8"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_8"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_8"."Proba_0" IS NULL OR "DT_Output_8"."Proba_0" > 0.0) THEN ln("DT_Output_8"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_8"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_8"."Proba_1" IS NULL OR "DT_Output_8"."Proba_1" > 0.0) THEN ln("DT_Output_8"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_8"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_8"."Proba_2" IS NULL OR "DT_Output_8"."Proba_2" > 0.0) THEN ln("DT_Output_8"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_8"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_8"."Proba_3" IS NULL OR "DT_Output_8"."Proba_3" > 0.0) THEN ln("DT_Output_8"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_8"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_8"."Proba_4" IS NULL OR "DT_Output_8"."Proba_4" > 0.0) THEN ln("DT_Output_8"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_8"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_8"."Proba_5" IS NULL OR "DT_Output_8"."Proba_5" > 0.0) THEN ln("DT_Output_8"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_8"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_8"."Proba_6" IS NULL OR "DT_Output_8"."Proba_6" > 0.0) THEN ln("DT_Output_8"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_8"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_8"."Proba_7" IS NULL OR "DT_Output_8"."Proba_7" > 0.0) THEN ln("DT_Output_8"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_8"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_8"."Proba_8" IS NULL OR "DT_Output_8"."Proba_8" > 0.0) THEN ln("DT_Output_8"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_8"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_8"."Proba_9" IS NULL OR "DT_Output_8"."Proba_9" > 0.0) THEN ln("DT_Output_8"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10) AS "Proba_7", (9.0 * (CASE WHEN ("DT_Output_8"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_8"."Proba_8" IS NULL OR "DT_Output_8"."Proba_8" > 0.0) THEN ln("DT_Output_8"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_8"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_8"."Proba_0" IS NULL OR "DT_Output_8"."Proba_0" > 0.0) THEN ln("DT_Output_8"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_8"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_8"."Proba_1" IS NULL OR "DT_Output_8"."Proba_1" > 0.0) THEN ln("DT_Output_8"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_8"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_8"."Proba_2" IS NULL OR "DT_Output_8"."Proba_2" > 0.0) THEN ln("DT_Output_8"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_8"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_8"."Proba_3" IS NULL OR "DT_Output_8"."Proba_3" > 0.0) THEN ln("DT_Output_8"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_8"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_8"."Proba_4" IS NULL OR "DT_Output_8"."Proba_4" > 0.0) THEN ln("DT_Output_8"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_8"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_8"."Proba_5" IS NULL OR "DT_Output_8"."Proba_5" > 0.0) THEN ln("DT_Output_8"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_8"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_8"."Proba_6" IS NULL OR "DT_Output_8"."Proba_6" > 0.0) THEN ln("DT_Output_8"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_8"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_8"."Proba_7" IS NULL OR "DT_Output_8"."Proba_7" > 0.0) THEN ln("DT_Output_8"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_8"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_8"."Proba_8" IS NULL OR "DT_Output_8"."Proba_8" > 0.0) THEN ln("DT_Output_8"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_8"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_8"."Proba_9" IS NULL OR "DT_Output_8"."Proba_9" > 0.0) THEN ln("DT_Output_8"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10)) / 32.0 AS "Score_8", 9.0 * (CASE WHEN ("DT_Output_8"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_8"."Proba_8" IS NULL OR "DT_Output_8"."Proba_8" > 0.0) THEN ln("DT_Output_8"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_8"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_8"."Proba_0" IS NULL OR "DT_Output_8"."Proba_0" > 0.0) THEN ln("DT_Output_8"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_8"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_8"."Proba_1" IS NULL OR "DT_Output_8"."Proba_1" > 0.0) THEN ln("DT_Output_8"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_8"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_8"."Proba_2" IS NULL OR "DT_Output_8"."Proba_2" > 0.0) THEN ln("DT_Output_8"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_8"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_8"."Proba_3" IS NULL OR "DT_Output_8"."Proba_3" > 0.0) THEN ln("DT_Output_8"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_8"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_8"."Proba_4" IS NULL OR "DT_Output_8"."Proba_4" > 0.0) THEN ln("DT_Output_8"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_8"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_8"."Proba_5" IS NULL OR "DT_Output_8"."Proba_5" > 0.0) THEN ln("DT_Output_8"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_8"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_8"."Proba_6" IS NULL OR "DT_Output_8"."Proba_6" > 0.0) THEN ln("DT_Output_8"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_8"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_8"."Proba_7" IS NULL OR "DT_Output_8"."Proba_7" > 0.0) THEN ln("DT_Output_8"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_8"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_8"."Proba_8" IS NULL OR "DT_Output_8"."Proba_8" > 0.0) THEN ln("DT_Output_8"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_8"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_8"."Proba_9" IS NULL OR "DT_Output_8"."Proba_9" > 0.0) THEN ln("DT_Output_8"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10) AS "Proba_8", (9.0 * (CASE WHEN ("DT_Output_8"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_8"."Proba_9" IS NULL OR "DT_Output_8"."Proba_9" > 0.0) THEN ln("DT_Output_8"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_8"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_8"."Proba_0" IS NULL OR "DT_Output_8"."Proba_0" > 0.0) THEN ln("DT_Output_8"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_8"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_8"."Proba_1" IS NULL OR "DT_Output_8"."Proba_1" > 0.0) THEN ln("DT_Output_8"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_8"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_8"."Proba_2" IS NULL OR "DT_Output_8"."Proba_2" > 0.0) THEN ln("DT_Output_8"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_8"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_8"."Proba_3" IS NULL OR "DT_Output_8"."Proba_3" > 0.0) THEN ln("DT_Output_8"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_8"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_8"."Proba_4" IS NULL OR "DT_Output_8"."Proba_4" > 0.0) THEN ln("DT_Output_8"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_8"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_8"."Proba_5" IS NULL OR "DT_Output_8"."Proba_5" > 0.0) THEN ln("DT_Output_8"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_8"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_8"."Proba_6" IS NULL OR "DT_Output_8"."Proba_6" > 0.0) THEN ln("DT_Output_8"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_8"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_8"."Proba_7" IS NULL OR "DT_Output_8"."Proba_7" > 0.0) THEN ln("DT_Output_8"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_8"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_8"."Proba_8" IS NULL OR "DT_Output_8"."Proba_8" > 0.0) THEN ln("DT_Output_8"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_8"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_8"."Proba_9" IS NULL OR "DT_Output_8"."Proba_9" > 0.0) THEN ln("DT_Output_8"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10)) / 32.0 AS "Score_9", 9.0 * (CASE WHEN ("DT_Output_8"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_8"."Proba_9" IS NULL OR "DT_Output_8"."Proba_9" > 0.0) THEN ln("DT_Output_8"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_8"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_8"."Proba_0" IS NULL OR "DT_Output_8"."Proba_0" > 0.0) THEN ln("DT_Output_8"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_8"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_8"."Proba_1" IS NULL OR "DT_Output_8"."Proba_1" > 0.0) THEN ln("DT_Output_8"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_8"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_8"."Proba_2" IS NULL OR "DT_Output_8"."Proba_2" > 0.0) THEN ln("DT_Output_8"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_8"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_8"."Proba_3" IS NULL OR "DT_Output_8"."Proba_3" > 0.0) THEN ln("DT_Output_8"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_8"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_8"."Proba_4" IS NULL OR "DT_Output_8"."Proba_4" > 0.0) THEN ln("DT_Output_8"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_8"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_8"."Proba_5" IS NULL OR "DT_Output_8"."Proba_5" > 0.0) THEN ln("DT_Output_8"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_8"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_8"."Proba_6" IS NULL OR "DT_Output_8"."Proba_6" > 0.0) THEN ln("DT_Output_8"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_8"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_8"."Proba_7" IS NULL OR "DT_Output_8"."Proba_7" > 0.0) THEN ln("DT_Output_8"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_8"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_8"."Proba_8" IS NULL OR "DT_Output_8"."Proba_8" > 0.0) THEN ln("DT_Output_8"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_8"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_8"."Proba_9" IS NULL OR "DT_Output_8"."Proba_9" > 0.0) THEN ln("DT_Output_8"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10) AS "Proba_9" 
FROM "DT_Output_8"), 
"DT_node_lookup_9" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_38 <= -1.6508052349090576) THEN 1 ELSE 2 END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_9" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Proba_0" AS "Proba_0", "Values"."LogProba_0" AS "LogProba_0", "Values"."Proba_1" AS "Proba_1", "Values"."LogProba_1" AS "LogProba_1", "Values"."Proba_2" AS "Proba_2", "Values"."LogProba_2" AS "LogProba_2", "Values"."Proba_3" AS "Proba_3", "Values"."LogProba_3" AS "LogProba_3", "Values"."Proba_4" AS "Proba_4", "Values"."LogProba_4" AS "LogProba_4", "Values"."Proba_5" AS "Proba_5", "Values"."LogProba_5" AS "LogProba_5", "Values"."Proba_6" AS "Proba_6", "Values"."LogProba_6" AS "LogProba_6", "Values"."Proba_7" AS "Proba_7", "Values"."LogProba_7" AS "LogProba_7", "Values"."Proba_8" AS "Proba_8", "Values"."LogProba_8" AS "LogProba_8", "Values"."Proba_9" AS "Proba_9", "Values"."LogProba_9" AS "LogProba_9", "Values"."Decision" AS "Decision", "Values"."DecisionProba" AS "DecisionProba" 
FROM (SELECT 1 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 219 AS count, 1 AS depth, 0 AS parent_id, 0.9999997953236903 AS "Proba_0", -2.04676330625e-07 AS "LogProba_0", 0.0 AS "Proba_1", -BINARY_FLOAT_INFINITY AS "LogProba_1", 2.879237100027494e-08 AS "Proba_2", -17.3631553807 AS "LogProba_2", 2.936431946830318e-08 AS "Proba_3", -17.3434855232 AS "LogProba_3", 2.908015646989882e-08 AS "Proba_4", -17.3532098036 AS "LogProba_4", 2.9363496561131934e-08 AS "Proba_5", -17.3435135476 AS "LogProba_5", 2.9363810268769103e-08 AS "Proba_6", -17.3435028641 AS "LogProba_6", 0.0 AS "Proba_7", -BINARY_FLOAT_INFINITY AS "LogProba_7", 2.934783641608098e-08 AS "Proba_8", -17.34404701 AS "LogProba_8", 2.9364319468303112e-08 AS "Proba_9", -17.3434855232 AS "LogProba_9", 0 AS "Decision", 0.999999795324 AS "DecisionProba" FROM DUAL UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1218 AS count, 1 AS depth, 0 AS parent_id, 4.2977254983513205e-05 AS "Proba_0", -10.0548395361 AS "LogProba_0", 0.11111111363700235 AS "Proba_1", -2.1972245546 AS "LogProba_1", 0.11111111043908688 AS "Proba_2", -2.19722458338 AS "LogProba_2", 0.11111111037556134 AS "Proba_3", -2.19722458396 AS "LogProba_3", 0.11111111040712261 AS "Proba_4", -2.19722458367 AS "LogProba_4", 0.11111111037565327 AS "Proba_5", -2.19722458396 AS "LogProba_5", 0.11111111037561797 AS "Proba_6", -2.19722458396 AS "LogProba_6", 0.11111111363700178 AS "Proba_7", -2.1972245546 AS "LogProba_7", 0.11106813312240885 AS "Proba_8", -2.19761145406 AS "LogProba_8", 0.11111111037556141 AS "Proba_9", -2.19722458396 AS "LogProba_9", 1 AS "Decision", 0.111111113637 AS "DecisionProba" FROM DUAL) "Values"), 
"DT_Output_9" AS 
(SELECT "DT_node_lookup_9"."KEY" AS "KEY", "DT_node_lookup_9".node_id_2 AS node_id_2, "DT_node_data_9".node_id AS node_id, "DT_node_data_9".feature AS feature, "DT_node_data_9".threshold AS threshold, "DT_node_data_9".count AS count, "DT_node_data_9".depth AS depth, "DT_node_data_9".parent_id AS parent_id, "DT_node_data_9"."Proba_0" AS "Proba_0", "DT_node_data_9"."LogProba_0" AS "LogProba_0", "DT_node_data_9"."Proba_1" AS "Proba_1", "DT_node_data_9"."LogProba_1" AS "LogProba_1", "DT_node_data_9"."Proba_2" AS "Proba_2", "DT_node_data_9"."LogProba_2" AS "LogProba_2", "DT_node_data_9"."Proba_3" AS "Proba_3", "DT_node_data_9"."LogProba_3" AS "LogProba_3", "DT_node_data_9"."Proba_4" AS "Proba_4", "DT_node_data_9"."LogProba_4" AS "LogProba_4", "DT_node_data_9"."Proba_5" AS "Proba_5", "DT_node_data_9"."LogProba_5" AS "LogProba_5", "DT_node_data_9"."Proba_6" AS "Proba_6", "DT_node_data_9"."LogProba_6" AS "LogProba_6", "DT_node_data_9"."Proba_7" AS "Proba_7", "DT_node_data_9"."LogProba_7" AS "LogProba_7", "DT_node_data_9"."Proba_8" AS "Proba_8", "DT_node_data_9"."LogProba_8" AS "LogProba_8", "DT_node_data_9"."Proba_9" AS "Proba_9", "DT_node_data_9"."LogProba_9" AS "LogProba_9", "DT_node_data_9"."Decision" AS "Decision", "DT_node_data_9"."DecisionProba" AS "DecisionProba" 
FROM "DT_node_lookup_9" LEFT OUTER JOIN "DT_node_data_9" ON "DT_node_lookup_9".node_id_2 = "DT_node_data_9".node_id), 
"AdaBoost_Estim_9" AS 
(SELECT "DT_Output_9"."KEY" AS "KEY", (9.0 * (CASE WHEN ("DT_Output_9"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_9"."Proba_0" IS NULL OR "DT_Output_9"."Proba_0" > 0.0) THEN ln("DT_Output_9"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_9"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_9"."Proba_0" IS NULL OR "DT_Output_9"."Proba_0" > 0.0) THEN ln("DT_Output_9"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_9"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_9"."Proba_1" IS NULL OR "DT_Output_9"."Proba_1" > 0.0) THEN ln("DT_Output_9"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_9"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_9"."Proba_2" IS NULL OR "DT_Output_9"."Proba_2" > 0.0) THEN ln("DT_Output_9"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_9"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_9"."Proba_3" IS NULL OR "DT_Output_9"."Proba_3" > 0.0) THEN ln("DT_Output_9"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_9"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_9"."Proba_4" IS NULL OR "DT_Output_9"."Proba_4" > 0.0) THEN ln("DT_Output_9"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_9"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_9"."Proba_5" IS NULL OR "DT_Output_9"."Proba_5" > 0.0) THEN ln("DT_Output_9"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_9"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_9"."Proba_6" IS NULL OR "DT_Output_9"."Proba_6" > 0.0) THEN ln("DT_Output_9"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_9"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_9"."Proba_7" IS NULL OR "DT_Output_9"."Proba_7" > 0.0) THEN ln("DT_Output_9"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_9"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_9"."Proba_8" IS NULL OR "DT_Output_9"."Proba_8" > 0.0) THEN ln("DT_Output_9"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_9"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_9"."Proba_9" IS NULL OR "DT_Output_9"."Proba_9" > 0.0) THEN ln("DT_Output_9"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10)) / 32.0 AS "Score_0", 9.0 * (CASE WHEN ("DT_Output_9"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_9"."Proba_0" IS NULL OR "DT_Output_9"."Proba_0" > 0.0) THEN ln("DT_Output_9"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_9"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_9"."Proba_0" IS NULL OR "DT_Output_9"."Proba_0" > 0.0) THEN ln("DT_Output_9"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_9"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_9"."Proba_1" IS NULL OR "DT_Output_9"."Proba_1" > 0.0) THEN ln("DT_Output_9"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_9"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_9"."Proba_2" IS NULL OR "DT_Output_9"."Proba_2" > 0.0) THEN ln("DT_Output_9"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_9"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_9"."Proba_3" IS NULL OR "DT_Output_9"."Proba_3" > 0.0) THEN ln("DT_Output_9"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_9"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_9"."Proba_4" IS NULL OR "DT_Output_9"."Proba_4" > 0.0) THEN ln("DT_Output_9"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_9"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_9"."Proba_5" IS NULL OR "DT_Output_9"."Proba_5" > 0.0) THEN ln("DT_Output_9"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_9"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_9"."Proba_6" IS NULL OR "DT_Output_9"."Proba_6" > 0.0) THEN ln("DT_Output_9"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_9"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_9"."Proba_7" IS NULL OR "DT_Output_9"."Proba_7" > 0.0) THEN ln("DT_Output_9"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_9"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_9"."Proba_8" IS NULL OR "DT_Output_9"."Proba_8" > 0.0) THEN ln("DT_Output_9"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_9"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_9"."Proba_9" IS NULL OR "DT_Output_9"."Proba_9" > 0.0) THEN ln("DT_Output_9"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10) AS "Proba_0", (9.0 * (CASE WHEN ("DT_Output_9"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_9"."Proba_1" IS NULL OR "DT_Output_9"."Proba_1" > 0.0) THEN ln("DT_Output_9"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_9"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_9"."Proba_0" IS NULL OR "DT_Output_9"."Proba_0" > 0.0) THEN ln("DT_Output_9"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_9"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_9"."Proba_1" IS NULL OR "DT_Output_9"."Proba_1" > 0.0) THEN ln("DT_Output_9"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_9"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_9"."Proba_2" IS NULL OR "DT_Output_9"."Proba_2" > 0.0) THEN ln("DT_Output_9"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_9"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_9"."Proba_3" IS NULL OR "DT_Output_9"."Proba_3" > 0.0) THEN ln("DT_Output_9"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_9"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_9"."Proba_4" IS NULL OR "DT_Output_9"."Proba_4" > 0.0) THEN ln("DT_Output_9"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_9"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_9"."Proba_5" IS NULL OR "DT_Output_9"."Proba_5" > 0.0) THEN ln("DT_Output_9"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_9"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_9"."Proba_6" IS NULL OR "DT_Output_9"."Proba_6" > 0.0) THEN ln("DT_Output_9"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_9"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_9"."Proba_7" IS NULL OR "DT_Output_9"."Proba_7" > 0.0) THEN ln("DT_Output_9"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_9"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_9"."Proba_8" IS NULL OR "DT_Output_9"."Proba_8" > 0.0) THEN ln("DT_Output_9"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_9"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_9"."Proba_9" IS NULL OR "DT_Output_9"."Proba_9" > 0.0) THEN ln("DT_Output_9"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10)) / 32.0 AS "Score_1", 9.0 * (CASE WHEN ("DT_Output_9"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_9"."Proba_1" IS NULL OR "DT_Output_9"."Proba_1" > 0.0) THEN ln("DT_Output_9"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_9"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_9"."Proba_0" IS NULL OR "DT_Output_9"."Proba_0" > 0.0) THEN ln("DT_Output_9"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_9"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_9"."Proba_1" IS NULL OR "DT_Output_9"."Proba_1" > 0.0) THEN ln("DT_Output_9"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_9"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_9"."Proba_2" IS NULL OR "DT_Output_9"."Proba_2" > 0.0) THEN ln("DT_Output_9"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_9"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_9"."Proba_3" IS NULL OR "DT_Output_9"."Proba_3" > 0.0) THEN ln("DT_Output_9"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_9"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_9"."Proba_4" IS NULL OR "DT_Output_9"."Proba_4" > 0.0) THEN ln("DT_Output_9"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_9"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_9"."Proba_5" IS NULL OR "DT_Output_9"."Proba_5" > 0.0) THEN ln("DT_Output_9"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_9"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_9"."Proba_6" IS NULL OR "DT_Output_9"."Proba_6" > 0.0) THEN ln("DT_Output_9"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_9"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_9"."Proba_7" IS NULL OR "DT_Output_9"."Proba_7" > 0.0) THEN ln("DT_Output_9"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_9"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_9"."Proba_8" IS NULL OR "DT_Output_9"."Proba_8" > 0.0) THEN ln("DT_Output_9"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_9"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_9"."Proba_9" IS NULL OR "DT_Output_9"."Proba_9" > 0.0) THEN ln("DT_Output_9"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10) AS "Proba_1", (9.0 * (CASE WHEN ("DT_Output_9"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_9"."Proba_2" IS NULL OR "DT_Output_9"."Proba_2" > 0.0) THEN ln("DT_Output_9"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_9"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_9"."Proba_0" IS NULL OR "DT_Output_9"."Proba_0" > 0.0) THEN ln("DT_Output_9"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_9"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_9"."Proba_1" IS NULL OR "DT_Output_9"."Proba_1" > 0.0) THEN ln("DT_Output_9"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_9"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_9"."Proba_2" IS NULL OR "DT_Output_9"."Proba_2" > 0.0) THEN ln("DT_Output_9"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_9"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_9"."Proba_3" IS NULL OR "DT_Output_9"."Proba_3" > 0.0) THEN ln("DT_Output_9"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_9"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_9"."Proba_4" IS NULL OR "DT_Output_9"."Proba_4" > 0.0) THEN ln("DT_Output_9"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_9"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_9"."Proba_5" IS NULL OR "DT_Output_9"."Proba_5" > 0.0) THEN ln("DT_Output_9"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_9"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_9"."Proba_6" IS NULL OR "DT_Output_9"."Proba_6" > 0.0) THEN ln("DT_Output_9"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_9"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_9"."Proba_7" IS NULL OR "DT_Output_9"."Proba_7" > 0.0) THEN ln("DT_Output_9"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_9"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_9"."Proba_8" IS NULL OR "DT_Output_9"."Proba_8" > 0.0) THEN ln("DT_Output_9"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_9"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_9"."Proba_9" IS NULL OR "DT_Output_9"."Proba_9" > 0.0) THEN ln("DT_Output_9"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10)) / 32.0 AS "Score_2", 9.0 * (CASE WHEN ("DT_Output_9"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_9"."Proba_2" IS NULL OR "DT_Output_9"."Proba_2" > 0.0) THEN ln("DT_Output_9"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_9"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_9"."Proba_0" IS NULL OR "DT_Output_9"."Proba_0" > 0.0) THEN ln("DT_Output_9"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_9"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_9"."Proba_1" IS NULL OR "DT_Output_9"."Proba_1" > 0.0) THEN ln("DT_Output_9"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_9"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_9"."Proba_2" IS NULL OR "DT_Output_9"."Proba_2" > 0.0) THEN ln("DT_Output_9"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_9"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_9"."Proba_3" IS NULL OR "DT_Output_9"."Proba_3" > 0.0) THEN ln("DT_Output_9"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_9"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_9"."Proba_4" IS NULL OR "DT_Output_9"."Proba_4" > 0.0) THEN ln("DT_Output_9"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_9"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_9"."Proba_5" IS NULL OR "DT_Output_9"."Proba_5" > 0.0) THEN ln("DT_Output_9"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_9"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_9"."Proba_6" IS NULL OR "DT_Output_9"."Proba_6" > 0.0) THEN ln("DT_Output_9"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_9"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_9"."Proba_7" IS NULL OR "DT_Output_9"."Proba_7" > 0.0) THEN ln("DT_Output_9"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_9"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_9"."Proba_8" IS NULL OR "DT_Output_9"."Proba_8" > 0.0) THEN ln("DT_Output_9"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_9"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_9"."Proba_9" IS NULL OR "DT_Output_9"."Proba_9" > 0.0) THEN ln("DT_Output_9"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10) AS "Proba_2", (9.0 * (CASE WHEN ("DT_Output_9"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_9"."Proba_3" IS NULL OR "DT_Output_9"."Proba_3" > 0.0) THEN ln("DT_Output_9"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_9"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_9"."Proba_0" IS NULL OR "DT_Output_9"."Proba_0" > 0.0) THEN ln("DT_Output_9"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_9"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_9"."Proba_1" IS NULL OR "DT_Output_9"."Proba_1" > 0.0) THEN ln("DT_Output_9"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_9"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_9"."Proba_2" IS NULL OR "DT_Output_9"."Proba_2" > 0.0) THEN ln("DT_Output_9"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_9"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_9"."Proba_3" IS NULL OR "DT_Output_9"."Proba_3" > 0.0) THEN ln("DT_Output_9"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_9"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_9"."Proba_4" IS NULL OR "DT_Output_9"."Proba_4" > 0.0) THEN ln("DT_Output_9"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_9"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_9"."Proba_5" IS NULL OR "DT_Output_9"."Proba_5" > 0.0) THEN ln("DT_Output_9"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_9"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_9"."Proba_6" IS NULL OR "DT_Output_9"."Proba_6" > 0.0) THEN ln("DT_Output_9"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_9"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_9"."Proba_7" IS NULL OR "DT_Output_9"."Proba_7" > 0.0) THEN ln("DT_Output_9"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_9"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_9"."Proba_8" IS NULL OR "DT_Output_9"."Proba_8" > 0.0) THEN ln("DT_Output_9"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_9"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_9"."Proba_9" IS NULL OR "DT_Output_9"."Proba_9" > 0.0) THEN ln("DT_Output_9"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10)) / 32.0 AS "Score_3", 9.0 * (CASE WHEN ("DT_Output_9"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_9"."Proba_3" IS NULL OR "DT_Output_9"."Proba_3" > 0.0) THEN ln("DT_Output_9"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_9"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_9"."Proba_0" IS NULL OR "DT_Output_9"."Proba_0" > 0.0) THEN ln("DT_Output_9"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_9"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_9"."Proba_1" IS NULL OR "DT_Output_9"."Proba_1" > 0.0) THEN ln("DT_Output_9"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_9"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_9"."Proba_2" IS NULL OR "DT_Output_9"."Proba_2" > 0.0) THEN ln("DT_Output_9"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_9"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_9"."Proba_3" IS NULL OR "DT_Output_9"."Proba_3" > 0.0) THEN ln("DT_Output_9"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_9"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_9"."Proba_4" IS NULL OR "DT_Output_9"."Proba_4" > 0.0) THEN ln("DT_Output_9"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_9"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_9"."Proba_5" IS NULL OR "DT_Output_9"."Proba_5" > 0.0) THEN ln("DT_Output_9"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_9"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_9"."Proba_6" IS NULL OR "DT_Output_9"."Proba_6" > 0.0) THEN ln("DT_Output_9"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_9"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_9"."Proba_7" IS NULL OR "DT_Output_9"."Proba_7" > 0.0) THEN ln("DT_Output_9"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_9"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_9"."Proba_8" IS NULL OR "DT_Output_9"."Proba_8" > 0.0) THEN ln("DT_Output_9"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_9"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_9"."Proba_9" IS NULL OR "DT_Output_9"."Proba_9" > 0.0) THEN ln("DT_Output_9"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10) AS "Proba_3", (9.0 * (CASE WHEN ("DT_Output_9"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_9"."Proba_4" IS NULL OR "DT_Output_9"."Proba_4" > 0.0) THEN ln("DT_Output_9"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_9"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_9"."Proba_0" IS NULL OR "DT_Output_9"."Proba_0" > 0.0) THEN ln("DT_Output_9"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_9"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_9"."Proba_1" IS NULL OR "DT_Output_9"."Proba_1" > 0.0) THEN ln("DT_Output_9"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_9"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_9"."Proba_2" IS NULL OR "DT_Output_9"."Proba_2" > 0.0) THEN ln("DT_Output_9"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_9"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_9"."Proba_3" IS NULL OR "DT_Output_9"."Proba_3" > 0.0) THEN ln("DT_Output_9"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_9"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_9"."Proba_4" IS NULL OR "DT_Output_9"."Proba_4" > 0.0) THEN ln("DT_Output_9"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_9"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_9"."Proba_5" IS NULL OR "DT_Output_9"."Proba_5" > 0.0) THEN ln("DT_Output_9"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_9"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_9"."Proba_6" IS NULL OR "DT_Output_9"."Proba_6" > 0.0) THEN ln("DT_Output_9"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_9"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_9"."Proba_7" IS NULL OR "DT_Output_9"."Proba_7" > 0.0) THEN ln("DT_Output_9"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_9"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_9"."Proba_8" IS NULL OR "DT_Output_9"."Proba_8" > 0.0) THEN ln("DT_Output_9"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_9"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_9"."Proba_9" IS NULL OR "DT_Output_9"."Proba_9" > 0.0) THEN ln("DT_Output_9"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10)) / 32.0 AS "Score_4", 9.0 * (CASE WHEN ("DT_Output_9"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_9"."Proba_4" IS NULL OR "DT_Output_9"."Proba_4" > 0.0) THEN ln("DT_Output_9"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_9"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_9"."Proba_0" IS NULL OR "DT_Output_9"."Proba_0" > 0.0) THEN ln("DT_Output_9"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_9"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_9"."Proba_1" IS NULL OR "DT_Output_9"."Proba_1" > 0.0) THEN ln("DT_Output_9"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_9"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_9"."Proba_2" IS NULL OR "DT_Output_9"."Proba_2" > 0.0) THEN ln("DT_Output_9"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_9"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_9"."Proba_3" IS NULL OR "DT_Output_9"."Proba_3" > 0.0) THEN ln("DT_Output_9"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_9"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_9"."Proba_4" IS NULL OR "DT_Output_9"."Proba_4" > 0.0) THEN ln("DT_Output_9"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_9"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_9"."Proba_5" IS NULL OR "DT_Output_9"."Proba_5" > 0.0) THEN ln("DT_Output_9"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_9"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_9"."Proba_6" IS NULL OR "DT_Output_9"."Proba_6" > 0.0) THEN ln("DT_Output_9"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_9"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_9"."Proba_7" IS NULL OR "DT_Output_9"."Proba_7" > 0.0) THEN ln("DT_Output_9"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_9"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_9"."Proba_8" IS NULL OR "DT_Output_9"."Proba_8" > 0.0) THEN ln("DT_Output_9"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_9"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_9"."Proba_9" IS NULL OR "DT_Output_9"."Proba_9" > 0.0) THEN ln("DT_Output_9"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10) AS "Proba_4", (9.0 * (CASE WHEN ("DT_Output_9"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_9"."Proba_5" IS NULL OR "DT_Output_9"."Proba_5" > 0.0) THEN ln("DT_Output_9"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_9"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_9"."Proba_0" IS NULL OR "DT_Output_9"."Proba_0" > 0.0) THEN ln("DT_Output_9"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_9"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_9"."Proba_1" IS NULL OR "DT_Output_9"."Proba_1" > 0.0) THEN ln("DT_Output_9"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_9"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_9"."Proba_2" IS NULL OR "DT_Output_9"."Proba_2" > 0.0) THEN ln("DT_Output_9"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_9"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_9"."Proba_3" IS NULL OR "DT_Output_9"."Proba_3" > 0.0) THEN ln("DT_Output_9"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_9"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_9"."Proba_4" IS NULL OR "DT_Output_9"."Proba_4" > 0.0) THEN ln("DT_Output_9"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_9"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_9"."Proba_5" IS NULL OR "DT_Output_9"."Proba_5" > 0.0) THEN ln("DT_Output_9"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_9"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_9"."Proba_6" IS NULL OR "DT_Output_9"."Proba_6" > 0.0) THEN ln("DT_Output_9"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_9"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_9"."Proba_7" IS NULL OR "DT_Output_9"."Proba_7" > 0.0) THEN ln("DT_Output_9"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_9"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_9"."Proba_8" IS NULL OR "DT_Output_9"."Proba_8" > 0.0) THEN ln("DT_Output_9"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_9"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_9"."Proba_9" IS NULL OR "DT_Output_9"."Proba_9" > 0.0) THEN ln("DT_Output_9"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10)) / 32.0 AS "Score_5", 9.0 * (CASE WHEN ("DT_Output_9"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_9"."Proba_5" IS NULL OR "DT_Output_9"."Proba_5" > 0.0) THEN ln("DT_Output_9"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_9"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_9"."Proba_0" IS NULL OR "DT_Output_9"."Proba_0" > 0.0) THEN ln("DT_Output_9"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_9"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_9"."Proba_1" IS NULL OR "DT_Output_9"."Proba_1" > 0.0) THEN ln("DT_Output_9"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_9"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_9"."Proba_2" IS NULL OR "DT_Output_9"."Proba_2" > 0.0) THEN ln("DT_Output_9"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_9"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_9"."Proba_3" IS NULL OR "DT_Output_9"."Proba_3" > 0.0) THEN ln("DT_Output_9"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_9"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_9"."Proba_4" IS NULL OR "DT_Output_9"."Proba_4" > 0.0) THEN ln("DT_Output_9"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_9"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_9"."Proba_5" IS NULL OR "DT_Output_9"."Proba_5" > 0.0) THEN ln("DT_Output_9"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_9"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_9"."Proba_6" IS NULL OR "DT_Output_9"."Proba_6" > 0.0) THEN ln("DT_Output_9"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_9"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_9"."Proba_7" IS NULL OR "DT_Output_9"."Proba_7" > 0.0) THEN ln("DT_Output_9"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_9"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_9"."Proba_8" IS NULL OR "DT_Output_9"."Proba_8" > 0.0) THEN ln("DT_Output_9"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_9"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_9"."Proba_9" IS NULL OR "DT_Output_9"."Proba_9" > 0.0) THEN ln("DT_Output_9"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10) AS "Proba_5", (9.0 * (CASE WHEN ("DT_Output_9"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_9"."Proba_6" IS NULL OR "DT_Output_9"."Proba_6" > 0.0) THEN ln("DT_Output_9"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_9"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_9"."Proba_0" IS NULL OR "DT_Output_9"."Proba_0" > 0.0) THEN ln("DT_Output_9"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_9"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_9"."Proba_1" IS NULL OR "DT_Output_9"."Proba_1" > 0.0) THEN ln("DT_Output_9"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_9"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_9"."Proba_2" IS NULL OR "DT_Output_9"."Proba_2" > 0.0) THEN ln("DT_Output_9"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_9"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_9"."Proba_3" IS NULL OR "DT_Output_9"."Proba_3" > 0.0) THEN ln("DT_Output_9"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_9"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_9"."Proba_4" IS NULL OR "DT_Output_9"."Proba_4" > 0.0) THEN ln("DT_Output_9"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_9"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_9"."Proba_5" IS NULL OR "DT_Output_9"."Proba_5" > 0.0) THEN ln("DT_Output_9"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_9"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_9"."Proba_6" IS NULL OR "DT_Output_9"."Proba_6" > 0.0) THEN ln("DT_Output_9"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_9"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_9"."Proba_7" IS NULL OR "DT_Output_9"."Proba_7" > 0.0) THEN ln("DT_Output_9"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_9"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_9"."Proba_8" IS NULL OR "DT_Output_9"."Proba_8" > 0.0) THEN ln("DT_Output_9"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_9"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_9"."Proba_9" IS NULL OR "DT_Output_9"."Proba_9" > 0.0) THEN ln("DT_Output_9"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10)) / 32.0 AS "Score_6", 9.0 * (CASE WHEN ("DT_Output_9"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_9"."Proba_6" IS NULL OR "DT_Output_9"."Proba_6" > 0.0) THEN ln("DT_Output_9"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_9"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_9"."Proba_0" IS NULL OR "DT_Output_9"."Proba_0" > 0.0) THEN ln("DT_Output_9"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_9"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_9"."Proba_1" IS NULL OR "DT_Output_9"."Proba_1" > 0.0) THEN ln("DT_Output_9"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_9"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_9"."Proba_2" IS NULL OR "DT_Output_9"."Proba_2" > 0.0) THEN ln("DT_Output_9"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_9"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_9"."Proba_3" IS NULL OR "DT_Output_9"."Proba_3" > 0.0) THEN ln("DT_Output_9"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_9"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_9"."Proba_4" IS NULL OR "DT_Output_9"."Proba_4" > 0.0) THEN ln("DT_Output_9"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_9"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_9"."Proba_5" IS NULL OR "DT_Output_9"."Proba_5" > 0.0) THEN ln("DT_Output_9"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_9"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_9"."Proba_6" IS NULL OR "DT_Output_9"."Proba_6" > 0.0) THEN ln("DT_Output_9"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_9"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_9"."Proba_7" IS NULL OR "DT_Output_9"."Proba_7" > 0.0) THEN ln("DT_Output_9"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_9"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_9"."Proba_8" IS NULL OR "DT_Output_9"."Proba_8" > 0.0) THEN ln("DT_Output_9"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_9"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_9"."Proba_9" IS NULL OR "DT_Output_9"."Proba_9" > 0.0) THEN ln("DT_Output_9"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10) AS "Proba_6", (9.0 * (CASE WHEN ("DT_Output_9"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_9"."Proba_7" IS NULL OR "DT_Output_9"."Proba_7" > 0.0) THEN ln("DT_Output_9"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_9"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_9"."Proba_0" IS NULL OR "DT_Output_9"."Proba_0" > 0.0) THEN ln("DT_Output_9"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_9"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_9"."Proba_1" IS NULL OR "DT_Output_9"."Proba_1" > 0.0) THEN ln("DT_Output_9"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_9"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_9"."Proba_2" IS NULL OR "DT_Output_9"."Proba_2" > 0.0) THEN ln("DT_Output_9"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_9"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_9"."Proba_3" IS NULL OR "DT_Output_9"."Proba_3" > 0.0) THEN ln("DT_Output_9"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_9"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_9"."Proba_4" IS NULL OR "DT_Output_9"."Proba_4" > 0.0) THEN ln("DT_Output_9"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_9"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_9"."Proba_5" IS NULL OR "DT_Output_9"."Proba_5" > 0.0) THEN ln("DT_Output_9"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_9"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_9"."Proba_6" IS NULL OR "DT_Output_9"."Proba_6" > 0.0) THEN ln("DT_Output_9"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_9"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_9"."Proba_7" IS NULL OR "DT_Output_9"."Proba_7" > 0.0) THEN ln("DT_Output_9"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_9"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_9"."Proba_8" IS NULL OR "DT_Output_9"."Proba_8" > 0.0) THEN ln("DT_Output_9"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_9"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_9"."Proba_9" IS NULL OR "DT_Output_9"."Proba_9" > 0.0) THEN ln("DT_Output_9"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10)) / 32.0 AS "Score_7", 9.0 * (CASE WHEN ("DT_Output_9"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_9"."Proba_7" IS NULL OR "DT_Output_9"."Proba_7" > 0.0) THEN ln("DT_Output_9"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_9"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_9"."Proba_0" IS NULL OR "DT_Output_9"."Proba_0" > 0.0) THEN ln("DT_Output_9"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_9"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_9"."Proba_1" IS NULL OR "DT_Output_9"."Proba_1" > 0.0) THEN ln("DT_Output_9"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_9"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_9"."Proba_2" IS NULL OR "DT_Output_9"."Proba_2" > 0.0) THEN ln("DT_Output_9"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_9"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_9"."Proba_3" IS NULL OR "DT_Output_9"."Proba_3" > 0.0) THEN ln("DT_Output_9"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_9"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_9"."Proba_4" IS NULL OR "DT_Output_9"."Proba_4" > 0.0) THEN ln("DT_Output_9"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_9"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_9"."Proba_5" IS NULL OR "DT_Output_9"."Proba_5" > 0.0) THEN ln("DT_Output_9"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_9"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_9"."Proba_6" IS NULL OR "DT_Output_9"."Proba_6" > 0.0) THEN ln("DT_Output_9"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_9"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_9"."Proba_7" IS NULL OR "DT_Output_9"."Proba_7" > 0.0) THEN ln("DT_Output_9"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_9"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_9"."Proba_8" IS NULL OR "DT_Output_9"."Proba_8" > 0.0) THEN ln("DT_Output_9"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_9"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_9"."Proba_9" IS NULL OR "DT_Output_9"."Proba_9" > 0.0) THEN ln("DT_Output_9"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10) AS "Proba_7", (9.0 * (CASE WHEN ("DT_Output_9"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_9"."Proba_8" IS NULL OR "DT_Output_9"."Proba_8" > 0.0) THEN ln("DT_Output_9"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_9"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_9"."Proba_0" IS NULL OR "DT_Output_9"."Proba_0" > 0.0) THEN ln("DT_Output_9"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_9"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_9"."Proba_1" IS NULL OR "DT_Output_9"."Proba_1" > 0.0) THEN ln("DT_Output_9"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_9"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_9"."Proba_2" IS NULL OR "DT_Output_9"."Proba_2" > 0.0) THEN ln("DT_Output_9"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_9"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_9"."Proba_3" IS NULL OR "DT_Output_9"."Proba_3" > 0.0) THEN ln("DT_Output_9"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_9"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_9"."Proba_4" IS NULL OR "DT_Output_9"."Proba_4" > 0.0) THEN ln("DT_Output_9"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_9"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_9"."Proba_5" IS NULL OR "DT_Output_9"."Proba_5" > 0.0) THEN ln("DT_Output_9"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_9"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_9"."Proba_6" IS NULL OR "DT_Output_9"."Proba_6" > 0.0) THEN ln("DT_Output_9"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_9"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_9"."Proba_7" IS NULL OR "DT_Output_9"."Proba_7" > 0.0) THEN ln("DT_Output_9"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_9"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_9"."Proba_8" IS NULL OR "DT_Output_9"."Proba_8" > 0.0) THEN ln("DT_Output_9"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_9"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_9"."Proba_9" IS NULL OR "DT_Output_9"."Proba_9" > 0.0) THEN ln("DT_Output_9"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10)) / 32.0 AS "Score_8", 9.0 * (CASE WHEN ("DT_Output_9"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_9"."Proba_8" IS NULL OR "DT_Output_9"."Proba_8" > 0.0) THEN ln("DT_Output_9"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_9"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_9"."Proba_0" IS NULL OR "DT_Output_9"."Proba_0" > 0.0) THEN ln("DT_Output_9"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_9"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_9"."Proba_1" IS NULL OR "DT_Output_9"."Proba_1" > 0.0) THEN ln("DT_Output_9"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_9"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_9"."Proba_2" IS NULL OR "DT_Output_9"."Proba_2" > 0.0) THEN ln("DT_Output_9"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_9"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_9"."Proba_3" IS NULL OR "DT_Output_9"."Proba_3" > 0.0) THEN ln("DT_Output_9"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_9"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_9"."Proba_4" IS NULL OR "DT_Output_9"."Proba_4" > 0.0) THEN ln("DT_Output_9"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_9"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_9"."Proba_5" IS NULL OR "DT_Output_9"."Proba_5" > 0.0) THEN ln("DT_Output_9"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_9"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_9"."Proba_6" IS NULL OR "DT_Output_9"."Proba_6" > 0.0) THEN ln("DT_Output_9"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_9"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_9"."Proba_7" IS NULL OR "DT_Output_9"."Proba_7" > 0.0) THEN ln("DT_Output_9"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_9"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_9"."Proba_8" IS NULL OR "DT_Output_9"."Proba_8" > 0.0) THEN ln("DT_Output_9"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_9"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_9"."Proba_9" IS NULL OR "DT_Output_9"."Proba_9" > 0.0) THEN ln("DT_Output_9"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10) AS "Proba_8", (9.0 * (CASE WHEN ("DT_Output_9"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_9"."Proba_9" IS NULL OR "DT_Output_9"."Proba_9" > 0.0) THEN ln("DT_Output_9"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_9"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_9"."Proba_0" IS NULL OR "DT_Output_9"."Proba_0" > 0.0) THEN ln("DT_Output_9"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_9"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_9"."Proba_1" IS NULL OR "DT_Output_9"."Proba_1" > 0.0) THEN ln("DT_Output_9"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_9"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_9"."Proba_2" IS NULL OR "DT_Output_9"."Proba_2" > 0.0) THEN ln("DT_Output_9"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_9"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_9"."Proba_3" IS NULL OR "DT_Output_9"."Proba_3" > 0.0) THEN ln("DT_Output_9"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_9"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_9"."Proba_4" IS NULL OR "DT_Output_9"."Proba_4" > 0.0) THEN ln("DT_Output_9"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_9"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_9"."Proba_5" IS NULL OR "DT_Output_9"."Proba_5" > 0.0) THEN ln("DT_Output_9"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_9"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_9"."Proba_6" IS NULL OR "DT_Output_9"."Proba_6" > 0.0) THEN ln("DT_Output_9"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_9"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_9"."Proba_7" IS NULL OR "DT_Output_9"."Proba_7" > 0.0) THEN ln("DT_Output_9"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_9"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_9"."Proba_8" IS NULL OR "DT_Output_9"."Proba_8" > 0.0) THEN ln("DT_Output_9"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_9"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_9"."Proba_9" IS NULL OR "DT_Output_9"."Proba_9" > 0.0) THEN ln("DT_Output_9"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10)) / 32.0 AS "Score_9", 9.0 * (CASE WHEN ("DT_Output_9"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_9"."Proba_9" IS NULL OR "DT_Output_9"."Proba_9" > 0.0) THEN ln("DT_Output_9"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_9"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_9"."Proba_0" IS NULL OR "DT_Output_9"."Proba_0" > 0.0) THEN ln("DT_Output_9"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_9"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_9"."Proba_1" IS NULL OR "DT_Output_9"."Proba_1" > 0.0) THEN ln("DT_Output_9"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_9"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_9"."Proba_2" IS NULL OR "DT_Output_9"."Proba_2" > 0.0) THEN ln("DT_Output_9"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_9"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_9"."Proba_3" IS NULL OR "DT_Output_9"."Proba_3" > 0.0) THEN ln("DT_Output_9"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_9"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_9"."Proba_4" IS NULL OR "DT_Output_9"."Proba_4" > 0.0) THEN ln("DT_Output_9"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_9"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_9"."Proba_5" IS NULL OR "DT_Output_9"."Proba_5" > 0.0) THEN ln("DT_Output_9"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_9"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_9"."Proba_6" IS NULL OR "DT_Output_9"."Proba_6" > 0.0) THEN ln("DT_Output_9"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_9"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_9"."Proba_7" IS NULL OR "DT_Output_9"."Proba_7" > 0.0) THEN ln("DT_Output_9"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_9"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_9"."Proba_8" IS NULL OR "DT_Output_9"."Proba_8" > 0.0) THEN ln("DT_Output_9"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_9"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_9"."Proba_9" IS NULL OR "DT_Output_9"."Proba_9" > 0.0) THEN ln("DT_Output_9"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10) AS "Proba_9" 
FROM "DT_Output_9"), 
"DT_node_lookup_10" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_30 <= -1.555469036102295) THEN 1 ELSE 2 END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_10" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Proba_0" AS "Proba_0", "Values"."LogProba_0" AS "LogProba_0", "Values"."Proba_1" AS "Proba_1", "Values"."LogProba_1" AS "LogProba_1", "Values"."Proba_2" AS "Proba_2", "Values"."LogProba_2" AS "LogProba_2", "Values"."Proba_3" AS "Proba_3", "Values"."LogProba_3" AS "LogProba_3", "Values"."Proba_4" AS "Proba_4", "Values"."LogProba_4" AS "LogProba_4", "Values"."Proba_5" AS "Proba_5", "Values"."LogProba_5" AS "LogProba_5", "Values"."Proba_6" AS "Proba_6", "Values"."LogProba_6" AS "LogProba_6", "Values"."Proba_7" AS "Proba_7", "Values"."LogProba_7" AS "LogProba_7", "Values"."Proba_8" AS "Proba_8", "Values"."LogProba_8" AS "LogProba_8", "Values"."Proba_9" AS "Proba_9", "Values"."LogProba_9" AS "LogProba_9", "Values"."Decision" AS "Decision", "Values"."DecisionProba" AS "DecisionProba" 
FROM (SELECT 1 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 246 AS count, 1 AS depth, 0 AS parent_id, 0.9969151845069867 AS "Proba_0", -0.00308958334415 AS "LogProba_0", 0.00038560209396753614 AS "Proba_1", -7.86070456483 AS "LogProba_1", 0.000385601221613628 AS "Proba_2", -7.86070682715 AS "LogProba_2", 0.0003856021052861029 AS "Proba_3", -7.86070453548 AS "LogProba_3", 0.00038560166439533455 AS "Proba_4", -7.86070567886 AS "LogProba_4", 0.0003856021040041488 AS "Proba_5", -7.8607045388 AS "LogProba_5", 0.0003856021044928512 AS "Proba_6", -7.86070453753 AS "LogProba_6", 0.00038560209396753804 AS "Proba_7", -7.86070456483 AS "LogProba_7", 0.0 AS "Proba_8", -BINARY_FLOAT_INFINITY AS "LogProba_8", 0.00038560210528610283 AS "Proba_9", -7.86070453548 AS "LogProba_9", 0 AS "Decision", 0.996915184507 AS "DecisionProba" FROM DUAL UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1191 AS count, 1 AS depth, 0 AS parent_id, 9.604320973220276e-10 AS "Proba_0", -20.7636378314 AS "LogProba_0", 0.11110633334901078 AS "Proba_1", -2.19726757812 AS "LogProba_1", 0.11110633440670417 AS "Proba_2", -2.1972675686 AS "LogProba_2", 0.11110633430818079 AS "Proba_3", -2.19726756949 AS "LogProba_3", 0.1111063343573373 AS "Proba_4", -2.19726756904 AS "LogProba_4", 0.11110633430832378 AS "Proba_5", -2.19726756949 AS "LogProba_5", 0.11110633430826955 AS "Proba_6", -2.19726756949 AS "LogProba_6", 0.1111063333490108 AS "Proba_7", -2.19726757812 AS "LogProba_7", 0.11114932634454995 AS "Proba_8", -2.19688069937 AS "LogProba_8", 0.1111063343081807 AS "Proba_9", -2.19726756949 AS "LogProba_9", 8 AS "Decision", 0.111149326345 AS "DecisionProba" FROM DUAL) "Values"), 
"DT_Output_10" AS 
(SELECT "DT_node_lookup_10"."KEY" AS "KEY", "DT_node_lookup_10".node_id_2 AS node_id_2, "DT_node_data_10".node_id AS node_id, "DT_node_data_10".feature AS feature, "DT_node_data_10".threshold AS threshold, "DT_node_data_10".count AS count, "DT_node_data_10".depth AS depth, "DT_node_data_10".parent_id AS parent_id, "DT_node_data_10"."Proba_0" AS "Proba_0", "DT_node_data_10"."LogProba_0" AS "LogProba_0", "DT_node_data_10"."Proba_1" AS "Proba_1", "DT_node_data_10"."LogProba_1" AS "LogProba_1", "DT_node_data_10"."Proba_2" AS "Proba_2", "DT_node_data_10"."LogProba_2" AS "LogProba_2", "DT_node_data_10"."Proba_3" AS "Proba_3", "DT_node_data_10"."LogProba_3" AS "LogProba_3", "DT_node_data_10"."Proba_4" AS "Proba_4", "DT_node_data_10"."LogProba_4" AS "LogProba_4", "DT_node_data_10"."Proba_5" AS "Proba_5", "DT_node_data_10"."LogProba_5" AS "LogProba_5", "DT_node_data_10"."Proba_6" AS "Proba_6", "DT_node_data_10"."LogProba_6" AS "LogProba_6", "DT_node_data_10"."Proba_7" AS "Proba_7", "DT_node_data_10"."LogProba_7" AS "LogProba_7", "DT_node_data_10"."Proba_8" AS "Proba_8", "DT_node_data_10"."LogProba_8" AS "LogProba_8", "DT_node_data_10"."Proba_9" AS "Proba_9", "DT_node_data_10"."LogProba_9" AS "LogProba_9", "DT_node_data_10"."Decision" AS "Decision", "DT_node_data_10"."DecisionProba" AS "DecisionProba" 
FROM "DT_node_lookup_10" LEFT OUTER JOIN "DT_node_data_10" ON "DT_node_lookup_10".node_id_2 = "DT_node_data_10".node_id), 
"AdaBoost_Estim_10" AS 
(SELECT "DT_Output_10"."KEY" AS "KEY", (9.0 * (CASE WHEN ("DT_Output_10"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_10"."Proba_0" IS NULL OR "DT_Output_10"."Proba_0" > 0.0) THEN ln("DT_Output_10"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_10"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_10"."Proba_0" IS NULL OR "DT_Output_10"."Proba_0" > 0.0) THEN ln("DT_Output_10"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_10"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_10"."Proba_1" IS NULL OR "DT_Output_10"."Proba_1" > 0.0) THEN ln("DT_Output_10"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_10"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_10"."Proba_2" IS NULL OR "DT_Output_10"."Proba_2" > 0.0) THEN ln("DT_Output_10"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_10"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_10"."Proba_3" IS NULL OR "DT_Output_10"."Proba_3" > 0.0) THEN ln("DT_Output_10"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_10"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_10"."Proba_4" IS NULL OR "DT_Output_10"."Proba_4" > 0.0) THEN ln("DT_Output_10"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_10"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_10"."Proba_5" IS NULL OR "DT_Output_10"."Proba_5" > 0.0) THEN ln("DT_Output_10"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_10"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_10"."Proba_6" IS NULL OR "DT_Output_10"."Proba_6" > 0.0) THEN ln("DT_Output_10"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_10"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_10"."Proba_7" IS NULL OR "DT_Output_10"."Proba_7" > 0.0) THEN ln("DT_Output_10"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_10"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_10"."Proba_8" IS NULL OR "DT_Output_10"."Proba_8" > 0.0) THEN ln("DT_Output_10"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_10"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_10"."Proba_9" IS NULL OR "DT_Output_10"."Proba_9" > 0.0) THEN ln("DT_Output_10"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10)) / 32.0 AS "Score_0", 9.0 * (CASE WHEN ("DT_Output_10"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_10"."Proba_0" IS NULL OR "DT_Output_10"."Proba_0" > 0.0) THEN ln("DT_Output_10"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_10"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_10"."Proba_0" IS NULL OR "DT_Output_10"."Proba_0" > 0.0) THEN ln("DT_Output_10"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_10"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_10"."Proba_1" IS NULL OR "DT_Output_10"."Proba_1" > 0.0) THEN ln("DT_Output_10"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_10"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_10"."Proba_2" IS NULL OR "DT_Output_10"."Proba_2" > 0.0) THEN ln("DT_Output_10"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_10"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_10"."Proba_3" IS NULL OR "DT_Output_10"."Proba_3" > 0.0) THEN ln("DT_Output_10"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_10"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_10"."Proba_4" IS NULL OR "DT_Output_10"."Proba_4" > 0.0) THEN ln("DT_Output_10"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_10"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_10"."Proba_5" IS NULL OR "DT_Output_10"."Proba_5" > 0.0) THEN ln("DT_Output_10"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_10"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_10"."Proba_6" IS NULL OR "DT_Output_10"."Proba_6" > 0.0) THEN ln("DT_Output_10"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_10"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_10"."Proba_7" IS NULL OR "DT_Output_10"."Proba_7" > 0.0) THEN ln("DT_Output_10"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_10"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_10"."Proba_8" IS NULL OR "DT_Output_10"."Proba_8" > 0.0) THEN ln("DT_Output_10"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_10"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_10"."Proba_9" IS NULL OR "DT_Output_10"."Proba_9" > 0.0) THEN ln("DT_Output_10"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10) AS "Proba_0", (9.0 * (CASE WHEN ("DT_Output_10"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_10"."Proba_1" IS NULL OR "DT_Output_10"."Proba_1" > 0.0) THEN ln("DT_Output_10"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_10"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_10"."Proba_0" IS NULL OR "DT_Output_10"."Proba_0" > 0.0) THEN ln("DT_Output_10"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_10"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_10"."Proba_1" IS NULL OR "DT_Output_10"."Proba_1" > 0.0) THEN ln("DT_Output_10"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_10"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_10"."Proba_2" IS NULL OR "DT_Output_10"."Proba_2" > 0.0) THEN ln("DT_Output_10"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_10"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_10"."Proba_3" IS NULL OR "DT_Output_10"."Proba_3" > 0.0) THEN ln("DT_Output_10"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_10"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_10"."Proba_4" IS NULL OR "DT_Output_10"."Proba_4" > 0.0) THEN ln("DT_Output_10"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_10"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_10"."Proba_5" IS NULL OR "DT_Output_10"."Proba_5" > 0.0) THEN ln("DT_Output_10"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_10"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_10"."Proba_6" IS NULL OR "DT_Output_10"."Proba_6" > 0.0) THEN ln("DT_Output_10"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_10"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_10"."Proba_7" IS NULL OR "DT_Output_10"."Proba_7" > 0.0) THEN ln("DT_Output_10"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_10"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_10"."Proba_8" IS NULL OR "DT_Output_10"."Proba_8" > 0.0) THEN ln("DT_Output_10"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_10"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_10"."Proba_9" IS NULL OR "DT_Output_10"."Proba_9" > 0.0) THEN ln("DT_Output_10"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10)) / 32.0 AS "Score_1", 9.0 * (CASE WHEN ("DT_Output_10"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_10"."Proba_1" IS NULL OR "DT_Output_10"."Proba_1" > 0.0) THEN ln("DT_Output_10"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_10"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_10"."Proba_0" IS NULL OR "DT_Output_10"."Proba_0" > 0.0) THEN ln("DT_Output_10"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_10"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_10"."Proba_1" IS NULL OR "DT_Output_10"."Proba_1" > 0.0) THEN ln("DT_Output_10"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_10"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_10"."Proba_2" IS NULL OR "DT_Output_10"."Proba_2" > 0.0) THEN ln("DT_Output_10"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_10"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_10"."Proba_3" IS NULL OR "DT_Output_10"."Proba_3" > 0.0) THEN ln("DT_Output_10"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_10"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_10"."Proba_4" IS NULL OR "DT_Output_10"."Proba_4" > 0.0) THEN ln("DT_Output_10"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_10"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_10"."Proba_5" IS NULL OR "DT_Output_10"."Proba_5" > 0.0) THEN ln("DT_Output_10"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_10"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_10"."Proba_6" IS NULL OR "DT_Output_10"."Proba_6" > 0.0) THEN ln("DT_Output_10"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_10"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_10"."Proba_7" IS NULL OR "DT_Output_10"."Proba_7" > 0.0) THEN ln("DT_Output_10"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_10"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_10"."Proba_8" IS NULL OR "DT_Output_10"."Proba_8" > 0.0) THEN ln("DT_Output_10"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_10"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_10"."Proba_9" IS NULL OR "DT_Output_10"."Proba_9" > 0.0) THEN ln("DT_Output_10"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10) AS "Proba_1", (9.0 * (CASE WHEN ("DT_Output_10"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_10"."Proba_2" IS NULL OR "DT_Output_10"."Proba_2" > 0.0) THEN ln("DT_Output_10"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_10"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_10"."Proba_0" IS NULL OR "DT_Output_10"."Proba_0" > 0.0) THEN ln("DT_Output_10"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_10"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_10"."Proba_1" IS NULL OR "DT_Output_10"."Proba_1" > 0.0) THEN ln("DT_Output_10"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_10"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_10"."Proba_2" IS NULL OR "DT_Output_10"."Proba_2" > 0.0) THEN ln("DT_Output_10"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_10"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_10"."Proba_3" IS NULL OR "DT_Output_10"."Proba_3" > 0.0) THEN ln("DT_Output_10"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_10"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_10"."Proba_4" IS NULL OR "DT_Output_10"."Proba_4" > 0.0) THEN ln("DT_Output_10"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_10"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_10"."Proba_5" IS NULL OR "DT_Output_10"."Proba_5" > 0.0) THEN ln("DT_Output_10"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_10"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_10"."Proba_6" IS NULL OR "DT_Output_10"."Proba_6" > 0.0) THEN ln("DT_Output_10"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_10"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_10"."Proba_7" IS NULL OR "DT_Output_10"."Proba_7" > 0.0) THEN ln("DT_Output_10"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_10"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_10"."Proba_8" IS NULL OR "DT_Output_10"."Proba_8" > 0.0) THEN ln("DT_Output_10"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_10"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_10"."Proba_9" IS NULL OR "DT_Output_10"."Proba_9" > 0.0) THEN ln("DT_Output_10"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10)) / 32.0 AS "Score_2", 9.0 * (CASE WHEN ("DT_Output_10"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_10"."Proba_2" IS NULL OR "DT_Output_10"."Proba_2" > 0.0) THEN ln("DT_Output_10"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_10"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_10"."Proba_0" IS NULL OR "DT_Output_10"."Proba_0" > 0.0) THEN ln("DT_Output_10"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_10"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_10"."Proba_1" IS NULL OR "DT_Output_10"."Proba_1" > 0.0) THEN ln("DT_Output_10"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_10"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_10"."Proba_2" IS NULL OR "DT_Output_10"."Proba_2" > 0.0) THEN ln("DT_Output_10"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_10"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_10"."Proba_3" IS NULL OR "DT_Output_10"."Proba_3" > 0.0) THEN ln("DT_Output_10"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_10"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_10"."Proba_4" IS NULL OR "DT_Output_10"."Proba_4" > 0.0) THEN ln("DT_Output_10"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_10"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_10"."Proba_5" IS NULL OR "DT_Output_10"."Proba_5" > 0.0) THEN ln("DT_Output_10"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_10"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_10"."Proba_6" IS NULL OR "DT_Output_10"."Proba_6" > 0.0) THEN ln("DT_Output_10"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_10"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_10"."Proba_7" IS NULL OR "DT_Output_10"."Proba_7" > 0.0) THEN ln("DT_Output_10"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_10"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_10"."Proba_8" IS NULL OR "DT_Output_10"."Proba_8" > 0.0) THEN ln("DT_Output_10"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_10"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_10"."Proba_9" IS NULL OR "DT_Output_10"."Proba_9" > 0.0) THEN ln("DT_Output_10"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10) AS "Proba_2", (9.0 * (CASE WHEN ("DT_Output_10"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_10"."Proba_3" IS NULL OR "DT_Output_10"."Proba_3" > 0.0) THEN ln("DT_Output_10"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_10"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_10"."Proba_0" IS NULL OR "DT_Output_10"."Proba_0" > 0.0) THEN ln("DT_Output_10"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_10"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_10"."Proba_1" IS NULL OR "DT_Output_10"."Proba_1" > 0.0) THEN ln("DT_Output_10"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_10"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_10"."Proba_2" IS NULL OR "DT_Output_10"."Proba_2" > 0.0) THEN ln("DT_Output_10"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_10"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_10"."Proba_3" IS NULL OR "DT_Output_10"."Proba_3" > 0.0) THEN ln("DT_Output_10"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_10"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_10"."Proba_4" IS NULL OR "DT_Output_10"."Proba_4" > 0.0) THEN ln("DT_Output_10"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_10"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_10"."Proba_5" IS NULL OR "DT_Output_10"."Proba_5" > 0.0) THEN ln("DT_Output_10"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_10"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_10"."Proba_6" IS NULL OR "DT_Output_10"."Proba_6" > 0.0) THEN ln("DT_Output_10"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_10"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_10"."Proba_7" IS NULL OR "DT_Output_10"."Proba_7" > 0.0) THEN ln("DT_Output_10"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_10"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_10"."Proba_8" IS NULL OR "DT_Output_10"."Proba_8" > 0.0) THEN ln("DT_Output_10"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_10"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_10"."Proba_9" IS NULL OR "DT_Output_10"."Proba_9" > 0.0) THEN ln("DT_Output_10"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10)) / 32.0 AS "Score_3", 9.0 * (CASE WHEN ("DT_Output_10"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_10"."Proba_3" IS NULL OR "DT_Output_10"."Proba_3" > 0.0) THEN ln("DT_Output_10"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_10"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_10"."Proba_0" IS NULL OR "DT_Output_10"."Proba_0" > 0.0) THEN ln("DT_Output_10"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_10"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_10"."Proba_1" IS NULL OR "DT_Output_10"."Proba_1" > 0.0) THEN ln("DT_Output_10"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_10"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_10"."Proba_2" IS NULL OR "DT_Output_10"."Proba_2" > 0.0) THEN ln("DT_Output_10"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_10"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_10"."Proba_3" IS NULL OR "DT_Output_10"."Proba_3" > 0.0) THEN ln("DT_Output_10"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_10"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_10"."Proba_4" IS NULL OR "DT_Output_10"."Proba_4" > 0.0) THEN ln("DT_Output_10"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_10"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_10"."Proba_5" IS NULL OR "DT_Output_10"."Proba_5" > 0.0) THEN ln("DT_Output_10"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_10"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_10"."Proba_6" IS NULL OR "DT_Output_10"."Proba_6" > 0.0) THEN ln("DT_Output_10"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_10"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_10"."Proba_7" IS NULL OR "DT_Output_10"."Proba_7" > 0.0) THEN ln("DT_Output_10"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_10"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_10"."Proba_8" IS NULL OR "DT_Output_10"."Proba_8" > 0.0) THEN ln("DT_Output_10"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_10"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_10"."Proba_9" IS NULL OR "DT_Output_10"."Proba_9" > 0.0) THEN ln("DT_Output_10"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10) AS "Proba_3", (9.0 * (CASE WHEN ("DT_Output_10"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_10"."Proba_4" IS NULL OR "DT_Output_10"."Proba_4" > 0.0) THEN ln("DT_Output_10"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_10"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_10"."Proba_0" IS NULL OR "DT_Output_10"."Proba_0" > 0.0) THEN ln("DT_Output_10"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_10"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_10"."Proba_1" IS NULL OR "DT_Output_10"."Proba_1" > 0.0) THEN ln("DT_Output_10"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_10"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_10"."Proba_2" IS NULL OR "DT_Output_10"."Proba_2" > 0.0) THEN ln("DT_Output_10"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_10"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_10"."Proba_3" IS NULL OR "DT_Output_10"."Proba_3" > 0.0) THEN ln("DT_Output_10"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_10"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_10"."Proba_4" IS NULL OR "DT_Output_10"."Proba_4" > 0.0) THEN ln("DT_Output_10"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_10"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_10"."Proba_5" IS NULL OR "DT_Output_10"."Proba_5" > 0.0) THEN ln("DT_Output_10"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_10"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_10"."Proba_6" IS NULL OR "DT_Output_10"."Proba_6" > 0.0) THEN ln("DT_Output_10"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_10"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_10"."Proba_7" IS NULL OR "DT_Output_10"."Proba_7" > 0.0) THEN ln("DT_Output_10"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_10"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_10"."Proba_8" IS NULL OR "DT_Output_10"."Proba_8" > 0.0) THEN ln("DT_Output_10"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_10"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_10"."Proba_9" IS NULL OR "DT_Output_10"."Proba_9" > 0.0) THEN ln("DT_Output_10"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10)) / 32.0 AS "Score_4", 9.0 * (CASE WHEN ("DT_Output_10"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_10"."Proba_4" IS NULL OR "DT_Output_10"."Proba_4" > 0.0) THEN ln("DT_Output_10"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_10"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_10"."Proba_0" IS NULL OR "DT_Output_10"."Proba_0" > 0.0) THEN ln("DT_Output_10"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_10"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_10"."Proba_1" IS NULL OR "DT_Output_10"."Proba_1" > 0.0) THEN ln("DT_Output_10"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_10"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_10"."Proba_2" IS NULL OR "DT_Output_10"."Proba_2" > 0.0) THEN ln("DT_Output_10"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_10"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_10"."Proba_3" IS NULL OR "DT_Output_10"."Proba_3" > 0.0) THEN ln("DT_Output_10"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_10"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_10"."Proba_4" IS NULL OR "DT_Output_10"."Proba_4" > 0.0) THEN ln("DT_Output_10"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_10"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_10"."Proba_5" IS NULL OR "DT_Output_10"."Proba_5" > 0.0) THEN ln("DT_Output_10"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_10"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_10"."Proba_6" IS NULL OR "DT_Output_10"."Proba_6" > 0.0) THEN ln("DT_Output_10"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_10"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_10"."Proba_7" IS NULL OR "DT_Output_10"."Proba_7" > 0.0) THEN ln("DT_Output_10"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_10"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_10"."Proba_8" IS NULL OR "DT_Output_10"."Proba_8" > 0.0) THEN ln("DT_Output_10"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_10"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_10"."Proba_9" IS NULL OR "DT_Output_10"."Proba_9" > 0.0) THEN ln("DT_Output_10"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10) AS "Proba_4", (9.0 * (CASE WHEN ("DT_Output_10"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_10"."Proba_5" IS NULL OR "DT_Output_10"."Proba_5" > 0.0) THEN ln("DT_Output_10"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_10"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_10"."Proba_0" IS NULL OR "DT_Output_10"."Proba_0" > 0.0) THEN ln("DT_Output_10"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_10"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_10"."Proba_1" IS NULL OR "DT_Output_10"."Proba_1" > 0.0) THEN ln("DT_Output_10"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_10"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_10"."Proba_2" IS NULL OR "DT_Output_10"."Proba_2" > 0.0) THEN ln("DT_Output_10"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_10"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_10"."Proba_3" IS NULL OR "DT_Output_10"."Proba_3" > 0.0) THEN ln("DT_Output_10"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_10"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_10"."Proba_4" IS NULL OR "DT_Output_10"."Proba_4" > 0.0) THEN ln("DT_Output_10"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_10"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_10"."Proba_5" IS NULL OR "DT_Output_10"."Proba_5" > 0.0) THEN ln("DT_Output_10"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_10"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_10"."Proba_6" IS NULL OR "DT_Output_10"."Proba_6" > 0.0) THEN ln("DT_Output_10"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_10"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_10"."Proba_7" IS NULL OR "DT_Output_10"."Proba_7" > 0.0) THEN ln("DT_Output_10"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_10"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_10"."Proba_8" IS NULL OR "DT_Output_10"."Proba_8" > 0.0) THEN ln("DT_Output_10"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_10"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_10"."Proba_9" IS NULL OR "DT_Output_10"."Proba_9" > 0.0) THEN ln("DT_Output_10"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10)) / 32.0 AS "Score_5", 9.0 * (CASE WHEN ("DT_Output_10"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_10"."Proba_5" IS NULL OR "DT_Output_10"."Proba_5" > 0.0) THEN ln("DT_Output_10"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_10"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_10"."Proba_0" IS NULL OR "DT_Output_10"."Proba_0" > 0.0) THEN ln("DT_Output_10"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_10"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_10"."Proba_1" IS NULL OR "DT_Output_10"."Proba_1" > 0.0) THEN ln("DT_Output_10"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_10"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_10"."Proba_2" IS NULL OR "DT_Output_10"."Proba_2" > 0.0) THEN ln("DT_Output_10"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_10"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_10"."Proba_3" IS NULL OR "DT_Output_10"."Proba_3" > 0.0) THEN ln("DT_Output_10"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_10"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_10"."Proba_4" IS NULL OR "DT_Output_10"."Proba_4" > 0.0) THEN ln("DT_Output_10"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_10"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_10"."Proba_5" IS NULL OR "DT_Output_10"."Proba_5" > 0.0) THEN ln("DT_Output_10"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_10"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_10"."Proba_6" IS NULL OR "DT_Output_10"."Proba_6" > 0.0) THEN ln("DT_Output_10"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_10"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_10"."Proba_7" IS NULL OR "DT_Output_10"."Proba_7" > 0.0) THEN ln("DT_Output_10"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_10"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_10"."Proba_8" IS NULL OR "DT_Output_10"."Proba_8" > 0.0) THEN ln("DT_Output_10"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_10"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_10"."Proba_9" IS NULL OR "DT_Output_10"."Proba_9" > 0.0) THEN ln("DT_Output_10"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10) AS "Proba_5", (9.0 * (CASE WHEN ("DT_Output_10"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_10"."Proba_6" IS NULL OR "DT_Output_10"."Proba_6" > 0.0) THEN ln("DT_Output_10"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_10"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_10"."Proba_0" IS NULL OR "DT_Output_10"."Proba_0" > 0.0) THEN ln("DT_Output_10"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_10"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_10"."Proba_1" IS NULL OR "DT_Output_10"."Proba_1" > 0.0) THEN ln("DT_Output_10"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_10"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_10"."Proba_2" IS NULL OR "DT_Output_10"."Proba_2" > 0.0) THEN ln("DT_Output_10"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_10"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_10"."Proba_3" IS NULL OR "DT_Output_10"."Proba_3" > 0.0) THEN ln("DT_Output_10"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_10"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_10"."Proba_4" IS NULL OR "DT_Output_10"."Proba_4" > 0.0) THEN ln("DT_Output_10"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_10"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_10"."Proba_5" IS NULL OR "DT_Output_10"."Proba_5" > 0.0) THEN ln("DT_Output_10"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_10"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_10"."Proba_6" IS NULL OR "DT_Output_10"."Proba_6" > 0.0) THEN ln("DT_Output_10"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_10"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_10"."Proba_7" IS NULL OR "DT_Output_10"."Proba_7" > 0.0) THEN ln("DT_Output_10"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_10"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_10"."Proba_8" IS NULL OR "DT_Output_10"."Proba_8" > 0.0) THEN ln("DT_Output_10"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_10"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_10"."Proba_9" IS NULL OR "DT_Output_10"."Proba_9" > 0.0) THEN ln("DT_Output_10"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10)) / 32.0 AS "Score_6", 9.0 * (CASE WHEN ("DT_Output_10"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_10"."Proba_6" IS NULL OR "DT_Output_10"."Proba_6" > 0.0) THEN ln("DT_Output_10"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_10"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_10"."Proba_0" IS NULL OR "DT_Output_10"."Proba_0" > 0.0) THEN ln("DT_Output_10"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_10"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_10"."Proba_1" IS NULL OR "DT_Output_10"."Proba_1" > 0.0) THEN ln("DT_Output_10"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_10"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_10"."Proba_2" IS NULL OR "DT_Output_10"."Proba_2" > 0.0) THEN ln("DT_Output_10"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_10"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_10"."Proba_3" IS NULL OR "DT_Output_10"."Proba_3" > 0.0) THEN ln("DT_Output_10"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_10"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_10"."Proba_4" IS NULL OR "DT_Output_10"."Proba_4" > 0.0) THEN ln("DT_Output_10"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_10"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_10"."Proba_5" IS NULL OR "DT_Output_10"."Proba_5" > 0.0) THEN ln("DT_Output_10"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_10"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_10"."Proba_6" IS NULL OR "DT_Output_10"."Proba_6" > 0.0) THEN ln("DT_Output_10"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_10"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_10"."Proba_7" IS NULL OR "DT_Output_10"."Proba_7" > 0.0) THEN ln("DT_Output_10"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_10"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_10"."Proba_8" IS NULL OR "DT_Output_10"."Proba_8" > 0.0) THEN ln("DT_Output_10"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_10"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_10"."Proba_9" IS NULL OR "DT_Output_10"."Proba_9" > 0.0) THEN ln("DT_Output_10"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10) AS "Proba_6", (9.0 * (CASE WHEN ("DT_Output_10"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_10"."Proba_7" IS NULL OR "DT_Output_10"."Proba_7" > 0.0) THEN ln("DT_Output_10"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_10"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_10"."Proba_0" IS NULL OR "DT_Output_10"."Proba_0" > 0.0) THEN ln("DT_Output_10"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_10"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_10"."Proba_1" IS NULL OR "DT_Output_10"."Proba_1" > 0.0) THEN ln("DT_Output_10"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_10"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_10"."Proba_2" IS NULL OR "DT_Output_10"."Proba_2" > 0.0) THEN ln("DT_Output_10"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_10"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_10"."Proba_3" IS NULL OR "DT_Output_10"."Proba_3" > 0.0) THEN ln("DT_Output_10"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_10"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_10"."Proba_4" IS NULL OR "DT_Output_10"."Proba_4" > 0.0) THEN ln("DT_Output_10"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_10"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_10"."Proba_5" IS NULL OR "DT_Output_10"."Proba_5" > 0.0) THEN ln("DT_Output_10"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_10"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_10"."Proba_6" IS NULL OR "DT_Output_10"."Proba_6" > 0.0) THEN ln("DT_Output_10"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_10"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_10"."Proba_7" IS NULL OR "DT_Output_10"."Proba_7" > 0.0) THEN ln("DT_Output_10"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_10"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_10"."Proba_8" IS NULL OR "DT_Output_10"."Proba_8" > 0.0) THEN ln("DT_Output_10"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_10"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_10"."Proba_9" IS NULL OR "DT_Output_10"."Proba_9" > 0.0) THEN ln("DT_Output_10"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10)) / 32.0 AS "Score_7", 9.0 * (CASE WHEN ("DT_Output_10"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_10"."Proba_7" IS NULL OR "DT_Output_10"."Proba_7" > 0.0) THEN ln("DT_Output_10"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_10"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_10"."Proba_0" IS NULL OR "DT_Output_10"."Proba_0" > 0.0) THEN ln("DT_Output_10"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_10"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_10"."Proba_1" IS NULL OR "DT_Output_10"."Proba_1" > 0.0) THEN ln("DT_Output_10"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_10"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_10"."Proba_2" IS NULL OR "DT_Output_10"."Proba_2" > 0.0) THEN ln("DT_Output_10"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_10"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_10"."Proba_3" IS NULL OR "DT_Output_10"."Proba_3" > 0.0) THEN ln("DT_Output_10"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_10"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_10"."Proba_4" IS NULL OR "DT_Output_10"."Proba_4" > 0.0) THEN ln("DT_Output_10"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_10"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_10"."Proba_5" IS NULL OR "DT_Output_10"."Proba_5" > 0.0) THEN ln("DT_Output_10"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_10"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_10"."Proba_6" IS NULL OR "DT_Output_10"."Proba_6" > 0.0) THEN ln("DT_Output_10"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_10"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_10"."Proba_7" IS NULL OR "DT_Output_10"."Proba_7" > 0.0) THEN ln("DT_Output_10"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_10"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_10"."Proba_8" IS NULL OR "DT_Output_10"."Proba_8" > 0.0) THEN ln("DT_Output_10"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_10"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_10"."Proba_9" IS NULL OR "DT_Output_10"."Proba_9" > 0.0) THEN ln("DT_Output_10"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10) AS "Proba_7", (9.0 * (CASE WHEN ("DT_Output_10"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_10"."Proba_8" IS NULL OR "DT_Output_10"."Proba_8" > 0.0) THEN ln("DT_Output_10"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_10"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_10"."Proba_0" IS NULL OR "DT_Output_10"."Proba_0" > 0.0) THEN ln("DT_Output_10"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_10"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_10"."Proba_1" IS NULL OR "DT_Output_10"."Proba_1" > 0.0) THEN ln("DT_Output_10"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_10"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_10"."Proba_2" IS NULL OR "DT_Output_10"."Proba_2" > 0.0) THEN ln("DT_Output_10"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_10"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_10"."Proba_3" IS NULL OR "DT_Output_10"."Proba_3" > 0.0) THEN ln("DT_Output_10"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_10"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_10"."Proba_4" IS NULL OR "DT_Output_10"."Proba_4" > 0.0) THEN ln("DT_Output_10"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_10"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_10"."Proba_5" IS NULL OR "DT_Output_10"."Proba_5" > 0.0) THEN ln("DT_Output_10"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_10"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_10"."Proba_6" IS NULL OR "DT_Output_10"."Proba_6" > 0.0) THEN ln("DT_Output_10"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_10"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_10"."Proba_7" IS NULL OR "DT_Output_10"."Proba_7" > 0.0) THEN ln("DT_Output_10"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_10"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_10"."Proba_8" IS NULL OR "DT_Output_10"."Proba_8" > 0.0) THEN ln("DT_Output_10"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_10"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_10"."Proba_9" IS NULL OR "DT_Output_10"."Proba_9" > 0.0) THEN ln("DT_Output_10"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10)) / 32.0 AS "Score_8", 9.0 * (CASE WHEN ("DT_Output_10"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_10"."Proba_8" IS NULL OR "DT_Output_10"."Proba_8" > 0.0) THEN ln("DT_Output_10"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_10"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_10"."Proba_0" IS NULL OR "DT_Output_10"."Proba_0" > 0.0) THEN ln("DT_Output_10"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_10"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_10"."Proba_1" IS NULL OR "DT_Output_10"."Proba_1" > 0.0) THEN ln("DT_Output_10"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_10"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_10"."Proba_2" IS NULL OR "DT_Output_10"."Proba_2" > 0.0) THEN ln("DT_Output_10"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_10"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_10"."Proba_3" IS NULL OR "DT_Output_10"."Proba_3" > 0.0) THEN ln("DT_Output_10"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_10"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_10"."Proba_4" IS NULL OR "DT_Output_10"."Proba_4" > 0.0) THEN ln("DT_Output_10"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_10"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_10"."Proba_5" IS NULL OR "DT_Output_10"."Proba_5" > 0.0) THEN ln("DT_Output_10"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_10"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_10"."Proba_6" IS NULL OR "DT_Output_10"."Proba_6" > 0.0) THEN ln("DT_Output_10"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_10"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_10"."Proba_7" IS NULL OR "DT_Output_10"."Proba_7" > 0.0) THEN ln("DT_Output_10"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_10"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_10"."Proba_8" IS NULL OR "DT_Output_10"."Proba_8" > 0.0) THEN ln("DT_Output_10"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_10"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_10"."Proba_9" IS NULL OR "DT_Output_10"."Proba_9" > 0.0) THEN ln("DT_Output_10"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10) AS "Proba_8", (9.0 * (CASE WHEN ("DT_Output_10"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_10"."Proba_9" IS NULL OR "DT_Output_10"."Proba_9" > 0.0) THEN ln("DT_Output_10"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_10"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_10"."Proba_0" IS NULL OR "DT_Output_10"."Proba_0" > 0.0) THEN ln("DT_Output_10"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_10"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_10"."Proba_1" IS NULL OR "DT_Output_10"."Proba_1" > 0.0) THEN ln("DT_Output_10"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_10"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_10"."Proba_2" IS NULL OR "DT_Output_10"."Proba_2" > 0.0) THEN ln("DT_Output_10"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_10"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_10"."Proba_3" IS NULL OR "DT_Output_10"."Proba_3" > 0.0) THEN ln("DT_Output_10"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_10"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_10"."Proba_4" IS NULL OR "DT_Output_10"."Proba_4" > 0.0) THEN ln("DT_Output_10"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_10"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_10"."Proba_5" IS NULL OR "DT_Output_10"."Proba_5" > 0.0) THEN ln("DT_Output_10"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_10"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_10"."Proba_6" IS NULL OR "DT_Output_10"."Proba_6" > 0.0) THEN ln("DT_Output_10"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_10"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_10"."Proba_7" IS NULL OR "DT_Output_10"."Proba_7" > 0.0) THEN ln("DT_Output_10"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_10"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_10"."Proba_8" IS NULL OR "DT_Output_10"."Proba_8" > 0.0) THEN ln("DT_Output_10"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_10"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_10"."Proba_9" IS NULL OR "DT_Output_10"."Proba_9" > 0.0) THEN ln("DT_Output_10"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10)) / 32.0 AS "Score_9", 9.0 * (CASE WHEN ("DT_Output_10"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_10"."Proba_9" IS NULL OR "DT_Output_10"."Proba_9" > 0.0) THEN ln("DT_Output_10"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_10"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_10"."Proba_0" IS NULL OR "DT_Output_10"."Proba_0" > 0.0) THEN ln("DT_Output_10"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_10"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_10"."Proba_1" IS NULL OR "DT_Output_10"."Proba_1" > 0.0) THEN ln("DT_Output_10"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_10"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_10"."Proba_2" IS NULL OR "DT_Output_10"."Proba_2" > 0.0) THEN ln("DT_Output_10"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_10"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_10"."Proba_3" IS NULL OR "DT_Output_10"."Proba_3" > 0.0) THEN ln("DT_Output_10"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_10"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_10"."Proba_4" IS NULL OR "DT_Output_10"."Proba_4" > 0.0) THEN ln("DT_Output_10"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_10"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_10"."Proba_5" IS NULL OR "DT_Output_10"."Proba_5" > 0.0) THEN ln("DT_Output_10"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_10"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_10"."Proba_6" IS NULL OR "DT_Output_10"."Proba_6" > 0.0) THEN ln("DT_Output_10"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_10"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_10"."Proba_7" IS NULL OR "DT_Output_10"."Proba_7" > 0.0) THEN ln("DT_Output_10"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_10"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_10"."Proba_8" IS NULL OR "DT_Output_10"."Proba_8" > 0.0) THEN ln("DT_Output_10"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_10"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_10"."Proba_9" IS NULL OR "DT_Output_10"."Proba_9" > 0.0) THEN ln("DT_Output_10"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10) AS "Proba_9" 
FROM "DT_Output_10"), 
"DT_node_lookup_11" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_38 <= -1.6508052349090576) THEN 1 ELSE 2 END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_11" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Proba_0" AS "Proba_0", "Values"."LogProba_0" AS "LogProba_0", "Values"."Proba_1" AS "Proba_1", "Values"."LogProba_1" AS "LogProba_1", "Values"."Proba_2" AS "Proba_2", "Values"."LogProba_2" AS "LogProba_2", "Values"."Proba_3" AS "Proba_3", "Values"."LogProba_3" AS "LogProba_3", "Values"."Proba_4" AS "Proba_4", "Values"."LogProba_4" AS "LogProba_4", "Values"."Proba_5" AS "Proba_5", "Values"."LogProba_5" AS "LogProba_5", "Values"."Proba_6" AS "Proba_6", "Values"."LogProba_6" AS "LogProba_6", "Values"."Proba_7" AS "Proba_7", "Values"."LogProba_7" AS "LogProba_7", "Values"."Proba_8" AS "Proba_8", "Values"."LogProba_8" AS "LogProba_8", "Values"."Proba_9" AS "Proba_9", "Values"."LogProba_9" AS "LogProba_9", "Values"."Decision" AS "Decision", "Values"."DecisionProba" AS "DecisionProba" 
FROM (SELECT 1 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 219 AS count, 1 AS depth, 0 AS parent_id, 0.9999999395852084 AS "Proba_0", -6.04147934389e-08 AS "LogProba_0", 0.0 AS "Proba_1", -BINARY_FLOAT_INFINITY AS "LogProba_1", 8.582899279155048e-09 AS "Proba_2", -18.5734940692 AS "LogProba_2", 8.644259981017227e-09 AS "Proba_3", -18.5663703223 AS "LogProba_3", 8.614076196709177e-09 AS "Proba_4", -18.5698682047 AS "LogProba_4", 8.644173417002526e-09 AS "Proba_5", -18.5663803364 AS "LogProba_5", 8.644206417400843e-09 AS "Proba_6", -18.5663765187 AS "LogProba_6", 0.0 AS "Proba_7", -BINARY_FLOAT_INFINITY AS "LogProba_7", 8.640916421935884e-09 AS "Proba_8", -18.5667571924 AS "LogProba_8", 8.644259981017244e-09 AS "Proba_9", -18.5663703223 AS "LogProba_9", 0 AS "Decision", 0.999999939585 AS "DecisionProba" FROM DUAL UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1218 AS count, 1 AS depth, 0 AS parent_id, 3.604607675984616e-05 AS "Proba_0", -10.2307125279 AS "LogProba_0", 0.11111111185673042 AS "Proba_1", -2.19722457063 AS "LogProba_1", 0.11111111090338482 AS "Proba_2", -2.19722457921 AS "LogProba_2", 0.11111111089656894 AS "Proba_3", -2.19722457927 AS "LogProba_3", 0.11111111089992153 AS "Proba_4", -2.19722457924 AS "LogProba_4", 0.1111111108965788 AS "Proba_5", -2.19722457927 AS "LogProba_5", 0.111111110896575 AS "Proba_6", -2.19722457927 AS "LogProba_6", 0.11111111185673106 AS "Proba_7", -2.19722457063 AS "LogProba_7", 0.11107506482018084 AS "Proba_8", -2.19754904659 AS "LogProba_8", 0.11111111089656885 AS "Proba_9", -2.19722457927 AS "LogProba_9", 7 AS "Decision", 0.111111111857 AS "DecisionProba" FROM DUAL) "Values"), 
"DT_Output_11" AS 
(SELECT "DT_node_lookup_11"."KEY" AS "KEY", "DT_node_lookup_11".node_id_2 AS node_id_2, "DT_node_data_11".node_id AS node_id, "DT_node_data_11".feature AS feature, "DT_node_data_11".threshold AS threshold, "DT_node_data_11".count AS count, "DT_node_data_11".depth AS depth, "DT_node_data_11".parent_id AS parent_id, "DT_node_data_11"."Proba_0" AS "Proba_0", "DT_node_data_11"."LogProba_0" AS "LogProba_0", "DT_node_data_11"."Proba_1" AS "Proba_1", "DT_node_data_11"."LogProba_1" AS "LogProba_1", "DT_node_data_11"."Proba_2" AS "Proba_2", "DT_node_data_11"."LogProba_2" AS "LogProba_2", "DT_node_data_11"."Proba_3" AS "Proba_3", "DT_node_data_11"."LogProba_3" AS "LogProba_3", "DT_node_data_11"."Proba_4" AS "Proba_4", "DT_node_data_11"."LogProba_4" AS "LogProba_4", "DT_node_data_11"."Proba_5" AS "Proba_5", "DT_node_data_11"."LogProba_5" AS "LogProba_5", "DT_node_data_11"."Proba_6" AS "Proba_6", "DT_node_data_11"."LogProba_6" AS "LogProba_6", "DT_node_data_11"."Proba_7" AS "Proba_7", "DT_node_data_11"."LogProba_7" AS "LogProba_7", "DT_node_data_11"."Proba_8" AS "Proba_8", "DT_node_data_11"."LogProba_8" AS "LogProba_8", "DT_node_data_11"."Proba_9" AS "Proba_9", "DT_node_data_11"."LogProba_9" AS "LogProba_9", "DT_node_data_11"."Decision" AS "Decision", "DT_node_data_11"."DecisionProba" AS "DecisionProba" 
FROM "DT_node_lookup_11" LEFT OUTER JOIN "DT_node_data_11" ON "DT_node_lookup_11".node_id_2 = "DT_node_data_11".node_id), 
"AdaBoost_Estim_11" AS 
(SELECT "DT_Output_11"."KEY" AS "KEY", (9.0 * (CASE WHEN ("DT_Output_11"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_11"."Proba_0" IS NULL OR "DT_Output_11"."Proba_0" > 0.0) THEN ln("DT_Output_11"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_11"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_11"."Proba_0" IS NULL OR "DT_Output_11"."Proba_0" > 0.0) THEN ln("DT_Output_11"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_11"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_11"."Proba_1" IS NULL OR "DT_Output_11"."Proba_1" > 0.0) THEN ln("DT_Output_11"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_11"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_11"."Proba_2" IS NULL OR "DT_Output_11"."Proba_2" > 0.0) THEN ln("DT_Output_11"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_11"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_11"."Proba_3" IS NULL OR "DT_Output_11"."Proba_3" > 0.0) THEN ln("DT_Output_11"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_11"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_11"."Proba_4" IS NULL OR "DT_Output_11"."Proba_4" > 0.0) THEN ln("DT_Output_11"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_11"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_11"."Proba_5" IS NULL OR "DT_Output_11"."Proba_5" > 0.0) THEN ln("DT_Output_11"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_11"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_11"."Proba_6" IS NULL OR "DT_Output_11"."Proba_6" > 0.0) THEN ln("DT_Output_11"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_11"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_11"."Proba_7" IS NULL OR "DT_Output_11"."Proba_7" > 0.0) THEN ln("DT_Output_11"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_11"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_11"."Proba_8" IS NULL OR "DT_Output_11"."Proba_8" > 0.0) THEN ln("DT_Output_11"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_11"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_11"."Proba_9" IS NULL OR "DT_Output_11"."Proba_9" > 0.0) THEN ln("DT_Output_11"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10)) / 32.0 AS "Score_0", 9.0 * (CASE WHEN ("DT_Output_11"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_11"."Proba_0" IS NULL OR "DT_Output_11"."Proba_0" > 0.0) THEN ln("DT_Output_11"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_11"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_11"."Proba_0" IS NULL OR "DT_Output_11"."Proba_0" > 0.0) THEN ln("DT_Output_11"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_11"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_11"."Proba_1" IS NULL OR "DT_Output_11"."Proba_1" > 0.0) THEN ln("DT_Output_11"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_11"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_11"."Proba_2" IS NULL OR "DT_Output_11"."Proba_2" > 0.0) THEN ln("DT_Output_11"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_11"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_11"."Proba_3" IS NULL OR "DT_Output_11"."Proba_3" > 0.0) THEN ln("DT_Output_11"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_11"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_11"."Proba_4" IS NULL OR "DT_Output_11"."Proba_4" > 0.0) THEN ln("DT_Output_11"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_11"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_11"."Proba_5" IS NULL OR "DT_Output_11"."Proba_5" > 0.0) THEN ln("DT_Output_11"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_11"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_11"."Proba_6" IS NULL OR "DT_Output_11"."Proba_6" > 0.0) THEN ln("DT_Output_11"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_11"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_11"."Proba_7" IS NULL OR "DT_Output_11"."Proba_7" > 0.0) THEN ln("DT_Output_11"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_11"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_11"."Proba_8" IS NULL OR "DT_Output_11"."Proba_8" > 0.0) THEN ln("DT_Output_11"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_11"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_11"."Proba_9" IS NULL OR "DT_Output_11"."Proba_9" > 0.0) THEN ln("DT_Output_11"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10) AS "Proba_0", (9.0 * (CASE WHEN ("DT_Output_11"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_11"."Proba_1" IS NULL OR "DT_Output_11"."Proba_1" > 0.0) THEN ln("DT_Output_11"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_11"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_11"."Proba_0" IS NULL OR "DT_Output_11"."Proba_0" > 0.0) THEN ln("DT_Output_11"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_11"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_11"."Proba_1" IS NULL OR "DT_Output_11"."Proba_1" > 0.0) THEN ln("DT_Output_11"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_11"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_11"."Proba_2" IS NULL OR "DT_Output_11"."Proba_2" > 0.0) THEN ln("DT_Output_11"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_11"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_11"."Proba_3" IS NULL OR "DT_Output_11"."Proba_3" > 0.0) THEN ln("DT_Output_11"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_11"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_11"."Proba_4" IS NULL OR "DT_Output_11"."Proba_4" > 0.0) THEN ln("DT_Output_11"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_11"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_11"."Proba_5" IS NULL OR "DT_Output_11"."Proba_5" > 0.0) THEN ln("DT_Output_11"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_11"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_11"."Proba_6" IS NULL OR "DT_Output_11"."Proba_6" > 0.0) THEN ln("DT_Output_11"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_11"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_11"."Proba_7" IS NULL OR "DT_Output_11"."Proba_7" > 0.0) THEN ln("DT_Output_11"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_11"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_11"."Proba_8" IS NULL OR "DT_Output_11"."Proba_8" > 0.0) THEN ln("DT_Output_11"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_11"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_11"."Proba_9" IS NULL OR "DT_Output_11"."Proba_9" > 0.0) THEN ln("DT_Output_11"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10)) / 32.0 AS "Score_1", 9.0 * (CASE WHEN ("DT_Output_11"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_11"."Proba_1" IS NULL OR "DT_Output_11"."Proba_1" > 0.0) THEN ln("DT_Output_11"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_11"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_11"."Proba_0" IS NULL OR "DT_Output_11"."Proba_0" > 0.0) THEN ln("DT_Output_11"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_11"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_11"."Proba_1" IS NULL OR "DT_Output_11"."Proba_1" > 0.0) THEN ln("DT_Output_11"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_11"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_11"."Proba_2" IS NULL OR "DT_Output_11"."Proba_2" > 0.0) THEN ln("DT_Output_11"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_11"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_11"."Proba_3" IS NULL OR "DT_Output_11"."Proba_3" > 0.0) THEN ln("DT_Output_11"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_11"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_11"."Proba_4" IS NULL OR "DT_Output_11"."Proba_4" > 0.0) THEN ln("DT_Output_11"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_11"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_11"."Proba_5" IS NULL OR "DT_Output_11"."Proba_5" > 0.0) THEN ln("DT_Output_11"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_11"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_11"."Proba_6" IS NULL OR "DT_Output_11"."Proba_6" > 0.0) THEN ln("DT_Output_11"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_11"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_11"."Proba_7" IS NULL OR "DT_Output_11"."Proba_7" > 0.0) THEN ln("DT_Output_11"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_11"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_11"."Proba_8" IS NULL OR "DT_Output_11"."Proba_8" > 0.0) THEN ln("DT_Output_11"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_11"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_11"."Proba_9" IS NULL OR "DT_Output_11"."Proba_9" > 0.0) THEN ln("DT_Output_11"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10) AS "Proba_1", (9.0 * (CASE WHEN ("DT_Output_11"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_11"."Proba_2" IS NULL OR "DT_Output_11"."Proba_2" > 0.0) THEN ln("DT_Output_11"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_11"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_11"."Proba_0" IS NULL OR "DT_Output_11"."Proba_0" > 0.0) THEN ln("DT_Output_11"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_11"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_11"."Proba_1" IS NULL OR "DT_Output_11"."Proba_1" > 0.0) THEN ln("DT_Output_11"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_11"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_11"."Proba_2" IS NULL OR "DT_Output_11"."Proba_2" > 0.0) THEN ln("DT_Output_11"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_11"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_11"."Proba_3" IS NULL OR "DT_Output_11"."Proba_3" > 0.0) THEN ln("DT_Output_11"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_11"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_11"."Proba_4" IS NULL OR "DT_Output_11"."Proba_4" > 0.0) THEN ln("DT_Output_11"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_11"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_11"."Proba_5" IS NULL OR "DT_Output_11"."Proba_5" > 0.0) THEN ln("DT_Output_11"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_11"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_11"."Proba_6" IS NULL OR "DT_Output_11"."Proba_6" > 0.0) THEN ln("DT_Output_11"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_11"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_11"."Proba_7" IS NULL OR "DT_Output_11"."Proba_7" > 0.0) THEN ln("DT_Output_11"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_11"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_11"."Proba_8" IS NULL OR "DT_Output_11"."Proba_8" > 0.0) THEN ln("DT_Output_11"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_11"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_11"."Proba_9" IS NULL OR "DT_Output_11"."Proba_9" > 0.0) THEN ln("DT_Output_11"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10)) / 32.0 AS "Score_2", 9.0 * (CASE WHEN ("DT_Output_11"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_11"."Proba_2" IS NULL OR "DT_Output_11"."Proba_2" > 0.0) THEN ln("DT_Output_11"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_11"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_11"."Proba_0" IS NULL OR "DT_Output_11"."Proba_0" > 0.0) THEN ln("DT_Output_11"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_11"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_11"."Proba_1" IS NULL OR "DT_Output_11"."Proba_1" > 0.0) THEN ln("DT_Output_11"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_11"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_11"."Proba_2" IS NULL OR "DT_Output_11"."Proba_2" > 0.0) THEN ln("DT_Output_11"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_11"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_11"."Proba_3" IS NULL OR "DT_Output_11"."Proba_3" > 0.0) THEN ln("DT_Output_11"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_11"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_11"."Proba_4" IS NULL OR "DT_Output_11"."Proba_4" > 0.0) THEN ln("DT_Output_11"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_11"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_11"."Proba_5" IS NULL OR "DT_Output_11"."Proba_5" > 0.0) THEN ln("DT_Output_11"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_11"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_11"."Proba_6" IS NULL OR "DT_Output_11"."Proba_6" > 0.0) THEN ln("DT_Output_11"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_11"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_11"."Proba_7" IS NULL OR "DT_Output_11"."Proba_7" > 0.0) THEN ln("DT_Output_11"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_11"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_11"."Proba_8" IS NULL OR "DT_Output_11"."Proba_8" > 0.0) THEN ln("DT_Output_11"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_11"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_11"."Proba_9" IS NULL OR "DT_Output_11"."Proba_9" > 0.0) THEN ln("DT_Output_11"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10) AS "Proba_2", (9.0 * (CASE WHEN ("DT_Output_11"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_11"."Proba_3" IS NULL OR "DT_Output_11"."Proba_3" > 0.0) THEN ln("DT_Output_11"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_11"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_11"."Proba_0" IS NULL OR "DT_Output_11"."Proba_0" > 0.0) THEN ln("DT_Output_11"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_11"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_11"."Proba_1" IS NULL OR "DT_Output_11"."Proba_1" > 0.0) THEN ln("DT_Output_11"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_11"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_11"."Proba_2" IS NULL OR "DT_Output_11"."Proba_2" > 0.0) THEN ln("DT_Output_11"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_11"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_11"."Proba_3" IS NULL OR "DT_Output_11"."Proba_3" > 0.0) THEN ln("DT_Output_11"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_11"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_11"."Proba_4" IS NULL OR "DT_Output_11"."Proba_4" > 0.0) THEN ln("DT_Output_11"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_11"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_11"."Proba_5" IS NULL OR "DT_Output_11"."Proba_5" > 0.0) THEN ln("DT_Output_11"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_11"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_11"."Proba_6" IS NULL OR "DT_Output_11"."Proba_6" > 0.0) THEN ln("DT_Output_11"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_11"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_11"."Proba_7" IS NULL OR "DT_Output_11"."Proba_7" > 0.0) THEN ln("DT_Output_11"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_11"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_11"."Proba_8" IS NULL OR "DT_Output_11"."Proba_8" > 0.0) THEN ln("DT_Output_11"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_11"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_11"."Proba_9" IS NULL OR "DT_Output_11"."Proba_9" > 0.0) THEN ln("DT_Output_11"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10)) / 32.0 AS "Score_3", 9.0 * (CASE WHEN ("DT_Output_11"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_11"."Proba_3" IS NULL OR "DT_Output_11"."Proba_3" > 0.0) THEN ln("DT_Output_11"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_11"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_11"."Proba_0" IS NULL OR "DT_Output_11"."Proba_0" > 0.0) THEN ln("DT_Output_11"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_11"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_11"."Proba_1" IS NULL OR "DT_Output_11"."Proba_1" > 0.0) THEN ln("DT_Output_11"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_11"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_11"."Proba_2" IS NULL OR "DT_Output_11"."Proba_2" > 0.0) THEN ln("DT_Output_11"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_11"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_11"."Proba_3" IS NULL OR "DT_Output_11"."Proba_3" > 0.0) THEN ln("DT_Output_11"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_11"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_11"."Proba_4" IS NULL OR "DT_Output_11"."Proba_4" > 0.0) THEN ln("DT_Output_11"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_11"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_11"."Proba_5" IS NULL OR "DT_Output_11"."Proba_5" > 0.0) THEN ln("DT_Output_11"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_11"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_11"."Proba_6" IS NULL OR "DT_Output_11"."Proba_6" > 0.0) THEN ln("DT_Output_11"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_11"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_11"."Proba_7" IS NULL OR "DT_Output_11"."Proba_7" > 0.0) THEN ln("DT_Output_11"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_11"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_11"."Proba_8" IS NULL OR "DT_Output_11"."Proba_8" > 0.0) THEN ln("DT_Output_11"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_11"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_11"."Proba_9" IS NULL OR "DT_Output_11"."Proba_9" > 0.0) THEN ln("DT_Output_11"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10) AS "Proba_3", (9.0 * (CASE WHEN ("DT_Output_11"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_11"."Proba_4" IS NULL OR "DT_Output_11"."Proba_4" > 0.0) THEN ln("DT_Output_11"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_11"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_11"."Proba_0" IS NULL OR "DT_Output_11"."Proba_0" > 0.0) THEN ln("DT_Output_11"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_11"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_11"."Proba_1" IS NULL OR "DT_Output_11"."Proba_1" > 0.0) THEN ln("DT_Output_11"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_11"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_11"."Proba_2" IS NULL OR "DT_Output_11"."Proba_2" > 0.0) THEN ln("DT_Output_11"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_11"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_11"."Proba_3" IS NULL OR "DT_Output_11"."Proba_3" > 0.0) THEN ln("DT_Output_11"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_11"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_11"."Proba_4" IS NULL OR "DT_Output_11"."Proba_4" > 0.0) THEN ln("DT_Output_11"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_11"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_11"."Proba_5" IS NULL OR "DT_Output_11"."Proba_5" > 0.0) THEN ln("DT_Output_11"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_11"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_11"."Proba_6" IS NULL OR "DT_Output_11"."Proba_6" > 0.0) THEN ln("DT_Output_11"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_11"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_11"."Proba_7" IS NULL OR "DT_Output_11"."Proba_7" > 0.0) THEN ln("DT_Output_11"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_11"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_11"."Proba_8" IS NULL OR "DT_Output_11"."Proba_8" > 0.0) THEN ln("DT_Output_11"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_11"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_11"."Proba_9" IS NULL OR "DT_Output_11"."Proba_9" > 0.0) THEN ln("DT_Output_11"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10)) / 32.0 AS "Score_4", 9.0 * (CASE WHEN ("DT_Output_11"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_11"."Proba_4" IS NULL OR "DT_Output_11"."Proba_4" > 0.0) THEN ln("DT_Output_11"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_11"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_11"."Proba_0" IS NULL OR "DT_Output_11"."Proba_0" > 0.0) THEN ln("DT_Output_11"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_11"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_11"."Proba_1" IS NULL OR "DT_Output_11"."Proba_1" > 0.0) THEN ln("DT_Output_11"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_11"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_11"."Proba_2" IS NULL OR "DT_Output_11"."Proba_2" > 0.0) THEN ln("DT_Output_11"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_11"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_11"."Proba_3" IS NULL OR "DT_Output_11"."Proba_3" > 0.0) THEN ln("DT_Output_11"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_11"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_11"."Proba_4" IS NULL OR "DT_Output_11"."Proba_4" > 0.0) THEN ln("DT_Output_11"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_11"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_11"."Proba_5" IS NULL OR "DT_Output_11"."Proba_5" > 0.0) THEN ln("DT_Output_11"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_11"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_11"."Proba_6" IS NULL OR "DT_Output_11"."Proba_6" > 0.0) THEN ln("DT_Output_11"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_11"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_11"."Proba_7" IS NULL OR "DT_Output_11"."Proba_7" > 0.0) THEN ln("DT_Output_11"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_11"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_11"."Proba_8" IS NULL OR "DT_Output_11"."Proba_8" > 0.0) THEN ln("DT_Output_11"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_11"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_11"."Proba_9" IS NULL OR "DT_Output_11"."Proba_9" > 0.0) THEN ln("DT_Output_11"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10) AS "Proba_4", (9.0 * (CASE WHEN ("DT_Output_11"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_11"."Proba_5" IS NULL OR "DT_Output_11"."Proba_5" > 0.0) THEN ln("DT_Output_11"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_11"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_11"."Proba_0" IS NULL OR "DT_Output_11"."Proba_0" > 0.0) THEN ln("DT_Output_11"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_11"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_11"."Proba_1" IS NULL OR "DT_Output_11"."Proba_1" > 0.0) THEN ln("DT_Output_11"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_11"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_11"."Proba_2" IS NULL OR "DT_Output_11"."Proba_2" > 0.0) THEN ln("DT_Output_11"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_11"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_11"."Proba_3" IS NULL OR "DT_Output_11"."Proba_3" > 0.0) THEN ln("DT_Output_11"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_11"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_11"."Proba_4" IS NULL OR "DT_Output_11"."Proba_4" > 0.0) THEN ln("DT_Output_11"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_11"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_11"."Proba_5" IS NULL OR "DT_Output_11"."Proba_5" > 0.0) THEN ln("DT_Output_11"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_11"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_11"."Proba_6" IS NULL OR "DT_Output_11"."Proba_6" > 0.0) THEN ln("DT_Output_11"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_11"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_11"."Proba_7" IS NULL OR "DT_Output_11"."Proba_7" > 0.0) THEN ln("DT_Output_11"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_11"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_11"."Proba_8" IS NULL OR "DT_Output_11"."Proba_8" > 0.0) THEN ln("DT_Output_11"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_11"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_11"."Proba_9" IS NULL OR "DT_Output_11"."Proba_9" > 0.0) THEN ln("DT_Output_11"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10)) / 32.0 AS "Score_5", 9.0 * (CASE WHEN ("DT_Output_11"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_11"."Proba_5" IS NULL OR "DT_Output_11"."Proba_5" > 0.0) THEN ln("DT_Output_11"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_11"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_11"."Proba_0" IS NULL OR "DT_Output_11"."Proba_0" > 0.0) THEN ln("DT_Output_11"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_11"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_11"."Proba_1" IS NULL OR "DT_Output_11"."Proba_1" > 0.0) THEN ln("DT_Output_11"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_11"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_11"."Proba_2" IS NULL OR "DT_Output_11"."Proba_2" > 0.0) THEN ln("DT_Output_11"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_11"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_11"."Proba_3" IS NULL OR "DT_Output_11"."Proba_3" > 0.0) THEN ln("DT_Output_11"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_11"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_11"."Proba_4" IS NULL OR "DT_Output_11"."Proba_4" > 0.0) THEN ln("DT_Output_11"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_11"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_11"."Proba_5" IS NULL OR "DT_Output_11"."Proba_5" > 0.0) THEN ln("DT_Output_11"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_11"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_11"."Proba_6" IS NULL OR "DT_Output_11"."Proba_6" > 0.0) THEN ln("DT_Output_11"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_11"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_11"."Proba_7" IS NULL OR "DT_Output_11"."Proba_7" > 0.0) THEN ln("DT_Output_11"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_11"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_11"."Proba_8" IS NULL OR "DT_Output_11"."Proba_8" > 0.0) THEN ln("DT_Output_11"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_11"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_11"."Proba_9" IS NULL OR "DT_Output_11"."Proba_9" > 0.0) THEN ln("DT_Output_11"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10) AS "Proba_5", (9.0 * (CASE WHEN ("DT_Output_11"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_11"."Proba_6" IS NULL OR "DT_Output_11"."Proba_6" > 0.0) THEN ln("DT_Output_11"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_11"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_11"."Proba_0" IS NULL OR "DT_Output_11"."Proba_0" > 0.0) THEN ln("DT_Output_11"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_11"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_11"."Proba_1" IS NULL OR "DT_Output_11"."Proba_1" > 0.0) THEN ln("DT_Output_11"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_11"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_11"."Proba_2" IS NULL OR "DT_Output_11"."Proba_2" > 0.0) THEN ln("DT_Output_11"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_11"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_11"."Proba_3" IS NULL OR "DT_Output_11"."Proba_3" > 0.0) THEN ln("DT_Output_11"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_11"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_11"."Proba_4" IS NULL OR "DT_Output_11"."Proba_4" > 0.0) THEN ln("DT_Output_11"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_11"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_11"."Proba_5" IS NULL OR "DT_Output_11"."Proba_5" > 0.0) THEN ln("DT_Output_11"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_11"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_11"."Proba_6" IS NULL OR "DT_Output_11"."Proba_6" > 0.0) THEN ln("DT_Output_11"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_11"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_11"."Proba_7" IS NULL OR "DT_Output_11"."Proba_7" > 0.0) THEN ln("DT_Output_11"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_11"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_11"."Proba_8" IS NULL OR "DT_Output_11"."Proba_8" > 0.0) THEN ln("DT_Output_11"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_11"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_11"."Proba_9" IS NULL OR "DT_Output_11"."Proba_9" > 0.0) THEN ln("DT_Output_11"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10)) / 32.0 AS "Score_6", 9.0 * (CASE WHEN ("DT_Output_11"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_11"."Proba_6" IS NULL OR "DT_Output_11"."Proba_6" > 0.0) THEN ln("DT_Output_11"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_11"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_11"."Proba_0" IS NULL OR "DT_Output_11"."Proba_0" > 0.0) THEN ln("DT_Output_11"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_11"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_11"."Proba_1" IS NULL OR "DT_Output_11"."Proba_1" > 0.0) THEN ln("DT_Output_11"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_11"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_11"."Proba_2" IS NULL OR "DT_Output_11"."Proba_2" > 0.0) THEN ln("DT_Output_11"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_11"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_11"."Proba_3" IS NULL OR "DT_Output_11"."Proba_3" > 0.0) THEN ln("DT_Output_11"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_11"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_11"."Proba_4" IS NULL OR "DT_Output_11"."Proba_4" > 0.0) THEN ln("DT_Output_11"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_11"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_11"."Proba_5" IS NULL OR "DT_Output_11"."Proba_5" > 0.0) THEN ln("DT_Output_11"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_11"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_11"."Proba_6" IS NULL OR "DT_Output_11"."Proba_6" > 0.0) THEN ln("DT_Output_11"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_11"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_11"."Proba_7" IS NULL OR "DT_Output_11"."Proba_7" > 0.0) THEN ln("DT_Output_11"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_11"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_11"."Proba_8" IS NULL OR "DT_Output_11"."Proba_8" > 0.0) THEN ln("DT_Output_11"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_11"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_11"."Proba_9" IS NULL OR "DT_Output_11"."Proba_9" > 0.0) THEN ln("DT_Output_11"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10) AS "Proba_6", (9.0 * (CASE WHEN ("DT_Output_11"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_11"."Proba_7" IS NULL OR "DT_Output_11"."Proba_7" > 0.0) THEN ln("DT_Output_11"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_11"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_11"."Proba_0" IS NULL OR "DT_Output_11"."Proba_0" > 0.0) THEN ln("DT_Output_11"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_11"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_11"."Proba_1" IS NULL OR "DT_Output_11"."Proba_1" > 0.0) THEN ln("DT_Output_11"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_11"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_11"."Proba_2" IS NULL OR "DT_Output_11"."Proba_2" > 0.0) THEN ln("DT_Output_11"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_11"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_11"."Proba_3" IS NULL OR "DT_Output_11"."Proba_3" > 0.0) THEN ln("DT_Output_11"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_11"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_11"."Proba_4" IS NULL OR "DT_Output_11"."Proba_4" > 0.0) THEN ln("DT_Output_11"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_11"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_11"."Proba_5" IS NULL OR "DT_Output_11"."Proba_5" > 0.0) THEN ln("DT_Output_11"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_11"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_11"."Proba_6" IS NULL OR "DT_Output_11"."Proba_6" > 0.0) THEN ln("DT_Output_11"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_11"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_11"."Proba_7" IS NULL OR "DT_Output_11"."Proba_7" > 0.0) THEN ln("DT_Output_11"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_11"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_11"."Proba_8" IS NULL OR "DT_Output_11"."Proba_8" > 0.0) THEN ln("DT_Output_11"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_11"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_11"."Proba_9" IS NULL OR "DT_Output_11"."Proba_9" > 0.0) THEN ln("DT_Output_11"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10)) / 32.0 AS "Score_7", 9.0 * (CASE WHEN ("DT_Output_11"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_11"."Proba_7" IS NULL OR "DT_Output_11"."Proba_7" > 0.0) THEN ln("DT_Output_11"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_11"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_11"."Proba_0" IS NULL OR "DT_Output_11"."Proba_0" > 0.0) THEN ln("DT_Output_11"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_11"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_11"."Proba_1" IS NULL OR "DT_Output_11"."Proba_1" > 0.0) THEN ln("DT_Output_11"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_11"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_11"."Proba_2" IS NULL OR "DT_Output_11"."Proba_2" > 0.0) THEN ln("DT_Output_11"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_11"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_11"."Proba_3" IS NULL OR "DT_Output_11"."Proba_3" > 0.0) THEN ln("DT_Output_11"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_11"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_11"."Proba_4" IS NULL OR "DT_Output_11"."Proba_4" > 0.0) THEN ln("DT_Output_11"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_11"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_11"."Proba_5" IS NULL OR "DT_Output_11"."Proba_5" > 0.0) THEN ln("DT_Output_11"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_11"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_11"."Proba_6" IS NULL OR "DT_Output_11"."Proba_6" > 0.0) THEN ln("DT_Output_11"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_11"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_11"."Proba_7" IS NULL OR "DT_Output_11"."Proba_7" > 0.0) THEN ln("DT_Output_11"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_11"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_11"."Proba_8" IS NULL OR "DT_Output_11"."Proba_8" > 0.0) THEN ln("DT_Output_11"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_11"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_11"."Proba_9" IS NULL OR "DT_Output_11"."Proba_9" > 0.0) THEN ln("DT_Output_11"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10) AS "Proba_7", (9.0 * (CASE WHEN ("DT_Output_11"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_11"."Proba_8" IS NULL OR "DT_Output_11"."Proba_8" > 0.0) THEN ln("DT_Output_11"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_11"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_11"."Proba_0" IS NULL OR "DT_Output_11"."Proba_0" > 0.0) THEN ln("DT_Output_11"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_11"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_11"."Proba_1" IS NULL OR "DT_Output_11"."Proba_1" > 0.0) THEN ln("DT_Output_11"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_11"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_11"."Proba_2" IS NULL OR "DT_Output_11"."Proba_2" > 0.0) THEN ln("DT_Output_11"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_11"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_11"."Proba_3" IS NULL OR "DT_Output_11"."Proba_3" > 0.0) THEN ln("DT_Output_11"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_11"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_11"."Proba_4" IS NULL OR "DT_Output_11"."Proba_4" > 0.0) THEN ln("DT_Output_11"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_11"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_11"."Proba_5" IS NULL OR "DT_Output_11"."Proba_5" > 0.0) THEN ln("DT_Output_11"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_11"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_11"."Proba_6" IS NULL OR "DT_Output_11"."Proba_6" > 0.0) THEN ln("DT_Output_11"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_11"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_11"."Proba_7" IS NULL OR "DT_Output_11"."Proba_7" > 0.0) THEN ln("DT_Output_11"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_11"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_11"."Proba_8" IS NULL OR "DT_Output_11"."Proba_8" > 0.0) THEN ln("DT_Output_11"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_11"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_11"."Proba_9" IS NULL OR "DT_Output_11"."Proba_9" > 0.0) THEN ln("DT_Output_11"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10)) / 32.0 AS "Score_8", 9.0 * (CASE WHEN ("DT_Output_11"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_11"."Proba_8" IS NULL OR "DT_Output_11"."Proba_8" > 0.0) THEN ln("DT_Output_11"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_11"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_11"."Proba_0" IS NULL OR "DT_Output_11"."Proba_0" > 0.0) THEN ln("DT_Output_11"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_11"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_11"."Proba_1" IS NULL OR "DT_Output_11"."Proba_1" > 0.0) THEN ln("DT_Output_11"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_11"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_11"."Proba_2" IS NULL OR "DT_Output_11"."Proba_2" > 0.0) THEN ln("DT_Output_11"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_11"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_11"."Proba_3" IS NULL OR "DT_Output_11"."Proba_3" > 0.0) THEN ln("DT_Output_11"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_11"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_11"."Proba_4" IS NULL OR "DT_Output_11"."Proba_4" > 0.0) THEN ln("DT_Output_11"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_11"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_11"."Proba_5" IS NULL OR "DT_Output_11"."Proba_5" > 0.0) THEN ln("DT_Output_11"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_11"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_11"."Proba_6" IS NULL OR "DT_Output_11"."Proba_6" > 0.0) THEN ln("DT_Output_11"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_11"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_11"."Proba_7" IS NULL OR "DT_Output_11"."Proba_7" > 0.0) THEN ln("DT_Output_11"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_11"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_11"."Proba_8" IS NULL OR "DT_Output_11"."Proba_8" > 0.0) THEN ln("DT_Output_11"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_11"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_11"."Proba_9" IS NULL OR "DT_Output_11"."Proba_9" > 0.0) THEN ln("DT_Output_11"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10) AS "Proba_8", (9.0 * (CASE WHEN ("DT_Output_11"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_11"."Proba_9" IS NULL OR "DT_Output_11"."Proba_9" > 0.0) THEN ln("DT_Output_11"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_11"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_11"."Proba_0" IS NULL OR "DT_Output_11"."Proba_0" > 0.0) THEN ln("DT_Output_11"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_11"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_11"."Proba_1" IS NULL OR "DT_Output_11"."Proba_1" > 0.0) THEN ln("DT_Output_11"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_11"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_11"."Proba_2" IS NULL OR "DT_Output_11"."Proba_2" > 0.0) THEN ln("DT_Output_11"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_11"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_11"."Proba_3" IS NULL OR "DT_Output_11"."Proba_3" > 0.0) THEN ln("DT_Output_11"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_11"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_11"."Proba_4" IS NULL OR "DT_Output_11"."Proba_4" > 0.0) THEN ln("DT_Output_11"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_11"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_11"."Proba_5" IS NULL OR "DT_Output_11"."Proba_5" > 0.0) THEN ln("DT_Output_11"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_11"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_11"."Proba_6" IS NULL OR "DT_Output_11"."Proba_6" > 0.0) THEN ln("DT_Output_11"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_11"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_11"."Proba_7" IS NULL OR "DT_Output_11"."Proba_7" > 0.0) THEN ln("DT_Output_11"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_11"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_11"."Proba_8" IS NULL OR "DT_Output_11"."Proba_8" > 0.0) THEN ln("DT_Output_11"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_11"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_11"."Proba_9" IS NULL OR "DT_Output_11"."Proba_9" > 0.0) THEN ln("DT_Output_11"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10)) / 32.0 AS "Score_9", 9.0 * (CASE WHEN ("DT_Output_11"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_11"."Proba_9" IS NULL OR "DT_Output_11"."Proba_9" > 0.0) THEN ln("DT_Output_11"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_11"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_11"."Proba_0" IS NULL OR "DT_Output_11"."Proba_0" > 0.0) THEN ln("DT_Output_11"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_11"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_11"."Proba_1" IS NULL OR "DT_Output_11"."Proba_1" > 0.0) THEN ln("DT_Output_11"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_11"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_11"."Proba_2" IS NULL OR "DT_Output_11"."Proba_2" > 0.0) THEN ln("DT_Output_11"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_11"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_11"."Proba_3" IS NULL OR "DT_Output_11"."Proba_3" > 0.0) THEN ln("DT_Output_11"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_11"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_11"."Proba_4" IS NULL OR "DT_Output_11"."Proba_4" > 0.0) THEN ln("DT_Output_11"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_11"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_11"."Proba_5" IS NULL OR "DT_Output_11"."Proba_5" > 0.0) THEN ln("DT_Output_11"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_11"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_11"."Proba_6" IS NULL OR "DT_Output_11"."Proba_6" > 0.0) THEN ln("DT_Output_11"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_11"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_11"."Proba_7" IS NULL OR "DT_Output_11"."Proba_7" > 0.0) THEN ln("DT_Output_11"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_11"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_11"."Proba_8" IS NULL OR "DT_Output_11"."Proba_8" > 0.0) THEN ln("DT_Output_11"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_11"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_11"."Proba_9" IS NULL OR "DT_Output_11"."Proba_9" > 0.0) THEN ln("DT_Output_11"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10) AS "Proba_9" 
FROM "DT_Output_11"), 
"DT_node_lookup_12" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_30 <= -1.555469036102295) THEN 1 ELSE 2 END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_12" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Proba_0" AS "Proba_0", "Values"."LogProba_0" AS "LogProba_0", "Values"."Proba_1" AS "Proba_1", "Values"."LogProba_1" AS "LogProba_1", "Values"."Proba_2" AS "Proba_2", "Values"."LogProba_2" AS "LogProba_2", "Values"."Proba_3" AS "Proba_3", "Values"."LogProba_3" AS "LogProba_3", "Values"."Proba_4" AS "Proba_4", "Values"."LogProba_4" AS "LogProba_4", "Values"."Proba_5" AS "Proba_5", "Values"."LogProba_5" AS "LogProba_5", "Values"."Proba_6" AS "Proba_6", "Values"."LogProba_6" AS "LogProba_6", "Values"."Proba_7" AS "Proba_7", "Values"."LogProba_7" AS "LogProba_7", "Values"."Proba_8" AS "Proba_8", "Values"."LogProba_8" AS "LogProba_8", "Values"."Proba_9" AS "Proba_9", "Values"."LogProba_9" AS "LogProba_9", "Values"."Decision" AS "Decision", "Values"."DecisionProba" AS "DecisionProba" 
FROM (SELECT 1 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 246 AS count, 1 AS depth, 0 AS parent_id, 0.9974114009784684 AS "Proba_0", -0.00259195523716 AS "LogProba_0", 0.00032357490911596673 AS "Proba_1", -8.03607991251 AS "LogProba_1", 0.00032357473260143956 AS "Proba_2", -8.03608045802 AS "LogProba_2", 0.0003235749119121244 AS "Proba_3", -8.03607990387 AS "LogProba_3", 0.0003235748234614355 AS "Proba_4", -8.03608017722 AS "LogProba_4", 0.00032357491165777854 AS "Proba_5", -8.03607990466 AS "LogProba_5", 0.0003235749117547417 AS "Proba_6", -8.03607990436 AS "LogProba_6", 0.00032357490911596505 AS "Proba_7", -8.03607991251 AS "LogProba_7", 0.0 AS "Proba_8", -BINARY_FLOAT_INFINITY AS "LogProba_8", 0.0003235749119121246 AS "Proba_9", -8.03607990387 AS "LogProba_9", 0 AS "Decision", 0.997411400978 AS "DecisionProba" FROM DUAL UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1191 AS count, 1 AS depth, 0 AS parent_id, 4.160682904670297e-10 AS "Proba_0", -21.6001717094 AS "LogProba_0", 0.11110710446327614 AS "Proba_1", -2.19726063782 AS "LogProba_1", 0.1111071048990142 AS "Proba_2", -2.1972606339 AS "LogProba_2", 0.11110710487903343 AS "Proba_3", -2.19726063407 AS "LogProba_3", 0.11110710488888965 AS "Proba_4", -2.19726063399 AS "LogProba_4", 0.11110710487906117 AS "Proba_5", -2.19726063407 AS "LogProba_5", 0.11110710487905048 AS "Proba_6", -2.19726063407 AS "LogProba_6", 0.11110710446327651 AS "Proba_7", -2.19726063782 AS "LogProba_7", 0.11114316135329703 AS "Proba_8", -2.19693616675 AS "LogProba_8", 0.11110710487903303 AS "Proba_9", -2.19726063407 AS "LogProba_9", 8 AS "Decision", 0.111143161353 AS "DecisionProba" FROM DUAL) "Values"), 
"DT_Output_12" AS 
(SELECT "DT_node_lookup_12"."KEY" AS "KEY", "DT_node_lookup_12".node_id_2 AS node_id_2, "DT_node_data_12".node_id AS node_id, "DT_node_data_12".feature AS feature, "DT_node_data_12".threshold AS threshold, "DT_node_data_12".count AS count, "DT_node_data_12".depth AS depth, "DT_node_data_12".parent_id AS parent_id, "DT_node_data_12"."Proba_0" AS "Proba_0", "DT_node_data_12"."LogProba_0" AS "LogProba_0", "DT_node_data_12"."Proba_1" AS "Proba_1", "DT_node_data_12"."LogProba_1" AS "LogProba_1", "DT_node_data_12"."Proba_2" AS "Proba_2", "DT_node_data_12"."LogProba_2" AS "LogProba_2", "DT_node_data_12"."Proba_3" AS "Proba_3", "DT_node_data_12"."LogProba_3" AS "LogProba_3", "DT_node_data_12"."Proba_4" AS "Proba_4", "DT_node_data_12"."LogProba_4" AS "LogProba_4", "DT_node_data_12"."Proba_5" AS "Proba_5", "DT_node_data_12"."LogProba_5" AS "LogProba_5", "DT_node_data_12"."Proba_6" AS "Proba_6", "DT_node_data_12"."LogProba_6" AS "LogProba_6", "DT_node_data_12"."Proba_7" AS "Proba_7", "DT_node_data_12"."LogProba_7" AS "LogProba_7", "DT_node_data_12"."Proba_8" AS "Proba_8", "DT_node_data_12"."LogProba_8" AS "LogProba_8", "DT_node_data_12"."Proba_9" AS "Proba_9", "DT_node_data_12"."LogProba_9" AS "LogProba_9", "DT_node_data_12"."Decision" AS "Decision", "DT_node_data_12"."DecisionProba" AS "DecisionProba" 
FROM "DT_node_lookup_12" LEFT OUTER JOIN "DT_node_data_12" ON "DT_node_lookup_12".node_id_2 = "DT_node_data_12".node_id), 
"AdaBoost_Estim_12" AS 
(SELECT "DT_Output_12"."KEY" AS "KEY", (9.0 * (CASE WHEN ("DT_Output_12"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_12"."Proba_0" IS NULL OR "DT_Output_12"."Proba_0" > 0.0) THEN ln("DT_Output_12"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_12"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_12"."Proba_0" IS NULL OR "DT_Output_12"."Proba_0" > 0.0) THEN ln("DT_Output_12"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_12"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_12"."Proba_1" IS NULL OR "DT_Output_12"."Proba_1" > 0.0) THEN ln("DT_Output_12"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_12"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_12"."Proba_2" IS NULL OR "DT_Output_12"."Proba_2" > 0.0) THEN ln("DT_Output_12"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_12"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_12"."Proba_3" IS NULL OR "DT_Output_12"."Proba_3" > 0.0) THEN ln("DT_Output_12"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_12"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_12"."Proba_4" IS NULL OR "DT_Output_12"."Proba_4" > 0.0) THEN ln("DT_Output_12"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_12"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_12"."Proba_5" IS NULL OR "DT_Output_12"."Proba_5" > 0.0) THEN ln("DT_Output_12"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_12"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_12"."Proba_6" IS NULL OR "DT_Output_12"."Proba_6" > 0.0) THEN ln("DT_Output_12"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_12"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_12"."Proba_7" IS NULL OR "DT_Output_12"."Proba_7" > 0.0) THEN ln("DT_Output_12"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_12"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_12"."Proba_8" IS NULL OR "DT_Output_12"."Proba_8" > 0.0) THEN ln("DT_Output_12"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_12"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_12"."Proba_9" IS NULL OR "DT_Output_12"."Proba_9" > 0.0) THEN ln("DT_Output_12"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10)) / 32.0 AS "Score_0", 9.0 * (CASE WHEN ("DT_Output_12"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_12"."Proba_0" IS NULL OR "DT_Output_12"."Proba_0" > 0.0) THEN ln("DT_Output_12"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_12"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_12"."Proba_0" IS NULL OR "DT_Output_12"."Proba_0" > 0.0) THEN ln("DT_Output_12"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_12"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_12"."Proba_1" IS NULL OR "DT_Output_12"."Proba_1" > 0.0) THEN ln("DT_Output_12"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_12"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_12"."Proba_2" IS NULL OR "DT_Output_12"."Proba_2" > 0.0) THEN ln("DT_Output_12"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_12"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_12"."Proba_3" IS NULL OR "DT_Output_12"."Proba_3" > 0.0) THEN ln("DT_Output_12"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_12"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_12"."Proba_4" IS NULL OR "DT_Output_12"."Proba_4" > 0.0) THEN ln("DT_Output_12"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_12"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_12"."Proba_5" IS NULL OR "DT_Output_12"."Proba_5" > 0.0) THEN ln("DT_Output_12"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_12"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_12"."Proba_6" IS NULL OR "DT_Output_12"."Proba_6" > 0.0) THEN ln("DT_Output_12"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_12"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_12"."Proba_7" IS NULL OR "DT_Output_12"."Proba_7" > 0.0) THEN ln("DT_Output_12"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_12"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_12"."Proba_8" IS NULL OR "DT_Output_12"."Proba_8" > 0.0) THEN ln("DT_Output_12"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_12"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_12"."Proba_9" IS NULL OR "DT_Output_12"."Proba_9" > 0.0) THEN ln("DT_Output_12"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10) AS "Proba_0", (9.0 * (CASE WHEN ("DT_Output_12"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_12"."Proba_1" IS NULL OR "DT_Output_12"."Proba_1" > 0.0) THEN ln("DT_Output_12"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_12"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_12"."Proba_0" IS NULL OR "DT_Output_12"."Proba_0" > 0.0) THEN ln("DT_Output_12"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_12"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_12"."Proba_1" IS NULL OR "DT_Output_12"."Proba_1" > 0.0) THEN ln("DT_Output_12"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_12"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_12"."Proba_2" IS NULL OR "DT_Output_12"."Proba_2" > 0.0) THEN ln("DT_Output_12"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_12"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_12"."Proba_3" IS NULL OR "DT_Output_12"."Proba_3" > 0.0) THEN ln("DT_Output_12"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_12"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_12"."Proba_4" IS NULL OR "DT_Output_12"."Proba_4" > 0.0) THEN ln("DT_Output_12"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_12"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_12"."Proba_5" IS NULL OR "DT_Output_12"."Proba_5" > 0.0) THEN ln("DT_Output_12"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_12"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_12"."Proba_6" IS NULL OR "DT_Output_12"."Proba_6" > 0.0) THEN ln("DT_Output_12"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_12"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_12"."Proba_7" IS NULL OR "DT_Output_12"."Proba_7" > 0.0) THEN ln("DT_Output_12"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_12"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_12"."Proba_8" IS NULL OR "DT_Output_12"."Proba_8" > 0.0) THEN ln("DT_Output_12"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_12"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_12"."Proba_9" IS NULL OR "DT_Output_12"."Proba_9" > 0.0) THEN ln("DT_Output_12"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10)) / 32.0 AS "Score_1", 9.0 * (CASE WHEN ("DT_Output_12"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_12"."Proba_1" IS NULL OR "DT_Output_12"."Proba_1" > 0.0) THEN ln("DT_Output_12"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_12"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_12"."Proba_0" IS NULL OR "DT_Output_12"."Proba_0" > 0.0) THEN ln("DT_Output_12"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_12"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_12"."Proba_1" IS NULL OR "DT_Output_12"."Proba_1" > 0.0) THEN ln("DT_Output_12"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_12"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_12"."Proba_2" IS NULL OR "DT_Output_12"."Proba_2" > 0.0) THEN ln("DT_Output_12"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_12"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_12"."Proba_3" IS NULL OR "DT_Output_12"."Proba_3" > 0.0) THEN ln("DT_Output_12"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_12"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_12"."Proba_4" IS NULL OR "DT_Output_12"."Proba_4" > 0.0) THEN ln("DT_Output_12"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_12"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_12"."Proba_5" IS NULL OR "DT_Output_12"."Proba_5" > 0.0) THEN ln("DT_Output_12"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_12"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_12"."Proba_6" IS NULL OR "DT_Output_12"."Proba_6" > 0.0) THEN ln("DT_Output_12"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_12"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_12"."Proba_7" IS NULL OR "DT_Output_12"."Proba_7" > 0.0) THEN ln("DT_Output_12"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_12"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_12"."Proba_8" IS NULL OR "DT_Output_12"."Proba_8" > 0.0) THEN ln("DT_Output_12"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_12"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_12"."Proba_9" IS NULL OR "DT_Output_12"."Proba_9" > 0.0) THEN ln("DT_Output_12"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10) AS "Proba_1", (9.0 * (CASE WHEN ("DT_Output_12"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_12"."Proba_2" IS NULL OR "DT_Output_12"."Proba_2" > 0.0) THEN ln("DT_Output_12"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_12"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_12"."Proba_0" IS NULL OR "DT_Output_12"."Proba_0" > 0.0) THEN ln("DT_Output_12"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_12"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_12"."Proba_1" IS NULL OR "DT_Output_12"."Proba_1" > 0.0) THEN ln("DT_Output_12"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_12"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_12"."Proba_2" IS NULL OR "DT_Output_12"."Proba_2" > 0.0) THEN ln("DT_Output_12"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_12"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_12"."Proba_3" IS NULL OR "DT_Output_12"."Proba_3" > 0.0) THEN ln("DT_Output_12"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_12"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_12"."Proba_4" IS NULL OR "DT_Output_12"."Proba_4" > 0.0) THEN ln("DT_Output_12"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_12"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_12"."Proba_5" IS NULL OR "DT_Output_12"."Proba_5" > 0.0) THEN ln("DT_Output_12"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_12"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_12"."Proba_6" IS NULL OR "DT_Output_12"."Proba_6" > 0.0) THEN ln("DT_Output_12"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_12"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_12"."Proba_7" IS NULL OR "DT_Output_12"."Proba_7" > 0.0) THEN ln("DT_Output_12"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_12"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_12"."Proba_8" IS NULL OR "DT_Output_12"."Proba_8" > 0.0) THEN ln("DT_Output_12"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_12"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_12"."Proba_9" IS NULL OR "DT_Output_12"."Proba_9" > 0.0) THEN ln("DT_Output_12"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10)) / 32.0 AS "Score_2", 9.0 * (CASE WHEN ("DT_Output_12"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_12"."Proba_2" IS NULL OR "DT_Output_12"."Proba_2" > 0.0) THEN ln("DT_Output_12"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_12"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_12"."Proba_0" IS NULL OR "DT_Output_12"."Proba_0" > 0.0) THEN ln("DT_Output_12"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_12"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_12"."Proba_1" IS NULL OR "DT_Output_12"."Proba_1" > 0.0) THEN ln("DT_Output_12"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_12"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_12"."Proba_2" IS NULL OR "DT_Output_12"."Proba_2" > 0.0) THEN ln("DT_Output_12"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_12"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_12"."Proba_3" IS NULL OR "DT_Output_12"."Proba_3" > 0.0) THEN ln("DT_Output_12"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_12"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_12"."Proba_4" IS NULL OR "DT_Output_12"."Proba_4" > 0.0) THEN ln("DT_Output_12"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_12"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_12"."Proba_5" IS NULL OR "DT_Output_12"."Proba_5" > 0.0) THEN ln("DT_Output_12"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_12"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_12"."Proba_6" IS NULL OR "DT_Output_12"."Proba_6" > 0.0) THEN ln("DT_Output_12"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_12"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_12"."Proba_7" IS NULL OR "DT_Output_12"."Proba_7" > 0.0) THEN ln("DT_Output_12"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_12"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_12"."Proba_8" IS NULL OR "DT_Output_12"."Proba_8" > 0.0) THEN ln("DT_Output_12"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_12"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_12"."Proba_9" IS NULL OR "DT_Output_12"."Proba_9" > 0.0) THEN ln("DT_Output_12"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10) AS "Proba_2", (9.0 * (CASE WHEN ("DT_Output_12"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_12"."Proba_3" IS NULL OR "DT_Output_12"."Proba_3" > 0.0) THEN ln("DT_Output_12"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_12"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_12"."Proba_0" IS NULL OR "DT_Output_12"."Proba_0" > 0.0) THEN ln("DT_Output_12"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_12"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_12"."Proba_1" IS NULL OR "DT_Output_12"."Proba_1" > 0.0) THEN ln("DT_Output_12"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_12"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_12"."Proba_2" IS NULL OR "DT_Output_12"."Proba_2" > 0.0) THEN ln("DT_Output_12"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_12"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_12"."Proba_3" IS NULL OR "DT_Output_12"."Proba_3" > 0.0) THEN ln("DT_Output_12"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_12"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_12"."Proba_4" IS NULL OR "DT_Output_12"."Proba_4" > 0.0) THEN ln("DT_Output_12"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_12"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_12"."Proba_5" IS NULL OR "DT_Output_12"."Proba_5" > 0.0) THEN ln("DT_Output_12"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_12"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_12"."Proba_6" IS NULL OR "DT_Output_12"."Proba_6" > 0.0) THEN ln("DT_Output_12"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_12"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_12"."Proba_7" IS NULL OR "DT_Output_12"."Proba_7" > 0.0) THEN ln("DT_Output_12"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_12"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_12"."Proba_8" IS NULL OR "DT_Output_12"."Proba_8" > 0.0) THEN ln("DT_Output_12"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_12"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_12"."Proba_9" IS NULL OR "DT_Output_12"."Proba_9" > 0.0) THEN ln("DT_Output_12"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10)) / 32.0 AS "Score_3", 9.0 * (CASE WHEN ("DT_Output_12"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_12"."Proba_3" IS NULL OR "DT_Output_12"."Proba_3" > 0.0) THEN ln("DT_Output_12"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_12"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_12"."Proba_0" IS NULL OR "DT_Output_12"."Proba_0" > 0.0) THEN ln("DT_Output_12"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_12"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_12"."Proba_1" IS NULL OR "DT_Output_12"."Proba_1" > 0.0) THEN ln("DT_Output_12"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_12"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_12"."Proba_2" IS NULL OR "DT_Output_12"."Proba_2" > 0.0) THEN ln("DT_Output_12"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_12"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_12"."Proba_3" IS NULL OR "DT_Output_12"."Proba_3" > 0.0) THEN ln("DT_Output_12"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_12"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_12"."Proba_4" IS NULL OR "DT_Output_12"."Proba_4" > 0.0) THEN ln("DT_Output_12"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_12"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_12"."Proba_5" IS NULL OR "DT_Output_12"."Proba_5" > 0.0) THEN ln("DT_Output_12"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_12"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_12"."Proba_6" IS NULL OR "DT_Output_12"."Proba_6" > 0.0) THEN ln("DT_Output_12"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_12"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_12"."Proba_7" IS NULL OR "DT_Output_12"."Proba_7" > 0.0) THEN ln("DT_Output_12"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_12"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_12"."Proba_8" IS NULL OR "DT_Output_12"."Proba_8" > 0.0) THEN ln("DT_Output_12"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_12"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_12"."Proba_9" IS NULL OR "DT_Output_12"."Proba_9" > 0.0) THEN ln("DT_Output_12"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10) AS "Proba_3", (9.0 * (CASE WHEN ("DT_Output_12"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_12"."Proba_4" IS NULL OR "DT_Output_12"."Proba_4" > 0.0) THEN ln("DT_Output_12"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_12"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_12"."Proba_0" IS NULL OR "DT_Output_12"."Proba_0" > 0.0) THEN ln("DT_Output_12"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_12"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_12"."Proba_1" IS NULL OR "DT_Output_12"."Proba_1" > 0.0) THEN ln("DT_Output_12"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_12"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_12"."Proba_2" IS NULL OR "DT_Output_12"."Proba_2" > 0.0) THEN ln("DT_Output_12"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_12"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_12"."Proba_3" IS NULL OR "DT_Output_12"."Proba_3" > 0.0) THEN ln("DT_Output_12"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_12"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_12"."Proba_4" IS NULL OR "DT_Output_12"."Proba_4" > 0.0) THEN ln("DT_Output_12"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_12"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_12"."Proba_5" IS NULL OR "DT_Output_12"."Proba_5" > 0.0) THEN ln("DT_Output_12"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_12"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_12"."Proba_6" IS NULL OR "DT_Output_12"."Proba_6" > 0.0) THEN ln("DT_Output_12"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_12"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_12"."Proba_7" IS NULL OR "DT_Output_12"."Proba_7" > 0.0) THEN ln("DT_Output_12"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_12"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_12"."Proba_8" IS NULL OR "DT_Output_12"."Proba_8" > 0.0) THEN ln("DT_Output_12"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_12"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_12"."Proba_9" IS NULL OR "DT_Output_12"."Proba_9" > 0.0) THEN ln("DT_Output_12"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10)) / 32.0 AS "Score_4", 9.0 * (CASE WHEN ("DT_Output_12"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_12"."Proba_4" IS NULL OR "DT_Output_12"."Proba_4" > 0.0) THEN ln("DT_Output_12"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_12"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_12"."Proba_0" IS NULL OR "DT_Output_12"."Proba_0" > 0.0) THEN ln("DT_Output_12"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_12"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_12"."Proba_1" IS NULL OR "DT_Output_12"."Proba_1" > 0.0) THEN ln("DT_Output_12"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_12"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_12"."Proba_2" IS NULL OR "DT_Output_12"."Proba_2" > 0.0) THEN ln("DT_Output_12"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_12"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_12"."Proba_3" IS NULL OR "DT_Output_12"."Proba_3" > 0.0) THEN ln("DT_Output_12"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_12"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_12"."Proba_4" IS NULL OR "DT_Output_12"."Proba_4" > 0.0) THEN ln("DT_Output_12"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_12"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_12"."Proba_5" IS NULL OR "DT_Output_12"."Proba_5" > 0.0) THEN ln("DT_Output_12"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_12"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_12"."Proba_6" IS NULL OR "DT_Output_12"."Proba_6" > 0.0) THEN ln("DT_Output_12"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_12"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_12"."Proba_7" IS NULL OR "DT_Output_12"."Proba_7" > 0.0) THEN ln("DT_Output_12"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_12"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_12"."Proba_8" IS NULL OR "DT_Output_12"."Proba_8" > 0.0) THEN ln("DT_Output_12"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_12"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_12"."Proba_9" IS NULL OR "DT_Output_12"."Proba_9" > 0.0) THEN ln("DT_Output_12"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10) AS "Proba_4", (9.0 * (CASE WHEN ("DT_Output_12"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_12"."Proba_5" IS NULL OR "DT_Output_12"."Proba_5" > 0.0) THEN ln("DT_Output_12"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_12"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_12"."Proba_0" IS NULL OR "DT_Output_12"."Proba_0" > 0.0) THEN ln("DT_Output_12"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_12"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_12"."Proba_1" IS NULL OR "DT_Output_12"."Proba_1" > 0.0) THEN ln("DT_Output_12"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_12"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_12"."Proba_2" IS NULL OR "DT_Output_12"."Proba_2" > 0.0) THEN ln("DT_Output_12"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_12"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_12"."Proba_3" IS NULL OR "DT_Output_12"."Proba_3" > 0.0) THEN ln("DT_Output_12"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_12"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_12"."Proba_4" IS NULL OR "DT_Output_12"."Proba_4" > 0.0) THEN ln("DT_Output_12"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_12"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_12"."Proba_5" IS NULL OR "DT_Output_12"."Proba_5" > 0.0) THEN ln("DT_Output_12"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_12"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_12"."Proba_6" IS NULL OR "DT_Output_12"."Proba_6" > 0.0) THEN ln("DT_Output_12"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_12"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_12"."Proba_7" IS NULL OR "DT_Output_12"."Proba_7" > 0.0) THEN ln("DT_Output_12"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_12"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_12"."Proba_8" IS NULL OR "DT_Output_12"."Proba_8" > 0.0) THEN ln("DT_Output_12"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_12"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_12"."Proba_9" IS NULL OR "DT_Output_12"."Proba_9" > 0.0) THEN ln("DT_Output_12"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10)) / 32.0 AS "Score_5", 9.0 * (CASE WHEN ("DT_Output_12"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_12"."Proba_5" IS NULL OR "DT_Output_12"."Proba_5" > 0.0) THEN ln("DT_Output_12"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_12"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_12"."Proba_0" IS NULL OR "DT_Output_12"."Proba_0" > 0.0) THEN ln("DT_Output_12"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_12"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_12"."Proba_1" IS NULL OR "DT_Output_12"."Proba_1" > 0.0) THEN ln("DT_Output_12"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_12"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_12"."Proba_2" IS NULL OR "DT_Output_12"."Proba_2" > 0.0) THEN ln("DT_Output_12"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_12"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_12"."Proba_3" IS NULL OR "DT_Output_12"."Proba_3" > 0.0) THEN ln("DT_Output_12"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_12"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_12"."Proba_4" IS NULL OR "DT_Output_12"."Proba_4" > 0.0) THEN ln("DT_Output_12"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_12"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_12"."Proba_5" IS NULL OR "DT_Output_12"."Proba_5" > 0.0) THEN ln("DT_Output_12"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_12"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_12"."Proba_6" IS NULL OR "DT_Output_12"."Proba_6" > 0.0) THEN ln("DT_Output_12"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_12"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_12"."Proba_7" IS NULL OR "DT_Output_12"."Proba_7" > 0.0) THEN ln("DT_Output_12"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_12"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_12"."Proba_8" IS NULL OR "DT_Output_12"."Proba_8" > 0.0) THEN ln("DT_Output_12"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_12"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_12"."Proba_9" IS NULL OR "DT_Output_12"."Proba_9" > 0.0) THEN ln("DT_Output_12"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10) AS "Proba_5", (9.0 * (CASE WHEN ("DT_Output_12"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_12"."Proba_6" IS NULL OR "DT_Output_12"."Proba_6" > 0.0) THEN ln("DT_Output_12"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_12"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_12"."Proba_0" IS NULL OR "DT_Output_12"."Proba_0" > 0.0) THEN ln("DT_Output_12"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_12"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_12"."Proba_1" IS NULL OR "DT_Output_12"."Proba_1" > 0.0) THEN ln("DT_Output_12"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_12"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_12"."Proba_2" IS NULL OR "DT_Output_12"."Proba_2" > 0.0) THEN ln("DT_Output_12"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_12"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_12"."Proba_3" IS NULL OR "DT_Output_12"."Proba_3" > 0.0) THEN ln("DT_Output_12"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_12"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_12"."Proba_4" IS NULL OR "DT_Output_12"."Proba_4" > 0.0) THEN ln("DT_Output_12"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_12"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_12"."Proba_5" IS NULL OR "DT_Output_12"."Proba_5" > 0.0) THEN ln("DT_Output_12"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_12"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_12"."Proba_6" IS NULL OR "DT_Output_12"."Proba_6" > 0.0) THEN ln("DT_Output_12"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_12"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_12"."Proba_7" IS NULL OR "DT_Output_12"."Proba_7" > 0.0) THEN ln("DT_Output_12"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_12"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_12"."Proba_8" IS NULL OR "DT_Output_12"."Proba_8" > 0.0) THEN ln("DT_Output_12"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_12"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_12"."Proba_9" IS NULL OR "DT_Output_12"."Proba_9" > 0.0) THEN ln("DT_Output_12"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10)) / 32.0 AS "Score_6", 9.0 * (CASE WHEN ("DT_Output_12"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_12"."Proba_6" IS NULL OR "DT_Output_12"."Proba_6" > 0.0) THEN ln("DT_Output_12"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_12"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_12"."Proba_0" IS NULL OR "DT_Output_12"."Proba_0" > 0.0) THEN ln("DT_Output_12"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_12"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_12"."Proba_1" IS NULL OR "DT_Output_12"."Proba_1" > 0.0) THEN ln("DT_Output_12"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_12"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_12"."Proba_2" IS NULL OR "DT_Output_12"."Proba_2" > 0.0) THEN ln("DT_Output_12"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_12"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_12"."Proba_3" IS NULL OR "DT_Output_12"."Proba_3" > 0.0) THEN ln("DT_Output_12"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_12"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_12"."Proba_4" IS NULL OR "DT_Output_12"."Proba_4" > 0.0) THEN ln("DT_Output_12"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_12"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_12"."Proba_5" IS NULL OR "DT_Output_12"."Proba_5" > 0.0) THEN ln("DT_Output_12"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_12"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_12"."Proba_6" IS NULL OR "DT_Output_12"."Proba_6" > 0.0) THEN ln("DT_Output_12"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_12"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_12"."Proba_7" IS NULL OR "DT_Output_12"."Proba_7" > 0.0) THEN ln("DT_Output_12"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_12"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_12"."Proba_8" IS NULL OR "DT_Output_12"."Proba_8" > 0.0) THEN ln("DT_Output_12"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_12"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_12"."Proba_9" IS NULL OR "DT_Output_12"."Proba_9" > 0.0) THEN ln("DT_Output_12"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10) AS "Proba_6", (9.0 * (CASE WHEN ("DT_Output_12"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_12"."Proba_7" IS NULL OR "DT_Output_12"."Proba_7" > 0.0) THEN ln("DT_Output_12"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_12"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_12"."Proba_0" IS NULL OR "DT_Output_12"."Proba_0" > 0.0) THEN ln("DT_Output_12"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_12"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_12"."Proba_1" IS NULL OR "DT_Output_12"."Proba_1" > 0.0) THEN ln("DT_Output_12"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_12"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_12"."Proba_2" IS NULL OR "DT_Output_12"."Proba_2" > 0.0) THEN ln("DT_Output_12"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_12"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_12"."Proba_3" IS NULL OR "DT_Output_12"."Proba_3" > 0.0) THEN ln("DT_Output_12"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_12"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_12"."Proba_4" IS NULL OR "DT_Output_12"."Proba_4" > 0.0) THEN ln("DT_Output_12"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_12"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_12"."Proba_5" IS NULL OR "DT_Output_12"."Proba_5" > 0.0) THEN ln("DT_Output_12"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_12"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_12"."Proba_6" IS NULL OR "DT_Output_12"."Proba_6" > 0.0) THEN ln("DT_Output_12"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_12"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_12"."Proba_7" IS NULL OR "DT_Output_12"."Proba_7" > 0.0) THEN ln("DT_Output_12"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_12"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_12"."Proba_8" IS NULL OR "DT_Output_12"."Proba_8" > 0.0) THEN ln("DT_Output_12"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_12"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_12"."Proba_9" IS NULL OR "DT_Output_12"."Proba_9" > 0.0) THEN ln("DT_Output_12"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10)) / 32.0 AS "Score_7", 9.0 * (CASE WHEN ("DT_Output_12"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_12"."Proba_7" IS NULL OR "DT_Output_12"."Proba_7" > 0.0) THEN ln("DT_Output_12"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_12"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_12"."Proba_0" IS NULL OR "DT_Output_12"."Proba_0" > 0.0) THEN ln("DT_Output_12"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_12"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_12"."Proba_1" IS NULL OR "DT_Output_12"."Proba_1" > 0.0) THEN ln("DT_Output_12"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_12"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_12"."Proba_2" IS NULL OR "DT_Output_12"."Proba_2" > 0.0) THEN ln("DT_Output_12"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_12"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_12"."Proba_3" IS NULL OR "DT_Output_12"."Proba_3" > 0.0) THEN ln("DT_Output_12"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_12"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_12"."Proba_4" IS NULL OR "DT_Output_12"."Proba_4" > 0.0) THEN ln("DT_Output_12"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_12"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_12"."Proba_5" IS NULL OR "DT_Output_12"."Proba_5" > 0.0) THEN ln("DT_Output_12"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_12"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_12"."Proba_6" IS NULL OR "DT_Output_12"."Proba_6" > 0.0) THEN ln("DT_Output_12"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_12"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_12"."Proba_7" IS NULL OR "DT_Output_12"."Proba_7" > 0.0) THEN ln("DT_Output_12"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_12"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_12"."Proba_8" IS NULL OR "DT_Output_12"."Proba_8" > 0.0) THEN ln("DT_Output_12"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_12"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_12"."Proba_9" IS NULL OR "DT_Output_12"."Proba_9" > 0.0) THEN ln("DT_Output_12"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10) AS "Proba_7", (9.0 * (CASE WHEN ("DT_Output_12"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_12"."Proba_8" IS NULL OR "DT_Output_12"."Proba_8" > 0.0) THEN ln("DT_Output_12"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_12"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_12"."Proba_0" IS NULL OR "DT_Output_12"."Proba_0" > 0.0) THEN ln("DT_Output_12"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_12"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_12"."Proba_1" IS NULL OR "DT_Output_12"."Proba_1" > 0.0) THEN ln("DT_Output_12"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_12"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_12"."Proba_2" IS NULL OR "DT_Output_12"."Proba_2" > 0.0) THEN ln("DT_Output_12"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_12"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_12"."Proba_3" IS NULL OR "DT_Output_12"."Proba_3" > 0.0) THEN ln("DT_Output_12"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_12"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_12"."Proba_4" IS NULL OR "DT_Output_12"."Proba_4" > 0.0) THEN ln("DT_Output_12"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_12"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_12"."Proba_5" IS NULL OR "DT_Output_12"."Proba_5" > 0.0) THEN ln("DT_Output_12"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_12"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_12"."Proba_6" IS NULL OR "DT_Output_12"."Proba_6" > 0.0) THEN ln("DT_Output_12"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_12"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_12"."Proba_7" IS NULL OR "DT_Output_12"."Proba_7" > 0.0) THEN ln("DT_Output_12"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_12"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_12"."Proba_8" IS NULL OR "DT_Output_12"."Proba_8" > 0.0) THEN ln("DT_Output_12"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_12"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_12"."Proba_9" IS NULL OR "DT_Output_12"."Proba_9" > 0.0) THEN ln("DT_Output_12"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10)) / 32.0 AS "Score_8", 9.0 * (CASE WHEN ("DT_Output_12"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_12"."Proba_8" IS NULL OR "DT_Output_12"."Proba_8" > 0.0) THEN ln("DT_Output_12"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_12"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_12"."Proba_0" IS NULL OR "DT_Output_12"."Proba_0" > 0.0) THEN ln("DT_Output_12"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_12"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_12"."Proba_1" IS NULL OR "DT_Output_12"."Proba_1" > 0.0) THEN ln("DT_Output_12"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_12"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_12"."Proba_2" IS NULL OR "DT_Output_12"."Proba_2" > 0.0) THEN ln("DT_Output_12"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_12"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_12"."Proba_3" IS NULL OR "DT_Output_12"."Proba_3" > 0.0) THEN ln("DT_Output_12"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_12"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_12"."Proba_4" IS NULL OR "DT_Output_12"."Proba_4" > 0.0) THEN ln("DT_Output_12"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_12"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_12"."Proba_5" IS NULL OR "DT_Output_12"."Proba_5" > 0.0) THEN ln("DT_Output_12"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_12"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_12"."Proba_6" IS NULL OR "DT_Output_12"."Proba_6" > 0.0) THEN ln("DT_Output_12"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_12"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_12"."Proba_7" IS NULL OR "DT_Output_12"."Proba_7" > 0.0) THEN ln("DT_Output_12"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_12"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_12"."Proba_8" IS NULL OR "DT_Output_12"."Proba_8" > 0.0) THEN ln("DT_Output_12"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_12"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_12"."Proba_9" IS NULL OR "DT_Output_12"."Proba_9" > 0.0) THEN ln("DT_Output_12"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10) AS "Proba_8", (9.0 * (CASE WHEN ("DT_Output_12"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_12"."Proba_9" IS NULL OR "DT_Output_12"."Proba_9" > 0.0) THEN ln("DT_Output_12"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_12"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_12"."Proba_0" IS NULL OR "DT_Output_12"."Proba_0" > 0.0) THEN ln("DT_Output_12"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_12"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_12"."Proba_1" IS NULL OR "DT_Output_12"."Proba_1" > 0.0) THEN ln("DT_Output_12"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_12"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_12"."Proba_2" IS NULL OR "DT_Output_12"."Proba_2" > 0.0) THEN ln("DT_Output_12"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_12"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_12"."Proba_3" IS NULL OR "DT_Output_12"."Proba_3" > 0.0) THEN ln("DT_Output_12"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_12"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_12"."Proba_4" IS NULL OR "DT_Output_12"."Proba_4" > 0.0) THEN ln("DT_Output_12"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_12"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_12"."Proba_5" IS NULL OR "DT_Output_12"."Proba_5" > 0.0) THEN ln("DT_Output_12"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_12"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_12"."Proba_6" IS NULL OR "DT_Output_12"."Proba_6" > 0.0) THEN ln("DT_Output_12"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_12"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_12"."Proba_7" IS NULL OR "DT_Output_12"."Proba_7" > 0.0) THEN ln("DT_Output_12"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_12"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_12"."Proba_8" IS NULL OR "DT_Output_12"."Proba_8" > 0.0) THEN ln("DT_Output_12"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_12"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_12"."Proba_9" IS NULL OR "DT_Output_12"."Proba_9" > 0.0) THEN ln("DT_Output_12"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10)) / 32.0 AS "Score_9", 9.0 * (CASE WHEN ("DT_Output_12"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_12"."Proba_9" IS NULL OR "DT_Output_12"."Proba_9" > 0.0) THEN ln("DT_Output_12"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_12"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_12"."Proba_0" IS NULL OR "DT_Output_12"."Proba_0" > 0.0) THEN ln("DT_Output_12"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_12"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_12"."Proba_1" IS NULL OR "DT_Output_12"."Proba_1" > 0.0) THEN ln("DT_Output_12"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_12"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_12"."Proba_2" IS NULL OR "DT_Output_12"."Proba_2" > 0.0) THEN ln("DT_Output_12"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_12"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_12"."Proba_3" IS NULL OR "DT_Output_12"."Proba_3" > 0.0) THEN ln("DT_Output_12"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_12"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_12"."Proba_4" IS NULL OR "DT_Output_12"."Proba_4" > 0.0) THEN ln("DT_Output_12"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_12"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_12"."Proba_5" IS NULL OR "DT_Output_12"."Proba_5" > 0.0) THEN ln("DT_Output_12"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_12"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_12"."Proba_6" IS NULL OR "DT_Output_12"."Proba_6" > 0.0) THEN ln("DT_Output_12"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_12"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_12"."Proba_7" IS NULL OR "DT_Output_12"."Proba_7" > 0.0) THEN ln("DT_Output_12"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_12"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_12"."Proba_8" IS NULL OR "DT_Output_12"."Proba_8" > 0.0) THEN ln("DT_Output_12"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_12"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_12"."Proba_9" IS NULL OR "DT_Output_12"."Proba_9" > 0.0) THEN ln("DT_Output_12"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10) AS "Proba_9" 
FROM "DT_Output_12"), 
"DT_node_lookup_13" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_38 <= -1.6508052349090576) THEN 1 ELSE 2 END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_13" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Proba_0" AS "Proba_0", "Values"."LogProba_0" AS "LogProba_0", "Values"."Proba_1" AS "Proba_1", "Values"."LogProba_1" AS "LogProba_1", "Values"."Proba_2" AS "Proba_2", "Values"."LogProba_2" AS "LogProba_2", "Values"."Proba_3" AS "Proba_3", "Values"."LogProba_3" AS "LogProba_3", "Values"."Proba_4" AS "Proba_4", "Values"."LogProba_4" AS "LogProba_4", "Values"."Proba_5" AS "Proba_5", "Values"."LogProba_5" AS "LogProba_5", "Values"."Proba_6" AS "Proba_6", "Values"."LogProba_6" AS "LogProba_6", "Values"."Proba_7" AS "Proba_7", "Values"."LogProba_7" AS "LogProba_7", "Values"."Proba_8" AS "Proba_8", "Values"."LogProba_8" AS "LogProba_8", "Values"."Proba_9" AS "Proba_9", "Values"."LogProba_9" AS "LogProba_9", "Values"."Decision" AS "Decision", "Values"."DecisionProba" AS "DecisionProba" 
FROM (SELECT 1 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 219 AS count, 1 AS depth, 0 AS parent_id, 0.9999999737995056 AS "Proba_0", -2.62004947839e-08 AS "LogProba_0", 0.0 AS "Proba_1", -BINARY_FLOAT_INFINITY AS "LogProba_1", 3.7370186514914505e-09 AS "Proba_2", -19.4049776954 AS "LogProba_2", 3.744749537113962e-09 AS "Proba_3", -19.4029111015 AS "LogProba_3", 3.74096042979072e-09 AS "Proba_4", -19.4039234591 AS "LogProba_4", 3.7447387082028755e-09 AS "Proba_5", -19.4029139933 AS "LogProba_5", 3.744742836484096e-09 AS "Proba_6", -19.4029128908 AS "LogProba_6", 0.0 AS "Proba_7", -BINARY_FLOAT_INFINITY AS "LogProba_7", 3.743534685352828e-09 AS "Proba_8", -19.4032355688 AS "LogProba_8", 3.744749537113973e-09 AS "Proba_9", -19.4029111015 AS "LogProba_9", 0 AS "Decision", 0.9999999738 AS "DecisionProba" FROM DUAL UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1218 AS count, 1 AS depth, 0 AS parent_id, 3.4044417702480204e-05 AS "Proba_0", -10.2878444829 AS "LogProba_0", 0.11111111143447572 AS "Proba_1", -2.19722457443 AS "LogProba_1", 0.11111111101937769 AS "Proba_2", -2.19722457816 AS "LogProba_2", 0.11111111101851888 AS "Proba_3", -2.19722457817 AS "LogProba_3", 0.11111111101893975 AS "Proba_4", -2.19722457817 AS "LogProba_4", 0.11111111101852048 AS "Proba_5", -2.19722457817 AS "LogProba_5", 0.11111111101851978 AS "Proba_6", -2.19722457817 AS "LogProba_6", 0.11111111143447495 AS "Proba_7", -2.19722457443 AS "LogProba_7", 0.11107706660095135 AS "Proba_8", -2.19753102488 AS "LogProba_8", 0.11111111101851902 AS "Proba_9", -2.19722457817 AS "LogProba_9", 1 AS "Decision", 0.111111111434 AS "DecisionProba" FROM DUAL) "Values"), 
"DT_Output_13" AS 
(SELECT "DT_node_lookup_13"."KEY" AS "KEY", "DT_node_lookup_13".node_id_2 AS node_id_2, "DT_node_data_13".node_id AS node_id, "DT_node_data_13".feature AS feature, "DT_node_data_13".threshold AS threshold, "DT_node_data_13".count AS count, "DT_node_data_13".depth AS depth, "DT_node_data_13".parent_id AS parent_id, "DT_node_data_13"."Proba_0" AS "Proba_0", "DT_node_data_13"."LogProba_0" AS "LogProba_0", "DT_node_data_13"."Proba_1" AS "Proba_1", "DT_node_data_13"."LogProba_1" AS "LogProba_1", "DT_node_data_13"."Proba_2" AS "Proba_2", "DT_node_data_13"."LogProba_2" AS "LogProba_2", "DT_node_data_13"."Proba_3" AS "Proba_3", "DT_node_data_13"."LogProba_3" AS "LogProba_3", "DT_node_data_13"."Proba_4" AS "Proba_4", "DT_node_data_13"."LogProba_4" AS "LogProba_4", "DT_node_data_13"."Proba_5" AS "Proba_5", "DT_node_data_13"."LogProba_5" AS "LogProba_5", "DT_node_data_13"."Proba_6" AS "Proba_6", "DT_node_data_13"."LogProba_6" AS "LogProba_6", "DT_node_data_13"."Proba_7" AS "Proba_7", "DT_node_data_13"."LogProba_7" AS "LogProba_7", "DT_node_data_13"."Proba_8" AS "Proba_8", "DT_node_data_13"."LogProba_8" AS "LogProba_8", "DT_node_data_13"."Proba_9" AS "Proba_9", "DT_node_data_13"."LogProba_9" AS "LogProba_9", "DT_node_data_13"."Decision" AS "Decision", "DT_node_data_13"."DecisionProba" AS "DecisionProba" 
FROM "DT_node_lookup_13" LEFT OUTER JOIN "DT_node_data_13" ON "DT_node_lookup_13".node_id_2 = "DT_node_data_13".node_id), 
"AdaBoost_Estim_13" AS 
(SELECT "DT_Output_13"."KEY" AS "KEY", (9.0 * (CASE WHEN ("DT_Output_13"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_13"."Proba_0" IS NULL OR "DT_Output_13"."Proba_0" > 0.0) THEN ln("DT_Output_13"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_13"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_13"."Proba_0" IS NULL OR "DT_Output_13"."Proba_0" > 0.0) THEN ln("DT_Output_13"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_13"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_13"."Proba_1" IS NULL OR "DT_Output_13"."Proba_1" > 0.0) THEN ln("DT_Output_13"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_13"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_13"."Proba_2" IS NULL OR "DT_Output_13"."Proba_2" > 0.0) THEN ln("DT_Output_13"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_13"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_13"."Proba_3" IS NULL OR "DT_Output_13"."Proba_3" > 0.0) THEN ln("DT_Output_13"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_13"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_13"."Proba_4" IS NULL OR "DT_Output_13"."Proba_4" > 0.0) THEN ln("DT_Output_13"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_13"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_13"."Proba_5" IS NULL OR "DT_Output_13"."Proba_5" > 0.0) THEN ln("DT_Output_13"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_13"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_13"."Proba_6" IS NULL OR "DT_Output_13"."Proba_6" > 0.0) THEN ln("DT_Output_13"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_13"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_13"."Proba_7" IS NULL OR "DT_Output_13"."Proba_7" > 0.0) THEN ln("DT_Output_13"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_13"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_13"."Proba_8" IS NULL OR "DT_Output_13"."Proba_8" > 0.0) THEN ln("DT_Output_13"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_13"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_13"."Proba_9" IS NULL OR "DT_Output_13"."Proba_9" > 0.0) THEN ln("DT_Output_13"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10)) / 32.0 AS "Score_0", 9.0 * (CASE WHEN ("DT_Output_13"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_13"."Proba_0" IS NULL OR "DT_Output_13"."Proba_0" > 0.0) THEN ln("DT_Output_13"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_13"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_13"."Proba_0" IS NULL OR "DT_Output_13"."Proba_0" > 0.0) THEN ln("DT_Output_13"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_13"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_13"."Proba_1" IS NULL OR "DT_Output_13"."Proba_1" > 0.0) THEN ln("DT_Output_13"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_13"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_13"."Proba_2" IS NULL OR "DT_Output_13"."Proba_2" > 0.0) THEN ln("DT_Output_13"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_13"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_13"."Proba_3" IS NULL OR "DT_Output_13"."Proba_3" > 0.0) THEN ln("DT_Output_13"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_13"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_13"."Proba_4" IS NULL OR "DT_Output_13"."Proba_4" > 0.0) THEN ln("DT_Output_13"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_13"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_13"."Proba_5" IS NULL OR "DT_Output_13"."Proba_5" > 0.0) THEN ln("DT_Output_13"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_13"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_13"."Proba_6" IS NULL OR "DT_Output_13"."Proba_6" > 0.0) THEN ln("DT_Output_13"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_13"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_13"."Proba_7" IS NULL OR "DT_Output_13"."Proba_7" > 0.0) THEN ln("DT_Output_13"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_13"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_13"."Proba_8" IS NULL OR "DT_Output_13"."Proba_8" > 0.0) THEN ln("DT_Output_13"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_13"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_13"."Proba_9" IS NULL OR "DT_Output_13"."Proba_9" > 0.0) THEN ln("DT_Output_13"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10) AS "Proba_0", (9.0 * (CASE WHEN ("DT_Output_13"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_13"."Proba_1" IS NULL OR "DT_Output_13"."Proba_1" > 0.0) THEN ln("DT_Output_13"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_13"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_13"."Proba_0" IS NULL OR "DT_Output_13"."Proba_0" > 0.0) THEN ln("DT_Output_13"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_13"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_13"."Proba_1" IS NULL OR "DT_Output_13"."Proba_1" > 0.0) THEN ln("DT_Output_13"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_13"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_13"."Proba_2" IS NULL OR "DT_Output_13"."Proba_2" > 0.0) THEN ln("DT_Output_13"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_13"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_13"."Proba_3" IS NULL OR "DT_Output_13"."Proba_3" > 0.0) THEN ln("DT_Output_13"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_13"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_13"."Proba_4" IS NULL OR "DT_Output_13"."Proba_4" > 0.0) THEN ln("DT_Output_13"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_13"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_13"."Proba_5" IS NULL OR "DT_Output_13"."Proba_5" > 0.0) THEN ln("DT_Output_13"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_13"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_13"."Proba_6" IS NULL OR "DT_Output_13"."Proba_6" > 0.0) THEN ln("DT_Output_13"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_13"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_13"."Proba_7" IS NULL OR "DT_Output_13"."Proba_7" > 0.0) THEN ln("DT_Output_13"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_13"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_13"."Proba_8" IS NULL OR "DT_Output_13"."Proba_8" > 0.0) THEN ln("DT_Output_13"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_13"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_13"."Proba_9" IS NULL OR "DT_Output_13"."Proba_9" > 0.0) THEN ln("DT_Output_13"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10)) / 32.0 AS "Score_1", 9.0 * (CASE WHEN ("DT_Output_13"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_13"."Proba_1" IS NULL OR "DT_Output_13"."Proba_1" > 0.0) THEN ln("DT_Output_13"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_13"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_13"."Proba_0" IS NULL OR "DT_Output_13"."Proba_0" > 0.0) THEN ln("DT_Output_13"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_13"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_13"."Proba_1" IS NULL OR "DT_Output_13"."Proba_1" > 0.0) THEN ln("DT_Output_13"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_13"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_13"."Proba_2" IS NULL OR "DT_Output_13"."Proba_2" > 0.0) THEN ln("DT_Output_13"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_13"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_13"."Proba_3" IS NULL OR "DT_Output_13"."Proba_3" > 0.0) THEN ln("DT_Output_13"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_13"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_13"."Proba_4" IS NULL OR "DT_Output_13"."Proba_4" > 0.0) THEN ln("DT_Output_13"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_13"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_13"."Proba_5" IS NULL OR "DT_Output_13"."Proba_5" > 0.0) THEN ln("DT_Output_13"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_13"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_13"."Proba_6" IS NULL OR "DT_Output_13"."Proba_6" > 0.0) THEN ln("DT_Output_13"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_13"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_13"."Proba_7" IS NULL OR "DT_Output_13"."Proba_7" > 0.0) THEN ln("DT_Output_13"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_13"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_13"."Proba_8" IS NULL OR "DT_Output_13"."Proba_8" > 0.0) THEN ln("DT_Output_13"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_13"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_13"."Proba_9" IS NULL OR "DT_Output_13"."Proba_9" > 0.0) THEN ln("DT_Output_13"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10) AS "Proba_1", (9.0 * (CASE WHEN ("DT_Output_13"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_13"."Proba_2" IS NULL OR "DT_Output_13"."Proba_2" > 0.0) THEN ln("DT_Output_13"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_13"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_13"."Proba_0" IS NULL OR "DT_Output_13"."Proba_0" > 0.0) THEN ln("DT_Output_13"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_13"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_13"."Proba_1" IS NULL OR "DT_Output_13"."Proba_1" > 0.0) THEN ln("DT_Output_13"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_13"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_13"."Proba_2" IS NULL OR "DT_Output_13"."Proba_2" > 0.0) THEN ln("DT_Output_13"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_13"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_13"."Proba_3" IS NULL OR "DT_Output_13"."Proba_3" > 0.0) THEN ln("DT_Output_13"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_13"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_13"."Proba_4" IS NULL OR "DT_Output_13"."Proba_4" > 0.0) THEN ln("DT_Output_13"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_13"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_13"."Proba_5" IS NULL OR "DT_Output_13"."Proba_5" > 0.0) THEN ln("DT_Output_13"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_13"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_13"."Proba_6" IS NULL OR "DT_Output_13"."Proba_6" > 0.0) THEN ln("DT_Output_13"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_13"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_13"."Proba_7" IS NULL OR "DT_Output_13"."Proba_7" > 0.0) THEN ln("DT_Output_13"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_13"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_13"."Proba_8" IS NULL OR "DT_Output_13"."Proba_8" > 0.0) THEN ln("DT_Output_13"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_13"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_13"."Proba_9" IS NULL OR "DT_Output_13"."Proba_9" > 0.0) THEN ln("DT_Output_13"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10)) / 32.0 AS "Score_2", 9.0 * (CASE WHEN ("DT_Output_13"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_13"."Proba_2" IS NULL OR "DT_Output_13"."Proba_2" > 0.0) THEN ln("DT_Output_13"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_13"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_13"."Proba_0" IS NULL OR "DT_Output_13"."Proba_0" > 0.0) THEN ln("DT_Output_13"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_13"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_13"."Proba_1" IS NULL OR "DT_Output_13"."Proba_1" > 0.0) THEN ln("DT_Output_13"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_13"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_13"."Proba_2" IS NULL OR "DT_Output_13"."Proba_2" > 0.0) THEN ln("DT_Output_13"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_13"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_13"."Proba_3" IS NULL OR "DT_Output_13"."Proba_3" > 0.0) THEN ln("DT_Output_13"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_13"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_13"."Proba_4" IS NULL OR "DT_Output_13"."Proba_4" > 0.0) THEN ln("DT_Output_13"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_13"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_13"."Proba_5" IS NULL OR "DT_Output_13"."Proba_5" > 0.0) THEN ln("DT_Output_13"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_13"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_13"."Proba_6" IS NULL OR "DT_Output_13"."Proba_6" > 0.0) THEN ln("DT_Output_13"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_13"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_13"."Proba_7" IS NULL OR "DT_Output_13"."Proba_7" > 0.0) THEN ln("DT_Output_13"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_13"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_13"."Proba_8" IS NULL OR "DT_Output_13"."Proba_8" > 0.0) THEN ln("DT_Output_13"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_13"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_13"."Proba_9" IS NULL OR "DT_Output_13"."Proba_9" > 0.0) THEN ln("DT_Output_13"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10) AS "Proba_2", (9.0 * (CASE WHEN ("DT_Output_13"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_13"."Proba_3" IS NULL OR "DT_Output_13"."Proba_3" > 0.0) THEN ln("DT_Output_13"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_13"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_13"."Proba_0" IS NULL OR "DT_Output_13"."Proba_0" > 0.0) THEN ln("DT_Output_13"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_13"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_13"."Proba_1" IS NULL OR "DT_Output_13"."Proba_1" > 0.0) THEN ln("DT_Output_13"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_13"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_13"."Proba_2" IS NULL OR "DT_Output_13"."Proba_2" > 0.0) THEN ln("DT_Output_13"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_13"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_13"."Proba_3" IS NULL OR "DT_Output_13"."Proba_3" > 0.0) THEN ln("DT_Output_13"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_13"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_13"."Proba_4" IS NULL OR "DT_Output_13"."Proba_4" > 0.0) THEN ln("DT_Output_13"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_13"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_13"."Proba_5" IS NULL OR "DT_Output_13"."Proba_5" > 0.0) THEN ln("DT_Output_13"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_13"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_13"."Proba_6" IS NULL OR "DT_Output_13"."Proba_6" > 0.0) THEN ln("DT_Output_13"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_13"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_13"."Proba_7" IS NULL OR "DT_Output_13"."Proba_7" > 0.0) THEN ln("DT_Output_13"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_13"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_13"."Proba_8" IS NULL OR "DT_Output_13"."Proba_8" > 0.0) THEN ln("DT_Output_13"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_13"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_13"."Proba_9" IS NULL OR "DT_Output_13"."Proba_9" > 0.0) THEN ln("DT_Output_13"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10)) / 32.0 AS "Score_3", 9.0 * (CASE WHEN ("DT_Output_13"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_13"."Proba_3" IS NULL OR "DT_Output_13"."Proba_3" > 0.0) THEN ln("DT_Output_13"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_13"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_13"."Proba_0" IS NULL OR "DT_Output_13"."Proba_0" > 0.0) THEN ln("DT_Output_13"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_13"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_13"."Proba_1" IS NULL OR "DT_Output_13"."Proba_1" > 0.0) THEN ln("DT_Output_13"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_13"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_13"."Proba_2" IS NULL OR "DT_Output_13"."Proba_2" > 0.0) THEN ln("DT_Output_13"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_13"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_13"."Proba_3" IS NULL OR "DT_Output_13"."Proba_3" > 0.0) THEN ln("DT_Output_13"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_13"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_13"."Proba_4" IS NULL OR "DT_Output_13"."Proba_4" > 0.0) THEN ln("DT_Output_13"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_13"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_13"."Proba_5" IS NULL OR "DT_Output_13"."Proba_5" > 0.0) THEN ln("DT_Output_13"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_13"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_13"."Proba_6" IS NULL OR "DT_Output_13"."Proba_6" > 0.0) THEN ln("DT_Output_13"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_13"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_13"."Proba_7" IS NULL OR "DT_Output_13"."Proba_7" > 0.0) THEN ln("DT_Output_13"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_13"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_13"."Proba_8" IS NULL OR "DT_Output_13"."Proba_8" > 0.0) THEN ln("DT_Output_13"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_13"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_13"."Proba_9" IS NULL OR "DT_Output_13"."Proba_9" > 0.0) THEN ln("DT_Output_13"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10) AS "Proba_3", (9.0 * (CASE WHEN ("DT_Output_13"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_13"."Proba_4" IS NULL OR "DT_Output_13"."Proba_4" > 0.0) THEN ln("DT_Output_13"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_13"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_13"."Proba_0" IS NULL OR "DT_Output_13"."Proba_0" > 0.0) THEN ln("DT_Output_13"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_13"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_13"."Proba_1" IS NULL OR "DT_Output_13"."Proba_1" > 0.0) THEN ln("DT_Output_13"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_13"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_13"."Proba_2" IS NULL OR "DT_Output_13"."Proba_2" > 0.0) THEN ln("DT_Output_13"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_13"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_13"."Proba_3" IS NULL OR "DT_Output_13"."Proba_3" > 0.0) THEN ln("DT_Output_13"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_13"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_13"."Proba_4" IS NULL OR "DT_Output_13"."Proba_4" > 0.0) THEN ln("DT_Output_13"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_13"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_13"."Proba_5" IS NULL OR "DT_Output_13"."Proba_5" > 0.0) THEN ln("DT_Output_13"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_13"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_13"."Proba_6" IS NULL OR "DT_Output_13"."Proba_6" > 0.0) THEN ln("DT_Output_13"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_13"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_13"."Proba_7" IS NULL OR "DT_Output_13"."Proba_7" > 0.0) THEN ln("DT_Output_13"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_13"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_13"."Proba_8" IS NULL OR "DT_Output_13"."Proba_8" > 0.0) THEN ln("DT_Output_13"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_13"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_13"."Proba_9" IS NULL OR "DT_Output_13"."Proba_9" > 0.0) THEN ln("DT_Output_13"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10)) / 32.0 AS "Score_4", 9.0 * (CASE WHEN ("DT_Output_13"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_13"."Proba_4" IS NULL OR "DT_Output_13"."Proba_4" > 0.0) THEN ln("DT_Output_13"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_13"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_13"."Proba_0" IS NULL OR "DT_Output_13"."Proba_0" > 0.0) THEN ln("DT_Output_13"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_13"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_13"."Proba_1" IS NULL OR "DT_Output_13"."Proba_1" > 0.0) THEN ln("DT_Output_13"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_13"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_13"."Proba_2" IS NULL OR "DT_Output_13"."Proba_2" > 0.0) THEN ln("DT_Output_13"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_13"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_13"."Proba_3" IS NULL OR "DT_Output_13"."Proba_3" > 0.0) THEN ln("DT_Output_13"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_13"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_13"."Proba_4" IS NULL OR "DT_Output_13"."Proba_4" > 0.0) THEN ln("DT_Output_13"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_13"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_13"."Proba_5" IS NULL OR "DT_Output_13"."Proba_5" > 0.0) THEN ln("DT_Output_13"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_13"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_13"."Proba_6" IS NULL OR "DT_Output_13"."Proba_6" > 0.0) THEN ln("DT_Output_13"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_13"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_13"."Proba_7" IS NULL OR "DT_Output_13"."Proba_7" > 0.0) THEN ln("DT_Output_13"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_13"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_13"."Proba_8" IS NULL OR "DT_Output_13"."Proba_8" > 0.0) THEN ln("DT_Output_13"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_13"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_13"."Proba_9" IS NULL OR "DT_Output_13"."Proba_9" > 0.0) THEN ln("DT_Output_13"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10) AS "Proba_4", (9.0 * (CASE WHEN ("DT_Output_13"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_13"."Proba_5" IS NULL OR "DT_Output_13"."Proba_5" > 0.0) THEN ln("DT_Output_13"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_13"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_13"."Proba_0" IS NULL OR "DT_Output_13"."Proba_0" > 0.0) THEN ln("DT_Output_13"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_13"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_13"."Proba_1" IS NULL OR "DT_Output_13"."Proba_1" > 0.0) THEN ln("DT_Output_13"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_13"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_13"."Proba_2" IS NULL OR "DT_Output_13"."Proba_2" > 0.0) THEN ln("DT_Output_13"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_13"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_13"."Proba_3" IS NULL OR "DT_Output_13"."Proba_3" > 0.0) THEN ln("DT_Output_13"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_13"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_13"."Proba_4" IS NULL OR "DT_Output_13"."Proba_4" > 0.0) THEN ln("DT_Output_13"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_13"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_13"."Proba_5" IS NULL OR "DT_Output_13"."Proba_5" > 0.0) THEN ln("DT_Output_13"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_13"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_13"."Proba_6" IS NULL OR "DT_Output_13"."Proba_6" > 0.0) THEN ln("DT_Output_13"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_13"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_13"."Proba_7" IS NULL OR "DT_Output_13"."Proba_7" > 0.0) THEN ln("DT_Output_13"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_13"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_13"."Proba_8" IS NULL OR "DT_Output_13"."Proba_8" > 0.0) THEN ln("DT_Output_13"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_13"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_13"."Proba_9" IS NULL OR "DT_Output_13"."Proba_9" > 0.0) THEN ln("DT_Output_13"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10)) / 32.0 AS "Score_5", 9.0 * (CASE WHEN ("DT_Output_13"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_13"."Proba_5" IS NULL OR "DT_Output_13"."Proba_5" > 0.0) THEN ln("DT_Output_13"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_13"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_13"."Proba_0" IS NULL OR "DT_Output_13"."Proba_0" > 0.0) THEN ln("DT_Output_13"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_13"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_13"."Proba_1" IS NULL OR "DT_Output_13"."Proba_1" > 0.0) THEN ln("DT_Output_13"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_13"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_13"."Proba_2" IS NULL OR "DT_Output_13"."Proba_2" > 0.0) THEN ln("DT_Output_13"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_13"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_13"."Proba_3" IS NULL OR "DT_Output_13"."Proba_3" > 0.0) THEN ln("DT_Output_13"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_13"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_13"."Proba_4" IS NULL OR "DT_Output_13"."Proba_4" > 0.0) THEN ln("DT_Output_13"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_13"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_13"."Proba_5" IS NULL OR "DT_Output_13"."Proba_5" > 0.0) THEN ln("DT_Output_13"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_13"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_13"."Proba_6" IS NULL OR "DT_Output_13"."Proba_6" > 0.0) THEN ln("DT_Output_13"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_13"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_13"."Proba_7" IS NULL OR "DT_Output_13"."Proba_7" > 0.0) THEN ln("DT_Output_13"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_13"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_13"."Proba_8" IS NULL OR "DT_Output_13"."Proba_8" > 0.0) THEN ln("DT_Output_13"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_13"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_13"."Proba_9" IS NULL OR "DT_Output_13"."Proba_9" > 0.0) THEN ln("DT_Output_13"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10) AS "Proba_5", (9.0 * (CASE WHEN ("DT_Output_13"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_13"."Proba_6" IS NULL OR "DT_Output_13"."Proba_6" > 0.0) THEN ln("DT_Output_13"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_13"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_13"."Proba_0" IS NULL OR "DT_Output_13"."Proba_0" > 0.0) THEN ln("DT_Output_13"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_13"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_13"."Proba_1" IS NULL OR "DT_Output_13"."Proba_1" > 0.0) THEN ln("DT_Output_13"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_13"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_13"."Proba_2" IS NULL OR "DT_Output_13"."Proba_2" > 0.0) THEN ln("DT_Output_13"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_13"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_13"."Proba_3" IS NULL OR "DT_Output_13"."Proba_3" > 0.0) THEN ln("DT_Output_13"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_13"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_13"."Proba_4" IS NULL OR "DT_Output_13"."Proba_4" > 0.0) THEN ln("DT_Output_13"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_13"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_13"."Proba_5" IS NULL OR "DT_Output_13"."Proba_5" > 0.0) THEN ln("DT_Output_13"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_13"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_13"."Proba_6" IS NULL OR "DT_Output_13"."Proba_6" > 0.0) THEN ln("DT_Output_13"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_13"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_13"."Proba_7" IS NULL OR "DT_Output_13"."Proba_7" > 0.0) THEN ln("DT_Output_13"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_13"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_13"."Proba_8" IS NULL OR "DT_Output_13"."Proba_8" > 0.0) THEN ln("DT_Output_13"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_13"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_13"."Proba_9" IS NULL OR "DT_Output_13"."Proba_9" > 0.0) THEN ln("DT_Output_13"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10)) / 32.0 AS "Score_6", 9.0 * (CASE WHEN ("DT_Output_13"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_13"."Proba_6" IS NULL OR "DT_Output_13"."Proba_6" > 0.0) THEN ln("DT_Output_13"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_13"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_13"."Proba_0" IS NULL OR "DT_Output_13"."Proba_0" > 0.0) THEN ln("DT_Output_13"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_13"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_13"."Proba_1" IS NULL OR "DT_Output_13"."Proba_1" > 0.0) THEN ln("DT_Output_13"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_13"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_13"."Proba_2" IS NULL OR "DT_Output_13"."Proba_2" > 0.0) THEN ln("DT_Output_13"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_13"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_13"."Proba_3" IS NULL OR "DT_Output_13"."Proba_3" > 0.0) THEN ln("DT_Output_13"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_13"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_13"."Proba_4" IS NULL OR "DT_Output_13"."Proba_4" > 0.0) THEN ln("DT_Output_13"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_13"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_13"."Proba_5" IS NULL OR "DT_Output_13"."Proba_5" > 0.0) THEN ln("DT_Output_13"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_13"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_13"."Proba_6" IS NULL OR "DT_Output_13"."Proba_6" > 0.0) THEN ln("DT_Output_13"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_13"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_13"."Proba_7" IS NULL OR "DT_Output_13"."Proba_7" > 0.0) THEN ln("DT_Output_13"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_13"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_13"."Proba_8" IS NULL OR "DT_Output_13"."Proba_8" > 0.0) THEN ln("DT_Output_13"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_13"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_13"."Proba_9" IS NULL OR "DT_Output_13"."Proba_9" > 0.0) THEN ln("DT_Output_13"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10) AS "Proba_6", (9.0 * (CASE WHEN ("DT_Output_13"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_13"."Proba_7" IS NULL OR "DT_Output_13"."Proba_7" > 0.0) THEN ln("DT_Output_13"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_13"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_13"."Proba_0" IS NULL OR "DT_Output_13"."Proba_0" > 0.0) THEN ln("DT_Output_13"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_13"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_13"."Proba_1" IS NULL OR "DT_Output_13"."Proba_1" > 0.0) THEN ln("DT_Output_13"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_13"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_13"."Proba_2" IS NULL OR "DT_Output_13"."Proba_2" > 0.0) THEN ln("DT_Output_13"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_13"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_13"."Proba_3" IS NULL OR "DT_Output_13"."Proba_3" > 0.0) THEN ln("DT_Output_13"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_13"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_13"."Proba_4" IS NULL OR "DT_Output_13"."Proba_4" > 0.0) THEN ln("DT_Output_13"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_13"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_13"."Proba_5" IS NULL OR "DT_Output_13"."Proba_5" > 0.0) THEN ln("DT_Output_13"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_13"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_13"."Proba_6" IS NULL OR "DT_Output_13"."Proba_6" > 0.0) THEN ln("DT_Output_13"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_13"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_13"."Proba_7" IS NULL OR "DT_Output_13"."Proba_7" > 0.0) THEN ln("DT_Output_13"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_13"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_13"."Proba_8" IS NULL OR "DT_Output_13"."Proba_8" > 0.0) THEN ln("DT_Output_13"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_13"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_13"."Proba_9" IS NULL OR "DT_Output_13"."Proba_9" > 0.0) THEN ln("DT_Output_13"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10)) / 32.0 AS "Score_7", 9.0 * (CASE WHEN ("DT_Output_13"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_13"."Proba_7" IS NULL OR "DT_Output_13"."Proba_7" > 0.0) THEN ln("DT_Output_13"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_13"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_13"."Proba_0" IS NULL OR "DT_Output_13"."Proba_0" > 0.0) THEN ln("DT_Output_13"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_13"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_13"."Proba_1" IS NULL OR "DT_Output_13"."Proba_1" > 0.0) THEN ln("DT_Output_13"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_13"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_13"."Proba_2" IS NULL OR "DT_Output_13"."Proba_2" > 0.0) THEN ln("DT_Output_13"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_13"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_13"."Proba_3" IS NULL OR "DT_Output_13"."Proba_3" > 0.0) THEN ln("DT_Output_13"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_13"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_13"."Proba_4" IS NULL OR "DT_Output_13"."Proba_4" > 0.0) THEN ln("DT_Output_13"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_13"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_13"."Proba_5" IS NULL OR "DT_Output_13"."Proba_5" > 0.0) THEN ln("DT_Output_13"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_13"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_13"."Proba_6" IS NULL OR "DT_Output_13"."Proba_6" > 0.0) THEN ln("DT_Output_13"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_13"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_13"."Proba_7" IS NULL OR "DT_Output_13"."Proba_7" > 0.0) THEN ln("DT_Output_13"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_13"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_13"."Proba_8" IS NULL OR "DT_Output_13"."Proba_8" > 0.0) THEN ln("DT_Output_13"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_13"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_13"."Proba_9" IS NULL OR "DT_Output_13"."Proba_9" > 0.0) THEN ln("DT_Output_13"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10) AS "Proba_7", (9.0 * (CASE WHEN ("DT_Output_13"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_13"."Proba_8" IS NULL OR "DT_Output_13"."Proba_8" > 0.0) THEN ln("DT_Output_13"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_13"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_13"."Proba_0" IS NULL OR "DT_Output_13"."Proba_0" > 0.0) THEN ln("DT_Output_13"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_13"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_13"."Proba_1" IS NULL OR "DT_Output_13"."Proba_1" > 0.0) THEN ln("DT_Output_13"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_13"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_13"."Proba_2" IS NULL OR "DT_Output_13"."Proba_2" > 0.0) THEN ln("DT_Output_13"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_13"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_13"."Proba_3" IS NULL OR "DT_Output_13"."Proba_3" > 0.0) THEN ln("DT_Output_13"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_13"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_13"."Proba_4" IS NULL OR "DT_Output_13"."Proba_4" > 0.0) THEN ln("DT_Output_13"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_13"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_13"."Proba_5" IS NULL OR "DT_Output_13"."Proba_5" > 0.0) THEN ln("DT_Output_13"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_13"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_13"."Proba_6" IS NULL OR "DT_Output_13"."Proba_6" > 0.0) THEN ln("DT_Output_13"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_13"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_13"."Proba_7" IS NULL OR "DT_Output_13"."Proba_7" > 0.0) THEN ln("DT_Output_13"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_13"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_13"."Proba_8" IS NULL OR "DT_Output_13"."Proba_8" > 0.0) THEN ln("DT_Output_13"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_13"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_13"."Proba_9" IS NULL OR "DT_Output_13"."Proba_9" > 0.0) THEN ln("DT_Output_13"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10)) / 32.0 AS "Score_8", 9.0 * (CASE WHEN ("DT_Output_13"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_13"."Proba_8" IS NULL OR "DT_Output_13"."Proba_8" > 0.0) THEN ln("DT_Output_13"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_13"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_13"."Proba_0" IS NULL OR "DT_Output_13"."Proba_0" > 0.0) THEN ln("DT_Output_13"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_13"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_13"."Proba_1" IS NULL OR "DT_Output_13"."Proba_1" > 0.0) THEN ln("DT_Output_13"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_13"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_13"."Proba_2" IS NULL OR "DT_Output_13"."Proba_2" > 0.0) THEN ln("DT_Output_13"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_13"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_13"."Proba_3" IS NULL OR "DT_Output_13"."Proba_3" > 0.0) THEN ln("DT_Output_13"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_13"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_13"."Proba_4" IS NULL OR "DT_Output_13"."Proba_4" > 0.0) THEN ln("DT_Output_13"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_13"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_13"."Proba_5" IS NULL OR "DT_Output_13"."Proba_5" > 0.0) THEN ln("DT_Output_13"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_13"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_13"."Proba_6" IS NULL OR "DT_Output_13"."Proba_6" > 0.0) THEN ln("DT_Output_13"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_13"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_13"."Proba_7" IS NULL OR "DT_Output_13"."Proba_7" > 0.0) THEN ln("DT_Output_13"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_13"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_13"."Proba_8" IS NULL OR "DT_Output_13"."Proba_8" > 0.0) THEN ln("DT_Output_13"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_13"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_13"."Proba_9" IS NULL OR "DT_Output_13"."Proba_9" > 0.0) THEN ln("DT_Output_13"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10) AS "Proba_8", (9.0 * (CASE WHEN ("DT_Output_13"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_13"."Proba_9" IS NULL OR "DT_Output_13"."Proba_9" > 0.0) THEN ln("DT_Output_13"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_13"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_13"."Proba_0" IS NULL OR "DT_Output_13"."Proba_0" > 0.0) THEN ln("DT_Output_13"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_13"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_13"."Proba_1" IS NULL OR "DT_Output_13"."Proba_1" > 0.0) THEN ln("DT_Output_13"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_13"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_13"."Proba_2" IS NULL OR "DT_Output_13"."Proba_2" > 0.0) THEN ln("DT_Output_13"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_13"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_13"."Proba_3" IS NULL OR "DT_Output_13"."Proba_3" > 0.0) THEN ln("DT_Output_13"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_13"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_13"."Proba_4" IS NULL OR "DT_Output_13"."Proba_4" > 0.0) THEN ln("DT_Output_13"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_13"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_13"."Proba_5" IS NULL OR "DT_Output_13"."Proba_5" > 0.0) THEN ln("DT_Output_13"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_13"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_13"."Proba_6" IS NULL OR "DT_Output_13"."Proba_6" > 0.0) THEN ln("DT_Output_13"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_13"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_13"."Proba_7" IS NULL OR "DT_Output_13"."Proba_7" > 0.0) THEN ln("DT_Output_13"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_13"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_13"."Proba_8" IS NULL OR "DT_Output_13"."Proba_8" > 0.0) THEN ln("DT_Output_13"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_13"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_13"."Proba_9" IS NULL OR "DT_Output_13"."Proba_9" > 0.0) THEN ln("DT_Output_13"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10)) / 32.0 AS "Score_9", 9.0 * (CASE WHEN ("DT_Output_13"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_13"."Proba_9" IS NULL OR "DT_Output_13"."Proba_9" > 0.0) THEN ln("DT_Output_13"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_13"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_13"."Proba_0" IS NULL OR "DT_Output_13"."Proba_0" > 0.0) THEN ln("DT_Output_13"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_13"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_13"."Proba_1" IS NULL OR "DT_Output_13"."Proba_1" > 0.0) THEN ln("DT_Output_13"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_13"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_13"."Proba_2" IS NULL OR "DT_Output_13"."Proba_2" > 0.0) THEN ln("DT_Output_13"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_13"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_13"."Proba_3" IS NULL OR "DT_Output_13"."Proba_3" > 0.0) THEN ln("DT_Output_13"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_13"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_13"."Proba_4" IS NULL OR "DT_Output_13"."Proba_4" > 0.0) THEN ln("DT_Output_13"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_13"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_13"."Proba_5" IS NULL OR "DT_Output_13"."Proba_5" > 0.0) THEN ln("DT_Output_13"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_13"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_13"."Proba_6" IS NULL OR "DT_Output_13"."Proba_6" > 0.0) THEN ln("DT_Output_13"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_13"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_13"."Proba_7" IS NULL OR "DT_Output_13"."Proba_7" > 0.0) THEN ln("DT_Output_13"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_13"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_13"."Proba_8" IS NULL OR "DT_Output_13"."Proba_8" > 0.0) THEN ln("DT_Output_13"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_13"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_13"."Proba_9" IS NULL OR "DT_Output_13"."Proba_9" > 0.0) THEN ln("DT_Output_13"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10) AS "Proba_9" 
FROM "DT_Output_13"), 
"DT_node_lookup_14" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_30 <= -1.555469036102295) THEN 1 ELSE 2 END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_14" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Proba_0" AS "Proba_0", "Values"."LogProba_0" AS "LogProba_0", "Values"."Proba_1" AS "Proba_1", "Values"."LogProba_1" AS "LogProba_1", "Values"."Proba_2" AS "Proba_2", "Values"."LogProba_2" AS "LogProba_2", "Values"."Proba_3" AS "Proba_3", "Values"."LogProba_3" AS "LogProba_3", "Values"."Proba_4" AS "Proba_4", "Values"."LogProba_4" AS "LogProba_4", "Values"."Proba_5" AS "Proba_5", "Values"."LogProba_5" AS "LogProba_5", "Values"."Proba_6" AS "Proba_6", "Values"."LogProba_6" AS "LogProba_6", "Values"."Proba_7" AS "Proba_7", "Values"."LogProba_7" AS "LogProba_7", "Values"."Proba_8" AS "Proba_8", "Values"."LogProba_8" AS "LogProba_8", "Values"."Proba_9" AS "Proba_9", "Values"."LogProba_9" AS "LogProba_9", "Values"."Decision" AS "Decision", "Values"."DecisionProba" AS "DecisionProba" 
FROM (SELECT 1 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 246 AS count, 1 AS depth, 0 AS parent_id, 0.9975547956915788 AS "Proba_0", -0.00244819870274 AS "LogProba_0", 0.00030565054842119857 AS "Proba_1", -8.09306810721 AS "LogProba_1", 0.0003056504920901155 AS "Proba_2", -8.09306829151 AS "LogProba_2", 0.0003056505495654354 AS "Proba_3", -8.09306810347 AS "LogProba_3", 0.0003056505213574194 AS "Proba_4", -8.09306819576 AS "LogProba_4", 0.00030565054948471557 AS "Proba_5", -8.09306810373 AS "LogProba_5", 0.0003056505495154885 AS "Proba_6", -8.09306810363 AS "LogProba_6", 0.000305650548421201 AS "Proba_7", -8.09306810721 AS "LogProba_7", 0.0 AS "Proba_8", -BINARY_FLOAT_INFINITY AS "LogProba_8", 0.0003056505495654356 AS "Proba_9", -8.09306810347 AS "LogProba_9", 0 AS "Decision", 0.997554795692 AS "DecisionProba" FROM DUAL UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1191 AS count, 1 AS depth, 0 AS parent_id, 2.3316488991300373e-10 AS "Proba_0", -22.1792752306 AS "LogProba_0", 0.11110732715929277 AS "Proba_1", -2.19725863348 AS "LogProba_1", 0.11110732739873429 AS "Proba_2", -2.19725863133 AS "LogProba_2", 0.11110732739233076 AS "Proba_3", -2.19725863139 AS "LogProba_3", 0.11110732739547373 AS "Proba_4", -2.19725863136 AS "LogProba_4", 0.1111073273923401 AS "Proba_5", -2.19725863138 AS "LogProba_5", 0.11110732739233618 AS "Proba_6", -2.19725863139 AS "LogProba_6", 0.11110732715929299 AS "Proba_7", -2.19725863348 AS "LogProba_7", 0.11114138108470312 AS "Proba_8", -2.19695218468 AS "LogProba_8", 0.1111073273923311 AS "Proba_9", -2.19725863139 AS "LogProba_9", 8 AS "Decision", 0.111141381085 AS "DecisionProba" FROM DUAL) "Values"), 
"DT_Output_14" AS 
(SELECT "DT_node_lookup_14"."KEY" AS "KEY", "DT_node_lookup_14".node_id_2 AS node_id_2, "DT_node_data_14".node_id AS node_id, "DT_node_data_14".feature AS feature, "DT_node_data_14".threshold AS threshold, "DT_node_data_14".count AS count, "DT_node_data_14".depth AS depth, "DT_node_data_14".parent_id AS parent_id, "DT_node_data_14"."Proba_0" AS "Proba_0", "DT_node_data_14"."LogProba_0" AS "LogProba_0", "DT_node_data_14"."Proba_1" AS "Proba_1", "DT_node_data_14"."LogProba_1" AS "LogProba_1", "DT_node_data_14"."Proba_2" AS "Proba_2", "DT_node_data_14"."LogProba_2" AS "LogProba_2", "DT_node_data_14"."Proba_3" AS "Proba_3", "DT_node_data_14"."LogProba_3" AS "LogProba_3", "DT_node_data_14"."Proba_4" AS "Proba_4", "DT_node_data_14"."LogProba_4" AS "LogProba_4", "DT_node_data_14"."Proba_5" AS "Proba_5", "DT_node_data_14"."LogProba_5" AS "LogProba_5", "DT_node_data_14"."Proba_6" AS "Proba_6", "DT_node_data_14"."LogProba_6" AS "LogProba_6", "DT_node_data_14"."Proba_7" AS "Proba_7", "DT_node_data_14"."LogProba_7" AS "LogProba_7", "DT_node_data_14"."Proba_8" AS "Proba_8", "DT_node_data_14"."LogProba_8" AS "LogProba_8", "DT_node_data_14"."Proba_9" AS "Proba_9", "DT_node_data_14"."LogProba_9" AS "LogProba_9", "DT_node_data_14"."Decision" AS "Decision", "DT_node_data_14"."DecisionProba" AS "DecisionProba" 
FROM "DT_node_lookup_14" LEFT OUTER JOIN "DT_node_data_14" ON "DT_node_lookup_14".node_id_2 = "DT_node_data_14".node_id), 
"AdaBoost_Estim_14" AS 
(SELECT "DT_Output_14"."KEY" AS "KEY", (9.0 * (CASE WHEN ("DT_Output_14"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_14"."Proba_0" IS NULL OR "DT_Output_14"."Proba_0" > 0.0) THEN ln("DT_Output_14"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_14"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_14"."Proba_0" IS NULL OR "DT_Output_14"."Proba_0" > 0.0) THEN ln("DT_Output_14"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_14"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_14"."Proba_1" IS NULL OR "DT_Output_14"."Proba_1" > 0.0) THEN ln("DT_Output_14"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_14"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_14"."Proba_2" IS NULL OR "DT_Output_14"."Proba_2" > 0.0) THEN ln("DT_Output_14"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_14"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_14"."Proba_3" IS NULL OR "DT_Output_14"."Proba_3" > 0.0) THEN ln("DT_Output_14"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_14"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_14"."Proba_4" IS NULL OR "DT_Output_14"."Proba_4" > 0.0) THEN ln("DT_Output_14"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_14"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_14"."Proba_5" IS NULL OR "DT_Output_14"."Proba_5" > 0.0) THEN ln("DT_Output_14"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_14"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_14"."Proba_6" IS NULL OR "DT_Output_14"."Proba_6" > 0.0) THEN ln("DT_Output_14"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_14"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_14"."Proba_7" IS NULL OR "DT_Output_14"."Proba_7" > 0.0) THEN ln("DT_Output_14"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_14"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_14"."Proba_8" IS NULL OR "DT_Output_14"."Proba_8" > 0.0) THEN ln("DT_Output_14"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_14"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_14"."Proba_9" IS NULL OR "DT_Output_14"."Proba_9" > 0.0) THEN ln("DT_Output_14"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10)) / 32.0 AS "Score_0", 9.0 * (CASE WHEN ("DT_Output_14"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_14"."Proba_0" IS NULL OR "DT_Output_14"."Proba_0" > 0.0) THEN ln("DT_Output_14"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_14"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_14"."Proba_0" IS NULL OR "DT_Output_14"."Proba_0" > 0.0) THEN ln("DT_Output_14"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_14"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_14"."Proba_1" IS NULL OR "DT_Output_14"."Proba_1" > 0.0) THEN ln("DT_Output_14"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_14"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_14"."Proba_2" IS NULL OR "DT_Output_14"."Proba_2" > 0.0) THEN ln("DT_Output_14"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_14"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_14"."Proba_3" IS NULL OR "DT_Output_14"."Proba_3" > 0.0) THEN ln("DT_Output_14"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_14"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_14"."Proba_4" IS NULL OR "DT_Output_14"."Proba_4" > 0.0) THEN ln("DT_Output_14"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_14"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_14"."Proba_5" IS NULL OR "DT_Output_14"."Proba_5" > 0.0) THEN ln("DT_Output_14"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_14"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_14"."Proba_6" IS NULL OR "DT_Output_14"."Proba_6" > 0.0) THEN ln("DT_Output_14"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_14"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_14"."Proba_7" IS NULL OR "DT_Output_14"."Proba_7" > 0.0) THEN ln("DT_Output_14"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_14"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_14"."Proba_8" IS NULL OR "DT_Output_14"."Proba_8" > 0.0) THEN ln("DT_Output_14"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_14"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_14"."Proba_9" IS NULL OR "DT_Output_14"."Proba_9" > 0.0) THEN ln("DT_Output_14"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10) AS "Proba_0", (9.0 * (CASE WHEN ("DT_Output_14"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_14"."Proba_1" IS NULL OR "DT_Output_14"."Proba_1" > 0.0) THEN ln("DT_Output_14"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_14"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_14"."Proba_0" IS NULL OR "DT_Output_14"."Proba_0" > 0.0) THEN ln("DT_Output_14"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_14"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_14"."Proba_1" IS NULL OR "DT_Output_14"."Proba_1" > 0.0) THEN ln("DT_Output_14"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_14"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_14"."Proba_2" IS NULL OR "DT_Output_14"."Proba_2" > 0.0) THEN ln("DT_Output_14"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_14"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_14"."Proba_3" IS NULL OR "DT_Output_14"."Proba_3" > 0.0) THEN ln("DT_Output_14"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_14"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_14"."Proba_4" IS NULL OR "DT_Output_14"."Proba_4" > 0.0) THEN ln("DT_Output_14"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_14"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_14"."Proba_5" IS NULL OR "DT_Output_14"."Proba_5" > 0.0) THEN ln("DT_Output_14"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_14"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_14"."Proba_6" IS NULL OR "DT_Output_14"."Proba_6" > 0.0) THEN ln("DT_Output_14"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_14"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_14"."Proba_7" IS NULL OR "DT_Output_14"."Proba_7" > 0.0) THEN ln("DT_Output_14"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_14"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_14"."Proba_8" IS NULL OR "DT_Output_14"."Proba_8" > 0.0) THEN ln("DT_Output_14"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_14"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_14"."Proba_9" IS NULL OR "DT_Output_14"."Proba_9" > 0.0) THEN ln("DT_Output_14"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10)) / 32.0 AS "Score_1", 9.0 * (CASE WHEN ("DT_Output_14"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_14"."Proba_1" IS NULL OR "DT_Output_14"."Proba_1" > 0.0) THEN ln("DT_Output_14"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_14"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_14"."Proba_0" IS NULL OR "DT_Output_14"."Proba_0" > 0.0) THEN ln("DT_Output_14"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_14"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_14"."Proba_1" IS NULL OR "DT_Output_14"."Proba_1" > 0.0) THEN ln("DT_Output_14"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_14"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_14"."Proba_2" IS NULL OR "DT_Output_14"."Proba_2" > 0.0) THEN ln("DT_Output_14"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_14"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_14"."Proba_3" IS NULL OR "DT_Output_14"."Proba_3" > 0.0) THEN ln("DT_Output_14"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_14"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_14"."Proba_4" IS NULL OR "DT_Output_14"."Proba_4" > 0.0) THEN ln("DT_Output_14"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_14"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_14"."Proba_5" IS NULL OR "DT_Output_14"."Proba_5" > 0.0) THEN ln("DT_Output_14"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_14"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_14"."Proba_6" IS NULL OR "DT_Output_14"."Proba_6" > 0.0) THEN ln("DT_Output_14"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_14"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_14"."Proba_7" IS NULL OR "DT_Output_14"."Proba_7" > 0.0) THEN ln("DT_Output_14"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_14"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_14"."Proba_8" IS NULL OR "DT_Output_14"."Proba_8" > 0.0) THEN ln("DT_Output_14"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_14"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_14"."Proba_9" IS NULL OR "DT_Output_14"."Proba_9" > 0.0) THEN ln("DT_Output_14"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10) AS "Proba_1", (9.0 * (CASE WHEN ("DT_Output_14"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_14"."Proba_2" IS NULL OR "DT_Output_14"."Proba_2" > 0.0) THEN ln("DT_Output_14"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_14"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_14"."Proba_0" IS NULL OR "DT_Output_14"."Proba_0" > 0.0) THEN ln("DT_Output_14"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_14"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_14"."Proba_1" IS NULL OR "DT_Output_14"."Proba_1" > 0.0) THEN ln("DT_Output_14"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_14"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_14"."Proba_2" IS NULL OR "DT_Output_14"."Proba_2" > 0.0) THEN ln("DT_Output_14"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_14"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_14"."Proba_3" IS NULL OR "DT_Output_14"."Proba_3" > 0.0) THEN ln("DT_Output_14"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_14"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_14"."Proba_4" IS NULL OR "DT_Output_14"."Proba_4" > 0.0) THEN ln("DT_Output_14"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_14"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_14"."Proba_5" IS NULL OR "DT_Output_14"."Proba_5" > 0.0) THEN ln("DT_Output_14"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_14"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_14"."Proba_6" IS NULL OR "DT_Output_14"."Proba_6" > 0.0) THEN ln("DT_Output_14"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_14"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_14"."Proba_7" IS NULL OR "DT_Output_14"."Proba_7" > 0.0) THEN ln("DT_Output_14"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_14"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_14"."Proba_8" IS NULL OR "DT_Output_14"."Proba_8" > 0.0) THEN ln("DT_Output_14"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_14"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_14"."Proba_9" IS NULL OR "DT_Output_14"."Proba_9" > 0.0) THEN ln("DT_Output_14"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10)) / 32.0 AS "Score_2", 9.0 * (CASE WHEN ("DT_Output_14"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_14"."Proba_2" IS NULL OR "DT_Output_14"."Proba_2" > 0.0) THEN ln("DT_Output_14"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_14"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_14"."Proba_0" IS NULL OR "DT_Output_14"."Proba_0" > 0.0) THEN ln("DT_Output_14"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_14"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_14"."Proba_1" IS NULL OR "DT_Output_14"."Proba_1" > 0.0) THEN ln("DT_Output_14"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_14"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_14"."Proba_2" IS NULL OR "DT_Output_14"."Proba_2" > 0.0) THEN ln("DT_Output_14"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_14"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_14"."Proba_3" IS NULL OR "DT_Output_14"."Proba_3" > 0.0) THEN ln("DT_Output_14"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_14"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_14"."Proba_4" IS NULL OR "DT_Output_14"."Proba_4" > 0.0) THEN ln("DT_Output_14"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_14"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_14"."Proba_5" IS NULL OR "DT_Output_14"."Proba_5" > 0.0) THEN ln("DT_Output_14"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_14"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_14"."Proba_6" IS NULL OR "DT_Output_14"."Proba_6" > 0.0) THEN ln("DT_Output_14"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_14"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_14"."Proba_7" IS NULL OR "DT_Output_14"."Proba_7" > 0.0) THEN ln("DT_Output_14"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_14"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_14"."Proba_8" IS NULL OR "DT_Output_14"."Proba_8" > 0.0) THEN ln("DT_Output_14"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_14"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_14"."Proba_9" IS NULL OR "DT_Output_14"."Proba_9" > 0.0) THEN ln("DT_Output_14"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10) AS "Proba_2", (9.0 * (CASE WHEN ("DT_Output_14"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_14"."Proba_3" IS NULL OR "DT_Output_14"."Proba_3" > 0.0) THEN ln("DT_Output_14"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_14"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_14"."Proba_0" IS NULL OR "DT_Output_14"."Proba_0" > 0.0) THEN ln("DT_Output_14"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_14"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_14"."Proba_1" IS NULL OR "DT_Output_14"."Proba_1" > 0.0) THEN ln("DT_Output_14"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_14"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_14"."Proba_2" IS NULL OR "DT_Output_14"."Proba_2" > 0.0) THEN ln("DT_Output_14"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_14"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_14"."Proba_3" IS NULL OR "DT_Output_14"."Proba_3" > 0.0) THEN ln("DT_Output_14"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_14"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_14"."Proba_4" IS NULL OR "DT_Output_14"."Proba_4" > 0.0) THEN ln("DT_Output_14"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_14"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_14"."Proba_5" IS NULL OR "DT_Output_14"."Proba_5" > 0.0) THEN ln("DT_Output_14"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_14"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_14"."Proba_6" IS NULL OR "DT_Output_14"."Proba_6" > 0.0) THEN ln("DT_Output_14"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_14"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_14"."Proba_7" IS NULL OR "DT_Output_14"."Proba_7" > 0.0) THEN ln("DT_Output_14"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_14"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_14"."Proba_8" IS NULL OR "DT_Output_14"."Proba_8" > 0.0) THEN ln("DT_Output_14"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_14"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_14"."Proba_9" IS NULL OR "DT_Output_14"."Proba_9" > 0.0) THEN ln("DT_Output_14"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10)) / 32.0 AS "Score_3", 9.0 * (CASE WHEN ("DT_Output_14"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_14"."Proba_3" IS NULL OR "DT_Output_14"."Proba_3" > 0.0) THEN ln("DT_Output_14"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_14"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_14"."Proba_0" IS NULL OR "DT_Output_14"."Proba_0" > 0.0) THEN ln("DT_Output_14"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_14"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_14"."Proba_1" IS NULL OR "DT_Output_14"."Proba_1" > 0.0) THEN ln("DT_Output_14"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_14"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_14"."Proba_2" IS NULL OR "DT_Output_14"."Proba_2" > 0.0) THEN ln("DT_Output_14"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_14"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_14"."Proba_3" IS NULL OR "DT_Output_14"."Proba_3" > 0.0) THEN ln("DT_Output_14"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_14"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_14"."Proba_4" IS NULL OR "DT_Output_14"."Proba_4" > 0.0) THEN ln("DT_Output_14"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_14"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_14"."Proba_5" IS NULL OR "DT_Output_14"."Proba_5" > 0.0) THEN ln("DT_Output_14"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_14"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_14"."Proba_6" IS NULL OR "DT_Output_14"."Proba_6" > 0.0) THEN ln("DT_Output_14"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_14"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_14"."Proba_7" IS NULL OR "DT_Output_14"."Proba_7" > 0.0) THEN ln("DT_Output_14"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_14"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_14"."Proba_8" IS NULL OR "DT_Output_14"."Proba_8" > 0.0) THEN ln("DT_Output_14"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_14"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_14"."Proba_9" IS NULL OR "DT_Output_14"."Proba_9" > 0.0) THEN ln("DT_Output_14"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10) AS "Proba_3", (9.0 * (CASE WHEN ("DT_Output_14"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_14"."Proba_4" IS NULL OR "DT_Output_14"."Proba_4" > 0.0) THEN ln("DT_Output_14"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_14"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_14"."Proba_0" IS NULL OR "DT_Output_14"."Proba_0" > 0.0) THEN ln("DT_Output_14"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_14"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_14"."Proba_1" IS NULL OR "DT_Output_14"."Proba_1" > 0.0) THEN ln("DT_Output_14"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_14"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_14"."Proba_2" IS NULL OR "DT_Output_14"."Proba_2" > 0.0) THEN ln("DT_Output_14"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_14"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_14"."Proba_3" IS NULL OR "DT_Output_14"."Proba_3" > 0.0) THEN ln("DT_Output_14"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_14"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_14"."Proba_4" IS NULL OR "DT_Output_14"."Proba_4" > 0.0) THEN ln("DT_Output_14"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_14"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_14"."Proba_5" IS NULL OR "DT_Output_14"."Proba_5" > 0.0) THEN ln("DT_Output_14"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_14"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_14"."Proba_6" IS NULL OR "DT_Output_14"."Proba_6" > 0.0) THEN ln("DT_Output_14"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_14"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_14"."Proba_7" IS NULL OR "DT_Output_14"."Proba_7" > 0.0) THEN ln("DT_Output_14"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_14"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_14"."Proba_8" IS NULL OR "DT_Output_14"."Proba_8" > 0.0) THEN ln("DT_Output_14"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_14"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_14"."Proba_9" IS NULL OR "DT_Output_14"."Proba_9" > 0.0) THEN ln("DT_Output_14"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10)) / 32.0 AS "Score_4", 9.0 * (CASE WHEN ("DT_Output_14"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_14"."Proba_4" IS NULL OR "DT_Output_14"."Proba_4" > 0.0) THEN ln("DT_Output_14"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_14"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_14"."Proba_0" IS NULL OR "DT_Output_14"."Proba_0" > 0.0) THEN ln("DT_Output_14"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_14"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_14"."Proba_1" IS NULL OR "DT_Output_14"."Proba_1" > 0.0) THEN ln("DT_Output_14"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_14"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_14"."Proba_2" IS NULL OR "DT_Output_14"."Proba_2" > 0.0) THEN ln("DT_Output_14"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_14"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_14"."Proba_3" IS NULL OR "DT_Output_14"."Proba_3" > 0.0) THEN ln("DT_Output_14"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_14"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_14"."Proba_4" IS NULL OR "DT_Output_14"."Proba_4" > 0.0) THEN ln("DT_Output_14"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_14"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_14"."Proba_5" IS NULL OR "DT_Output_14"."Proba_5" > 0.0) THEN ln("DT_Output_14"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_14"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_14"."Proba_6" IS NULL OR "DT_Output_14"."Proba_6" > 0.0) THEN ln("DT_Output_14"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_14"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_14"."Proba_7" IS NULL OR "DT_Output_14"."Proba_7" > 0.0) THEN ln("DT_Output_14"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_14"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_14"."Proba_8" IS NULL OR "DT_Output_14"."Proba_8" > 0.0) THEN ln("DT_Output_14"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_14"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_14"."Proba_9" IS NULL OR "DT_Output_14"."Proba_9" > 0.0) THEN ln("DT_Output_14"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10) AS "Proba_4", (9.0 * (CASE WHEN ("DT_Output_14"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_14"."Proba_5" IS NULL OR "DT_Output_14"."Proba_5" > 0.0) THEN ln("DT_Output_14"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_14"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_14"."Proba_0" IS NULL OR "DT_Output_14"."Proba_0" > 0.0) THEN ln("DT_Output_14"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_14"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_14"."Proba_1" IS NULL OR "DT_Output_14"."Proba_1" > 0.0) THEN ln("DT_Output_14"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_14"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_14"."Proba_2" IS NULL OR "DT_Output_14"."Proba_2" > 0.0) THEN ln("DT_Output_14"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_14"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_14"."Proba_3" IS NULL OR "DT_Output_14"."Proba_3" > 0.0) THEN ln("DT_Output_14"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_14"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_14"."Proba_4" IS NULL OR "DT_Output_14"."Proba_4" > 0.0) THEN ln("DT_Output_14"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_14"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_14"."Proba_5" IS NULL OR "DT_Output_14"."Proba_5" > 0.0) THEN ln("DT_Output_14"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_14"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_14"."Proba_6" IS NULL OR "DT_Output_14"."Proba_6" > 0.0) THEN ln("DT_Output_14"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_14"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_14"."Proba_7" IS NULL OR "DT_Output_14"."Proba_7" > 0.0) THEN ln("DT_Output_14"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_14"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_14"."Proba_8" IS NULL OR "DT_Output_14"."Proba_8" > 0.0) THEN ln("DT_Output_14"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_14"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_14"."Proba_9" IS NULL OR "DT_Output_14"."Proba_9" > 0.0) THEN ln("DT_Output_14"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10)) / 32.0 AS "Score_5", 9.0 * (CASE WHEN ("DT_Output_14"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_14"."Proba_5" IS NULL OR "DT_Output_14"."Proba_5" > 0.0) THEN ln("DT_Output_14"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_14"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_14"."Proba_0" IS NULL OR "DT_Output_14"."Proba_0" > 0.0) THEN ln("DT_Output_14"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_14"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_14"."Proba_1" IS NULL OR "DT_Output_14"."Proba_1" > 0.0) THEN ln("DT_Output_14"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_14"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_14"."Proba_2" IS NULL OR "DT_Output_14"."Proba_2" > 0.0) THEN ln("DT_Output_14"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_14"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_14"."Proba_3" IS NULL OR "DT_Output_14"."Proba_3" > 0.0) THEN ln("DT_Output_14"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_14"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_14"."Proba_4" IS NULL OR "DT_Output_14"."Proba_4" > 0.0) THEN ln("DT_Output_14"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_14"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_14"."Proba_5" IS NULL OR "DT_Output_14"."Proba_5" > 0.0) THEN ln("DT_Output_14"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_14"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_14"."Proba_6" IS NULL OR "DT_Output_14"."Proba_6" > 0.0) THEN ln("DT_Output_14"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_14"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_14"."Proba_7" IS NULL OR "DT_Output_14"."Proba_7" > 0.0) THEN ln("DT_Output_14"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_14"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_14"."Proba_8" IS NULL OR "DT_Output_14"."Proba_8" > 0.0) THEN ln("DT_Output_14"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_14"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_14"."Proba_9" IS NULL OR "DT_Output_14"."Proba_9" > 0.0) THEN ln("DT_Output_14"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10) AS "Proba_5", (9.0 * (CASE WHEN ("DT_Output_14"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_14"."Proba_6" IS NULL OR "DT_Output_14"."Proba_6" > 0.0) THEN ln("DT_Output_14"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_14"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_14"."Proba_0" IS NULL OR "DT_Output_14"."Proba_0" > 0.0) THEN ln("DT_Output_14"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_14"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_14"."Proba_1" IS NULL OR "DT_Output_14"."Proba_1" > 0.0) THEN ln("DT_Output_14"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_14"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_14"."Proba_2" IS NULL OR "DT_Output_14"."Proba_2" > 0.0) THEN ln("DT_Output_14"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_14"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_14"."Proba_3" IS NULL OR "DT_Output_14"."Proba_3" > 0.0) THEN ln("DT_Output_14"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_14"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_14"."Proba_4" IS NULL OR "DT_Output_14"."Proba_4" > 0.0) THEN ln("DT_Output_14"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_14"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_14"."Proba_5" IS NULL OR "DT_Output_14"."Proba_5" > 0.0) THEN ln("DT_Output_14"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_14"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_14"."Proba_6" IS NULL OR "DT_Output_14"."Proba_6" > 0.0) THEN ln("DT_Output_14"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_14"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_14"."Proba_7" IS NULL OR "DT_Output_14"."Proba_7" > 0.0) THEN ln("DT_Output_14"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_14"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_14"."Proba_8" IS NULL OR "DT_Output_14"."Proba_8" > 0.0) THEN ln("DT_Output_14"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_14"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_14"."Proba_9" IS NULL OR "DT_Output_14"."Proba_9" > 0.0) THEN ln("DT_Output_14"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10)) / 32.0 AS "Score_6", 9.0 * (CASE WHEN ("DT_Output_14"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_14"."Proba_6" IS NULL OR "DT_Output_14"."Proba_6" > 0.0) THEN ln("DT_Output_14"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_14"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_14"."Proba_0" IS NULL OR "DT_Output_14"."Proba_0" > 0.0) THEN ln("DT_Output_14"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_14"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_14"."Proba_1" IS NULL OR "DT_Output_14"."Proba_1" > 0.0) THEN ln("DT_Output_14"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_14"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_14"."Proba_2" IS NULL OR "DT_Output_14"."Proba_2" > 0.0) THEN ln("DT_Output_14"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_14"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_14"."Proba_3" IS NULL OR "DT_Output_14"."Proba_3" > 0.0) THEN ln("DT_Output_14"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_14"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_14"."Proba_4" IS NULL OR "DT_Output_14"."Proba_4" > 0.0) THEN ln("DT_Output_14"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_14"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_14"."Proba_5" IS NULL OR "DT_Output_14"."Proba_5" > 0.0) THEN ln("DT_Output_14"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_14"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_14"."Proba_6" IS NULL OR "DT_Output_14"."Proba_6" > 0.0) THEN ln("DT_Output_14"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_14"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_14"."Proba_7" IS NULL OR "DT_Output_14"."Proba_7" > 0.0) THEN ln("DT_Output_14"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_14"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_14"."Proba_8" IS NULL OR "DT_Output_14"."Proba_8" > 0.0) THEN ln("DT_Output_14"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_14"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_14"."Proba_9" IS NULL OR "DT_Output_14"."Proba_9" > 0.0) THEN ln("DT_Output_14"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10) AS "Proba_6", (9.0 * (CASE WHEN ("DT_Output_14"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_14"."Proba_7" IS NULL OR "DT_Output_14"."Proba_7" > 0.0) THEN ln("DT_Output_14"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_14"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_14"."Proba_0" IS NULL OR "DT_Output_14"."Proba_0" > 0.0) THEN ln("DT_Output_14"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_14"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_14"."Proba_1" IS NULL OR "DT_Output_14"."Proba_1" > 0.0) THEN ln("DT_Output_14"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_14"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_14"."Proba_2" IS NULL OR "DT_Output_14"."Proba_2" > 0.0) THEN ln("DT_Output_14"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_14"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_14"."Proba_3" IS NULL OR "DT_Output_14"."Proba_3" > 0.0) THEN ln("DT_Output_14"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_14"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_14"."Proba_4" IS NULL OR "DT_Output_14"."Proba_4" > 0.0) THEN ln("DT_Output_14"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_14"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_14"."Proba_5" IS NULL OR "DT_Output_14"."Proba_5" > 0.0) THEN ln("DT_Output_14"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_14"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_14"."Proba_6" IS NULL OR "DT_Output_14"."Proba_6" > 0.0) THEN ln("DT_Output_14"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_14"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_14"."Proba_7" IS NULL OR "DT_Output_14"."Proba_7" > 0.0) THEN ln("DT_Output_14"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_14"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_14"."Proba_8" IS NULL OR "DT_Output_14"."Proba_8" > 0.0) THEN ln("DT_Output_14"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_14"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_14"."Proba_9" IS NULL OR "DT_Output_14"."Proba_9" > 0.0) THEN ln("DT_Output_14"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10)) / 32.0 AS "Score_7", 9.0 * (CASE WHEN ("DT_Output_14"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_14"."Proba_7" IS NULL OR "DT_Output_14"."Proba_7" > 0.0) THEN ln("DT_Output_14"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_14"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_14"."Proba_0" IS NULL OR "DT_Output_14"."Proba_0" > 0.0) THEN ln("DT_Output_14"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_14"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_14"."Proba_1" IS NULL OR "DT_Output_14"."Proba_1" > 0.0) THEN ln("DT_Output_14"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_14"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_14"."Proba_2" IS NULL OR "DT_Output_14"."Proba_2" > 0.0) THEN ln("DT_Output_14"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_14"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_14"."Proba_3" IS NULL OR "DT_Output_14"."Proba_3" > 0.0) THEN ln("DT_Output_14"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_14"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_14"."Proba_4" IS NULL OR "DT_Output_14"."Proba_4" > 0.0) THEN ln("DT_Output_14"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_14"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_14"."Proba_5" IS NULL OR "DT_Output_14"."Proba_5" > 0.0) THEN ln("DT_Output_14"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_14"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_14"."Proba_6" IS NULL OR "DT_Output_14"."Proba_6" > 0.0) THEN ln("DT_Output_14"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_14"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_14"."Proba_7" IS NULL OR "DT_Output_14"."Proba_7" > 0.0) THEN ln("DT_Output_14"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_14"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_14"."Proba_8" IS NULL OR "DT_Output_14"."Proba_8" > 0.0) THEN ln("DT_Output_14"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_14"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_14"."Proba_9" IS NULL OR "DT_Output_14"."Proba_9" > 0.0) THEN ln("DT_Output_14"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10) AS "Proba_7", (9.0 * (CASE WHEN ("DT_Output_14"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_14"."Proba_8" IS NULL OR "DT_Output_14"."Proba_8" > 0.0) THEN ln("DT_Output_14"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_14"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_14"."Proba_0" IS NULL OR "DT_Output_14"."Proba_0" > 0.0) THEN ln("DT_Output_14"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_14"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_14"."Proba_1" IS NULL OR "DT_Output_14"."Proba_1" > 0.0) THEN ln("DT_Output_14"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_14"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_14"."Proba_2" IS NULL OR "DT_Output_14"."Proba_2" > 0.0) THEN ln("DT_Output_14"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_14"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_14"."Proba_3" IS NULL OR "DT_Output_14"."Proba_3" > 0.0) THEN ln("DT_Output_14"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_14"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_14"."Proba_4" IS NULL OR "DT_Output_14"."Proba_4" > 0.0) THEN ln("DT_Output_14"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_14"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_14"."Proba_5" IS NULL OR "DT_Output_14"."Proba_5" > 0.0) THEN ln("DT_Output_14"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_14"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_14"."Proba_6" IS NULL OR "DT_Output_14"."Proba_6" > 0.0) THEN ln("DT_Output_14"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_14"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_14"."Proba_7" IS NULL OR "DT_Output_14"."Proba_7" > 0.0) THEN ln("DT_Output_14"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_14"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_14"."Proba_8" IS NULL OR "DT_Output_14"."Proba_8" > 0.0) THEN ln("DT_Output_14"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_14"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_14"."Proba_9" IS NULL OR "DT_Output_14"."Proba_9" > 0.0) THEN ln("DT_Output_14"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10)) / 32.0 AS "Score_8", 9.0 * (CASE WHEN ("DT_Output_14"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_14"."Proba_8" IS NULL OR "DT_Output_14"."Proba_8" > 0.0) THEN ln("DT_Output_14"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_14"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_14"."Proba_0" IS NULL OR "DT_Output_14"."Proba_0" > 0.0) THEN ln("DT_Output_14"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_14"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_14"."Proba_1" IS NULL OR "DT_Output_14"."Proba_1" > 0.0) THEN ln("DT_Output_14"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_14"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_14"."Proba_2" IS NULL OR "DT_Output_14"."Proba_2" > 0.0) THEN ln("DT_Output_14"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_14"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_14"."Proba_3" IS NULL OR "DT_Output_14"."Proba_3" > 0.0) THEN ln("DT_Output_14"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_14"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_14"."Proba_4" IS NULL OR "DT_Output_14"."Proba_4" > 0.0) THEN ln("DT_Output_14"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_14"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_14"."Proba_5" IS NULL OR "DT_Output_14"."Proba_5" > 0.0) THEN ln("DT_Output_14"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_14"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_14"."Proba_6" IS NULL OR "DT_Output_14"."Proba_6" > 0.0) THEN ln("DT_Output_14"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_14"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_14"."Proba_7" IS NULL OR "DT_Output_14"."Proba_7" > 0.0) THEN ln("DT_Output_14"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_14"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_14"."Proba_8" IS NULL OR "DT_Output_14"."Proba_8" > 0.0) THEN ln("DT_Output_14"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_14"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_14"."Proba_9" IS NULL OR "DT_Output_14"."Proba_9" > 0.0) THEN ln("DT_Output_14"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10) AS "Proba_8", (9.0 * (CASE WHEN ("DT_Output_14"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_14"."Proba_9" IS NULL OR "DT_Output_14"."Proba_9" > 0.0) THEN ln("DT_Output_14"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_14"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_14"."Proba_0" IS NULL OR "DT_Output_14"."Proba_0" > 0.0) THEN ln("DT_Output_14"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_14"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_14"."Proba_1" IS NULL OR "DT_Output_14"."Proba_1" > 0.0) THEN ln("DT_Output_14"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_14"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_14"."Proba_2" IS NULL OR "DT_Output_14"."Proba_2" > 0.0) THEN ln("DT_Output_14"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_14"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_14"."Proba_3" IS NULL OR "DT_Output_14"."Proba_3" > 0.0) THEN ln("DT_Output_14"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_14"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_14"."Proba_4" IS NULL OR "DT_Output_14"."Proba_4" > 0.0) THEN ln("DT_Output_14"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_14"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_14"."Proba_5" IS NULL OR "DT_Output_14"."Proba_5" > 0.0) THEN ln("DT_Output_14"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_14"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_14"."Proba_6" IS NULL OR "DT_Output_14"."Proba_6" > 0.0) THEN ln("DT_Output_14"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_14"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_14"."Proba_7" IS NULL OR "DT_Output_14"."Proba_7" > 0.0) THEN ln("DT_Output_14"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_14"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_14"."Proba_8" IS NULL OR "DT_Output_14"."Proba_8" > 0.0) THEN ln("DT_Output_14"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_14"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_14"."Proba_9" IS NULL OR "DT_Output_14"."Proba_9" > 0.0) THEN ln("DT_Output_14"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10)) / 32.0 AS "Score_9", 9.0 * (CASE WHEN ("DT_Output_14"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_14"."Proba_9" IS NULL OR "DT_Output_14"."Proba_9" > 0.0) THEN ln("DT_Output_14"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_14"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_14"."Proba_0" IS NULL OR "DT_Output_14"."Proba_0" > 0.0) THEN ln("DT_Output_14"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_14"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_14"."Proba_1" IS NULL OR "DT_Output_14"."Proba_1" > 0.0) THEN ln("DT_Output_14"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_14"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_14"."Proba_2" IS NULL OR "DT_Output_14"."Proba_2" > 0.0) THEN ln("DT_Output_14"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_14"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_14"."Proba_3" IS NULL OR "DT_Output_14"."Proba_3" > 0.0) THEN ln("DT_Output_14"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_14"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_14"."Proba_4" IS NULL OR "DT_Output_14"."Proba_4" > 0.0) THEN ln("DT_Output_14"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_14"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_14"."Proba_5" IS NULL OR "DT_Output_14"."Proba_5" > 0.0) THEN ln("DT_Output_14"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_14"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_14"."Proba_6" IS NULL OR "DT_Output_14"."Proba_6" > 0.0) THEN ln("DT_Output_14"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_14"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_14"."Proba_7" IS NULL OR "DT_Output_14"."Proba_7" > 0.0) THEN ln("DT_Output_14"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_14"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_14"."Proba_8" IS NULL OR "DT_Output_14"."Proba_8" > 0.0) THEN ln("DT_Output_14"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_14"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_14"."Proba_9" IS NULL OR "DT_Output_14"."Proba_9" > 0.0) THEN ln("DT_Output_14"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10) AS "Proba_9" 
FROM "DT_Output_14"), 
"DT_node_lookup_15" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_38 <= -1.6508052349090576) THEN 1 ELSE 2 END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_15" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Proba_0" AS "Proba_0", "Values"."LogProba_0" AS "LogProba_0", "Values"."Proba_1" AS "Proba_1", "Values"."LogProba_1" AS "LogProba_1", "Values"."Proba_2" AS "Proba_2", "Values"."LogProba_2" AS "LogProba_2", "Values"."Proba_3" AS "Proba_3", "Values"."LogProba_3" AS "LogProba_3", "Values"."Proba_4" AS "Proba_4", "Values"."LogProba_4" AS "LogProba_4", "Values"."Proba_5" AS "Proba_5", "Values"."LogProba_5" AS "LogProba_5", "Values"."Proba_6" AS "Proba_6", "Values"."LogProba_6" AS "LogProba_6", "Values"."Proba_7" AS "Proba_7", "Values"."LogProba_7" AS "LogProba_7", "Values"."Proba_8" AS "Proba_8", "Values"."LogProba_8" AS "LogProba_8", "Values"."Proba_9" AS "Proba_9", "Values"."LogProba_9" AS "LogProba_9", "Values"."Decision" AS "Decision", "Values"."DecisionProba" AS "DecisionProba" 
FROM (SELECT 1 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 219 AS count, 1 AS depth, 0 AS parent_id, 0.9999999853094058 AS "Proba_0", -1.46905942935e-08 AS "LogProba_0", 0.0 AS "Proba_1", -BINARY_FLOAT_INFINITY AS "LogProba_1", 2.0994596028269526e-09 AS "Proba_2", -19.9815858573 AS "LogProba_2", 2.0985554414817727e-09 AS "Proba_3", -19.9820166139 AS "LogProba_3", 2.0989981216959223e-09 AS "Proba_4", -19.981805691 AS "LogProba_4", 2.0985567053277525e-09 AS "Proba_5", -19.9820160117 AS "LogProba_5", 2.09855622351375e-09 AS "Proba_6", -19.9820162413 AS "LogProba_6", 0.0 AS "Proba_7", -BINARY_FLOAT_INFINITY AS "LogProba_7", 2.09791244460039e-09 AS "Proba_8", -19.9823230606 AS "LogProba_8", 2.0985554414817723e-09 AS "Proba_9", -19.9820166139 AS "LogProba_9", 0 AS "Decision", 0.999999985309 AS "DecisionProba" FROM DUAL UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1218 AS count, 1 AS depth, 0 AS parent_id, 3.4461293652897105e-05 AS "Proba_0", -10.2756737869 AS "LogProba_0", 0.1111111112924208 AS "Proba_1", -2.1972245757 AS "LogProba_1", 0.111111111059219 AS "Proba_2", -2.1972245778 AS "LogProba_2", 0.11111111105931952 AS "Proba_3", -2.1972245778 AS "LogProba_3", 0.11111111105927057 AS "Proba_4", -2.1972245778 AS "LogProba_4", 0.11111111105931928 AS "Proba_5", -2.1972245778 AS "LogProba_5", 0.11111111105931959 AS "Proba_6", -2.1972245778 AS "LogProba_6", 0.11111111129242027 AS "Proba_7", -2.1972245757 AS "LogProba_7", 0.11107664976573829 AS "Proba_8", -2.19753477755 AS "LogProba_8", 0.11111111105931974 AS "Proba_9", -2.1972245778 AS "LogProba_9", 1 AS "Decision", 0.111111111292 AS "DecisionProba" FROM DUAL) "Values"), 
"DT_Output_15" AS 
(SELECT "DT_node_lookup_15"."KEY" AS "KEY", "DT_node_lookup_15".node_id_2 AS node_id_2, "DT_node_data_15".node_id AS node_id, "DT_node_data_15".feature AS feature, "DT_node_data_15".threshold AS threshold, "DT_node_data_15".count AS count, "DT_node_data_15".depth AS depth, "DT_node_data_15".parent_id AS parent_id, "DT_node_data_15"."Proba_0" AS "Proba_0", "DT_node_data_15"."LogProba_0" AS "LogProba_0", "DT_node_data_15"."Proba_1" AS "Proba_1", "DT_node_data_15"."LogProba_1" AS "LogProba_1", "DT_node_data_15"."Proba_2" AS "Proba_2", "DT_node_data_15"."LogProba_2" AS "LogProba_2", "DT_node_data_15"."Proba_3" AS "Proba_3", "DT_node_data_15"."LogProba_3" AS "LogProba_3", "DT_node_data_15"."Proba_4" AS "Proba_4", "DT_node_data_15"."LogProba_4" AS "LogProba_4", "DT_node_data_15"."Proba_5" AS "Proba_5", "DT_node_data_15"."LogProba_5" AS "LogProba_5", "DT_node_data_15"."Proba_6" AS "Proba_6", "DT_node_data_15"."LogProba_6" AS "LogProba_6", "DT_node_data_15"."Proba_7" AS "Proba_7", "DT_node_data_15"."LogProba_7" AS "LogProba_7", "DT_node_data_15"."Proba_8" AS "Proba_8", "DT_node_data_15"."LogProba_8" AS "LogProba_8", "DT_node_data_15"."Proba_9" AS "Proba_9", "DT_node_data_15"."LogProba_9" AS "LogProba_9", "DT_node_data_15"."Decision" AS "Decision", "DT_node_data_15"."DecisionProba" AS "DecisionProba" 
FROM "DT_node_lookup_15" LEFT OUTER JOIN "DT_node_data_15" ON "DT_node_lookup_15".node_id_2 = "DT_node_data_15".node_id), 
"AdaBoost_Estim_15" AS 
(SELECT "DT_Output_15"."KEY" AS "KEY", (9.0 * (CASE WHEN ("DT_Output_15"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_15"."Proba_0" IS NULL OR "DT_Output_15"."Proba_0" > 0.0) THEN ln("DT_Output_15"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_15"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_15"."Proba_0" IS NULL OR "DT_Output_15"."Proba_0" > 0.0) THEN ln("DT_Output_15"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_15"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_15"."Proba_1" IS NULL OR "DT_Output_15"."Proba_1" > 0.0) THEN ln("DT_Output_15"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_15"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_15"."Proba_2" IS NULL OR "DT_Output_15"."Proba_2" > 0.0) THEN ln("DT_Output_15"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_15"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_15"."Proba_3" IS NULL OR "DT_Output_15"."Proba_3" > 0.0) THEN ln("DT_Output_15"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_15"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_15"."Proba_4" IS NULL OR "DT_Output_15"."Proba_4" > 0.0) THEN ln("DT_Output_15"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_15"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_15"."Proba_5" IS NULL OR "DT_Output_15"."Proba_5" > 0.0) THEN ln("DT_Output_15"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_15"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_15"."Proba_6" IS NULL OR "DT_Output_15"."Proba_6" > 0.0) THEN ln("DT_Output_15"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_15"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_15"."Proba_7" IS NULL OR "DT_Output_15"."Proba_7" > 0.0) THEN ln("DT_Output_15"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_15"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_15"."Proba_8" IS NULL OR "DT_Output_15"."Proba_8" > 0.0) THEN ln("DT_Output_15"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_15"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_15"."Proba_9" IS NULL OR "DT_Output_15"."Proba_9" > 0.0) THEN ln("DT_Output_15"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10)) / 32.0 AS "Score_0", 9.0 * (CASE WHEN ("DT_Output_15"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_15"."Proba_0" IS NULL OR "DT_Output_15"."Proba_0" > 0.0) THEN ln("DT_Output_15"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_15"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_15"."Proba_0" IS NULL OR "DT_Output_15"."Proba_0" > 0.0) THEN ln("DT_Output_15"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_15"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_15"."Proba_1" IS NULL OR "DT_Output_15"."Proba_1" > 0.0) THEN ln("DT_Output_15"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_15"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_15"."Proba_2" IS NULL OR "DT_Output_15"."Proba_2" > 0.0) THEN ln("DT_Output_15"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_15"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_15"."Proba_3" IS NULL OR "DT_Output_15"."Proba_3" > 0.0) THEN ln("DT_Output_15"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_15"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_15"."Proba_4" IS NULL OR "DT_Output_15"."Proba_4" > 0.0) THEN ln("DT_Output_15"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_15"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_15"."Proba_5" IS NULL OR "DT_Output_15"."Proba_5" > 0.0) THEN ln("DT_Output_15"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_15"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_15"."Proba_6" IS NULL OR "DT_Output_15"."Proba_6" > 0.0) THEN ln("DT_Output_15"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_15"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_15"."Proba_7" IS NULL OR "DT_Output_15"."Proba_7" > 0.0) THEN ln("DT_Output_15"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_15"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_15"."Proba_8" IS NULL OR "DT_Output_15"."Proba_8" > 0.0) THEN ln("DT_Output_15"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_15"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_15"."Proba_9" IS NULL OR "DT_Output_15"."Proba_9" > 0.0) THEN ln("DT_Output_15"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10) AS "Proba_0", (9.0 * (CASE WHEN ("DT_Output_15"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_15"."Proba_1" IS NULL OR "DT_Output_15"."Proba_1" > 0.0) THEN ln("DT_Output_15"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_15"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_15"."Proba_0" IS NULL OR "DT_Output_15"."Proba_0" > 0.0) THEN ln("DT_Output_15"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_15"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_15"."Proba_1" IS NULL OR "DT_Output_15"."Proba_1" > 0.0) THEN ln("DT_Output_15"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_15"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_15"."Proba_2" IS NULL OR "DT_Output_15"."Proba_2" > 0.0) THEN ln("DT_Output_15"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_15"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_15"."Proba_3" IS NULL OR "DT_Output_15"."Proba_3" > 0.0) THEN ln("DT_Output_15"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_15"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_15"."Proba_4" IS NULL OR "DT_Output_15"."Proba_4" > 0.0) THEN ln("DT_Output_15"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_15"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_15"."Proba_5" IS NULL OR "DT_Output_15"."Proba_5" > 0.0) THEN ln("DT_Output_15"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_15"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_15"."Proba_6" IS NULL OR "DT_Output_15"."Proba_6" > 0.0) THEN ln("DT_Output_15"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_15"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_15"."Proba_7" IS NULL OR "DT_Output_15"."Proba_7" > 0.0) THEN ln("DT_Output_15"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_15"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_15"."Proba_8" IS NULL OR "DT_Output_15"."Proba_8" > 0.0) THEN ln("DT_Output_15"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_15"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_15"."Proba_9" IS NULL OR "DT_Output_15"."Proba_9" > 0.0) THEN ln("DT_Output_15"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10)) / 32.0 AS "Score_1", 9.0 * (CASE WHEN ("DT_Output_15"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_15"."Proba_1" IS NULL OR "DT_Output_15"."Proba_1" > 0.0) THEN ln("DT_Output_15"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_15"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_15"."Proba_0" IS NULL OR "DT_Output_15"."Proba_0" > 0.0) THEN ln("DT_Output_15"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_15"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_15"."Proba_1" IS NULL OR "DT_Output_15"."Proba_1" > 0.0) THEN ln("DT_Output_15"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_15"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_15"."Proba_2" IS NULL OR "DT_Output_15"."Proba_2" > 0.0) THEN ln("DT_Output_15"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_15"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_15"."Proba_3" IS NULL OR "DT_Output_15"."Proba_3" > 0.0) THEN ln("DT_Output_15"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_15"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_15"."Proba_4" IS NULL OR "DT_Output_15"."Proba_4" > 0.0) THEN ln("DT_Output_15"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_15"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_15"."Proba_5" IS NULL OR "DT_Output_15"."Proba_5" > 0.0) THEN ln("DT_Output_15"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_15"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_15"."Proba_6" IS NULL OR "DT_Output_15"."Proba_6" > 0.0) THEN ln("DT_Output_15"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_15"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_15"."Proba_7" IS NULL OR "DT_Output_15"."Proba_7" > 0.0) THEN ln("DT_Output_15"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_15"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_15"."Proba_8" IS NULL OR "DT_Output_15"."Proba_8" > 0.0) THEN ln("DT_Output_15"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_15"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_15"."Proba_9" IS NULL OR "DT_Output_15"."Proba_9" > 0.0) THEN ln("DT_Output_15"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10) AS "Proba_1", (9.0 * (CASE WHEN ("DT_Output_15"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_15"."Proba_2" IS NULL OR "DT_Output_15"."Proba_2" > 0.0) THEN ln("DT_Output_15"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_15"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_15"."Proba_0" IS NULL OR "DT_Output_15"."Proba_0" > 0.0) THEN ln("DT_Output_15"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_15"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_15"."Proba_1" IS NULL OR "DT_Output_15"."Proba_1" > 0.0) THEN ln("DT_Output_15"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_15"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_15"."Proba_2" IS NULL OR "DT_Output_15"."Proba_2" > 0.0) THEN ln("DT_Output_15"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_15"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_15"."Proba_3" IS NULL OR "DT_Output_15"."Proba_3" > 0.0) THEN ln("DT_Output_15"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_15"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_15"."Proba_4" IS NULL OR "DT_Output_15"."Proba_4" > 0.0) THEN ln("DT_Output_15"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_15"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_15"."Proba_5" IS NULL OR "DT_Output_15"."Proba_5" > 0.0) THEN ln("DT_Output_15"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_15"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_15"."Proba_6" IS NULL OR "DT_Output_15"."Proba_6" > 0.0) THEN ln("DT_Output_15"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_15"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_15"."Proba_7" IS NULL OR "DT_Output_15"."Proba_7" > 0.0) THEN ln("DT_Output_15"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_15"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_15"."Proba_8" IS NULL OR "DT_Output_15"."Proba_8" > 0.0) THEN ln("DT_Output_15"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_15"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_15"."Proba_9" IS NULL OR "DT_Output_15"."Proba_9" > 0.0) THEN ln("DT_Output_15"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10)) / 32.0 AS "Score_2", 9.0 * (CASE WHEN ("DT_Output_15"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_15"."Proba_2" IS NULL OR "DT_Output_15"."Proba_2" > 0.0) THEN ln("DT_Output_15"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_15"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_15"."Proba_0" IS NULL OR "DT_Output_15"."Proba_0" > 0.0) THEN ln("DT_Output_15"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_15"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_15"."Proba_1" IS NULL OR "DT_Output_15"."Proba_1" > 0.0) THEN ln("DT_Output_15"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_15"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_15"."Proba_2" IS NULL OR "DT_Output_15"."Proba_2" > 0.0) THEN ln("DT_Output_15"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_15"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_15"."Proba_3" IS NULL OR "DT_Output_15"."Proba_3" > 0.0) THEN ln("DT_Output_15"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_15"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_15"."Proba_4" IS NULL OR "DT_Output_15"."Proba_4" > 0.0) THEN ln("DT_Output_15"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_15"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_15"."Proba_5" IS NULL OR "DT_Output_15"."Proba_5" > 0.0) THEN ln("DT_Output_15"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_15"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_15"."Proba_6" IS NULL OR "DT_Output_15"."Proba_6" > 0.0) THEN ln("DT_Output_15"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_15"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_15"."Proba_7" IS NULL OR "DT_Output_15"."Proba_7" > 0.0) THEN ln("DT_Output_15"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_15"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_15"."Proba_8" IS NULL OR "DT_Output_15"."Proba_8" > 0.0) THEN ln("DT_Output_15"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_15"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_15"."Proba_9" IS NULL OR "DT_Output_15"."Proba_9" > 0.0) THEN ln("DT_Output_15"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10) AS "Proba_2", (9.0 * (CASE WHEN ("DT_Output_15"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_15"."Proba_3" IS NULL OR "DT_Output_15"."Proba_3" > 0.0) THEN ln("DT_Output_15"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_15"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_15"."Proba_0" IS NULL OR "DT_Output_15"."Proba_0" > 0.0) THEN ln("DT_Output_15"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_15"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_15"."Proba_1" IS NULL OR "DT_Output_15"."Proba_1" > 0.0) THEN ln("DT_Output_15"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_15"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_15"."Proba_2" IS NULL OR "DT_Output_15"."Proba_2" > 0.0) THEN ln("DT_Output_15"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_15"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_15"."Proba_3" IS NULL OR "DT_Output_15"."Proba_3" > 0.0) THEN ln("DT_Output_15"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_15"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_15"."Proba_4" IS NULL OR "DT_Output_15"."Proba_4" > 0.0) THEN ln("DT_Output_15"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_15"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_15"."Proba_5" IS NULL OR "DT_Output_15"."Proba_5" > 0.0) THEN ln("DT_Output_15"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_15"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_15"."Proba_6" IS NULL OR "DT_Output_15"."Proba_6" > 0.0) THEN ln("DT_Output_15"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_15"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_15"."Proba_7" IS NULL OR "DT_Output_15"."Proba_7" > 0.0) THEN ln("DT_Output_15"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_15"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_15"."Proba_8" IS NULL OR "DT_Output_15"."Proba_8" > 0.0) THEN ln("DT_Output_15"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_15"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_15"."Proba_9" IS NULL OR "DT_Output_15"."Proba_9" > 0.0) THEN ln("DT_Output_15"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10)) / 32.0 AS "Score_3", 9.0 * (CASE WHEN ("DT_Output_15"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_15"."Proba_3" IS NULL OR "DT_Output_15"."Proba_3" > 0.0) THEN ln("DT_Output_15"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_15"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_15"."Proba_0" IS NULL OR "DT_Output_15"."Proba_0" > 0.0) THEN ln("DT_Output_15"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_15"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_15"."Proba_1" IS NULL OR "DT_Output_15"."Proba_1" > 0.0) THEN ln("DT_Output_15"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_15"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_15"."Proba_2" IS NULL OR "DT_Output_15"."Proba_2" > 0.0) THEN ln("DT_Output_15"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_15"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_15"."Proba_3" IS NULL OR "DT_Output_15"."Proba_3" > 0.0) THEN ln("DT_Output_15"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_15"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_15"."Proba_4" IS NULL OR "DT_Output_15"."Proba_4" > 0.0) THEN ln("DT_Output_15"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_15"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_15"."Proba_5" IS NULL OR "DT_Output_15"."Proba_5" > 0.0) THEN ln("DT_Output_15"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_15"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_15"."Proba_6" IS NULL OR "DT_Output_15"."Proba_6" > 0.0) THEN ln("DT_Output_15"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_15"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_15"."Proba_7" IS NULL OR "DT_Output_15"."Proba_7" > 0.0) THEN ln("DT_Output_15"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_15"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_15"."Proba_8" IS NULL OR "DT_Output_15"."Proba_8" > 0.0) THEN ln("DT_Output_15"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_15"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_15"."Proba_9" IS NULL OR "DT_Output_15"."Proba_9" > 0.0) THEN ln("DT_Output_15"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10) AS "Proba_3", (9.0 * (CASE WHEN ("DT_Output_15"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_15"."Proba_4" IS NULL OR "DT_Output_15"."Proba_4" > 0.0) THEN ln("DT_Output_15"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_15"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_15"."Proba_0" IS NULL OR "DT_Output_15"."Proba_0" > 0.0) THEN ln("DT_Output_15"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_15"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_15"."Proba_1" IS NULL OR "DT_Output_15"."Proba_1" > 0.0) THEN ln("DT_Output_15"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_15"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_15"."Proba_2" IS NULL OR "DT_Output_15"."Proba_2" > 0.0) THEN ln("DT_Output_15"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_15"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_15"."Proba_3" IS NULL OR "DT_Output_15"."Proba_3" > 0.0) THEN ln("DT_Output_15"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_15"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_15"."Proba_4" IS NULL OR "DT_Output_15"."Proba_4" > 0.0) THEN ln("DT_Output_15"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_15"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_15"."Proba_5" IS NULL OR "DT_Output_15"."Proba_5" > 0.0) THEN ln("DT_Output_15"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_15"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_15"."Proba_6" IS NULL OR "DT_Output_15"."Proba_6" > 0.0) THEN ln("DT_Output_15"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_15"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_15"."Proba_7" IS NULL OR "DT_Output_15"."Proba_7" > 0.0) THEN ln("DT_Output_15"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_15"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_15"."Proba_8" IS NULL OR "DT_Output_15"."Proba_8" > 0.0) THEN ln("DT_Output_15"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_15"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_15"."Proba_9" IS NULL OR "DT_Output_15"."Proba_9" > 0.0) THEN ln("DT_Output_15"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10)) / 32.0 AS "Score_4", 9.0 * (CASE WHEN ("DT_Output_15"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_15"."Proba_4" IS NULL OR "DT_Output_15"."Proba_4" > 0.0) THEN ln("DT_Output_15"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_15"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_15"."Proba_0" IS NULL OR "DT_Output_15"."Proba_0" > 0.0) THEN ln("DT_Output_15"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_15"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_15"."Proba_1" IS NULL OR "DT_Output_15"."Proba_1" > 0.0) THEN ln("DT_Output_15"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_15"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_15"."Proba_2" IS NULL OR "DT_Output_15"."Proba_2" > 0.0) THEN ln("DT_Output_15"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_15"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_15"."Proba_3" IS NULL OR "DT_Output_15"."Proba_3" > 0.0) THEN ln("DT_Output_15"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_15"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_15"."Proba_4" IS NULL OR "DT_Output_15"."Proba_4" > 0.0) THEN ln("DT_Output_15"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_15"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_15"."Proba_5" IS NULL OR "DT_Output_15"."Proba_5" > 0.0) THEN ln("DT_Output_15"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_15"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_15"."Proba_6" IS NULL OR "DT_Output_15"."Proba_6" > 0.0) THEN ln("DT_Output_15"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_15"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_15"."Proba_7" IS NULL OR "DT_Output_15"."Proba_7" > 0.0) THEN ln("DT_Output_15"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_15"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_15"."Proba_8" IS NULL OR "DT_Output_15"."Proba_8" > 0.0) THEN ln("DT_Output_15"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_15"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_15"."Proba_9" IS NULL OR "DT_Output_15"."Proba_9" > 0.0) THEN ln("DT_Output_15"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10) AS "Proba_4", (9.0 * (CASE WHEN ("DT_Output_15"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_15"."Proba_5" IS NULL OR "DT_Output_15"."Proba_5" > 0.0) THEN ln("DT_Output_15"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_15"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_15"."Proba_0" IS NULL OR "DT_Output_15"."Proba_0" > 0.0) THEN ln("DT_Output_15"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_15"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_15"."Proba_1" IS NULL OR "DT_Output_15"."Proba_1" > 0.0) THEN ln("DT_Output_15"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_15"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_15"."Proba_2" IS NULL OR "DT_Output_15"."Proba_2" > 0.0) THEN ln("DT_Output_15"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_15"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_15"."Proba_3" IS NULL OR "DT_Output_15"."Proba_3" > 0.0) THEN ln("DT_Output_15"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_15"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_15"."Proba_4" IS NULL OR "DT_Output_15"."Proba_4" > 0.0) THEN ln("DT_Output_15"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_15"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_15"."Proba_5" IS NULL OR "DT_Output_15"."Proba_5" > 0.0) THEN ln("DT_Output_15"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_15"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_15"."Proba_6" IS NULL OR "DT_Output_15"."Proba_6" > 0.0) THEN ln("DT_Output_15"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_15"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_15"."Proba_7" IS NULL OR "DT_Output_15"."Proba_7" > 0.0) THEN ln("DT_Output_15"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_15"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_15"."Proba_8" IS NULL OR "DT_Output_15"."Proba_8" > 0.0) THEN ln("DT_Output_15"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_15"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_15"."Proba_9" IS NULL OR "DT_Output_15"."Proba_9" > 0.0) THEN ln("DT_Output_15"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10)) / 32.0 AS "Score_5", 9.0 * (CASE WHEN ("DT_Output_15"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_15"."Proba_5" IS NULL OR "DT_Output_15"."Proba_5" > 0.0) THEN ln("DT_Output_15"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_15"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_15"."Proba_0" IS NULL OR "DT_Output_15"."Proba_0" > 0.0) THEN ln("DT_Output_15"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_15"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_15"."Proba_1" IS NULL OR "DT_Output_15"."Proba_1" > 0.0) THEN ln("DT_Output_15"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_15"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_15"."Proba_2" IS NULL OR "DT_Output_15"."Proba_2" > 0.0) THEN ln("DT_Output_15"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_15"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_15"."Proba_3" IS NULL OR "DT_Output_15"."Proba_3" > 0.0) THEN ln("DT_Output_15"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_15"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_15"."Proba_4" IS NULL OR "DT_Output_15"."Proba_4" > 0.0) THEN ln("DT_Output_15"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_15"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_15"."Proba_5" IS NULL OR "DT_Output_15"."Proba_5" > 0.0) THEN ln("DT_Output_15"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_15"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_15"."Proba_6" IS NULL OR "DT_Output_15"."Proba_6" > 0.0) THEN ln("DT_Output_15"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_15"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_15"."Proba_7" IS NULL OR "DT_Output_15"."Proba_7" > 0.0) THEN ln("DT_Output_15"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_15"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_15"."Proba_8" IS NULL OR "DT_Output_15"."Proba_8" > 0.0) THEN ln("DT_Output_15"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_15"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_15"."Proba_9" IS NULL OR "DT_Output_15"."Proba_9" > 0.0) THEN ln("DT_Output_15"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10) AS "Proba_5", (9.0 * (CASE WHEN ("DT_Output_15"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_15"."Proba_6" IS NULL OR "DT_Output_15"."Proba_6" > 0.0) THEN ln("DT_Output_15"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_15"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_15"."Proba_0" IS NULL OR "DT_Output_15"."Proba_0" > 0.0) THEN ln("DT_Output_15"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_15"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_15"."Proba_1" IS NULL OR "DT_Output_15"."Proba_1" > 0.0) THEN ln("DT_Output_15"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_15"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_15"."Proba_2" IS NULL OR "DT_Output_15"."Proba_2" > 0.0) THEN ln("DT_Output_15"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_15"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_15"."Proba_3" IS NULL OR "DT_Output_15"."Proba_3" > 0.0) THEN ln("DT_Output_15"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_15"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_15"."Proba_4" IS NULL OR "DT_Output_15"."Proba_4" > 0.0) THEN ln("DT_Output_15"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_15"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_15"."Proba_5" IS NULL OR "DT_Output_15"."Proba_5" > 0.0) THEN ln("DT_Output_15"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_15"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_15"."Proba_6" IS NULL OR "DT_Output_15"."Proba_6" > 0.0) THEN ln("DT_Output_15"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_15"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_15"."Proba_7" IS NULL OR "DT_Output_15"."Proba_7" > 0.0) THEN ln("DT_Output_15"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_15"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_15"."Proba_8" IS NULL OR "DT_Output_15"."Proba_8" > 0.0) THEN ln("DT_Output_15"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_15"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_15"."Proba_9" IS NULL OR "DT_Output_15"."Proba_9" > 0.0) THEN ln("DT_Output_15"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10)) / 32.0 AS "Score_6", 9.0 * (CASE WHEN ("DT_Output_15"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_15"."Proba_6" IS NULL OR "DT_Output_15"."Proba_6" > 0.0) THEN ln("DT_Output_15"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_15"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_15"."Proba_0" IS NULL OR "DT_Output_15"."Proba_0" > 0.0) THEN ln("DT_Output_15"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_15"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_15"."Proba_1" IS NULL OR "DT_Output_15"."Proba_1" > 0.0) THEN ln("DT_Output_15"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_15"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_15"."Proba_2" IS NULL OR "DT_Output_15"."Proba_2" > 0.0) THEN ln("DT_Output_15"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_15"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_15"."Proba_3" IS NULL OR "DT_Output_15"."Proba_3" > 0.0) THEN ln("DT_Output_15"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_15"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_15"."Proba_4" IS NULL OR "DT_Output_15"."Proba_4" > 0.0) THEN ln("DT_Output_15"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_15"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_15"."Proba_5" IS NULL OR "DT_Output_15"."Proba_5" > 0.0) THEN ln("DT_Output_15"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_15"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_15"."Proba_6" IS NULL OR "DT_Output_15"."Proba_6" > 0.0) THEN ln("DT_Output_15"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_15"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_15"."Proba_7" IS NULL OR "DT_Output_15"."Proba_7" > 0.0) THEN ln("DT_Output_15"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_15"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_15"."Proba_8" IS NULL OR "DT_Output_15"."Proba_8" > 0.0) THEN ln("DT_Output_15"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_15"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_15"."Proba_9" IS NULL OR "DT_Output_15"."Proba_9" > 0.0) THEN ln("DT_Output_15"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10) AS "Proba_6", (9.0 * (CASE WHEN ("DT_Output_15"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_15"."Proba_7" IS NULL OR "DT_Output_15"."Proba_7" > 0.0) THEN ln("DT_Output_15"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_15"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_15"."Proba_0" IS NULL OR "DT_Output_15"."Proba_0" > 0.0) THEN ln("DT_Output_15"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_15"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_15"."Proba_1" IS NULL OR "DT_Output_15"."Proba_1" > 0.0) THEN ln("DT_Output_15"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_15"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_15"."Proba_2" IS NULL OR "DT_Output_15"."Proba_2" > 0.0) THEN ln("DT_Output_15"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_15"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_15"."Proba_3" IS NULL OR "DT_Output_15"."Proba_3" > 0.0) THEN ln("DT_Output_15"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_15"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_15"."Proba_4" IS NULL OR "DT_Output_15"."Proba_4" > 0.0) THEN ln("DT_Output_15"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_15"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_15"."Proba_5" IS NULL OR "DT_Output_15"."Proba_5" > 0.0) THEN ln("DT_Output_15"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_15"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_15"."Proba_6" IS NULL OR "DT_Output_15"."Proba_6" > 0.0) THEN ln("DT_Output_15"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_15"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_15"."Proba_7" IS NULL OR "DT_Output_15"."Proba_7" > 0.0) THEN ln("DT_Output_15"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_15"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_15"."Proba_8" IS NULL OR "DT_Output_15"."Proba_8" > 0.0) THEN ln("DT_Output_15"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_15"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_15"."Proba_9" IS NULL OR "DT_Output_15"."Proba_9" > 0.0) THEN ln("DT_Output_15"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10)) / 32.0 AS "Score_7", 9.0 * (CASE WHEN ("DT_Output_15"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_15"."Proba_7" IS NULL OR "DT_Output_15"."Proba_7" > 0.0) THEN ln("DT_Output_15"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_15"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_15"."Proba_0" IS NULL OR "DT_Output_15"."Proba_0" > 0.0) THEN ln("DT_Output_15"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_15"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_15"."Proba_1" IS NULL OR "DT_Output_15"."Proba_1" > 0.0) THEN ln("DT_Output_15"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_15"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_15"."Proba_2" IS NULL OR "DT_Output_15"."Proba_2" > 0.0) THEN ln("DT_Output_15"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_15"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_15"."Proba_3" IS NULL OR "DT_Output_15"."Proba_3" > 0.0) THEN ln("DT_Output_15"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_15"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_15"."Proba_4" IS NULL OR "DT_Output_15"."Proba_4" > 0.0) THEN ln("DT_Output_15"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_15"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_15"."Proba_5" IS NULL OR "DT_Output_15"."Proba_5" > 0.0) THEN ln("DT_Output_15"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_15"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_15"."Proba_6" IS NULL OR "DT_Output_15"."Proba_6" > 0.0) THEN ln("DT_Output_15"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_15"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_15"."Proba_7" IS NULL OR "DT_Output_15"."Proba_7" > 0.0) THEN ln("DT_Output_15"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_15"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_15"."Proba_8" IS NULL OR "DT_Output_15"."Proba_8" > 0.0) THEN ln("DT_Output_15"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_15"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_15"."Proba_9" IS NULL OR "DT_Output_15"."Proba_9" > 0.0) THEN ln("DT_Output_15"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10) AS "Proba_7", (9.0 * (CASE WHEN ("DT_Output_15"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_15"."Proba_8" IS NULL OR "DT_Output_15"."Proba_8" > 0.0) THEN ln("DT_Output_15"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_15"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_15"."Proba_0" IS NULL OR "DT_Output_15"."Proba_0" > 0.0) THEN ln("DT_Output_15"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_15"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_15"."Proba_1" IS NULL OR "DT_Output_15"."Proba_1" > 0.0) THEN ln("DT_Output_15"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_15"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_15"."Proba_2" IS NULL OR "DT_Output_15"."Proba_2" > 0.0) THEN ln("DT_Output_15"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_15"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_15"."Proba_3" IS NULL OR "DT_Output_15"."Proba_3" > 0.0) THEN ln("DT_Output_15"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_15"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_15"."Proba_4" IS NULL OR "DT_Output_15"."Proba_4" > 0.0) THEN ln("DT_Output_15"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_15"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_15"."Proba_5" IS NULL OR "DT_Output_15"."Proba_5" > 0.0) THEN ln("DT_Output_15"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_15"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_15"."Proba_6" IS NULL OR "DT_Output_15"."Proba_6" > 0.0) THEN ln("DT_Output_15"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_15"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_15"."Proba_7" IS NULL OR "DT_Output_15"."Proba_7" > 0.0) THEN ln("DT_Output_15"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_15"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_15"."Proba_8" IS NULL OR "DT_Output_15"."Proba_8" > 0.0) THEN ln("DT_Output_15"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_15"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_15"."Proba_9" IS NULL OR "DT_Output_15"."Proba_9" > 0.0) THEN ln("DT_Output_15"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10)) / 32.0 AS "Score_8", 9.0 * (CASE WHEN ("DT_Output_15"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_15"."Proba_8" IS NULL OR "DT_Output_15"."Proba_8" > 0.0) THEN ln("DT_Output_15"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_15"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_15"."Proba_0" IS NULL OR "DT_Output_15"."Proba_0" > 0.0) THEN ln("DT_Output_15"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_15"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_15"."Proba_1" IS NULL OR "DT_Output_15"."Proba_1" > 0.0) THEN ln("DT_Output_15"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_15"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_15"."Proba_2" IS NULL OR "DT_Output_15"."Proba_2" > 0.0) THEN ln("DT_Output_15"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_15"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_15"."Proba_3" IS NULL OR "DT_Output_15"."Proba_3" > 0.0) THEN ln("DT_Output_15"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_15"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_15"."Proba_4" IS NULL OR "DT_Output_15"."Proba_4" > 0.0) THEN ln("DT_Output_15"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_15"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_15"."Proba_5" IS NULL OR "DT_Output_15"."Proba_5" > 0.0) THEN ln("DT_Output_15"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_15"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_15"."Proba_6" IS NULL OR "DT_Output_15"."Proba_6" > 0.0) THEN ln("DT_Output_15"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_15"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_15"."Proba_7" IS NULL OR "DT_Output_15"."Proba_7" > 0.0) THEN ln("DT_Output_15"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_15"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_15"."Proba_8" IS NULL OR "DT_Output_15"."Proba_8" > 0.0) THEN ln("DT_Output_15"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_15"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_15"."Proba_9" IS NULL OR "DT_Output_15"."Proba_9" > 0.0) THEN ln("DT_Output_15"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10) AS "Proba_8", (9.0 * (CASE WHEN ("DT_Output_15"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_15"."Proba_9" IS NULL OR "DT_Output_15"."Proba_9" > 0.0) THEN ln("DT_Output_15"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_15"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_15"."Proba_0" IS NULL OR "DT_Output_15"."Proba_0" > 0.0) THEN ln("DT_Output_15"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_15"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_15"."Proba_1" IS NULL OR "DT_Output_15"."Proba_1" > 0.0) THEN ln("DT_Output_15"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_15"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_15"."Proba_2" IS NULL OR "DT_Output_15"."Proba_2" > 0.0) THEN ln("DT_Output_15"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_15"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_15"."Proba_3" IS NULL OR "DT_Output_15"."Proba_3" > 0.0) THEN ln("DT_Output_15"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_15"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_15"."Proba_4" IS NULL OR "DT_Output_15"."Proba_4" > 0.0) THEN ln("DT_Output_15"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_15"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_15"."Proba_5" IS NULL OR "DT_Output_15"."Proba_5" > 0.0) THEN ln("DT_Output_15"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_15"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_15"."Proba_6" IS NULL OR "DT_Output_15"."Proba_6" > 0.0) THEN ln("DT_Output_15"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_15"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_15"."Proba_7" IS NULL OR "DT_Output_15"."Proba_7" > 0.0) THEN ln("DT_Output_15"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_15"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_15"."Proba_8" IS NULL OR "DT_Output_15"."Proba_8" > 0.0) THEN ln("DT_Output_15"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_15"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_15"."Proba_9" IS NULL OR "DT_Output_15"."Proba_9" > 0.0) THEN ln("DT_Output_15"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10)) / 32.0 AS "Score_9", 9.0 * (CASE WHEN ("DT_Output_15"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_15"."Proba_9" IS NULL OR "DT_Output_15"."Proba_9" > 0.0) THEN ln("DT_Output_15"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_15"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_15"."Proba_0" IS NULL OR "DT_Output_15"."Proba_0" > 0.0) THEN ln("DT_Output_15"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_15"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_15"."Proba_1" IS NULL OR "DT_Output_15"."Proba_1" > 0.0) THEN ln("DT_Output_15"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_15"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_15"."Proba_2" IS NULL OR "DT_Output_15"."Proba_2" > 0.0) THEN ln("DT_Output_15"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_15"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_15"."Proba_3" IS NULL OR "DT_Output_15"."Proba_3" > 0.0) THEN ln("DT_Output_15"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_15"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_15"."Proba_4" IS NULL OR "DT_Output_15"."Proba_4" > 0.0) THEN ln("DT_Output_15"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_15"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_15"."Proba_5" IS NULL OR "DT_Output_15"."Proba_5" > 0.0) THEN ln("DT_Output_15"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_15"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_15"."Proba_6" IS NULL OR "DT_Output_15"."Proba_6" > 0.0) THEN ln("DT_Output_15"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_15"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_15"."Proba_7" IS NULL OR "DT_Output_15"."Proba_7" > 0.0) THEN ln("DT_Output_15"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_15"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_15"."Proba_8" IS NULL OR "DT_Output_15"."Proba_8" > 0.0) THEN ln("DT_Output_15"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_15"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_15"."Proba_9" IS NULL OR "DT_Output_15"."Proba_9" > 0.0) THEN ln("DT_Output_15"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10) AS "Proba_9" 
FROM "DT_Output_15"), 
"DT_node_lookup_16" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_30 <= -1.555469036102295) THEN 1 ELSE 2 END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_16" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Proba_0" AS "Proba_0", "Values"."LogProba_0" AS "LogProba_0", "Values"."Proba_1" AS "Proba_1", "Values"."LogProba_1" AS "LogProba_1", "Values"."Proba_2" AS "Proba_2", "Values"."LogProba_2" AS "LogProba_2", "Values"."Proba_3" AS "Proba_3", "Values"."LogProba_3" AS "LogProba_3", "Values"."Proba_4" AS "Proba_4", "Values"."LogProba_4" AS "LogProba_4", "Values"."Proba_5" AS "Proba_5", "Values"."LogProba_5" AS "LogProba_5", "Values"."Proba_6" AS "Proba_6", "Values"."LogProba_6" AS "LogProba_6", "Values"."Proba_7" AS "Proba_7", "Values"."LogProba_7" AS "LogProba_7", "Values"."Proba_8" AS "Proba_8", "Values"."LogProba_8" AS "LogProba_8", "Values"."Proba_9" AS "Proba_9", "Values"."LogProba_9" AS "LogProba_9", "Values"."Decision" AS "Decision", "Values"."DecisionProba" AS "DecisionProba" 
FROM (SELECT 1 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 246 AS count, 1 AS depth, 0 AS parent_id, 0.9975249280752606 AS "Proba_0", -0.00247813997874 AS "LogProba_0", 0.00030938399474753265 AS "Proba_1", -8.08092735113 AS "LogProba_1", 0.0003093839705012237 AS "Proba_2", -8.0809274295 AS "LogProba_2", 0.0003093839953965925 AS "Proba_3", -8.08092734903 AS "LogProba_3", 0.0003093839832129869 AS "Proba_4", -8.08092738841 AS "LogProba_4", 0.0003093839953618228 AS "Proba_5", -8.08092734915 AS "LogProba_5", 0.00030938399537507727 AS "Proba_6", -8.0809273491 AS "LogProba_6", 0.0003093839947475335 AS "Proba_7", -8.08092735113 AS "LogProba_7", 0.0 AS "Proba_8", -BINARY_FLOAT_INFINITY AS "LogProba_8", 0.00030938399539659186 AS "Proba_9", -8.08092734903 AS "LogProba_9", 0 AS "Decision", 0.997524928075 AS "DecisionProba" FROM DUAL UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1191 AS count, 1 AS depth, 0 AS parent_id, 1.553264971832128e-10 AS "Proba_0", -22.585491781 AS "LogProba_0", 0.11110728088409588 AS "Proba_1", -2.19725904997 AS "LogProba_1", 0.1111072810421245 AS "Proba_2", -2.19725904855 AS "LogProba_2", 0.11110728103935044 AS "Proba_3", -2.19725904858 AS "LogProba_3", 0.11110728104070744 AS "Proba_4", -2.19725904856 AS "LogProba_4", 0.11110728103935406 AS "Proba_5", -2.19725904858 AS "LogProba_5", 0.11110728103935291 AS "Proba_6", -2.19725904858 AS "LogProba_6", 0.11110728088409597 AS "Proba_7", -2.19725904997 AS "LogProba_7", 0.11114175183624199 AS "Proba_8", -2.19694884883 AS "LogProba_8", 0.11110728103935033 AS "Proba_9", -2.19725904858 AS "LogProba_9", 8 AS "Decision", 0.111141751836 AS "DecisionProba" FROM DUAL) "Values"), 
"DT_Output_16" AS 
(SELECT "DT_node_lookup_16"."KEY" AS "KEY", "DT_node_lookup_16".node_id_2 AS node_id_2, "DT_node_data_16".node_id AS node_id, "DT_node_data_16".feature AS feature, "DT_node_data_16".threshold AS threshold, "DT_node_data_16".count AS count, "DT_node_data_16".depth AS depth, "DT_node_data_16".parent_id AS parent_id, "DT_node_data_16"."Proba_0" AS "Proba_0", "DT_node_data_16"."LogProba_0" AS "LogProba_0", "DT_node_data_16"."Proba_1" AS "Proba_1", "DT_node_data_16"."LogProba_1" AS "LogProba_1", "DT_node_data_16"."Proba_2" AS "Proba_2", "DT_node_data_16"."LogProba_2" AS "LogProba_2", "DT_node_data_16"."Proba_3" AS "Proba_3", "DT_node_data_16"."LogProba_3" AS "LogProba_3", "DT_node_data_16"."Proba_4" AS "Proba_4", "DT_node_data_16"."LogProba_4" AS "LogProba_4", "DT_node_data_16"."Proba_5" AS "Proba_5", "DT_node_data_16"."LogProba_5" AS "LogProba_5", "DT_node_data_16"."Proba_6" AS "Proba_6", "DT_node_data_16"."LogProba_6" AS "LogProba_6", "DT_node_data_16"."Proba_7" AS "Proba_7", "DT_node_data_16"."LogProba_7" AS "LogProba_7", "DT_node_data_16"."Proba_8" AS "Proba_8", "DT_node_data_16"."LogProba_8" AS "LogProba_8", "DT_node_data_16"."Proba_9" AS "Proba_9", "DT_node_data_16"."LogProba_9" AS "LogProba_9", "DT_node_data_16"."Decision" AS "Decision", "DT_node_data_16"."DecisionProba" AS "DecisionProba" 
FROM "DT_node_lookup_16" LEFT OUTER JOIN "DT_node_data_16" ON "DT_node_lookup_16".node_id_2 = "DT_node_data_16".node_id), 
"AdaBoost_Estim_16" AS 
(SELECT "DT_Output_16"."KEY" AS "KEY", (9.0 * (CASE WHEN ("DT_Output_16"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_16"."Proba_0" IS NULL OR "DT_Output_16"."Proba_0" > 0.0) THEN ln("DT_Output_16"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_16"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_16"."Proba_0" IS NULL OR "DT_Output_16"."Proba_0" > 0.0) THEN ln("DT_Output_16"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_16"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_16"."Proba_1" IS NULL OR "DT_Output_16"."Proba_1" > 0.0) THEN ln("DT_Output_16"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_16"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_16"."Proba_2" IS NULL OR "DT_Output_16"."Proba_2" > 0.0) THEN ln("DT_Output_16"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_16"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_16"."Proba_3" IS NULL OR "DT_Output_16"."Proba_3" > 0.0) THEN ln("DT_Output_16"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_16"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_16"."Proba_4" IS NULL OR "DT_Output_16"."Proba_4" > 0.0) THEN ln("DT_Output_16"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_16"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_16"."Proba_5" IS NULL OR "DT_Output_16"."Proba_5" > 0.0) THEN ln("DT_Output_16"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_16"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_16"."Proba_6" IS NULL OR "DT_Output_16"."Proba_6" > 0.0) THEN ln("DT_Output_16"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_16"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_16"."Proba_7" IS NULL OR "DT_Output_16"."Proba_7" > 0.0) THEN ln("DT_Output_16"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_16"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_16"."Proba_8" IS NULL OR "DT_Output_16"."Proba_8" > 0.0) THEN ln("DT_Output_16"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_16"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_16"."Proba_9" IS NULL OR "DT_Output_16"."Proba_9" > 0.0) THEN ln("DT_Output_16"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10)) / 32.0 AS "Score_0", 9.0 * (CASE WHEN ("DT_Output_16"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_16"."Proba_0" IS NULL OR "DT_Output_16"."Proba_0" > 0.0) THEN ln("DT_Output_16"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_16"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_16"."Proba_0" IS NULL OR "DT_Output_16"."Proba_0" > 0.0) THEN ln("DT_Output_16"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_16"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_16"."Proba_1" IS NULL OR "DT_Output_16"."Proba_1" > 0.0) THEN ln("DT_Output_16"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_16"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_16"."Proba_2" IS NULL OR "DT_Output_16"."Proba_2" > 0.0) THEN ln("DT_Output_16"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_16"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_16"."Proba_3" IS NULL OR "DT_Output_16"."Proba_3" > 0.0) THEN ln("DT_Output_16"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_16"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_16"."Proba_4" IS NULL OR "DT_Output_16"."Proba_4" > 0.0) THEN ln("DT_Output_16"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_16"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_16"."Proba_5" IS NULL OR "DT_Output_16"."Proba_5" > 0.0) THEN ln("DT_Output_16"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_16"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_16"."Proba_6" IS NULL OR "DT_Output_16"."Proba_6" > 0.0) THEN ln("DT_Output_16"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_16"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_16"."Proba_7" IS NULL OR "DT_Output_16"."Proba_7" > 0.0) THEN ln("DT_Output_16"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_16"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_16"."Proba_8" IS NULL OR "DT_Output_16"."Proba_8" > 0.0) THEN ln("DT_Output_16"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_16"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_16"."Proba_9" IS NULL OR "DT_Output_16"."Proba_9" > 0.0) THEN ln("DT_Output_16"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10) AS "Proba_0", (9.0 * (CASE WHEN ("DT_Output_16"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_16"."Proba_1" IS NULL OR "DT_Output_16"."Proba_1" > 0.0) THEN ln("DT_Output_16"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_16"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_16"."Proba_0" IS NULL OR "DT_Output_16"."Proba_0" > 0.0) THEN ln("DT_Output_16"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_16"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_16"."Proba_1" IS NULL OR "DT_Output_16"."Proba_1" > 0.0) THEN ln("DT_Output_16"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_16"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_16"."Proba_2" IS NULL OR "DT_Output_16"."Proba_2" > 0.0) THEN ln("DT_Output_16"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_16"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_16"."Proba_3" IS NULL OR "DT_Output_16"."Proba_3" > 0.0) THEN ln("DT_Output_16"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_16"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_16"."Proba_4" IS NULL OR "DT_Output_16"."Proba_4" > 0.0) THEN ln("DT_Output_16"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_16"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_16"."Proba_5" IS NULL OR "DT_Output_16"."Proba_5" > 0.0) THEN ln("DT_Output_16"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_16"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_16"."Proba_6" IS NULL OR "DT_Output_16"."Proba_6" > 0.0) THEN ln("DT_Output_16"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_16"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_16"."Proba_7" IS NULL OR "DT_Output_16"."Proba_7" > 0.0) THEN ln("DT_Output_16"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_16"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_16"."Proba_8" IS NULL OR "DT_Output_16"."Proba_8" > 0.0) THEN ln("DT_Output_16"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_16"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_16"."Proba_9" IS NULL OR "DT_Output_16"."Proba_9" > 0.0) THEN ln("DT_Output_16"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10)) / 32.0 AS "Score_1", 9.0 * (CASE WHEN ("DT_Output_16"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_16"."Proba_1" IS NULL OR "DT_Output_16"."Proba_1" > 0.0) THEN ln("DT_Output_16"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_16"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_16"."Proba_0" IS NULL OR "DT_Output_16"."Proba_0" > 0.0) THEN ln("DT_Output_16"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_16"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_16"."Proba_1" IS NULL OR "DT_Output_16"."Proba_1" > 0.0) THEN ln("DT_Output_16"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_16"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_16"."Proba_2" IS NULL OR "DT_Output_16"."Proba_2" > 0.0) THEN ln("DT_Output_16"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_16"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_16"."Proba_3" IS NULL OR "DT_Output_16"."Proba_3" > 0.0) THEN ln("DT_Output_16"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_16"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_16"."Proba_4" IS NULL OR "DT_Output_16"."Proba_4" > 0.0) THEN ln("DT_Output_16"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_16"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_16"."Proba_5" IS NULL OR "DT_Output_16"."Proba_5" > 0.0) THEN ln("DT_Output_16"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_16"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_16"."Proba_6" IS NULL OR "DT_Output_16"."Proba_6" > 0.0) THEN ln("DT_Output_16"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_16"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_16"."Proba_7" IS NULL OR "DT_Output_16"."Proba_7" > 0.0) THEN ln("DT_Output_16"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_16"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_16"."Proba_8" IS NULL OR "DT_Output_16"."Proba_8" > 0.0) THEN ln("DT_Output_16"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_16"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_16"."Proba_9" IS NULL OR "DT_Output_16"."Proba_9" > 0.0) THEN ln("DT_Output_16"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10) AS "Proba_1", (9.0 * (CASE WHEN ("DT_Output_16"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_16"."Proba_2" IS NULL OR "DT_Output_16"."Proba_2" > 0.0) THEN ln("DT_Output_16"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_16"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_16"."Proba_0" IS NULL OR "DT_Output_16"."Proba_0" > 0.0) THEN ln("DT_Output_16"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_16"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_16"."Proba_1" IS NULL OR "DT_Output_16"."Proba_1" > 0.0) THEN ln("DT_Output_16"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_16"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_16"."Proba_2" IS NULL OR "DT_Output_16"."Proba_2" > 0.0) THEN ln("DT_Output_16"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_16"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_16"."Proba_3" IS NULL OR "DT_Output_16"."Proba_3" > 0.0) THEN ln("DT_Output_16"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_16"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_16"."Proba_4" IS NULL OR "DT_Output_16"."Proba_4" > 0.0) THEN ln("DT_Output_16"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_16"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_16"."Proba_5" IS NULL OR "DT_Output_16"."Proba_5" > 0.0) THEN ln("DT_Output_16"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_16"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_16"."Proba_6" IS NULL OR "DT_Output_16"."Proba_6" > 0.0) THEN ln("DT_Output_16"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_16"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_16"."Proba_7" IS NULL OR "DT_Output_16"."Proba_7" > 0.0) THEN ln("DT_Output_16"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_16"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_16"."Proba_8" IS NULL OR "DT_Output_16"."Proba_8" > 0.0) THEN ln("DT_Output_16"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_16"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_16"."Proba_9" IS NULL OR "DT_Output_16"."Proba_9" > 0.0) THEN ln("DT_Output_16"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10)) / 32.0 AS "Score_2", 9.0 * (CASE WHEN ("DT_Output_16"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_16"."Proba_2" IS NULL OR "DT_Output_16"."Proba_2" > 0.0) THEN ln("DT_Output_16"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_16"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_16"."Proba_0" IS NULL OR "DT_Output_16"."Proba_0" > 0.0) THEN ln("DT_Output_16"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_16"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_16"."Proba_1" IS NULL OR "DT_Output_16"."Proba_1" > 0.0) THEN ln("DT_Output_16"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_16"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_16"."Proba_2" IS NULL OR "DT_Output_16"."Proba_2" > 0.0) THEN ln("DT_Output_16"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_16"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_16"."Proba_3" IS NULL OR "DT_Output_16"."Proba_3" > 0.0) THEN ln("DT_Output_16"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_16"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_16"."Proba_4" IS NULL OR "DT_Output_16"."Proba_4" > 0.0) THEN ln("DT_Output_16"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_16"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_16"."Proba_5" IS NULL OR "DT_Output_16"."Proba_5" > 0.0) THEN ln("DT_Output_16"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_16"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_16"."Proba_6" IS NULL OR "DT_Output_16"."Proba_6" > 0.0) THEN ln("DT_Output_16"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_16"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_16"."Proba_7" IS NULL OR "DT_Output_16"."Proba_7" > 0.0) THEN ln("DT_Output_16"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_16"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_16"."Proba_8" IS NULL OR "DT_Output_16"."Proba_8" > 0.0) THEN ln("DT_Output_16"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_16"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_16"."Proba_9" IS NULL OR "DT_Output_16"."Proba_9" > 0.0) THEN ln("DT_Output_16"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10) AS "Proba_2", (9.0 * (CASE WHEN ("DT_Output_16"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_16"."Proba_3" IS NULL OR "DT_Output_16"."Proba_3" > 0.0) THEN ln("DT_Output_16"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_16"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_16"."Proba_0" IS NULL OR "DT_Output_16"."Proba_0" > 0.0) THEN ln("DT_Output_16"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_16"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_16"."Proba_1" IS NULL OR "DT_Output_16"."Proba_1" > 0.0) THEN ln("DT_Output_16"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_16"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_16"."Proba_2" IS NULL OR "DT_Output_16"."Proba_2" > 0.0) THEN ln("DT_Output_16"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_16"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_16"."Proba_3" IS NULL OR "DT_Output_16"."Proba_3" > 0.0) THEN ln("DT_Output_16"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_16"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_16"."Proba_4" IS NULL OR "DT_Output_16"."Proba_4" > 0.0) THEN ln("DT_Output_16"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_16"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_16"."Proba_5" IS NULL OR "DT_Output_16"."Proba_5" > 0.0) THEN ln("DT_Output_16"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_16"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_16"."Proba_6" IS NULL OR "DT_Output_16"."Proba_6" > 0.0) THEN ln("DT_Output_16"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_16"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_16"."Proba_7" IS NULL OR "DT_Output_16"."Proba_7" > 0.0) THEN ln("DT_Output_16"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_16"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_16"."Proba_8" IS NULL OR "DT_Output_16"."Proba_8" > 0.0) THEN ln("DT_Output_16"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_16"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_16"."Proba_9" IS NULL OR "DT_Output_16"."Proba_9" > 0.0) THEN ln("DT_Output_16"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10)) / 32.0 AS "Score_3", 9.0 * (CASE WHEN ("DT_Output_16"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_16"."Proba_3" IS NULL OR "DT_Output_16"."Proba_3" > 0.0) THEN ln("DT_Output_16"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_16"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_16"."Proba_0" IS NULL OR "DT_Output_16"."Proba_0" > 0.0) THEN ln("DT_Output_16"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_16"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_16"."Proba_1" IS NULL OR "DT_Output_16"."Proba_1" > 0.0) THEN ln("DT_Output_16"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_16"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_16"."Proba_2" IS NULL OR "DT_Output_16"."Proba_2" > 0.0) THEN ln("DT_Output_16"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_16"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_16"."Proba_3" IS NULL OR "DT_Output_16"."Proba_3" > 0.0) THEN ln("DT_Output_16"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_16"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_16"."Proba_4" IS NULL OR "DT_Output_16"."Proba_4" > 0.0) THEN ln("DT_Output_16"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_16"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_16"."Proba_5" IS NULL OR "DT_Output_16"."Proba_5" > 0.0) THEN ln("DT_Output_16"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_16"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_16"."Proba_6" IS NULL OR "DT_Output_16"."Proba_6" > 0.0) THEN ln("DT_Output_16"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_16"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_16"."Proba_7" IS NULL OR "DT_Output_16"."Proba_7" > 0.0) THEN ln("DT_Output_16"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_16"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_16"."Proba_8" IS NULL OR "DT_Output_16"."Proba_8" > 0.0) THEN ln("DT_Output_16"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_16"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_16"."Proba_9" IS NULL OR "DT_Output_16"."Proba_9" > 0.0) THEN ln("DT_Output_16"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10) AS "Proba_3", (9.0 * (CASE WHEN ("DT_Output_16"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_16"."Proba_4" IS NULL OR "DT_Output_16"."Proba_4" > 0.0) THEN ln("DT_Output_16"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_16"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_16"."Proba_0" IS NULL OR "DT_Output_16"."Proba_0" > 0.0) THEN ln("DT_Output_16"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_16"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_16"."Proba_1" IS NULL OR "DT_Output_16"."Proba_1" > 0.0) THEN ln("DT_Output_16"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_16"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_16"."Proba_2" IS NULL OR "DT_Output_16"."Proba_2" > 0.0) THEN ln("DT_Output_16"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_16"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_16"."Proba_3" IS NULL OR "DT_Output_16"."Proba_3" > 0.0) THEN ln("DT_Output_16"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_16"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_16"."Proba_4" IS NULL OR "DT_Output_16"."Proba_4" > 0.0) THEN ln("DT_Output_16"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_16"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_16"."Proba_5" IS NULL OR "DT_Output_16"."Proba_5" > 0.0) THEN ln("DT_Output_16"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_16"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_16"."Proba_6" IS NULL OR "DT_Output_16"."Proba_6" > 0.0) THEN ln("DT_Output_16"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_16"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_16"."Proba_7" IS NULL OR "DT_Output_16"."Proba_7" > 0.0) THEN ln("DT_Output_16"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_16"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_16"."Proba_8" IS NULL OR "DT_Output_16"."Proba_8" > 0.0) THEN ln("DT_Output_16"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_16"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_16"."Proba_9" IS NULL OR "DT_Output_16"."Proba_9" > 0.0) THEN ln("DT_Output_16"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10)) / 32.0 AS "Score_4", 9.0 * (CASE WHEN ("DT_Output_16"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_16"."Proba_4" IS NULL OR "DT_Output_16"."Proba_4" > 0.0) THEN ln("DT_Output_16"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_16"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_16"."Proba_0" IS NULL OR "DT_Output_16"."Proba_0" > 0.0) THEN ln("DT_Output_16"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_16"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_16"."Proba_1" IS NULL OR "DT_Output_16"."Proba_1" > 0.0) THEN ln("DT_Output_16"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_16"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_16"."Proba_2" IS NULL OR "DT_Output_16"."Proba_2" > 0.0) THEN ln("DT_Output_16"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_16"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_16"."Proba_3" IS NULL OR "DT_Output_16"."Proba_3" > 0.0) THEN ln("DT_Output_16"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_16"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_16"."Proba_4" IS NULL OR "DT_Output_16"."Proba_4" > 0.0) THEN ln("DT_Output_16"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_16"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_16"."Proba_5" IS NULL OR "DT_Output_16"."Proba_5" > 0.0) THEN ln("DT_Output_16"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_16"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_16"."Proba_6" IS NULL OR "DT_Output_16"."Proba_6" > 0.0) THEN ln("DT_Output_16"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_16"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_16"."Proba_7" IS NULL OR "DT_Output_16"."Proba_7" > 0.0) THEN ln("DT_Output_16"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_16"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_16"."Proba_8" IS NULL OR "DT_Output_16"."Proba_8" > 0.0) THEN ln("DT_Output_16"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_16"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_16"."Proba_9" IS NULL OR "DT_Output_16"."Proba_9" > 0.0) THEN ln("DT_Output_16"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10) AS "Proba_4", (9.0 * (CASE WHEN ("DT_Output_16"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_16"."Proba_5" IS NULL OR "DT_Output_16"."Proba_5" > 0.0) THEN ln("DT_Output_16"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_16"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_16"."Proba_0" IS NULL OR "DT_Output_16"."Proba_0" > 0.0) THEN ln("DT_Output_16"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_16"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_16"."Proba_1" IS NULL OR "DT_Output_16"."Proba_1" > 0.0) THEN ln("DT_Output_16"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_16"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_16"."Proba_2" IS NULL OR "DT_Output_16"."Proba_2" > 0.0) THEN ln("DT_Output_16"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_16"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_16"."Proba_3" IS NULL OR "DT_Output_16"."Proba_3" > 0.0) THEN ln("DT_Output_16"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_16"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_16"."Proba_4" IS NULL OR "DT_Output_16"."Proba_4" > 0.0) THEN ln("DT_Output_16"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_16"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_16"."Proba_5" IS NULL OR "DT_Output_16"."Proba_5" > 0.0) THEN ln("DT_Output_16"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_16"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_16"."Proba_6" IS NULL OR "DT_Output_16"."Proba_6" > 0.0) THEN ln("DT_Output_16"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_16"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_16"."Proba_7" IS NULL OR "DT_Output_16"."Proba_7" > 0.0) THEN ln("DT_Output_16"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_16"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_16"."Proba_8" IS NULL OR "DT_Output_16"."Proba_8" > 0.0) THEN ln("DT_Output_16"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_16"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_16"."Proba_9" IS NULL OR "DT_Output_16"."Proba_9" > 0.0) THEN ln("DT_Output_16"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10)) / 32.0 AS "Score_5", 9.0 * (CASE WHEN ("DT_Output_16"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_16"."Proba_5" IS NULL OR "DT_Output_16"."Proba_5" > 0.0) THEN ln("DT_Output_16"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_16"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_16"."Proba_0" IS NULL OR "DT_Output_16"."Proba_0" > 0.0) THEN ln("DT_Output_16"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_16"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_16"."Proba_1" IS NULL OR "DT_Output_16"."Proba_1" > 0.0) THEN ln("DT_Output_16"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_16"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_16"."Proba_2" IS NULL OR "DT_Output_16"."Proba_2" > 0.0) THEN ln("DT_Output_16"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_16"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_16"."Proba_3" IS NULL OR "DT_Output_16"."Proba_3" > 0.0) THEN ln("DT_Output_16"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_16"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_16"."Proba_4" IS NULL OR "DT_Output_16"."Proba_4" > 0.0) THEN ln("DT_Output_16"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_16"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_16"."Proba_5" IS NULL OR "DT_Output_16"."Proba_5" > 0.0) THEN ln("DT_Output_16"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_16"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_16"."Proba_6" IS NULL OR "DT_Output_16"."Proba_6" > 0.0) THEN ln("DT_Output_16"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_16"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_16"."Proba_7" IS NULL OR "DT_Output_16"."Proba_7" > 0.0) THEN ln("DT_Output_16"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_16"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_16"."Proba_8" IS NULL OR "DT_Output_16"."Proba_8" > 0.0) THEN ln("DT_Output_16"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_16"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_16"."Proba_9" IS NULL OR "DT_Output_16"."Proba_9" > 0.0) THEN ln("DT_Output_16"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10) AS "Proba_5", (9.0 * (CASE WHEN ("DT_Output_16"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_16"."Proba_6" IS NULL OR "DT_Output_16"."Proba_6" > 0.0) THEN ln("DT_Output_16"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_16"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_16"."Proba_0" IS NULL OR "DT_Output_16"."Proba_0" > 0.0) THEN ln("DT_Output_16"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_16"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_16"."Proba_1" IS NULL OR "DT_Output_16"."Proba_1" > 0.0) THEN ln("DT_Output_16"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_16"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_16"."Proba_2" IS NULL OR "DT_Output_16"."Proba_2" > 0.0) THEN ln("DT_Output_16"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_16"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_16"."Proba_3" IS NULL OR "DT_Output_16"."Proba_3" > 0.0) THEN ln("DT_Output_16"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_16"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_16"."Proba_4" IS NULL OR "DT_Output_16"."Proba_4" > 0.0) THEN ln("DT_Output_16"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_16"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_16"."Proba_5" IS NULL OR "DT_Output_16"."Proba_5" > 0.0) THEN ln("DT_Output_16"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_16"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_16"."Proba_6" IS NULL OR "DT_Output_16"."Proba_6" > 0.0) THEN ln("DT_Output_16"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_16"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_16"."Proba_7" IS NULL OR "DT_Output_16"."Proba_7" > 0.0) THEN ln("DT_Output_16"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_16"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_16"."Proba_8" IS NULL OR "DT_Output_16"."Proba_8" > 0.0) THEN ln("DT_Output_16"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_16"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_16"."Proba_9" IS NULL OR "DT_Output_16"."Proba_9" > 0.0) THEN ln("DT_Output_16"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10)) / 32.0 AS "Score_6", 9.0 * (CASE WHEN ("DT_Output_16"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_16"."Proba_6" IS NULL OR "DT_Output_16"."Proba_6" > 0.0) THEN ln("DT_Output_16"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_16"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_16"."Proba_0" IS NULL OR "DT_Output_16"."Proba_0" > 0.0) THEN ln("DT_Output_16"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_16"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_16"."Proba_1" IS NULL OR "DT_Output_16"."Proba_1" > 0.0) THEN ln("DT_Output_16"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_16"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_16"."Proba_2" IS NULL OR "DT_Output_16"."Proba_2" > 0.0) THEN ln("DT_Output_16"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_16"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_16"."Proba_3" IS NULL OR "DT_Output_16"."Proba_3" > 0.0) THEN ln("DT_Output_16"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_16"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_16"."Proba_4" IS NULL OR "DT_Output_16"."Proba_4" > 0.0) THEN ln("DT_Output_16"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_16"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_16"."Proba_5" IS NULL OR "DT_Output_16"."Proba_5" > 0.0) THEN ln("DT_Output_16"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_16"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_16"."Proba_6" IS NULL OR "DT_Output_16"."Proba_6" > 0.0) THEN ln("DT_Output_16"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_16"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_16"."Proba_7" IS NULL OR "DT_Output_16"."Proba_7" > 0.0) THEN ln("DT_Output_16"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_16"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_16"."Proba_8" IS NULL OR "DT_Output_16"."Proba_8" > 0.0) THEN ln("DT_Output_16"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_16"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_16"."Proba_9" IS NULL OR "DT_Output_16"."Proba_9" > 0.0) THEN ln("DT_Output_16"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10) AS "Proba_6", (9.0 * (CASE WHEN ("DT_Output_16"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_16"."Proba_7" IS NULL OR "DT_Output_16"."Proba_7" > 0.0) THEN ln("DT_Output_16"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_16"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_16"."Proba_0" IS NULL OR "DT_Output_16"."Proba_0" > 0.0) THEN ln("DT_Output_16"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_16"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_16"."Proba_1" IS NULL OR "DT_Output_16"."Proba_1" > 0.0) THEN ln("DT_Output_16"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_16"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_16"."Proba_2" IS NULL OR "DT_Output_16"."Proba_2" > 0.0) THEN ln("DT_Output_16"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_16"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_16"."Proba_3" IS NULL OR "DT_Output_16"."Proba_3" > 0.0) THEN ln("DT_Output_16"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_16"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_16"."Proba_4" IS NULL OR "DT_Output_16"."Proba_4" > 0.0) THEN ln("DT_Output_16"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_16"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_16"."Proba_5" IS NULL OR "DT_Output_16"."Proba_5" > 0.0) THEN ln("DT_Output_16"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_16"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_16"."Proba_6" IS NULL OR "DT_Output_16"."Proba_6" > 0.0) THEN ln("DT_Output_16"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_16"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_16"."Proba_7" IS NULL OR "DT_Output_16"."Proba_7" > 0.0) THEN ln("DT_Output_16"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_16"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_16"."Proba_8" IS NULL OR "DT_Output_16"."Proba_8" > 0.0) THEN ln("DT_Output_16"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_16"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_16"."Proba_9" IS NULL OR "DT_Output_16"."Proba_9" > 0.0) THEN ln("DT_Output_16"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10)) / 32.0 AS "Score_7", 9.0 * (CASE WHEN ("DT_Output_16"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_16"."Proba_7" IS NULL OR "DT_Output_16"."Proba_7" > 0.0) THEN ln("DT_Output_16"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_16"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_16"."Proba_0" IS NULL OR "DT_Output_16"."Proba_0" > 0.0) THEN ln("DT_Output_16"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_16"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_16"."Proba_1" IS NULL OR "DT_Output_16"."Proba_1" > 0.0) THEN ln("DT_Output_16"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_16"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_16"."Proba_2" IS NULL OR "DT_Output_16"."Proba_2" > 0.0) THEN ln("DT_Output_16"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_16"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_16"."Proba_3" IS NULL OR "DT_Output_16"."Proba_3" > 0.0) THEN ln("DT_Output_16"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_16"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_16"."Proba_4" IS NULL OR "DT_Output_16"."Proba_4" > 0.0) THEN ln("DT_Output_16"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_16"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_16"."Proba_5" IS NULL OR "DT_Output_16"."Proba_5" > 0.0) THEN ln("DT_Output_16"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_16"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_16"."Proba_6" IS NULL OR "DT_Output_16"."Proba_6" > 0.0) THEN ln("DT_Output_16"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_16"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_16"."Proba_7" IS NULL OR "DT_Output_16"."Proba_7" > 0.0) THEN ln("DT_Output_16"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_16"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_16"."Proba_8" IS NULL OR "DT_Output_16"."Proba_8" > 0.0) THEN ln("DT_Output_16"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_16"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_16"."Proba_9" IS NULL OR "DT_Output_16"."Proba_9" > 0.0) THEN ln("DT_Output_16"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10) AS "Proba_7", (9.0 * (CASE WHEN ("DT_Output_16"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_16"."Proba_8" IS NULL OR "DT_Output_16"."Proba_8" > 0.0) THEN ln("DT_Output_16"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_16"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_16"."Proba_0" IS NULL OR "DT_Output_16"."Proba_0" > 0.0) THEN ln("DT_Output_16"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_16"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_16"."Proba_1" IS NULL OR "DT_Output_16"."Proba_1" > 0.0) THEN ln("DT_Output_16"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_16"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_16"."Proba_2" IS NULL OR "DT_Output_16"."Proba_2" > 0.0) THEN ln("DT_Output_16"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_16"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_16"."Proba_3" IS NULL OR "DT_Output_16"."Proba_3" > 0.0) THEN ln("DT_Output_16"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_16"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_16"."Proba_4" IS NULL OR "DT_Output_16"."Proba_4" > 0.0) THEN ln("DT_Output_16"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_16"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_16"."Proba_5" IS NULL OR "DT_Output_16"."Proba_5" > 0.0) THEN ln("DT_Output_16"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_16"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_16"."Proba_6" IS NULL OR "DT_Output_16"."Proba_6" > 0.0) THEN ln("DT_Output_16"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_16"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_16"."Proba_7" IS NULL OR "DT_Output_16"."Proba_7" > 0.0) THEN ln("DT_Output_16"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_16"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_16"."Proba_8" IS NULL OR "DT_Output_16"."Proba_8" > 0.0) THEN ln("DT_Output_16"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_16"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_16"."Proba_9" IS NULL OR "DT_Output_16"."Proba_9" > 0.0) THEN ln("DT_Output_16"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10)) / 32.0 AS "Score_8", 9.0 * (CASE WHEN ("DT_Output_16"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_16"."Proba_8" IS NULL OR "DT_Output_16"."Proba_8" > 0.0) THEN ln("DT_Output_16"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_16"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_16"."Proba_0" IS NULL OR "DT_Output_16"."Proba_0" > 0.0) THEN ln("DT_Output_16"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_16"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_16"."Proba_1" IS NULL OR "DT_Output_16"."Proba_1" > 0.0) THEN ln("DT_Output_16"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_16"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_16"."Proba_2" IS NULL OR "DT_Output_16"."Proba_2" > 0.0) THEN ln("DT_Output_16"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_16"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_16"."Proba_3" IS NULL OR "DT_Output_16"."Proba_3" > 0.0) THEN ln("DT_Output_16"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_16"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_16"."Proba_4" IS NULL OR "DT_Output_16"."Proba_4" > 0.0) THEN ln("DT_Output_16"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_16"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_16"."Proba_5" IS NULL OR "DT_Output_16"."Proba_5" > 0.0) THEN ln("DT_Output_16"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_16"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_16"."Proba_6" IS NULL OR "DT_Output_16"."Proba_6" > 0.0) THEN ln("DT_Output_16"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_16"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_16"."Proba_7" IS NULL OR "DT_Output_16"."Proba_7" > 0.0) THEN ln("DT_Output_16"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_16"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_16"."Proba_8" IS NULL OR "DT_Output_16"."Proba_8" > 0.0) THEN ln("DT_Output_16"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_16"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_16"."Proba_9" IS NULL OR "DT_Output_16"."Proba_9" > 0.0) THEN ln("DT_Output_16"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10) AS "Proba_8", (9.0 * (CASE WHEN ("DT_Output_16"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_16"."Proba_9" IS NULL OR "DT_Output_16"."Proba_9" > 0.0) THEN ln("DT_Output_16"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_16"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_16"."Proba_0" IS NULL OR "DT_Output_16"."Proba_0" > 0.0) THEN ln("DT_Output_16"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_16"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_16"."Proba_1" IS NULL OR "DT_Output_16"."Proba_1" > 0.0) THEN ln("DT_Output_16"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_16"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_16"."Proba_2" IS NULL OR "DT_Output_16"."Proba_2" > 0.0) THEN ln("DT_Output_16"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_16"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_16"."Proba_3" IS NULL OR "DT_Output_16"."Proba_3" > 0.0) THEN ln("DT_Output_16"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_16"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_16"."Proba_4" IS NULL OR "DT_Output_16"."Proba_4" > 0.0) THEN ln("DT_Output_16"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_16"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_16"."Proba_5" IS NULL OR "DT_Output_16"."Proba_5" > 0.0) THEN ln("DT_Output_16"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_16"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_16"."Proba_6" IS NULL OR "DT_Output_16"."Proba_6" > 0.0) THEN ln("DT_Output_16"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_16"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_16"."Proba_7" IS NULL OR "DT_Output_16"."Proba_7" > 0.0) THEN ln("DT_Output_16"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_16"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_16"."Proba_8" IS NULL OR "DT_Output_16"."Proba_8" > 0.0) THEN ln("DT_Output_16"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_16"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_16"."Proba_9" IS NULL OR "DT_Output_16"."Proba_9" > 0.0) THEN ln("DT_Output_16"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10)) / 32.0 AS "Score_9", 9.0 * (CASE WHEN ("DT_Output_16"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_16"."Proba_9" IS NULL OR "DT_Output_16"."Proba_9" > 0.0) THEN ln("DT_Output_16"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_16"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_16"."Proba_0" IS NULL OR "DT_Output_16"."Proba_0" > 0.0) THEN ln("DT_Output_16"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_16"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_16"."Proba_1" IS NULL OR "DT_Output_16"."Proba_1" > 0.0) THEN ln("DT_Output_16"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_16"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_16"."Proba_2" IS NULL OR "DT_Output_16"."Proba_2" > 0.0) THEN ln("DT_Output_16"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_16"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_16"."Proba_3" IS NULL OR "DT_Output_16"."Proba_3" > 0.0) THEN ln("DT_Output_16"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_16"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_16"."Proba_4" IS NULL OR "DT_Output_16"."Proba_4" > 0.0) THEN ln("DT_Output_16"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_16"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_16"."Proba_5" IS NULL OR "DT_Output_16"."Proba_5" > 0.0) THEN ln("DT_Output_16"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_16"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_16"."Proba_6" IS NULL OR "DT_Output_16"."Proba_6" > 0.0) THEN ln("DT_Output_16"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_16"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_16"."Proba_7" IS NULL OR "DT_Output_16"."Proba_7" > 0.0) THEN ln("DT_Output_16"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_16"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_16"."Proba_8" IS NULL OR "DT_Output_16"."Proba_8" > 0.0) THEN ln("DT_Output_16"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_16"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_16"."Proba_9" IS NULL OR "DT_Output_16"."Proba_9" > 0.0) THEN ln("DT_Output_16"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10) AS "Proba_9" 
FROM "DT_Output_16"), 
"DT_node_lookup_17" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_38 <= -1.6508052349090576) THEN 1 ELSE 2 END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_17" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Proba_0" AS "Proba_0", "Values"."LogProba_0" AS "LogProba_0", "Values"."Proba_1" AS "Proba_1", "Values"."LogProba_1" AS "LogProba_1", "Values"."Proba_2" AS "Proba_2", "Values"."LogProba_2" AS "LogProba_2", "Values"."Proba_3" AS "Proba_3", "Values"."LogProba_3" AS "LogProba_3", "Values"."Proba_4" AS "Proba_4", "Values"."LogProba_4" AS "LogProba_4", "Values"."Proba_5" AS "Proba_5", "Values"."LogProba_5" AS "LogProba_5", "Values"."Proba_6" AS "Proba_6", "Values"."LogProba_6" AS "LogProba_6", "Values"."Proba_7" AS "Proba_7", "Values"."LogProba_7" AS "LogProba_7", "Values"."Proba_8" AS "Proba_8", "Values"."LogProba_8" AS "LogProba_8", "Values"."Proba_9" AS "Proba_9", "Values"."LogProba_9" AS "LogProba_9", "Values"."Decision" AS "Decision", "Values"."DecisionProba" AS "DecisionProba" 
FROM (SELECT 1 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 219 AS count, 1 AS depth, 0 AS parent_id, 0.9999999902106927 AS "Proba_0", -9.78930730162e-09 AS "LogProba_0", 0.0 AS "Proba_1", -BINARY_FLOAT_INFINITY AS "LogProba_1", 1.4005566594694013e-09 AS "Proba_2", -20.3863960654 AS "LogProba_2", 1.3979866504667913e-09 AS "Proba_3", -20.3882327422 AS "LogProba_3", 1.3992452203214075e-09 AS "Proba_4", -20.387332874 AS "LogProba_4", 1.397990244446527e-09 AS "Proba_5", -20.3882301714 AS "LogProba_5", 1.3979888743198285e-09 AS "Proba_6", -20.3882311514 AS "LogProba_6", 0.0 AS "Proba_7", -BINARY_FLOAT_INFINITY AS "LogProba_7", 1.3975530626108399e-09 AS "Proba_8", -20.388542942 AS "LogProba_8", 1.3979866504667882e-09 AS "Proba_9", -20.3882327422 AS "LogProba_9", 0 AS "Decision", 0.999999990211 AS "DecisionProba" FROM DUAL UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1218 AS count, 1 AS depth, 0 AS parent_id, 3.624079103834173e-05 AS "Proba_0", -10.2253252493 AS "LogProba_0", 0.11111111123192753 AS "Proba_1", -2.19722457625 AS "LogProba_1", 0.11111111107636035 AS "Proba_2", -2.19722457765 AS "LogProba_2", 0.11111111107664605 AS "Proba_3", -2.19722457765 AS "LogProba_3", 0.11111111107650658 AS "Proba_4", -2.19722457765 AS "LogProba_4", 0.11111111107664559 AS "Proba_5", -2.19722457765 AS "LogProba_5", 0.11111111107664598 AS "Proba_6", -2.19722457765 AS "LogProba_6", 0.11111111123192732 AS "Proba_7", -2.19722457625 AS "LogProba_7", 0.11107487028565638 AS "Proba_8", -2.19755079797 AS "LogProba_8", 0.11111111107664572 AS "Proba_9", -2.19722457765 AS "LogProba_9", 1 AS "Decision", 0.111111111232 AS "DecisionProba" FROM DUAL) "Values"), 
"DT_Output_17" AS 
(SELECT "DT_node_lookup_17"."KEY" AS "KEY", "DT_node_lookup_17".node_id_2 AS node_id_2, "DT_node_data_17".node_id AS node_id, "DT_node_data_17".feature AS feature, "DT_node_data_17".threshold AS threshold, "DT_node_data_17".count AS count, "DT_node_data_17".depth AS depth, "DT_node_data_17".parent_id AS parent_id, "DT_node_data_17"."Proba_0" AS "Proba_0", "DT_node_data_17"."LogProba_0" AS "LogProba_0", "DT_node_data_17"."Proba_1" AS "Proba_1", "DT_node_data_17"."LogProba_1" AS "LogProba_1", "DT_node_data_17"."Proba_2" AS "Proba_2", "DT_node_data_17"."LogProba_2" AS "LogProba_2", "DT_node_data_17"."Proba_3" AS "Proba_3", "DT_node_data_17"."LogProba_3" AS "LogProba_3", "DT_node_data_17"."Proba_4" AS "Proba_4", "DT_node_data_17"."LogProba_4" AS "LogProba_4", "DT_node_data_17"."Proba_5" AS "Proba_5", "DT_node_data_17"."LogProba_5" AS "LogProba_5", "DT_node_data_17"."Proba_6" AS "Proba_6", "DT_node_data_17"."LogProba_6" AS "LogProba_6", "DT_node_data_17"."Proba_7" AS "Proba_7", "DT_node_data_17"."LogProba_7" AS "LogProba_7", "DT_node_data_17"."Proba_8" AS "Proba_8", "DT_node_data_17"."LogProba_8" AS "LogProba_8", "DT_node_data_17"."Proba_9" AS "Proba_9", "DT_node_data_17"."LogProba_9" AS "LogProba_9", "DT_node_data_17"."Decision" AS "Decision", "DT_node_data_17"."DecisionProba" AS "DecisionProba" 
FROM "DT_node_lookup_17" LEFT OUTER JOIN "DT_node_data_17" ON "DT_node_lookup_17".node_id_2 = "DT_node_data_17".node_id), 
"AdaBoost_Estim_17" AS 
(SELECT "DT_Output_17"."KEY" AS "KEY", (9.0 * (CASE WHEN ("DT_Output_17"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_17"."Proba_0" IS NULL OR "DT_Output_17"."Proba_0" > 0.0) THEN ln("DT_Output_17"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_17"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_17"."Proba_0" IS NULL OR "DT_Output_17"."Proba_0" > 0.0) THEN ln("DT_Output_17"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_17"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_17"."Proba_1" IS NULL OR "DT_Output_17"."Proba_1" > 0.0) THEN ln("DT_Output_17"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_17"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_17"."Proba_2" IS NULL OR "DT_Output_17"."Proba_2" > 0.0) THEN ln("DT_Output_17"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_17"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_17"."Proba_3" IS NULL OR "DT_Output_17"."Proba_3" > 0.0) THEN ln("DT_Output_17"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_17"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_17"."Proba_4" IS NULL OR "DT_Output_17"."Proba_4" > 0.0) THEN ln("DT_Output_17"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_17"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_17"."Proba_5" IS NULL OR "DT_Output_17"."Proba_5" > 0.0) THEN ln("DT_Output_17"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_17"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_17"."Proba_6" IS NULL OR "DT_Output_17"."Proba_6" > 0.0) THEN ln("DT_Output_17"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_17"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_17"."Proba_7" IS NULL OR "DT_Output_17"."Proba_7" > 0.0) THEN ln("DT_Output_17"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_17"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_17"."Proba_8" IS NULL OR "DT_Output_17"."Proba_8" > 0.0) THEN ln("DT_Output_17"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_17"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_17"."Proba_9" IS NULL OR "DT_Output_17"."Proba_9" > 0.0) THEN ln("DT_Output_17"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10)) / 32.0 AS "Score_0", 9.0 * (CASE WHEN ("DT_Output_17"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_17"."Proba_0" IS NULL OR "DT_Output_17"."Proba_0" > 0.0) THEN ln("DT_Output_17"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_17"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_17"."Proba_0" IS NULL OR "DT_Output_17"."Proba_0" > 0.0) THEN ln("DT_Output_17"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_17"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_17"."Proba_1" IS NULL OR "DT_Output_17"."Proba_1" > 0.0) THEN ln("DT_Output_17"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_17"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_17"."Proba_2" IS NULL OR "DT_Output_17"."Proba_2" > 0.0) THEN ln("DT_Output_17"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_17"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_17"."Proba_3" IS NULL OR "DT_Output_17"."Proba_3" > 0.0) THEN ln("DT_Output_17"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_17"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_17"."Proba_4" IS NULL OR "DT_Output_17"."Proba_4" > 0.0) THEN ln("DT_Output_17"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_17"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_17"."Proba_5" IS NULL OR "DT_Output_17"."Proba_5" > 0.0) THEN ln("DT_Output_17"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_17"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_17"."Proba_6" IS NULL OR "DT_Output_17"."Proba_6" > 0.0) THEN ln("DT_Output_17"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_17"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_17"."Proba_7" IS NULL OR "DT_Output_17"."Proba_7" > 0.0) THEN ln("DT_Output_17"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_17"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_17"."Proba_8" IS NULL OR "DT_Output_17"."Proba_8" > 0.0) THEN ln("DT_Output_17"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_17"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_17"."Proba_9" IS NULL OR "DT_Output_17"."Proba_9" > 0.0) THEN ln("DT_Output_17"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10) AS "Proba_0", (9.0 * (CASE WHEN ("DT_Output_17"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_17"."Proba_1" IS NULL OR "DT_Output_17"."Proba_1" > 0.0) THEN ln("DT_Output_17"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_17"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_17"."Proba_0" IS NULL OR "DT_Output_17"."Proba_0" > 0.0) THEN ln("DT_Output_17"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_17"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_17"."Proba_1" IS NULL OR "DT_Output_17"."Proba_1" > 0.0) THEN ln("DT_Output_17"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_17"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_17"."Proba_2" IS NULL OR "DT_Output_17"."Proba_2" > 0.0) THEN ln("DT_Output_17"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_17"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_17"."Proba_3" IS NULL OR "DT_Output_17"."Proba_3" > 0.0) THEN ln("DT_Output_17"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_17"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_17"."Proba_4" IS NULL OR "DT_Output_17"."Proba_4" > 0.0) THEN ln("DT_Output_17"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_17"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_17"."Proba_5" IS NULL OR "DT_Output_17"."Proba_5" > 0.0) THEN ln("DT_Output_17"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_17"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_17"."Proba_6" IS NULL OR "DT_Output_17"."Proba_6" > 0.0) THEN ln("DT_Output_17"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_17"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_17"."Proba_7" IS NULL OR "DT_Output_17"."Proba_7" > 0.0) THEN ln("DT_Output_17"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_17"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_17"."Proba_8" IS NULL OR "DT_Output_17"."Proba_8" > 0.0) THEN ln("DT_Output_17"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_17"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_17"."Proba_9" IS NULL OR "DT_Output_17"."Proba_9" > 0.0) THEN ln("DT_Output_17"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10)) / 32.0 AS "Score_1", 9.0 * (CASE WHEN ("DT_Output_17"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_17"."Proba_1" IS NULL OR "DT_Output_17"."Proba_1" > 0.0) THEN ln("DT_Output_17"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_17"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_17"."Proba_0" IS NULL OR "DT_Output_17"."Proba_0" > 0.0) THEN ln("DT_Output_17"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_17"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_17"."Proba_1" IS NULL OR "DT_Output_17"."Proba_1" > 0.0) THEN ln("DT_Output_17"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_17"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_17"."Proba_2" IS NULL OR "DT_Output_17"."Proba_2" > 0.0) THEN ln("DT_Output_17"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_17"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_17"."Proba_3" IS NULL OR "DT_Output_17"."Proba_3" > 0.0) THEN ln("DT_Output_17"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_17"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_17"."Proba_4" IS NULL OR "DT_Output_17"."Proba_4" > 0.0) THEN ln("DT_Output_17"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_17"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_17"."Proba_5" IS NULL OR "DT_Output_17"."Proba_5" > 0.0) THEN ln("DT_Output_17"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_17"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_17"."Proba_6" IS NULL OR "DT_Output_17"."Proba_6" > 0.0) THEN ln("DT_Output_17"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_17"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_17"."Proba_7" IS NULL OR "DT_Output_17"."Proba_7" > 0.0) THEN ln("DT_Output_17"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_17"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_17"."Proba_8" IS NULL OR "DT_Output_17"."Proba_8" > 0.0) THEN ln("DT_Output_17"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_17"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_17"."Proba_9" IS NULL OR "DT_Output_17"."Proba_9" > 0.0) THEN ln("DT_Output_17"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10) AS "Proba_1", (9.0 * (CASE WHEN ("DT_Output_17"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_17"."Proba_2" IS NULL OR "DT_Output_17"."Proba_2" > 0.0) THEN ln("DT_Output_17"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_17"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_17"."Proba_0" IS NULL OR "DT_Output_17"."Proba_0" > 0.0) THEN ln("DT_Output_17"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_17"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_17"."Proba_1" IS NULL OR "DT_Output_17"."Proba_1" > 0.0) THEN ln("DT_Output_17"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_17"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_17"."Proba_2" IS NULL OR "DT_Output_17"."Proba_2" > 0.0) THEN ln("DT_Output_17"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_17"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_17"."Proba_3" IS NULL OR "DT_Output_17"."Proba_3" > 0.0) THEN ln("DT_Output_17"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_17"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_17"."Proba_4" IS NULL OR "DT_Output_17"."Proba_4" > 0.0) THEN ln("DT_Output_17"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_17"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_17"."Proba_5" IS NULL OR "DT_Output_17"."Proba_5" > 0.0) THEN ln("DT_Output_17"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_17"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_17"."Proba_6" IS NULL OR "DT_Output_17"."Proba_6" > 0.0) THEN ln("DT_Output_17"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_17"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_17"."Proba_7" IS NULL OR "DT_Output_17"."Proba_7" > 0.0) THEN ln("DT_Output_17"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_17"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_17"."Proba_8" IS NULL OR "DT_Output_17"."Proba_8" > 0.0) THEN ln("DT_Output_17"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_17"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_17"."Proba_9" IS NULL OR "DT_Output_17"."Proba_9" > 0.0) THEN ln("DT_Output_17"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10)) / 32.0 AS "Score_2", 9.0 * (CASE WHEN ("DT_Output_17"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_17"."Proba_2" IS NULL OR "DT_Output_17"."Proba_2" > 0.0) THEN ln("DT_Output_17"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_17"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_17"."Proba_0" IS NULL OR "DT_Output_17"."Proba_0" > 0.0) THEN ln("DT_Output_17"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_17"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_17"."Proba_1" IS NULL OR "DT_Output_17"."Proba_1" > 0.0) THEN ln("DT_Output_17"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_17"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_17"."Proba_2" IS NULL OR "DT_Output_17"."Proba_2" > 0.0) THEN ln("DT_Output_17"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_17"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_17"."Proba_3" IS NULL OR "DT_Output_17"."Proba_3" > 0.0) THEN ln("DT_Output_17"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_17"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_17"."Proba_4" IS NULL OR "DT_Output_17"."Proba_4" > 0.0) THEN ln("DT_Output_17"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_17"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_17"."Proba_5" IS NULL OR "DT_Output_17"."Proba_5" > 0.0) THEN ln("DT_Output_17"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_17"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_17"."Proba_6" IS NULL OR "DT_Output_17"."Proba_6" > 0.0) THEN ln("DT_Output_17"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_17"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_17"."Proba_7" IS NULL OR "DT_Output_17"."Proba_7" > 0.0) THEN ln("DT_Output_17"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_17"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_17"."Proba_8" IS NULL OR "DT_Output_17"."Proba_8" > 0.0) THEN ln("DT_Output_17"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_17"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_17"."Proba_9" IS NULL OR "DT_Output_17"."Proba_9" > 0.0) THEN ln("DT_Output_17"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10) AS "Proba_2", (9.0 * (CASE WHEN ("DT_Output_17"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_17"."Proba_3" IS NULL OR "DT_Output_17"."Proba_3" > 0.0) THEN ln("DT_Output_17"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_17"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_17"."Proba_0" IS NULL OR "DT_Output_17"."Proba_0" > 0.0) THEN ln("DT_Output_17"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_17"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_17"."Proba_1" IS NULL OR "DT_Output_17"."Proba_1" > 0.0) THEN ln("DT_Output_17"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_17"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_17"."Proba_2" IS NULL OR "DT_Output_17"."Proba_2" > 0.0) THEN ln("DT_Output_17"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_17"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_17"."Proba_3" IS NULL OR "DT_Output_17"."Proba_3" > 0.0) THEN ln("DT_Output_17"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_17"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_17"."Proba_4" IS NULL OR "DT_Output_17"."Proba_4" > 0.0) THEN ln("DT_Output_17"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_17"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_17"."Proba_5" IS NULL OR "DT_Output_17"."Proba_5" > 0.0) THEN ln("DT_Output_17"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_17"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_17"."Proba_6" IS NULL OR "DT_Output_17"."Proba_6" > 0.0) THEN ln("DT_Output_17"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_17"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_17"."Proba_7" IS NULL OR "DT_Output_17"."Proba_7" > 0.0) THEN ln("DT_Output_17"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_17"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_17"."Proba_8" IS NULL OR "DT_Output_17"."Proba_8" > 0.0) THEN ln("DT_Output_17"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_17"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_17"."Proba_9" IS NULL OR "DT_Output_17"."Proba_9" > 0.0) THEN ln("DT_Output_17"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10)) / 32.0 AS "Score_3", 9.0 * (CASE WHEN ("DT_Output_17"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_17"."Proba_3" IS NULL OR "DT_Output_17"."Proba_3" > 0.0) THEN ln("DT_Output_17"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_17"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_17"."Proba_0" IS NULL OR "DT_Output_17"."Proba_0" > 0.0) THEN ln("DT_Output_17"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_17"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_17"."Proba_1" IS NULL OR "DT_Output_17"."Proba_1" > 0.0) THEN ln("DT_Output_17"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_17"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_17"."Proba_2" IS NULL OR "DT_Output_17"."Proba_2" > 0.0) THEN ln("DT_Output_17"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_17"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_17"."Proba_3" IS NULL OR "DT_Output_17"."Proba_3" > 0.0) THEN ln("DT_Output_17"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_17"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_17"."Proba_4" IS NULL OR "DT_Output_17"."Proba_4" > 0.0) THEN ln("DT_Output_17"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_17"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_17"."Proba_5" IS NULL OR "DT_Output_17"."Proba_5" > 0.0) THEN ln("DT_Output_17"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_17"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_17"."Proba_6" IS NULL OR "DT_Output_17"."Proba_6" > 0.0) THEN ln("DT_Output_17"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_17"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_17"."Proba_7" IS NULL OR "DT_Output_17"."Proba_7" > 0.0) THEN ln("DT_Output_17"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_17"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_17"."Proba_8" IS NULL OR "DT_Output_17"."Proba_8" > 0.0) THEN ln("DT_Output_17"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_17"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_17"."Proba_9" IS NULL OR "DT_Output_17"."Proba_9" > 0.0) THEN ln("DT_Output_17"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10) AS "Proba_3", (9.0 * (CASE WHEN ("DT_Output_17"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_17"."Proba_4" IS NULL OR "DT_Output_17"."Proba_4" > 0.0) THEN ln("DT_Output_17"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_17"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_17"."Proba_0" IS NULL OR "DT_Output_17"."Proba_0" > 0.0) THEN ln("DT_Output_17"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_17"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_17"."Proba_1" IS NULL OR "DT_Output_17"."Proba_1" > 0.0) THEN ln("DT_Output_17"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_17"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_17"."Proba_2" IS NULL OR "DT_Output_17"."Proba_2" > 0.0) THEN ln("DT_Output_17"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_17"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_17"."Proba_3" IS NULL OR "DT_Output_17"."Proba_3" > 0.0) THEN ln("DT_Output_17"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_17"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_17"."Proba_4" IS NULL OR "DT_Output_17"."Proba_4" > 0.0) THEN ln("DT_Output_17"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_17"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_17"."Proba_5" IS NULL OR "DT_Output_17"."Proba_5" > 0.0) THEN ln("DT_Output_17"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_17"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_17"."Proba_6" IS NULL OR "DT_Output_17"."Proba_6" > 0.0) THEN ln("DT_Output_17"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_17"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_17"."Proba_7" IS NULL OR "DT_Output_17"."Proba_7" > 0.0) THEN ln("DT_Output_17"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_17"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_17"."Proba_8" IS NULL OR "DT_Output_17"."Proba_8" > 0.0) THEN ln("DT_Output_17"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_17"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_17"."Proba_9" IS NULL OR "DT_Output_17"."Proba_9" > 0.0) THEN ln("DT_Output_17"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10)) / 32.0 AS "Score_4", 9.0 * (CASE WHEN ("DT_Output_17"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_17"."Proba_4" IS NULL OR "DT_Output_17"."Proba_4" > 0.0) THEN ln("DT_Output_17"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_17"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_17"."Proba_0" IS NULL OR "DT_Output_17"."Proba_0" > 0.0) THEN ln("DT_Output_17"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_17"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_17"."Proba_1" IS NULL OR "DT_Output_17"."Proba_1" > 0.0) THEN ln("DT_Output_17"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_17"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_17"."Proba_2" IS NULL OR "DT_Output_17"."Proba_2" > 0.0) THEN ln("DT_Output_17"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_17"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_17"."Proba_3" IS NULL OR "DT_Output_17"."Proba_3" > 0.0) THEN ln("DT_Output_17"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_17"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_17"."Proba_4" IS NULL OR "DT_Output_17"."Proba_4" > 0.0) THEN ln("DT_Output_17"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_17"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_17"."Proba_5" IS NULL OR "DT_Output_17"."Proba_5" > 0.0) THEN ln("DT_Output_17"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_17"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_17"."Proba_6" IS NULL OR "DT_Output_17"."Proba_6" > 0.0) THEN ln("DT_Output_17"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_17"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_17"."Proba_7" IS NULL OR "DT_Output_17"."Proba_7" > 0.0) THEN ln("DT_Output_17"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_17"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_17"."Proba_8" IS NULL OR "DT_Output_17"."Proba_8" > 0.0) THEN ln("DT_Output_17"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_17"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_17"."Proba_9" IS NULL OR "DT_Output_17"."Proba_9" > 0.0) THEN ln("DT_Output_17"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10) AS "Proba_4", (9.0 * (CASE WHEN ("DT_Output_17"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_17"."Proba_5" IS NULL OR "DT_Output_17"."Proba_5" > 0.0) THEN ln("DT_Output_17"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_17"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_17"."Proba_0" IS NULL OR "DT_Output_17"."Proba_0" > 0.0) THEN ln("DT_Output_17"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_17"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_17"."Proba_1" IS NULL OR "DT_Output_17"."Proba_1" > 0.0) THEN ln("DT_Output_17"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_17"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_17"."Proba_2" IS NULL OR "DT_Output_17"."Proba_2" > 0.0) THEN ln("DT_Output_17"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_17"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_17"."Proba_3" IS NULL OR "DT_Output_17"."Proba_3" > 0.0) THEN ln("DT_Output_17"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_17"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_17"."Proba_4" IS NULL OR "DT_Output_17"."Proba_4" > 0.0) THEN ln("DT_Output_17"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_17"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_17"."Proba_5" IS NULL OR "DT_Output_17"."Proba_5" > 0.0) THEN ln("DT_Output_17"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_17"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_17"."Proba_6" IS NULL OR "DT_Output_17"."Proba_6" > 0.0) THEN ln("DT_Output_17"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_17"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_17"."Proba_7" IS NULL OR "DT_Output_17"."Proba_7" > 0.0) THEN ln("DT_Output_17"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_17"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_17"."Proba_8" IS NULL OR "DT_Output_17"."Proba_8" > 0.0) THEN ln("DT_Output_17"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_17"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_17"."Proba_9" IS NULL OR "DT_Output_17"."Proba_9" > 0.0) THEN ln("DT_Output_17"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10)) / 32.0 AS "Score_5", 9.0 * (CASE WHEN ("DT_Output_17"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_17"."Proba_5" IS NULL OR "DT_Output_17"."Proba_5" > 0.0) THEN ln("DT_Output_17"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_17"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_17"."Proba_0" IS NULL OR "DT_Output_17"."Proba_0" > 0.0) THEN ln("DT_Output_17"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_17"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_17"."Proba_1" IS NULL OR "DT_Output_17"."Proba_1" > 0.0) THEN ln("DT_Output_17"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_17"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_17"."Proba_2" IS NULL OR "DT_Output_17"."Proba_2" > 0.0) THEN ln("DT_Output_17"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_17"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_17"."Proba_3" IS NULL OR "DT_Output_17"."Proba_3" > 0.0) THEN ln("DT_Output_17"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_17"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_17"."Proba_4" IS NULL OR "DT_Output_17"."Proba_4" > 0.0) THEN ln("DT_Output_17"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_17"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_17"."Proba_5" IS NULL OR "DT_Output_17"."Proba_5" > 0.0) THEN ln("DT_Output_17"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_17"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_17"."Proba_6" IS NULL OR "DT_Output_17"."Proba_6" > 0.0) THEN ln("DT_Output_17"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_17"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_17"."Proba_7" IS NULL OR "DT_Output_17"."Proba_7" > 0.0) THEN ln("DT_Output_17"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_17"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_17"."Proba_8" IS NULL OR "DT_Output_17"."Proba_8" > 0.0) THEN ln("DT_Output_17"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_17"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_17"."Proba_9" IS NULL OR "DT_Output_17"."Proba_9" > 0.0) THEN ln("DT_Output_17"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10) AS "Proba_5", (9.0 * (CASE WHEN ("DT_Output_17"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_17"."Proba_6" IS NULL OR "DT_Output_17"."Proba_6" > 0.0) THEN ln("DT_Output_17"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_17"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_17"."Proba_0" IS NULL OR "DT_Output_17"."Proba_0" > 0.0) THEN ln("DT_Output_17"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_17"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_17"."Proba_1" IS NULL OR "DT_Output_17"."Proba_1" > 0.0) THEN ln("DT_Output_17"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_17"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_17"."Proba_2" IS NULL OR "DT_Output_17"."Proba_2" > 0.0) THEN ln("DT_Output_17"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_17"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_17"."Proba_3" IS NULL OR "DT_Output_17"."Proba_3" > 0.0) THEN ln("DT_Output_17"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_17"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_17"."Proba_4" IS NULL OR "DT_Output_17"."Proba_4" > 0.0) THEN ln("DT_Output_17"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_17"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_17"."Proba_5" IS NULL OR "DT_Output_17"."Proba_5" > 0.0) THEN ln("DT_Output_17"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_17"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_17"."Proba_6" IS NULL OR "DT_Output_17"."Proba_6" > 0.0) THEN ln("DT_Output_17"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_17"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_17"."Proba_7" IS NULL OR "DT_Output_17"."Proba_7" > 0.0) THEN ln("DT_Output_17"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_17"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_17"."Proba_8" IS NULL OR "DT_Output_17"."Proba_8" > 0.0) THEN ln("DT_Output_17"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_17"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_17"."Proba_9" IS NULL OR "DT_Output_17"."Proba_9" > 0.0) THEN ln("DT_Output_17"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10)) / 32.0 AS "Score_6", 9.0 * (CASE WHEN ("DT_Output_17"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_17"."Proba_6" IS NULL OR "DT_Output_17"."Proba_6" > 0.0) THEN ln("DT_Output_17"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_17"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_17"."Proba_0" IS NULL OR "DT_Output_17"."Proba_0" > 0.0) THEN ln("DT_Output_17"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_17"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_17"."Proba_1" IS NULL OR "DT_Output_17"."Proba_1" > 0.0) THEN ln("DT_Output_17"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_17"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_17"."Proba_2" IS NULL OR "DT_Output_17"."Proba_2" > 0.0) THEN ln("DT_Output_17"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_17"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_17"."Proba_3" IS NULL OR "DT_Output_17"."Proba_3" > 0.0) THEN ln("DT_Output_17"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_17"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_17"."Proba_4" IS NULL OR "DT_Output_17"."Proba_4" > 0.0) THEN ln("DT_Output_17"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_17"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_17"."Proba_5" IS NULL OR "DT_Output_17"."Proba_5" > 0.0) THEN ln("DT_Output_17"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_17"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_17"."Proba_6" IS NULL OR "DT_Output_17"."Proba_6" > 0.0) THEN ln("DT_Output_17"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_17"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_17"."Proba_7" IS NULL OR "DT_Output_17"."Proba_7" > 0.0) THEN ln("DT_Output_17"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_17"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_17"."Proba_8" IS NULL OR "DT_Output_17"."Proba_8" > 0.0) THEN ln("DT_Output_17"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_17"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_17"."Proba_9" IS NULL OR "DT_Output_17"."Proba_9" > 0.0) THEN ln("DT_Output_17"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10) AS "Proba_6", (9.0 * (CASE WHEN ("DT_Output_17"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_17"."Proba_7" IS NULL OR "DT_Output_17"."Proba_7" > 0.0) THEN ln("DT_Output_17"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_17"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_17"."Proba_0" IS NULL OR "DT_Output_17"."Proba_0" > 0.0) THEN ln("DT_Output_17"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_17"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_17"."Proba_1" IS NULL OR "DT_Output_17"."Proba_1" > 0.0) THEN ln("DT_Output_17"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_17"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_17"."Proba_2" IS NULL OR "DT_Output_17"."Proba_2" > 0.0) THEN ln("DT_Output_17"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_17"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_17"."Proba_3" IS NULL OR "DT_Output_17"."Proba_3" > 0.0) THEN ln("DT_Output_17"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_17"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_17"."Proba_4" IS NULL OR "DT_Output_17"."Proba_4" > 0.0) THEN ln("DT_Output_17"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_17"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_17"."Proba_5" IS NULL OR "DT_Output_17"."Proba_5" > 0.0) THEN ln("DT_Output_17"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_17"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_17"."Proba_6" IS NULL OR "DT_Output_17"."Proba_6" > 0.0) THEN ln("DT_Output_17"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_17"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_17"."Proba_7" IS NULL OR "DT_Output_17"."Proba_7" > 0.0) THEN ln("DT_Output_17"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_17"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_17"."Proba_8" IS NULL OR "DT_Output_17"."Proba_8" > 0.0) THEN ln("DT_Output_17"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_17"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_17"."Proba_9" IS NULL OR "DT_Output_17"."Proba_9" > 0.0) THEN ln("DT_Output_17"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10)) / 32.0 AS "Score_7", 9.0 * (CASE WHEN ("DT_Output_17"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_17"."Proba_7" IS NULL OR "DT_Output_17"."Proba_7" > 0.0) THEN ln("DT_Output_17"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_17"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_17"."Proba_0" IS NULL OR "DT_Output_17"."Proba_0" > 0.0) THEN ln("DT_Output_17"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_17"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_17"."Proba_1" IS NULL OR "DT_Output_17"."Proba_1" > 0.0) THEN ln("DT_Output_17"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_17"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_17"."Proba_2" IS NULL OR "DT_Output_17"."Proba_2" > 0.0) THEN ln("DT_Output_17"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_17"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_17"."Proba_3" IS NULL OR "DT_Output_17"."Proba_3" > 0.0) THEN ln("DT_Output_17"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_17"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_17"."Proba_4" IS NULL OR "DT_Output_17"."Proba_4" > 0.0) THEN ln("DT_Output_17"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_17"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_17"."Proba_5" IS NULL OR "DT_Output_17"."Proba_5" > 0.0) THEN ln("DT_Output_17"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_17"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_17"."Proba_6" IS NULL OR "DT_Output_17"."Proba_6" > 0.0) THEN ln("DT_Output_17"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_17"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_17"."Proba_7" IS NULL OR "DT_Output_17"."Proba_7" > 0.0) THEN ln("DT_Output_17"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_17"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_17"."Proba_8" IS NULL OR "DT_Output_17"."Proba_8" > 0.0) THEN ln("DT_Output_17"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_17"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_17"."Proba_9" IS NULL OR "DT_Output_17"."Proba_9" > 0.0) THEN ln("DT_Output_17"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10) AS "Proba_7", (9.0 * (CASE WHEN ("DT_Output_17"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_17"."Proba_8" IS NULL OR "DT_Output_17"."Proba_8" > 0.0) THEN ln("DT_Output_17"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_17"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_17"."Proba_0" IS NULL OR "DT_Output_17"."Proba_0" > 0.0) THEN ln("DT_Output_17"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_17"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_17"."Proba_1" IS NULL OR "DT_Output_17"."Proba_1" > 0.0) THEN ln("DT_Output_17"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_17"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_17"."Proba_2" IS NULL OR "DT_Output_17"."Proba_2" > 0.0) THEN ln("DT_Output_17"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_17"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_17"."Proba_3" IS NULL OR "DT_Output_17"."Proba_3" > 0.0) THEN ln("DT_Output_17"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_17"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_17"."Proba_4" IS NULL OR "DT_Output_17"."Proba_4" > 0.0) THEN ln("DT_Output_17"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_17"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_17"."Proba_5" IS NULL OR "DT_Output_17"."Proba_5" > 0.0) THEN ln("DT_Output_17"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_17"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_17"."Proba_6" IS NULL OR "DT_Output_17"."Proba_6" > 0.0) THEN ln("DT_Output_17"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_17"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_17"."Proba_7" IS NULL OR "DT_Output_17"."Proba_7" > 0.0) THEN ln("DT_Output_17"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_17"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_17"."Proba_8" IS NULL OR "DT_Output_17"."Proba_8" > 0.0) THEN ln("DT_Output_17"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_17"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_17"."Proba_9" IS NULL OR "DT_Output_17"."Proba_9" > 0.0) THEN ln("DT_Output_17"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10)) / 32.0 AS "Score_8", 9.0 * (CASE WHEN ("DT_Output_17"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_17"."Proba_8" IS NULL OR "DT_Output_17"."Proba_8" > 0.0) THEN ln("DT_Output_17"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_17"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_17"."Proba_0" IS NULL OR "DT_Output_17"."Proba_0" > 0.0) THEN ln("DT_Output_17"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_17"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_17"."Proba_1" IS NULL OR "DT_Output_17"."Proba_1" > 0.0) THEN ln("DT_Output_17"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_17"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_17"."Proba_2" IS NULL OR "DT_Output_17"."Proba_2" > 0.0) THEN ln("DT_Output_17"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_17"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_17"."Proba_3" IS NULL OR "DT_Output_17"."Proba_3" > 0.0) THEN ln("DT_Output_17"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_17"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_17"."Proba_4" IS NULL OR "DT_Output_17"."Proba_4" > 0.0) THEN ln("DT_Output_17"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_17"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_17"."Proba_5" IS NULL OR "DT_Output_17"."Proba_5" > 0.0) THEN ln("DT_Output_17"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_17"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_17"."Proba_6" IS NULL OR "DT_Output_17"."Proba_6" > 0.0) THEN ln("DT_Output_17"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_17"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_17"."Proba_7" IS NULL OR "DT_Output_17"."Proba_7" > 0.0) THEN ln("DT_Output_17"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_17"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_17"."Proba_8" IS NULL OR "DT_Output_17"."Proba_8" > 0.0) THEN ln("DT_Output_17"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_17"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_17"."Proba_9" IS NULL OR "DT_Output_17"."Proba_9" > 0.0) THEN ln("DT_Output_17"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10) AS "Proba_8", (9.0 * (CASE WHEN ("DT_Output_17"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_17"."Proba_9" IS NULL OR "DT_Output_17"."Proba_9" > 0.0) THEN ln("DT_Output_17"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_17"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_17"."Proba_0" IS NULL OR "DT_Output_17"."Proba_0" > 0.0) THEN ln("DT_Output_17"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_17"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_17"."Proba_1" IS NULL OR "DT_Output_17"."Proba_1" > 0.0) THEN ln("DT_Output_17"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_17"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_17"."Proba_2" IS NULL OR "DT_Output_17"."Proba_2" > 0.0) THEN ln("DT_Output_17"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_17"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_17"."Proba_3" IS NULL OR "DT_Output_17"."Proba_3" > 0.0) THEN ln("DT_Output_17"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_17"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_17"."Proba_4" IS NULL OR "DT_Output_17"."Proba_4" > 0.0) THEN ln("DT_Output_17"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_17"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_17"."Proba_5" IS NULL OR "DT_Output_17"."Proba_5" > 0.0) THEN ln("DT_Output_17"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_17"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_17"."Proba_6" IS NULL OR "DT_Output_17"."Proba_6" > 0.0) THEN ln("DT_Output_17"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_17"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_17"."Proba_7" IS NULL OR "DT_Output_17"."Proba_7" > 0.0) THEN ln("DT_Output_17"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_17"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_17"."Proba_8" IS NULL OR "DT_Output_17"."Proba_8" > 0.0) THEN ln("DT_Output_17"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_17"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_17"."Proba_9" IS NULL OR "DT_Output_17"."Proba_9" > 0.0) THEN ln("DT_Output_17"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10)) / 32.0 AS "Score_9", 9.0 * (CASE WHEN ("DT_Output_17"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_17"."Proba_9" IS NULL OR "DT_Output_17"."Proba_9" > 0.0) THEN ln("DT_Output_17"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_17"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_17"."Proba_0" IS NULL OR "DT_Output_17"."Proba_0" > 0.0) THEN ln("DT_Output_17"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_17"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_17"."Proba_1" IS NULL OR "DT_Output_17"."Proba_1" > 0.0) THEN ln("DT_Output_17"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_17"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_17"."Proba_2" IS NULL OR "DT_Output_17"."Proba_2" > 0.0) THEN ln("DT_Output_17"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_17"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_17"."Proba_3" IS NULL OR "DT_Output_17"."Proba_3" > 0.0) THEN ln("DT_Output_17"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_17"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_17"."Proba_4" IS NULL OR "DT_Output_17"."Proba_4" > 0.0) THEN ln("DT_Output_17"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_17"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_17"."Proba_5" IS NULL OR "DT_Output_17"."Proba_5" > 0.0) THEN ln("DT_Output_17"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_17"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_17"."Proba_6" IS NULL OR "DT_Output_17"."Proba_6" > 0.0) THEN ln("DT_Output_17"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_17"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_17"."Proba_7" IS NULL OR "DT_Output_17"."Proba_7" > 0.0) THEN ln("DT_Output_17"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_17"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_17"."Proba_8" IS NULL OR "DT_Output_17"."Proba_8" > 0.0) THEN ln("DT_Output_17"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_17"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_17"."Proba_9" IS NULL OR "DT_Output_17"."Proba_9" > 0.0) THEN ln("DT_Output_17"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10) AS "Proba_9" 
FROM "DT_Output_17"), 
"DT_node_lookup_18" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_30 <= -1.555469036102295) THEN 1 ELSE 2 END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_18" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Proba_0" AS "Proba_0", "Values"."LogProba_0" AS "LogProba_0", "Values"."Proba_1" AS "Proba_1", "Values"."LogProba_1" AS "LogProba_1", "Values"."Proba_2" AS "Proba_2", "Values"."LogProba_2" AS "LogProba_2", "Values"."Proba_3" AS "Proba_3", "Values"."LogProba_3" AS "LogProba_3", "Values"."Proba_4" AS "Proba_4", "Values"."LogProba_4" AS "LogProba_4", "Values"."Proba_5" AS "Proba_5", "Values"."LogProba_5" AS "LogProba_5", "Values"."Proba_6" AS "Proba_6", "Values"."LogProba_6" AS "LogProba_6", "Values"."Proba_7" AS "Proba_7", "Values"."LogProba_7" AS "LogProba_7", "Values"."Proba_8" AS "Proba_8", "Values"."LogProba_8" AS "LogProba_8", "Values"."Proba_9" AS "Proba_9", "Values"."LogProba_9" AS "LogProba_9", "Values"."Decision" AS "Decision", "Values"."DecisionProba" AS "DecisionProba" 
FROM (SELECT 1 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 246 AS count, 1 AS depth, 0 AS parent_id, 0.9973974539844703 AS "Proba_0", -0.0026059385258 AS "LogProba_0", 0.0003253182540544931 AS "Proba_1", -8.03070661154 AS "LogProba_1", 0.00032531824133724457 AS "Proba_2", -8.03070665063 AS "LogProba_2", 0.00032531825450913654 AS "Proba_3", -8.03070661014 AS "LogProba_3", 0.0003253182480765675 AS "Proba_4", -8.03070662991 AS "LogProba_4", 0.0003253182544908167 AS "Proba_5", -8.03070661019 AS "LogProba_5", 0.00032531825449780044 AS "Proba_6", -8.03070661017 AS "LogProba_6", 0.0003253182540544943 AS "Proba_7", -8.03070661154 AS "LogProba_7", 0.0 AS "Proba_8", -BINARY_FLOAT_INFINITY AS "LogProba_8", 0.00032531825450913724 AS "Proba_9", -8.03070661014 AS "LogProba_9", 0 AS "Decision", 0.997397453984 AS "DecisionProba" FROM DUAL UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1191 AS count, 1 AS depth, 0 AS parent_id, 1.1632086360324738e-10 AS "Proba_0", -22.8746686778 AS "LogProba_0", 0.11110708308515295 AS "Proba_1", -2.19726083023 AS "LogProba_1", 0.1111070832028908 AS "Proba_2", -2.19726082917 AS "LogProba_2", 0.11110708320142361 AS "Proba_3", -2.19726082918 AS "LogProba_3", 0.11110708320214009 AS "Proba_4", -2.19726082917 AS "LogProba_4", 0.11110708320142552 AS "Proba_5", -2.19726082918 AS "LogProba_5", 0.1111070832014243 AS "Proba_6", -2.19726082918 AS "LogProba_6", 0.11110708308515313 AS "Proba_7", -2.19726083023 AS "LogProba_7", 0.1111433345026454 AS "Proba_8", -2.19693460886 AS "LogProba_8", 0.11110708320142335 AS "Proba_9", -2.19726082918 AS "LogProba_9", 8 AS "Decision", 0.111143334503 AS "DecisionProba" FROM DUAL) "Values"), 
"DT_Output_18" AS 
(SELECT "DT_node_lookup_18"."KEY" AS "KEY", "DT_node_lookup_18".node_id_2 AS node_id_2, "DT_node_data_18".node_id AS node_id, "DT_node_data_18".feature AS feature, "DT_node_data_18".threshold AS threshold, "DT_node_data_18".count AS count, "DT_node_data_18".depth AS depth, "DT_node_data_18".parent_id AS parent_id, "DT_node_data_18"."Proba_0" AS "Proba_0", "DT_node_data_18"."LogProba_0" AS "LogProba_0", "DT_node_data_18"."Proba_1" AS "Proba_1", "DT_node_data_18"."LogProba_1" AS "LogProba_1", "DT_node_data_18"."Proba_2" AS "Proba_2", "DT_node_data_18"."LogProba_2" AS "LogProba_2", "DT_node_data_18"."Proba_3" AS "Proba_3", "DT_node_data_18"."LogProba_3" AS "LogProba_3", "DT_node_data_18"."Proba_4" AS "Proba_4", "DT_node_data_18"."LogProba_4" AS "LogProba_4", "DT_node_data_18"."Proba_5" AS "Proba_5", "DT_node_data_18"."LogProba_5" AS "LogProba_5", "DT_node_data_18"."Proba_6" AS "Proba_6", "DT_node_data_18"."LogProba_6" AS "LogProba_6", "DT_node_data_18"."Proba_7" AS "Proba_7", "DT_node_data_18"."LogProba_7" AS "LogProba_7", "DT_node_data_18"."Proba_8" AS "Proba_8", "DT_node_data_18"."LogProba_8" AS "LogProba_8", "DT_node_data_18"."Proba_9" AS "Proba_9", "DT_node_data_18"."LogProba_9" AS "LogProba_9", "DT_node_data_18"."Decision" AS "Decision", "DT_node_data_18"."DecisionProba" AS "DecisionProba" 
FROM "DT_node_lookup_18" LEFT OUTER JOIN "DT_node_data_18" ON "DT_node_lookup_18".node_id_2 = "DT_node_data_18".node_id), 
"AdaBoost_Estim_18" AS 
(SELECT "DT_Output_18"."KEY" AS "KEY", (9.0 * (CASE WHEN ("DT_Output_18"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_18"."Proba_0" IS NULL OR "DT_Output_18"."Proba_0" > 0.0) THEN ln("DT_Output_18"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_18"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_18"."Proba_0" IS NULL OR "DT_Output_18"."Proba_0" > 0.0) THEN ln("DT_Output_18"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_18"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_18"."Proba_1" IS NULL OR "DT_Output_18"."Proba_1" > 0.0) THEN ln("DT_Output_18"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_18"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_18"."Proba_2" IS NULL OR "DT_Output_18"."Proba_2" > 0.0) THEN ln("DT_Output_18"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_18"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_18"."Proba_3" IS NULL OR "DT_Output_18"."Proba_3" > 0.0) THEN ln("DT_Output_18"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_18"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_18"."Proba_4" IS NULL OR "DT_Output_18"."Proba_4" > 0.0) THEN ln("DT_Output_18"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_18"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_18"."Proba_5" IS NULL OR "DT_Output_18"."Proba_5" > 0.0) THEN ln("DT_Output_18"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_18"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_18"."Proba_6" IS NULL OR "DT_Output_18"."Proba_6" > 0.0) THEN ln("DT_Output_18"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_18"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_18"."Proba_7" IS NULL OR "DT_Output_18"."Proba_7" > 0.0) THEN ln("DT_Output_18"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_18"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_18"."Proba_8" IS NULL OR "DT_Output_18"."Proba_8" > 0.0) THEN ln("DT_Output_18"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_18"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_18"."Proba_9" IS NULL OR "DT_Output_18"."Proba_9" > 0.0) THEN ln("DT_Output_18"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10)) / 32.0 AS "Score_0", 9.0 * (CASE WHEN ("DT_Output_18"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_18"."Proba_0" IS NULL OR "DT_Output_18"."Proba_0" > 0.0) THEN ln("DT_Output_18"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_18"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_18"."Proba_0" IS NULL OR "DT_Output_18"."Proba_0" > 0.0) THEN ln("DT_Output_18"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_18"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_18"."Proba_1" IS NULL OR "DT_Output_18"."Proba_1" > 0.0) THEN ln("DT_Output_18"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_18"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_18"."Proba_2" IS NULL OR "DT_Output_18"."Proba_2" > 0.0) THEN ln("DT_Output_18"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_18"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_18"."Proba_3" IS NULL OR "DT_Output_18"."Proba_3" > 0.0) THEN ln("DT_Output_18"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_18"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_18"."Proba_4" IS NULL OR "DT_Output_18"."Proba_4" > 0.0) THEN ln("DT_Output_18"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_18"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_18"."Proba_5" IS NULL OR "DT_Output_18"."Proba_5" > 0.0) THEN ln("DT_Output_18"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_18"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_18"."Proba_6" IS NULL OR "DT_Output_18"."Proba_6" > 0.0) THEN ln("DT_Output_18"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_18"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_18"."Proba_7" IS NULL OR "DT_Output_18"."Proba_7" > 0.0) THEN ln("DT_Output_18"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_18"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_18"."Proba_8" IS NULL OR "DT_Output_18"."Proba_8" > 0.0) THEN ln("DT_Output_18"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_18"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_18"."Proba_9" IS NULL OR "DT_Output_18"."Proba_9" > 0.0) THEN ln("DT_Output_18"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10) AS "Proba_0", (9.0 * (CASE WHEN ("DT_Output_18"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_18"."Proba_1" IS NULL OR "DT_Output_18"."Proba_1" > 0.0) THEN ln("DT_Output_18"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_18"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_18"."Proba_0" IS NULL OR "DT_Output_18"."Proba_0" > 0.0) THEN ln("DT_Output_18"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_18"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_18"."Proba_1" IS NULL OR "DT_Output_18"."Proba_1" > 0.0) THEN ln("DT_Output_18"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_18"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_18"."Proba_2" IS NULL OR "DT_Output_18"."Proba_2" > 0.0) THEN ln("DT_Output_18"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_18"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_18"."Proba_3" IS NULL OR "DT_Output_18"."Proba_3" > 0.0) THEN ln("DT_Output_18"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_18"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_18"."Proba_4" IS NULL OR "DT_Output_18"."Proba_4" > 0.0) THEN ln("DT_Output_18"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_18"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_18"."Proba_5" IS NULL OR "DT_Output_18"."Proba_5" > 0.0) THEN ln("DT_Output_18"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_18"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_18"."Proba_6" IS NULL OR "DT_Output_18"."Proba_6" > 0.0) THEN ln("DT_Output_18"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_18"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_18"."Proba_7" IS NULL OR "DT_Output_18"."Proba_7" > 0.0) THEN ln("DT_Output_18"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_18"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_18"."Proba_8" IS NULL OR "DT_Output_18"."Proba_8" > 0.0) THEN ln("DT_Output_18"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_18"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_18"."Proba_9" IS NULL OR "DT_Output_18"."Proba_9" > 0.0) THEN ln("DT_Output_18"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10)) / 32.0 AS "Score_1", 9.0 * (CASE WHEN ("DT_Output_18"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_18"."Proba_1" IS NULL OR "DT_Output_18"."Proba_1" > 0.0) THEN ln("DT_Output_18"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_18"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_18"."Proba_0" IS NULL OR "DT_Output_18"."Proba_0" > 0.0) THEN ln("DT_Output_18"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_18"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_18"."Proba_1" IS NULL OR "DT_Output_18"."Proba_1" > 0.0) THEN ln("DT_Output_18"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_18"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_18"."Proba_2" IS NULL OR "DT_Output_18"."Proba_2" > 0.0) THEN ln("DT_Output_18"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_18"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_18"."Proba_3" IS NULL OR "DT_Output_18"."Proba_3" > 0.0) THEN ln("DT_Output_18"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_18"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_18"."Proba_4" IS NULL OR "DT_Output_18"."Proba_4" > 0.0) THEN ln("DT_Output_18"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_18"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_18"."Proba_5" IS NULL OR "DT_Output_18"."Proba_5" > 0.0) THEN ln("DT_Output_18"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_18"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_18"."Proba_6" IS NULL OR "DT_Output_18"."Proba_6" > 0.0) THEN ln("DT_Output_18"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_18"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_18"."Proba_7" IS NULL OR "DT_Output_18"."Proba_7" > 0.0) THEN ln("DT_Output_18"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_18"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_18"."Proba_8" IS NULL OR "DT_Output_18"."Proba_8" > 0.0) THEN ln("DT_Output_18"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_18"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_18"."Proba_9" IS NULL OR "DT_Output_18"."Proba_9" > 0.0) THEN ln("DT_Output_18"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10) AS "Proba_1", (9.0 * (CASE WHEN ("DT_Output_18"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_18"."Proba_2" IS NULL OR "DT_Output_18"."Proba_2" > 0.0) THEN ln("DT_Output_18"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_18"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_18"."Proba_0" IS NULL OR "DT_Output_18"."Proba_0" > 0.0) THEN ln("DT_Output_18"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_18"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_18"."Proba_1" IS NULL OR "DT_Output_18"."Proba_1" > 0.0) THEN ln("DT_Output_18"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_18"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_18"."Proba_2" IS NULL OR "DT_Output_18"."Proba_2" > 0.0) THEN ln("DT_Output_18"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_18"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_18"."Proba_3" IS NULL OR "DT_Output_18"."Proba_3" > 0.0) THEN ln("DT_Output_18"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_18"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_18"."Proba_4" IS NULL OR "DT_Output_18"."Proba_4" > 0.0) THEN ln("DT_Output_18"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_18"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_18"."Proba_5" IS NULL OR "DT_Output_18"."Proba_5" > 0.0) THEN ln("DT_Output_18"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_18"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_18"."Proba_6" IS NULL OR "DT_Output_18"."Proba_6" > 0.0) THEN ln("DT_Output_18"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_18"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_18"."Proba_7" IS NULL OR "DT_Output_18"."Proba_7" > 0.0) THEN ln("DT_Output_18"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_18"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_18"."Proba_8" IS NULL OR "DT_Output_18"."Proba_8" > 0.0) THEN ln("DT_Output_18"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_18"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_18"."Proba_9" IS NULL OR "DT_Output_18"."Proba_9" > 0.0) THEN ln("DT_Output_18"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10)) / 32.0 AS "Score_2", 9.0 * (CASE WHEN ("DT_Output_18"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_18"."Proba_2" IS NULL OR "DT_Output_18"."Proba_2" > 0.0) THEN ln("DT_Output_18"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_18"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_18"."Proba_0" IS NULL OR "DT_Output_18"."Proba_0" > 0.0) THEN ln("DT_Output_18"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_18"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_18"."Proba_1" IS NULL OR "DT_Output_18"."Proba_1" > 0.0) THEN ln("DT_Output_18"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_18"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_18"."Proba_2" IS NULL OR "DT_Output_18"."Proba_2" > 0.0) THEN ln("DT_Output_18"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_18"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_18"."Proba_3" IS NULL OR "DT_Output_18"."Proba_3" > 0.0) THEN ln("DT_Output_18"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_18"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_18"."Proba_4" IS NULL OR "DT_Output_18"."Proba_4" > 0.0) THEN ln("DT_Output_18"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_18"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_18"."Proba_5" IS NULL OR "DT_Output_18"."Proba_5" > 0.0) THEN ln("DT_Output_18"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_18"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_18"."Proba_6" IS NULL OR "DT_Output_18"."Proba_6" > 0.0) THEN ln("DT_Output_18"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_18"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_18"."Proba_7" IS NULL OR "DT_Output_18"."Proba_7" > 0.0) THEN ln("DT_Output_18"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_18"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_18"."Proba_8" IS NULL OR "DT_Output_18"."Proba_8" > 0.0) THEN ln("DT_Output_18"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_18"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_18"."Proba_9" IS NULL OR "DT_Output_18"."Proba_9" > 0.0) THEN ln("DT_Output_18"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10) AS "Proba_2", (9.0 * (CASE WHEN ("DT_Output_18"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_18"."Proba_3" IS NULL OR "DT_Output_18"."Proba_3" > 0.0) THEN ln("DT_Output_18"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_18"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_18"."Proba_0" IS NULL OR "DT_Output_18"."Proba_0" > 0.0) THEN ln("DT_Output_18"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_18"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_18"."Proba_1" IS NULL OR "DT_Output_18"."Proba_1" > 0.0) THEN ln("DT_Output_18"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_18"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_18"."Proba_2" IS NULL OR "DT_Output_18"."Proba_2" > 0.0) THEN ln("DT_Output_18"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_18"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_18"."Proba_3" IS NULL OR "DT_Output_18"."Proba_3" > 0.0) THEN ln("DT_Output_18"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_18"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_18"."Proba_4" IS NULL OR "DT_Output_18"."Proba_4" > 0.0) THEN ln("DT_Output_18"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_18"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_18"."Proba_5" IS NULL OR "DT_Output_18"."Proba_5" > 0.0) THEN ln("DT_Output_18"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_18"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_18"."Proba_6" IS NULL OR "DT_Output_18"."Proba_6" > 0.0) THEN ln("DT_Output_18"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_18"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_18"."Proba_7" IS NULL OR "DT_Output_18"."Proba_7" > 0.0) THEN ln("DT_Output_18"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_18"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_18"."Proba_8" IS NULL OR "DT_Output_18"."Proba_8" > 0.0) THEN ln("DT_Output_18"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_18"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_18"."Proba_9" IS NULL OR "DT_Output_18"."Proba_9" > 0.0) THEN ln("DT_Output_18"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10)) / 32.0 AS "Score_3", 9.0 * (CASE WHEN ("DT_Output_18"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_18"."Proba_3" IS NULL OR "DT_Output_18"."Proba_3" > 0.0) THEN ln("DT_Output_18"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_18"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_18"."Proba_0" IS NULL OR "DT_Output_18"."Proba_0" > 0.0) THEN ln("DT_Output_18"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_18"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_18"."Proba_1" IS NULL OR "DT_Output_18"."Proba_1" > 0.0) THEN ln("DT_Output_18"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_18"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_18"."Proba_2" IS NULL OR "DT_Output_18"."Proba_2" > 0.0) THEN ln("DT_Output_18"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_18"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_18"."Proba_3" IS NULL OR "DT_Output_18"."Proba_3" > 0.0) THEN ln("DT_Output_18"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_18"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_18"."Proba_4" IS NULL OR "DT_Output_18"."Proba_4" > 0.0) THEN ln("DT_Output_18"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_18"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_18"."Proba_5" IS NULL OR "DT_Output_18"."Proba_5" > 0.0) THEN ln("DT_Output_18"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_18"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_18"."Proba_6" IS NULL OR "DT_Output_18"."Proba_6" > 0.0) THEN ln("DT_Output_18"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_18"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_18"."Proba_7" IS NULL OR "DT_Output_18"."Proba_7" > 0.0) THEN ln("DT_Output_18"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_18"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_18"."Proba_8" IS NULL OR "DT_Output_18"."Proba_8" > 0.0) THEN ln("DT_Output_18"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_18"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_18"."Proba_9" IS NULL OR "DT_Output_18"."Proba_9" > 0.0) THEN ln("DT_Output_18"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10) AS "Proba_3", (9.0 * (CASE WHEN ("DT_Output_18"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_18"."Proba_4" IS NULL OR "DT_Output_18"."Proba_4" > 0.0) THEN ln("DT_Output_18"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_18"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_18"."Proba_0" IS NULL OR "DT_Output_18"."Proba_0" > 0.0) THEN ln("DT_Output_18"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_18"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_18"."Proba_1" IS NULL OR "DT_Output_18"."Proba_1" > 0.0) THEN ln("DT_Output_18"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_18"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_18"."Proba_2" IS NULL OR "DT_Output_18"."Proba_2" > 0.0) THEN ln("DT_Output_18"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_18"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_18"."Proba_3" IS NULL OR "DT_Output_18"."Proba_3" > 0.0) THEN ln("DT_Output_18"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_18"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_18"."Proba_4" IS NULL OR "DT_Output_18"."Proba_4" > 0.0) THEN ln("DT_Output_18"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_18"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_18"."Proba_5" IS NULL OR "DT_Output_18"."Proba_5" > 0.0) THEN ln("DT_Output_18"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_18"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_18"."Proba_6" IS NULL OR "DT_Output_18"."Proba_6" > 0.0) THEN ln("DT_Output_18"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_18"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_18"."Proba_7" IS NULL OR "DT_Output_18"."Proba_7" > 0.0) THEN ln("DT_Output_18"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_18"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_18"."Proba_8" IS NULL OR "DT_Output_18"."Proba_8" > 0.0) THEN ln("DT_Output_18"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_18"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_18"."Proba_9" IS NULL OR "DT_Output_18"."Proba_9" > 0.0) THEN ln("DT_Output_18"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10)) / 32.0 AS "Score_4", 9.0 * (CASE WHEN ("DT_Output_18"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_18"."Proba_4" IS NULL OR "DT_Output_18"."Proba_4" > 0.0) THEN ln("DT_Output_18"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_18"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_18"."Proba_0" IS NULL OR "DT_Output_18"."Proba_0" > 0.0) THEN ln("DT_Output_18"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_18"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_18"."Proba_1" IS NULL OR "DT_Output_18"."Proba_1" > 0.0) THEN ln("DT_Output_18"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_18"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_18"."Proba_2" IS NULL OR "DT_Output_18"."Proba_2" > 0.0) THEN ln("DT_Output_18"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_18"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_18"."Proba_3" IS NULL OR "DT_Output_18"."Proba_3" > 0.0) THEN ln("DT_Output_18"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_18"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_18"."Proba_4" IS NULL OR "DT_Output_18"."Proba_4" > 0.0) THEN ln("DT_Output_18"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_18"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_18"."Proba_5" IS NULL OR "DT_Output_18"."Proba_5" > 0.0) THEN ln("DT_Output_18"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_18"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_18"."Proba_6" IS NULL OR "DT_Output_18"."Proba_6" > 0.0) THEN ln("DT_Output_18"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_18"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_18"."Proba_7" IS NULL OR "DT_Output_18"."Proba_7" > 0.0) THEN ln("DT_Output_18"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_18"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_18"."Proba_8" IS NULL OR "DT_Output_18"."Proba_8" > 0.0) THEN ln("DT_Output_18"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_18"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_18"."Proba_9" IS NULL OR "DT_Output_18"."Proba_9" > 0.0) THEN ln("DT_Output_18"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10) AS "Proba_4", (9.0 * (CASE WHEN ("DT_Output_18"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_18"."Proba_5" IS NULL OR "DT_Output_18"."Proba_5" > 0.0) THEN ln("DT_Output_18"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_18"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_18"."Proba_0" IS NULL OR "DT_Output_18"."Proba_0" > 0.0) THEN ln("DT_Output_18"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_18"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_18"."Proba_1" IS NULL OR "DT_Output_18"."Proba_1" > 0.0) THEN ln("DT_Output_18"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_18"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_18"."Proba_2" IS NULL OR "DT_Output_18"."Proba_2" > 0.0) THEN ln("DT_Output_18"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_18"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_18"."Proba_3" IS NULL OR "DT_Output_18"."Proba_3" > 0.0) THEN ln("DT_Output_18"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_18"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_18"."Proba_4" IS NULL OR "DT_Output_18"."Proba_4" > 0.0) THEN ln("DT_Output_18"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_18"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_18"."Proba_5" IS NULL OR "DT_Output_18"."Proba_5" > 0.0) THEN ln("DT_Output_18"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_18"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_18"."Proba_6" IS NULL OR "DT_Output_18"."Proba_6" > 0.0) THEN ln("DT_Output_18"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_18"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_18"."Proba_7" IS NULL OR "DT_Output_18"."Proba_7" > 0.0) THEN ln("DT_Output_18"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_18"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_18"."Proba_8" IS NULL OR "DT_Output_18"."Proba_8" > 0.0) THEN ln("DT_Output_18"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_18"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_18"."Proba_9" IS NULL OR "DT_Output_18"."Proba_9" > 0.0) THEN ln("DT_Output_18"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10)) / 32.0 AS "Score_5", 9.0 * (CASE WHEN ("DT_Output_18"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_18"."Proba_5" IS NULL OR "DT_Output_18"."Proba_5" > 0.0) THEN ln("DT_Output_18"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_18"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_18"."Proba_0" IS NULL OR "DT_Output_18"."Proba_0" > 0.0) THEN ln("DT_Output_18"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_18"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_18"."Proba_1" IS NULL OR "DT_Output_18"."Proba_1" > 0.0) THEN ln("DT_Output_18"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_18"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_18"."Proba_2" IS NULL OR "DT_Output_18"."Proba_2" > 0.0) THEN ln("DT_Output_18"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_18"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_18"."Proba_3" IS NULL OR "DT_Output_18"."Proba_3" > 0.0) THEN ln("DT_Output_18"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_18"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_18"."Proba_4" IS NULL OR "DT_Output_18"."Proba_4" > 0.0) THEN ln("DT_Output_18"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_18"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_18"."Proba_5" IS NULL OR "DT_Output_18"."Proba_5" > 0.0) THEN ln("DT_Output_18"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_18"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_18"."Proba_6" IS NULL OR "DT_Output_18"."Proba_6" > 0.0) THEN ln("DT_Output_18"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_18"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_18"."Proba_7" IS NULL OR "DT_Output_18"."Proba_7" > 0.0) THEN ln("DT_Output_18"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_18"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_18"."Proba_8" IS NULL OR "DT_Output_18"."Proba_8" > 0.0) THEN ln("DT_Output_18"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_18"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_18"."Proba_9" IS NULL OR "DT_Output_18"."Proba_9" > 0.0) THEN ln("DT_Output_18"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10) AS "Proba_5", (9.0 * (CASE WHEN ("DT_Output_18"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_18"."Proba_6" IS NULL OR "DT_Output_18"."Proba_6" > 0.0) THEN ln("DT_Output_18"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_18"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_18"."Proba_0" IS NULL OR "DT_Output_18"."Proba_0" > 0.0) THEN ln("DT_Output_18"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_18"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_18"."Proba_1" IS NULL OR "DT_Output_18"."Proba_1" > 0.0) THEN ln("DT_Output_18"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_18"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_18"."Proba_2" IS NULL OR "DT_Output_18"."Proba_2" > 0.0) THEN ln("DT_Output_18"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_18"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_18"."Proba_3" IS NULL OR "DT_Output_18"."Proba_3" > 0.0) THEN ln("DT_Output_18"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_18"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_18"."Proba_4" IS NULL OR "DT_Output_18"."Proba_4" > 0.0) THEN ln("DT_Output_18"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_18"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_18"."Proba_5" IS NULL OR "DT_Output_18"."Proba_5" > 0.0) THEN ln("DT_Output_18"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_18"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_18"."Proba_6" IS NULL OR "DT_Output_18"."Proba_6" > 0.0) THEN ln("DT_Output_18"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_18"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_18"."Proba_7" IS NULL OR "DT_Output_18"."Proba_7" > 0.0) THEN ln("DT_Output_18"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_18"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_18"."Proba_8" IS NULL OR "DT_Output_18"."Proba_8" > 0.0) THEN ln("DT_Output_18"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_18"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_18"."Proba_9" IS NULL OR "DT_Output_18"."Proba_9" > 0.0) THEN ln("DT_Output_18"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10)) / 32.0 AS "Score_6", 9.0 * (CASE WHEN ("DT_Output_18"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_18"."Proba_6" IS NULL OR "DT_Output_18"."Proba_6" > 0.0) THEN ln("DT_Output_18"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_18"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_18"."Proba_0" IS NULL OR "DT_Output_18"."Proba_0" > 0.0) THEN ln("DT_Output_18"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_18"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_18"."Proba_1" IS NULL OR "DT_Output_18"."Proba_1" > 0.0) THEN ln("DT_Output_18"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_18"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_18"."Proba_2" IS NULL OR "DT_Output_18"."Proba_2" > 0.0) THEN ln("DT_Output_18"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_18"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_18"."Proba_3" IS NULL OR "DT_Output_18"."Proba_3" > 0.0) THEN ln("DT_Output_18"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_18"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_18"."Proba_4" IS NULL OR "DT_Output_18"."Proba_4" > 0.0) THEN ln("DT_Output_18"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_18"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_18"."Proba_5" IS NULL OR "DT_Output_18"."Proba_5" > 0.0) THEN ln("DT_Output_18"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_18"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_18"."Proba_6" IS NULL OR "DT_Output_18"."Proba_6" > 0.0) THEN ln("DT_Output_18"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_18"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_18"."Proba_7" IS NULL OR "DT_Output_18"."Proba_7" > 0.0) THEN ln("DT_Output_18"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_18"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_18"."Proba_8" IS NULL OR "DT_Output_18"."Proba_8" > 0.0) THEN ln("DT_Output_18"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_18"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_18"."Proba_9" IS NULL OR "DT_Output_18"."Proba_9" > 0.0) THEN ln("DT_Output_18"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10) AS "Proba_6", (9.0 * (CASE WHEN ("DT_Output_18"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_18"."Proba_7" IS NULL OR "DT_Output_18"."Proba_7" > 0.0) THEN ln("DT_Output_18"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_18"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_18"."Proba_0" IS NULL OR "DT_Output_18"."Proba_0" > 0.0) THEN ln("DT_Output_18"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_18"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_18"."Proba_1" IS NULL OR "DT_Output_18"."Proba_1" > 0.0) THEN ln("DT_Output_18"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_18"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_18"."Proba_2" IS NULL OR "DT_Output_18"."Proba_2" > 0.0) THEN ln("DT_Output_18"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_18"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_18"."Proba_3" IS NULL OR "DT_Output_18"."Proba_3" > 0.0) THEN ln("DT_Output_18"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_18"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_18"."Proba_4" IS NULL OR "DT_Output_18"."Proba_4" > 0.0) THEN ln("DT_Output_18"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_18"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_18"."Proba_5" IS NULL OR "DT_Output_18"."Proba_5" > 0.0) THEN ln("DT_Output_18"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_18"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_18"."Proba_6" IS NULL OR "DT_Output_18"."Proba_6" > 0.0) THEN ln("DT_Output_18"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_18"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_18"."Proba_7" IS NULL OR "DT_Output_18"."Proba_7" > 0.0) THEN ln("DT_Output_18"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_18"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_18"."Proba_8" IS NULL OR "DT_Output_18"."Proba_8" > 0.0) THEN ln("DT_Output_18"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_18"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_18"."Proba_9" IS NULL OR "DT_Output_18"."Proba_9" > 0.0) THEN ln("DT_Output_18"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10)) / 32.0 AS "Score_7", 9.0 * (CASE WHEN ("DT_Output_18"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_18"."Proba_7" IS NULL OR "DT_Output_18"."Proba_7" > 0.0) THEN ln("DT_Output_18"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_18"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_18"."Proba_0" IS NULL OR "DT_Output_18"."Proba_0" > 0.0) THEN ln("DT_Output_18"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_18"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_18"."Proba_1" IS NULL OR "DT_Output_18"."Proba_1" > 0.0) THEN ln("DT_Output_18"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_18"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_18"."Proba_2" IS NULL OR "DT_Output_18"."Proba_2" > 0.0) THEN ln("DT_Output_18"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_18"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_18"."Proba_3" IS NULL OR "DT_Output_18"."Proba_3" > 0.0) THEN ln("DT_Output_18"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_18"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_18"."Proba_4" IS NULL OR "DT_Output_18"."Proba_4" > 0.0) THEN ln("DT_Output_18"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_18"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_18"."Proba_5" IS NULL OR "DT_Output_18"."Proba_5" > 0.0) THEN ln("DT_Output_18"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_18"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_18"."Proba_6" IS NULL OR "DT_Output_18"."Proba_6" > 0.0) THEN ln("DT_Output_18"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_18"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_18"."Proba_7" IS NULL OR "DT_Output_18"."Proba_7" > 0.0) THEN ln("DT_Output_18"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_18"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_18"."Proba_8" IS NULL OR "DT_Output_18"."Proba_8" > 0.0) THEN ln("DT_Output_18"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_18"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_18"."Proba_9" IS NULL OR "DT_Output_18"."Proba_9" > 0.0) THEN ln("DT_Output_18"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10) AS "Proba_7", (9.0 * (CASE WHEN ("DT_Output_18"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_18"."Proba_8" IS NULL OR "DT_Output_18"."Proba_8" > 0.0) THEN ln("DT_Output_18"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_18"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_18"."Proba_0" IS NULL OR "DT_Output_18"."Proba_0" > 0.0) THEN ln("DT_Output_18"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_18"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_18"."Proba_1" IS NULL OR "DT_Output_18"."Proba_1" > 0.0) THEN ln("DT_Output_18"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_18"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_18"."Proba_2" IS NULL OR "DT_Output_18"."Proba_2" > 0.0) THEN ln("DT_Output_18"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_18"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_18"."Proba_3" IS NULL OR "DT_Output_18"."Proba_3" > 0.0) THEN ln("DT_Output_18"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_18"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_18"."Proba_4" IS NULL OR "DT_Output_18"."Proba_4" > 0.0) THEN ln("DT_Output_18"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_18"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_18"."Proba_5" IS NULL OR "DT_Output_18"."Proba_5" > 0.0) THEN ln("DT_Output_18"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_18"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_18"."Proba_6" IS NULL OR "DT_Output_18"."Proba_6" > 0.0) THEN ln("DT_Output_18"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_18"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_18"."Proba_7" IS NULL OR "DT_Output_18"."Proba_7" > 0.0) THEN ln("DT_Output_18"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_18"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_18"."Proba_8" IS NULL OR "DT_Output_18"."Proba_8" > 0.0) THEN ln("DT_Output_18"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_18"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_18"."Proba_9" IS NULL OR "DT_Output_18"."Proba_9" > 0.0) THEN ln("DT_Output_18"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10)) / 32.0 AS "Score_8", 9.0 * (CASE WHEN ("DT_Output_18"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_18"."Proba_8" IS NULL OR "DT_Output_18"."Proba_8" > 0.0) THEN ln("DT_Output_18"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_18"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_18"."Proba_0" IS NULL OR "DT_Output_18"."Proba_0" > 0.0) THEN ln("DT_Output_18"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_18"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_18"."Proba_1" IS NULL OR "DT_Output_18"."Proba_1" > 0.0) THEN ln("DT_Output_18"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_18"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_18"."Proba_2" IS NULL OR "DT_Output_18"."Proba_2" > 0.0) THEN ln("DT_Output_18"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_18"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_18"."Proba_3" IS NULL OR "DT_Output_18"."Proba_3" > 0.0) THEN ln("DT_Output_18"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_18"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_18"."Proba_4" IS NULL OR "DT_Output_18"."Proba_4" > 0.0) THEN ln("DT_Output_18"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_18"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_18"."Proba_5" IS NULL OR "DT_Output_18"."Proba_5" > 0.0) THEN ln("DT_Output_18"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_18"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_18"."Proba_6" IS NULL OR "DT_Output_18"."Proba_6" > 0.0) THEN ln("DT_Output_18"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_18"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_18"."Proba_7" IS NULL OR "DT_Output_18"."Proba_7" > 0.0) THEN ln("DT_Output_18"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_18"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_18"."Proba_8" IS NULL OR "DT_Output_18"."Proba_8" > 0.0) THEN ln("DT_Output_18"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_18"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_18"."Proba_9" IS NULL OR "DT_Output_18"."Proba_9" > 0.0) THEN ln("DT_Output_18"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10) AS "Proba_8", (9.0 * (CASE WHEN ("DT_Output_18"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_18"."Proba_9" IS NULL OR "DT_Output_18"."Proba_9" > 0.0) THEN ln("DT_Output_18"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_18"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_18"."Proba_0" IS NULL OR "DT_Output_18"."Proba_0" > 0.0) THEN ln("DT_Output_18"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_18"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_18"."Proba_1" IS NULL OR "DT_Output_18"."Proba_1" > 0.0) THEN ln("DT_Output_18"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_18"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_18"."Proba_2" IS NULL OR "DT_Output_18"."Proba_2" > 0.0) THEN ln("DT_Output_18"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_18"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_18"."Proba_3" IS NULL OR "DT_Output_18"."Proba_3" > 0.0) THEN ln("DT_Output_18"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_18"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_18"."Proba_4" IS NULL OR "DT_Output_18"."Proba_4" > 0.0) THEN ln("DT_Output_18"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_18"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_18"."Proba_5" IS NULL OR "DT_Output_18"."Proba_5" > 0.0) THEN ln("DT_Output_18"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_18"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_18"."Proba_6" IS NULL OR "DT_Output_18"."Proba_6" > 0.0) THEN ln("DT_Output_18"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_18"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_18"."Proba_7" IS NULL OR "DT_Output_18"."Proba_7" > 0.0) THEN ln("DT_Output_18"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_18"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_18"."Proba_8" IS NULL OR "DT_Output_18"."Proba_8" > 0.0) THEN ln("DT_Output_18"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_18"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_18"."Proba_9" IS NULL OR "DT_Output_18"."Proba_9" > 0.0) THEN ln("DT_Output_18"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10)) / 32.0 AS "Score_9", 9.0 * (CASE WHEN ("DT_Output_18"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_18"."Proba_9" IS NULL OR "DT_Output_18"."Proba_9" > 0.0) THEN ln("DT_Output_18"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_18"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_18"."Proba_0" IS NULL OR "DT_Output_18"."Proba_0" > 0.0) THEN ln("DT_Output_18"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_18"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_18"."Proba_1" IS NULL OR "DT_Output_18"."Proba_1" > 0.0) THEN ln("DT_Output_18"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_18"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_18"."Proba_2" IS NULL OR "DT_Output_18"."Proba_2" > 0.0) THEN ln("DT_Output_18"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_18"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_18"."Proba_3" IS NULL OR "DT_Output_18"."Proba_3" > 0.0) THEN ln("DT_Output_18"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_18"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_18"."Proba_4" IS NULL OR "DT_Output_18"."Proba_4" > 0.0) THEN ln("DT_Output_18"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_18"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_18"."Proba_5" IS NULL OR "DT_Output_18"."Proba_5" > 0.0) THEN ln("DT_Output_18"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_18"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_18"."Proba_6" IS NULL OR "DT_Output_18"."Proba_6" > 0.0) THEN ln("DT_Output_18"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_18"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_18"."Proba_7" IS NULL OR "DT_Output_18"."Proba_7" > 0.0) THEN ln("DT_Output_18"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_18"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_18"."Proba_8" IS NULL OR "DT_Output_18"."Proba_8" > 0.0) THEN ln("DT_Output_18"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_18"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_18"."Proba_9" IS NULL OR "DT_Output_18"."Proba_9" > 0.0) THEN ln("DT_Output_18"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10) AS "Proba_9" 
FROM "DT_Output_18"), 
"DT_node_lookup_19" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_38 <= -1.6508052349090576) THEN 1 ELSE 2 END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_19" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Proba_0" AS "Proba_0", "Values"."LogProba_0" AS "LogProba_0", "Values"."Proba_1" AS "Proba_1", "Values"."LogProba_1" AS "LogProba_1", "Values"."Proba_2" AS "Proba_2", "Values"."LogProba_2" AS "LogProba_2", "Values"."Proba_3" AS "Proba_3", "Values"."LogProba_3" AS "LogProba_3", "Values"."Proba_4" AS "Proba_4", "Values"."LogProba_4" AS "LogProba_4", "Values"."Proba_5" AS "Proba_5", "Values"."LogProba_5" AS "LogProba_5", "Values"."Proba_6" AS "Proba_6", "Values"."LogProba_6" AS "LogProba_6", "Values"."Proba_7" AS "Proba_7", "Values"."LogProba_7" AS "LogProba_7", "Values"."Proba_8" AS "Proba_8", "Values"."LogProba_8" AS "LogProba_8", "Values"."Proba_9" AS "Proba_9", "Values"."LogProba_9" AS "LogProba_9", "Values"."Decision" AS "Decision", "Values"."DecisionProba" AS "DecisionProba" 
FROM (SELECT 1 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 219 AS count, 1 AS depth, 0 AS parent_id, 0.9999999926676775 AS "Proba_0", -7.3323225538e-09 AS "LogProba_0", 0.0 AS "Proba_1", -BINARY_FLOAT_INFINITY AS "LogProba_1", 1.0497291312650477e-09 AS "Proba_2", -20.6747336763 AS "LogProba_2", 1.0469257170532507e-09 AS "Proba_3", -20.6774078559 AS "LogProba_3", 1.0482998761370428e-09 AS "Proba_4", -20.6760961506 AS "LogProba_4", 1.0469296446347458e-09 AS "Proba_5", -20.6774041044 AS "LogProba_5", 1.0469281473320113e-09 AS "Proba_6", -20.6774055346 AS "LogProba_6", 0.0 AS "Proba_7", -BINARY_FLOAT_INFINITY AS "LogProba_7", 1.0465842443082083e-09 AS "Proba_8", -20.6777340763 AS "LogProba_8", 1.0469257170532501e-09 AS "Proba_9", -20.6774078559 AS "LogProba_9", 0 AS "Decision", 0.999999992668 AS "DecisionProba" FROM DUAL UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1218 AS count, 1 AS depth, 0 AS parent_id, 3.883746900960257e-05 AS "Proba_0", -10.1561250812 AS "LogProba_0", 0.11111111120160191 AS "Proba_1", -2.19722457652 AS "LogProba_1", 0.11111111108500678 AS "Proba_2", -2.19722457757 AS "LogProba_2", 0.11111111108531718 AS "Proba_3", -2.19722457757 AS "LogProba_3", 0.11111111108516482 AS "Proba_4", -2.19722457757 AS "LogProba_4", 0.11111111108531714 AS "Proba_5", -2.19722457757 AS "LogProba_5", 0.11111111108531728 AS "Proba_6", -2.19722457757 AS "LogProba_6", 0.11111111120160189 AS "Proba_7", -2.19722457652 AS "LogProba_7", 0.11107227361634589 AS "Proba_8", -2.19757417589 AS "LogProba_8", 0.1111111110853175 AS "Proba_9", -2.19722457757 AS "LogProba_9", 1 AS "Decision", 0.111111111202 AS "DecisionProba" FROM DUAL) "Values"), 
"DT_Output_19" AS 
(SELECT "DT_node_lookup_19"."KEY" AS "KEY", "DT_node_lookup_19".node_id_2 AS node_id_2, "DT_node_data_19".node_id AS node_id, "DT_node_data_19".feature AS feature, "DT_node_data_19".threshold AS threshold, "DT_node_data_19".count AS count, "DT_node_data_19".depth AS depth, "DT_node_data_19".parent_id AS parent_id, "DT_node_data_19"."Proba_0" AS "Proba_0", "DT_node_data_19"."LogProba_0" AS "LogProba_0", "DT_node_data_19"."Proba_1" AS "Proba_1", "DT_node_data_19"."LogProba_1" AS "LogProba_1", "DT_node_data_19"."Proba_2" AS "Proba_2", "DT_node_data_19"."LogProba_2" AS "LogProba_2", "DT_node_data_19"."Proba_3" AS "Proba_3", "DT_node_data_19"."LogProba_3" AS "LogProba_3", "DT_node_data_19"."Proba_4" AS "Proba_4", "DT_node_data_19"."LogProba_4" AS "LogProba_4", "DT_node_data_19"."Proba_5" AS "Proba_5", "DT_node_data_19"."LogProba_5" AS "LogProba_5", "DT_node_data_19"."Proba_6" AS "Proba_6", "DT_node_data_19"."LogProba_6" AS "LogProba_6", "DT_node_data_19"."Proba_7" AS "Proba_7", "DT_node_data_19"."LogProba_7" AS "LogProba_7", "DT_node_data_19"."Proba_8" AS "Proba_8", "DT_node_data_19"."LogProba_8" AS "LogProba_8", "DT_node_data_19"."Proba_9" AS "Proba_9", "DT_node_data_19"."LogProba_9" AS "LogProba_9", "DT_node_data_19"."Decision" AS "Decision", "DT_node_data_19"."DecisionProba" AS "DecisionProba" 
FROM "DT_node_lookup_19" LEFT OUTER JOIN "DT_node_data_19" ON "DT_node_lookup_19".node_id_2 = "DT_node_data_19".node_id), 
"AdaBoost_Estim_19" AS 
(SELECT "DT_Output_19"."KEY" AS "KEY", (9.0 * (CASE WHEN ("DT_Output_19"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_19"."Proba_0" IS NULL OR "DT_Output_19"."Proba_0" > 0.0) THEN ln("DT_Output_19"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_19"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_19"."Proba_0" IS NULL OR "DT_Output_19"."Proba_0" > 0.0) THEN ln("DT_Output_19"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_19"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_19"."Proba_1" IS NULL OR "DT_Output_19"."Proba_1" > 0.0) THEN ln("DT_Output_19"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_19"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_19"."Proba_2" IS NULL OR "DT_Output_19"."Proba_2" > 0.0) THEN ln("DT_Output_19"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_19"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_19"."Proba_3" IS NULL OR "DT_Output_19"."Proba_3" > 0.0) THEN ln("DT_Output_19"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_19"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_19"."Proba_4" IS NULL OR "DT_Output_19"."Proba_4" > 0.0) THEN ln("DT_Output_19"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_19"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_19"."Proba_5" IS NULL OR "DT_Output_19"."Proba_5" > 0.0) THEN ln("DT_Output_19"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_19"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_19"."Proba_6" IS NULL OR "DT_Output_19"."Proba_6" > 0.0) THEN ln("DT_Output_19"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_19"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_19"."Proba_7" IS NULL OR "DT_Output_19"."Proba_7" > 0.0) THEN ln("DT_Output_19"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_19"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_19"."Proba_8" IS NULL OR "DT_Output_19"."Proba_8" > 0.0) THEN ln("DT_Output_19"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_19"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_19"."Proba_9" IS NULL OR "DT_Output_19"."Proba_9" > 0.0) THEN ln("DT_Output_19"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10)) / 32.0 AS "Score_0", 9.0 * (CASE WHEN ("DT_Output_19"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_19"."Proba_0" IS NULL OR "DT_Output_19"."Proba_0" > 0.0) THEN ln("DT_Output_19"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_19"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_19"."Proba_0" IS NULL OR "DT_Output_19"."Proba_0" > 0.0) THEN ln("DT_Output_19"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_19"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_19"."Proba_1" IS NULL OR "DT_Output_19"."Proba_1" > 0.0) THEN ln("DT_Output_19"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_19"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_19"."Proba_2" IS NULL OR "DT_Output_19"."Proba_2" > 0.0) THEN ln("DT_Output_19"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_19"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_19"."Proba_3" IS NULL OR "DT_Output_19"."Proba_3" > 0.0) THEN ln("DT_Output_19"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_19"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_19"."Proba_4" IS NULL OR "DT_Output_19"."Proba_4" > 0.0) THEN ln("DT_Output_19"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_19"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_19"."Proba_5" IS NULL OR "DT_Output_19"."Proba_5" > 0.0) THEN ln("DT_Output_19"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_19"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_19"."Proba_6" IS NULL OR "DT_Output_19"."Proba_6" > 0.0) THEN ln("DT_Output_19"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_19"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_19"."Proba_7" IS NULL OR "DT_Output_19"."Proba_7" > 0.0) THEN ln("DT_Output_19"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_19"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_19"."Proba_8" IS NULL OR "DT_Output_19"."Proba_8" > 0.0) THEN ln("DT_Output_19"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_19"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_19"."Proba_9" IS NULL OR "DT_Output_19"."Proba_9" > 0.0) THEN ln("DT_Output_19"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10) AS "Proba_0", (9.0 * (CASE WHEN ("DT_Output_19"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_19"."Proba_1" IS NULL OR "DT_Output_19"."Proba_1" > 0.0) THEN ln("DT_Output_19"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_19"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_19"."Proba_0" IS NULL OR "DT_Output_19"."Proba_0" > 0.0) THEN ln("DT_Output_19"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_19"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_19"."Proba_1" IS NULL OR "DT_Output_19"."Proba_1" > 0.0) THEN ln("DT_Output_19"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_19"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_19"."Proba_2" IS NULL OR "DT_Output_19"."Proba_2" > 0.0) THEN ln("DT_Output_19"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_19"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_19"."Proba_3" IS NULL OR "DT_Output_19"."Proba_3" > 0.0) THEN ln("DT_Output_19"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_19"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_19"."Proba_4" IS NULL OR "DT_Output_19"."Proba_4" > 0.0) THEN ln("DT_Output_19"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_19"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_19"."Proba_5" IS NULL OR "DT_Output_19"."Proba_5" > 0.0) THEN ln("DT_Output_19"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_19"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_19"."Proba_6" IS NULL OR "DT_Output_19"."Proba_6" > 0.0) THEN ln("DT_Output_19"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_19"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_19"."Proba_7" IS NULL OR "DT_Output_19"."Proba_7" > 0.0) THEN ln("DT_Output_19"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_19"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_19"."Proba_8" IS NULL OR "DT_Output_19"."Proba_8" > 0.0) THEN ln("DT_Output_19"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_19"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_19"."Proba_9" IS NULL OR "DT_Output_19"."Proba_9" > 0.0) THEN ln("DT_Output_19"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10)) / 32.0 AS "Score_1", 9.0 * (CASE WHEN ("DT_Output_19"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_19"."Proba_1" IS NULL OR "DT_Output_19"."Proba_1" > 0.0) THEN ln("DT_Output_19"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_19"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_19"."Proba_0" IS NULL OR "DT_Output_19"."Proba_0" > 0.0) THEN ln("DT_Output_19"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_19"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_19"."Proba_1" IS NULL OR "DT_Output_19"."Proba_1" > 0.0) THEN ln("DT_Output_19"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_19"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_19"."Proba_2" IS NULL OR "DT_Output_19"."Proba_2" > 0.0) THEN ln("DT_Output_19"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_19"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_19"."Proba_3" IS NULL OR "DT_Output_19"."Proba_3" > 0.0) THEN ln("DT_Output_19"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_19"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_19"."Proba_4" IS NULL OR "DT_Output_19"."Proba_4" > 0.0) THEN ln("DT_Output_19"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_19"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_19"."Proba_5" IS NULL OR "DT_Output_19"."Proba_5" > 0.0) THEN ln("DT_Output_19"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_19"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_19"."Proba_6" IS NULL OR "DT_Output_19"."Proba_6" > 0.0) THEN ln("DT_Output_19"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_19"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_19"."Proba_7" IS NULL OR "DT_Output_19"."Proba_7" > 0.0) THEN ln("DT_Output_19"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_19"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_19"."Proba_8" IS NULL OR "DT_Output_19"."Proba_8" > 0.0) THEN ln("DT_Output_19"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_19"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_19"."Proba_9" IS NULL OR "DT_Output_19"."Proba_9" > 0.0) THEN ln("DT_Output_19"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10) AS "Proba_1", (9.0 * (CASE WHEN ("DT_Output_19"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_19"."Proba_2" IS NULL OR "DT_Output_19"."Proba_2" > 0.0) THEN ln("DT_Output_19"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_19"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_19"."Proba_0" IS NULL OR "DT_Output_19"."Proba_0" > 0.0) THEN ln("DT_Output_19"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_19"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_19"."Proba_1" IS NULL OR "DT_Output_19"."Proba_1" > 0.0) THEN ln("DT_Output_19"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_19"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_19"."Proba_2" IS NULL OR "DT_Output_19"."Proba_2" > 0.0) THEN ln("DT_Output_19"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_19"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_19"."Proba_3" IS NULL OR "DT_Output_19"."Proba_3" > 0.0) THEN ln("DT_Output_19"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_19"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_19"."Proba_4" IS NULL OR "DT_Output_19"."Proba_4" > 0.0) THEN ln("DT_Output_19"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_19"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_19"."Proba_5" IS NULL OR "DT_Output_19"."Proba_5" > 0.0) THEN ln("DT_Output_19"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_19"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_19"."Proba_6" IS NULL OR "DT_Output_19"."Proba_6" > 0.0) THEN ln("DT_Output_19"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_19"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_19"."Proba_7" IS NULL OR "DT_Output_19"."Proba_7" > 0.0) THEN ln("DT_Output_19"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_19"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_19"."Proba_8" IS NULL OR "DT_Output_19"."Proba_8" > 0.0) THEN ln("DT_Output_19"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_19"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_19"."Proba_9" IS NULL OR "DT_Output_19"."Proba_9" > 0.0) THEN ln("DT_Output_19"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10)) / 32.0 AS "Score_2", 9.0 * (CASE WHEN ("DT_Output_19"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_19"."Proba_2" IS NULL OR "DT_Output_19"."Proba_2" > 0.0) THEN ln("DT_Output_19"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_19"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_19"."Proba_0" IS NULL OR "DT_Output_19"."Proba_0" > 0.0) THEN ln("DT_Output_19"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_19"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_19"."Proba_1" IS NULL OR "DT_Output_19"."Proba_1" > 0.0) THEN ln("DT_Output_19"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_19"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_19"."Proba_2" IS NULL OR "DT_Output_19"."Proba_2" > 0.0) THEN ln("DT_Output_19"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_19"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_19"."Proba_3" IS NULL OR "DT_Output_19"."Proba_3" > 0.0) THEN ln("DT_Output_19"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_19"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_19"."Proba_4" IS NULL OR "DT_Output_19"."Proba_4" > 0.0) THEN ln("DT_Output_19"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_19"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_19"."Proba_5" IS NULL OR "DT_Output_19"."Proba_5" > 0.0) THEN ln("DT_Output_19"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_19"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_19"."Proba_6" IS NULL OR "DT_Output_19"."Proba_6" > 0.0) THEN ln("DT_Output_19"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_19"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_19"."Proba_7" IS NULL OR "DT_Output_19"."Proba_7" > 0.0) THEN ln("DT_Output_19"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_19"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_19"."Proba_8" IS NULL OR "DT_Output_19"."Proba_8" > 0.0) THEN ln("DT_Output_19"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_19"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_19"."Proba_9" IS NULL OR "DT_Output_19"."Proba_9" > 0.0) THEN ln("DT_Output_19"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10) AS "Proba_2", (9.0 * (CASE WHEN ("DT_Output_19"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_19"."Proba_3" IS NULL OR "DT_Output_19"."Proba_3" > 0.0) THEN ln("DT_Output_19"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_19"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_19"."Proba_0" IS NULL OR "DT_Output_19"."Proba_0" > 0.0) THEN ln("DT_Output_19"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_19"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_19"."Proba_1" IS NULL OR "DT_Output_19"."Proba_1" > 0.0) THEN ln("DT_Output_19"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_19"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_19"."Proba_2" IS NULL OR "DT_Output_19"."Proba_2" > 0.0) THEN ln("DT_Output_19"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_19"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_19"."Proba_3" IS NULL OR "DT_Output_19"."Proba_3" > 0.0) THEN ln("DT_Output_19"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_19"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_19"."Proba_4" IS NULL OR "DT_Output_19"."Proba_4" > 0.0) THEN ln("DT_Output_19"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_19"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_19"."Proba_5" IS NULL OR "DT_Output_19"."Proba_5" > 0.0) THEN ln("DT_Output_19"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_19"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_19"."Proba_6" IS NULL OR "DT_Output_19"."Proba_6" > 0.0) THEN ln("DT_Output_19"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_19"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_19"."Proba_7" IS NULL OR "DT_Output_19"."Proba_7" > 0.0) THEN ln("DT_Output_19"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_19"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_19"."Proba_8" IS NULL OR "DT_Output_19"."Proba_8" > 0.0) THEN ln("DT_Output_19"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_19"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_19"."Proba_9" IS NULL OR "DT_Output_19"."Proba_9" > 0.0) THEN ln("DT_Output_19"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10)) / 32.0 AS "Score_3", 9.0 * (CASE WHEN ("DT_Output_19"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_19"."Proba_3" IS NULL OR "DT_Output_19"."Proba_3" > 0.0) THEN ln("DT_Output_19"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_19"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_19"."Proba_0" IS NULL OR "DT_Output_19"."Proba_0" > 0.0) THEN ln("DT_Output_19"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_19"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_19"."Proba_1" IS NULL OR "DT_Output_19"."Proba_1" > 0.0) THEN ln("DT_Output_19"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_19"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_19"."Proba_2" IS NULL OR "DT_Output_19"."Proba_2" > 0.0) THEN ln("DT_Output_19"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_19"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_19"."Proba_3" IS NULL OR "DT_Output_19"."Proba_3" > 0.0) THEN ln("DT_Output_19"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_19"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_19"."Proba_4" IS NULL OR "DT_Output_19"."Proba_4" > 0.0) THEN ln("DT_Output_19"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_19"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_19"."Proba_5" IS NULL OR "DT_Output_19"."Proba_5" > 0.0) THEN ln("DT_Output_19"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_19"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_19"."Proba_6" IS NULL OR "DT_Output_19"."Proba_6" > 0.0) THEN ln("DT_Output_19"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_19"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_19"."Proba_7" IS NULL OR "DT_Output_19"."Proba_7" > 0.0) THEN ln("DT_Output_19"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_19"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_19"."Proba_8" IS NULL OR "DT_Output_19"."Proba_8" > 0.0) THEN ln("DT_Output_19"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_19"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_19"."Proba_9" IS NULL OR "DT_Output_19"."Proba_9" > 0.0) THEN ln("DT_Output_19"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10) AS "Proba_3", (9.0 * (CASE WHEN ("DT_Output_19"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_19"."Proba_4" IS NULL OR "DT_Output_19"."Proba_4" > 0.0) THEN ln("DT_Output_19"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_19"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_19"."Proba_0" IS NULL OR "DT_Output_19"."Proba_0" > 0.0) THEN ln("DT_Output_19"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_19"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_19"."Proba_1" IS NULL OR "DT_Output_19"."Proba_1" > 0.0) THEN ln("DT_Output_19"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_19"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_19"."Proba_2" IS NULL OR "DT_Output_19"."Proba_2" > 0.0) THEN ln("DT_Output_19"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_19"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_19"."Proba_3" IS NULL OR "DT_Output_19"."Proba_3" > 0.0) THEN ln("DT_Output_19"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_19"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_19"."Proba_4" IS NULL OR "DT_Output_19"."Proba_4" > 0.0) THEN ln("DT_Output_19"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_19"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_19"."Proba_5" IS NULL OR "DT_Output_19"."Proba_5" > 0.0) THEN ln("DT_Output_19"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_19"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_19"."Proba_6" IS NULL OR "DT_Output_19"."Proba_6" > 0.0) THEN ln("DT_Output_19"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_19"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_19"."Proba_7" IS NULL OR "DT_Output_19"."Proba_7" > 0.0) THEN ln("DT_Output_19"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_19"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_19"."Proba_8" IS NULL OR "DT_Output_19"."Proba_8" > 0.0) THEN ln("DT_Output_19"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_19"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_19"."Proba_9" IS NULL OR "DT_Output_19"."Proba_9" > 0.0) THEN ln("DT_Output_19"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10)) / 32.0 AS "Score_4", 9.0 * (CASE WHEN ("DT_Output_19"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_19"."Proba_4" IS NULL OR "DT_Output_19"."Proba_4" > 0.0) THEN ln("DT_Output_19"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_19"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_19"."Proba_0" IS NULL OR "DT_Output_19"."Proba_0" > 0.0) THEN ln("DT_Output_19"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_19"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_19"."Proba_1" IS NULL OR "DT_Output_19"."Proba_1" > 0.0) THEN ln("DT_Output_19"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_19"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_19"."Proba_2" IS NULL OR "DT_Output_19"."Proba_2" > 0.0) THEN ln("DT_Output_19"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_19"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_19"."Proba_3" IS NULL OR "DT_Output_19"."Proba_3" > 0.0) THEN ln("DT_Output_19"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_19"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_19"."Proba_4" IS NULL OR "DT_Output_19"."Proba_4" > 0.0) THEN ln("DT_Output_19"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_19"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_19"."Proba_5" IS NULL OR "DT_Output_19"."Proba_5" > 0.0) THEN ln("DT_Output_19"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_19"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_19"."Proba_6" IS NULL OR "DT_Output_19"."Proba_6" > 0.0) THEN ln("DT_Output_19"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_19"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_19"."Proba_7" IS NULL OR "DT_Output_19"."Proba_7" > 0.0) THEN ln("DT_Output_19"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_19"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_19"."Proba_8" IS NULL OR "DT_Output_19"."Proba_8" > 0.0) THEN ln("DT_Output_19"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_19"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_19"."Proba_9" IS NULL OR "DT_Output_19"."Proba_9" > 0.0) THEN ln("DT_Output_19"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10) AS "Proba_4", (9.0 * (CASE WHEN ("DT_Output_19"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_19"."Proba_5" IS NULL OR "DT_Output_19"."Proba_5" > 0.0) THEN ln("DT_Output_19"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_19"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_19"."Proba_0" IS NULL OR "DT_Output_19"."Proba_0" > 0.0) THEN ln("DT_Output_19"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_19"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_19"."Proba_1" IS NULL OR "DT_Output_19"."Proba_1" > 0.0) THEN ln("DT_Output_19"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_19"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_19"."Proba_2" IS NULL OR "DT_Output_19"."Proba_2" > 0.0) THEN ln("DT_Output_19"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_19"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_19"."Proba_3" IS NULL OR "DT_Output_19"."Proba_3" > 0.0) THEN ln("DT_Output_19"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_19"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_19"."Proba_4" IS NULL OR "DT_Output_19"."Proba_4" > 0.0) THEN ln("DT_Output_19"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_19"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_19"."Proba_5" IS NULL OR "DT_Output_19"."Proba_5" > 0.0) THEN ln("DT_Output_19"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_19"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_19"."Proba_6" IS NULL OR "DT_Output_19"."Proba_6" > 0.0) THEN ln("DT_Output_19"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_19"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_19"."Proba_7" IS NULL OR "DT_Output_19"."Proba_7" > 0.0) THEN ln("DT_Output_19"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_19"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_19"."Proba_8" IS NULL OR "DT_Output_19"."Proba_8" > 0.0) THEN ln("DT_Output_19"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_19"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_19"."Proba_9" IS NULL OR "DT_Output_19"."Proba_9" > 0.0) THEN ln("DT_Output_19"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10)) / 32.0 AS "Score_5", 9.0 * (CASE WHEN ("DT_Output_19"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_19"."Proba_5" IS NULL OR "DT_Output_19"."Proba_5" > 0.0) THEN ln("DT_Output_19"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_19"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_19"."Proba_0" IS NULL OR "DT_Output_19"."Proba_0" > 0.0) THEN ln("DT_Output_19"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_19"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_19"."Proba_1" IS NULL OR "DT_Output_19"."Proba_1" > 0.0) THEN ln("DT_Output_19"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_19"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_19"."Proba_2" IS NULL OR "DT_Output_19"."Proba_2" > 0.0) THEN ln("DT_Output_19"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_19"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_19"."Proba_3" IS NULL OR "DT_Output_19"."Proba_3" > 0.0) THEN ln("DT_Output_19"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_19"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_19"."Proba_4" IS NULL OR "DT_Output_19"."Proba_4" > 0.0) THEN ln("DT_Output_19"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_19"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_19"."Proba_5" IS NULL OR "DT_Output_19"."Proba_5" > 0.0) THEN ln("DT_Output_19"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_19"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_19"."Proba_6" IS NULL OR "DT_Output_19"."Proba_6" > 0.0) THEN ln("DT_Output_19"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_19"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_19"."Proba_7" IS NULL OR "DT_Output_19"."Proba_7" > 0.0) THEN ln("DT_Output_19"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_19"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_19"."Proba_8" IS NULL OR "DT_Output_19"."Proba_8" > 0.0) THEN ln("DT_Output_19"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_19"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_19"."Proba_9" IS NULL OR "DT_Output_19"."Proba_9" > 0.0) THEN ln("DT_Output_19"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10) AS "Proba_5", (9.0 * (CASE WHEN ("DT_Output_19"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_19"."Proba_6" IS NULL OR "DT_Output_19"."Proba_6" > 0.0) THEN ln("DT_Output_19"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_19"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_19"."Proba_0" IS NULL OR "DT_Output_19"."Proba_0" > 0.0) THEN ln("DT_Output_19"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_19"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_19"."Proba_1" IS NULL OR "DT_Output_19"."Proba_1" > 0.0) THEN ln("DT_Output_19"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_19"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_19"."Proba_2" IS NULL OR "DT_Output_19"."Proba_2" > 0.0) THEN ln("DT_Output_19"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_19"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_19"."Proba_3" IS NULL OR "DT_Output_19"."Proba_3" > 0.0) THEN ln("DT_Output_19"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_19"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_19"."Proba_4" IS NULL OR "DT_Output_19"."Proba_4" > 0.0) THEN ln("DT_Output_19"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_19"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_19"."Proba_5" IS NULL OR "DT_Output_19"."Proba_5" > 0.0) THEN ln("DT_Output_19"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_19"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_19"."Proba_6" IS NULL OR "DT_Output_19"."Proba_6" > 0.0) THEN ln("DT_Output_19"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_19"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_19"."Proba_7" IS NULL OR "DT_Output_19"."Proba_7" > 0.0) THEN ln("DT_Output_19"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_19"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_19"."Proba_8" IS NULL OR "DT_Output_19"."Proba_8" > 0.0) THEN ln("DT_Output_19"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_19"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_19"."Proba_9" IS NULL OR "DT_Output_19"."Proba_9" > 0.0) THEN ln("DT_Output_19"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10)) / 32.0 AS "Score_6", 9.0 * (CASE WHEN ("DT_Output_19"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_19"."Proba_6" IS NULL OR "DT_Output_19"."Proba_6" > 0.0) THEN ln("DT_Output_19"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_19"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_19"."Proba_0" IS NULL OR "DT_Output_19"."Proba_0" > 0.0) THEN ln("DT_Output_19"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_19"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_19"."Proba_1" IS NULL OR "DT_Output_19"."Proba_1" > 0.0) THEN ln("DT_Output_19"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_19"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_19"."Proba_2" IS NULL OR "DT_Output_19"."Proba_2" > 0.0) THEN ln("DT_Output_19"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_19"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_19"."Proba_3" IS NULL OR "DT_Output_19"."Proba_3" > 0.0) THEN ln("DT_Output_19"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_19"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_19"."Proba_4" IS NULL OR "DT_Output_19"."Proba_4" > 0.0) THEN ln("DT_Output_19"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_19"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_19"."Proba_5" IS NULL OR "DT_Output_19"."Proba_5" > 0.0) THEN ln("DT_Output_19"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_19"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_19"."Proba_6" IS NULL OR "DT_Output_19"."Proba_6" > 0.0) THEN ln("DT_Output_19"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_19"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_19"."Proba_7" IS NULL OR "DT_Output_19"."Proba_7" > 0.0) THEN ln("DT_Output_19"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_19"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_19"."Proba_8" IS NULL OR "DT_Output_19"."Proba_8" > 0.0) THEN ln("DT_Output_19"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_19"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_19"."Proba_9" IS NULL OR "DT_Output_19"."Proba_9" > 0.0) THEN ln("DT_Output_19"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10) AS "Proba_6", (9.0 * (CASE WHEN ("DT_Output_19"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_19"."Proba_7" IS NULL OR "DT_Output_19"."Proba_7" > 0.0) THEN ln("DT_Output_19"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_19"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_19"."Proba_0" IS NULL OR "DT_Output_19"."Proba_0" > 0.0) THEN ln("DT_Output_19"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_19"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_19"."Proba_1" IS NULL OR "DT_Output_19"."Proba_1" > 0.0) THEN ln("DT_Output_19"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_19"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_19"."Proba_2" IS NULL OR "DT_Output_19"."Proba_2" > 0.0) THEN ln("DT_Output_19"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_19"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_19"."Proba_3" IS NULL OR "DT_Output_19"."Proba_3" > 0.0) THEN ln("DT_Output_19"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_19"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_19"."Proba_4" IS NULL OR "DT_Output_19"."Proba_4" > 0.0) THEN ln("DT_Output_19"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_19"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_19"."Proba_5" IS NULL OR "DT_Output_19"."Proba_5" > 0.0) THEN ln("DT_Output_19"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_19"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_19"."Proba_6" IS NULL OR "DT_Output_19"."Proba_6" > 0.0) THEN ln("DT_Output_19"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_19"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_19"."Proba_7" IS NULL OR "DT_Output_19"."Proba_7" > 0.0) THEN ln("DT_Output_19"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_19"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_19"."Proba_8" IS NULL OR "DT_Output_19"."Proba_8" > 0.0) THEN ln("DT_Output_19"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_19"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_19"."Proba_9" IS NULL OR "DT_Output_19"."Proba_9" > 0.0) THEN ln("DT_Output_19"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10)) / 32.0 AS "Score_7", 9.0 * (CASE WHEN ("DT_Output_19"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_19"."Proba_7" IS NULL OR "DT_Output_19"."Proba_7" > 0.0) THEN ln("DT_Output_19"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_19"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_19"."Proba_0" IS NULL OR "DT_Output_19"."Proba_0" > 0.0) THEN ln("DT_Output_19"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_19"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_19"."Proba_1" IS NULL OR "DT_Output_19"."Proba_1" > 0.0) THEN ln("DT_Output_19"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_19"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_19"."Proba_2" IS NULL OR "DT_Output_19"."Proba_2" > 0.0) THEN ln("DT_Output_19"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_19"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_19"."Proba_3" IS NULL OR "DT_Output_19"."Proba_3" > 0.0) THEN ln("DT_Output_19"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_19"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_19"."Proba_4" IS NULL OR "DT_Output_19"."Proba_4" > 0.0) THEN ln("DT_Output_19"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_19"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_19"."Proba_5" IS NULL OR "DT_Output_19"."Proba_5" > 0.0) THEN ln("DT_Output_19"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_19"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_19"."Proba_6" IS NULL OR "DT_Output_19"."Proba_6" > 0.0) THEN ln("DT_Output_19"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_19"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_19"."Proba_7" IS NULL OR "DT_Output_19"."Proba_7" > 0.0) THEN ln("DT_Output_19"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_19"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_19"."Proba_8" IS NULL OR "DT_Output_19"."Proba_8" > 0.0) THEN ln("DT_Output_19"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_19"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_19"."Proba_9" IS NULL OR "DT_Output_19"."Proba_9" > 0.0) THEN ln("DT_Output_19"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10) AS "Proba_7", (9.0 * (CASE WHEN ("DT_Output_19"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_19"."Proba_8" IS NULL OR "DT_Output_19"."Proba_8" > 0.0) THEN ln("DT_Output_19"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_19"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_19"."Proba_0" IS NULL OR "DT_Output_19"."Proba_0" > 0.0) THEN ln("DT_Output_19"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_19"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_19"."Proba_1" IS NULL OR "DT_Output_19"."Proba_1" > 0.0) THEN ln("DT_Output_19"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_19"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_19"."Proba_2" IS NULL OR "DT_Output_19"."Proba_2" > 0.0) THEN ln("DT_Output_19"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_19"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_19"."Proba_3" IS NULL OR "DT_Output_19"."Proba_3" > 0.0) THEN ln("DT_Output_19"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_19"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_19"."Proba_4" IS NULL OR "DT_Output_19"."Proba_4" > 0.0) THEN ln("DT_Output_19"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_19"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_19"."Proba_5" IS NULL OR "DT_Output_19"."Proba_5" > 0.0) THEN ln("DT_Output_19"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_19"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_19"."Proba_6" IS NULL OR "DT_Output_19"."Proba_6" > 0.0) THEN ln("DT_Output_19"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_19"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_19"."Proba_7" IS NULL OR "DT_Output_19"."Proba_7" > 0.0) THEN ln("DT_Output_19"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_19"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_19"."Proba_8" IS NULL OR "DT_Output_19"."Proba_8" > 0.0) THEN ln("DT_Output_19"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_19"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_19"."Proba_9" IS NULL OR "DT_Output_19"."Proba_9" > 0.0) THEN ln("DT_Output_19"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10)) / 32.0 AS "Score_8", 9.0 * (CASE WHEN ("DT_Output_19"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_19"."Proba_8" IS NULL OR "DT_Output_19"."Proba_8" > 0.0) THEN ln("DT_Output_19"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_19"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_19"."Proba_0" IS NULL OR "DT_Output_19"."Proba_0" > 0.0) THEN ln("DT_Output_19"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_19"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_19"."Proba_1" IS NULL OR "DT_Output_19"."Proba_1" > 0.0) THEN ln("DT_Output_19"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_19"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_19"."Proba_2" IS NULL OR "DT_Output_19"."Proba_2" > 0.0) THEN ln("DT_Output_19"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_19"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_19"."Proba_3" IS NULL OR "DT_Output_19"."Proba_3" > 0.0) THEN ln("DT_Output_19"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_19"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_19"."Proba_4" IS NULL OR "DT_Output_19"."Proba_4" > 0.0) THEN ln("DT_Output_19"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_19"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_19"."Proba_5" IS NULL OR "DT_Output_19"."Proba_5" > 0.0) THEN ln("DT_Output_19"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_19"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_19"."Proba_6" IS NULL OR "DT_Output_19"."Proba_6" > 0.0) THEN ln("DT_Output_19"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_19"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_19"."Proba_7" IS NULL OR "DT_Output_19"."Proba_7" > 0.0) THEN ln("DT_Output_19"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_19"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_19"."Proba_8" IS NULL OR "DT_Output_19"."Proba_8" > 0.0) THEN ln("DT_Output_19"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_19"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_19"."Proba_9" IS NULL OR "DT_Output_19"."Proba_9" > 0.0) THEN ln("DT_Output_19"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10) AS "Proba_8", (9.0 * (CASE WHEN ("DT_Output_19"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_19"."Proba_9" IS NULL OR "DT_Output_19"."Proba_9" > 0.0) THEN ln("DT_Output_19"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_19"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_19"."Proba_0" IS NULL OR "DT_Output_19"."Proba_0" > 0.0) THEN ln("DT_Output_19"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_19"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_19"."Proba_1" IS NULL OR "DT_Output_19"."Proba_1" > 0.0) THEN ln("DT_Output_19"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_19"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_19"."Proba_2" IS NULL OR "DT_Output_19"."Proba_2" > 0.0) THEN ln("DT_Output_19"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_19"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_19"."Proba_3" IS NULL OR "DT_Output_19"."Proba_3" > 0.0) THEN ln("DT_Output_19"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_19"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_19"."Proba_4" IS NULL OR "DT_Output_19"."Proba_4" > 0.0) THEN ln("DT_Output_19"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_19"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_19"."Proba_5" IS NULL OR "DT_Output_19"."Proba_5" > 0.0) THEN ln("DT_Output_19"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_19"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_19"."Proba_6" IS NULL OR "DT_Output_19"."Proba_6" > 0.0) THEN ln("DT_Output_19"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_19"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_19"."Proba_7" IS NULL OR "DT_Output_19"."Proba_7" > 0.0) THEN ln("DT_Output_19"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_19"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_19"."Proba_8" IS NULL OR "DT_Output_19"."Proba_8" > 0.0) THEN ln("DT_Output_19"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_19"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_19"."Proba_9" IS NULL OR "DT_Output_19"."Proba_9" > 0.0) THEN ln("DT_Output_19"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10)) / 32.0 AS "Score_9", 9.0 * (CASE WHEN ("DT_Output_19"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_19"."Proba_9" IS NULL OR "DT_Output_19"."Proba_9" > 0.0) THEN ln("DT_Output_19"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_19"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_19"."Proba_0" IS NULL OR "DT_Output_19"."Proba_0" > 0.0) THEN ln("DT_Output_19"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_19"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_19"."Proba_1" IS NULL OR "DT_Output_19"."Proba_1" > 0.0) THEN ln("DT_Output_19"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_19"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_19"."Proba_2" IS NULL OR "DT_Output_19"."Proba_2" > 0.0) THEN ln("DT_Output_19"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_19"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_19"."Proba_3" IS NULL OR "DT_Output_19"."Proba_3" > 0.0) THEN ln("DT_Output_19"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_19"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_19"."Proba_4" IS NULL OR "DT_Output_19"."Proba_4" > 0.0) THEN ln("DT_Output_19"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_19"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_19"."Proba_5" IS NULL OR "DT_Output_19"."Proba_5" > 0.0) THEN ln("DT_Output_19"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_19"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_19"."Proba_6" IS NULL OR "DT_Output_19"."Proba_6" > 0.0) THEN ln("DT_Output_19"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_19"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_19"."Proba_7" IS NULL OR "DT_Output_19"."Proba_7" > 0.0) THEN ln("DT_Output_19"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_19"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_19"."Proba_8" IS NULL OR "DT_Output_19"."Proba_8" > 0.0) THEN ln("DT_Output_19"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_19"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_19"."Proba_9" IS NULL OR "DT_Output_19"."Proba_9" > 0.0) THEN ln("DT_Output_19"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10) AS "Proba_9" 
FROM "DT_Output_19"), 
"DT_node_lookup_20" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_30 <= -1.555469036102295) THEN 1 ELSE 2 END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_20" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Proba_0" AS "Proba_0", "Values"."LogProba_0" AS "LogProba_0", "Values"."Proba_1" AS "Proba_1", "Values"."LogProba_1" AS "LogProba_1", "Values"."Proba_2" AS "Proba_2", "Values"."LogProba_2" AS "LogProba_2", "Values"."Proba_3" AS "Proba_3", "Values"."LogProba_3" AS "LogProba_3", "Values"."Proba_4" AS "Proba_4", "Values"."LogProba_4" AS "LogProba_4", "Values"."Proba_5" AS "Proba_5", "Values"."LogProba_5" AS "LogProba_5", "Values"."Proba_6" AS "Proba_6", "Values"."LogProba_6" AS "LogProba_6", "Values"."Proba_7" AS "Proba_7", "Values"."LogProba_7" AS "LogProba_7", "Values"."Proba_8" AS "Proba_8", "Values"."LogProba_8" AS "LogProba_8", "Values"."Proba_9" AS "Proba_9", "Values"."LogProba_9" AS "LogProba_9", "Values"."Decision" AS "Decision", "Values"."DecisionProba" AS "DecisionProba" 
FROM (SELECT 1 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 246 AS count, 1 AS depth, 0 AS parent_id, 0.9972114997203841 AS "Proba_0", -0.00279239538922 AS "LogProba_0", 0.0003485625361638122 AS "Proba_1", -7.96169290006 AS "LogProba_1", 0.00034856252855098034 AS "Proba_2", -7.9616929219 AS "LogProba_2", 0.00034856253652860476 AS "Proba_3", -7.96169289902 AS "LogProba_3", 0.0003485625326407773 AS "Proba_4", -7.96169291017 AS "LogProba_4", 0.0003485625365175537 AS "Proba_5", -7.96169289905 AS "LogProba_5", 0.00034856253652176627 AS "Proba_6", -7.96169289904 AS "LogProba_6", 0.0003485625361638122 AS "Proba_7", -7.96169290006 AS "LogProba_7", 0.0 AS "Proba_8", -BINARY_FLOAT_INFINITY AS "LogProba_8", 0.00034856253652860357 AS "Proba_9", -7.96169289902 AS "LogProba_9", 0 AS "Decision", 0.99721149972 AS "DecisionProba" FROM DUAL UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1191 AS count, 1 AS depth, 0 AS parent_id, 9.436149537266414e-11 AS "Proba_0", -23.083888014 AS "LogProba_0", 0.11110679441161535 AS "Proba_1", -2.19726342839 AS "LogProba_1", 0.11110679450682474 AS "Proba_2", -2.19726342753 AS "LogProba_2", 0.11110679450593632 AS "Proba_3", -2.19726342754 AS "LogProba_3", 0.11110679450636941 AS "Proba_4", -2.19726342753 AS "LogProba_4", 0.11110679450593708 AS "Proba_5", -2.19726342754 AS "LogProba_5", 0.11110679450593659 AS "Proba_6", -2.19726342754 AS "LogProba_6", 0.11110679441161529 AS "Proba_7", -2.19726342839 AS "LogProba_7", 0.11114564404546762 AS "Proba_8", -2.19691382921 AS "LogProba_8", 0.1111067945059362 AS "Proba_9", -2.19726342754 AS "LogProba_9", 8 AS "Decision", 0.111145644045 AS "DecisionProba" FROM DUAL) "Values"), 
"DT_Output_20" AS 
(SELECT "DT_node_lookup_20"."KEY" AS "KEY", "DT_node_lookup_20".node_id_2 AS node_id_2, "DT_node_data_20".node_id AS node_id, "DT_node_data_20".feature AS feature, "DT_node_data_20".threshold AS threshold, "DT_node_data_20".count AS count, "DT_node_data_20".depth AS depth, "DT_node_data_20".parent_id AS parent_id, "DT_node_data_20"."Proba_0" AS "Proba_0", "DT_node_data_20"."LogProba_0" AS "LogProba_0", "DT_node_data_20"."Proba_1" AS "Proba_1", "DT_node_data_20"."LogProba_1" AS "LogProba_1", "DT_node_data_20"."Proba_2" AS "Proba_2", "DT_node_data_20"."LogProba_2" AS "LogProba_2", "DT_node_data_20"."Proba_3" AS "Proba_3", "DT_node_data_20"."LogProba_3" AS "LogProba_3", "DT_node_data_20"."Proba_4" AS "Proba_4", "DT_node_data_20"."LogProba_4" AS "LogProba_4", "DT_node_data_20"."Proba_5" AS "Proba_5", "DT_node_data_20"."LogProba_5" AS "LogProba_5", "DT_node_data_20"."Proba_6" AS "Proba_6", "DT_node_data_20"."LogProba_6" AS "LogProba_6", "DT_node_data_20"."Proba_7" AS "Proba_7", "DT_node_data_20"."LogProba_7" AS "LogProba_7", "DT_node_data_20"."Proba_8" AS "Proba_8", "DT_node_data_20"."LogProba_8" AS "LogProba_8", "DT_node_data_20"."Proba_9" AS "Proba_9", "DT_node_data_20"."LogProba_9" AS "LogProba_9", "DT_node_data_20"."Decision" AS "Decision", "DT_node_data_20"."DecisionProba" AS "DecisionProba" 
FROM "DT_node_lookup_20" LEFT OUTER JOIN "DT_node_data_20" ON "DT_node_lookup_20".node_id_2 = "DT_node_data_20".node_id), 
"AdaBoost_Estim_20" AS 
(SELECT "DT_Output_20"."KEY" AS "KEY", (9.0 * (CASE WHEN ("DT_Output_20"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_20"."Proba_0" IS NULL OR "DT_Output_20"."Proba_0" > 0.0) THEN ln("DT_Output_20"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_20"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_20"."Proba_0" IS NULL OR "DT_Output_20"."Proba_0" > 0.0) THEN ln("DT_Output_20"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_20"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_20"."Proba_1" IS NULL OR "DT_Output_20"."Proba_1" > 0.0) THEN ln("DT_Output_20"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_20"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_20"."Proba_2" IS NULL OR "DT_Output_20"."Proba_2" > 0.0) THEN ln("DT_Output_20"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_20"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_20"."Proba_3" IS NULL OR "DT_Output_20"."Proba_3" > 0.0) THEN ln("DT_Output_20"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_20"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_20"."Proba_4" IS NULL OR "DT_Output_20"."Proba_4" > 0.0) THEN ln("DT_Output_20"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_20"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_20"."Proba_5" IS NULL OR "DT_Output_20"."Proba_5" > 0.0) THEN ln("DT_Output_20"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_20"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_20"."Proba_6" IS NULL OR "DT_Output_20"."Proba_6" > 0.0) THEN ln("DT_Output_20"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_20"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_20"."Proba_7" IS NULL OR "DT_Output_20"."Proba_7" > 0.0) THEN ln("DT_Output_20"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_20"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_20"."Proba_8" IS NULL OR "DT_Output_20"."Proba_8" > 0.0) THEN ln("DT_Output_20"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_20"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_20"."Proba_9" IS NULL OR "DT_Output_20"."Proba_9" > 0.0) THEN ln("DT_Output_20"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10)) / 32.0 AS "Score_0", 9.0 * (CASE WHEN ("DT_Output_20"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_20"."Proba_0" IS NULL OR "DT_Output_20"."Proba_0" > 0.0) THEN ln("DT_Output_20"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_20"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_20"."Proba_0" IS NULL OR "DT_Output_20"."Proba_0" > 0.0) THEN ln("DT_Output_20"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_20"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_20"."Proba_1" IS NULL OR "DT_Output_20"."Proba_1" > 0.0) THEN ln("DT_Output_20"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_20"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_20"."Proba_2" IS NULL OR "DT_Output_20"."Proba_2" > 0.0) THEN ln("DT_Output_20"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_20"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_20"."Proba_3" IS NULL OR "DT_Output_20"."Proba_3" > 0.0) THEN ln("DT_Output_20"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_20"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_20"."Proba_4" IS NULL OR "DT_Output_20"."Proba_4" > 0.0) THEN ln("DT_Output_20"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_20"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_20"."Proba_5" IS NULL OR "DT_Output_20"."Proba_5" > 0.0) THEN ln("DT_Output_20"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_20"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_20"."Proba_6" IS NULL OR "DT_Output_20"."Proba_6" > 0.0) THEN ln("DT_Output_20"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_20"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_20"."Proba_7" IS NULL OR "DT_Output_20"."Proba_7" > 0.0) THEN ln("DT_Output_20"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_20"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_20"."Proba_8" IS NULL OR "DT_Output_20"."Proba_8" > 0.0) THEN ln("DT_Output_20"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_20"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_20"."Proba_9" IS NULL OR "DT_Output_20"."Proba_9" > 0.0) THEN ln("DT_Output_20"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10) AS "Proba_0", (9.0 * (CASE WHEN ("DT_Output_20"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_20"."Proba_1" IS NULL OR "DT_Output_20"."Proba_1" > 0.0) THEN ln("DT_Output_20"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_20"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_20"."Proba_0" IS NULL OR "DT_Output_20"."Proba_0" > 0.0) THEN ln("DT_Output_20"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_20"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_20"."Proba_1" IS NULL OR "DT_Output_20"."Proba_1" > 0.0) THEN ln("DT_Output_20"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_20"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_20"."Proba_2" IS NULL OR "DT_Output_20"."Proba_2" > 0.0) THEN ln("DT_Output_20"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_20"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_20"."Proba_3" IS NULL OR "DT_Output_20"."Proba_3" > 0.0) THEN ln("DT_Output_20"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_20"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_20"."Proba_4" IS NULL OR "DT_Output_20"."Proba_4" > 0.0) THEN ln("DT_Output_20"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_20"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_20"."Proba_5" IS NULL OR "DT_Output_20"."Proba_5" > 0.0) THEN ln("DT_Output_20"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_20"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_20"."Proba_6" IS NULL OR "DT_Output_20"."Proba_6" > 0.0) THEN ln("DT_Output_20"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_20"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_20"."Proba_7" IS NULL OR "DT_Output_20"."Proba_7" > 0.0) THEN ln("DT_Output_20"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_20"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_20"."Proba_8" IS NULL OR "DT_Output_20"."Proba_8" > 0.0) THEN ln("DT_Output_20"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_20"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_20"."Proba_9" IS NULL OR "DT_Output_20"."Proba_9" > 0.0) THEN ln("DT_Output_20"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10)) / 32.0 AS "Score_1", 9.0 * (CASE WHEN ("DT_Output_20"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_20"."Proba_1" IS NULL OR "DT_Output_20"."Proba_1" > 0.0) THEN ln("DT_Output_20"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_20"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_20"."Proba_0" IS NULL OR "DT_Output_20"."Proba_0" > 0.0) THEN ln("DT_Output_20"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_20"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_20"."Proba_1" IS NULL OR "DT_Output_20"."Proba_1" > 0.0) THEN ln("DT_Output_20"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_20"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_20"."Proba_2" IS NULL OR "DT_Output_20"."Proba_2" > 0.0) THEN ln("DT_Output_20"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_20"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_20"."Proba_3" IS NULL OR "DT_Output_20"."Proba_3" > 0.0) THEN ln("DT_Output_20"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_20"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_20"."Proba_4" IS NULL OR "DT_Output_20"."Proba_4" > 0.0) THEN ln("DT_Output_20"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_20"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_20"."Proba_5" IS NULL OR "DT_Output_20"."Proba_5" > 0.0) THEN ln("DT_Output_20"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_20"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_20"."Proba_6" IS NULL OR "DT_Output_20"."Proba_6" > 0.0) THEN ln("DT_Output_20"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_20"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_20"."Proba_7" IS NULL OR "DT_Output_20"."Proba_7" > 0.0) THEN ln("DT_Output_20"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_20"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_20"."Proba_8" IS NULL OR "DT_Output_20"."Proba_8" > 0.0) THEN ln("DT_Output_20"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_20"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_20"."Proba_9" IS NULL OR "DT_Output_20"."Proba_9" > 0.0) THEN ln("DT_Output_20"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10) AS "Proba_1", (9.0 * (CASE WHEN ("DT_Output_20"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_20"."Proba_2" IS NULL OR "DT_Output_20"."Proba_2" > 0.0) THEN ln("DT_Output_20"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_20"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_20"."Proba_0" IS NULL OR "DT_Output_20"."Proba_0" > 0.0) THEN ln("DT_Output_20"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_20"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_20"."Proba_1" IS NULL OR "DT_Output_20"."Proba_1" > 0.0) THEN ln("DT_Output_20"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_20"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_20"."Proba_2" IS NULL OR "DT_Output_20"."Proba_2" > 0.0) THEN ln("DT_Output_20"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_20"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_20"."Proba_3" IS NULL OR "DT_Output_20"."Proba_3" > 0.0) THEN ln("DT_Output_20"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_20"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_20"."Proba_4" IS NULL OR "DT_Output_20"."Proba_4" > 0.0) THEN ln("DT_Output_20"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_20"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_20"."Proba_5" IS NULL OR "DT_Output_20"."Proba_5" > 0.0) THEN ln("DT_Output_20"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_20"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_20"."Proba_6" IS NULL OR "DT_Output_20"."Proba_6" > 0.0) THEN ln("DT_Output_20"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_20"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_20"."Proba_7" IS NULL OR "DT_Output_20"."Proba_7" > 0.0) THEN ln("DT_Output_20"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_20"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_20"."Proba_8" IS NULL OR "DT_Output_20"."Proba_8" > 0.0) THEN ln("DT_Output_20"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_20"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_20"."Proba_9" IS NULL OR "DT_Output_20"."Proba_9" > 0.0) THEN ln("DT_Output_20"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10)) / 32.0 AS "Score_2", 9.0 * (CASE WHEN ("DT_Output_20"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_20"."Proba_2" IS NULL OR "DT_Output_20"."Proba_2" > 0.0) THEN ln("DT_Output_20"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_20"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_20"."Proba_0" IS NULL OR "DT_Output_20"."Proba_0" > 0.0) THEN ln("DT_Output_20"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_20"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_20"."Proba_1" IS NULL OR "DT_Output_20"."Proba_1" > 0.0) THEN ln("DT_Output_20"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_20"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_20"."Proba_2" IS NULL OR "DT_Output_20"."Proba_2" > 0.0) THEN ln("DT_Output_20"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_20"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_20"."Proba_3" IS NULL OR "DT_Output_20"."Proba_3" > 0.0) THEN ln("DT_Output_20"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_20"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_20"."Proba_4" IS NULL OR "DT_Output_20"."Proba_4" > 0.0) THEN ln("DT_Output_20"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_20"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_20"."Proba_5" IS NULL OR "DT_Output_20"."Proba_5" > 0.0) THEN ln("DT_Output_20"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_20"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_20"."Proba_6" IS NULL OR "DT_Output_20"."Proba_6" > 0.0) THEN ln("DT_Output_20"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_20"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_20"."Proba_7" IS NULL OR "DT_Output_20"."Proba_7" > 0.0) THEN ln("DT_Output_20"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_20"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_20"."Proba_8" IS NULL OR "DT_Output_20"."Proba_8" > 0.0) THEN ln("DT_Output_20"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_20"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_20"."Proba_9" IS NULL OR "DT_Output_20"."Proba_9" > 0.0) THEN ln("DT_Output_20"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10) AS "Proba_2", (9.0 * (CASE WHEN ("DT_Output_20"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_20"."Proba_3" IS NULL OR "DT_Output_20"."Proba_3" > 0.0) THEN ln("DT_Output_20"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_20"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_20"."Proba_0" IS NULL OR "DT_Output_20"."Proba_0" > 0.0) THEN ln("DT_Output_20"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_20"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_20"."Proba_1" IS NULL OR "DT_Output_20"."Proba_1" > 0.0) THEN ln("DT_Output_20"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_20"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_20"."Proba_2" IS NULL OR "DT_Output_20"."Proba_2" > 0.0) THEN ln("DT_Output_20"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_20"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_20"."Proba_3" IS NULL OR "DT_Output_20"."Proba_3" > 0.0) THEN ln("DT_Output_20"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_20"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_20"."Proba_4" IS NULL OR "DT_Output_20"."Proba_4" > 0.0) THEN ln("DT_Output_20"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_20"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_20"."Proba_5" IS NULL OR "DT_Output_20"."Proba_5" > 0.0) THEN ln("DT_Output_20"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_20"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_20"."Proba_6" IS NULL OR "DT_Output_20"."Proba_6" > 0.0) THEN ln("DT_Output_20"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_20"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_20"."Proba_7" IS NULL OR "DT_Output_20"."Proba_7" > 0.0) THEN ln("DT_Output_20"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_20"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_20"."Proba_8" IS NULL OR "DT_Output_20"."Proba_8" > 0.0) THEN ln("DT_Output_20"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_20"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_20"."Proba_9" IS NULL OR "DT_Output_20"."Proba_9" > 0.0) THEN ln("DT_Output_20"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10)) / 32.0 AS "Score_3", 9.0 * (CASE WHEN ("DT_Output_20"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_20"."Proba_3" IS NULL OR "DT_Output_20"."Proba_3" > 0.0) THEN ln("DT_Output_20"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_20"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_20"."Proba_0" IS NULL OR "DT_Output_20"."Proba_0" > 0.0) THEN ln("DT_Output_20"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_20"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_20"."Proba_1" IS NULL OR "DT_Output_20"."Proba_1" > 0.0) THEN ln("DT_Output_20"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_20"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_20"."Proba_2" IS NULL OR "DT_Output_20"."Proba_2" > 0.0) THEN ln("DT_Output_20"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_20"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_20"."Proba_3" IS NULL OR "DT_Output_20"."Proba_3" > 0.0) THEN ln("DT_Output_20"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_20"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_20"."Proba_4" IS NULL OR "DT_Output_20"."Proba_4" > 0.0) THEN ln("DT_Output_20"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_20"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_20"."Proba_5" IS NULL OR "DT_Output_20"."Proba_5" > 0.0) THEN ln("DT_Output_20"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_20"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_20"."Proba_6" IS NULL OR "DT_Output_20"."Proba_6" > 0.0) THEN ln("DT_Output_20"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_20"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_20"."Proba_7" IS NULL OR "DT_Output_20"."Proba_7" > 0.0) THEN ln("DT_Output_20"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_20"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_20"."Proba_8" IS NULL OR "DT_Output_20"."Proba_8" > 0.0) THEN ln("DT_Output_20"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_20"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_20"."Proba_9" IS NULL OR "DT_Output_20"."Proba_9" > 0.0) THEN ln("DT_Output_20"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10) AS "Proba_3", (9.0 * (CASE WHEN ("DT_Output_20"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_20"."Proba_4" IS NULL OR "DT_Output_20"."Proba_4" > 0.0) THEN ln("DT_Output_20"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_20"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_20"."Proba_0" IS NULL OR "DT_Output_20"."Proba_0" > 0.0) THEN ln("DT_Output_20"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_20"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_20"."Proba_1" IS NULL OR "DT_Output_20"."Proba_1" > 0.0) THEN ln("DT_Output_20"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_20"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_20"."Proba_2" IS NULL OR "DT_Output_20"."Proba_2" > 0.0) THEN ln("DT_Output_20"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_20"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_20"."Proba_3" IS NULL OR "DT_Output_20"."Proba_3" > 0.0) THEN ln("DT_Output_20"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_20"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_20"."Proba_4" IS NULL OR "DT_Output_20"."Proba_4" > 0.0) THEN ln("DT_Output_20"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_20"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_20"."Proba_5" IS NULL OR "DT_Output_20"."Proba_5" > 0.0) THEN ln("DT_Output_20"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_20"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_20"."Proba_6" IS NULL OR "DT_Output_20"."Proba_6" > 0.0) THEN ln("DT_Output_20"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_20"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_20"."Proba_7" IS NULL OR "DT_Output_20"."Proba_7" > 0.0) THEN ln("DT_Output_20"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_20"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_20"."Proba_8" IS NULL OR "DT_Output_20"."Proba_8" > 0.0) THEN ln("DT_Output_20"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_20"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_20"."Proba_9" IS NULL OR "DT_Output_20"."Proba_9" > 0.0) THEN ln("DT_Output_20"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10)) / 32.0 AS "Score_4", 9.0 * (CASE WHEN ("DT_Output_20"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_20"."Proba_4" IS NULL OR "DT_Output_20"."Proba_4" > 0.0) THEN ln("DT_Output_20"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_20"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_20"."Proba_0" IS NULL OR "DT_Output_20"."Proba_0" > 0.0) THEN ln("DT_Output_20"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_20"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_20"."Proba_1" IS NULL OR "DT_Output_20"."Proba_1" > 0.0) THEN ln("DT_Output_20"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_20"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_20"."Proba_2" IS NULL OR "DT_Output_20"."Proba_2" > 0.0) THEN ln("DT_Output_20"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_20"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_20"."Proba_3" IS NULL OR "DT_Output_20"."Proba_3" > 0.0) THEN ln("DT_Output_20"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_20"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_20"."Proba_4" IS NULL OR "DT_Output_20"."Proba_4" > 0.0) THEN ln("DT_Output_20"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_20"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_20"."Proba_5" IS NULL OR "DT_Output_20"."Proba_5" > 0.0) THEN ln("DT_Output_20"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_20"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_20"."Proba_6" IS NULL OR "DT_Output_20"."Proba_6" > 0.0) THEN ln("DT_Output_20"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_20"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_20"."Proba_7" IS NULL OR "DT_Output_20"."Proba_7" > 0.0) THEN ln("DT_Output_20"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_20"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_20"."Proba_8" IS NULL OR "DT_Output_20"."Proba_8" > 0.0) THEN ln("DT_Output_20"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_20"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_20"."Proba_9" IS NULL OR "DT_Output_20"."Proba_9" > 0.0) THEN ln("DT_Output_20"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10) AS "Proba_4", (9.0 * (CASE WHEN ("DT_Output_20"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_20"."Proba_5" IS NULL OR "DT_Output_20"."Proba_5" > 0.0) THEN ln("DT_Output_20"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_20"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_20"."Proba_0" IS NULL OR "DT_Output_20"."Proba_0" > 0.0) THEN ln("DT_Output_20"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_20"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_20"."Proba_1" IS NULL OR "DT_Output_20"."Proba_1" > 0.0) THEN ln("DT_Output_20"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_20"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_20"."Proba_2" IS NULL OR "DT_Output_20"."Proba_2" > 0.0) THEN ln("DT_Output_20"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_20"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_20"."Proba_3" IS NULL OR "DT_Output_20"."Proba_3" > 0.0) THEN ln("DT_Output_20"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_20"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_20"."Proba_4" IS NULL OR "DT_Output_20"."Proba_4" > 0.0) THEN ln("DT_Output_20"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_20"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_20"."Proba_5" IS NULL OR "DT_Output_20"."Proba_5" > 0.0) THEN ln("DT_Output_20"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_20"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_20"."Proba_6" IS NULL OR "DT_Output_20"."Proba_6" > 0.0) THEN ln("DT_Output_20"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_20"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_20"."Proba_7" IS NULL OR "DT_Output_20"."Proba_7" > 0.0) THEN ln("DT_Output_20"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_20"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_20"."Proba_8" IS NULL OR "DT_Output_20"."Proba_8" > 0.0) THEN ln("DT_Output_20"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_20"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_20"."Proba_9" IS NULL OR "DT_Output_20"."Proba_9" > 0.0) THEN ln("DT_Output_20"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10)) / 32.0 AS "Score_5", 9.0 * (CASE WHEN ("DT_Output_20"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_20"."Proba_5" IS NULL OR "DT_Output_20"."Proba_5" > 0.0) THEN ln("DT_Output_20"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_20"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_20"."Proba_0" IS NULL OR "DT_Output_20"."Proba_0" > 0.0) THEN ln("DT_Output_20"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_20"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_20"."Proba_1" IS NULL OR "DT_Output_20"."Proba_1" > 0.0) THEN ln("DT_Output_20"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_20"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_20"."Proba_2" IS NULL OR "DT_Output_20"."Proba_2" > 0.0) THEN ln("DT_Output_20"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_20"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_20"."Proba_3" IS NULL OR "DT_Output_20"."Proba_3" > 0.0) THEN ln("DT_Output_20"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_20"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_20"."Proba_4" IS NULL OR "DT_Output_20"."Proba_4" > 0.0) THEN ln("DT_Output_20"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_20"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_20"."Proba_5" IS NULL OR "DT_Output_20"."Proba_5" > 0.0) THEN ln("DT_Output_20"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_20"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_20"."Proba_6" IS NULL OR "DT_Output_20"."Proba_6" > 0.0) THEN ln("DT_Output_20"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_20"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_20"."Proba_7" IS NULL OR "DT_Output_20"."Proba_7" > 0.0) THEN ln("DT_Output_20"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_20"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_20"."Proba_8" IS NULL OR "DT_Output_20"."Proba_8" > 0.0) THEN ln("DT_Output_20"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_20"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_20"."Proba_9" IS NULL OR "DT_Output_20"."Proba_9" > 0.0) THEN ln("DT_Output_20"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10) AS "Proba_5", (9.0 * (CASE WHEN ("DT_Output_20"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_20"."Proba_6" IS NULL OR "DT_Output_20"."Proba_6" > 0.0) THEN ln("DT_Output_20"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_20"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_20"."Proba_0" IS NULL OR "DT_Output_20"."Proba_0" > 0.0) THEN ln("DT_Output_20"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_20"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_20"."Proba_1" IS NULL OR "DT_Output_20"."Proba_1" > 0.0) THEN ln("DT_Output_20"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_20"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_20"."Proba_2" IS NULL OR "DT_Output_20"."Proba_2" > 0.0) THEN ln("DT_Output_20"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_20"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_20"."Proba_3" IS NULL OR "DT_Output_20"."Proba_3" > 0.0) THEN ln("DT_Output_20"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_20"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_20"."Proba_4" IS NULL OR "DT_Output_20"."Proba_4" > 0.0) THEN ln("DT_Output_20"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_20"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_20"."Proba_5" IS NULL OR "DT_Output_20"."Proba_5" > 0.0) THEN ln("DT_Output_20"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_20"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_20"."Proba_6" IS NULL OR "DT_Output_20"."Proba_6" > 0.0) THEN ln("DT_Output_20"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_20"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_20"."Proba_7" IS NULL OR "DT_Output_20"."Proba_7" > 0.0) THEN ln("DT_Output_20"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_20"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_20"."Proba_8" IS NULL OR "DT_Output_20"."Proba_8" > 0.0) THEN ln("DT_Output_20"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_20"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_20"."Proba_9" IS NULL OR "DT_Output_20"."Proba_9" > 0.0) THEN ln("DT_Output_20"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10)) / 32.0 AS "Score_6", 9.0 * (CASE WHEN ("DT_Output_20"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_20"."Proba_6" IS NULL OR "DT_Output_20"."Proba_6" > 0.0) THEN ln("DT_Output_20"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_20"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_20"."Proba_0" IS NULL OR "DT_Output_20"."Proba_0" > 0.0) THEN ln("DT_Output_20"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_20"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_20"."Proba_1" IS NULL OR "DT_Output_20"."Proba_1" > 0.0) THEN ln("DT_Output_20"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_20"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_20"."Proba_2" IS NULL OR "DT_Output_20"."Proba_2" > 0.0) THEN ln("DT_Output_20"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_20"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_20"."Proba_3" IS NULL OR "DT_Output_20"."Proba_3" > 0.0) THEN ln("DT_Output_20"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_20"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_20"."Proba_4" IS NULL OR "DT_Output_20"."Proba_4" > 0.0) THEN ln("DT_Output_20"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_20"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_20"."Proba_5" IS NULL OR "DT_Output_20"."Proba_5" > 0.0) THEN ln("DT_Output_20"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_20"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_20"."Proba_6" IS NULL OR "DT_Output_20"."Proba_6" > 0.0) THEN ln("DT_Output_20"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_20"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_20"."Proba_7" IS NULL OR "DT_Output_20"."Proba_7" > 0.0) THEN ln("DT_Output_20"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_20"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_20"."Proba_8" IS NULL OR "DT_Output_20"."Proba_8" > 0.0) THEN ln("DT_Output_20"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_20"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_20"."Proba_9" IS NULL OR "DT_Output_20"."Proba_9" > 0.0) THEN ln("DT_Output_20"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10) AS "Proba_6", (9.0 * (CASE WHEN ("DT_Output_20"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_20"."Proba_7" IS NULL OR "DT_Output_20"."Proba_7" > 0.0) THEN ln("DT_Output_20"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_20"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_20"."Proba_0" IS NULL OR "DT_Output_20"."Proba_0" > 0.0) THEN ln("DT_Output_20"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_20"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_20"."Proba_1" IS NULL OR "DT_Output_20"."Proba_1" > 0.0) THEN ln("DT_Output_20"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_20"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_20"."Proba_2" IS NULL OR "DT_Output_20"."Proba_2" > 0.0) THEN ln("DT_Output_20"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_20"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_20"."Proba_3" IS NULL OR "DT_Output_20"."Proba_3" > 0.0) THEN ln("DT_Output_20"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_20"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_20"."Proba_4" IS NULL OR "DT_Output_20"."Proba_4" > 0.0) THEN ln("DT_Output_20"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_20"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_20"."Proba_5" IS NULL OR "DT_Output_20"."Proba_5" > 0.0) THEN ln("DT_Output_20"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_20"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_20"."Proba_6" IS NULL OR "DT_Output_20"."Proba_6" > 0.0) THEN ln("DT_Output_20"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_20"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_20"."Proba_7" IS NULL OR "DT_Output_20"."Proba_7" > 0.0) THEN ln("DT_Output_20"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_20"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_20"."Proba_8" IS NULL OR "DT_Output_20"."Proba_8" > 0.0) THEN ln("DT_Output_20"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_20"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_20"."Proba_9" IS NULL OR "DT_Output_20"."Proba_9" > 0.0) THEN ln("DT_Output_20"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10)) / 32.0 AS "Score_7", 9.0 * (CASE WHEN ("DT_Output_20"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_20"."Proba_7" IS NULL OR "DT_Output_20"."Proba_7" > 0.0) THEN ln("DT_Output_20"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_20"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_20"."Proba_0" IS NULL OR "DT_Output_20"."Proba_0" > 0.0) THEN ln("DT_Output_20"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_20"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_20"."Proba_1" IS NULL OR "DT_Output_20"."Proba_1" > 0.0) THEN ln("DT_Output_20"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_20"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_20"."Proba_2" IS NULL OR "DT_Output_20"."Proba_2" > 0.0) THEN ln("DT_Output_20"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_20"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_20"."Proba_3" IS NULL OR "DT_Output_20"."Proba_3" > 0.0) THEN ln("DT_Output_20"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_20"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_20"."Proba_4" IS NULL OR "DT_Output_20"."Proba_4" > 0.0) THEN ln("DT_Output_20"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_20"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_20"."Proba_5" IS NULL OR "DT_Output_20"."Proba_5" > 0.0) THEN ln("DT_Output_20"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_20"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_20"."Proba_6" IS NULL OR "DT_Output_20"."Proba_6" > 0.0) THEN ln("DT_Output_20"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_20"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_20"."Proba_7" IS NULL OR "DT_Output_20"."Proba_7" > 0.0) THEN ln("DT_Output_20"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_20"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_20"."Proba_8" IS NULL OR "DT_Output_20"."Proba_8" > 0.0) THEN ln("DT_Output_20"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_20"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_20"."Proba_9" IS NULL OR "DT_Output_20"."Proba_9" > 0.0) THEN ln("DT_Output_20"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10) AS "Proba_7", (9.0 * (CASE WHEN ("DT_Output_20"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_20"."Proba_8" IS NULL OR "DT_Output_20"."Proba_8" > 0.0) THEN ln("DT_Output_20"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_20"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_20"."Proba_0" IS NULL OR "DT_Output_20"."Proba_0" > 0.0) THEN ln("DT_Output_20"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_20"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_20"."Proba_1" IS NULL OR "DT_Output_20"."Proba_1" > 0.0) THEN ln("DT_Output_20"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_20"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_20"."Proba_2" IS NULL OR "DT_Output_20"."Proba_2" > 0.0) THEN ln("DT_Output_20"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_20"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_20"."Proba_3" IS NULL OR "DT_Output_20"."Proba_3" > 0.0) THEN ln("DT_Output_20"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_20"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_20"."Proba_4" IS NULL OR "DT_Output_20"."Proba_4" > 0.0) THEN ln("DT_Output_20"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_20"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_20"."Proba_5" IS NULL OR "DT_Output_20"."Proba_5" > 0.0) THEN ln("DT_Output_20"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_20"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_20"."Proba_6" IS NULL OR "DT_Output_20"."Proba_6" > 0.0) THEN ln("DT_Output_20"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_20"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_20"."Proba_7" IS NULL OR "DT_Output_20"."Proba_7" > 0.0) THEN ln("DT_Output_20"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_20"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_20"."Proba_8" IS NULL OR "DT_Output_20"."Proba_8" > 0.0) THEN ln("DT_Output_20"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_20"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_20"."Proba_9" IS NULL OR "DT_Output_20"."Proba_9" > 0.0) THEN ln("DT_Output_20"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10)) / 32.0 AS "Score_8", 9.0 * (CASE WHEN ("DT_Output_20"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_20"."Proba_8" IS NULL OR "DT_Output_20"."Proba_8" > 0.0) THEN ln("DT_Output_20"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_20"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_20"."Proba_0" IS NULL OR "DT_Output_20"."Proba_0" > 0.0) THEN ln("DT_Output_20"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_20"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_20"."Proba_1" IS NULL OR "DT_Output_20"."Proba_1" > 0.0) THEN ln("DT_Output_20"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_20"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_20"."Proba_2" IS NULL OR "DT_Output_20"."Proba_2" > 0.0) THEN ln("DT_Output_20"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_20"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_20"."Proba_3" IS NULL OR "DT_Output_20"."Proba_3" > 0.0) THEN ln("DT_Output_20"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_20"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_20"."Proba_4" IS NULL OR "DT_Output_20"."Proba_4" > 0.0) THEN ln("DT_Output_20"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_20"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_20"."Proba_5" IS NULL OR "DT_Output_20"."Proba_5" > 0.0) THEN ln("DT_Output_20"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_20"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_20"."Proba_6" IS NULL OR "DT_Output_20"."Proba_6" > 0.0) THEN ln("DT_Output_20"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_20"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_20"."Proba_7" IS NULL OR "DT_Output_20"."Proba_7" > 0.0) THEN ln("DT_Output_20"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_20"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_20"."Proba_8" IS NULL OR "DT_Output_20"."Proba_8" > 0.0) THEN ln("DT_Output_20"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_20"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_20"."Proba_9" IS NULL OR "DT_Output_20"."Proba_9" > 0.0) THEN ln("DT_Output_20"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10) AS "Proba_8", (9.0 * (CASE WHEN ("DT_Output_20"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_20"."Proba_9" IS NULL OR "DT_Output_20"."Proba_9" > 0.0) THEN ln("DT_Output_20"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_20"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_20"."Proba_0" IS NULL OR "DT_Output_20"."Proba_0" > 0.0) THEN ln("DT_Output_20"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_20"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_20"."Proba_1" IS NULL OR "DT_Output_20"."Proba_1" > 0.0) THEN ln("DT_Output_20"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_20"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_20"."Proba_2" IS NULL OR "DT_Output_20"."Proba_2" > 0.0) THEN ln("DT_Output_20"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_20"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_20"."Proba_3" IS NULL OR "DT_Output_20"."Proba_3" > 0.0) THEN ln("DT_Output_20"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_20"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_20"."Proba_4" IS NULL OR "DT_Output_20"."Proba_4" > 0.0) THEN ln("DT_Output_20"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_20"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_20"."Proba_5" IS NULL OR "DT_Output_20"."Proba_5" > 0.0) THEN ln("DT_Output_20"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_20"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_20"."Proba_6" IS NULL OR "DT_Output_20"."Proba_6" > 0.0) THEN ln("DT_Output_20"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_20"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_20"."Proba_7" IS NULL OR "DT_Output_20"."Proba_7" > 0.0) THEN ln("DT_Output_20"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_20"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_20"."Proba_8" IS NULL OR "DT_Output_20"."Proba_8" > 0.0) THEN ln("DT_Output_20"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_20"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_20"."Proba_9" IS NULL OR "DT_Output_20"."Proba_9" > 0.0) THEN ln("DT_Output_20"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10)) / 32.0 AS "Score_9", 9.0 * (CASE WHEN ("DT_Output_20"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_20"."Proba_9" IS NULL OR "DT_Output_20"."Proba_9" > 0.0) THEN ln("DT_Output_20"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_20"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_20"."Proba_0" IS NULL OR "DT_Output_20"."Proba_0" > 0.0) THEN ln("DT_Output_20"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_20"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_20"."Proba_1" IS NULL OR "DT_Output_20"."Proba_1" > 0.0) THEN ln("DT_Output_20"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_20"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_20"."Proba_2" IS NULL OR "DT_Output_20"."Proba_2" > 0.0) THEN ln("DT_Output_20"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_20"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_20"."Proba_3" IS NULL OR "DT_Output_20"."Proba_3" > 0.0) THEN ln("DT_Output_20"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_20"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_20"."Proba_4" IS NULL OR "DT_Output_20"."Proba_4" > 0.0) THEN ln("DT_Output_20"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_20"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_20"."Proba_5" IS NULL OR "DT_Output_20"."Proba_5" > 0.0) THEN ln("DT_Output_20"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_20"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_20"."Proba_6" IS NULL OR "DT_Output_20"."Proba_6" > 0.0) THEN ln("DT_Output_20"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_20"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_20"."Proba_7" IS NULL OR "DT_Output_20"."Proba_7" > 0.0) THEN ln("DT_Output_20"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_20"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_20"."Proba_8" IS NULL OR "DT_Output_20"."Proba_8" > 0.0) THEN ln("DT_Output_20"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_20"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_20"."Proba_9" IS NULL OR "DT_Output_20"."Proba_9" > 0.0) THEN ln("DT_Output_20"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10) AS "Proba_9" 
FROM "DT_Output_20"), 
"DT_node_lookup_21" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_38 <= -1.6508052349090576) THEN 1 ELSE 2 END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_21" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Proba_0" AS "Proba_0", "Values"."LogProba_0" AS "LogProba_0", "Values"."Proba_1" AS "Proba_1", "Values"."LogProba_1" AS "LogProba_1", "Values"."Proba_2" AS "Proba_2", "Values"."LogProba_2" AS "LogProba_2", "Values"."Proba_3" AS "Proba_3", "Values"."LogProba_3" AS "LogProba_3", "Values"."Proba_4" AS "Proba_4", "Values"."LogProba_4" AS "LogProba_4", "Values"."Proba_5" AS "Proba_5", "Values"."LogProba_5" AS "LogProba_5", "Values"."Proba_6" AS "Proba_6", "Values"."LogProba_6" AS "LogProba_6", "Values"."Proba_7" AS "Proba_7", "Values"."LogProba_7" AS "LogProba_7", "Values"."Proba_8" AS "Proba_8", "Values"."LogProba_8" AS "LogProba_8", "Values"."Proba_9" AS "Proba_9", "Values"."LogProba_9" AS "LogProba_9", "Values"."Decision" AS "Decision", "Values"."DecisionProba" AS "DecisionProba" 
FROM (SELECT 1 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 219 AS count, 1 AS depth, 0 AS parent_id, 0.9999999940512758 AS "Proba_0", -5.94872419761e-09 AS "LogProba_0", 0.0 AS "Proba_1", -BINARY_FLOAT_INFINITY AS "LogProba_1", 8.519760032872197e-10 AS "Proba_2", -20.8834627547 AS "LogProba_2", 8.492864476104773e-10 AS "Proba_3", -20.8866245924 AS "LogProba_3", 8.506065938799405e-10 AS "Proba_4", -20.8850713811 AS "LogProba_4", 8.49290225752994e-10 AS "Proba_5", -20.8866201438 AS "LogProba_5", 8.492887854238742e-10 AS "Proba_6", -20.8866218397 AS "LogProba_6", 0.0 AS "Proba_7", -BINARY_FLOAT_INFINITY AS "LogProba_7", 8.489895903858584e-10 AS "Proba_8", -20.8869741907 AS "LogProba_8", 8.492864476104793e-10 AS "Proba_9", -20.8866245924 AS "LogProba_9", 0 AS "Decision", 0.999999994051 AS "DecisionProba" FROM DUAL UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1218 AS count, 1 AS depth, 0 AS parent_id, 4.1916487765606425e-05 AS "Proba_0", -10.0798313057 AS "LogProba_0", 0.11111111118452444 AS "Proba_1", -2.19722457668 AS "LogProba_1", 0.11111111108989635 AS "Proba_2", -2.19722457753 AS "LogProba_2", 0.11111111109019456 AS "Proba_3", -2.19722457752 AS "LogProba_3", 0.1111111110900481 AS "Proba_4", -2.19722457753 AS "LogProba_4", 0.11111111109019445 AS "Proba_5", -2.19722457752 AS "LogProba_5", 0.1111111110901952 AS "Proba_6", -2.19722457752 AS "LogProba_6", 0.11111111118452466 AS "Proba_7", -2.19722457668 AS "LogProba_7", 0.11106919460246198 AS "Proba_8", -2.19760189709 AS "LogProba_8", 0.11111111109019478 AS "Proba_9", -2.19722457752 AS "LogProba_9", 7 AS "Decision", 0.111111111185 AS "DecisionProba" FROM DUAL) "Values"), 
"DT_Output_21" AS 
(SELECT "DT_node_lookup_21"."KEY" AS "KEY", "DT_node_lookup_21".node_id_2 AS node_id_2, "DT_node_data_21".node_id AS node_id, "DT_node_data_21".feature AS feature, "DT_node_data_21".threshold AS threshold, "DT_node_data_21".count AS count, "DT_node_data_21".depth AS depth, "DT_node_data_21".parent_id AS parent_id, "DT_node_data_21"."Proba_0" AS "Proba_0", "DT_node_data_21"."LogProba_0" AS "LogProba_0", "DT_node_data_21"."Proba_1" AS "Proba_1", "DT_node_data_21"."LogProba_1" AS "LogProba_1", "DT_node_data_21"."Proba_2" AS "Proba_2", "DT_node_data_21"."LogProba_2" AS "LogProba_2", "DT_node_data_21"."Proba_3" AS "Proba_3", "DT_node_data_21"."LogProba_3" AS "LogProba_3", "DT_node_data_21"."Proba_4" AS "Proba_4", "DT_node_data_21"."LogProba_4" AS "LogProba_4", "DT_node_data_21"."Proba_5" AS "Proba_5", "DT_node_data_21"."LogProba_5" AS "LogProba_5", "DT_node_data_21"."Proba_6" AS "Proba_6", "DT_node_data_21"."LogProba_6" AS "LogProba_6", "DT_node_data_21"."Proba_7" AS "Proba_7", "DT_node_data_21"."LogProba_7" AS "LogProba_7", "DT_node_data_21"."Proba_8" AS "Proba_8", "DT_node_data_21"."LogProba_8" AS "LogProba_8", "DT_node_data_21"."Proba_9" AS "Proba_9", "DT_node_data_21"."LogProba_9" AS "LogProba_9", "DT_node_data_21"."Decision" AS "Decision", "DT_node_data_21"."DecisionProba" AS "DecisionProba" 
FROM "DT_node_lookup_21" LEFT OUTER JOIN "DT_node_data_21" ON "DT_node_lookup_21".node_id_2 = "DT_node_data_21".node_id), 
"AdaBoost_Estim_21" AS 
(SELECT "DT_Output_21"."KEY" AS "KEY", (9.0 * (CASE WHEN ("DT_Output_21"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_21"."Proba_0" IS NULL OR "DT_Output_21"."Proba_0" > 0.0) THEN ln("DT_Output_21"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_21"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_21"."Proba_0" IS NULL OR "DT_Output_21"."Proba_0" > 0.0) THEN ln("DT_Output_21"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_21"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_21"."Proba_1" IS NULL OR "DT_Output_21"."Proba_1" > 0.0) THEN ln("DT_Output_21"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_21"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_21"."Proba_2" IS NULL OR "DT_Output_21"."Proba_2" > 0.0) THEN ln("DT_Output_21"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_21"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_21"."Proba_3" IS NULL OR "DT_Output_21"."Proba_3" > 0.0) THEN ln("DT_Output_21"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_21"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_21"."Proba_4" IS NULL OR "DT_Output_21"."Proba_4" > 0.0) THEN ln("DT_Output_21"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_21"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_21"."Proba_5" IS NULL OR "DT_Output_21"."Proba_5" > 0.0) THEN ln("DT_Output_21"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_21"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_21"."Proba_6" IS NULL OR "DT_Output_21"."Proba_6" > 0.0) THEN ln("DT_Output_21"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_21"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_21"."Proba_7" IS NULL OR "DT_Output_21"."Proba_7" > 0.0) THEN ln("DT_Output_21"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_21"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_21"."Proba_8" IS NULL OR "DT_Output_21"."Proba_8" > 0.0) THEN ln("DT_Output_21"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_21"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_21"."Proba_9" IS NULL OR "DT_Output_21"."Proba_9" > 0.0) THEN ln("DT_Output_21"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10)) / 32.0 AS "Score_0", 9.0 * (CASE WHEN ("DT_Output_21"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_21"."Proba_0" IS NULL OR "DT_Output_21"."Proba_0" > 0.0) THEN ln("DT_Output_21"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_21"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_21"."Proba_0" IS NULL OR "DT_Output_21"."Proba_0" > 0.0) THEN ln("DT_Output_21"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_21"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_21"."Proba_1" IS NULL OR "DT_Output_21"."Proba_1" > 0.0) THEN ln("DT_Output_21"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_21"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_21"."Proba_2" IS NULL OR "DT_Output_21"."Proba_2" > 0.0) THEN ln("DT_Output_21"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_21"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_21"."Proba_3" IS NULL OR "DT_Output_21"."Proba_3" > 0.0) THEN ln("DT_Output_21"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_21"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_21"."Proba_4" IS NULL OR "DT_Output_21"."Proba_4" > 0.0) THEN ln("DT_Output_21"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_21"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_21"."Proba_5" IS NULL OR "DT_Output_21"."Proba_5" > 0.0) THEN ln("DT_Output_21"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_21"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_21"."Proba_6" IS NULL OR "DT_Output_21"."Proba_6" > 0.0) THEN ln("DT_Output_21"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_21"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_21"."Proba_7" IS NULL OR "DT_Output_21"."Proba_7" > 0.0) THEN ln("DT_Output_21"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_21"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_21"."Proba_8" IS NULL OR "DT_Output_21"."Proba_8" > 0.0) THEN ln("DT_Output_21"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_21"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_21"."Proba_9" IS NULL OR "DT_Output_21"."Proba_9" > 0.0) THEN ln("DT_Output_21"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10) AS "Proba_0", (9.0 * (CASE WHEN ("DT_Output_21"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_21"."Proba_1" IS NULL OR "DT_Output_21"."Proba_1" > 0.0) THEN ln("DT_Output_21"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_21"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_21"."Proba_0" IS NULL OR "DT_Output_21"."Proba_0" > 0.0) THEN ln("DT_Output_21"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_21"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_21"."Proba_1" IS NULL OR "DT_Output_21"."Proba_1" > 0.0) THEN ln("DT_Output_21"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_21"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_21"."Proba_2" IS NULL OR "DT_Output_21"."Proba_2" > 0.0) THEN ln("DT_Output_21"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_21"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_21"."Proba_3" IS NULL OR "DT_Output_21"."Proba_3" > 0.0) THEN ln("DT_Output_21"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_21"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_21"."Proba_4" IS NULL OR "DT_Output_21"."Proba_4" > 0.0) THEN ln("DT_Output_21"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_21"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_21"."Proba_5" IS NULL OR "DT_Output_21"."Proba_5" > 0.0) THEN ln("DT_Output_21"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_21"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_21"."Proba_6" IS NULL OR "DT_Output_21"."Proba_6" > 0.0) THEN ln("DT_Output_21"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_21"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_21"."Proba_7" IS NULL OR "DT_Output_21"."Proba_7" > 0.0) THEN ln("DT_Output_21"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_21"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_21"."Proba_8" IS NULL OR "DT_Output_21"."Proba_8" > 0.0) THEN ln("DT_Output_21"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_21"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_21"."Proba_9" IS NULL OR "DT_Output_21"."Proba_9" > 0.0) THEN ln("DT_Output_21"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10)) / 32.0 AS "Score_1", 9.0 * (CASE WHEN ("DT_Output_21"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_21"."Proba_1" IS NULL OR "DT_Output_21"."Proba_1" > 0.0) THEN ln("DT_Output_21"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_21"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_21"."Proba_0" IS NULL OR "DT_Output_21"."Proba_0" > 0.0) THEN ln("DT_Output_21"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_21"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_21"."Proba_1" IS NULL OR "DT_Output_21"."Proba_1" > 0.0) THEN ln("DT_Output_21"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_21"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_21"."Proba_2" IS NULL OR "DT_Output_21"."Proba_2" > 0.0) THEN ln("DT_Output_21"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_21"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_21"."Proba_3" IS NULL OR "DT_Output_21"."Proba_3" > 0.0) THEN ln("DT_Output_21"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_21"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_21"."Proba_4" IS NULL OR "DT_Output_21"."Proba_4" > 0.0) THEN ln("DT_Output_21"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_21"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_21"."Proba_5" IS NULL OR "DT_Output_21"."Proba_5" > 0.0) THEN ln("DT_Output_21"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_21"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_21"."Proba_6" IS NULL OR "DT_Output_21"."Proba_6" > 0.0) THEN ln("DT_Output_21"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_21"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_21"."Proba_7" IS NULL OR "DT_Output_21"."Proba_7" > 0.0) THEN ln("DT_Output_21"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_21"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_21"."Proba_8" IS NULL OR "DT_Output_21"."Proba_8" > 0.0) THEN ln("DT_Output_21"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_21"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_21"."Proba_9" IS NULL OR "DT_Output_21"."Proba_9" > 0.0) THEN ln("DT_Output_21"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10) AS "Proba_1", (9.0 * (CASE WHEN ("DT_Output_21"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_21"."Proba_2" IS NULL OR "DT_Output_21"."Proba_2" > 0.0) THEN ln("DT_Output_21"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_21"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_21"."Proba_0" IS NULL OR "DT_Output_21"."Proba_0" > 0.0) THEN ln("DT_Output_21"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_21"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_21"."Proba_1" IS NULL OR "DT_Output_21"."Proba_1" > 0.0) THEN ln("DT_Output_21"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_21"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_21"."Proba_2" IS NULL OR "DT_Output_21"."Proba_2" > 0.0) THEN ln("DT_Output_21"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_21"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_21"."Proba_3" IS NULL OR "DT_Output_21"."Proba_3" > 0.0) THEN ln("DT_Output_21"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_21"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_21"."Proba_4" IS NULL OR "DT_Output_21"."Proba_4" > 0.0) THEN ln("DT_Output_21"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_21"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_21"."Proba_5" IS NULL OR "DT_Output_21"."Proba_5" > 0.0) THEN ln("DT_Output_21"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_21"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_21"."Proba_6" IS NULL OR "DT_Output_21"."Proba_6" > 0.0) THEN ln("DT_Output_21"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_21"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_21"."Proba_7" IS NULL OR "DT_Output_21"."Proba_7" > 0.0) THEN ln("DT_Output_21"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_21"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_21"."Proba_8" IS NULL OR "DT_Output_21"."Proba_8" > 0.0) THEN ln("DT_Output_21"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_21"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_21"."Proba_9" IS NULL OR "DT_Output_21"."Proba_9" > 0.0) THEN ln("DT_Output_21"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10)) / 32.0 AS "Score_2", 9.0 * (CASE WHEN ("DT_Output_21"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_21"."Proba_2" IS NULL OR "DT_Output_21"."Proba_2" > 0.0) THEN ln("DT_Output_21"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_21"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_21"."Proba_0" IS NULL OR "DT_Output_21"."Proba_0" > 0.0) THEN ln("DT_Output_21"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_21"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_21"."Proba_1" IS NULL OR "DT_Output_21"."Proba_1" > 0.0) THEN ln("DT_Output_21"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_21"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_21"."Proba_2" IS NULL OR "DT_Output_21"."Proba_2" > 0.0) THEN ln("DT_Output_21"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_21"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_21"."Proba_3" IS NULL OR "DT_Output_21"."Proba_3" > 0.0) THEN ln("DT_Output_21"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_21"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_21"."Proba_4" IS NULL OR "DT_Output_21"."Proba_4" > 0.0) THEN ln("DT_Output_21"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_21"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_21"."Proba_5" IS NULL OR "DT_Output_21"."Proba_5" > 0.0) THEN ln("DT_Output_21"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_21"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_21"."Proba_6" IS NULL OR "DT_Output_21"."Proba_6" > 0.0) THEN ln("DT_Output_21"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_21"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_21"."Proba_7" IS NULL OR "DT_Output_21"."Proba_7" > 0.0) THEN ln("DT_Output_21"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_21"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_21"."Proba_8" IS NULL OR "DT_Output_21"."Proba_8" > 0.0) THEN ln("DT_Output_21"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_21"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_21"."Proba_9" IS NULL OR "DT_Output_21"."Proba_9" > 0.0) THEN ln("DT_Output_21"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10) AS "Proba_2", (9.0 * (CASE WHEN ("DT_Output_21"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_21"."Proba_3" IS NULL OR "DT_Output_21"."Proba_3" > 0.0) THEN ln("DT_Output_21"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_21"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_21"."Proba_0" IS NULL OR "DT_Output_21"."Proba_0" > 0.0) THEN ln("DT_Output_21"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_21"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_21"."Proba_1" IS NULL OR "DT_Output_21"."Proba_1" > 0.0) THEN ln("DT_Output_21"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_21"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_21"."Proba_2" IS NULL OR "DT_Output_21"."Proba_2" > 0.0) THEN ln("DT_Output_21"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_21"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_21"."Proba_3" IS NULL OR "DT_Output_21"."Proba_3" > 0.0) THEN ln("DT_Output_21"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_21"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_21"."Proba_4" IS NULL OR "DT_Output_21"."Proba_4" > 0.0) THEN ln("DT_Output_21"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_21"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_21"."Proba_5" IS NULL OR "DT_Output_21"."Proba_5" > 0.0) THEN ln("DT_Output_21"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_21"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_21"."Proba_6" IS NULL OR "DT_Output_21"."Proba_6" > 0.0) THEN ln("DT_Output_21"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_21"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_21"."Proba_7" IS NULL OR "DT_Output_21"."Proba_7" > 0.0) THEN ln("DT_Output_21"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_21"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_21"."Proba_8" IS NULL OR "DT_Output_21"."Proba_8" > 0.0) THEN ln("DT_Output_21"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_21"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_21"."Proba_9" IS NULL OR "DT_Output_21"."Proba_9" > 0.0) THEN ln("DT_Output_21"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10)) / 32.0 AS "Score_3", 9.0 * (CASE WHEN ("DT_Output_21"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_21"."Proba_3" IS NULL OR "DT_Output_21"."Proba_3" > 0.0) THEN ln("DT_Output_21"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_21"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_21"."Proba_0" IS NULL OR "DT_Output_21"."Proba_0" > 0.0) THEN ln("DT_Output_21"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_21"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_21"."Proba_1" IS NULL OR "DT_Output_21"."Proba_1" > 0.0) THEN ln("DT_Output_21"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_21"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_21"."Proba_2" IS NULL OR "DT_Output_21"."Proba_2" > 0.0) THEN ln("DT_Output_21"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_21"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_21"."Proba_3" IS NULL OR "DT_Output_21"."Proba_3" > 0.0) THEN ln("DT_Output_21"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_21"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_21"."Proba_4" IS NULL OR "DT_Output_21"."Proba_4" > 0.0) THEN ln("DT_Output_21"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_21"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_21"."Proba_5" IS NULL OR "DT_Output_21"."Proba_5" > 0.0) THEN ln("DT_Output_21"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_21"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_21"."Proba_6" IS NULL OR "DT_Output_21"."Proba_6" > 0.0) THEN ln("DT_Output_21"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_21"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_21"."Proba_7" IS NULL OR "DT_Output_21"."Proba_7" > 0.0) THEN ln("DT_Output_21"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_21"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_21"."Proba_8" IS NULL OR "DT_Output_21"."Proba_8" > 0.0) THEN ln("DT_Output_21"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_21"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_21"."Proba_9" IS NULL OR "DT_Output_21"."Proba_9" > 0.0) THEN ln("DT_Output_21"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10) AS "Proba_3", (9.0 * (CASE WHEN ("DT_Output_21"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_21"."Proba_4" IS NULL OR "DT_Output_21"."Proba_4" > 0.0) THEN ln("DT_Output_21"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_21"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_21"."Proba_0" IS NULL OR "DT_Output_21"."Proba_0" > 0.0) THEN ln("DT_Output_21"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_21"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_21"."Proba_1" IS NULL OR "DT_Output_21"."Proba_1" > 0.0) THEN ln("DT_Output_21"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_21"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_21"."Proba_2" IS NULL OR "DT_Output_21"."Proba_2" > 0.0) THEN ln("DT_Output_21"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_21"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_21"."Proba_3" IS NULL OR "DT_Output_21"."Proba_3" > 0.0) THEN ln("DT_Output_21"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_21"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_21"."Proba_4" IS NULL OR "DT_Output_21"."Proba_4" > 0.0) THEN ln("DT_Output_21"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_21"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_21"."Proba_5" IS NULL OR "DT_Output_21"."Proba_5" > 0.0) THEN ln("DT_Output_21"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_21"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_21"."Proba_6" IS NULL OR "DT_Output_21"."Proba_6" > 0.0) THEN ln("DT_Output_21"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_21"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_21"."Proba_7" IS NULL OR "DT_Output_21"."Proba_7" > 0.0) THEN ln("DT_Output_21"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_21"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_21"."Proba_8" IS NULL OR "DT_Output_21"."Proba_8" > 0.0) THEN ln("DT_Output_21"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_21"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_21"."Proba_9" IS NULL OR "DT_Output_21"."Proba_9" > 0.0) THEN ln("DT_Output_21"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10)) / 32.0 AS "Score_4", 9.0 * (CASE WHEN ("DT_Output_21"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_21"."Proba_4" IS NULL OR "DT_Output_21"."Proba_4" > 0.0) THEN ln("DT_Output_21"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_21"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_21"."Proba_0" IS NULL OR "DT_Output_21"."Proba_0" > 0.0) THEN ln("DT_Output_21"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_21"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_21"."Proba_1" IS NULL OR "DT_Output_21"."Proba_1" > 0.0) THEN ln("DT_Output_21"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_21"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_21"."Proba_2" IS NULL OR "DT_Output_21"."Proba_2" > 0.0) THEN ln("DT_Output_21"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_21"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_21"."Proba_3" IS NULL OR "DT_Output_21"."Proba_3" > 0.0) THEN ln("DT_Output_21"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_21"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_21"."Proba_4" IS NULL OR "DT_Output_21"."Proba_4" > 0.0) THEN ln("DT_Output_21"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_21"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_21"."Proba_5" IS NULL OR "DT_Output_21"."Proba_5" > 0.0) THEN ln("DT_Output_21"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_21"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_21"."Proba_6" IS NULL OR "DT_Output_21"."Proba_6" > 0.0) THEN ln("DT_Output_21"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_21"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_21"."Proba_7" IS NULL OR "DT_Output_21"."Proba_7" > 0.0) THEN ln("DT_Output_21"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_21"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_21"."Proba_8" IS NULL OR "DT_Output_21"."Proba_8" > 0.0) THEN ln("DT_Output_21"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_21"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_21"."Proba_9" IS NULL OR "DT_Output_21"."Proba_9" > 0.0) THEN ln("DT_Output_21"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10) AS "Proba_4", (9.0 * (CASE WHEN ("DT_Output_21"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_21"."Proba_5" IS NULL OR "DT_Output_21"."Proba_5" > 0.0) THEN ln("DT_Output_21"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_21"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_21"."Proba_0" IS NULL OR "DT_Output_21"."Proba_0" > 0.0) THEN ln("DT_Output_21"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_21"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_21"."Proba_1" IS NULL OR "DT_Output_21"."Proba_1" > 0.0) THEN ln("DT_Output_21"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_21"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_21"."Proba_2" IS NULL OR "DT_Output_21"."Proba_2" > 0.0) THEN ln("DT_Output_21"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_21"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_21"."Proba_3" IS NULL OR "DT_Output_21"."Proba_3" > 0.0) THEN ln("DT_Output_21"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_21"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_21"."Proba_4" IS NULL OR "DT_Output_21"."Proba_4" > 0.0) THEN ln("DT_Output_21"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_21"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_21"."Proba_5" IS NULL OR "DT_Output_21"."Proba_5" > 0.0) THEN ln("DT_Output_21"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_21"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_21"."Proba_6" IS NULL OR "DT_Output_21"."Proba_6" > 0.0) THEN ln("DT_Output_21"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_21"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_21"."Proba_7" IS NULL OR "DT_Output_21"."Proba_7" > 0.0) THEN ln("DT_Output_21"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_21"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_21"."Proba_8" IS NULL OR "DT_Output_21"."Proba_8" > 0.0) THEN ln("DT_Output_21"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_21"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_21"."Proba_9" IS NULL OR "DT_Output_21"."Proba_9" > 0.0) THEN ln("DT_Output_21"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10)) / 32.0 AS "Score_5", 9.0 * (CASE WHEN ("DT_Output_21"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_21"."Proba_5" IS NULL OR "DT_Output_21"."Proba_5" > 0.0) THEN ln("DT_Output_21"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_21"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_21"."Proba_0" IS NULL OR "DT_Output_21"."Proba_0" > 0.0) THEN ln("DT_Output_21"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_21"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_21"."Proba_1" IS NULL OR "DT_Output_21"."Proba_1" > 0.0) THEN ln("DT_Output_21"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_21"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_21"."Proba_2" IS NULL OR "DT_Output_21"."Proba_2" > 0.0) THEN ln("DT_Output_21"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_21"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_21"."Proba_3" IS NULL OR "DT_Output_21"."Proba_3" > 0.0) THEN ln("DT_Output_21"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_21"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_21"."Proba_4" IS NULL OR "DT_Output_21"."Proba_4" > 0.0) THEN ln("DT_Output_21"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_21"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_21"."Proba_5" IS NULL OR "DT_Output_21"."Proba_5" > 0.0) THEN ln("DT_Output_21"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_21"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_21"."Proba_6" IS NULL OR "DT_Output_21"."Proba_6" > 0.0) THEN ln("DT_Output_21"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_21"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_21"."Proba_7" IS NULL OR "DT_Output_21"."Proba_7" > 0.0) THEN ln("DT_Output_21"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_21"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_21"."Proba_8" IS NULL OR "DT_Output_21"."Proba_8" > 0.0) THEN ln("DT_Output_21"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_21"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_21"."Proba_9" IS NULL OR "DT_Output_21"."Proba_9" > 0.0) THEN ln("DT_Output_21"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10) AS "Proba_5", (9.0 * (CASE WHEN ("DT_Output_21"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_21"."Proba_6" IS NULL OR "DT_Output_21"."Proba_6" > 0.0) THEN ln("DT_Output_21"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_21"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_21"."Proba_0" IS NULL OR "DT_Output_21"."Proba_0" > 0.0) THEN ln("DT_Output_21"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_21"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_21"."Proba_1" IS NULL OR "DT_Output_21"."Proba_1" > 0.0) THEN ln("DT_Output_21"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_21"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_21"."Proba_2" IS NULL OR "DT_Output_21"."Proba_2" > 0.0) THEN ln("DT_Output_21"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_21"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_21"."Proba_3" IS NULL OR "DT_Output_21"."Proba_3" > 0.0) THEN ln("DT_Output_21"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_21"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_21"."Proba_4" IS NULL OR "DT_Output_21"."Proba_4" > 0.0) THEN ln("DT_Output_21"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_21"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_21"."Proba_5" IS NULL OR "DT_Output_21"."Proba_5" > 0.0) THEN ln("DT_Output_21"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_21"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_21"."Proba_6" IS NULL OR "DT_Output_21"."Proba_6" > 0.0) THEN ln("DT_Output_21"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_21"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_21"."Proba_7" IS NULL OR "DT_Output_21"."Proba_7" > 0.0) THEN ln("DT_Output_21"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_21"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_21"."Proba_8" IS NULL OR "DT_Output_21"."Proba_8" > 0.0) THEN ln("DT_Output_21"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_21"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_21"."Proba_9" IS NULL OR "DT_Output_21"."Proba_9" > 0.0) THEN ln("DT_Output_21"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10)) / 32.0 AS "Score_6", 9.0 * (CASE WHEN ("DT_Output_21"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_21"."Proba_6" IS NULL OR "DT_Output_21"."Proba_6" > 0.0) THEN ln("DT_Output_21"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_21"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_21"."Proba_0" IS NULL OR "DT_Output_21"."Proba_0" > 0.0) THEN ln("DT_Output_21"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_21"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_21"."Proba_1" IS NULL OR "DT_Output_21"."Proba_1" > 0.0) THEN ln("DT_Output_21"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_21"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_21"."Proba_2" IS NULL OR "DT_Output_21"."Proba_2" > 0.0) THEN ln("DT_Output_21"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_21"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_21"."Proba_3" IS NULL OR "DT_Output_21"."Proba_3" > 0.0) THEN ln("DT_Output_21"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_21"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_21"."Proba_4" IS NULL OR "DT_Output_21"."Proba_4" > 0.0) THEN ln("DT_Output_21"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_21"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_21"."Proba_5" IS NULL OR "DT_Output_21"."Proba_5" > 0.0) THEN ln("DT_Output_21"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_21"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_21"."Proba_6" IS NULL OR "DT_Output_21"."Proba_6" > 0.0) THEN ln("DT_Output_21"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_21"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_21"."Proba_7" IS NULL OR "DT_Output_21"."Proba_7" > 0.0) THEN ln("DT_Output_21"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_21"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_21"."Proba_8" IS NULL OR "DT_Output_21"."Proba_8" > 0.0) THEN ln("DT_Output_21"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_21"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_21"."Proba_9" IS NULL OR "DT_Output_21"."Proba_9" > 0.0) THEN ln("DT_Output_21"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10) AS "Proba_6", (9.0 * (CASE WHEN ("DT_Output_21"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_21"."Proba_7" IS NULL OR "DT_Output_21"."Proba_7" > 0.0) THEN ln("DT_Output_21"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_21"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_21"."Proba_0" IS NULL OR "DT_Output_21"."Proba_0" > 0.0) THEN ln("DT_Output_21"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_21"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_21"."Proba_1" IS NULL OR "DT_Output_21"."Proba_1" > 0.0) THEN ln("DT_Output_21"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_21"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_21"."Proba_2" IS NULL OR "DT_Output_21"."Proba_2" > 0.0) THEN ln("DT_Output_21"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_21"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_21"."Proba_3" IS NULL OR "DT_Output_21"."Proba_3" > 0.0) THEN ln("DT_Output_21"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_21"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_21"."Proba_4" IS NULL OR "DT_Output_21"."Proba_4" > 0.0) THEN ln("DT_Output_21"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_21"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_21"."Proba_5" IS NULL OR "DT_Output_21"."Proba_5" > 0.0) THEN ln("DT_Output_21"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_21"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_21"."Proba_6" IS NULL OR "DT_Output_21"."Proba_6" > 0.0) THEN ln("DT_Output_21"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_21"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_21"."Proba_7" IS NULL OR "DT_Output_21"."Proba_7" > 0.0) THEN ln("DT_Output_21"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_21"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_21"."Proba_8" IS NULL OR "DT_Output_21"."Proba_8" > 0.0) THEN ln("DT_Output_21"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_21"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_21"."Proba_9" IS NULL OR "DT_Output_21"."Proba_9" > 0.0) THEN ln("DT_Output_21"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10)) / 32.0 AS "Score_7", 9.0 * (CASE WHEN ("DT_Output_21"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_21"."Proba_7" IS NULL OR "DT_Output_21"."Proba_7" > 0.0) THEN ln("DT_Output_21"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_21"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_21"."Proba_0" IS NULL OR "DT_Output_21"."Proba_0" > 0.0) THEN ln("DT_Output_21"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_21"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_21"."Proba_1" IS NULL OR "DT_Output_21"."Proba_1" > 0.0) THEN ln("DT_Output_21"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_21"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_21"."Proba_2" IS NULL OR "DT_Output_21"."Proba_2" > 0.0) THEN ln("DT_Output_21"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_21"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_21"."Proba_3" IS NULL OR "DT_Output_21"."Proba_3" > 0.0) THEN ln("DT_Output_21"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_21"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_21"."Proba_4" IS NULL OR "DT_Output_21"."Proba_4" > 0.0) THEN ln("DT_Output_21"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_21"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_21"."Proba_5" IS NULL OR "DT_Output_21"."Proba_5" > 0.0) THEN ln("DT_Output_21"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_21"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_21"."Proba_6" IS NULL OR "DT_Output_21"."Proba_6" > 0.0) THEN ln("DT_Output_21"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_21"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_21"."Proba_7" IS NULL OR "DT_Output_21"."Proba_7" > 0.0) THEN ln("DT_Output_21"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_21"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_21"."Proba_8" IS NULL OR "DT_Output_21"."Proba_8" > 0.0) THEN ln("DT_Output_21"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_21"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_21"."Proba_9" IS NULL OR "DT_Output_21"."Proba_9" > 0.0) THEN ln("DT_Output_21"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10) AS "Proba_7", (9.0 * (CASE WHEN ("DT_Output_21"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_21"."Proba_8" IS NULL OR "DT_Output_21"."Proba_8" > 0.0) THEN ln("DT_Output_21"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_21"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_21"."Proba_0" IS NULL OR "DT_Output_21"."Proba_0" > 0.0) THEN ln("DT_Output_21"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_21"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_21"."Proba_1" IS NULL OR "DT_Output_21"."Proba_1" > 0.0) THEN ln("DT_Output_21"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_21"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_21"."Proba_2" IS NULL OR "DT_Output_21"."Proba_2" > 0.0) THEN ln("DT_Output_21"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_21"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_21"."Proba_3" IS NULL OR "DT_Output_21"."Proba_3" > 0.0) THEN ln("DT_Output_21"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_21"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_21"."Proba_4" IS NULL OR "DT_Output_21"."Proba_4" > 0.0) THEN ln("DT_Output_21"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_21"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_21"."Proba_5" IS NULL OR "DT_Output_21"."Proba_5" > 0.0) THEN ln("DT_Output_21"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_21"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_21"."Proba_6" IS NULL OR "DT_Output_21"."Proba_6" > 0.0) THEN ln("DT_Output_21"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_21"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_21"."Proba_7" IS NULL OR "DT_Output_21"."Proba_7" > 0.0) THEN ln("DT_Output_21"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_21"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_21"."Proba_8" IS NULL OR "DT_Output_21"."Proba_8" > 0.0) THEN ln("DT_Output_21"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_21"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_21"."Proba_9" IS NULL OR "DT_Output_21"."Proba_9" > 0.0) THEN ln("DT_Output_21"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10)) / 32.0 AS "Score_8", 9.0 * (CASE WHEN ("DT_Output_21"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_21"."Proba_8" IS NULL OR "DT_Output_21"."Proba_8" > 0.0) THEN ln("DT_Output_21"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_21"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_21"."Proba_0" IS NULL OR "DT_Output_21"."Proba_0" > 0.0) THEN ln("DT_Output_21"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_21"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_21"."Proba_1" IS NULL OR "DT_Output_21"."Proba_1" > 0.0) THEN ln("DT_Output_21"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_21"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_21"."Proba_2" IS NULL OR "DT_Output_21"."Proba_2" > 0.0) THEN ln("DT_Output_21"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_21"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_21"."Proba_3" IS NULL OR "DT_Output_21"."Proba_3" > 0.0) THEN ln("DT_Output_21"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_21"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_21"."Proba_4" IS NULL OR "DT_Output_21"."Proba_4" > 0.0) THEN ln("DT_Output_21"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_21"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_21"."Proba_5" IS NULL OR "DT_Output_21"."Proba_5" > 0.0) THEN ln("DT_Output_21"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_21"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_21"."Proba_6" IS NULL OR "DT_Output_21"."Proba_6" > 0.0) THEN ln("DT_Output_21"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_21"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_21"."Proba_7" IS NULL OR "DT_Output_21"."Proba_7" > 0.0) THEN ln("DT_Output_21"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_21"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_21"."Proba_8" IS NULL OR "DT_Output_21"."Proba_8" > 0.0) THEN ln("DT_Output_21"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_21"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_21"."Proba_9" IS NULL OR "DT_Output_21"."Proba_9" > 0.0) THEN ln("DT_Output_21"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10) AS "Proba_8", (9.0 * (CASE WHEN ("DT_Output_21"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_21"."Proba_9" IS NULL OR "DT_Output_21"."Proba_9" > 0.0) THEN ln("DT_Output_21"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_21"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_21"."Proba_0" IS NULL OR "DT_Output_21"."Proba_0" > 0.0) THEN ln("DT_Output_21"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_21"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_21"."Proba_1" IS NULL OR "DT_Output_21"."Proba_1" > 0.0) THEN ln("DT_Output_21"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_21"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_21"."Proba_2" IS NULL OR "DT_Output_21"."Proba_2" > 0.0) THEN ln("DT_Output_21"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_21"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_21"."Proba_3" IS NULL OR "DT_Output_21"."Proba_3" > 0.0) THEN ln("DT_Output_21"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_21"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_21"."Proba_4" IS NULL OR "DT_Output_21"."Proba_4" > 0.0) THEN ln("DT_Output_21"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_21"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_21"."Proba_5" IS NULL OR "DT_Output_21"."Proba_5" > 0.0) THEN ln("DT_Output_21"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_21"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_21"."Proba_6" IS NULL OR "DT_Output_21"."Proba_6" > 0.0) THEN ln("DT_Output_21"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_21"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_21"."Proba_7" IS NULL OR "DT_Output_21"."Proba_7" > 0.0) THEN ln("DT_Output_21"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_21"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_21"."Proba_8" IS NULL OR "DT_Output_21"."Proba_8" > 0.0) THEN ln("DT_Output_21"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_21"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_21"."Proba_9" IS NULL OR "DT_Output_21"."Proba_9" > 0.0) THEN ln("DT_Output_21"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10)) / 32.0 AS "Score_9", 9.0 * (CASE WHEN ("DT_Output_21"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_21"."Proba_9" IS NULL OR "DT_Output_21"."Proba_9" > 0.0) THEN ln("DT_Output_21"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_21"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_21"."Proba_0" IS NULL OR "DT_Output_21"."Proba_0" > 0.0) THEN ln("DT_Output_21"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_21"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_21"."Proba_1" IS NULL OR "DT_Output_21"."Proba_1" > 0.0) THEN ln("DT_Output_21"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_21"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_21"."Proba_2" IS NULL OR "DT_Output_21"."Proba_2" > 0.0) THEN ln("DT_Output_21"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_21"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_21"."Proba_3" IS NULL OR "DT_Output_21"."Proba_3" > 0.0) THEN ln("DT_Output_21"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_21"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_21"."Proba_4" IS NULL OR "DT_Output_21"."Proba_4" > 0.0) THEN ln("DT_Output_21"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_21"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_21"."Proba_5" IS NULL OR "DT_Output_21"."Proba_5" > 0.0) THEN ln("DT_Output_21"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_21"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_21"."Proba_6" IS NULL OR "DT_Output_21"."Proba_6" > 0.0) THEN ln("DT_Output_21"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_21"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_21"."Proba_7" IS NULL OR "DT_Output_21"."Proba_7" > 0.0) THEN ln("DT_Output_21"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_21"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_21"."Proba_8" IS NULL OR "DT_Output_21"."Proba_8" > 0.0) THEN ln("DT_Output_21"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_21"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_21"."Proba_9" IS NULL OR "DT_Output_21"."Proba_9" > 0.0) THEN ln("DT_Output_21"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10) AS "Proba_9" 
FROM "DT_Output_21"), 
"DT_node_lookup_22" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_30 <= -1.555469036102295) THEN 1 ELSE 2 END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_22" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Proba_0" AS "Proba_0", "Values"."LogProba_0" AS "LogProba_0", "Values"."Proba_1" AS "Proba_1", "Values"."LogProba_1" AS "LogProba_1", "Values"."Proba_2" AS "Proba_2", "Values"."LogProba_2" AS "LogProba_2", "Values"."Proba_3" AS "Proba_3", "Values"."LogProba_3" AS "LogProba_3", "Values"."Proba_4" AS "Proba_4", "Values"."LogProba_4" AS "LogProba_4", "Values"."Proba_5" AS "Proba_5", "Values"."LogProba_5" AS "LogProba_5", "Values"."Proba_6" AS "Proba_6", "Values"."LogProba_6" AS "LogProba_6", "Values"."Proba_7" AS "Proba_7", "Values"."LogProba_7" AS "LogProba_7", "Values"."Proba_8" AS "Proba_8", "Values"."LogProba_8" AS "LogProba_8", "Values"."Proba_9" AS "Proba_9", "Values"."LogProba_9" AS "LogProba_9", "Values"."Decision" AS "Decision", "Values"."DecisionProba" AS "DecisionProba" 
FROM (SELECT 1 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 246 AS count, 1 AS depth, 0 AS parent_id, 0.9969910937292115 AS "Proba_0", -0.0030134421302 AS "LogProba_0", 0.0003761132845959663 AS "Proba_1", -7.88562017113 AS "LogProba_1", 0.0003761132796109254 AS "Proba_2", -7.88562018439 AS "LogProba_2", 0.0003761132849152747 AS "Proba_3", -7.88562017028 AS "LogProba_3", 0.0003761132823363117 AS "Proba_4", -7.88562017714 AS "LogProba_4", 0.0003761132849079606 AS "Proba_5", -7.8856201703 AS "LogProba_5", 0.0003761132849107461 AS "Proba_6", -7.8856201703 AS "LogProba_6", 0.0003761132845959658 AS "Proba_7", -7.88562017113 AS "LogProba_7", 0.0 AS "Proba_8", -BINARY_FLOAT_INFINITY AS "LogProba_8", 0.0003761132849152742 AS "Proba_9", -7.88562017028 AS "LogProba_9", 0 AS "Decision", 0.996991093729 AS "DecisionProba" FROM DUAL UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1191 AS count, 1 AS depth, 0 AS parent_id, 8.08926033238855e-11 AS "Proba_0", -23.2378987259 AS "LogProba_0", 0.11110645208931418 AS "Proba_1", -2.19726650941 AS "LogProba_1", 0.11110645217076306 AS "Proba_2", -2.19726650868 AS "LogProba_2", 0.11110645217017155 AS "Proba_3", -2.19726650868 AS "LogProba_3", 0.11110645217045928 AS "Proba_4", -2.19726650868 AS "LogProba_4", 0.11110645217017223 AS "Proba_5", -2.19726650868 AS "LogProba_5", 0.11110645217017204 AS "Proba_6", -2.19726650868 AS "LogProba_6", 0.11110645208931444 AS "Proba_7", -2.19726650941 AS "LogProba_7", 0.11114838271856899 AS "Proba_8", -2.19688918912 AS "LogProba_8", 0.11110645217017162 AS "Proba_9", -2.19726650868 AS "LogProba_9", 8 AS "Decision", 0.111148382719 AS "DecisionProba" FROM DUAL) "Values"), 
"DT_Output_22" AS 
(SELECT "DT_node_lookup_22"."KEY" AS "KEY", "DT_node_lookup_22".node_id_2 AS node_id_2, "DT_node_data_22".node_id AS node_id, "DT_node_data_22".feature AS feature, "DT_node_data_22".threshold AS threshold, "DT_node_data_22".count AS count, "DT_node_data_22".depth AS depth, "DT_node_data_22".parent_id AS parent_id, "DT_node_data_22"."Proba_0" AS "Proba_0", "DT_node_data_22"."LogProba_0" AS "LogProba_0", "DT_node_data_22"."Proba_1" AS "Proba_1", "DT_node_data_22"."LogProba_1" AS "LogProba_1", "DT_node_data_22"."Proba_2" AS "Proba_2", "DT_node_data_22"."LogProba_2" AS "LogProba_2", "DT_node_data_22"."Proba_3" AS "Proba_3", "DT_node_data_22"."LogProba_3" AS "LogProba_3", "DT_node_data_22"."Proba_4" AS "Proba_4", "DT_node_data_22"."LogProba_4" AS "LogProba_4", "DT_node_data_22"."Proba_5" AS "Proba_5", "DT_node_data_22"."LogProba_5" AS "LogProba_5", "DT_node_data_22"."Proba_6" AS "Proba_6", "DT_node_data_22"."LogProba_6" AS "LogProba_6", "DT_node_data_22"."Proba_7" AS "Proba_7", "DT_node_data_22"."LogProba_7" AS "LogProba_7", "DT_node_data_22"."Proba_8" AS "Proba_8", "DT_node_data_22"."LogProba_8" AS "LogProba_8", "DT_node_data_22"."Proba_9" AS "Proba_9", "DT_node_data_22"."LogProba_9" AS "LogProba_9", "DT_node_data_22"."Decision" AS "Decision", "DT_node_data_22"."DecisionProba" AS "DecisionProba" 
FROM "DT_node_lookup_22" LEFT OUTER JOIN "DT_node_data_22" ON "DT_node_lookup_22".node_id_2 = "DT_node_data_22".node_id), 
"AdaBoost_Estim_22" AS 
(SELECT "DT_Output_22"."KEY" AS "KEY", (9.0 * (CASE WHEN ("DT_Output_22"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_22"."Proba_0" IS NULL OR "DT_Output_22"."Proba_0" > 0.0) THEN ln("DT_Output_22"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_22"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_22"."Proba_0" IS NULL OR "DT_Output_22"."Proba_0" > 0.0) THEN ln("DT_Output_22"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_22"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_22"."Proba_1" IS NULL OR "DT_Output_22"."Proba_1" > 0.0) THEN ln("DT_Output_22"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_22"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_22"."Proba_2" IS NULL OR "DT_Output_22"."Proba_2" > 0.0) THEN ln("DT_Output_22"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_22"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_22"."Proba_3" IS NULL OR "DT_Output_22"."Proba_3" > 0.0) THEN ln("DT_Output_22"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_22"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_22"."Proba_4" IS NULL OR "DT_Output_22"."Proba_4" > 0.0) THEN ln("DT_Output_22"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_22"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_22"."Proba_5" IS NULL OR "DT_Output_22"."Proba_5" > 0.0) THEN ln("DT_Output_22"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_22"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_22"."Proba_6" IS NULL OR "DT_Output_22"."Proba_6" > 0.0) THEN ln("DT_Output_22"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_22"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_22"."Proba_7" IS NULL OR "DT_Output_22"."Proba_7" > 0.0) THEN ln("DT_Output_22"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_22"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_22"."Proba_8" IS NULL OR "DT_Output_22"."Proba_8" > 0.0) THEN ln("DT_Output_22"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_22"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_22"."Proba_9" IS NULL OR "DT_Output_22"."Proba_9" > 0.0) THEN ln("DT_Output_22"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10)) / 32.0 AS "Score_0", 9.0 * (CASE WHEN ("DT_Output_22"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_22"."Proba_0" IS NULL OR "DT_Output_22"."Proba_0" > 0.0) THEN ln("DT_Output_22"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_22"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_22"."Proba_0" IS NULL OR "DT_Output_22"."Proba_0" > 0.0) THEN ln("DT_Output_22"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_22"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_22"."Proba_1" IS NULL OR "DT_Output_22"."Proba_1" > 0.0) THEN ln("DT_Output_22"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_22"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_22"."Proba_2" IS NULL OR "DT_Output_22"."Proba_2" > 0.0) THEN ln("DT_Output_22"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_22"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_22"."Proba_3" IS NULL OR "DT_Output_22"."Proba_3" > 0.0) THEN ln("DT_Output_22"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_22"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_22"."Proba_4" IS NULL OR "DT_Output_22"."Proba_4" > 0.0) THEN ln("DT_Output_22"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_22"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_22"."Proba_5" IS NULL OR "DT_Output_22"."Proba_5" > 0.0) THEN ln("DT_Output_22"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_22"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_22"."Proba_6" IS NULL OR "DT_Output_22"."Proba_6" > 0.0) THEN ln("DT_Output_22"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_22"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_22"."Proba_7" IS NULL OR "DT_Output_22"."Proba_7" > 0.0) THEN ln("DT_Output_22"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_22"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_22"."Proba_8" IS NULL OR "DT_Output_22"."Proba_8" > 0.0) THEN ln("DT_Output_22"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_22"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_22"."Proba_9" IS NULL OR "DT_Output_22"."Proba_9" > 0.0) THEN ln("DT_Output_22"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10) AS "Proba_0", (9.0 * (CASE WHEN ("DT_Output_22"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_22"."Proba_1" IS NULL OR "DT_Output_22"."Proba_1" > 0.0) THEN ln("DT_Output_22"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_22"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_22"."Proba_0" IS NULL OR "DT_Output_22"."Proba_0" > 0.0) THEN ln("DT_Output_22"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_22"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_22"."Proba_1" IS NULL OR "DT_Output_22"."Proba_1" > 0.0) THEN ln("DT_Output_22"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_22"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_22"."Proba_2" IS NULL OR "DT_Output_22"."Proba_2" > 0.0) THEN ln("DT_Output_22"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_22"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_22"."Proba_3" IS NULL OR "DT_Output_22"."Proba_3" > 0.0) THEN ln("DT_Output_22"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_22"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_22"."Proba_4" IS NULL OR "DT_Output_22"."Proba_4" > 0.0) THEN ln("DT_Output_22"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_22"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_22"."Proba_5" IS NULL OR "DT_Output_22"."Proba_5" > 0.0) THEN ln("DT_Output_22"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_22"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_22"."Proba_6" IS NULL OR "DT_Output_22"."Proba_6" > 0.0) THEN ln("DT_Output_22"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_22"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_22"."Proba_7" IS NULL OR "DT_Output_22"."Proba_7" > 0.0) THEN ln("DT_Output_22"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_22"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_22"."Proba_8" IS NULL OR "DT_Output_22"."Proba_8" > 0.0) THEN ln("DT_Output_22"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_22"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_22"."Proba_9" IS NULL OR "DT_Output_22"."Proba_9" > 0.0) THEN ln("DT_Output_22"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10)) / 32.0 AS "Score_1", 9.0 * (CASE WHEN ("DT_Output_22"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_22"."Proba_1" IS NULL OR "DT_Output_22"."Proba_1" > 0.0) THEN ln("DT_Output_22"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_22"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_22"."Proba_0" IS NULL OR "DT_Output_22"."Proba_0" > 0.0) THEN ln("DT_Output_22"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_22"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_22"."Proba_1" IS NULL OR "DT_Output_22"."Proba_1" > 0.0) THEN ln("DT_Output_22"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_22"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_22"."Proba_2" IS NULL OR "DT_Output_22"."Proba_2" > 0.0) THEN ln("DT_Output_22"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_22"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_22"."Proba_3" IS NULL OR "DT_Output_22"."Proba_3" > 0.0) THEN ln("DT_Output_22"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_22"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_22"."Proba_4" IS NULL OR "DT_Output_22"."Proba_4" > 0.0) THEN ln("DT_Output_22"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_22"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_22"."Proba_5" IS NULL OR "DT_Output_22"."Proba_5" > 0.0) THEN ln("DT_Output_22"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_22"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_22"."Proba_6" IS NULL OR "DT_Output_22"."Proba_6" > 0.0) THEN ln("DT_Output_22"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_22"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_22"."Proba_7" IS NULL OR "DT_Output_22"."Proba_7" > 0.0) THEN ln("DT_Output_22"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_22"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_22"."Proba_8" IS NULL OR "DT_Output_22"."Proba_8" > 0.0) THEN ln("DT_Output_22"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_22"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_22"."Proba_9" IS NULL OR "DT_Output_22"."Proba_9" > 0.0) THEN ln("DT_Output_22"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10) AS "Proba_1", (9.0 * (CASE WHEN ("DT_Output_22"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_22"."Proba_2" IS NULL OR "DT_Output_22"."Proba_2" > 0.0) THEN ln("DT_Output_22"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_22"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_22"."Proba_0" IS NULL OR "DT_Output_22"."Proba_0" > 0.0) THEN ln("DT_Output_22"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_22"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_22"."Proba_1" IS NULL OR "DT_Output_22"."Proba_1" > 0.0) THEN ln("DT_Output_22"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_22"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_22"."Proba_2" IS NULL OR "DT_Output_22"."Proba_2" > 0.0) THEN ln("DT_Output_22"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_22"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_22"."Proba_3" IS NULL OR "DT_Output_22"."Proba_3" > 0.0) THEN ln("DT_Output_22"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_22"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_22"."Proba_4" IS NULL OR "DT_Output_22"."Proba_4" > 0.0) THEN ln("DT_Output_22"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_22"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_22"."Proba_5" IS NULL OR "DT_Output_22"."Proba_5" > 0.0) THEN ln("DT_Output_22"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_22"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_22"."Proba_6" IS NULL OR "DT_Output_22"."Proba_6" > 0.0) THEN ln("DT_Output_22"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_22"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_22"."Proba_7" IS NULL OR "DT_Output_22"."Proba_7" > 0.0) THEN ln("DT_Output_22"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_22"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_22"."Proba_8" IS NULL OR "DT_Output_22"."Proba_8" > 0.0) THEN ln("DT_Output_22"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_22"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_22"."Proba_9" IS NULL OR "DT_Output_22"."Proba_9" > 0.0) THEN ln("DT_Output_22"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10)) / 32.0 AS "Score_2", 9.0 * (CASE WHEN ("DT_Output_22"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_22"."Proba_2" IS NULL OR "DT_Output_22"."Proba_2" > 0.0) THEN ln("DT_Output_22"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_22"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_22"."Proba_0" IS NULL OR "DT_Output_22"."Proba_0" > 0.0) THEN ln("DT_Output_22"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_22"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_22"."Proba_1" IS NULL OR "DT_Output_22"."Proba_1" > 0.0) THEN ln("DT_Output_22"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_22"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_22"."Proba_2" IS NULL OR "DT_Output_22"."Proba_2" > 0.0) THEN ln("DT_Output_22"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_22"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_22"."Proba_3" IS NULL OR "DT_Output_22"."Proba_3" > 0.0) THEN ln("DT_Output_22"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_22"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_22"."Proba_4" IS NULL OR "DT_Output_22"."Proba_4" > 0.0) THEN ln("DT_Output_22"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_22"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_22"."Proba_5" IS NULL OR "DT_Output_22"."Proba_5" > 0.0) THEN ln("DT_Output_22"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_22"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_22"."Proba_6" IS NULL OR "DT_Output_22"."Proba_6" > 0.0) THEN ln("DT_Output_22"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_22"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_22"."Proba_7" IS NULL OR "DT_Output_22"."Proba_7" > 0.0) THEN ln("DT_Output_22"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_22"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_22"."Proba_8" IS NULL OR "DT_Output_22"."Proba_8" > 0.0) THEN ln("DT_Output_22"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_22"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_22"."Proba_9" IS NULL OR "DT_Output_22"."Proba_9" > 0.0) THEN ln("DT_Output_22"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10) AS "Proba_2", (9.0 * (CASE WHEN ("DT_Output_22"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_22"."Proba_3" IS NULL OR "DT_Output_22"."Proba_3" > 0.0) THEN ln("DT_Output_22"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_22"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_22"."Proba_0" IS NULL OR "DT_Output_22"."Proba_0" > 0.0) THEN ln("DT_Output_22"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_22"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_22"."Proba_1" IS NULL OR "DT_Output_22"."Proba_1" > 0.0) THEN ln("DT_Output_22"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_22"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_22"."Proba_2" IS NULL OR "DT_Output_22"."Proba_2" > 0.0) THEN ln("DT_Output_22"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_22"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_22"."Proba_3" IS NULL OR "DT_Output_22"."Proba_3" > 0.0) THEN ln("DT_Output_22"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_22"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_22"."Proba_4" IS NULL OR "DT_Output_22"."Proba_4" > 0.0) THEN ln("DT_Output_22"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_22"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_22"."Proba_5" IS NULL OR "DT_Output_22"."Proba_5" > 0.0) THEN ln("DT_Output_22"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_22"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_22"."Proba_6" IS NULL OR "DT_Output_22"."Proba_6" > 0.0) THEN ln("DT_Output_22"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_22"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_22"."Proba_7" IS NULL OR "DT_Output_22"."Proba_7" > 0.0) THEN ln("DT_Output_22"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_22"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_22"."Proba_8" IS NULL OR "DT_Output_22"."Proba_8" > 0.0) THEN ln("DT_Output_22"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_22"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_22"."Proba_9" IS NULL OR "DT_Output_22"."Proba_9" > 0.0) THEN ln("DT_Output_22"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10)) / 32.0 AS "Score_3", 9.0 * (CASE WHEN ("DT_Output_22"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_22"."Proba_3" IS NULL OR "DT_Output_22"."Proba_3" > 0.0) THEN ln("DT_Output_22"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_22"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_22"."Proba_0" IS NULL OR "DT_Output_22"."Proba_0" > 0.0) THEN ln("DT_Output_22"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_22"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_22"."Proba_1" IS NULL OR "DT_Output_22"."Proba_1" > 0.0) THEN ln("DT_Output_22"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_22"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_22"."Proba_2" IS NULL OR "DT_Output_22"."Proba_2" > 0.0) THEN ln("DT_Output_22"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_22"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_22"."Proba_3" IS NULL OR "DT_Output_22"."Proba_3" > 0.0) THEN ln("DT_Output_22"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_22"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_22"."Proba_4" IS NULL OR "DT_Output_22"."Proba_4" > 0.0) THEN ln("DT_Output_22"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_22"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_22"."Proba_5" IS NULL OR "DT_Output_22"."Proba_5" > 0.0) THEN ln("DT_Output_22"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_22"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_22"."Proba_6" IS NULL OR "DT_Output_22"."Proba_6" > 0.0) THEN ln("DT_Output_22"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_22"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_22"."Proba_7" IS NULL OR "DT_Output_22"."Proba_7" > 0.0) THEN ln("DT_Output_22"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_22"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_22"."Proba_8" IS NULL OR "DT_Output_22"."Proba_8" > 0.0) THEN ln("DT_Output_22"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_22"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_22"."Proba_9" IS NULL OR "DT_Output_22"."Proba_9" > 0.0) THEN ln("DT_Output_22"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10) AS "Proba_3", (9.0 * (CASE WHEN ("DT_Output_22"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_22"."Proba_4" IS NULL OR "DT_Output_22"."Proba_4" > 0.0) THEN ln("DT_Output_22"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_22"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_22"."Proba_0" IS NULL OR "DT_Output_22"."Proba_0" > 0.0) THEN ln("DT_Output_22"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_22"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_22"."Proba_1" IS NULL OR "DT_Output_22"."Proba_1" > 0.0) THEN ln("DT_Output_22"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_22"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_22"."Proba_2" IS NULL OR "DT_Output_22"."Proba_2" > 0.0) THEN ln("DT_Output_22"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_22"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_22"."Proba_3" IS NULL OR "DT_Output_22"."Proba_3" > 0.0) THEN ln("DT_Output_22"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_22"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_22"."Proba_4" IS NULL OR "DT_Output_22"."Proba_4" > 0.0) THEN ln("DT_Output_22"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_22"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_22"."Proba_5" IS NULL OR "DT_Output_22"."Proba_5" > 0.0) THEN ln("DT_Output_22"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_22"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_22"."Proba_6" IS NULL OR "DT_Output_22"."Proba_6" > 0.0) THEN ln("DT_Output_22"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_22"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_22"."Proba_7" IS NULL OR "DT_Output_22"."Proba_7" > 0.0) THEN ln("DT_Output_22"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_22"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_22"."Proba_8" IS NULL OR "DT_Output_22"."Proba_8" > 0.0) THEN ln("DT_Output_22"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_22"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_22"."Proba_9" IS NULL OR "DT_Output_22"."Proba_9" > 0.0) THEN ln("DT_Output_22"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10)) / 32.0 AS "Score_4", 9.0 * (CASE WHEN ("DT_Output_22"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_22"."Proba_4" IS NULL OR "DT_Output_22"."Proba_4" > 0.0) THEN ln("DT_Output_22"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_22"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_22"."Proba_0" IS NULL OR "DT_Output_22"."Proba_0" > 0.0) THEN ln("DT_Output_22"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_22"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_22"."Proba_1" IS NULL OR "DT_Output_22"."Proba_1" > 0.0) THEN ln("DT_Output_22"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_22"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_22"."Proba_2" IS NULL OR "DT_Output_22"."Proba_2" > 0.0) THEN ln("DT_Output_22"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_22"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_22"."Proba_3" IS NULL OR "DT_Output_22"."Proba_3" > 0.0) THEN ln("DT_Output_22"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_22"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_22"."Proba_4" IS NULL OR "DT_Output_22"."Proba_4" > 0.0) THEN ln("DT_Output_22"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_22"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_22"."Proba_5" IS NULL OR "DT_Output_22"."Proba_5" > 0.0) THEN ln("DT_Output_22"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_22"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_22"."Proba_6" IS NULL OR "DT_Output_22"."Proba_6" > 0.0) THEN ln("DT_Output_22"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_22"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_22"."Proba_7" IS NULL OR "DT_Output_22"."Proba_7" > 0.0) THEN ln("DT_Output_22"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_22"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_22"."Proba_8" IS NULL OR "DT_Output_22"."Proba_8" > 0.0) THEN ln("DT_Output_22"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_22"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_22"."Proba_9" IS NULL OR "DT_Output_22"."Proba_9" > 0.0) THEN ln("DT_Output_22"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10) AS "Proba_4", (9.0 * (CASE WHEN ("DT_Output_22"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_22"."Proba_5" IS NULL OR "DT_Output_22"."Proba_5" > 0.0) THEN ln("DT_Output_22"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_22"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_22"."Proba_0" IS NULL OR "DT_Output_22"."Proba_0" > 0.0) THEN ln("DT_Output_22"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_22"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_22"."Proba_1" IS NULL OR "DT_Output_22"."Proba_1" > 0.0) THEN ln("DT_Output_22"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_22"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_22"."Proba_2" IS NULL OR "DT_Output_22"."Proba_2" > 0.0) THEN ln("DT_Output_22"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_22"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_22"."Proba_3" IS NULL OR "DT_Output_22"."Proba_3" > 0.0) THEN ln("DT_Output_22"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_22"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_22"."Proba_4" IS NULL OR "DT_Output_22"."Proba_4" > 0.0) THEN ln("DT_Output_22"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_22"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_22"."Proba_5" IS NULL OR "DT_Output_22"."Proba_5" > 0.0) THEN ln("DT_Output_22"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_22"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_22"."Proba_6" IS NULL OR "DT_Output_22"."Proba_6" > 0.0) THEN ln("DT_Output_22"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_22"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_22"."Proba_7" IS NULL OR "DT_Output_22"."Proba_7" > 0.0) THEN ln("DT_Output_22"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_22"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_22"."Proba_8" IS NULL OR "DT_Output_22"."Proba_8" > 0.0) THEN ln("DT_Output_22"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_22"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_22"."Proba_9" IS NULL OR "DT_Output_22"."Proba_9" > 0.0) THEN ln("DT_Output_22"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10)) / 32.0 AS "Score_5", 9.0 * (CASE WHEN ("DT_Output_22"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_22"."Proba_5" IS NULL OR "DT_Output_22"."Proba_5" > 0.0) THEN ln("DT_Output_22"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_22"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_22"."Proba_0" IS NULL OR "DT_Output_22"."Proba_0" > 0.0) THEN ln("DT_Output_22"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_22"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_22"."Proba_1" IS NULL OR "DT_Output_22"."Proba_1" > 0.0) THEN ln("DT_Output_22"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_22"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_22"."Proba_2" IS NULL OR "DT_Output_22"."Proba_2" > 0.0) THEN ln("DT_Output_22"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_22"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_22"."Proba_3" IS NULL OR "DT_Output_22"."Proba_3" > 0.0) THEN ln("DT_Output_22"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_22"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_22"."Proba_4" IS NULL OR "DT_Output_22"."Proba_4" > 0.0) THEN ln("DT_Output_22"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_22"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_22"."Proba_5" IS NULL OR "DT_Output_22"."Proba_5" > 0.0) THEN ln("DT_Output_22"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_22"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_22"."Proba_6" IS NULL OR "DT_Output_22"."Proba_6" > 0.0) THEN ln("DT_Output_22"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_22"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_22"."Proba_7" IS NULL OR "DT_Output_22"."Proba_7" > 0.0) THEN ln("DT_Output_22"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_22"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_22"."Proba_8" IS NULL OR "DT_Output_22"."Proba_8" > 0.0) THEN ln("DT_Output_22"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_22"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_22"."Proba_9" IS NULL OR "DT_Output_22"."Proba_9" > 0.0) THEN ln("DT_Output_22"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10) AS "Proba_5", (9.0 * (CASE WHEN ("DT_Output_22"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_22"."Proba_6" IS NULL OR "DT_Output_22"."Proba_6" > 0.0) THEN ln("DT_Output_22"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_22"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_22"."Proba_0" IS NULL OR "DT_Output_22"."Proba_0" > 0.0) THEN ln("DT_Output_22"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_22"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_22"."Proba_1" IS NULL OR "DT_Output_22"."Proba_1" > 0.0) THEN ln("DT_Output_22"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_22"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_22"."Proba_2" IS NULL OR "DT_Output_22"."Proba_2" > 0.0) THEN ln("DT_Output_22"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_22"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_22"."Proba_3" IS NULL OR "DT_Output_22"."Proba_3" > 0.0) THEN ln("DT_Output_22"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_22"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_22"."Proba_4" IS NULL OR "DT_Output_22"."Proba_4" > 0.0) THEN ln("DT_Output_22"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_22"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_22"."Proba_5" IS NULL OR "DT_Output_22"."Proba_5" > 0.0) THEN ln("DT_Output_22"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_22"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_22"."Proba_6" IS NULL OR "DT_Output_22"."Proba_6" > 0.0) THEN ln("DT_Output_22"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_22"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_22"."Proba_7" IS NULL OR "DT_Output_22"."Proba_7" > 0.0) THEN ln("DT_Output_22"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_22"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_22"."Proba_8" IS NULL OR "DT_Output_22"."Proba_8" > 0.0) THEN ln("DT_Output_22"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_22"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_22"."Proba_9" IS NULL OR "DT_Output_22"."Proba_9" > 0.0) THEN ln("DT_Output_22"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10)) / 32.0 AS "Score_6", 9.0 * (CASE WHEN ("DT_Output_22"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_22"."Proba_6" IS NULL OR "DT_Output_22"."Proba_6" > 0.0) THEN ln("DT_Output_22"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_22"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_22"."Proba_0" IS NULL OR "DT_Output_22"."Proba_0" > 0.0) THEN ln("DT_Output_22"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_22"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_22"."Proba_1" IS NULL OR "DT_Output_22"."Proba_1" > 0.0) THEN ln("DT_Output_22"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_22"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_22"."Proba_2" IS NULL OR "DT_Output_22"."Proba_2" > 0.0) THEN ln("DT_Output_22"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_22"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_22"."Proba_3" IS NULL OR "DT_Output_22"."Proba_3" > 0.0) THEN ln("DT_Output_22"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_22"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_22"."Proba_4" IS NULL OR "DT_Output_22"."Proba_4" > 0.0) THEN ln("DT_Output_22"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_22"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_22"."Proba_5" IS NULL OR "DT_Output_22"."Proba_5" > 0.0) THEN ln("DT_Output_22"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_22"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_22"."Proba_6" IS NULL OR "DT_Output_22"."Proba_6" > 0.0) THEN ln("DT_Output_22"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_22"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_22"."Proba_7" IS NULL OR "DT_Output_22"."Proba_7" > 0.0) THEN ln("DT_Output_22"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_22"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_22"."Proba_8" IS NULL OR "DT_Output_22"."Proba_8" > 0.0) THEN ln("DT_Output_22"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_22"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_22"."Proba_9" IS NULL OR "DT_Output_22"."Proba_9" > 0.0) THEN ln("DT_Output_22"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10) AS "Proba_6", (9.0 * (CASE WHEN ("DT_Output_22"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_22"."Proba_7" IS NULL OR "DT_Output_22"."Proba_7" > 0.0) THEN ln("DT_Output_22"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_22"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_22"."Proba_0" IS NULL OR "DT_Output_22"."Proba_0" > 0.0) THEN ln("DT_Output_22"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_22"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_22"."Proba_1" IS NULL OR "DT_Output_22"."Proba_1" > 0.0) THEN ln("DT_Output_22"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_22"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_22"."Proba_2" IS NULL OR "DT_Output_22"."Proba_2" > 0.0) THEN ln("DT_Output_22"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_22"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_22"."Proba_3" IS NULL OR "DT_Output_22"."Proba_3" > 0.0) THEN ln("DT_Output_22"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_22"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_22"."Proba_4" IS NULL OR "DT_Output_22"."Proba_4" > 0.0) THEN ln("DT_Output_22"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_22"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_22"."Proba_5" IS NULL OR "DT_Output_22"."Proba_5" > 0.0) THEN ln("DT_Output_22"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_22"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_22"."Proba_6" IS NULL OR "DT_Output_22"."Proba_6" > 0.0) THEN ln("DT_Output_22"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_22"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_22"."Proba_7" IS NULL OR "DT_Output_22"."Proba_7" > 0.0) THEN ln("DT_Output_22"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_22"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_22"."Proba_8" IS NULL OR "DT_Output_22"."Proba_8" > 0.0) THEN ln("DT_Output_22"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_22"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_22"."Proba_9" IS NULL OR "DT_Output_22"."Proba_9" > 0.0) THEN ln("DT_Output_22"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10)) / 32.0 AS "Score_7", 9.0 * (CASE WHEN ("DT_Output_22"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_22"."Proba_7" IS NULL OR "DT_Output_22"."Proba_7" > 0.0) THEN ln("DT_Output_22"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_22"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_22"."Proba_0" IS NULL OR "DT_Output_22"."Proba_0" > 0.0) THEN ln("DT_Output_22"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_22"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_22"."Proba_1" IS NULL OR "DT_Output_22"."Proba_1" > 0.0) THEN ln("DT_Output_22"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_22"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_22"."Proba_2" IS NULL OR "DT_Output_22"."Proba_2" > 0.0) THEN ln("DT_Output_22"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_22"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_22"."Proba_3" IS NULL OR "DT_Output_22"."Proba_3" > 0.0) THEN ln("DT_Output_22"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_22"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_22"."Proba_4" IS NULL OR "DT_Output_22"."Proba_4" > 0.0) THEN ln("DT_Output_22"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_22"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_22"."Proba_5" IS NULL OR "DT_Output_22"."Proba_5" > 0.0) THEN ln("DT_Output_22"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_22"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_22"."Proba_6" IS NULL OR "DT_Output_22"."Proba_6" > 0.0) THEN ln("DT_Output_22"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_22"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_22"."Proba_7" IS NULL OR "DT_Output_22"."Proba_7" > 0.0) THEN ln("DT_Output_22"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_22"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_22"."Proba_8" IS NULL OR "DT_Output_22"."Proba_8" > 0.0) THEN ln("DT_Output_22"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_22"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_22"."Proba_9" IS NULL OR "DT_Output_22"."Proba_9" > 0.0) THEN ln("DT_Output_22"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10) AS "Proba_7", (9.0 * (CASE WHEN ("DT_Output_22"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_22"."Proba_8" IS NULL OR "DT_Output_22"."Proba_8" > 0.0) THEN ln("DT_Output_22"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_22"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_22"."Proba_0" IS NULL OR "DT_Output_22"."Proba_0" > 0.0) THEN ln("DT_Output_22"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_22"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_22"."Proba_1" IS NULL OR "DT_Output_22"."Proba_1" > 0.0) THEN ln("DT_Output_22"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_22"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_22"."Proba_2" IS NULL OR "DT_Output_22"."Proba_2" > 0.0) THEN ln("DT_Output_22"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_22"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_22"."Proba_3" IS NULL OR "DT_Output_22"."Proba_3" > 0.0) THEN ln("DT_Output_22"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_22"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_22"."Proba_4" IS NULL OR "DT_Output_22"."Proba_4" > 0.0) THEN ln("DT_Output_22"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_22"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_22"."Proba_5" IS NULL OR "DT_Output_22"."Proba_5" > 0.0) THEN ln("DT_Output_22"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_22"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_22"."Proba_6" IS NULL OR "DT_Output_22"."Proba_6" > 0.0) THEN ln("DT_Output_22"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_22"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_22"."Proba_7" IS NULL OR "DT_Output_22"."Proba_7" > 0.0) THEN ln("DT_Output_22"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_22"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_22"."Proba_8" IS NULL OR "DT_Output_22"."Proba_8" > 0.0) THEN ln("DT_Output_22"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_22"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_22"."Proba_9" IS NULL OR "DT_Output_22"."Proba_9" > 0.0) THEN ln("DT_Output_22"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10)) / 32.0 AS "Score_8", 9.0 * (CASE WHEN ("DT_Output_22"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_22"."Proba_8" IS NULL OR "DT_Output_22"."Proba_8" > 0.0) THEN ln("DT_Output_22"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_22"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_22"."Proba_0" IS NULL OR "DT_Output_22"."Proba_0" > 0.0) THEN ln("DT_Output_22"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_22"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_22"."Proba_1" IS NULL OR "DT_Output_22"."Proba_1" > 0.0) THEN ln("DT_Output_22"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_22"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_22"."Proba_2" IS NULL OR "DT_Output_22"."Proba_2" > 0.0) THEN ln("DT_Output_22"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_22"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_22"."Proba_3" IS NULL OR "DT_Output_22"."Proba_3" > 0.0) THEN ln("DT_Output_22"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_22"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_22"."Proba_4" IS NULL OR "DT_Output_22"."Proba_4" > 0.0) THEN ln("DT_Output_22"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_22"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_22"."Proba_5" IS NULL OR "DT_Output_22"."Proba_5" > 0.0) THEN ln("DT_Output_22"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_22"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_22"."Proba_6" IS NULL OR "DT_Output_22"."Proba_6" > 0.0) THEN ln("DT_Output_22"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_22"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_22"."Proba_7" IS NULL OR "DT_Output_22"."Proba_7" > 0.0) THEN ln("DT_Output_22"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_22"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_22"."Proba_8" IS NULL OR "DT_Output_22"."Proba_8" > 0.0) THEN ln("DT_Output_22"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_22"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_22"."Proba_9" IS NULL OR "DT_Output_22"."Proba_9" > 0.0) THEN ln("DT_Output_22"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10) AS "Proba_8", (9.0 * (CASE WHEN ("DT_Output_22"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_22"."Proba_9" IS NULL OR "DT_Output_22"."Proba_9" > 0.0) THEN ln("DT_Output_22"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_22"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_22"."Proba_0" IS NULL OR "DT_Output_22"."Proba_0" > 0.0) THEN ln("DT_Output_22"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_22"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_22"."Proba_1" IS NULL OR "DT_Output_22"."Proba_1" > 0.0) THEN ln("DT_Output_22"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_22"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_22"."Proba_2" IS NULL OR "DT_Output_22"."Proba_2" > 0.0) THEN ln("DT_Output_22"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_22"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_22"."Proba_3" IS NULL OR "DT_Output_22"."Proba_3" > 0.0) THEN ln("DT_Output_22"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_22"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_22"."Proba_4" IS NULL OR "DT_Output_22"."Proba_4" > 0.0) THEN ln("DT_Output_22"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_22"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_22"."Proba_5" IS NULL OR "DT_Output_22"."Proba_5" > 0.0) THEN ln("DT_Output_22"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_22"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_22"."Proba_6" IS NULL OR "DT_Output_22"."Proba_6" > 0.0) THEN ln("DT_Output_22"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_22"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_22"."Proba_7" IS NULL OR "DT_Output_22"."Proba_7" > 0.0) THEN ln("DT_Output_22"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_22"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_22"."Proba_8" IS NULL OR "DT_Output_22"."Proba_8" > 0.0) THEN ln("DT_Output_22"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_22"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_22"."Proba_9" IS NULL OR "DT_Output_22"."Proba_9" > 0.0) THEN ln("DT_Output_22"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10)) / 32.0 AS "Score_9", 9.0 * (CASE WHEN ("DT_Output_22"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_22"."Proba_9" IS NULL OR "DT_Output_22"."Proba_9" > 0.0) THEN ln("DT_Output_22"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_22"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_22"."Proba_0" IS NULL OR "DT_Output_22"."Proba_0" > 0.0) THEN ln("DT_Output_22"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_22"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_22"."Proba_1" IS NULL OR "DT_Output_22"."Proba_1" > 0.0) THEN ln("DT_Output_22"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_22"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_22"."Proba_2" IS NULL OR "DT_Output_22"."Proba_2" > 0.0) THEN ln("DT_Output_22"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_22"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_22"."Proba_3" IS NULL OR "DT_Output_22"."Proba_3" > 0.0) THEN ln("DT_Output_22"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_22"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_22"."Proba_4" IS NULL OR "DT_Output_22"."Proba_4" > 0.0) THEN ln("DT_Output_22"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_22"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_22"."Proba_5" IS NULL OR "DT_Output_22"."Proba_5" > 0.0) THEN ln("DT_Output_22"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_22"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_22"."Proba_6" IS NULL OR "DT_Output_22"."Proba_6" > 0.0) THEN ln("DT_Output_22"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_22"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_22"."Proba_7" IS NULL OR "DT_Output_22"."Proba_7" > 0.0) THEN ln("DT_Output_22"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_22"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_22"."Proba_8" IS NULL OR "DT_Output_22"."Proba_8" > 0.0) THEN ln("DT_Output_22"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_22"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_22"."Proba_9" IS NULL OR "DT_Output_22"."Proba_9" > 0.0) THEN ln("DT_Output_22"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10) AS "Proba_9" 
FROM "DT_Output_22"), 
"DT_node_lookup_23" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_38 <= -1.6508052349090576) THEN 1 ELSE 2 END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_23" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Proba_0" AS "Proba_0", "Values"."LogProba_0" AS "LogProba_0", "Values"."Proba_1" AS "Proba_1", "Values"."LogProba_1" AS "LogProba_1", "Values"."Proba_2" AS "Proba_2", "Values"."LogProba_2" AS "LogProba_2", "Values"."Proba_3" AS "Proba_3", "Values"."LogProba_3" AS "LogProba_3", "Values"."Proba_4" AS "Proba_4", "Values"."LogProba_4" AS "LogProba_4", "Values"."Proba_5" AS "Proba_5", "Values"."LogProba_5" AS "LogProba_5", "Values"."Proba_6" AS "Proba_6", "Values"."LogProba_6" AS "LogProba_6", "Values"."Proba_7" AS "Proba_7", "Values"."LogProba_7" AS "LogProba_7", "Values"."Proba_8" AS "Proba_8", "Values"."LogProba_8" AS "LogProba_8", "Values"."Proba_9" AS "Proba_9", "Values"."LogProba_9" AS "LogProba_9", "Values"."Decision" AS "Decision", "Values"."DecisionProba" AS "DecisionProba" 
FROM (SELECT 1 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 219 AS count, 1 AS depth, 0 AS parent_id, 0.9999999949001128 AS "Proba_0", -5.09988719223e-09 AS "LogProba_0", 0.0 AS "Proba_1", -BINARY_FLOAT_INFINITY AS "LogProba_1", 7.305500695861258e-10 AS "Proba_2", -21.0372233456 AS "LogProba_2", 7.28063954264747e-10 AS "Proba_3", -21.0406322223 AS "LogProba_3", 7.292862081398785e-10 AS "Proba_4", -21.0389548572 AS "LogProba_4", 7.280674576697481e-10 AS "Proba_5", -21.0406274104 AS "LogProba_5", 7.280661220816011e-10 AS "Proba_6", -21.0406292448 AS "LogProba_6", 0.0 AS "Proba_7", -BINARY_FLOAT_INFINITY AS "LogProba_7", 7.277892933104096e-10 AS "Proba_8", -21.0410095419 AS "LogProba_8", 7.280639542647454e-10 AS "Proba_9", -21.0406322223 AS "LogProba_9", 0 AS "Decision", 0.9999999949 AS "DecisionProba" FROM DUAL UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1218 AS count, 1 AS depth, 0 AS parent_id, 4.5246807096417585e-05 AS "Proba_0", -10.0033784517 AS "LogProba_0", 0.11111111117404696 AS "Proba_1", -2.19722457677 AS "LogProba_1", 0.11111111109290796 AS "Proba_2", -2.1972245775 AS "LogProba_2", 0.11111111109318421 AS "Proba_3", -2.1972245775 AS "LogProba_3", 0.11111111109304823 AS "Proba_4", -2.1972245775 AS "LogProba_4", 0.11111111109318397 AS "Proba_5", -2.1972245775 AS "LogProba_5", 0.11111111109318345 AS "Proba_6", -2.1972245775 AS "LogProba_6", 0.11111111117404725 AS "Proba_7", -2.19722457677 AS "LogProba_7", 0.11106586428611764 AS "Proba_8", -2.1976318817 AS "LogProba_8", 0.11111111109318396 AS "Proba_9", -2.1972245775 AS "LogProba_9", 7 AS "Decision", 0.111111111174 AS "DecisionProba" FROM DUAL) "Values"), 
"DT_Output_23" AS 
(SELECT "DT_node_lookup_23"."KEY" AS "KEY", "DT_node_lookup_23".node_id_2 AS node_id_2, "DT_node_data_23".node_id AS node_id, "DT_node_data_23".feature AS feature, "DT_node_data_23".threshold AS threshold, "DT_node_data_23".count AS count, "DT_node_data_23".depth AS depth, "DT_node_data_23".parent_id AS parent_id, "DT_node_data_23"."Proba_0" AS "Proba_0", "DT_node_data_23"."LogProba_0" AS "LogProba_0", "DT_node_data_23"."Proba_1" AS "Proba_1", "DT_node_data_23"."LogProba_1" AS "LogProba_1", "DT_node_data_23"."Proba_2" AS "Proba_2", "DT_node_data_23"."LogProba_2" AS "LogProba_2", "DT_node_data_23"."Proba_3" AS "Proba_3", "DT_node_data_23"."LogProba_3" AS "LogProba_3", "DT_node_data_23"."Proba_4" AS "Proba_4", "DT_node_data_23"."LogProba_4" AS "LogProba_4", "DT_node_data_23"."Proba_5" AS "Proba_5", "DT_node_data_23"."LogProba_5" AS "LogProba_5", "DT_node_data_23"."Proba_6" AS "Proba_6", "DT_node_data_23"."LogProba_6" AS "LogProba_6", "DT_node_data_23"."Proba_7" AS "Proba_7", "DT_node_data_23"."LogProba_7" AS "LogProba_7", "DT_node_data_23"."Proba_8" AS "Proba_8", "DT_node_data_23"."LogProba_8" AS "LogProba_8", "DT_node_data_23"."Proba_9" AS "Proba_9", "DT_node_data_23"."LogProba_9" AS "LogProba_9", "DT_node_data_23"."Decision" AS "Decision", "DT_node_data_23"."DecisionProba" AS "DecisionProba" 
FROM "DT_node_lookup_23" LEFT OUTER JOIN "DT_node_data_23" ON "DT_node_lookup_23".node_id_2 = "DT_node_data_23".node_id), 
"AdaBoost_Estim_23" AS 
(SELECT "DT_Output_23"."KEY" AS "KEY", (9.0 * (CASE WHEN ("DT_Output_23"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_23"."Proba_0" IS NULL OR "DT_Output_23"."Proba_0" > 0.0) THEN ln("DT_Output_23"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_23"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_23"."Proba_0" IS NULL OR "DT_Output_23"."Proba_0" > 0.0) THEN ln("DT_Output_23"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_23"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_23"."Proba_1" IS NULL OR "DT_Output_23"."Proba_1" > 0.0) THEN ln("DT_Output_23"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_23"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_23"."Proba_2" IS NULL OR "DT_Output_23"."Proba_2" > 0.0) THEN ln("DT_Output_23"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_23"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_23"."Proba_3" IS NULL OR "DT_Output_23"."Proba_3" > 0.0) THEN ln("DT_Output_23"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_23"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_23"."Proba_4" IS NULL OR "DT_Output_23"."Proba_4" > 0.0) THEN ln("DT_Output_23"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_23"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_23"."Proba_5" IS NULL OR "DT_Output_23"."Proba_5" > 0.0) THEN ln("DT_Output_23"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_23"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_23"."Proba_6" IS NULL OR "DT_Output_23"."Proba_6" > 0.0) THEN ln("DT_Output_23"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_23"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_23"."Proba_7" IS NULL OR "DT_Output_23"."Proba_7" > 0.0) THEN ln("DT_Output_23"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_23"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_23"."Proba_8" IS NULL OR "DT_Output_23"."Proba_8" > 0.0) THEN ln("DT_Output_23"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_23"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_23"."Proba_9" IS NULL OR "DT_Output_23"."Proba_9" > 0.0) THEN ln("DT_Output_23"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10)) / 32.0 AS "Score_0", 9.0 * (CASE WHEN ("DT_Output_23"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_23"."Proba_0" IS NULL OR "DT_Output_23"."Proba_0" > 0.0) THEN ln("DT_Output_23"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_23"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_23"."Proba_0" IS NULL OR "DT_Output_23"."Proba_0" > 0.0) THEN ln("DT_Output_23"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_23"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_23"."Proba_1" IS NULL OR "DT_Output_23"."Proba_1" > 0.0) THEN ln("DT_Output_23"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_23"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_23"."Proba_2" IS NULL OR "DT_Output_23"."Proba_2" > 0.0) THEN ln("DT_Output_23"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_23"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_23"."Proba_3" IS NULL OR "DT_Output_23"."Proba_3" > 0.0) THEN ln("DT_Output_23"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_23"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_23"."Proba_4" IS NULL OR "DT_Output_23"."Proba_4" > 0.0) THEN ln("DT_Output_23"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_23"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_23"."Proba_5" IS NULL OR "DT_Output_23"."Proba_5" > 0.0) THEN ln("DT_Output_23"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_23"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_23"."Proba_6" IS NULL OR "DT_Output_23"."Proba_6" > 0.0) THEN ln("DT_Output_23"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_23"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_23"."Proba_7" IS NULL OR "DT_Output_23"."Proba_7" > 0.0) THEN ln("DT_Output_23"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_23"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_23"."Proba_8" IS NULL OR "DT_Output_23"."Proba_8" > 0.0) THEN ln("DT_Output_23"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_23"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_23"."Proba_9" IS NULL OR "DT_Output_23"."Proba_9" > 0.0) THEN ln("DT_Output_23"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10) AS "Proba_0", (9.0 * (CASE WHEN ("DT_Output_23"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_23"."Proba_1" IS NULL OR "DT_Output_23"."Proba_1" > 0.0) THEN ln("DT_Output_23"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_23"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_23"."Proba_0" IS NULL OR "DT_Output_23"."Proba_0" > 0.0) THEN ln("DT_Output_23"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_23"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_23"."Proba_1" IS NULL OR "DT_Output_23"."Proba_1" > 0.0) THEN ln("DT_Output_23"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_23"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_23"."Proba_2" IS NULL OR "DT_Output_23"."Proba_2" > 0.0) THEN ln("DT_Output_23"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_23"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_23"."Proba_3" IS NULL OR "DT_Output_23"."Proba_3" > 0.0) THEN ln("DT_Output_23"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_23"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_23"."Proba_4" IS NULL OR "DT_Output_23"."Proba_4" > 0.0) THEN ln("DT_Output_23"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_23"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_23"."Proba_5" IS NULL OR "DT_Output_23"."Proba_5" > 0.0) THEN ln("DT_Output_23"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_23"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_23"."Proba_6" IS NULL OR "DT_Output_23"."Proba_6" > 0.0) THEN ln("DT_Output_23"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_23"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_23"."Proba_7" IS NULL OR "DT_Output_23"."Proba_7" > 0.0) THEN ln("DT_Output_23"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_23"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_23"."Proba_8" IS NULL OR "DT_Output_23"."Proba_8" > 0.0) THEN ln("DT_Output_23"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_23"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_23"."Proba_9" IS NULL OR "DT_Output_23"."Proba_9" > 0.0) THEN ln("DT_Output_23"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10)) / 32.0 AS "Score_1", 9.0 * (CASE WHEN ("DT_Output_23"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_23"."Proba_1" IS NULL OR "DT_Output_23"."Proba_1" > 0.0) THEN ln("DT_Output_23"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_23"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_23"."Proba_0" IS NULL OR "DT_Output_23"."Proba_0" > 0.0) THEN ln("DT_Output_23"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_23"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_23"."Proba_1" IS NULL OR "DT_Output_23"."Proba_1" > 0.0) THEN ln("DT_Output_23"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_23"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_23"."Proba_2" IS NULL OR "DT_Output_23"."Proba_2" > 0.0) THEN ln("DT_Output_23"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_23"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_23"."Proba_3" IS NULL OR "DT_Output_23"."Proba_3" > 0.0) THEN ln("DT_Output_23"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_23"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_23"."Proba_4" IS NULL OR "DT_Output_23"."Proba_4" > 0.0) THEN ln("DT_Output_23"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_23"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_23"."Proba_5" IS NULL OR "DT_Output_23"."Proba_5" > 0.0) THEN ln("DT_Output_23"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_23"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_23"."Proba_6" IS NULL OR "DT_Output_23"."Proba_6" > 0.0) THEN ln("DT_Output_23"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_23"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_23"."Proba_7" IS NULL OR "DT_Output_23"."Proba_7" > 0.0) THEN ln("DT_Output_23"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_23"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_23"."Proba_8" IS NULL OR "DT_Output_23"."Proba_8" > 0.0) THEN ln("DT_Output_23"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_23"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_23"."Proba_9" IS NULL OR "DT_Output_23"."Proba_9" > 0.0) THEN ln("DT_Output_23"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10) AS "Proba_1", (9.0 * (CASE WHEN ("DT_Output_23"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_23"."Proba_2" IS NULL OR "DT_Output_23"."Proba_2" > 0.0) THEN ln("DT_Output_23"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_23"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_23"."Proba_0" IS NULL OR "DT_Output_23"."Proba_0" > 0.0) THEN ln("DT_Output_23"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_23"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_23"."Proba_1" IS NULL OR "DT_Output_23"."Proba_1" > 0.0) THEN ln("DT_Output_23"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_23"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_23"."Proba_2" IS NULL OR "DT_Output_23"."Proba_2" > 0.0) THEN ln("DT_Output_23"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_23"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_23"."Proba_3" IS NULL OR "DT_Output_23"."Proba_3" > 0.0) THEN ln("DT_Output_23"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_23"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_23"."Proba_4" IS NULL OR "DT_Output_23"."Proba_4" > 0.0) THEN ln("DT_Output_23"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_23"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_23"."Proba_5" IS NULL OR "DT_Output_23"."Proba_5" > 0.0) THEN ln("DT_Output_23"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_23"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_23"."Proba_6" IS NULL OR "DT_Output_23"."Proba_6" > 0.0) THEN ln("DT_Output_23"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_23"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_23"."Proba_7" IS NULL OR "DT_Output_23"."Proba_7" > 0.0) THEN ln("DT_Output_23"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_23"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_23"."Proba_8" IS NULL OR "DT_Output_23"."Proba_8" > 0.0) THEN ln("DT_Output_23"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_23"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_23"."Proba_9" IS NULL OR "DT_Output_23"."Proba_9" > 0.0) THEN ln("DT_Output_23"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10)) / 32.0 AS "Score_2", 9.0 * (CASE WHEN ("DT_Output_23"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_23"."Proba_2" IS NULL OR "DT_Output_23"."Proba_2" > 0.0) THEN ln("DT_Output_23"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_23"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_23"."Proba_0" IS NULL OR "DT_Output_23"."Proba_0" > 0.0) THEN ln("DT_Output_23"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_23"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_23"."Proba_1" IS NULL OR "DT_Output_23"."Proba_1" > 0.0) THEN ln("DT_Output_23"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_23"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_23"."Proba_2" IS NULL OR "DT_Output_23"."Proba_2" > 0.0) THEN ln("DT_Output_23"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_23"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_23"."Proba_3" IS NULL OR "DT_Output_23"."Proba_3" > 0.0) THEN ln("DT_Output_23"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_23"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_23"."Proba_4" IS NULL OR "DT_Output_23"."Proba_4" > 0.0) THEN ln("DT_Output_23"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_23"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_23"."Proba_5" IS NULL OR "DT_Output_23"."Proba_5" > 0.0) THEN ln("DT_Output_23"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_23"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_23"."Proba_6" IS NULL OR "DT_Output_23"."Proba_6" > 0.0) THEN ln("DT_Output_23"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_23"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_23"."Proba_7" IS NULL OR "DT_Output_23"."Proba_7" > 0.0) THEN ln("DT_Output_23"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_23"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_23"."Proba_8" IS NULL OR "DT_Output_23"."Proba_8" > 0.0) THEN ln("DT_Output_23"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_23"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_23"."Proba_9" IS NULL OR "DT_Output_23"."Proba_9" > 0.0) THEN ln("DT_Output_23"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10) AS "Proba_2", (9.0 * (CASE WHEN ("DT_Output_23"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_23"."Proba_3" IS NULL OR "DT_Output_23"."Proba_3" > 0.0) THEN ln("DT_Output_23"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_23"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_23"."Proba_0" IS NULL OR "DT_Output_23"."Proba_0" > 0.0) THEN ln("DT_Output_23"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_23"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_23"."Proba_1" IS NULL OR "DT_Output_23"."Proba_1" > 0.0) THEN ln("DT_Output_23"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_23"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_23"."Proba_2" IS NULL OR "DT_Output_23"."Proba_2" > 0.0) THEN ln("DT_Output_23"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_23"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_23"."Proba_3" IS NULL OR "DT_Output_23"."Proba_3" > 0.0) THEN ln("DT_Output_23"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_23"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_23"."Proba_4" IS NULL OR "DT_Output_23"."Proba_4" > 0.0) THEN ln("DT_Output_23"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_23"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_23"."Proba_5" IS NULL OR "DT_Output_23"."Proba_5" > 0.0) THEN ln("DT_Output_23"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_23"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_23"."Proba_6" IS NULL OR "DT_Output_23"."Proba_6" > 0.0) THEN ln("DT_Output_23"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_23"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_23"."Proba_7" IS NULL OR "DT_Output_23"."Proba_7" > 0.0) THEN ln("DT_Output_23"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_23"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_23"."Proba_8" IS NULL OR "DT_Output_23"."Proba_8" > 0.0) THEN ln("DT_Output_23"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_23"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_23"."Proba_9" IS NULL OR "DT_Output_23"."Proba_9" > 0.0) THEN ln("DT_Output_23"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10)) / 32.0 AS "Score_3", 9.0 * (CASE WHEN ("DT_Output_23"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_23"."Proba_3" IS NULL OR "DT_Output_23"."Proba_3" > 0.0) THEN ln("DT_Output_23"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_23"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_23"."Proba_0" IS NULL OR "DT_Output_23"."Proba_0" > 0.0) THEN ln("DT_Output_23"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_23"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_23"."Proba_1" IS NULL OR "DT_Output_23"."Proba_1" > 0.0) THEN ln("DT_Output_23"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_23"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_23"."Proba_2" IS NULL OR "DT_Output_23"."Proba_2" > 0.0) THEN ln("DT_Output_23"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_23"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_23"."Proba_3" IS NULL OR "DT_Output_23"."Proba_3" > 0.0) THEN ln("DT_Output_23"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_23"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_23"."Proba_4" IS NULL OR "DT_Output_23"."Proba_4" > 0.0) THEN ln("DT_Output_23"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_23"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_23"."Proba_5" IS NULL OR "DT_Output_23"."Proba_5" > 0.0) THEN ln("DT_Output_23"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_23"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_23"."Proba_6" IS NULL OR "DT_Output_23"."Proba_6" > 0.0) THEN ln("DT_Output_23"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_23"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_23"."Proba_7" IS NULL OR "DT_Output_23"."Proba_7" > 0.0) THEN ln("DT_Output_23"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_23"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_23"."Proba_8" IS NULL OR "DT_Output_23"."Proba_8" > 0.0) THEN ln("DT_Output_23"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_23"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_23"."Proba_9" IS NULL OR "DT_Output_23"."Proba_9" > 0.0) THEN ln("DT_Output_23"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10) AS "Proba_3", (9.0 * (CASE WHEN ("DT_Output_23"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_23"."Proba_4" IS NULL OR "DT_Output_23"."Proba_4" > 0.0) THEN ln("DT_Output_23"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_23"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_23"."Proba_0" IS NULL OR "DT_Output_23"."Proba_0" > 0.0) THEN ln("DT_Output_23"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_23"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_23"."Proba_1" IS NULL OR "DT_Output_23"."Proba_1" > 0.0) THEN ln("DT_Output_23"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_23"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_23"."Proba_2" IS NULL OR "DT_Output_23"."Proba_2" > 0.0) THEN ln("DT_Output_23"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_23"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_23"."Proba_3" IS NULL OR "DT_Output_23"."Proba_3" > 0.0) THEN ln("DT_Output_23"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_23"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_23"."Proba_4" IS NULL OR "DT_Output_23"."Proba_4" > 0.0) THEN ln("DT_Output_23"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_23"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_23"."Proba_5" IS NULL OR "DT_Output_23"."Proba_5" > 0.0) THEN ln("DT_Output_23"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_23"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_23"."Proba_6" IS NULL OR "DT_Output_23"."Proba_6" > 0.0) THEN ln("DT_Output_23"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_23"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_23"."Proba_7" IS NULL OR "DT_Output_23"."Proba_7" > 0.0) THEN ln("DT_Output_23"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_23"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_23"."Proba_8" IS NULL OR "DT_Output_23"."Proba_8" > 0.0) THEN ln("DT_Output_23"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_23"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_23"."Proba_9" IS NULL OR "DT_Output_23"."Proba_9" > 0.0) THEN ln("DT_Output_23"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10)) / 32.0 AS "Score_4", 9.0 * (CASE WHEN ("DT_Output_23"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_23"."Proba_4" IS NULL OR "DT_Output_23"."Proba_4" > 0.0) THEN ln("DT_Output_23"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_23"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_23"."Proba_0" IS NULL OR "DT_Output_23"."Proba_0" > 0.0) THEN ln("DT_Output_23"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_23"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_23"."Proba_1" IS NULL OR "DT_Output_23"."Proba_1" > 0.0) THEN ln("DT_Output_23"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_23"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_23"."Proba_2" IS NULL OR "DT_Output_23"."Proba_2" > 0.0) THEN ln("DT_Output_23"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_23"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_23"."Proba_3" IS NULL OR "DT_Output_23"."Proba_3" > 0.0) THEN ln("DT_Output_23"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_23"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_23"."Proba_4" IS NULL OR "DT_Output_23"."Proba_4" > 0.0) THEN ln("DT_Output_23"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_23"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_23"."Proba_5" IS NULL OR "DT_Output_23"."Proba_5" > 0.0) THEN ln("DT_Output_23"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_23"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_23"."Proba_6" IS NULL OR "DT_Output_23"."Proba_6" > 0.0) THEN ln("DT_Output_23"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_23"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_23"."Proba_7" IS NULL OR "DT_Output_23"."Proba_7" > 0.0) THEN ln("DT_Output_23"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_23"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_23"."Proba_8" IS NULL OR "DT_Output_23"."Proba_8" > 0.0) THEN ln("DT_Output_23"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_23"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_23"."Proba_9" IS NULL OR "DT_Output_23"."Proba_9" > 0.0) THEN ln("DT_Output_23"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10) AS "Proba_4", (9.0 * (CASE WHEN ("DT_Output_23"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_23"."Proba_5" IS NULL OR "DT_Output_23"."Proba_5" > 0.0) THEN ln("DT_Output_23"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_23"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_23"."Proba_0" IS NULL OR "DT_Output_23"."Proba_0" > 0.0) THEN ln("DT_Output_23"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_23"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_23"."Proba_1" IS NULL OR "DT_Output_23"."Proba_1" > 0.0) THEN ln("DT_Output_23"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_23"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_23"."Proba_2" IS NULL OR "DT_Output_23"."Proba_2" > 0.0) THEN ln("DT_Output_23"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_23"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_23"."Proba_3" IS NULL OR "DT_Output_23"."Proba_3" > 0.0) THEN ln("DT_Output_23"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_23"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_23"."Proba_4" IS NULL OR "DT_Output_23"."Proba_4" > 0.0) THEN ln("DT_Output_23"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_23"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_23"."Proba_5" IS NULL OR "DT_Output_23"."Proba_5" > 0.0) THEN ln("DT_Output_23"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_23"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_23"."Proba_6" IS NULL OR "DT_Output_23"."Proba_6" > 0.0) THEN ln("DT_Output_23"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_23"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_23"."Proba_7" IS NULL OR "DT_Output_23"."Proba_7" > 0.0) THEN ln("DT_Output_23"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_23"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_23"."Proba_8" IS NULL OR "DT_Output_23"."Proba_8" > 0.0) THEN ln("DT_Output_23"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_23"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_23"."Proba_9" IS NULL OR "DT_Output_23"."Proba_9" > 0.0) THEN ln("DT_Output_23"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10)) / 32.0 AS "Score_5", 9.0 * (CASE WHEN ("DT_Output_23"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_23"."Proba_5" IS NULL OR "DT_Output_23"."Proba_5" > 0.0) THEN ln("DT_Output_23"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_23"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_23"."Proba_0" IS NULL OR "DT_Output_23"."Proba_0" > 0.0) THEN ln("DT_Output_23"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_23"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_23"."Proba_1" IS NULL OR "DT_Output_23"."Proba_1" > 0.0) THEN ln("DT_Output_23"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_23"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_23"."Proba_2" IS NULL OR "DT_Output_23"."Proba_2" > 0.0) THEN ln("DT_Output_23"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_23"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_23"."Proba_3" IS NULL OR "DT_Output_23"."Proba_3" > 0.0) THEN ln("DT_Output_23"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_23"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_23"."Proba_4" IS NULL OR "DT_Output_23"."Proba_4" > 0.0) THEN ln("DT_Output_23"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_23"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_23"."Proba_5" IS NULL OR "DT_Output_23"."Proba_5" > 0.0) THEN ln("DT_Output_23"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_23"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_23"."Proba_6" IS NULL OR "DT_Output_23"."Proba_6" > 0.0) THEN ln("DT_Output_23"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_23"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_23"."Proba_7" IS NULL OR "DT_Output_23"."Proba_7" > 0.0) THEN ln("DT_Output_23"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_23"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_23"."Proba_8" IS NULL OR "DT_Output_23"."Proba_8" > 0.0) THEN ln("DT_Output_23"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_23"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_23"."Proba_9" IS NULL OR "DT_Output_23"."Proba_9" > 0.0) THEN ln("DT_Output_23"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10) AS "Proba_5", (9.0 * (CASE WHEN ("DT_Output_23"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_23"."Proba_6" IS NULL OR "DT_Output_23"."Proba_6" > 0.0) THEN ln("DT_Output_23"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_23"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_23"."Proba_0" IS NULL OR "DT_Output_23"."Proba_0" > 0.0) THEN ln("DT_Output_23"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_23"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_23"."Proba_1" IS NULL OR "DT_Output_23"."Proba_1" > 0.0) THEN ln("DT_Output_23"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_23"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_23"."Proba_2" IS NULL OR "DT_Output_23"."Proba_2" > 0.0) THEN ln("DT_Output_23"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_23"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_23"."Proba_3" IS NULL OR "DT_Output_23"."Proba_3" > 0.0) THEN ln("DT_Output_23"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_23"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_23"."Proba_4" IS NULL OR "DT_Output_23"."Proba_4" > 0.0) THEN ln("DT_Output_23"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_23"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_23"."Proba_5" IS NULL OR "DT_Output_23"."Proba_5" > 0.0) THEN ln("DT_Output_23"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_23"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_23"."Proba_6" IS NULL OR "DT_Output_23"."Proba_6" > 0.0) THEN ln("DT_Output_23"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_23"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_23"."Proba_7" IS NULL OR "DT_Output_23"."Proba_7" > 0.0) THEN ln("DT_Output_23"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_23"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_23"."Proba_8" IS NULL OR "DT_Output_23"."Proba_8" > 0.0) THEN ln("DT_Output_23"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_23"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_23"."Proba_9" IS NULL OR "DT_Output_23"."Proba_9" > 0.0) THEN ln("DT_Output_23"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10)) / 32.0 AS "Score_6", 9.0 * (CASE WHEN ("DT_Output_23"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_23"."Proba_6" IS NULL OR "DT_Output_23"."Proba_6" > 0.0) THEN ln("DT_Output_23"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_23"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_23"."Proba_0" IS NULL OR "DT_Output_23"."Proba_0" > 0.0) THEN ln("DT_Output_23"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_23"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_23"."Proba_1" IS NULL OR "DT_Output_23"."Proba_1" > 0.0) THEN ln("DT_Output_23"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_23"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_23"."Proba_2" IS NULL OR "DT_Output_23"."Proba_2" > 0.0) THEN ln("DT_Output_23"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_23"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_23"."Proba_3" IS NULL OR "DT_Output_23"."Proba_3" > 0.0) THEN ln("DT_Output_23"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_23"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_23"."Proba_4" IS NULL OR "DT_Output_23"."Proba_4" > 0.0) THEN ln("DT_Output_23"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_23"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_23"."Proba_5" IS NULL OR "DT_Output_23"."Proba_5" > 0.0) THEN ln("DT_Output_23"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_23"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_23"."Proba_6" IS NULL OR "DT_Output_23"."Proba_6" > 0.0) THEN ln("DT_Output_23"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_23"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_23"."Proba_7" IS NULL OR "DT_Output_23"."Proba_7" > 0.0) THEN ln("DT_Output_23"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_23"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_23"."Proba_8" IS NULL OR "DT_Output_23"."Proba_8" > 0.0) THEN ln("DT_Output_23"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_23"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_23"."Proba_9" IS NULL OR "DT_Output_23"."Proba_9" > 0.0) THEN ln("DT_Output_23"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10) AS "Proba_6", (9.0 * (CASE WHEN ("DT_Output_23"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_23"."Proba_7" IS NULL OR "DT_Output_23"."Proba_7" > 0.0) THEN ln("DT_Output_23"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_23"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_23"."Proba_0" IS NULL OR "DT_Output_23"."Proba_0" > 0.0) THEN ln("DT_Output_23"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_23"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_23"."Proba_1" IS NULL OR "DT_Output_23"."Proba_1" > 0.0) THEN ln("DT_Output_23"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_23"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_23"."Proba_2" IS NULL OR "DT_Output_23"."Proba_2" > 0.0) THEN ln("DT_Output_23"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_23"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_23"."Proba_3" IS NULL OR "DT_Output_23"."Proba_3" > 0.0) THEN ln("DT_Output_23"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_23"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_23"."Proba_4" IS NULL OR "DT_Output_23"."Proba_4" > 0.0) THEN ln("DT_Output_23"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_23"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_23"."Proba_5" IS NULL OR "DT_Output_23"."Proba_5" > 0.0) THEN ln("DT_Output_23"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_23"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_23"."Proba_6" IS NULL OR "DT_Output_23"."Proba_6" > 0.0) THEN ln("DT_Output_23"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_23"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_23"."Proba_7" IS NULL OR "DT_Output_23"."Proba_7" > 0.0) THEN ln("DT_Output_23"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_23"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_23"."Proba_8" IS NULL OR "DT_Output_23"."Proba_8" > 0.0) THEN ln("DT_Output_23"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_23"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_23"."Proba_9" IS NULL OR "DT_Output_23"."Proba_9" > 0.0) THEN ln("DT_Output_23"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10)) / 32.0 AS "Score_7", 9.0 * (CASE WHEN ("DT_Output_23"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_23"."Proba_7" IS NULL OR "DT_Output_23"."Proba_7" > 0.0) THEN ln("DT_Output_23"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_23"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_23"."Proba_0" IS NULL OR "DT_Output_23"."Proba_0" > 0.0) THEN ln("DT_Output_23"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_23"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_23"."Proba_1" IS NULL OR "DT_Output_23"."Proba_1" > 0.0) THEN ln("DT_Output_23"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_23"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_23"."Proba_2" IS NULL OR "DT_Output_23"."Proba_2" > 0.0) THEN ln("DT_Output_23"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_23"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_23"."Proba_3" IS NULL OR "DT_Output_23"."Proba_3" > 0.0) THEN ln("DT_Output_23"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_23"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_23"."Proba_4" IS NULL OR "DT_Output_23"."Proba_4" > 0.0) THEN ln("DT_Output_23"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_23"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_23"."Proba_5" IS NULL OR "DT_Output_23"."Proba_5" > 0.0) THEN ln("DT_Output_23"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_23"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_23"."Proba_6" IS NULL OR "DT_Output_23"."Proba_6" > 0.0) THEN ln("DT_Output_23"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_23"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_23"."Proba_7" IS NULL OR "DT_Output_23"."Proba_7" > 0.0) THEN ln("DT_Output_23"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_23"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_23"."Proba_8" IS NULL OR "DT_Output_23"."Proba_8" > 0.0) THEN ln("DT_Output_23"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_23"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_23"."Proba_9" IS NULL OR "DT_Output_23"."Proba_9" > 0.0) THEN ln("DT_Output_23"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10) AS "Proba_7", (9.0 * (CASE WHEN ("DT_Output_23"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_23"."Proba_8" IS NULL OR "DT_Output_23"."Proba_8" > 0.0) THEN ln("DT_Output_23"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_23"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_23"."Proba_0" IS NULL OR "DT_Output_23"."Proba_0" > 0.0) THEN ln("DT_Output_23"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_23"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_23"."Proba_1" IS NULL OR "DT_Output_23"."Proba_1" > 0.0) THEN ln("DT_Output_23"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_23"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_23"."Proba_2" IS NULL OR "DT_Output_23"."Proba_2" > 0.0) THEN ln("DT_Output_23"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_23"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_23"."Proba_3" IS NULL OR "DT_Output_23"."Proba_3" > 0.0) THEN ln("DT_Output_23"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_23"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_23"."Proba_4" IS NULL OR "DT_Output_23"."Proba_4" > 0.0) THEN ln("DT_Output_23"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_23"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_23"."Proba_5" IS NULL OR "DT_Output_23"."Proba_5" > 0.0) THEN ln("DT_Output_23"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_23"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_23"."Proba_6" IS NULL OR "DT_Output_23"."Proba_6" > 0.0) THEN ln("DT_Output_23"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_23"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_23"."Proba_7" IS NULL OR "DT_Output_23"."Proba_7" > 0.0) THEN ln("DT_Output_23"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_23"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_23"."Proba_8" IS NULL OR "DT_Output_23"."Proba_8" > 0.0) THEN ln("DT_Output_23"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_23"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_23"."Proba_9" IS NULL OR "DT_Output_23"."Proba_9" > 0.0) THEN ln("DT_Output_23"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10)) / 32.0 AS "Score_8", 9.0 * (CASE WHEN ("DT_Output_23"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_23"."Proba_8" IS NULL OR "DT_Output_23"."Proba_8" > 0.0) THEN ln("DT_Output_23"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_23"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_23"."Proba_0" IS NULL OR "DT_Output_23"."Proba_0" > 0.0) THEN ln("DT_Output_23"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_23"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_23"."Proba_1" IS NULL OR "DT_Output_23"."Proba_1" > 0.0) THEN ln("DT_Output_23"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_23"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_23"."Proba_2" IS NULL OR "DT_Output_23"."Proba_2" > 0.0) THEN ln("DT_Output_23"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_23"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_23"."Proba_3" IS NULL OR "DT_Output_23"."Proba_3" > 0.0) THEN ln("DT_Output_23"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_23"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_23"."Proba_4" IS NULL OR "DT_Output_23"."Proba_4" > 0.0) THEN ln("DT_Output_23"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_23"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_23"."Proba_5" IS NULL OR "DT_Output_23"."Proba_5" > 0.0) THEN ln("DT_Output_23"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_23"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_23"."Proba_6" IS NULL OR "DT_Output_23"."Proba_6" > 0.0) THEN ln("DT_Output_23"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_23"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_23"."Proba_7" IS NULL OR "DT_Output_23"."Proba_7" > 0.0) THEN ln("DT_Output_23"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_23"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_23"."Proba_8" IS NULL OR "DT_Output_23"."Proba_8" > 0.0) THEN ln("DT_Output_23"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_23"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_23"."Proba_9" IS NULL OR "DT_Output_23"."Proba_9" > 0.0) THEN ln("DT_Output_23"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10) AS "Proba_8", (9.0 * (CASE WHEN ("DT_Output_23"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_23"."Proba_9" IS NULL OR "DT_Output_23"."Proba_9" > 0.0) THEN ln("DT_Output_23"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_23"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_23"."Proba_0" IS NULL OR "DT_Output_23"."Proba_0" > 0.0) THEN ln("DT_Output_23"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_23"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_23"."Proba_1" IS NULL OR "DT_Output_23"."Proba_1" > 0.0) THEN ln("DT_Output_23"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_23"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_23"."Proba_2" IS NULL OR "DT_Output_23"."Proba_2" > 0.0) THEN ln("DT_Output_23"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_23"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_23"."Proba_3" IS NULL OR "DT_Output_23"."Proba_3" > 0.0) THEN ln("DT_Output_23"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_23"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_23"."Proba_4" IS NULL OR "DT_Output_23"."Proba_4" > 0.0) THEN ln("DT_Output_23"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_23"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_23"."Proba_5" IS NULL OR "DT_Output_23"."Proba_5" > 0.0) THEN ln("DT_Output_23"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_23"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_23"."Proba_6" IS NULL OR "DT_Output_23"."Proba_6" > 0.0) THEN ln("DT_Output_23"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_23"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_23"."Proba_7" IS NULL OR "DT_Output_23"."Proba_7" > 0.0) THEN ln("DT_Output_23"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_23"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_23"."Proba_8" IS NULL OR "DT_Output_23"."Proba_8" > 0.0) THEN ln("DT_Output_23"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_23"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_23"."Proba_9" IS NULL OR "DT_Output_23"."Proba_9" > 0.0) THEN ln("DT_Output_23"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10)) / 32.0 AS "Score_9", 9.0 * (CASE WHEN ("DT_Output_23"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_23"."Proba_9" IS NULL OR "DT_Output_23"."Proba_9" > 0.0) THEN ln("DT_Output_23"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_23"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_23"."Proba_0" IS NULL OR "DT_Output_23"."Proba_0" > 0.0) THEN ln("DT_Output_23"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_23"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_23"."Proba_1" IS NULL OR "DT_Output_23"."Proba_1" > 0.0) THEN ln("DT_Output_23"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_23"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_23"."Proba_2" IS NULL OR "DT_Output_23"."Proba_2" > 0.0) THEN ln("DT_Output_23"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_23"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_23"."Proba_3" IS NULL OR "DT_Output_23"."Proba_3" > 0.0) THEN ln("DT_Output_23"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_23"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_23"."Proba_4" IS NULL OR "DT_Output_23"."Proba_4" > 0.0) THEN ln("DT_Output_23"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_23"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_23"."Proba_5" IS NULL OR "DT_Output_23"."Proba_5" > 0.0) THEN ln("DT_Output_23"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_23"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_23"."Proba_6" IS NULL OR "DT_Output_23"."Proba_6" > 0.0) THEN ln("DT_Output_23"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_23"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_23"."Proba_7" IS NULL OR "DT_Output_23"."Proba_7" > 0.0) THEN ln("DT_Output_23"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_23"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_23"."Proba_8" IS NULL OR "DT_Output_23"."Proba_8" > 0.0) THEN ln("DT_Output_23"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_23"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_23"."Proba_9" IS NULL OR "DT_Output_23"."Proba_9" > 0.0) THEN ln("DT_Output_23"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10) AS "Proba_9" 
FROM "DT_Output_23"), 
"DT_node_lookup_24" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_30 <= -1.555469036102295) THEN 1 ELSE 2 END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_24" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Proba_0" AS "Proba_0", "Values"."LogProba_0" AS "LogProba_0", "Values"."Proba_1" AS "Proba_1", "Values"."LogProba_1" AS "LogProba_1", "Values"."Proba_2" AS "Proba_2", "Values"."LogProba_2" AS "LogProba_2", "Values"."Proba_3" AS "Proba_3", "Values"."LogProba_3" AS "LogProba_3", "Values"."Proba_4" AS "Proba_4", "Values"."LogProba_4" AS "LogProba_4", "Values"."Proba_5" AS "Proba_5", "Values"."LogProba_5" AS "LogProba_5", "Values"."Proba_6" AS "Proba_6", "Values"."LogProba_6" AS "LogProba_6", "Values"."Proba_7" AS "Proba_7", "Values"."LogProba_7" AS "LogProba_7", "Values"."Proba_8" AS "Proba_8", "Values"."LogProba_8" AS "LogProba_8", "Values"."Proba_9" AS "Proba_9", "Values"."LogProba_9" AS "LogProba_9", "Values"."Decision" AS "Decision", "Values"."DecisionProba" AS "DecisionProba" 
FROM (SELECT 1 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 246 AS count, 1 AS depth, 0 AS parent_id, 0.9967528084981474 AS "Proba_0", -0.00325247506911 AS "LogProba_0", 0.0004058989382104417 AS "Proba_1", -7.80940635001 AS "LogProba_1", 0.00040589893473789697 AS "Proba_2", -7.80940635857 AS "LogProba_2", 0.0004058989385058414 AS "Proba_3", -7.80940634928 AS "LogProba_3", 0.00040589893667884996 AS "Proba_4", -7.80940635379 AS "LogProba_4", 0.00040589893850067433 AS "Proba_5", -7.8094063493 AS "LogProba_5", 0.00040589893850264574 AS "Proba_6", -7.80940634929 AS "LogProba_6", 0.00040589893821044116 AS "Proba_7", -7.80940635001 AS "LogProba_7", 0.0 AS "Proba_8", -BINARY_FLOAT_INFINITY AS "LogProba_8", 0.00040589893850584224 AS "Proba_9", -7.80940634928 AS "LogProba_9", 0 AS "Decision", 0.996752808498 AS "DecisionProba" FROM DUAL UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1191 AS count, 1 AS depth, 0 AS parent_id, 7.207489844737683e-11 AS "Proba_0", -23.3533152814 AS "LogProba_0", 0.1111060818035347 AS "Proba_1", -2.19726984213 AS "LogProba_1", 0.11110608187599616 AS "Proba_2", -2.19726984148 AS "LogProba_2", 0.11110608187557672 AS "Proba_3", -2.19726984148 AS "LogProba_3", 0.11110608187577994 AS "Proba_4", -2.19726984148 AS "LogProba_4", 0.11110608187557694 AS "Proba_5", -2.19726984148 AS "LogProba_5", 0.11110608187557688 AS "Proba_6", -2.19726984148 AS "LogProba_6", 0.11110608180353415 AS "Proba_7", -2.19726984213 AS "LogProba_7", 0.11115134506677311 AS "Proba_8", -2.19686253728 AS "LogProba_8", 0.11110608187557647 AS "Proba_9", -2.19726984148 AS "LogProba_9", 8 AS "Decision", 0.111151345067 AS "DecisionProba" FROM DUAL) "Values"), 
"DT_Output_24" AS 
(SELECT "DT_node_lookup_24"."KEY" AS "KEY", "DT_node_lookup_24".node_id_2 AS node_id_2, "DT_node_data_24".node_id AS node_id, "DT_node_data_24".feature AS feature, "DT_node_data_24".threshold AS threshold, "DT_node_data_24".count AS count, "DT_node_data_24".depth AS depth, "DT_node_data_24".parent_id AS parent_id, "DT_node_data_24"."Proba_0" AS "Proba_0", "DT_node_data_24"."LogProba_0" AS "LogProba_0", "DT_node_data_24"."Proba_1" AS "Proba_1", "DT_node_data_24"."LogProba_1" AS "LogProba_1", "DT_node_data_24"."Proba_2" AS "Proba_2", "DT_node_data_24"."LogProba_2" AS "LogProba_2", "DT_node_data_24"."Proba_3" AS "Proba_3", "DT_node_data_24"."LogProba_3" AS "LogProba_3", "DT_node_data_24"."Proba_4" AS "Proba_4", "DT_node_data_24"."LogProba_4" AS "LogProba_4", "DT_node_data_24"."Proba_5" AS "Proba_5", "DT_node_data_24"."LogProba_5" AS "LogProba_5", "DT_node_data_24"."Proba_6" AS "Proba_6", "DT_node_data_24"."LogProba_6" AS "LogProba_6", "DT_node_data_24"."Proba_7" AS "Proba_7", "DT_node_data_24"."LogProba_7" AS "LogProba_7", "DT_node_data_24"."Proba_8" AS "Proba_8", "DT_node_data_24"."LogProba_8" AS "LogProba_8", "DT_node_data_24"."Proba_9" AS "Proba_9", "DT_node_data_24"."LogProba_9" AS "LogProba_9", "DT_node_data_24"."Decision" AS "Decision", "DT_node_data_24"."DecisionProba" AS "DecisionProba" 
FROM "DT_node_lookup_24" LEFT OUTER JOIN "DT_node_data_24" ON "DT_node_lookup_24".node_id_2 = "DT_node_data_24".node_id), 
"AdaBoost_Estim_24" AS 
(SELECT "DT_Output_24"."KEY" AS "KEY", (9.0 * (CASE WHEN ("DT_Output_24"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_24"."Proba_0" IS NULL OR "DT_Output_24"."Proba_0" > 0.0) THEN ln("DT_Output_24"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_24"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_24"."Proba_0" IS NULL OR "DT_Output_24"."Proba_0" > 0.0) THEN ln("DT_Output_24"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_24"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_24"."Proba_1" IS NULL OR "DT_Output_24"."Proba_1" > 0.0) THEN ln("DT_Output_24"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_24"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_24"."Proba_2" IS NULL OR "DT_Output_24"."Proba_2" > 0.0) THEN ln("DT_Output_24"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_24"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_24"."Proba_3" IS NULL OR "DT_Output_24"."Proba_3" > 0.0) THEN ln("DT_Output_24"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_24"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_24"."Proba_4" IS NULL OR "DT_Output_24"."Proba_4" > 0.0) THEN ln("DT_Output_24"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_24"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_24"."Proba_5" IS NULL OR "DT_Output_24"."Proba_5" > 0.0) THEN ln("DT_Output_24"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_24"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_24"."Proba_6" IS NULL OR "DT_Output_24"."Proba_6" > 0.0) THEN ln("DT_Output_24"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_24"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_24"."Proba_7" IS NULL OR "DT_Output_24"."Proba_7" > 0.0) THEN ln("DT_Output_24"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_24"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_24"."Proba_8" IS NULL OR "DT_Output_24"."Proba_8" > 0.0) THEN ln("DT_Output_24"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_24"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_24"."Proba_9" IS NULL OR "DT_Output_24"."Proba_9" > 0.0) THEN ln("DT_Output_24"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10)) / 32.0 AS "Score_0", 9.0 * (CASE WHEN ("DT_Output_24"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_24"."Proba_0" IS NULL OR "DT_Output_24"."Proba_0" > 0.0) THEN ln("DT_Output_24"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_24"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_24"."Proba_0" IS NULL OR "DT_Output_24"."Proba_0" > 0.0) THEN ln("DT_Output_24"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_24"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_24"."Proba_1" IS NULL OR "DT_Output_24"."Proba_1" > 0.0) THEN ln("DT_Output_24"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_24"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_24"."Proba_2" IS NULL OR "DT_Output_24"."Proba_2" > 0.0) THEN ln("DT_Output_24"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_24"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_24"."Proba_3" IS NULL OR "DT_Output_24"."Proba_3" > 0.0) THEN ln("DT_Output_24"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_24"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_24"."Proba_4" IS NULL OR "DT_Output_24"."Proba_4" > 0.0) THEN ln("DT_Output_24"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_24"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_24"."Proba_5" IS NULL OR "DT_Output_24"."Proba_5" > 0.0) THEN ln("DT_Output_24"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_24"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_24"."Proba_6" IS NULL OR "DT_Output_24"."Proba_6" > 0.0) THEN ln("DT_Output_24"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_24"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_24"."Proba_7" IS NULL OR "DT_Output_24"."Proba_7" > 0.0) THEN ln("DT_Output_24"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_24"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_24"."Proba_8" IS NULL OR "DT_Output_24"."Proba_8" > 0.0) THEN ln("DT_Output_24"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_24"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_24"."Proba_9" IS NULL OR "DT_Output_24"."Proba_9" > 0.0) THEN ln("DT_Output_24"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10) AS "Proba_0", (9.0 * (CASE WHEN ("DT_Output_24"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_24"."Proba_1" IS NULL OR "DT_Output_24"."Proba_1" > 0.0) THEN ln("DT_Output_24"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_24"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_24"."Proba_0" IS NULL OR "DT_Output_24"."Proba_0" > 0.0) THEN ln("DT_Output_24"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_24"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_24"."Proba_1" IS NULL OR "DT_Output_24"."Proba_1" > 0.0) THEN ln("DT_Output_24"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_24"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_24"."Proba_2" IS NULL OR "DT_Output_24"."Proba_2" > 0.0) THEN ln("DT_Output_24"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_24"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_24"."Proba_3" IS NULL OR "DT_Output_24"."Proba_3" > 0.0) THEN ln("DT_Output_24"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_24"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_24"."Proba_4" IS NULL OR "DT_Output_24"."Proba_4" > 0.0) THEN ln("DT_Output_24"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_24"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_24"."Proba_5" IS NULL OR "DT_Output_24"."Proba_5" > 0.0) THEN ln("DT_Output_24"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_24"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_24"."Proba_6" IS NULL OR "DT_Output_24"."Proba_6" > 0.0) THEN ln("DT_Output_24"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_24"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_24"."Proba_7" IS NULL OR "DT_Output_24"."Proba_7" > 0.0) THEN ln("DT_Output_24"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_24"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_24"."Proba_8" IS NULL OR "DT_Output_24"."Proba_8" > 0.0) THEN ln("DT_Output_24"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_24"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_24"."Proba_9" IS NULL OR "DT_Output_24"."Proba_9" > 0.0) THEN ln("DT_Output_24"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10)) / 32.0 AS "Score_1", 9.0 * (CASE WHEN ("DT_Output_24"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_24"."Proba_1" IS NULL OR "DT_Output_24"."Proba_1" > 0.0) THEN ln("DT_Output_24"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_24"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_24"."Proba_0" IS NULL OR "DT_Output_24"."Proba_0" > 0.0) THEN ln("DT_Output_24"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_24"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_24"."Proba_1" IS NULL OR "DT_Output_24"."Proba_1" > 0.0) THEN ln("DT_Output_24"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_24"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_24"."Proba_2" IS NULL OR "DT_Output_24"."Proba_2" > 0.0) THEN ln("DT_Output_24"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_24"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_24"."Proba_3" IS NULL OR "DT_Output_24"."Proba_3" > 0.0) THEN ln("DT_Output_24"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_24"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_24"."Proba_4" IS NULL OR "DT_Output_24"."Proba_4" > 0.0) THEN ln("DT_Output_24"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_24"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_24"."Proba_5" IS NULL OR "DT_Output_24"."Proba_5" > 0.0) THEN ln("DT_Output_24"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_24"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_24"."Proba_6" IS NULL OR "DT_Output_24"."Proba_6" > 0.0) THEN ln("DT_Output_24"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_24"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_24"."Proba_7" IS NULL OR "DT_Output_24"."Proba_7" > 0.0) THEN ln("DT_Output_24"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_24"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_24"."Proba_8" IS NULL OR "DT_Output_24"."Proba_8" > 0.0) THEN ln("DT_Output_24"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_24"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_24"."Proba_9" IS NULL OR "DT_Output_24"."Proba_9" > 0.0) THEN ln("DT_Output_24"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10) AS "Proba_1", (9.0 * (CASE WHEN ("DT_Output_24"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_24"."Proba_2" IS NULL OR "DT_Output_24"."Proba_2" > 0.0) THEN ln("DT_Output_24"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_24"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_24"."Proba_0" IS NULL OR "DT_Output_24"."Proba_0" > 0.0) THEN ln("DT_Output_24"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_24"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_24"."Proba_1" IS NULL OR "DT_Output_24"."Proba_1" > 0.0) THEN ln("DT_Output_24"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_24"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_24"."Proba_2" IS NULL OR "DT_Output_24"."Proba_2" > 0.0) THEN ln("DT_Output_24"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_24"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_24"."Proba_3" IS NULL OR "DT_Output_24"."Proba_3" > 0.0) THEN ln("DT_Output_24"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_24"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_24"."Proba_4" IS NULL OR "DT_Output_24"."Proba_4" > 0.0) THEN ln("DT_Output_24"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_24"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_24"."Proba_5" IS NULL OR "DT_Output_24"."Proba_5" > 0.0) THEN ln("DT_Output_24"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_24"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_24"."Proba_6" IS NULL OR "DT_Output_24"."Proba_6" > 0.0) THEN ln("DT_Output_24"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_24"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_24"."Proba_7" IS NULL OR "DT_Output_24"."Proba_7" > 0.0) THEN ln("DT_Output_24"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_24"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_24"."Proba_8" IS NULL OR "DT_Output_24"."Proba_8" > 0.0) THEN ln("DT_Output_24"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_24"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_24"."Proba_9" IS NULL OR "DT_Output_24"."Proba_9" > 0.0) THEN ln("DT_Output_24"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10)) / 32.0 AS "Score_2", 9.0 * (CASE WHEN ("DT_Output_24"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_24"."Proba_2" IS NULL OR "DT_Output_24"."Proba_2" > 0.0) THEN ln("DT_Output_24"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_24"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_24"."Proba_0" IS NULL OR "DT_Output_24"."Proba_0" > 0.0) THEN ln("DT_Output_24"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_24"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_24"."Proba_1" IS NULL OR "DT_Output_24"."Proba_1" > 0.0) THEN ln("DT_Output_24"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_24"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_24"."Proba_2" IS NULL OR "DT_Output_24"."Proba_2" > 0.0) THEN ln("DT_Output_24"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_24"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_24"."Proba_3" IS NULL OR "DT_Output_24"."Proba_3" > 0.0) THEN ln("DT_Output_24"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_24"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_24"."Proba_4" IS NULL OR "DT_Output_24"."Proba_4" > 0.0) THEN ln("DT_Output_24"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_24"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_24"."Proba_5" IS NULL OR "DT_Output_24"."Proba_5" > 0.0) THEN ln("DT_Output_24"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_24"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_24"."Proba_6" IS NULL OR "DT_Output_24"."Proba_6" > 0.0) THEN ln("DT_Output_24"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_24"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_24"."Proba_7" IS NULL OR "DT_Output_24"."Proba_7" > 0.0) THEN ln("DT_Output_24"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_24"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_24"."Proba_8" IS NULL OR "DT_Output_24"."Proba_8" > 0.0) THEN ln("DT_Output_24"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_24"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_24"."Proba_9" IS NULL OR "DT_Output_24"."Proba_9" > 0.0) THEN ln("DT_Output_24"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10) AS "Proba_2", (9.0 * (CASE WHEN ("DT_Output_24"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_24"."Proba_3" IS NULL OR "DT_Output_24"."Proba_3" > 0.0) THEN ln("DT_Output_24"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_24"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_24"."Proba_0" IS NULL OR "DT_Output_24"."Proba_0" > 0.0) THEN ln("DT_Output_24"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_24"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_24"."Proba_1" IS NULL OR "DT_Output_24"."Proba_1" > 0.0) THEN ln("DT_Output_24"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_24"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_24"."Proba_2" IS NULL OR "DT_Output_24"."Proba_2" > 0.0) THEN ln("DT_Output_24"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_24"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_24"."Proba_3" IS NULL OR "DT_Output_24"."Proba_3" > 0.0) THEN ln("DT_Output_24"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_24"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_24"."Proba_4" IS NULL OR "DT_Output_24"."Proba_4" > 0.0) THEN ln("DT_Output_24"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_24"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_24"."Proba_5" IS NULL OR "DT_Output_24"."Proba_5" > 0.0) THEN ln("DT_Output_24"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_24"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_24"."Proba_6" IS NULL OR "DT_Output_24"."Proba_6" > 0.0) THEN ln("DT_Output_24"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_24"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_24"."Proba_7" IS NULL OR "DT_Output_24"."Proba_7" > 0.0) THEN ln("DT_Output_24"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_24"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_24"."Proba_8" IS NULL OR "DT_Output_24"."Proba_8" > 0.0) THEN ln("DT_Output_24"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_24"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_24"."Proba_9" IS NULL OR "DT_Output_24"."Proba_9" > 0.0) THEN ln("DT_Output_24"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10)) / 32.0 AS "Score_3", 9.0 * (CASE WHEN ("DT_Output_24"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_24"."Proba_3" IS NULL OR "DT_Output_24"."Proba_3" > 0.0) THEN ln("DT_Output_24"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_24"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_24"."Proba_0" IS NULL OR "DT_Output_24"."Proba_0" > 0.0) THEN ln("DT_Output_24"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_24"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_24"."Proba_1" IS NULL OR "DT_Output_24"."Proba_1" > 0.0) THEN ln("DT_Output_24"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_24"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_24"."Proba_2" IS NULL OR "DT_Output_24"."Proba_2" > 0.0) THEN ln("DT_Output_24"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_24"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_24"."Proba_3" IS NULL OR "DT_Output_24"."Proba_3" > 0.0) THEN ln("DT_Output_24"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_24"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_24"."Proba_4" IS NULL OR "DT_Output_24"."Proba_4" > 0.0) THEN ln("DT_Output_24"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_24"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_24"."Proba_5" IS NULL OR "DT_Output_24"."Proba_5" > 0.0) THEN ln("DT_Output_24"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_24"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_24"."Proba_6" IS NULL OR "DT_Output_24"."Proba_6" > 0.0) THEN ln("DT_Output_24"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_24"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_24"."Proba_7" IS NULL OR "DT_Output_24"."Proba_7" > 0.0) THEN ln("DT_Output_24"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_24"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_24"."Proba_8" IS NULL OR "DT_Output_24"."Proba_8" > 0.0) THEN ln("DT_Output_24"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_24"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_24"."Proba_9" IS NULL OR "DT_Output_24"."Proba_9" > 0.0) THEN ln("DT_Output_24"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10) AS "Proba_3", (9.0 * (CASE WHEN ("DT_Output_24"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_24"."Proba_4" IS NULL OR "DT_Output_24"."Proba_4" > 0.0) THEN ln("DT_Output_24"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_24"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_24"."Proba_0" IS NULL OR "DT_Output_24"."Proba_0" > 0.0) THEN ln("DT_Output_24"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_24"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_24"."Proba_1" IS NULL OR "DT_Output_24"."Proba_1" > 0.0) THEN ln("DT_Output_24"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_24"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_24"."Proba_2" IS NULL OR "DT_Output_24"."Proba_2" > 0.0) THEN ln("DT_Output_24"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_24"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_24"."Proba_3" IS NULL OR "DT_Output_24"."Proba_3" > 0.0) THEN ln("DT_Output_24"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_24"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_24"."Proba_4" IS NULL OR "DT_Output_24"."Proba_4" > 0.0) THEN ln("DT_Output_24"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_24"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_24"."Proba_5" IS NULL OR "DT_Output_24"."Proba_5" > 0.0) THEN ln("DT_Output_24"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_24"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_24"."Proba_6" IS NULL OR "DT_Output_24"."Proba_6" > 0.0) THEN ln("DT_Output_24"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_24"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_24"."Proba_7" IS NULL OR "DT_Output_24"."Proba_7" > 0.0) THEN ln("DT_Output_24"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_24"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_24"."Proba_8" IS NULL OR "DT_Output_24"."Proba_8" > 0.0) THEN ln("DT_Output_24"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_24"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_24"."Proba_9" IS NULL OR "DT_Output_24"."Proba_9" > 0.0) THEN ln("DT_Output_24"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10)) / 32.0 AS "Score_4", 9.0 * (CASE WHEN ("DT_Output_24"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_24"."Proba_4" IS NULL OR "DT_Output_24"."Proba_4" > 0.0) THEN ln("DT_Output_24"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_24"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_24"."Proba_0" IS NULL OR "DT_Output_24"."Proba_0" > 0.0) THEN ln("DT_Output_24"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_24"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_24"."Proba_1" IS NULL OR "DT_Output_24"."Proba_1" > 0.0) THEN ln("DT_Output_24"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_24"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_24"."Proba_2" IS NULL OR "DT_Output_24"."Proba_2" > 0.0) THEN ln("DT_Output_24"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_24"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_24"."Proba_3" IS NULL OR "DT_Output_24"."Proba_3" > 0.0) THEN ln("DT_Output_24"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_24"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_24"."Proba_4" IS NULL OR "DT_Output_24"."Proba_4" > 0.0) THEN ln("DT_Output_24"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_24"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_24"."Proba_5" IS NULL OR "DT_Output_24"."Proba_5" > 0.0) THEN ln("DT_Output_24"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_24"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_24"."Proba_6" IS NULL OR "DT_Output_24"."Proba_6" > 0.0) THEN ln("DT_Output_24"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_24"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_24"."Proba_7" IS NULL OR "DT_Output_24"."Proba_7" > 0.0) THEN ln("DT_Output_24"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_24"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_24"."Proba_8" IS NULL OR "DT_Output_24"."Proba_8" > 0.0) THEN ln("DT_Output_24"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_24"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_24"."Proba_9" IS NULL OR "DT_Output_24"."Proba_9" > 0.0) THEN ln("DT_Output_24"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10) AS "Proba_4", (9.0 * (CASE WHEN ("DT_Output_24"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_24"."Proba_5" IS NULL OR "DT_Output_24"."Proba_5" > 0.0) THEN ln("DT_Output_24"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_24"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_24"."Proba_0" IS NULL OR "DT_Output_24"."Proba_0" > 0.0) THEN ln("DT_Output_24"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_24"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_24"."Proba_1" IS NULL OR "DT_Output_24"."Proba_1" > 0.0) THEN ln("DT_Output_24"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_24"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_24"."Proba_2" IS NULL OR "DT_Output_24"."Proba_2" > 0.0) THEN ln("DT_Output_24"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_24"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_24"."Proba_3" IS NULL OR "DT_Output_24"."Proba_3" > 0.0) THEN ln("DT_Output_24"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_24"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_24"."Proba_4" IS NULL OR "DT_Output_24"."Proba_4" > 0.0) THEN ln("DT_Output_24"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_24"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_24"."Proba_5" IS NULL OR "DT_Output_24"."Proba_5" > 0.0) THEN ln("DT_Output_24"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_24"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_24"."Proba_6" IS NULL OR "DT_Output_24"."Proba_6" > 0.0) THEN ln("DT_Output_24"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_24"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_24"."Proba_7" IS NULL OR "DT_Output_24"."Proba_7" > 0.0) THEN ln("DT_Output_24"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_24"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_24"."Proba_8" IS NULL OR "DT_Output_24"."Proba_8" > 0.0) THEN ln("DT_Output_24"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_24"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_24"."Proba_9" IS NULL OR "DT_Output_24"."Proba_9" > 0.0) THEN ln("DT_Output_24"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10)) / 32.0 AS "Score_5", 9.0 * (CASE WHEN ("DT_Output_24"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_24"."Proba_5" IS NULL OR "DT_Output_24"."Proba_5" > 0.0) THEN ln("DT_Output_24"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_24"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_24"."Proba_0" IS NULL OR "DT_Output_24"."Proba_0" > 0.0) THEN ln("DT_Output_24"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_24"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_24"."Proba_1" IS NULL OR "DT_Output_24"."Proba_1" > 0.0) THEN ln("DT_Output_24"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_24"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_24"."Proba_2" IS NULL OR "DT_Output_24"."Proba_2" > 0.0) THEN ln("DT_Output_24"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_24"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_24"."Proba_3" IS NULL OR "DT_Output_24"."Proba_3" > 0.0) THEN ln("DT_Output_24"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_24"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_24"."Proba_4" IS NULL OR "DT_Output_24"."Proba_4" > 0.0) THEN ln("DT_Output_24"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_24"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_24"."Proba_5" IS NULL OR "DT_Output_24"."Proba_5" > 0.0) THEN ln("DT_Output_24"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_24"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_24"."Proba_6" IS NULL OR "DT_Output_24"."Proba_6" > 0.0) THEN ln("DT_Output_24"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_24"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_24"."Proba_7" IS NULL OR "DT_Output_24"."Proba_7" > 0.0) THEN ln("DT_Output_24"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_24"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_24"."Proba_8" IS NULL OR "DT_Output_24"."Proba_8" > 0.0) THEN ln("DT_Output_24"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_24"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_24"."Proba_9" IS NULL OR "DT_Output_24"."Proba_9" > 0.0) THEN ln("DT_Output_24"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10) AS "Proba_5", (9.0 * (CASE WHEN ("DT_Output_24"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_24"."Proba_6" IS NULL OR "DT_Output_24"."Proba_6" > 0.0) THEN ln("DT_Output_24"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_24"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_24"."Proba_0" IS NULL OR "DT_Output_24"."Proba_0" > 0.0) THEN ln("DT_Output_24"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_24"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_24"."Proba_1" IS NULL OR "DT_Output_24"."Proba_1" > 0.0) THEN ln("DT_Output_24"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_24"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_24"."Proba_2" IS NULL OR "DT_Output_24"."Proba_2" > 0.0) THEN ln("DT_Output_24"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_24"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_24"."Proba_3" IS NULL OR "DT_Output_24"."Proba_3" > 0.0) THEN ln("DT_Output_24"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_24"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_24"."Proba_4" IS NULL OR "DT_Output_24"."Proba_4" > 0.0) THEN ln("DT_Output_24"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_24"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_24"."Proba_5" IS NULL OR "DT_Output_24"."Proba_5" > 0.0) THEN ln("DT_Output_24"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_24"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_24"."Proba_6" IS NULL OR "DT_Output_24"."Proba_6" > 0.0) THEN ln("DT_Output_24"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_24"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_24"."Proba_7" IS NULL OR "DT_Output_24"."Proba_7" > 0.0) THEN ln("DT_Output_24"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_24"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_24"."Proba_8" IS NULL OR "DT_Output_24"."Proba_8" > 0.0) THEN ln("DT_Output_24"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_24"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_24"."Proba_9" IS NULL OR "DT_Output_24"."Proba_9" > 0.0) THEN ln("DT_Output_24"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10)) / 32.0 AS "Score_6", 9.0 * (CASE WHEN ("DT_Output_24"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_24"."Proba_6" IS NULL OR "DT_Output_24"."Proba_6" > 0.0) THEN ln("DT_Output_24"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_24"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_24"."Proba_0" IS NULL OR "DT_Output_24"."Proba_0" > 0.0) THEN ln("DT_Output_24"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_24"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_24"."Proba_1" IS NULL OR "DT_Output_24"."Proba_1" > 0.0) THEN ln("DT_Output_24"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_24"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_24"."Proba_2" IS NULL OR "DT_Output_24"."Proba_2" > 0.0) THEN ln("DT_Output_24"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_24"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_24"."Proba_3" IS NULL OR "DT_Output_24"."Proba_3" > 0.0) THEN ln("DT_Output_24"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_24"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_24"."Proba_4" IS NULL OR "DT_Output_24"."Proba_4" > 0.0) THEN ln("DT_Output_24"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_24"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_24"."Proba_5" IS NULL OR "DT_Output_24"."Proba_5" > 0.0) THEN ln("DT_Output_24"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_24"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_24"."Proba_6" IS NULL OR "DT_Output_24"."Proba_6" > 0.0) THEN ln("DT_Output_24"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_24"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_24"."Proba_7" IS NULL OR "DT_Output_24"."Proba_7" > 0.0) THEN ln("DT_Output_24"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_24"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_24"."Proba_8" IS NULL OR "DT_Output_24"."Proba_8" > 0.0) THEN ln("DT_Output_24"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_24"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_24"."Proba_9" IS NULL OR "DT_Output_24"."Proba_9" > 0.0) THEN ln("DT_Output_24"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10) AS "Proba_6", (9.0 * (CASE WHEN ("DT_Output_24"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_24"."Proba_7" IS NULL OR "DT_Output_24"."Proba_7" > 0.0) THEN ln("DT_Output_24"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_24"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_24"."Proba_0" IS NULL OR "DT_Output_24"."Proba_0" > 0.0) THEN ln("DT_Output_24"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_24"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_24"."Proba_1" IS NULL OR "DT_Output_24"."Proba_1" > 0.0) THEN ln("DT_Output_24"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_24"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_24"."Proba_2" IS NULL OR "DT_Output_24"."Proba_2" > 0.0) THEN ln("DT_Output_24"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_24"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_24"."Proba_3" IS NULL OR "DT_Output_24"."Proba_3" > 0.0) THEN ln("DT_Output_24"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_24"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_24"."Proba_4" IS NULL OR "DT_Output_24"."Proba_4" > 0.0) THEN ln("DT_Output_24"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_24"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_24"."Proba_5" IS NULL OR "DT_Output_24"."Proba_5" > 0.0) THEN ln("DT_Output_24"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_24"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_24"."Proba_6" IS NULL OR "DT_Output_24"."Proba_6" > 0.0) THEN ln("DT_Output_24"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_24"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_24"."Proba_7" IS NULL OR "DT_Output_24"."Proba_7" > 0.0) THEN ln("DT_Output_24"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_24"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_24"."Proba_8" IS NULL OR "DT_Output_24"."Proba_8" > 0.0) THEN ln("DT_Output_24"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_24"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_24"."Proba_9" IS NULL OR "DT_Output_24"."Proba_9" > 0.0) THEN ln("DT_Output_24"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10)) / 32.0 AS "Score_7", 9.0 * (CASE WHEN ("DT_Output_24"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_24"."Proba_7" IS NULL OR "DT_Output_24"."Proba_7" > 0.0) THEN ln("DT_Output_24"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_24"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_24"."Proba_0" IS NULL OR "DT_Output_24"."Proba_0" > 0.0) THEN ln("DT_Output_24"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_24"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_24"."Proba_1" IS NULL OR "DT_Output_24"."Proba_1" > 0.0) THEN ln("DT_Output_24"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_24"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_24"."Proba_2" IS NULL OR "DT_Output_24"."Proba_2" > 0.0) THEN ln("DT_Output_24"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_24"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_24"."Proba_3" IS NULL OR "DT_Output_24"."Proba_3" > 0.0) THEN ln("DT_Output_24"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_24"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_24"."Proba_4" IS NULL OR "DT_Output_24"."Proba_4" > 0.0) THEN ln("DT_Output_24"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_24"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_24"."Proba_5" IS NULL OR "DT_Output_24"."Proba_5" > 0.0) THEN ln("DT_Output_24"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_24"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_24"."Proba_6" IS NULL OR "DT_Output_24"."Proba_6" > 0.0) THEN ln("DT_Output_24"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_24"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_24"."Proba_7" IS NULL OR "DT_Output_24"."Proba_7" > 0.0) THEN ln("DT_Output_24"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_24"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_24"."Proba_8" IS NULL OR "DT_Output_24"."Proba_8" > 0.0) THEN ln("DT_Output_24"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_24"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_24"."Proba_9" IS NULL OR "DT_Output_24"."Proba_9" > 0.0) THEN ln("DT_Output_24"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10) AS "Proba_7", (9.0 * (CASE WHEN ("DT_Output_24"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_24"."Proba_8" IS NULL OR "DT_Output_24"."Proba_8" > 0.0) THEN ln("DT_Output_24"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_24"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_24"."Proba_0" IS NULL OR "DT_Output_24"."Proba_0" > 0.0) THEN ln("DT_Output_24"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_24"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_24"."Proba_1" IS NULL OR "DT_Output_24"."Proba_1" > 0.0) THEN ln("DT_Output_24"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_24"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_24"."Proba_2" IS NULL OR "DT_Output_24"."Proba_2" > 0.0) THEN ln("DT_Output_24"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_24"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_24"."Proba_3" IS NULL OR "DT_Output_24"."Proba_3" > 0.0) THEN ln("DT_Output_24"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_24"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_24"."Proba_4" IS NULL OR "DT_Output_24"."Proba_4" > 0.0) THEN ln("DT_Output_24"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_24"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_24"."Proba_5" IS NULL OR "DT_Output_24"."Proba_5" > 0.0) THEN ln("DT_Output_24"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_24"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_24"."Proba_6" IS NULL OR "DT_Output_24"."Proba_6" > 0.0) THEN ln("DT_Output_24"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_24"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_24"."Proba_7" IS NULL OR "DT_Output_24"."Proba_7" > 0.0) THEN ln("DT_Output_24"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_24"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_24"."Proba_8" IS NULL OR "DT_Output_24"."Proba_8" > 0.0) THEN ln("DT_Output_24"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_24"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_24"."Proba_9" IS NULL OR "DT_Output_24"."Proba_9" > 0.0) THEN ln("DT_Output_24"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10)) / 32.0 AS "Score_8", 9.0 * (CASE WHEN ("DT_Output_24"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_24"."Proba_8" IS NULL OR "DT_Output_24"."Proba_8" > 0.0) THEN ln("DT_Output_24"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_24"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_24"."Proba_0" IS NULL OR "DT_Output_24"."Proba_0" > 0.0) THEN ln("DT_Output_24"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_24"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_24"."Proba_1" IS NULL OR "DT_Output_24"."Proba_1" > 0.0) THEN ln("DT_Output_24"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_24"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_24"."Proba_2" IS NULL OR "DT_Output_24"."Proba_2" > 0.0) THEN ln("DT_Output_24"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_24"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_24"."Proba_3" IS NULL OR "DT_Output_24"."Proba_3" > 0.0) THEN ln("DT_Output_24"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_24"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_24"."Proba_4" IS NULL OR "DT_Output_24"."Proba_4" > 0.0) THEN ln("DT_Output_24"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_24"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_24"."Proba_5" IS NULL OR "DT_Output_24"."Proba_5" > 0.0) THEN ln("DT_Output_24"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_24"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_24"."Proba_6" IS NULL OR "DT_Output_24"."Proba_6" > 0.0) THEN ln("DT_Output_24"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_24"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_24"."Proba_7" IS NULL OR "DT_Output_24"."Proba_7" > 0.0) THEN ln("DT_Output_24"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_24"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_24"."Proba_8" IS NULL OR "DT_Output_24"."Proba_8" > 0.0) THEN ln("DT_Output_24"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_24"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_24"."Proba_9" IS NULL OR "DT_Output_24"."Proba_9" > 0.0) THEN ln("DT_Output_24"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10) AS "Proba_8", (9.0 * (CASE WHEN ("DT_Output_24"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_24"."Proba_9" IS NULL OR "DT_Output_24"."Proba_9" > 0.0) THEN ln("DT_Output_24"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_24"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_24"."Proba_0" IS NULL OR "DT_Output_24"."Proba_0" > 0.0) THEN ln("DT_Output_24"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_24"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_24"."Proba_1" IS NULL OR "DT_Output_24"."Proba_1" > 0.0) THEN ln("DT_Output_24"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_24"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_24"."Proba_2" IS NULL OR "DT_Output_24"."Proba_2" > 0.0) THEN ln("DT_Output_24"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_24"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_24"."Proba_3" IS NULL OR "DT_Output_24"."Proba_3" > 0.0) THEN ln("DT_Output_24"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_24"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_24"."Proba_4" IS NULL OR "DT_Output_24"."Proba_4" > 0.0) THEN ln("DT_Output_24"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_24"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_24"."Proba_5" IS NULL OR "DT_Output_24"."Proba_5" > 0.0) THEN ln("DT_Output_24"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_24"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_24"."Proba_6" IS NULL OR "DT_Output_24"."Proba_6" > 0.0) THEN ln("DT_Output_24"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_24"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_24"."Proba_7" IS NULL OR "DT_Output_24"."Proba_7" > 0.0) THEN ln("DT_Output_24"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_24"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_24"."Proba_8" IS NULL OR "DT_Output_24"."Proba_8" > 0.0) THEN ln("DT_Output_24"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_24"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_24"."Proba_9" IS NULL OR "DT_Output_24"."Proba_9" > 0.0) THEN ln("DT_Output_24"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10)) / 32.0 AS "Score_9", 9.0 * (CASE WHEN ("DT_Output_24"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_24"."Proba_9" IS NULL OR "DT_Output_24"."Proba_9" > 0.0) THEN ln("DT_Output_24"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_24"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_24"."Proba_0" IS NULL OR "DT_Output_24"."Proba_0" > 0.0) THEN ln("DT_Output_24"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_24"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_24"."Proba_1" IS NULL OR "DT_Output_24"."Proba_1" > 0.0) THEN ln("DT_Output_24"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_24"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_24"."Proba_2" IS NULL OR "DT_Output_24"."Proba_2" > 0.0) THEN ln("DT_Output_24"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_24"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_24"."Proba_3" IS NULL OR "DT_Output_24"."Proba_3" > 0.0) THEN ln("DT_Output_24"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_24"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_24"."Proba_4" IS NULL OR "DT_Output_24"."Proba_4" > 0.0) THEN ln("DT_Output_24"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_24"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_24"."Proba_5" IS NULL OR "DT_Output_24"."Proba_5" > 0.0) THEN ln("DT_Output_24"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_24"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_24"."Proba_6" IS NULL OR "DT_Output_24"."Proba_6" > 0.0) THEN ln("DT_Output_24"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_24"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_24"."Proba_7" IS NULL OR "DT_Output_24"."Proba_7" > 0.0) THEN ln("DT_Output_24"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_24"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_24"."Proba_8" IS NULL OR "DT_Output_24"."Proba_8" > 0.0) THEN ln("DT_Output_24"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_24"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_24"."Proba_9" IS NULL OR "DT_Output_24"."Proba_9" > 0.0) THEN ln("DT_Output_24"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10) AS "Proba_9" 
FROM "DT_Output_24"), 
"DT_node_lookup_25" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_38 <= -1.6508052349090576) THEN 1 ELSE 2 END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_25" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Proba_0" AS "Proba_0", "Values"."LogProba_0" AS "LogProba_0", "Values"."Proba_1" AS "Proba_1", "Values"."LogProba_1" AS "LogProba_1", "Values"."Proba_2" AS "Proba_2", "Values"."LogProba_2" AS "LogProba_2", "Values"."Proba_3" AS "Proba_3", "Values"."LogProba_3" AS "LogProba_3", "Values"."Proba_4" AS "Proba_4", "Values"."LogProba_4" AS "LogProba_4", "Values"."Proba_5" AS "Proba_5", "Values"."LogProba_5" AS "LogProba_5", "Values"."Proba_6" AS "Proba_6", "Values"."LogProba_6" AS "LogProba_6", "Values"."Proba_7" AS "Proba_7", "Values"."LogProba_7" AS "LogProba_7", "Values"."Proba_8" AS "Proba_8", "Values"."LogProba_8" AS "LogProba_8", "Values"."Proba_9" AS "Proba_9", "Values"."LogProba_9" AS "LogProba_9", "Values"."Decision" AS "Decision", "Values"."DecisionProba" AS "DecisionProba" 
FROM (SELECT 1 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 219 AS count, 1 AS depth, 0 AS parent_id, 0.9999999954559581 AS "Proba_0", -4.54404193084e-09 AS "LogProba_0", 0.0 AS "Proba_1", -BINARY_FLOAT_INFINITY AS "LogProba_1", 6.509660554756475e-10 AS "Proba_2", -21.1525636172 AS "LogProba_2", 6.487034454205624e-10 AS "Proba_3", -21.1560454445 AS "LogProba_3", 6.498177447305581e-10 AS "Proba_4", -21.1543291851 AS "LogProba_4", 6.487066447368331e-10 AS "Proba_5", -21.1560405126 AS "LogProba_5", 6.487054250787691e-10 AS "Proba_6", -21.1560423927 AS "LogProba_6", 0.0 AS "Proba_7", -BINARY_FLOAT_INFINITY AS "LogProba_7", 6.48439279583773e-10 AS "Proba_8", -21.1564527487 AS "LogProba_8", 6.487034454205653e-10 AS "Proba_9", -21.1560454445 AS "LogProba_9", 0 AS "Decision", 0.999999995456 AS "DecisionProba" FROM DUAL UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1218 AS count, 1 AS depth, 0 AS parent_id, 4.865992863751264e-05 AS "Proba_0", -9.93065468716 AS "LogProba_0", 0.11111111116718585 AS "Proba_1", -2.19722457683 AS "LogProba_1", 0.11111111109488797 AS "Proba_2", -2.19722457748 AS "LogProba_2", 0.11111111109513923 AS "Proba_3", -2.19722457748 AS "LogProba_3", 0.11111111109501541 AS "Proba_4", -2.19722457748 AS "LogProba_4", 0.11111111109513865 AS "Proba_5", -2.19722457748 AS "LogProba_5", 0.11111111109513935 AS "Proba_6", -2.19722457748 AS "LogProba_6", 0.1111111111671857 AS "Proba_7", -2.19722457683 AS "LogProba_7", 0.11106245116653099 AS "Proba_8", -2.19766261276 AS "LogProba_8", 0.11111111109513921 AS "Proba_9", -2.19722457748 AS "LogProba_9", 1 AS "Decision", 0.111111111167 AS "DecisionProba" FROM DUAL) "Values"), 
"DT_Output_25" AS 
(SELECT "DT_node_lookup_25"."KEY" AS "KEY", "DT_node_lookup_25".node_id_2 AS node_id_2, "DT_node_data_25".node_id AS node_id, "DT_node_data_25".feature AS feature, "DT_node_data_25".threshold AS threshold, "DT_node_data_25".count AS count, "DT_node_data_25".depth AS depth, "DT_node_data_25".parent_id AS parent_id, "DT_node_data_25"."Proba_0" AS "Proba_0", "DT_node_data_25"."LogProba_0" AS "LogProba_0", "DT_node_data_25"."Proba_1" AS "Proba_1", "DT_node_data_25"."LogProba_1" AS "LogProba_1", "DT_node_data_25"."Proba_2" AS "Proba_2", "DT_node_data_25"."LogProba_2" AS "LogProba_2", "DT_node_data_25"."Proba_3" AS "Proba_3", "DT_node_data_25"."LogProba_3" AS "LogProba_3", "DT_node_data_25"."Proba_4" AS "Proba_4", "DT_node_data_25"."LogProba_4" AS "LogProba_4", "DT_node_data_25"."Proba_5" AS "Proba_5", "DT_node_data_25"."LogProba_5" AS "LogProba_5", "DT_node_data_25"."Proba_6" AS "Proba_6", "DT_node_data_25"."LogProba_6" AS "LogProba_6", "DT_node_data_25"."Proba_7" AS "Proba_7", "DT_node_data_25"."LogProba_7" AS "LogProba_7", "DT_node_data_25"."Proba_8" AS "Proba_8", "DT_node_data_25"."LogProba_8" AS "LogProba_8", "DT_node_data_25"."Proba_9" AS "Proba_9", "DT_node_data_25"."LogProba_9" AS "LogProba_9", "DT_node_data_25"."Decision" AS "Decision", "DT_node_data_25"."DecisionProba" AS "DecisionProba" 
FROM "DT_node_lookup_25" LEFT OUTER JOIN "DT_node_data_25" ON "DT_node_lookup_25".node_id_2 = "DT_node_data_25".node_id), 
"AdaBoost_Estim_25" AS 
(SELECT "DT_Output_25"."KEY" AS "KEY", (9.0 * (CASE WHEN ("DT_Output_25"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_25"."Proba_0" IS NULL OR "DT_Output_25"."Proba_0" > 0.0) THEN ln("DT_Output_25"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_25"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_25"."Proba_0" IS NULL OR "DT_Output_25"."Proba_0" > 0.0) THEN ln("DT_Output_25"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_25"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_25"."Proba_1" IS NULL OR "DT_Output_25"."Proba_1" > 0.0) THEN ln("DT_Output_25"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_25"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_25"."Proba_2" IS NULL OR "DT_Output_25"."Proba_2" > 0.0) THEN ln("DT_Output_25"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_25"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_25"."Proba_3" IS NULL OR "DT_Output_25"."Proba_3" > 0.0) THEN ln("DT_Output_25"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_25"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_25"."Proba_4" IS NULL OR "DT_Output_25"."Proba_4" > 0.0) THEN ln("DT_Output_25"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_25"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_25"."Proba_5" IS NULL OR "DT_Output_25"."Proba_5" > 0.0) THEN ln("DT_Output_25"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_25"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_25"."Proba_6" IS NULL OR "DT_Output_25"."Proba_6" > 0.0) THEN ln("DT_Output_25"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_25"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_25"."Proba_7" IS NULL OR "DT_Output_25"."Proba_7" > 0.0) THEN ln("DT_Output_25"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_25"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_25"."Proba_8" IS NULL OR "DT_Output_25"."Proba_8" > 0.0) THEN ln("DT_Output_25"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_25"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_25"."Proba_9" IS NULL OR "DT_Output_25"."Proba_9" > 0.0) THEN ln("DT_Output_25"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10)) / 32.0 AS "Score_0", 9.0 * (CASE WHEN ("DT_Output_25"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_25"."Proba_0" IS NULL OR "DT_Output_25"."Proba_0" > 0.0) THEN ln("DT_Output_25"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_25"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_25"."Proba_0" IS NULL OR "DT_Output_25"."Proba_0" > 0.0) THEN ln("DT_Output_25"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_25"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_25"."Proba_1" IS NULL OR "DT_Output_25"."Proba_1" > 0.0) THEN ln("DT_Output_25"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_25"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_25"."Proba_2" IS NULL OR "DT_Output_25"."Proba_2" > 0.0) THEN ln("DT_Output_25"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_25"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_25"."Proba_3" IS NULL OR "DT_Output_25"."Proba_3" > 0.0) THEN ln("DT_Output_25"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_25"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_25"."Proba_4" IS NULL OR "DT_Output_25"."Proba_4" > 0.0) THEN ln("DT_Output_25"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_25"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_25"."Proba_5" IS NULL OR "DT_Output_25"."Proba_5" > 0.0) THEN ln("DT_Output_25"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_25"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_25"."Proba_6" IS NULL OR "DT_Output_25"."Proba_6" > 0.0) THEN ln("DT_Output_25"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_25"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_25"."Proba_7" IS NULL OR "DT_Output_25"."Proba_7" > 0.0) THEN ln("DT_Output_25"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_25"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_25"."Proba_8" IS NULL OR "DT_Output_25"."Proba_8" > 0.0) THEN ln("DT_Output_25"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_25"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_25"."Proba_9" IS NULL OR "DT_Output_25"."Proba_9" > 0.0) THEN ln("DT_Output_25"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10) AS "Proba_0", (9.0 * (CASE WHEN ("DT_Output_25"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_25"."Proba_1" IS NULL OR "DT_Output_25"."Proba_1" > 0.0) THEN ln("DT_Output_25"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_25"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_25"."Proba_0" IS NULL OR "DT_Output_25"."Proba_0" > 0.0) THEN ln("DT_Output_25"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_25"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_25"."Proba_1" IS NULL OR "DT_Output_25"."Proba_1" > 0.0) THEN ln("DT_Output_25"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_25"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_25"."Proba_2" IS NULL OR "DT_Output_25"."Proba_2" > 0.0) THEN ln("DT_Output_25"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_25"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_25"."Proba_3" IS NULL OR "DT_Output_25"."Proba_3" > 0.0) THEN ln("DT_Output_25"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_25"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_25"."Proba_4" IS NULL OR "DT_Output_25"."Proba_4" > 0.0) THEN ln("DT_Output_25"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_25"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_25"."Proba_5" IS NULL OR "DT_Output_25"."Proba_5" > 0.0) THEN ln("DT_Output_25"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_25"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_25"."Proba_6" IS NULL OR "DT_Output_25"."Proba_6" > 0.0) THEN ln("DT_Output_25"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_25"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_25"."Proba_7" IS NULL OR "DT_Output_25"."Proba_7" > 0.0) THEN ln("DT_Output_25"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_25"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_25"."Proba_8" IS NULL OR "DT_Output_25"."Proba_8" > 0.0) THEN ln("DT_Output_25"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_25"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_25"."Proba_9" IS NULL OR "DT_Output_25"."Proba_9" > 0.0) THEN ln("DT_Output_25"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10)) / 32.0 AS "Score_1", 9.0 * (CASE WHEN ("DT_Output_25"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_25"."Proba_1" IS NULL OR "DT_Output_25"."Proba_1" > 0.0) THEN ln("DT_Output_25"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_25"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_25"."Proba_0" IS NULL OR "DT_Output_25"."Proba_0" > 0.0) THEN ln("DT_Output_25"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_25"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_25"."Proba_1" IS NULL OR "DT_Output_25"."Proba_1" > 0.0) THEN ln("DT_Output_25"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_25"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_25"."Proba_2" IS NULL OR "DT_Output_25"."Proba_2" > 0.0) THEN ln("DT_Output_25"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_25"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_25"."Proba_3" IS NULL OR "DT_Output_25"."Proba_3" > 0.0) THEN ln("DT_Output_25"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_25"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_25"."Proba_4" IS NULL OR "DT_Output_25"."Proba_4" > 0.0) THEN ln("DT_Output_25"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_25"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_25"."Proba_5" IS NULL OR "DT_Output_25"."Proba_5" > 0.0) THEN ln("DT_Output_25"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_25"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_25"."Proba_6" IS NULL OR "DT_Output_25"."Proba_6" > 0.0) THEN ln("DT_Output_25"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_25"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_25"."Proba_7" IS NULL OR "DT_Output_25"."Proba_7" > 0.0) THEN ln("DT_Output_25"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_25"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_25"."Proba_8" IS NULL OR "DT_Output_25"."Proba_8" > 0.0) THEN ln("DT_Output_25"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_25"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_25"."Proba_9" IS NULL OR "DT_Output_25"."Proba_9" > 0.0) THEN ln("DT_Output_25"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10) AS "Proba_1", (9.0 * (CASE WHEN ("DT_Output_25"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_25"."Proba_2" IS NULL OR "DT_Output_25"."Proba_2" > 0.0) THEN ln("DT_Output_25"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_25"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_25"."Proba_0" IS NULL OR "DT_Output_25"."Proba_0" > 0.0) THEN ln("DT_Output_25"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_25"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_25"."Proba_1" IS NULL OR "DT_Output_25"."Proba_1" > 0.0) THEN ln("DT_Output_25"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_25"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_25"."Proba_2" IS NULL OR "DT_Output_25"."Proba_2" > 0.0) THEN ln("DT_Output_25"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_25"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_25"."Proba_3" IS NULL OR "DT_Output_25"."Proba_3" > 0.0) THEN ln("DT_Output_25"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_25"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_25"."Proba_4" IS NULL OR "DT_Output_25"."Proba_4" > 0.0) THEN ln("DT_Output_25"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_25"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_25"."Proba_5" IS NULL OR "DT_Output_25"."Proba_5" > 0.0) THEN ln("DT_Output_25"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_25"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_25"."Proba_6" IS NULL OR "DT_Output_25"."Proba_6" > 0.0) THEN ln("DT_Output_25"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_25"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_25"."Proba_7" IS NULL OR "DT_Output_25"."Proba_7" > 0.0) THEN ln("DT_Output_25"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_25"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_25"."Proba_8" IS NULL OR "DT_Output_25"."Proba_8" > 0.0) THEN ln("DT_Output_25"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_25"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_25"."Proba_9" IS NULL OR "DT_Output_25"."Proba_9" > 0.0) THEN ln("DT_Output_25"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10)) / 32.0 AS "Score_2", 9.0 * (CASE WHEN ("DT_Output_25"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_25"."Proba_2" IS NULL OR "DT_Output_25"."Proba_2" > 0.0) THEN ln("DT_Output_25"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_25"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_25"."Proba_0" IS NULL OR "DT_Output_25"."Proba_0" > 0.0) THEN ln("DT_Output_25"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_25"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_25"."Proba_1" IS NULL OR "DT_Output_25"."Proba_1" > 0.0) THEN ln("DT_Output_25"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_25"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_25"."Proba_2" IS NULL OR "DT_Output_25"."Proba_2" > 0.0) THEN ln("DT_Output_25"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_25"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_25"."Proba_3" IS NULL OR "DT_Output_25"."Proba_3" > 0.0) THEN ln("DT_Output_25"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_25"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_25"."Proba_4" IS NULL OR "DT_Output_25"."Proba_4" > 0.0) THEN ln("DT_Output_25"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_25"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_25"."Proba_5" IS NULL OR "DT_Output_25"."Proba_5" > 0.0) THEN ln("DT_Output_25"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_25"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_25"."Proba_6" IS NULL OR "DT_Output_25"."Proba_6" > 0.0) THEN ln("DT_Output_25"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_25"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_25"."Proba_7" IS NULL OR "DT_Output_25"."Proba_7" > 0.0) THEN ln("DT_Output_25"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_25"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_25"."Proba_8" IS NULL OR "DT_Output_25"."Proba_8" > 0.0) THEN ln("DT_Output_25"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_25"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_25"."Proba_9" IS NULL OR "DT_Output_25"."Proba_9" > 0.0) THEN ln("DT_Output_25"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10) AS "Proba_2", (9.0 * (CASE WHEN ("DT_Output_25"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_25"."Proba_3" IS NULL OR "DT_Output_25"."Proba_3" > 0.0) THEN ln("DT_Output_25"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_25"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_25"."Proba_0" IS NULL OR "DT_Output_25"."Proba_0" > 0.0) THEN ln("DT_Output_25"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_25"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_25"."Proba_1" IS NULL OR "DT_Output_25"."Proba_1" > 0.0) THEN ln("DT_Output_25"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_25"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_25"."Proba_2" IS NULL OR "DT_Output_25"."Proba_2" > 0.0) THEN ln("DT_Output_25"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_25"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_25"."Proba_3" IS NULL OR "DT_Output_25"."Proba_3" > 0.0) THEN ln("DT_Output_25"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_25"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_25"."Proba_4" IS NULL OR "DT_Output_25"."Proba_4" > 0.0) THEN ln("DT_Output_25"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_25"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_25"."Proba_5" IS NULL OR "DT_Output_25"."Proba_5" > 0.0) THEN ln("DT_Output_25"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_25"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_25"."Proba_6" IS NULL OR "DT_Output_25"."Proba_6" > 0.0) THEN ln("DT_Output_25"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_25"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_25"."Proba_7" IS NULL OR "DT_Output_25"."Proba_7" > 0.0) THEN ln("DT_Output_25"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_25"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_25"."Proba_8" IS NULL OR "DT_Output_25"."Proba_8" > 0.0) THEN ln("DT_Output_25"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_25"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_25"."Proba_9" IS NULL OR "DT_Output_25"."Proba_9" > 0.0) THEN ln("DT_Output_25"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10)) / 32.0 AS "Score_3", 9.0 * (CASE WHEN ("DT_Output_25"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_25"."Proba_3" IS NULL OR "DT_Output_25"."Proba_3" > 0.0) THEN ln("DT_Output_25"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_25"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_25"."Proba_0" IS NULL OR "DT_Output_25"."Proba_0" > 0.0) THEN ln("DT_Output_25"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_25"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_25"."Proba_1" IS NULL OR "DT_Output_25"."Proba_1" > 0.0) THEN ln("DT_Output_25"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_25"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_25"."Proba_2" IS NULL OR "DT_Output_25"."Proba_2" > 0.0) THEN ln("DT_Output_25"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_25"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_25"."Proba_3" IS NULL OR "DT_Output_25"."Proba_3" > 0.0) THEN ln("DT_Output_25"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_25"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_25"."Proba_4" IS NULL OR "DT_Output_25"."Proba_4" > 0.0) THEN ln("DT_Output_25"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_25"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_25"."Proba_5" IS NULL OR "DT_Output_25"."Proba_5" > 0.0) THEN ln("DT_Output_25"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_25"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_25"."Proba_6" IS NULL OR "DT_Output_25"."Proba_6" > 0.0) THEN ln("DT_Output_25"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_25"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_25"."Proba_7" IS NULL OR "DT_Output_25"."Proba_7" > 0.0) THEN ln("DT_Output_25"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_25"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_25"."Proba_8" IS NULL OR "DT_Output_25"."Proba_8" > 0.0) THEN ln("DT_Output_25"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_25"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_25"."Proba_9" IS NULL OR "DT_Output_25"."Proba_9" > 0.0) THEN ln("DT_Output_25"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10) AS "Proba_3", (9.0 * (CASE WHEN ("DT_Output_25"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_25"."Proba_4" IS NULL OR "DT_Output_25"."Proba_4" > 0.0) THEN ln("DT_Output_25"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_25"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_25"."Proba_0" IS NULL OR "DT_Output_25"."Proba_0" > 0.0) THEN ln("DT_Output_25"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_25"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_25"."Proba_1" IS NULL OR "DT_Output_25"."Proba_1" > 0.0) THEN ln("DT_Output_25"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_25"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_25"."Proba_2" IS NULL OR "DT_Output_25"."Proba_2" > 0.0) THEN ln("DT_Output_25"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_25"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_25"."Proba_3" IS NULL OR "DT_Output_25"."Proba_3" > 0.0) THEN ln("DT_Output_25"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_25"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_25"."Proba_4" IS NULL OR "DT_Output_25"."Proba_4" > 0.0) THEN ln("DT_Output_25"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_25"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_25"."Proba_5" IS NULL OR "DT_Output_25"."Proba_5" > 0.0) THEN ln("DT_Output_25"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_25"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_25"."Proba_6" IS NULL OR "DT_Output_25"."Proba_6" > 0.0) THEN ln("DT_Output_25"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_25"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_25"."Proba_7" IS NULL OR "DT_Output_25"."Proba_7" > 0.0) THEN ln("DT_Output_25"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_25"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_25"."Proba_8" IS NULL OR "DT_Output_25"."Proba_8" > 0.0) THEN ln("DT_Output_25"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_25"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_25"."Proba_9" IS NULL OR "DT_Output_25"."Proba_9" > 0.0) THEN ln("DT_Output_25"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10)) / 32.0 AS "Score_4", 9.0 * (CASE WHEN ("DT_Output_25"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_25"."Proba_4" IS NULL OR "DT_Output_25"."Proba_4" > 0.0) THEN ln("DT_Output_25"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_25"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_25"."Proba_0" IS NULL OR "DT_Output_25"."Proba_0" > 0.0) THEN ln("DT_Output_25"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_25"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_25"."Proba_1" IS NULL OR "DT_Output_25"."Proba_1" > 0.0) THEN ln("DT_Output_25"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_25"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_25"."Proba_2" IS NULL OR "DT_Output_25"."Proba_2" > 0.0) THEN ln("DT_Output_25"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_25"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_25"."Proba_3" IS NULL OR "DT_Output_25"."Proba_3" > 0.0) THEN ln("DT_Output_25"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_25"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_25"."Proba_4" IS NULL OR "DT_Output_25"."Proba_4" > 0.0) THEN ln("DT_Output_25"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_25"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_25"."Proba_5" IS NULL OR "DT_Output_25"."Proba_5" > 0.0) THEN ln("DT_Output_25"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_25"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_25"."Proba_6" IS NULL OR "DT_Output_25"."Proba_6" > 0.0) THEN ln("DT_Output_25"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_25"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_25"."Proba_7" IS NULL OR "DT_Output_25"."Proba_7" > 0.0) THEN ln("DT_Output_25"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_25"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_25"."Proba_8" IS NULL OR "DT_Output_25"."Proba_8" > 0.0) THEN ln("DT_Output_25"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_25"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_25"."Proba_9" IS NULL OR "DT_Output_25"."Proba_9" > 0.0) THEN ln("DT_Output_25"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10) AS "Proba_4", (9.0 * (CASE WHEN ("DT_Output_25"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_25"."Proba_5" IS NULL OR "DT_Output_25"."Proba_5" > 0.0) THEN ln("DT_Output_25"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_25"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_25"."Proba_0" IS NULL OR "DT_Output_25"."Proba_0" > 0.0) THEN ln("DT_Output_25"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_25"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_25"."Proba_1" IS NULL OR "DT_Output_25"."Proba_1" > 0.0) THEN ln("DT_Output_25"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_25"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_25"."Proba_2" IS NULL OR "DT_Output_25"."Proba_2" > 0.0) THEN ln("DT_Output_25"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_25"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_25"."Proba_3" IS NULL OR "DT_Output_25"."Proba_3" > 0.0) THEN ln("DT_Output_25"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_25"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_25"."Proba_4" IS NULL OR "DT_Output_25"."Proba_4" > 0.0) THEN ln("DT_Output_25"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_25"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_25"."Proba_5" IS NULL OR "DT_Output_25"."Proba_5" > 0.0) THEN ln("DT_Output_25"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_25"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_25"."Proba_6" IS NULL OR "DT_Output_25"."Proba_6" > 0.0) THEN ln("DT_Output_25"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_25"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_25"."Proba_7" IS NULL OR "DT_Output_25"."Proba_7" > 0.0) THEN ln("DT_Output_25"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_25"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_25"."Proba_8" IS NULL OR "DT_Output_25"."Proba_8" > 0.0) THEN ln("DT_Output_25"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_25"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_25"."Proba_9" IS NULL OR "DT_Output_25"."Proba_9" > 0.0) THEN ln("DT_Output_25"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10)) / 32.0 AS "Score_5", 9.0 * (CASE WHEN ("DT_Output_25"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_25"."Proba_5" IS NULL OR "DT_Output_25"."Proba_5" > 0.0) THEN ln("DT_Output_25"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_25"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_25"."Proba_0" IS NULL OR "DT_Output_25"."Proba_0" > 0.0) THEN ln("DT_Output_25"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_25"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_25"."Proba_1" IS NULL OR "DT_Output_25"."Proba_1" > 0.0) THEN ln("DT_Output_25"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_25"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_25"."Proba_2" IS NULL OR "DT_Output_25"."Proba_2" > 0.0) THEN ln("DT_Output_25"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_25"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_25"."Proba_3" IS NULL OR "DT_Output_25"."Proba_3" > 0.0) THEN ln("DT_Output_25"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_25"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_25"."Proba_4" IS NULL OR "DT_Output_25"."Proba_4" > 0.0) THEN ln("DT_Output_25"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_25"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_25"."Proba_5" IS NULL OR "DT_Output_25"."Proba_5" > 0.0) THEN ln("DT_Output_25"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_25"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_25"."Proba_6" IS NULL OR "DT_Output_25"."Proba_6" > 0.0) THEN ln("DT_Output_25"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_25"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_25"."Proba_7" IS NULL OR "DT_Output_25"."Proba_7" > 0.0) THEN ln("DT_Output_25"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_25"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_25"."Proba_8" IS NULL OR "DT_Output_25"."Proba_8" > 0.0) THEN ln("DT_Output_25"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_25"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_25"."Proba_9" IS NULL OR "DT_Output_25"."Proba_9" > 0.0) THEN ln("DT_Output_25"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10) AS "Proba_5", (9.0 * (CASE WHEN ("DT_Output_25"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_25"."Proba_6" IS NULL OR "DT_Output_25"."Proba_6" > 0.0) THEN ln("DT_Output_25"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_25"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_25"."Proba_0" IS NULL OR "DT_Output_25"."Proba_0" > 0.0) THEN ln("DT_Output_25"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_25"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_25"."Proba_1" IS NULL OR "DT_Output_25"."Proba_1" > 0.0) THEN ln("DT_Output_25"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_25"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_25"."Proba_2" IS NULL OR "DT_Output_25"."Proba_2" > 0.0) THEN ln("DT_Output_25"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_25"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_25"."Proba_3" IS NULL OR "DT_Output_25"."Proba_3" > 0.0) THEN ln("DT_Output_25"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_25"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_25"."Proba_4" IS NULL OR "DT_Output_25"."Proba_4" > 0.0) THEN ln("DT_Output_25"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_25"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_25"."Proba_5" IS NULL OR "DT_Output_25"."Proba_5" > 0.0) THEN ln("DT_Output_25"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_25"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_25"."Proba_6" IS NULL OR "DT_Output_25"."Proba_6" > 0.0) THEN ln("DT_Output_25"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_25"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_25"."Proba_7" IS NULL OR "DT_Output_25"."Proba_7" > 0.0) THEN ln("DT_Output_25"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_25"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_25"."Proba_8" IS NULL OR "DT_Output_25"."Proba_8" > 0.0) THEN ln("DT_Output_25"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_25"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_25"."Proba_9" IS NULL OR "DT_Output_25"."Proba_9" > 0.0) THEN ln("DT_Output_25"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10)) / 32.0 AS "Score_6", 9.0 * (CASE WHEN ("DT_Output_25"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_25"."Proba_6" IS NULL OR "DT_Output_25"."Proba_6" > 0.0) THEN ln("DT_Output_25"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_25"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_25"."Proba_0" IS NULL OR "DT_Output_25"."Proba_0" > 0.0) THEN ln("DT_Output_25"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_25"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_25"."Proba_1" IS NULL OR "DT_Output_25"."Proba_1" > 0.0) THEN ln("DT_Output_25"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_25"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_25"."Proba_2" IS NULL OR "DT_Output_25"."Proba_2" > 0.0) THEN ln("DT_Output_25"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_25"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_25"."Proba_3" IS NULL OR "DT_Output_25"."Proba_3" > 0.0) THEN ln("DT_Output_25"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_25"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_25"."Proba_4" IS NULL OR "DT_Output_25"."Proba_4" > 0.0) THEN ln("DT_Output_25"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_25"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_25"."Proba_5" IS NULL OR "DT_Output_25"."Proba_5" > 0.0) THEN ln("DT_Output_25"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_25"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_25"."Proba_6" IS NULL OR "DT_Output_25"."Proba_6" > 0.0) THEN ln("DT_Output_25"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_25"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_25"."Proba_7" IS NULL OR "DT_Output_25"."Proba_7" > 0.0) THEN ln("DT_Output_25"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_25"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_25"."Proba_8" IS NULL OR "DT_Output_25"."Proba_8" > 0.0) THEN ln("DT_Output_25"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_25"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_25"."Proba_9" IS NULL OR "DT_Output_25"."Proba_9" > 0.0) THEN ln("DT_Output_25"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10) AS "Proba_6", (9.0 * (CASE WHEN ("DT_Output_25"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_25"."Proba_7" IS NULL OR "DT_Output_25"."Proba_7" > 0.0) THEN ln("DT_Output_25"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_25"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_25"."Proba_0" IS NULL OR "DT_Output_25"."Proba_0" > 0.0) THEN ln("DT_Output_25"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_25"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_25"."Proba_1" IS NULL OR "DT_Output_25"."Proba_1" > 0.0) THEN ln("DT_Output_25"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_25"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_25"."Proba_2" IS NULL OR "DT_Output_25"."Proba_2" > 0.0) THEN ln("DT_Output_25"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_25"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_25"."Proba_3" IS NULL OR "DT_Output_25"."Proba_3" > 0.0) THEN ln("DT_Output_25"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_25"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_25"."Proba_4" IS NULL OR "DT_Output_25"."Proba_4" > 0.0) THEN ln("DT_Output_25"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_25"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_25"."Proba_5" IS NULL OR "DT_Output_25"."Proba_5" > 0.0) THEN ln("DT_Output_25"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_25"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_25"."Proba_6" IS NULL OR "DT_Output_25"."Proba_6" > 0.0) THEN ln("DT_Output_25"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_25"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_25"."Proba_7" IS NULL OR "DT_Output_25"."Proba_7" > 0.0) THEN ln("DT_Output_25"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_25"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_25"."Proba_8" IS NULL OR "DT_Output_25"."Proba_8" > 0.0) THEN ln("DT_Output_25"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_25"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_25"."Proba_9" IS NULL OR "DT_Output_25"."Proba_9" > 0.0) THEN ln("DT_Output_25"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10)) / 32.0 AS "Score_7", 9.0 * (CASE WHEN ("DT_Output_25"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_25"."Proba_7" IS NULL OR "DT_Output_25"."Proba_7" > 0.0) THEN ln("DT_Output_25"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_25"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_25"."Proba_0" IS NULL OR "DT_Output_25"."Proba_0" > 0.0) THEN ln("DT_Output_25"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_25"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_25"."Proba_1" IS NULL OR "DT_Output_25"."Proba_1" > 0.0) THEN ln("DT_Output_25"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_25"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_25"."Proba_2" IS NULL OR "DT_Output_25"."Proba_2" > 0.0) THEN ln("DT_Output_25"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_25"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_25"."Proba_3" IS NULL OR "DT_Output_25"."Proba_3" > 0.0) THEN ln("DT_Output_25"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_25"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_25"."Proba_4" IS NULL OR "DT_Output_25"."Proba_4" > 0.0) THEN ln("DT_Output_25"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_25"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_25"."Proba_5" IS NULL OR "DT_Output_25"."Proba_5" > 0.0) THEN ln("DT_Output_25"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_25"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_25"."Proba_6" IS NULL OR "DT_Output_25"."Proba_6" > 0.0) THEN ln("DT_Output_25"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_25"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_25"."Proba_7" IS NULL OR "DT_Output_25"."Proba_7" > 0.0) THEN ln("DT_Output_25"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_25"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_25"."Proba_8" IS NULL OR "DT_Output_25"."Proba_8" > 0.0) THEN ln("DT_Output_25"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_25"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_25"."Proba_9" IS NULL OR "DT_Output_25"."Proba_9" > 0.0) THEN ln("DT_Output_25"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10) AS "Proba_7", (9.0 * (CASE WHEN ("DT_Output_25"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_25"."Proba_8" IS NULL OR "DT_Output_25"."Proba_8" > 0.0) THEN ln("DT_Output_25"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_25"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_25"."Proba_0" IS NULL OR "DT_Output_25"."Proba_0" > 0.0) THEN ln("DT_Output_25"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_25"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_25"."Proba_1" IS NULL OR "DT_Output_25"."Proba_1" > 0.0) THEN ln("DT_Output_25"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_25"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_25"."Proba_2" IS NULL OR "DT_Output_25"."Proba_2" > 0.0) THEN ln("DT_Output_25"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_25"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_25"."Proba_3" IS NULL OR "DT_Output_25"."Proba_3" > 0.0) THEN ln("DT_Output_25"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_25"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_25"."Proba_4" IS NULL OR "DT_Output_25"."Proba_4" > 0.0) THEN ln("DT_Output_25"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_25"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_25"."Proba_5" IS NULL OR "DT_Output_25"."Proba_5" > 0.0) THEN ln("DT_Output_25"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_25"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_25"."Proba_6" IS NULL OR "DT_Output_25"."Proba_6" > 0.0) THEN ln("DT_Output_25"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_25"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_25"."Proba_7" IS NULL OR "DT_Output_25"."Proba_7" > 0.0) THEN ln("DT_Output_25"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_25"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_25"."Proba_8" IS NULL OR "DT_Output_25"."Proba_8" > 0.0) THEN ln("DT_Output_25"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_25"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_25"."Proba_9" IS NULL OR "DT_Output_25"."Proba_9" > 0.0) THEN ln("DT_Output_25"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10)) / 32.0 AS "Score_8", 9.0 * (CASE WHEN ("DT_Output_25"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_25"."Proba_8" IS NULL OR "DT_Output_25"."Proba_8" > 0.0) THEN ln("DT_Output_25"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_25"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_25"."Proba_0" IS NULL OR "DT_Output_25"."Proba_0" > 0.0) THEN ln("DT_Output_25"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_25"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_25"."Proba_1" IS NULL OR "DT_Output_25"."Proba_1" > 0.0) THEN ln("DT_Output_25"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_25"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_25"."Proba_2" IS NULL OR "DT_Output_25"."Proba_2" > 0.0) THEN ln("DT_Output_25"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_25"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_25"."Proba_3" IS NULL OR "DT_Output_25"."Proba_3" > 0.0) THEN ln("DT_Output_25"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_25"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_25"."Proba_4" IS NULL OR "DT_Output_25"."Proba_4" > 0.0) THEN ln("DT_Output_25"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_25"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_25"."Proba_5" IS NULL OR "DT_Output_25"."Proba_5" > 0.0) THEN ln("DT_Output_25"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_25"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_25"."Proba_6" IS NULL OR "DT_Output_25"."Proba_6" > 0.0) THEN ln("DT_Output_25"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_25"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_25"."Proba_7" IS NULL OR "DT_Output_25"."Proba_7" > 0.0) THEN ln("DT_Output_25"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_25"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_25"."Proba_8" IS NULL OR "DT_Output_25"."Proba_8" > 0.0) THEN ln("DT_Output_25"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_25"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_25"."Proba_9" IS NULL OR "DT_Output_25"."Proba_9" > 0.0) THEN ln("DT_Output_25"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10) AS "Proba_8", (9.0 * (CASE WHEN ("DT_Output_25"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_25"."Proba_9" IS NULL OR "DT_Output_25"."Proba_9" > 0.0) THEN ln("DT_Output_25"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_25"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_25"."Proba_0" IS NULL OR "DT_Output_25"."Proba_0" > 0.0) THEN ln("DT_Output_25"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_25"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_25"."Proba_1" IS NULL OR "DT_Output_25"."Proba_1" > 0.0) THEN ln("DT_Output_25"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_25"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_25"."Proba_2" IS NULL OR "DT_Output_25"."Proba_2" > 0.0) THEN ln("DT_Output_25"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_25"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_25"."Proba_3" IS NULL OR "DT_Output_25"."Proba_3" > 0.0) THEN ln("DT_Output_25"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_25"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_25"."Proba_4" IS NULL OR "DT_Output_25"."Proba_4" > 0.0) THEN ln("DT_Output_25"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_25"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_25"."Proba_5" IS NULL OR "DT_Output_25"."Proba_5" > 0.0) THEN ln("DT_Output_25"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_25"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_25"."Proba_6" IS NULL OR "DT_Output_25"."Proba_6" > 0.0) THEN ln("DT_Output_25"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_25"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_25"."Proba_7" IS NULL OR "DT_Output_25"."Proba_7" > 0.0) THEN ln("DT_Output_25"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_25"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_25"."Proba_8" IS NULL OR "DT_Output_25"."Proba_8" > 0.0) THEN ln("DT_Output_25"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_25"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_25"."Proba_9" IS NULL OR "DT_Output_25"."Proba_9" > 0.0) THEN ln("DT_Output_25"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10)) / 32.0 AS "Score_9", 9.0 * (CASE WHEN ("DT_Output_25"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_25"."Proba_9" IS NULL OR "DT_Output_25"."Proba_9" > 0.0) THEN ln("DT_Output_25"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_25"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_25"."Proba_0" IS NULL OR "DT_Output_25"."Proba_0" > 0.0) THEN ln("DT_Output_25"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_25"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_25"."Proba_1" IS NULL OR "DT_Output_25"."Proba_1" > 0.0) THEN ln("DT_Output_25"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_25"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_25"."Proba_2" IS NULL OR "DT_Output_25"."Proba_2" > 0.0) THEN ln("DT_Output_25"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_25"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_25"."Proba_3" IS NULL OR "DT_Output_25"."Proba_3" > 0.0) THEN ln("DT_Output_25"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_25"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_25"."Proba_4" IS NULL OR "DT_Output_25"."Proba_4" > 0.0) THEN ln("DT_Output_25"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_25"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_25"."Proba_5" IS NULL OR "DT_Output_25"."Proba_5" > 0.0) THEN ln("DT_Output_25"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_25"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_25"."Proba_6" IS NULL OR "DT_Output_25"."Proba_6" > 0.0) THEN ln("DT_Output_25"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_25"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_25"."Proba_7" IS NULL OR "DT_Output_25"."Proba_7" > 0.0) THEN ln("DT_Output_25"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_25"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_25"."Proba_8" IS NULL OR "DT_Output_25"."Proba_8" > 0.0) THEN ln("DT_Output_25"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_25"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_25"."Proba_9" IS NULL OR "DT_Output_25"."Proba_9" > 0.0) THEN ln("DT_Output_25"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10) AS "Proba_9" 
FROM "DT_Output_25"), 
"DT_node_lookup_26" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_30 <= -1.555469036102295) THEN 1 ELSE 2 END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_26" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Proba_0" AS "Proba_0", "Values"."LogProba_0" AS "LogProba_0", "Values"."Proba_1" AS "Proba_1", "Values"."LogProba_1" AS "LogProba_1", "Values"."Proba_2" AS "Proba_2", "Values"."LogProba_2" AS "LogProba_2", "Values"."Proba_3" AS "Proba_3", "Values"."LogProba_3" AS "LogProba_3", "Values"."Proba_4" AS "Proba_4", "Values"."LogProba_4" AS "LogProba_4", "Values"."Proba_5" AS "Proba_5", "Values"."LogProba_5" AS "LogProba_5", "Values"."Proba_6" AS "Proba_6", "Values"."LogProba_6" AS "LogProba_6", "Values"."Proba_7" AS "Proba_7", "Values"."LogProba_7" AS "LogProba_7", "Values"."Proba_8" AS "Proba_8", "Values"."LogProba_8" AS "LogProba_8", "Values"."Proba_9" AS "Proba_9", "Values"."LogProba_9" AS "LogProba_9", "Values"."Decision" AS "Decision", "Values"."DecisionProba" AS "DecisionProba" 
FROM (SELECT 1 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 246 AS count, 1 AS depth, 0 AS parent_id, 0.9965087169045473 AS "Proba_0", -0.00349739184668 AS "LogProba_0", 0.00043641038724086804 AS "Proba_1", -7.73692750218 AS "LogProba_1", 0.0004364103847155662 AS "Proba_2", -7.73692750797 AS "LogProba_2", 0.000436410387523845 AS "Proba_3", -7.73692750153 AS "LogProba_3", 0.0004364103861663192 AS "Proba_4", -7.73692750464 AS "LogProba_4", 0.00043641038752001936 AS "Proba_5", -7.73692750154 AS "LogProba_5", 0.0004364103875214755 AS "Proba_6", -7.73692750154 AS "LogProba_6", 0.00043641038724086815 AS "Proba_7", -7.73692750218 AS "LogProba_7", 0.0 AS "Proba_8", -BINARY_FLOAT_INFINITY AS "LogProba_8", 0.00043641038752384475 AS "Proba_9", -7.73692750153 AS "LogProba_9", 0 AS "Decision", 0.996508716905 AS "DecisionProba" FROM DUAL UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1191 AS count, 1 AS depth, 0 AS parent_id, 6.599982330086118e-11 AS "Proba_0", -23.4413690512 AS "LogProba_0", 0.11110570228816118 AS "Proba_1", -2.19727325793 AS "LogProba_1", 0.1111057023544429 AS "Proba_2", -2.19727325733 AS "LogProba_2", 0.1111057023541293 AS "Proba_3", -2.19727325733 AS "LogProba_3", 0.11110570235428119 AS "Proba_4", -2.19727325733 AS "LogProba_4", 0.11110570235412988 AS "Proba_5", -2.19727325733 AS "LogProba_5", 0.11110570235412921 AS "Proba_6", -2.19727325733 AS "LogProba_6", 0.11110570228816197 AS "Proba_7", -2.19727325793 AS "LogProba_7", 0.11115438123243479 AS "Proba_8", -2.19683522205 AS "LogProba_8", 0.11110570235412973 AS "Proba_9", -2.19727325733 AS "LogProba_9", 8 AS "Decision", 0.111154381232 AS "DecisionProba" FROM DUAL) "Values"), 
"DT_Output_26" AS 
(SELECT "DT_node_lookup_26"."KEY" AS "KEY", "DT_node_lookup_26".node_id_2 AS node_id_2, "DT_node_data_26".node_id AS node_id, "DT_node_data_26".feature AS feature, "DT_node_data_26".threshold AS threshold, "DT_node_data_26".count AS count, "DT_node_data_26".depth AS depth, "DT_node_data_26".parent_id AS parent_id, "DT_node_data_26"."Proba_0" AS "Proba_0", "DT_node_data_26"."LogProba_0" AS "LogProba_0", "DT_node_data_26"."Proba_1" AS "Proba_1", "DT_node_data_26"."LogProba_1" AS "LogProba_1", "DT_node_data_26"."Proba_2" AS "Proba_2", "DT_node_data_26"."LogProba_2" AS "LogProba_2", "DT_node_data_26"."Proba_3" AS "Proba_3", "DT_node_data_26"."LogProba_3" AS "LogProba_3", "DT_node_data_26"."Proba_4" AS "Proba_4", "DT_node_data_26"."LogProba_4" AS "LogProba_4", "DT_node_data_26"."Proba_5" AS "Proba_5", "DT_node_data_26"."LogProba_5" AS "LogProba_5", "DT_node_data_26"."Proba_6" AS "Proba_6", "DT_node_data_26"."LogProba_6" AS "LogProba_6", "DT_node_data_26"."Proba_7" AS "Proba_7", "DT_node_data_26"."LogProba_7" AS "LogProba_7", "DT_node_data_26"."Proba_8" AS "Proba_8", "DT_node_data_26"."LogProba_8" AS "LogProba_8", "DT_node_data_26"."Proba_9" AS "Proba_9", "DT_node_data_26"."LogProba_9" AS "LogProba_9", "DT_node_data_26"."Decision" AS "Decision", "DT_node_data_26"."DecisionProba" AS "DecisionProba" 
FROM "DT_node_lookup_26" LEFT OUTER JOIN "DT_node_data_26" ON "DT_node_lookup_26".node_id_2 = "DT_node_data_26".node_id), 
"AdaBoost_Estim_26" AS 
(SELECT "DT_Output_26"."KEY" AS "KEY", (9.0 * (CASE WHEN ("DT_Output_26"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_26"."Proba_0" IS NULL OR "DT_Output_26"."Proba_0" > 0.0) THEN ln("DT_Output_26"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_26"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_26"."Proba_0" IS NULL OR "DT_Output_26"."Proba_0" > 0.0) THEN ln("DT_Output_26"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_26"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_26"."Proba_1" IS NULL OR "DT_Output_26"."Proba_1" > 0.0) THEN ln("DT_Output_26"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_26"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_26"."Proba_2" IS NULL OR "DT_Output_26"."Proba_2" > 0.0) THEN ln("DT_Output_26"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_26"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_26"."Proba_3" IS NULL OR "DT_Output_26"."Proba_3" > 0.0) THEN ln("DT_Output_26"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_26"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_26"."Proba_4" IS NULL OR "DT_Output_26"."Proba_4" > 0.0) THEN ln("DT_Output_26"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_26"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_26"."Proba_5" IS NULL OR "DT_Output_26"."Proba_5" > 0.0) THEN ln("DT_Output_26"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_26"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_26"."Proba_6" IS NULL OR "DT_Output_26"."Proba_6" > 0.0) THEN ln("DT_Output_26"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_26"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_26"."Proba_7" IS NULL OR "DT_Output_26"."Proba_7" > 0.0) THEN ln("DT_Output_26"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_26"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_26"."Proba_8" IS NULL OR "DT_Output_26"."Proba_8" > 0.0) THEN ln("DT_Output_26"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_26"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_26"."Proba_9" IS NULL OR "DT_Output_26"."Proba_9" > 0.0) THEN ln("DT_Output_26"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10)) / 32.0 AS "Score_0", 9.0 * (CASE WHEN ("DT_Output_26"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_26"."Proba_0" IS NULL OR "DT_Output_26"."Proba_0" > 0.0) THEN ln("DT_Output_26"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_26"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_26"."Proba_0" IS NULL OR "DT_Output_26"."Proba_0" > 0.0) THEN ln("DT_Output_26"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_26"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_26"."Proba_1" IS NULL OR "DT_Output_26"."Proba_1" > 0.0) THEN ln("DT_Output_26"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_26"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_26"."Proba_2" IS NULL OR "DT_Output_26"."Proba_2" > 0.0) THEN ln("DT_Output_26"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_26"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_26"."Proba_3" IS NULL OR "DT_Output_26"."Proba_3" > 0.0) THEN ln("DT_Output_26"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_26"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_26"."Proba_4" IS NULL OR "DT_Output_26"."Proba_4" > 0.0) THEN ln("DT_Output_26"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_26"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_26"."Proba_5" IS NULL OR "DT_Output_26"."Proba_5" > 0.0) THEN ln("DT_Output_26"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_26"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_26"."Proba_6" IS NULL OR "DT_Output_26"."Proba_6" > 0.0) THEN ln("DT_Output_26"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_26"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_26"."Proba_7" IS NULL OR "DT_Output_26"."Proba_7" > 0.0) THEN ln("DT_Output_26"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_26"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_26"."Proba_8" IS NULL OR "DT_Output_26"."Proba_8" > 0.0) THEN ln("DT_Output_26"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_26"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_26"."Proba_9" IS NULL OR "DT_Output_26"."Proba_9" > 0.0) THEN ln("DT_Output_26"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10) AS "Proba_0", (9.0 * (CASE WHEN ("DT_Output_26"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_26"."Proba_1" IS NULL OR "DT_Output_26"."Proba_1" > 0.0) THEN ln("DT_Output_26"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_26"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_26"."Proba_0" IS NULL OR "DT_Output_26"."Proba_0" > 0.0) THEN ln("DT_Output_26"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_26"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_26"."Proba_1" IS NULL OR "DT_Output_26"."Proba_1" > 0.0) THEN ln("DT_Output_26"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_26"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_26"."Proba_2" IS NULL OR "DT_Output_26"."Proba_2" > 0.0) THEN ln("DT_Output_26"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_26"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_26"."Proba_3" IS NULL OR "DT_Output_26"."Proba_3" > 0.0) THEN ln("DT_Output_26"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_26"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_26"."Proba_4" IS NULL OR "DT_Output_26"."Proba_4" > 0.0) THEN ln("DT_Output_26"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_26"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_26"."Proba_5" IS NULL OR "DT_Output_26"."Proba_5" > 0.0) THEN ln("DT_Output_26"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_26"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_26"."Proba_6" IS NULL OR "DT_Output_26"."Proba_6" > 0.0) THEN ln("DT_Output_26"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_26"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_26"."Proba_7" IS NULL OR "DT_Output_26"."Proba_7" > 0.0) THEN ln("DT_Output_26"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_26"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_26"."Proba_8" IS NULL OR "DT_Output_26"."Proba_8" > 0.0) THEN ln("DT_Output_26"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_26"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_26"."Proba_9" IS NULL OR "DT_Output_26"."Proba_9" > 0.0) THEN ln("DT_Output_26"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10)) / 32.0 AS "Score_1", 9.0 * (CASE WHEN ("DT_Output_26"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_26"."Proba_1" IS NULL OR "DT_Output_26"."Proba_1" > 0.0) THEN ln("DT_Output_26"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_26"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_26"."Proba_0" IS NULL OR "DT_Output_26"."Proba_0" > 0.0) THEN ln("DT_Output_26"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_26"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_26"."Proba_1" IS NULL OR "DT_Output_26"."Proba_1" > 0.0) THEN ln("DT_Output_26"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_26"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_26"."Proba_2" IS NULL OR "DT_Output_26"."Proba_2" > 0.0) THEN ln("DT_Output_26"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_26"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_26"."Proba_3" IS NULL OR "DT_Output_26"."Proba_3" > 0.0) THEN ln("DT_Output_26"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_26"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_26"."Proba_4" IS NULL OR "DT_Output_26"."Proba_4" > 0.0) THEN ln("DT_Output_26"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_26"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_26"."Proba_5" IS NULL OR "DT_Output_26"."Proba_5" > 0.0) THEN ln("DT_Output_26"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_26"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_26"."Proba_6" IS NULL OR "DT_Output_26"."Proba_6" > 0.0) THEN ln("DT_Output_26"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_26"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_26"."Proba_7" IS NULL OR "DT_Output_26"."Proba_7" > 0.0) THEN ln("DT_Output_26"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_26"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_26"."Proba_8" IS NULL OR "DT_Output_26"."Proba_8" > 0.0) THEN ln("DT_Output_26"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_26"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_26"."Proba_9" IS NULL OR "DT_Output_26"."Proba_9" > 0.0) THEN ln("DT_Output_26"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10) AS "Proba_1", (9.0 * (CASE WHEN ("DT_Output_26"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_26"."Proba_2" IS NULL OR "DT_Output_26"."Proba_2" > 0.0) THEN ln("DT_Output_26"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_26"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_26"."Proba_0" IS NULL OR "DT_Output_26"."Proba_0" > 0.0) THEN ln("DT_Output_26"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_26"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_26"."Proba_1" IS NULL OR "DT_Output_26"."Proba_1" > 0.0) THEN ln("DT_Output_26"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_26"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_26"."Proba_2" IS NULL OR "DT_Output_26"."Proba_2" > 0.0) THEN ln("DT_Output_26"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_26"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_26"."Proba_3" IS NULL OR "DT_Output_26"."Proba_3" > 0.0) THEN ln("DT_Output_26"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_26"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_26"."Proba_4" IS NULL OR "DT_Output_26"."Proba_4" > 0.0) THEN ln("DT_Output_26"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_26"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_26"."Proba_5" IS NULL OR "DT_Output_26"."Proba_5" > 0.0) THEN ln("DT_Output_26"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_26"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_26"."Proba_6" IS NULL OR "DT_Output_26"."Proba_6" > 0.0) THEN ln("DT_Output_26"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_26"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_26"."Proba_7" IS NULL OR "DT_Output_26"."Proba_7" > 0.0) THEN ln("DT_Output_26"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_26"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_26"."Proba_8" IS NULL OR "DT_Output_26"."Proba_8" > 0.0) THEN ln("DT_Output_26"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_26"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_26"."Proba_9" IS NULL OR "DT_Output_26"."Proba_9" > 0.0) THEN ln("DT_Output_26"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10)) / 32.0 AS "Score_2", 9.0 * (CASE WHEN ("DT_Output_26"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_26"."Proba_2" IS NULL OR "DT_Output_26"."Proba_2" > 0.0) THEN ln("DT_Output_26"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_26"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_26"."Proba_0" IS NULL OR "DT_Output_26"."Proba_0" > 0.0) THEN ln("DT_Output_26"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_26"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_26"."Proba_1" IS NULL OR "DT_Output_26"."Proba_1" > 0.0) THEN ln("DT_Output_26"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_26"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_26"."Proba_2" IS NULL OR "DT_Output_26"."Proba_2" > 0.0) THEN ln("DT_Output_26"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_26"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_26"."Proba_3" IS NULL OR "DT_Output_26"."Proba_3" > 0.0) THEN ln("DT_Output_26"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_26"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_26"."Proba_4" IS NULL OR "DT_Output_26"."Proba_4" > 0.0) THEN ln("DT_Output_26"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_26"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_26"."Proba_5" IS NULL OR "DT_Output_26"."Proba_5" > 0.0) THEN ln("DT_Output_26"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_26"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_26"."Proba_6" IS NULL OR "DT_Output_26"."Proba_6" > 0.0) THEN ln("DT_Output_26"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_26"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_26"."Proba_7" IS NULL OR "DT_Output_26"."Proba_7" > 0.0) THEN ln("DT_Output_26"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_26"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_26"."Proba_8" IS NULL OR "DT_Output_26"."Proba_8" > 0.0) THEN ln("DT_Output_26"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_26"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_26"."Proba_9" IS NULL OR "DT_Output_26"."Proba_9" > 0.0) THEN ln("DT_Output_26"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10) AS "Proba_2", (9.0 * (CASE WHEN ("DT_Output_26"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_26"."Proba_3" IS NULL OR "DT_Output_26"."Proba_3" > 0.0) THEN ln("DT_Output_26"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_26"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_26"."Proba_0" IS NULL OR "DT_Output_26"."Proba_0" > 0.0) THEN ln("DT_Output_26"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_26"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_26"."Proba_1" IS NULL OR "DT_Output_26"."Proba_1" > 0.0) THEN ln("DT_Output_26"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_26"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_26"."Proba_2" IS NULL OR "DT_Output_26"."Proba_2" > 0.0) THEN ln("DT_Output_26"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_26"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_26"."Proba_3" IS NULL OR "DT_Output_26"."Proba_3" > 0.0) THEN ln("DT_Output_26"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_26"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_26"."Proba_4" IS NULL OR "DT_Output_26"."Proba_4" > 0.0) THEN ln("DT_Output_26"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_26"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_26"."Proba_5" IS NULL OR "DT_Output_26"."Proba_5" > 0.0) THEN ln("DT_Output_26"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_26"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_26"."Proba_6" IS NULL OR "DT_Output_26"."Proba_6" > 0.0) THEN ln("DT_Output_26"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_26"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_26"."Proba_7" IS NULL OR "DT_Output_26"."Proba_7" > 0.0) THEN ln("DT_Output_26"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_26"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_26"."Proba_8" IS NULL OR "DT_Output_26"."Proba_8" > 0.0) THEN ln("DT_Output_26"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_26"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_26"."Proba_9" IS NULL OR "DT_Output_26"."Proba_9" > 0.0) THEN ln("DT_Output_26"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10)) / 32.0 AS "Score_3", 9.0 * (CASE WHEN ("DT_Output_26"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_26"."Proba_3" IS NULL OR "DT_Output_26"."Proba_3" > 0.0) THEN ln("DT_Output_26"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_26"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_26"."Proba_0" IS NULL OR "DT_Output_26"."Proba_0" > 0.0) THEN ln("DT_Output_26"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_26"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_26"."Proba_1" IS NULL OR "DT_Output_26"."Proba_1" > 0.0) THEN ln("DT_Output_26"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_26"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_26"."Proba_2" IS NULL OR "DT_Output_26"."Proba_2" > 0.0) THEN ln("DT_Output_26"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_26"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_26"."Proba_3" IS NULL OR "DT_Output_26"."Proba_3" > 0.0) THEN ln("DT_Output_26"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_26"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_26"."Proba_4" IS NULL OR "DT_Output_26"."Proba_4" > 0.0) THEN ln("DT_Output_26"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_26"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_26"."Proba_5" IS NULL OR "DT_Output_26"."Proba_5" > 0.0) THEN ln("DT_Output_26"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_26"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_26"."Proba_6" IS NULL OR "DT_Output_26"."Proba_6" > 0.0) THEN ln("DT_Output_26"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_26"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_26"."Proba_7" IS NULL OR "DT_Output_26"."Proba_7" > 0.0) THEN ln("DT_Output_26"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_26"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_26"."Proba_8" IS NULL OR "DT_Output_26"."Proba_8" > 0.0) THEN ln("DT_Output_26"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_26"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_26"."Proba_9" IS NULL OR "DT_Output_26"."Proba_9" > 0.0) THEN ln("DT_Output_26"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10) AS "Proba_3", (9.0 * (CASE WHEN ("DT_Output_26"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_26"."Proba_4" IS NULL OR "DT_Output_26"."Proba_4" > 0.0) THEN ln("DT_Output_26"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_26"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_26"."Proba_0" IS NULL OR "DT_Output_26"."Proba_0" > 0.0) THEN ln("DT_Output_26"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_26"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_26"."Proba_1" IS NULL OR "DT_Output_26"."Proba_1" > 0.0) THEN ln("DT_Output_26"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_26"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_26"."Proba_2" IS NULL OR "DT_Output_26"."Proba_2" > 0.0) THEN ln("DT_Output_26"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_26"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_26"."Proba_3" IS NULL OR "DT_Output_26"."Proba_3" > 0.0) THEN ln("DT_Output_26"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_26"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_26"."Proba_4" IS NULL OR "DT_Output_26"."Proba_4" > 0.0) THEN ln("DT_Output_26"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_26"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_26"."Proba_5" IS NULL OR "DT_Output_26"."Proba_5" > 0.0) THEN ln("DT_Output_26"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_26"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_26"."Proba_6" IS NULL OR "DT_Output_26"."Proba_6" > 0.0) THEN ln("DT_Output_26"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_26"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_26"."Proba_7" IS NULL OR "DT_Output_26"."Proba_7" > 0.0) THEN ln("DT_Output_26"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_26"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_26"."Proba_8" IS NULL OR "DT_Output_26"."Proba_8" > 0.0) THEN ln("DT_Output_26"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_26"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_26"."Proba_9" IS NULL OR "DT_Output_26"."Proba_9" > 0.0) THEN ln("DT_Output_26"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10)) / 32.0 AS "Score_4", 9.0 * (CASE WHEN ("DT_Output_26"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_26"."Proba_4" IS NULL OR "DT_Output_26"."Proba_4" > 0.0) THEN ln("DT_Output_26"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_26"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_26"."Proba_0" IS NULL OR "DT_Output_26"."Proba_0" > 0.0) THEN ln("DT_Output_26"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_26"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_26"."Proba_1" IS NULL OR "DT_Output_26"."Proba_1" > 0.0) THEN ln("DT_Output_26"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_26"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_26"."Proba_2" IS NULL OR "DT_Output_26"."Proba_2" > 0.0) THEN ln("DT_Output_26"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_26"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_26"."Proba_3" IS NULL OR "DT_Output_26"."Proba_3" > 0.0) THEN ln("DT_Output_26"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_26"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_26"."Proba_4" IS NULL OR "DT_Output_26"."Proba_4" > 0.0) THEN ln("DT_Output_26"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_26"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_26"."Proba_5" IS NULL OR "DT_Output_26"."Proba_5" > 0.0) THEN ln("DT_Output_26"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_26"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_26"."Proba_6" IS NULL OR "DT_Output_26"."Proba_6" > 0.0) THEN ln("DT_Output_26"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_26"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_26"."Proba_7" IS NULL OR "DT_Output_26"."Proba_7" > 0.0) THEN ln("DT_Output_26"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_26"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_26"."Proba_8" IS NULL OR "DT_Output_26"."Proba_8" > 0.0) THEN ln("DT_Output_26"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_26"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_26"."Proba_9" IS NULL OR "DT_Output_26"."Proba_9" > 0.0) THEN ln("DT_Output_26"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10) AS "Proba_4", (9.0 * (CASE WHEN ("DT_Output_26"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_26"."Proba_5" IS NULL OR "DT_Output_26"."Proba_5" > 0.0) THEN ln("DT_Output_26"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_26"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_26"."Proba_0" IS NULL OR "DT_Output_26"."Proba_0" > 0.0) THEN ln("DT_Output_26"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_26"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_26"."Proba_1" IS NULL OR "DT_Output_26"."Proba_1" > 0.0) THEN ln("DT_Output_26"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_26"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_26"."Proba_2" IS NULL OR "DT_Output_26"."Proba_2" > 0.0) THEN ln("DT_Output_26"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_26"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_26"."Proba_3" IS NULL OR "DT_Output_26"."Proba_3" > 0.0) THEN ln("DT_Output_26"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_26"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_26"."Proba_4" IS NULL OR "DT_Output_26"."Proba_4" > 0.0) THEN ln("DT_Output_26"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_26"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_26"."Proba_5" IS NULL OR "DT_Output_26"."Proba_5" > 0.0) THEN ln("DT_Output_26"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_26"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_26"."Proba_6" IS NULL OR "DT_Output_26"."Proba_6" > 0.0) THEN ln("DT_Output_26"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_26"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_26"."Proba_7" IS NULL OR "DT_Output_26"."Proba_7" > 0.0) THEN ln("DT_Output_26"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_26"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_26"."Proba_8" IS NULL OR "DT_Output_26"."Proba_8" > 0.0) THEN ln("DT_Output_26"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_26"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_26"."Proba_9" IS NULL OR "DT_Output_26"."Proba_9" > 0.0) THEN ln("DT_Output_26"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10)) / 32.0 AS "Score_5", 9.0 * (CASE WHEN ("DT_Output_26"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_26"."Proba_5" IS NULL OR "DT_Output_26"."Proba_5" > 0.0) THEN ln("DT_Output_26"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_26"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_26"."Proba_0" IS NULL OR "DT_Output_26"."Proba_0" > 0.0) THEN ln("DT_Output_26"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_26"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_26"."Proba_1" IS NULL OR "DT_Output_26"."Proba_1" > 0.0) THEN ln("DT_Output_26"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_26"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_26"."Proba_2" IS NULL OR "DT_Output_26"."Proba_2" > 0.0) THEN ln("DT_Output_26"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_26"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_26"."Proba_3" IS NULL OR "DT_Output_26"."Proba_3" > 0.0) THEN ln("DT_Output_26"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_26"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_26"."Proba_4" IS NULL OR "DT_Output_26"."Proba_4" > 0.0) THEN ln("DT_Output_26"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_26"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_26"."Proba_5" IS NULL OR "DT_Output_26"."Proba_5" > 0.0) THEN ln("DT_Output_26"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_26"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_26"."Proba_6" IS NULL OR "DT_Output_26"."Proba_6" > 0.0) THEN ln("DT_Output_26"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_26"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_26"."Proba_7" IS NULL OR "DT_Output_26"."Proba_7" > 0.0) THEN ln("DT_Output_26"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_26"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_26"."Proba_8" IS NULL OR "DT_Output_26"."Proba_8" > 0.0) THEN ln("DT_Output_26"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_26"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_26"."Proba_9" IS NULL OR "DT_Output_26"."Proba_9" > 0.0) THEN ln("DT_Output_26"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10) AS "Proba_5", (9.0 * (CASE WHEN ("DT_Output_26"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_26"."Proba_6" IS NULL OR "DT_Output_26"."Proba_6" > 0.0) THEN ln("DT_Output_26"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_26"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_26"."Proba_0" IS NULL OR "DT_Output_26"."Proba_0" > 0.0) THEN ln("DT_Output_26"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_26"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_26"."Proba_1" IS NULL OR "DT_Output_26"."Proba_1" > 0.0) THEN ln("DT_Output_26"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_26"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_26"."Proba_2" IS NULL OR "DT_Output_26"."Proba_2" > 0.0) THEN ln("DT_Output_26"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_26"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_26"."Proba_3" IS NULL OR "DT_Output_26"."Proba_3" > 0.0) THEN ln("DT_Output_26"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_26"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_26"."Proba_4" IS NULL OR "DT_Output_26"."Proba_4" > 0.0) THEN ln("DT_Output_26"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_26"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_26"."Proba_5" IS NULL OR "DT_Output_26"."Proba_5" > 0.0) THEN ln("DT_Output_26"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_26"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_26"."Proba_6" IS NULL OR "DT_Output_26"."Proba_6" > 0.0) THEN ln("DT_Output_26"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_26"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_26"."Proba_7" IS NULL OR "DT_Output_26"."Proba_7" > 0.0) THEN ln("DT_Output_26"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_26"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_26"."Proba_8" IS NULL OR "DT_Output_26"."Proba_8" > 0.0) THEN ln("DT_Output_26"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_26"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_26"."Proba_9" IS NULL OR "DT_Output_26"."Proba_9" > 0.0) THEN ln("DT_Output_26"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10)) / 32.0 AS "Score_6", 9.0 * (CASE WHEN ("DT_Output_26"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_26"."Proba_6" IS NULL OR "DT_Output_26"."Proba_6" > 0.0) THEN ln("DT_Output_26"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_26"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_26"."Proba_0" IS NULL OR "DT_Output_26"."Proba_0" > 0.0) THEN ln("DT_Output_26"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_26"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_26"."Proba_1" IS NULL OR "DT_Output_26"."Proba_1" > 0.0) THEN ln("DT_Output_26"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_26"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_26"."Proba_2" IS NULL OR "DT_Output_26"."Proba_2" > 0.0) THEN ln("DT_Output_26"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_26"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_26"."Proba_3" IS NULL OR "DT_Output_26"."Proba_3" > 0.0) THEN ln("DT_Output_26"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_26"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_26"."Proba_4" IS NULL OR "DT_Output_26"."Proba_4" > 0.0) THEN ln("DT_Output_26"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_26"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_26"."Proba_5" IS NULL OR "DT_Output_26"."Proba_5" > 0.0) THEN ln("DT_Output_26"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_26"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_26"."Proba_6" IS NULL OR "DT_Output_26"."Proba_6" > 0.0) THEN ln("DT_Output_26"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_26"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_26"."Proba_7" IS NULL OR "DT_Output_26"."Proba_7" > 0.0) THEN ln("DT_Output_26"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_26"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_26"."Proba_8" IS NULL OR "DT_Output_26"."Proba_8" > 0.0) THEN ln("DT_Output_26"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_26"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_26"."Proba_9" IS NULL OR "DT_Output_26"."Proba_9" > 0.0) THEN ln("DT_Output_26"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10) AS "Proba_6", (9.0 * (CASE WHEN ("DT_Output_26"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_26"."Proba_7" IS NULL OR "DT_Output_26"."Proba_7" > 0.0) THEN ln("DT_Output_26"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_26"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_26"."Proba_0" IS NULL OR "DT_Output_26"."Proba_0" > 0.0) THEN ln("DT_Output_26"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_26"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_26"."Proba_1" IS NULL OR "DT_Output_26"."Proba_1" > 0.0) THEN ln("DT_Output_26"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_26"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_26"."Proba_2" IS NULL OR "DT_Output_26"."Proba_2" > 0.0) THEN ln("DT_Output_26"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_26"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_26"."Proba_3" IS NULL OR "DT_Output_26"."Proba_3" > 0.0) THEN ln("DT_Output_26"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_26"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_26"."Proba_4" IS NULL OR "DT_Output_26"."Proba_4" > 0.0) THEN ln("DT_Output_26"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_26"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_26"."Proba_5" IS NULL OR "DT_Output_26"."Proba_5" > 0.0) THEN ln("DT_Output_26"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_26"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_26"."Proba_6" IS NULL OR "DT_Output_26"."Proba_6" > 0.0) THEN ln("DT_Output_26"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_26"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_26"."Proba_7" IS NULL OR "DT_Output_26"."Proba_7" > 0.0) THEN ln("DT_Output_26"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_26"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_26"."Proba_8" IS NULL OR "DT_Output_26"."Proba_8" > 0.0) THEN ln("DT_Output_26"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_26"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_26"."Proba_9" IS NULL OR "DT_Output_26"."Proba_9" > 0.0) THEN ln("DT_Output_26"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10)) / 32.0 AS "Score_7", 9.0 * (CASE WHEN ("DT_Output_26"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_26"."Proba_7" IS NULL OR "DT_Output_26"."Proba_7" > 0.0) THEN ln("DT_Output_26"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_26"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_26"."Proba_0" IS NULL OR "DT_Output_26"."Proba_0" > 0.0) THEN ln("DT_Output_26"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_26"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_26"."Proba_1" IS NULL OR "DT_Output_26"."Proba_1" > 0.0) THEN ln("DT_Output_26"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_26"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_26"."Proba_2" IS NULL OR "DT_Output_26"."Proba_2" > 0.0) THEN ln("DT_Output_26"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_26"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_26"."Proba_3" IS NULL OR "DT_Output_26"."Proba_3" > 0.0) THEN ln("DT_Output_26"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_26"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_26"."Proba_4" IS NULL OR "DT_Output_26"."Proba_4" > 0.0) THEN ln("DT_Output_26"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_26"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_26"."Proba_5" IS NULL OR "DT_Output_26"."Proba_5" > 0.0) THEN ln("DT_Output_26"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_26"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_26"."Proba_6" IS NULL OR "DT_Output_26"."Proba_6" > 0.0) THEN ln("DT_Output_26"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_26"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_26"."Proba_7" IS NULL OR "DT_Output_26"."Proba_7" > 0.0) THEN ln("DT_Output_26"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_26"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_26"."Proba_8" IS NULL OR "DT_Output_26"."Proba_8" > 0.0) THEN ln("DT_Output_26"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_26"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_26"."Proba_9" IS NULL OR "DT_Output_26"."Proba_9" > 0.0) THEN ln("DT_Output_26"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10) AS "Proba_7", (9.0 * (CASE WHEN ("DT_Output_26"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_26"."Proba_8" IS NULL OR "DT_Output_26"."Proba_8" > 0.0) THEN ln("DT_Output_26"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_26"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_26"."Proba_0" IS NULL OR "DT_Output_26"."Proba_0" > 0.0) THEN ln("DT_Output_26"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_26"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_26"."Proba_1" IS NULL OR "DT_Output_26"."Proba_1" > 0.0) THEN ln("DT_Output_26"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_26"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_26"."Proba_2" IS NULL OR "DT_Output_26"."Proba_2" > 0.0) THEN ln("DT_Output_26"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_26"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_26"."Proba_3" IS NULL OR "DT_Output_26"."Proba_3" > 0.0) THEN ln("DT_Output_26"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_26"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_26"."Proba_4" IS NULL OR "DT_Output_26"."Proba_4" > 0.0) THEN ln("DT_Output_26"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_26"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_26"."Proba_5" IS NULL OR "DT_Output_26"."Proba_5" > 0.0) THEN ln("DT_Output_26"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_26"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_26"."Proba_6" IS NULL OR "DT_Output_26"."Proba_6" > 0.0) THEN ln("DT_Output_26"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_26"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_26"."Proba_7" IS NULL OR "DT_Output_26"."Proba_7" > 0.0) THEN ln("DT_Output_26"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_26"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_26"."Proba_8" IS NULL OR "DT_Output_26"."Proba_8" > 0.0) THEN ln("DT_Output_26"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_26"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_26"."Proba_9" IS NULL OR "DT_Output_26"."Proba_9" > 0.0) THEN ln("DT_Output_26"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10)) / 32.0 AS "Score_8", 9.0 * (CASE WHEN ("DT_Output_26"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_26"."Proba_8" IS NULL OR "DT_Output_26"."Proba_8" > 0.0) THEN ln("DT_Output_26"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_26"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_26"."Proba_0" IS NULL OR "DT_Output_26"."Proba_0" > 0.0) THEN ln("DT_Output_26"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_26"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_26"."Proba_1" IS NULL OR "DT_Output_26"."Proba_1" > 0.0) THEN ln("DT_Output_26"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_26"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_26"."Proba_2" IS NULL OR "DT_Output_26"."Proba_2" > 0.0) THEN ln("DT_Output_26"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_26"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_26"."Proba_3" IS NULL OR "DT_Output_26"."Proba_3" > 0.0) THEN ln("DT_Output_26"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_26"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_26"."Proba_4" IS NULL OR "DT_Output_26"."Proba_4" > 0.0) THEN ln("DT_Output_26"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_26"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_26"."Proba_5" IS NULL OR "DT_Output_26"."Proba_5" > 0.0) THEN ln("DT_Output_26"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_26"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_26"."Proba_6" IS NULL OR "DT_Output_26"."Proba_6" > 0.0) THEN ln("DT_Output_26"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_26"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_26"."Proba_7" IS NULL OR "DT_Output_26"."Proba_7" > 0.0) THEN ln("DT_Output_26"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_26"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_26"."Proba_8" IS NULL OR "DT_Output_26"."Proba_8" > 0.0) THEN ln("DT_Output_26"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_26"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_26"."Proba_9" IS NULL OR "DT_Output_26"."Proba_9" > 0.0) THEN ln("DT_Output_26"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10) AS "Proba_8", (9.0 * (CASE WHEN ("DT_Output_26"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_26"."Proba_9" IS NULL OR "DT_Output_26"."Proba_9" > 0.0) THEN ln("DT_Output_26"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_26"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_26"."Proba_0" IS NULL OR "DT_Output_26"."Proba_0" > 0.0) THEN ln("DT_Output_26"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_26"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_26"."Proba_1" IS NULL OR "DT_Output_26"."Proba_1" > 0.0) THEN ln("DT_Output_26"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_26"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_26"."Proba_2" IS NULL OR "DT_Output_26"."Proba_2" > 0.0) THEN ln("DT_Output_26"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_26"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_26"."Proba_3" IS NULL OR "DT_Output_26"."Proba_3" > 0.0) THEN ln("DT_Output_26"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_26"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_26"."Proba_4" IS NULL OR "DT_Output_26"."Proba_4" > 0.0) THEN ln("DT_Output_26"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_26"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_26"."Proba_5" IS NULL OR "DT_Output_26"."Proba_5" > 0.0) THEN ln("DT_Output_26"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_26"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_26"."Proba_6" IS NULL OR "DT_Output_26"."Proba_6" > 0.0) THEN ln("DT_Output_26"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_26"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_26"."Proba_7" IS NULL OR "DT_Output_26"."Proba_7" > 0.0) THEN ln("DT_Output_26"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_26"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_26"."Proba_8" IS NULL OR "DT_Output_26"."Proba_8" > 0.0) THEN ln("DT_Output_26"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_26"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_26"."Proba_9" IS NULL OR "DT_Output_26"."Proba_9" > 0.0) THEN ln("DT_Output_26"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10)) / 32.0 AS "Score_9", 9.0 * (CASE WHEN ("DT_Output_26"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_26"."Proba_9" IS NULL OR "DT_Output_26"."Proba_9" > 0.0) THEN ln("DT_Output_26"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_26"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_26"."Proba_0" IS NULL OR "DT_Output_26"."Proba_0" > 0.0) THEN ln("DT_Output_26"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_26"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_26"."Proba_1" IS NULL OR "DT_Output_26"."Proba_1" > 0.0) THEN ln("DT_Output_26"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_26"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_26"."Proba_2" IS NULL OR "DT_Output_26"."Proba_2" > 0.0) THEN ln("DT_Output_26"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_26"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_26"."Proba_3" IS NULL OR "DT_Output_26"."Proba_3" > 0.0) THEN ln("DT_Output_26"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_26"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_26"."Proba_4" IS NULL OR "DT_Output_26"."Proba_4" > 0.0) THEN ln("DT_Output_26"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_26"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_26"."Proba_5" IS NULL OR "DT_Output_26"."Proba_5" > 0.0) THEN ln("DT_Output_26"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_26"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_26"."Proba_6" IS NULL OR "DT_Output_26"."Proba_6" > 0.0) THEN ln("DT_Output_26"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_26"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_26"."Proba_7" IS NULL OR "DT_Output_26"."Proba_7" > 0.0) THEN ln("DT_Output_26"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_26"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_26"."Proba_8" IS NULL OR "DT_Output_26"."Proba_8" > 0.0) THEN ln("DT_Output_26"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_26"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_26"."Proba_9" IS NULL OR "DT_Output_26"."Proba_9" > 0.0) THEN ln("DT_Output_26"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10) AS "Proba_9" 
FROM "DT_Output_26"), 
"DT_node_lookup_27" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_38 <= -1.6508052349090576) THEN 1 ELSE 2 END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_27" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Proba_0" AS "Proba_0", "Values"."LogProba_0" AS "LogProba_0", "Values"."Proba_1" AS "Proba_1", "Values"."LogProba_1" AS "LogProba_1", "Values"."Proba_2" AS "Proba_2", "Values"."LogProba_2" AS "LogProba_2", "Values"."Proba_3" AS "Proba_3", "Values"."LogProba_3" AS "LogProba_3", "Values"."Proba_4" AS "Proba_4", "Values"."LogProba_4" AS "LogProba_4", "Values"."Proba_5" AS "Proba_5", "Values"."LogProba_5" AS "LogProba_5", "Values"."Proba_6" AS "Proba_6", "Values"."LogProba_6" AS "LogProba_6", "Values"."Proba_7" AS "Proba_7", "Values"."LogProba_7" AS "LogProba_7", "Values"."Proba_8" AS "Proba_8", "Values"."LogProba_8" AS "LogProba_8", "Values"."Proba_9" AS "Proba_9", "Values"."LogProba_9" AS "LogProba_9", "Values"."Decision" AS "Decision", "Values"."DecisionProba" AS "DecisionProba" 
FROM (SELECT 1 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 219 AS count, 1 AS depth, 0 AS parent_id, 0.9999999958390176 AS "Proba_0", -4.16098245614e-09 AS "LogProba_0", 0.0 AS "Proba_1", -BINARY_FLOAT_INFINITY AS "LogProba_1", 5.960674076222299e-10 AS "Proba_2", -21.2406673552 AS "LogProba_2", 5.940273237810448e-10 AS "Proba_3", -21.244095798 AS "LogProba_3", 5.950338079457112e-10 AS "Proba_4", -21.2424028919 AS "LogProba_4", 5.940302184938616e-10 AS "Proba_5", -21.244090925 AS "LogProba_5", 5.940291149614978e-10 AS "Proba_6", -21.2440927827 AS "LogProba_6", 0.0 AS "Proba_7", -BINARY_FLOAT_INFINITY AS "LogProba_7", 5.937671758365009e-10 AS "Proba_8", -21.2445338333 AS "LogProba_8", 5.940273237810414e-10 AS "Proba_9", -21.244095798 AS "LogProba_9", 0 AS "Decision", 0.999999995839 AS "DecisionProba" FROM DUAL UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1218 AS count, 1 AS depth, 0 AS parent_id, 5.2032145183941555e-05 AS "Proba_0", -9.86364885376 AS "LogProba_0", 0.11111111116245752 AS "Proba_1", -2.19722457687 AS "LogProba_1", 0.11111111109625889 AS "Proba_2", -2.19722457747 AS "LogProba_2", 0.11111111109648504 AS "Proba_3", -2.19722457747 AS "LogProba_3", 0.11111111109637319 AS "Proba_4", -2.19722457747 AS "LogProba_4", 0.11111111109648486 AS "Proba_5", -2.19722457747 AS "LogProba_5", 0.11111111109648533 AS "Proba_6", -2.19722457747 AS "LogProba_6", 0.11111111116245664 AS "Proba_7", -2.19722457687 AS "LogProba_7", 0.11105907895132965 AS "Proba_8", -2.19769297646 AS "LogProba_8", 0.111111111096485 AS "Proba_9", -2.19722457747 AS "LogProba_9", 1 AS "Decision", 0.111111111162 AS "DecisionProba" FROM DUAL) "Values"), 
"DT_Output_27" AS 
(SELECT "DT_node_lookup_27"."KEY" AS "KEY", "DT_node_lookup_27".node_id_2 AS node_id_2, "DT_node_data_27".node_id AS node_id, "DT_node_data_27".feature AS feature, "DT_node_data_27".threshold AS threshold, "DT_node_data_27".count AS count, "DT_node_data_27".depth AS depth, "DT_node_data_27".parent_id AS parent_id, "DT_node_data_27"."Proba_0" AS "Proba_0", "DT_node_data_27"."LogProba_0" AS "LogProba_0", "DT_node_data_27"."Proba_1" AS "Proba_1", "DT_node_data_27"."LogProba_1" AS "LogProba_1", "DT_node_data_27"."Proba_2" AS "Proba_2", "DT_node_data_27"."LogProba_2" AS "LogProba_2", "DT_node_data_27"."Proba_3" AS "Proba_3", "DT_node_data_27"."LogProba_3" AS "LogProba_3", "DT_node_data_27"."Proba_4" AS "Proba_4", "DT_node_data_27"."LogProba_4" AS "LogProba_4", "DT_node_data_27"."Proba_5" AS "Proba_5", "DT_node_data_27"."LogProba_5" AS "LogProba_5", "DT_node_data_27"."Proba_6" AS "Proba_6", "DT_node_data_27"."LogProba_6" AS "LogProba_6", "DT_node_data_27"."Proba_7" AS "Proba_7", "DT_node_data_27"."LogProba_7" AS "LogProba_7", "DT_node_data_27"."Proba_8" AS "Proba_8", "DT_node_data_27"."LogProba_8" AS "LogProba_8", "DT_node_data_27"."Proba_9" AS "Proba_9", "DT_node_data_27"."LogProba_9" AS "LogProba_9", "DT_node_data_27"."Decision" AS "Decision", "DT_node_data_27"."DecisionProba" AS "DecisionProba" 
FROM "DT_node_lookup_27" LEFT OUTER JOIN "DT_node_data_27" ON "DT_node_lookup_27".node_id_2 = "DT_node_data_27".node_id), 
"AdaBoost_Estim_27" AS 
(SELECT "DT_Output_27"."KEY" AS "KEY", (9.0 * (CASE WHEN ("DT_Output_27"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_27"."Proba_0" IS NULL OR "DT_Output_27"."Proba_0" > 0.0) THEN ln("DT_Output_27"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_27"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_27"."Proba_0" IS NULL OR "DT_Output_27"."Proba_0" > 0.0) THEN ln("DT_Output_27"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_27"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_27"."Proba_1" IS NULL OR "DT_Output_27"."Proba_1" > 0.0) THEN ln("DT_Output_27"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_27"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_27"."Proba_2" IS NULL OR "DT_Output_27"."Proba_2" > 0.0) THEN ln("DT_Output_27"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_27"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_27"."Proba_3" IS NULL OR "DT_Output_27"."Proba_3" > 0.0) THEN ln("DT_Output_27"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_27"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_27"."Proba_4" IS NULL OR "DT_Output_27"."Proba_4" > 0.0) THEN ln("DT_Output_27"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_27"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_27"."Proba_5" IS NULL OR "DT_Output_27"."Proba_5" > 0.0) THEN ln("DT_Output_27"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_27"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_27"."Proba_6" IS NULL OR "DT_Output_27"."Proba_6" > 0.0) THEN ln("DT_Output_27"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_27"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_27"."Proba_7" IS NULL OR "DT_Output_27"."Proba_7" > 0.0) THEN ln("DT_Output_27"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_27"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_27"."Proba_8" IS NULL OR "DT_Output_27"."Proba_8" > 0.0) THEN ln("DT_Output_27"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_27"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_27"."Proba_9" IS NULL OR "DT_Output_27"."Proba_9" > 0.0) THEN ln("DT_Output_27"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10)) / 32.0 AS "Score_0", 9.0 * (CASE WHEN ("DT_Output_27"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_27"."Proba_0" IS NULL OR "DT_Output_27"."Proba_0" > 0.0) THEN ln("DT_Output_27"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_27"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_27"."Proba_0" IS NULL OR "DT_Output_27"."Proba_0" > 0.0) THEN ln("DT_Output_27"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_27"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_27"."Proba_1" IS NULL OR "DT_Output_27"."Proba_1" > 0.0) THEN ln("DT_Output_27"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_27"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_27"."Proba_2" IS NULL OR "DT_Output_27"."Proba_2" > 0.0) THEN ln("DT_Output_27"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_27"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_27"."Proba_3" IS NULL OR "DT_Output_27"."Proba_3" > 0.0) THEN ln("DT_Output_27"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_27"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_27"."Proba_4" IS NULL OR "DT_Output_27"."Proba_4" > 0.0) THEN ln("DT_Output_27"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_27"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_27"."Proba_5" IS NULL OR "DT_Output_27"."Proba_5" > 0.0) THEN ln("DT_Output_27"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_27"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_27"."Proba_6" IS NULL OR "DT_Output_27"."Proba_6" > 0.0) THEN ln("DT_Output_27"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_27"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_27"."Proba_7" IS NULL OR "DT_Output_27"."Proba_7" > 0.0) THEN ln("DT_Output_27"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_27"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_27"."Proba_8" IS NULL OR "DT_Output_27"."Proba_8" > 0.0) THEN ln("DT_Output_27"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_27"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_27"."Proba_9" IS NULL OR "DT_Output_27"."Proba_9" > 0.0) THEN ln("DT_Output_27"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10) AS "Proba_0", (9.0 * (CASE WHEN ("DT_Output_27"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_27"."Proba_1" IS NULL OR "DT_Output_27"."Proba_1" > 0.0) THEN ln("DT_Output_27"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_27"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_27"."Proba_0" IS NULL OR "DT_Output_27"."Proba_0" > 0.0) THEN ln("DT_Output_27"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_27"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_27"."Proba_1" IS NULL OR "DT_Output_27"."Proba_1" > 0.0) THEN ln("DT_Output_27"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_27"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_27"."Proba_2" IS NULL OR "DT_Output_27"."Proba_2" > 0.0) THEN ln("DT_Output_27"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_27"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_27"."Proba_3" IS NULL OR "DT_Output_27"."Proba_3" > 0.0) THEN ln("DT_Output_27"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_27"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_27"."Proba_4" IS NULL OR "DT_Output_27"."Proba_4" > 0.0) THEN ln("DT_Output_27"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_27"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_27"."Proba_5" IS NULL OR "DT_Output_27"."Proba_5" > 0.0) THEN ln("DT_Output_27"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_27"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_27"."Proba_6" IS NULL OR "DT_Output_27"."Proba_6" > 0.0) THEN ln("DT_Output_27"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_27"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_27"."Proba_7" IS NULL OR "DT_Output_27"."Proba_7" > 0.0) THEN ln("DT_Output_27"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_27"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_27"."Proba_8" IS NULL OR "DT_Output_27"."Proba_8" > 0.0) THEN ln("DT_Output_27"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_27"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_27"."Proba_9" IS NULL OR "DT_Output_27"."Proba_9" > 0.0) THEN ln("DT_Output_27"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10)) / 32.0 AS "Score_1", 9.0 * (CASE WHEN ("DT_Output_27"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_27"."Proba_1" IS NULL OR "DT_Output_27"."Proba_1" > 0.0) THEN ln("DT_Output_27"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_27"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_27"."Proba_0" IS NULL OR "DT_Output_27"."Proba_0" > 0.0) THEN ln("DT_Output_27"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_27"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_27"."Proba_1" IS NULL OR "DT_Output_27"."Proba_1" > 0.0) THEN ln("DT_Output_27"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_27"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_27"."Proba_2" IS NULL OR "DT_Output_27"."Proba_2" > 0.0) THEN ln("DT_Output_27"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_27"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_27"."Proba_3" IS NULL OR "DT_Output_27"."Proba_3" > 0.0) THEN ln("DT_Output_27"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_27"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_27"."Proba_4" IS NULL OR "DT_Output_27"."Proba_4" > 0.0) THEN ln("DT_Output_27"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_27"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_27"."Proba_5" IS NULL OR "DT_Output_27"."Proba_5" > 0.0) THEN ln("DT_Output_27"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_27"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_27"."Proba_6" IS NULL OR "DT_Output_27"."Proba_6" > 0.0) THEN ln("DT_Output_27"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_27"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_27"."Proba_7" IS NULL OR "DT_Output_27"."Proba_7" > 0.0) THEN ln("DT_Output_27"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_27"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_27"."Proba_8" IS NULL OR "DT_Output_27"."Proba_8" > 0.0) THEN ln("DT_Output_27"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_27"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_27"."Proba_9" IS NULL OR "DT_Output_27"."Proba_9" > 0.0) THEN ln("DT_Output_27"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10) AS "Proba_1", (9.0 * (CASE WHEN ("DT_Output_27"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_27"."Proba_2" IS NULL OR "DT_Output_27"."Proba_2" > 0.0) THEN ln("DT_Output_27"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_27"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_27"."Proba_0" IS NULL OR "DT_Output_27"."Proba_0" > 0.0) THEN ln("DT_Output_27"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_27"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_27"."Proba_1" IS NULL OR "DT_Output_27"."Proba_1" > 0.0) THEN ln("DT_Output_27"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_27"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_27"."Proba_2" IS NULL OR "DT_Output_27"."Proba_2" > 0.0) THEN ln("DT_Output_27"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_27"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_27"."Proba_3" IS NULL OR "DT_Output_27"."Proba_3" > 0.0) THEN ln("DT_Output_27"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_27"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_27"."Proba_4" IS NULL OR "DT_Output_27"."Proba_4" > 0.0) THEN ln("DT_Output_27"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_27"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_27"."Proba_5" IS NULL OR "DT_Output_27"."Proba_5" > 0.0) THEN ln("DT_Output_27"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_27"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_27"."Proba_6" IS NULL OR "DT_Output_27"."Proba_6" > 0.0) THEN ln("DT_Output_27"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_27"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_27"."Proba_7" IS NULL OR "DT_Output_27"."Proba_7" > 0.0) THEN ln("DT_Output_27"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_27"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_27"."Proba_8" IS NULL OR "DT_Output_27"."Proba_8" > 0.0) THEN ln("DT_Output_27"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_27"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_27"."Proba_9" IS NULL OR "DT_Output_27"."Proba_9" > 0.0) THEN ln("DT_Output_27"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10)) / 32.0 AS "Score_2", 9.0 * (CASE WHEN ("DT_Output_27"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_27"."Proba_2" IS NULL OR "DT_Output_27"."Proba_2" > 0.0) THEN ln("DT_Output_27"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_27"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_27"."Proba_0" IS NULL OR "DT_Output_27"."Proba_0" > 0.0) THEN ln("DT_Output_27"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_27"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_27"."Proba_1" IS NULL OR "DT_Output_27"."Proba_1" > 0.0) THEN ln("DT_Output_27"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_27"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_27"."Proba_2" IS NULL OR "DT_Output_27"."Proba_2" > 0.0) THEN ln("DT_Output_27"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_27"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_27"."Proba_3" IS NULL OR "DT_Output_27"."Proba_3" > 0.0) THEN ln("DT_Output_27"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_27"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_27"."Proba_4" IS NULL OR "DT_Output_27"."Proba_4" > 0.0) THEN ln("DT_Output_27"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_27"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_27"."Proba_5" IS NULL OR "DT_Output_27"."Proba_5" > 0.0) THEN ln("DT_Output_27"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_27"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_27"."Proba_6" IS NULL OR "DT_Output_27"."Proba_6" > 0.0) THEN ln("DT_Output_27"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_27"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_27"."Proba_7" IS NULL OR "DT_Output_27"."Proba_7" > 0.0) THEN ln("DT_Output_27"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_27"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_27"."Proba_8" IS NULL OR "DT_Output_27"."Proba_8" > 0.0) THEN ln("DT_Output_27"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_27"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_27"."Proba_9" IS NULL OR "DT_Output_27"."Proba_9" > 0.0) THEN ln("DT_Output_27"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10) AS "Proba_2", (9.0 * (CASE WHEN ("DT_Output_27"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_27"."Proba_3" IS NULL OR "DT_Output_27"."Proba_3" > 0.0) THEN ln("DT_Output_27"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_27"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_27"."Proba_0" IS NULL OR "DT_Output_27"."Proba_0" > 0.0) THEN ln("DT_Output_27"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_27"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_27"."Proba_1" IS NULL OR "DT_Output_27"."Proba_1" > 0.0) THEN ln("DT_Output_27"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_27"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_27"."Proba_2" IS NULL OR "DT_Output_27"."Proba_2" > 0.0) THEN ln("DT_Output_27"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_27"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_27"."Proba_3" IS NULL OR "DT_Output_27"."Proba_3" > 0.0) THEN ln("DT_Output_27"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_27"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_27"."Proba_4" IS NULL OR "DT_Output_27"."Proba_4" > 0.0) THEN ln("DT_Output_27"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_27"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_27"."Proba_5" IS NULL OR "DT_Output_27"."Proba_5" > 0.0) THEN ln("DT_Output_27"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_27"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_27"."Proba_6" IS NULL OR "DT_Output_27"."Proba_6" > 0.0) THEN ln("DT_Output_27"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_27"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_27"."Proba_7" IS NULL OR "DT_Output_27"."Proba_7" > 0.0) THEN ln("DT_Output_27"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_27"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_27"."Proba_8" IS NULL OR "DT_Output_27"."Proba_8" > 0.0) THEN ln("DT_Output_27"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_27"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_27"."Proba_9" IS NULL OR "DT_Output_27"."Proba_9" > 0.0) THEN ln("DT_Output_27"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10)) / 32.0 AS "Score_3", 9.0 * (CASE WHEN ("DT_Output_27"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_27"."Proba_3" IS NULL OR "DT_Output_27"."Proba_3" > 0.0) THEN ln("DT_Output_27"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_27"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_27"."Proba_0" IS NULL OR "DT_Output_27"."Proba_0" > 0.0) THEN ln("DT_Output_27"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_27"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_27"."Proba_1" IS NULL OR "DT_Output_27"."Proba_1" > 0.0) THEN ln("DT_Output_27"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_27"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_27"."Proba_2" IS NULL OR "DT_Output_27"."Proba_2" > 0.0) THEN ln("DT_Output_27"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_27"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_27"."Proba_3" IS NULL OR "DT_Output_27"."Proba_3" > 0.0) THEN ln("DT_Output_27"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_27"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_27"."Proba_4" IS NULL OR "DT_Output_27"."Proba_4" > 0.0) THEN ln("DT_Output_27"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_27"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_27"."Proba_5" IS NULL OR "DT_Output_27"."Proba_5" > 0.0) THEN ln("DT_Output_27"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_27"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_27"."Proba_6" IS NULL OR "DT_Output_27"."Proba_6" > 0.0) THEN ln("DT_Output_27"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_27"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_27"."Proba_7" IS NULL OR "DT_Output_27"."Proba_7" > 0.0) THEN ln("DT_Output_27"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_27"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_27"."Proba_8" IS NULL OR "DT_Output_27"."Proba_8" > 0.0) THEN ln("DT_Output_27"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_27"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_27"."Proba_9" IS NULL OR "DT_Output_27"."Proba_9" > 0.0) THEN ln("DT_Output_27"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10) AS "Proba_3", (9.0 * (CASE WHEN ("DT_Output_27"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_27"."Proba_4" IS NULL OR "DT_Output_27"."Proba_4" > 0.0) THEN ln("DT_Output_27"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_27"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_27"."Proba_0" IS NULL OR "DT_Output_27"."Proba_0" > 0.0) THEN ln("DT_Output_27"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_27"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_27"."Proba_1" IS NULL OR "DT_Output_27"."Proba_1" > 0.0) THEN ln("DT_Output_27"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_27"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_27"."Proba_2" IS NULL OR "DT_Output_27"."Proba_2" > 0.0) THEN ln("DT_Output_27"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_27"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_27"."Proba_3" IS NULL OR "DT_Output_27"."Proba_3" > 0.0) THEN ln("DT_Output_27"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_27"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_27"."Proba_4" IS NULL OR "DT_Output_27"."Proba_4" > 0.0) THEN ln("DT_Output_27"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_27"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_27"."Proba_5" IS NULL OR "DT_Output_27"."Proba_5" > 0.0) THEN ln("DT_Output_27"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_27"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_27"."Proba_6" IS NULL OR "DT_Output_27"."Proba_6" > 0.0) THEN ln("DT_Output_27"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_27"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_27"."Proba_7" IS NULL OR "DT_Output_27"."Proba_7" > 0.0) THEN ln("DT_Output_27"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_27"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_27"."Proba_8" IS NULL OR "DT_Output_27"."Proba_8" > 0.0) THEN ln("DT_Output_27"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_27"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_27"."Proba_9" IS NULL OR "DT_Output_27"."Proba_9" > 0.0) THEN ln("DT_Output_27"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10)) / 32.0 AS "Score_4", 9.0 * (CASE WHEN ("DT_Output_27"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_27"."Proba_4" IS NULL OR "DT_Output_27"."Proba_4" > 0.0) THEN ln("DT_Output_27"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_27"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_27"."Proba_0" IS NULL OR "DT_Output_27"."Proba_0" > 0.0) THEN ln("DT_Output_27"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_27"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_27"."Proba_1" IS NULL OR "DT_Output_27"."Proba_1" > 0.0) THEN ln("DT_Output_27"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_27"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_27"."Proba_2" IS NULL OR "DT_Output_27"."Proba_2" > 0.0) THEN ln("DT_Output_27"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_27"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_27"."Proba_3" IS NULL OR "DT_Output_27"."Proba_3" > 0.0) THEN ln("DT_Output_27"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_27"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_27"."Proba_4" IS NULL OR "DT_Output_27"."Proba_4" > 0.0) THEN ln("DT_Output_27"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_27"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_27"."Proba_5" IS NULL OR "DT_Output_27"."Proba_5" > 0.0) THEN ln("DT_Output_27"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_27"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_27"."Proba_6" IS NULL OR "DT_Output_27"."Proba_6" > 0.0) THEN ln("DT_Output_27"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_27"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_27"."Proba_7" IS NULL OR "DT_Output_27"."Proba_7" > 0.0) THEN ln("DT_Output_27"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_27"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_27"."Proba_8" IS NULL OR "DT_Output_27"."Proba_8" > 0.0) THEN ln("DT_Output_27"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_27"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_27"."Proba_9" IS NULL OR "DT_Output_27"."Proba_9" > 0.0) THEN ln("DT_Output_27"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10) AS "Proba_4", (9.0 * (CASE WHEN ("DT_Output_27"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_27"."Proba_5" IS NULL OR "DT_Output_27"."Proba_5" > 0.0) THEN ln("DT_Output_27"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_27"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_27"."Proba_0" IS NULL OR "DT_Output_27"."Proba_0" > 0.0) THEN ln("DT_Output_27"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_27"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_27"."Proba_1" IS NULL OR "DT_Output_27"."Proba_1" > 0.0) THEN ln("DT_Output_27"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_27"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_27"."Proba_2" IS NULL OR "DT_Output_27"."Proba_2" > 0.0) THEN ln("DT_Output_27"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_27"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_27"."Proba_3" IS NULL OR "DT_Output_27"."Proba_3" > 0.0) THEN ln("DT_Output_27"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_27"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_27"."Proba_4" IS NULL OR "DT_Output_27"."Proba_4" > 0.0) THEN ln("DT_Output_27"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_27"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_27"."Proba_5" IS NULL OR "DT_Output_27"."Proba_5" > 0.0) THEN ln("DT_Output_27"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_27"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_27"."Proba_6" IS NULL OR "DT_Output_27"."Proba_6" > 0.0) THEN ln("DT_Output_27"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_27"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_27"."Proba_7" IS NULL OR "DT_Output_27"."Proba_7" > 0.0) THEN ln("DT_Output_27"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_27"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_27"."Proba_8" IS NULL OR "DT_Output_27"."Proba_8" > 0.0) THEN ln("DT_Output_27"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_27"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_27"."Proba_9" IS NULL OR "DT_Output_27"."Proba_9" > 0.0) THEN ln("DT_Output_27"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10)) / 32.0 AS "Score_5", 9.0 * (CASE WHEN ("DT_Output_27"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_27"."Proba_5" IS NULL OR "DT_Output_27"."Proba_5" > 0.0) THEN ln("DT_Output_27"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_27"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_27"."Proba_0" IS NULL OR "DT_Output_27"."Proba_0" > 0.0) THEN ln("DT_Output_27"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_27"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_27"."Proba_1" IS NULL OR "DT_Output_27"."Proba_1" > 0.0) THEN ln("DT_Output_27"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_27"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_27"."Proba_2" IS NULL OR "DT_Output_27"."Proba_2" > 0.0) THEN ln("DT_Output_27"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_27"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_27"."Proba_3" IS NULL OR "DT_Output_27"."Proba_3" > 0.0) THEN ln("DT_Output_27"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_27"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_27"."Proba_4" IS NULL OR "DT_Output_27"."Proba_4" > 0.0) THEN ln("DT_Output_27"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_27"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_27"."Proba_5" IS NULL OR "DT_Output_27"."Proba_5" > 0.0) THEN ln("DT_Output_27"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_27"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_27"."Proba_6" IS NULL OR "DT_Output_27"."Proba_6" > 0.0) THEN ln("DT_Output_27"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_27"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_27"."Proba_7" IS NULL OR "DT_Output_27"."Proba_7" > 0.0) THEN ln("DT_Output_27"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_27"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_27"."Proba_8" IS NULL OR "DT_Output_27"."Proba_8" > 0.0) THEN ln("DT_Output_27"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_27"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_27"."Proba_9" IS NULL OR "DT_Output_27"."Proba_9" > 0.0) THEN ln("DT_Output_27"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10) AS "Proba_5", (9.0 * (CASE WHEN ("DT_Output_27"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_27"."Proba_6" IS NULL OR "DT_Output_27"."Proba_6" > 0.0) THEN ln("DT_Output_27"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_27"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_27"."Proba_0" IS NULL OR "DT_Output_27"."Proba_0" > 0.0) THEN ln("DT_Output_27"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_27"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_27"."Proba_1" IS NULL OR "DT_Output_27"."Proba_1" > 0.0) THEN ln("DT_Output_27"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_27"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_27"."Proba_2" IS NULL OR "DT_Output_27"."Proba_2" > 0.0) THEN ln("DT_Output_27"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_27"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_27"."Proba_3" IS NULL OR "DT_Output_27"."Proba_3" > 0.0) THEN ln("DT_Output_27"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_27"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_27"."Proba_4" IS NULL OR "DT_Output_27"."Proba_4" > 0.0) THEN ln("DT_Output_27"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_27"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_27"."Proba_5" IS NULL OR "DT_Output_27"."Proba_5" > 0.0) THEN ln("DT_Output_27"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_27"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_27"."Proba_6" IS NULL OR "DT_Output_27"."Proba_6" > 0.0) THEN ln("DT_Output_27"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_27"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_27"."Proba_7" IS NULL OR "DT_Output_27"."Proba_7" > 0.0) THEN ln("DT_Output_27"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_27"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_27"."Proba_8" IS NULL OR "DT_Output_27"."Proba_8" > 0.0) THEN ln("DT_Output_27"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_27"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_27"."Proba_9" IS NULL OR "DT_Output_27"."Proba_9" > 0.0) THEN ln("DT_Output_27"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10)) / 32.0 AS "Score_6", 9.0 * (CASE WHEN ("DT_Output_27"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_27"."Proba_6" IS NULL OR "DT_Output_27"."Proba_6" > 0.0) THEN ln("DT_Output_27"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_27"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_27"."Proba_0" IS NULL OR "DT_Output_27"."Proba_0" > 0.0) THEN ln("DT_Output_27"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_27"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_27"."Proba_1" IS NULL OR "DT_Output_27"."Proba_1" > 0.0) THEN ln("DT_Output_27"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_27"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_27"."Proba_2" IS NULL OR "DT_Output_27"."Proba_2" > 0.0) THEN ln("DT_Output_27"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_27"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_27"."Proba_3" IS NULL OR "DT_Output_27"."Proba_3" > 0.0) THEN ln("DT_Output_27"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_27"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_27"."Proba_4" IS NULL OR "DT_Output_27"."Proba_4" > 0.0) THEN ln("DT_Output_27"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_27"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_27"."Proba_5" IS NULL OR "DT_Output_27"."Proba_5" > 0.0) THEN ln("DT_Output_27"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_27"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_27"."Proba_6" IS NULL OR "DT_Output_27"."Proba_6" > 0.0) THEN ln("DT_Output_27"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_27"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_27"."Proba_7" IS NULL OR "DT_Output_27"."Proba_7" > 0.0) THEN ln("DT_Output_27"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_27"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_27"."Proba_8" IS NULL OR "DT_Output_27"."Proba_8" > 0.0) THEN ln("DT_Output_27"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_27"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_27"."Proba_9" IS NULL OR "DT_Output_27"."Proba_9" > 0.0) THEN ln("DT_Output_27"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10) AS "Proba_6", (9.0 * (CASE WHEN ("DT_Output_27"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_27"."Proba_7" IS NULL OR "DT_Output_27"."Proba_7" > 0.0) THEN ln("DT_Output_27"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_27"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_27"."Proba_0" IS NULL OR "DT_Output_27"."Proba_0" > 0.0) THEN ln("DT_Output_27"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_27"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_27"."Proba_1" IS NULL OR "DT_Output_27"."Proba_1" > 0.0) THEN ln("DT_Output_27"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_27"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_27"."Proba_2" IS NULL OR "DT_Output_27"."Proba_2" > 0.0) THEN ln("DT_Output_27"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_27"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_27"."Proba_3" IS NULL OR "DT_Output_27"."Proba_3" > 0.0) THEN ln("DT_Output_27"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_27"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_27"."Proba_4" IS NULL OR "DT_Output_27"."Proba_4" > 0.0) THEN ln("DT_Output_27"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_27"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_27"."Proba_5" IS NULL OR "DT_Output_27"."Proba_5" > 0.0) THEN ln("DT_Output_27"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_27"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_27"."Proba_6" IS NULL OR "DT_Output_27"."Proba_6" > 0.0) THEN ln("DT_Output_27"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_27"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_27"."Proba_7" IS NULL OR "DT_Output_27"."Proba_7" > 0.0) THEN ln("DT_Output_27"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_27"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_27"."Proba_8" IS NULL OR "DT_Output_27"."Proba_8" > 0.0) THEN ln("DT_Output_27"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_27"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_27"."Proba_9" IS NULL OR "DT_Output_27"."Proba_9" > 0.0) THEN ln("DT_Output_27"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10)) / 32.0 AS "Score_7", 9.0 * (CASE WHEN ("DT_Output_27"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_27"."Proba_7" IS NULL OR "DT_Output_27"."Proba_7" > 0.0) THEN ln("DT_Output_27"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_27"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_27"."Proba_0" IS NULL OR "DT_Output_27"."Proba_0" > 0.0) THEN ln("DT_Output_27"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_27"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_27"."Proba_1" IS NULL OR "DT_Output_27"."Proba_1" > 0.0) THEN ln("DT_Output_27"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_27"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_27"."Proba_2" IS NULL OR "DT_Output_27"."Proba_2" > 0.0) THEN ln("DT_Output_27"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_27"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_27"."Proba_3" IS NULL OR "DT_Output_27"."Proba_3" > 0.0) THEN ln("DT_Output_27"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_27"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_27"."Proba_4" IS NULL OR "DT_Output_27"."Proba_4" > 0.0) THEN ln("DT_Output_27"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_27"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_27"."Proba_5" IS NULL OR "DT_Output_27"."Proba_5" > 0.0) THEN ln("DT_Output_27"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_27"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_27"."Proba_6" IS NULL OR "DT_Output_27"."Proba_6" > 0.0) THEN ln("DT_Output_27"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_27"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_27"."Proba_7" IS NULL OR "DT_Output_27"."Proba_7" > 0.0) THEN ln("DT_Output_27"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_27"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_27"."Proba_8" IS NULL OR "DT_Output_27"."Proba_8" > 0.0) THEN ln("DT_Output_27"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_27"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_27"."Proba_9" IS NULL OR "DT_Output_27"."Proba_9" > 0.0) THEN ln("DT_Output_27"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10) AS "Proba_7", (9.0 * (CASE WHEN ("DT_Output_27"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_27"."Proba_8" IS NULL OR "DT_Output_27"."Proba_8" > 0.0) THEN ln("DT_Output_27"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_27"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_27"."Proba_0" IS NULL OR "DT_Output_27"."Proba_0" > 0.0) THEN ln("DT_Output_27"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_27"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_27"."Proba_1" IS NULL OR "DT_Output_27"."Proba_1" > 0.0) THEN ln("DT_Output_27"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_27"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_27"."Proba_2" IS NULL OR "DT_Output_27"."Proba_2" > 0.0) THEN ln("DT_Output_27"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_27"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_27"."Proba_3" IS NULL OR "DT_Output_27"."Proba_3" > 0.0) THEN ln("DT_Output_27"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_27"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_27"."Proba_4" IS NULL OR "DT_Output_27"."Proba_4" > 0.0) THEN ln("DT_Output_27"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_27"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_27"."Proba_5" IS NULL OR "DT_Output_27"."Proba_5" > 0.0) THEN ln("DT_Output_27"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_27"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_27"."Proba_6" IS NULL OR "DT_Output_27"."Proba_6" > 0.0) THEN ln("DT_Output_27"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_27"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_27"."Proba_7" IS NULL OR "DT_Output_27"."Proba_7" > 0.0) THEN ln("DT_Output_27"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_27"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_27"."Proba_8" IS NULL OR "DT_Output_27"."Proba_8" > 0.0) THEN ln("DT_Output_27"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_27"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_27"."Proba_9" IS NULL OR "DT_Output_27"."Proba_9" > 0.0) THEN ln("DT_Output_27"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10)) / 32.0 AS "Score_8", 9.0 * (CASE WHEN ("DT_Output_27"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_27"."Proba_8" IS NULL OR "DT_Output_27"."Proba_8" > 0.0) THEN ln("DT_Output_27"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_27"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_27"."Proba_0" IS NULL OR "DT_Output_27"."Proba_0" > 0.0) THEN ln("DT_Output_27"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_27"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_27"."Proba_1" IS NULL OR "DT_Output_27"."Proba_1" > 0.0) THEN ln("DT_Output_27"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_27"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_27"."Proba_2" IS NULL OR "DT_Output_27"."Proba_2" > 0.0) THEN ln("DT_Output_27"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_27"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_27"."Proba_3" IS NULL OR "DT_Output_27"."Proba_3" > 0.0) THEN ln("DT_Output_27"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_27"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_27"."Proba_4" IS NULL OR "DT_Output_27"."Proba_4" > 0.0) THEN ln("DT_Output_27"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_27"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_27"."Proba_5" IS NULL OR "DT_Output_27"."Proba_5" > 0.0) THEN ln("DT_Output_27"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_27"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_27"."Proba_6" IS NULL OR "DT_Output_27"."Proba_6" > 0.0) THEN ln("DT_Output_27"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_27"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_27"."Proba_7" IS NULL OR "DT_Output_27"."Proba_7" > 0.0) THEN ln("DT_Output_27"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_27"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_27"."Proba_8" IS NULL OR "DT_Output_27"."Proba_8" > 0.0) THEN ln("DT_Output_27"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_27"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_27"."Proba_9" IS NULL OR "DT_Output_27"."Proba_9" > 0.0) THEN ln("DT_Output_27"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10) AS "Proba_8", (9.0 * (CASE WHEN ("DT_Output_27"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_27"."Proba_9" IS NULL OR "DT_Output_27"."Proba_9" > 0.0) THEN ln("DT_Output_27"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_27"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_27"."Proba_0" IS NULL OR "DT_Output_27"."Proba_0" > 0.0) THEN ln("DT_Output_27"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_27"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_27"."Proba_1" IS NULL OR "DT_Output_27"."Proba_1" > 0.0) THEN ln("DT_Output_27"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_27"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_27"."Proba_2" IS NULL OR "DT_Output_27"."Proba_2" > 0.0) THEN ln("DT_Output_27"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_27"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_27"."Proba_3" IS NULL OR "DT_Output_27"."Proba_3" > 0.0) THEN ln("DT_Output_27"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_27"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_27"."Proba_4" IS NULL OR "DT_Output_27"."Proba_4" > 0.0) THEN ln("DT_Output_27"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_27"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_27"."Proba_5" IS NULL OR "DT_Output_27"."Proba_5" > 0.0) THEN ln("DT_Output_27"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_27"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_27"."Proba_6" IS NULL OR "DT_Output_27"."Proba_6" > 0.0) THEN ln("DT_Output_27"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_27"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_27"."Proba_7" IS NULL OR "DT_Output_27"."Proba_7" > 0.0) THEN ln("DT_Output_27"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_27"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_27"."Proba_8" IS NULL OR "DT_Output_27"."Proba_8" > 0.0) THEN ln("DT_Output_27"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_27"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_27"."Proba_9" IS NULL OR "DT_Output_27"."Proba_9" > 0.0) THEN ln("DT_Output_27"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10)) / 32.0 AS "Score_9", 9.0 * (CASE WHEN ("DT_Output_27"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_27"."Proba_9" IS NULL OR "DT_Output_27"."Proba_9" > 0.0) THEN ln("DT_Output_27"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_27"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_27"."Proba_0" IS NULL OR "DT_Output_27"."Proba_0" > 0.0) THEN ln("DT_Output_27"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_27"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_27"."Proba_1" IS NULL OR "DT_Output_27"."Proba_1" > 0.0) THEN ln("DT_Output_27"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_27"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_27"."Proba_2" IS NULL OR "DT_Output_27"."Proba_2" > 0.0) THEN ln("DT_Output_27"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_27"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_27"."Proba_3" IS NULL OR "DT_Output_27"."Proba_3" > 0.0) THEN ln("DT_Output_27"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_27"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_27"."Proba_4" IS NULL OR "DT_Output_27"."Proba_4" > 0.0) THEN ln("DT_Output_27"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_27"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_27"."Proba_5" IS NULL OR "DT_Output_27"."Proba_5" > 0.0) THEN ln("DT_Output_27"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_27"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_27"."Proba_6" IS NULL OR "DT_Output_27"."Proba_6" > 0.0) THEN ln("DT_Output_27"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_27"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_27"."Proba_7" IS NULL OR "DT_Output_27"."Proba_7" > 0.0) THEN ln("DT_Output_27"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_27"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_27"."Proba_8" IS NULL OR "DT_Output_27"."Proba_8" > 0.0) THEN ln("DT_Output_27"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_27"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_27"."Proba_9" IS NULL OR "DT_Output_27"."Proba_9" > 0.0) THEN ln("DT_Output_27"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10) AS "Proba_9" 
FROM "DT_Output_27"), 
"DT_node_lookup_28" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_30 <= -1.555469036102295) THEN 1 ELSE 2 END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_28" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Proba_0" AS "Proba_0", "Values"."LogProba_0" AS "LogProba_0", "Values"."Proba_1" AS "Proba_1", "Values"."LogProba_1" AS "LogProba_1", "Values"."Proba_2" AS "Proba_2", "Values"."LogProba_2" AS "LogProba_2", "Values"."Proba_3" AS "Proba_3", "Values"."LogProba_3" AS "LogProba_3", "Values"."Proba_4" AS "Proba_4", "Values"."LogProba_4" AS "LogProba_4", "Values"."Proba_5" AS "Proba_5", "Values"."LogProba_5" AS "LogProba_5", "Values"."Proba_6" AS "Proba_6", "Values"."LogProba_6" AS "LogProba_6", "Values"."Proba_7" AS "Proba_7", "Values"."LogProba_7" AS "LogProba_7", "Values"."Proba_8" AS "Proba_8", "Values"."LogProba_8" AS "LogProba_8", "Values"."Proba_9" AS "Proba_9", "Values"."LogProba_9" AS "LogProba_9", "Values"."Decision" AS "Decision", "Values"."DecisionProba" AS "DecisionProba" 
FROM (SELECT 1 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 246 AS count, 1 AS depth, 0 AS parent_id, 0.9962676680392067 AS "Proba_0", -0.00373931449122 AS "LogProba_0", 0.00046654149529375003 AS "Proba_1", -7.67016359138 AS "LogProba_1", 0.00046654149340175967 AS "Proba_2", -7.67016359543 AS "LogProba_2", 0.0004665414955707602 AS "Proba_3", -7.67016359078 AS "LogProba_3", 0.00046654149452566673 AS "Proba_4", -7.67016359302 AS "LogProba_4", 0.00046654149556782425 AS "Proba_5", -7.67016359079 AS "LogProba_5", 0.000466541495568942 AS "Proba_6", -7.67016359079 AS "LogProba_6", 0.0004665414952937538 AS "Proba_7", -7.67016359138 AS "LogProba_7", 0.0 AS "Proba_8", -BINARY_FLOAT_INFINITY AS "LogProba_8", 0.00046654149557076065 AS "Proba_9", -7.67016359078 AS "LogProba_9", 0 AS "Decision", 0.996267668039 AS "DecisionProba" FROM DUAL UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1191 AS count, 1 AS depth, 0 AS parent_id, 6.163963805090568e-11 AS "Proba_0", -23.5097159775 AS "LogProba_0", 0.11110532729931129 AS "Proba_1", -2.197276633 AS "LogProba_1", 0.1111053273611617 AS "Proba_2", -2.19727663244 AS "LogProba_2", 0.11110532736092017 AS "Proba_3", -2.19727663244 AS "LogProba_3", 0.11110532736103679 AS "Proba_4", -2.19727663244 AS "LogProba_4", 0.11110532736092064 AS "Proba_5", -2.19727663244 AS "LogProba_5", 0.11110532736092016 AS "Proba_6", -2.19727663244 AS "LogProba_6", 0.11110532729931177 AS "Proba_7", -2.197276633 AS "LogProba_7", 0.1111573811738576 AS "Proba_8", -2.19680823345 AS "LogProba_8", 0.11110532736092016 AS "Proba_9", -2.19727663244 AS "LogProba_9", 8 AS "Decision", 0.111157381174 AS "DecisionProba" FROM DUAL) "Values"), 
"DT_Output_28" AS 
(SELECT "DT_node_lookup_28"."KEY" AS "KEY", "DT_node_lookup_28".node_id_2 AS node_id_2, "DT_node_data_28".node_id AS node_id, "DT_node_data_28".feature AS feature, "DT_node_data_28".threshold AS threshold, "DT_node_data_28".count AS count, "DT_node_data_28".depth AS depth, "DT_node_data_28".parent_id AS parent_id, "DT_node_data_28"."Proba_0" AS "Proba_0", "DT_node_data_28"."LogProba_0" AS "LogProba_0", "DT_node_data_28"."Proba_1" AS "Proba_1", "DT_node_data_28"."LogProba_1" AS "LogProba_1", "DT_node_data_28"."Proba_2" AS "Proba_2", "DT_node_data_28"."LogProba_2" AS "LogProba_2", "DT_node_data_28"."Proba_3" AS "Proba_3", "DT_node_data_28"."LogProba_3" AS "LogProba_3", "DT_node_data_28"."Proba_4" AS "Proba_4", "DT_node_data_28"."LogProba_4" AS "LogProba_4", "DT_node_data_28"."Proba_5" AS "Proba_5", "DT_node_data_28"."LogProba_5" AS "LogProba_5", "DT_node_data_28"."Proba_6" AS "Proba_6", "DT_node_data_28"."LogProba_6" AS "LogProba_6", "DT_node_data_28"."Proba_7" AS "Proba_7", "DT_node_data_28"."LogProba_7" AS "LogProba_7", "DT_node_data_28"."Proba_8" AS "Proba_8", "DT_node_data_28"."LogProba_8" AS "LogProba_8", "DT_node_data_28"."Proba_9" AS "Proba_9", "DT_node_data_28"."LogProba_9" AS "LogProba_9", "DT_node_data_28"."Decision" AS "Decision", "DT_node_data_28"."DecisionProba" AS "DecisionProba" 
FROM "DT_node_lookup_28" LEFT OUTER JOIN "DT_node_data_28" ON "DT_node_lookup_28".node_id_2 = "DT_node_data_28".node_id), 
"AdaBoost_Estim_28" AS 
(SELECT "DT_Output_28"."KEY" AS "KEY", (9.0 * (CASE WHEN ("DT_Output_28"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_28"."Proba_0" IS NULL OR "DT_Output_28"."Proba_0" > 0.0) THEN ln("DT_Output_28"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_28"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_28"."Proba_0" IS NULL OR "DT_Output_28"."Proba_0" > 0.0) THEN ln("DT_Output_28"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_28"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_28"."Proba_1" IS NULL OR "DT_Output_28"."Proba_1" > 0.0) THEN ln("DT_Output_28"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_28"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_28"."Proba_2" IS NULL OR "DT_Output_28"."Proba_2" > 0.0) THEN ln("DT_Output_28"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_28"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_28"."Proba_3" IS NULL OR "DT_Output_28"."Proba_3" > 0.0) THEN ln("DT_Output_28"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_28"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_28"."Proba_4" IS NULL OR "DT_Output_28"."Proba_4" > 0.0) THEN ln("DT_Output_28"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_28"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_28"."Proba_5" IS NULL OR "DT_Output_28"."Proba_5" > 0.0) THEN ln("DT_Output_28"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_28"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_28"."Proba_6" IS NULL OR "DT_Output_28"."Proba_6" > 0.0) THEN ln("DT_Output_28"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_28"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_28"."Proba_7" IS NULL OR "DT_Output_28"."Proba_7" > 0.0) THEN ln("DT_Output_28"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_28"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_28"."Proba_8" IS NULL OR "DT_Output_28"."Proba_8" > 0.0) THEN ln("DT_Output_28"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_28"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_28"."Proba_9" IS NULL OR "DT_Output_28"."Proba_9" > 0.0) THEN ln("DT_Output_28"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10)) / 32.0 AS "Score_0", 9.0 * (CASE WHEN ("DT_Output_28"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_28"."Proba_0" IS NULL OR "DT_Output_28"."Proba_0" > 0.0) THEN ln("DT_Output_28"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_28"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_28"."Proba_0" IS NULL OR "DT_Output_28"."Proba_0" > 0.0) THEN ln("DT_Output_28"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_28"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_28"."Proba_1" IS NULL OR "DT_Output_28"."Proba_1" > 0.0) THEN ln("DT_Output_28"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_28"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_28"."Proba_2" IS NULL OR "DT_Output_28"."Proba_2" > 0.0) THEN ln("DT_Output_28"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_28"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_28"."Proba_3" IS NULL OR "DT_Output_28"."Proba_3" > 0.0) THEN ln("DT_Output_28"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_28"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_28"."Proba_4" IS NULL OR "DT_Output_28"."Proba_4" > 0.0) THEN ln("DT_Output_28"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_28"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_28"."Proba_5" IS NULL OR "DT_Output_28"."Proba_5" > 0.0) THEN ln("DT_Output_28"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_28"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_28"."Proba_6" IS NULL OR "DT_Output_28"."Proba_6" > 0.0) THEN ln("DT_Output_28"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_28"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_28"."Proba_7" IS NULL OR "DT_Output_28"."Proba_7" > 0.0) THEN ln("DT_Output_28"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_28"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_28"."Proba_8" IS NULL OR "DT_Output_28"."Proba_8" > 0.0) THEN ln("DT_Output_28"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_28"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_28"."Proba_9" IS NULL OR "DT_Output_28"."Proba_9" > 0.0) THEN ln("DT_Output_28"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10) AS "Proba_0", (9.0 * (CASE WHEN ("DT_Output_28"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_28"."Proba_1" IS NULL OR "DT_Output_28"."Proba_1" > 0.0) THEN ln("DT_Output_28"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_28"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_28"."Proba_0" IS NULL OR "DT_Output_28"."Proba_0" > 0.0) THEN ln("DT_Output_28"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_28"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_28"."Proba_1" IS NULL OR "DT_Output_28"."Proba_1" > 0.0) THEN ln("DT_Output_28"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_28"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_28"."Proba_2" IS NULL OR "DT_Output_28"."Proba_2" > 0.0) THEN ln("DT_Output_28"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_28"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_28"."Proba_3" IS NULL OR "DT_Output_28"."Proba_3" > 0.0) THEN ln("DT_Output_28"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_28"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_28"."Proba_4" IS NULL OR "DT_Output_28"."Proba_4" > 0.0) THEN ln("DT_Output_28"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_28"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_28"."Proba_5" IS NULL OR "DT_Output_28"."Proba_5" > 0.0) THEN ln("DT_Output_28"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_28"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_28"."Proba_6" IS NULL OR "DT_Output_28"."Proba_6" > 0.0) THEN ln("DT_Output_28"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_28"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_28"."Proba_7" IS NULL OR "DT_Output_28"."Proba_7" > 0.0) THEN ln("DT_Output_28"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_28"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_28"."Proba_8" IS NULL OR "DT_Output_28"."Proba_8" > 0.0) THEN ln("DT_Output_28"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_28"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_28"."Proba_9" IS NULL OR "DT_Output_28"."Proba_9" > 0.0) THEN ln("DT_Output_28"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10)) / 32.0 AS "Score_1", 9.0 * (CASE WHEN ("DT_Output_28"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_28"."Proba_1" IS NULL OR "DT_Output_28"."Proba_1" > 0.0) THEN ln("DT_Output_28"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_28"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_28"."Proba_0" IS NULL OR "DT_Output_28"."Proba_0" > 0.0) THEN ln("DT_Output_28"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_28"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_28"."Proba_1" IS NULL OR "DT_Output_28"."Proba_1" > 0.0) THEN ln("DT_Output_28"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_28"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_28"."Proba_2" IS NULL OR "DT_Output_28"."Proba_2" > 0.0) THEN ln("DT_Output_28"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_28"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_28"."Proba_3" IS NULL OR "DT_Output_28"."Proba_3" > 0.0) THEN ln("DT_Output_28"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_28"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_28"."Proba_4" IS NULL OR "DT_Output_28"."Proba_4" > 0.0) THEN ln("DT_Output_28"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_28"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_28"."Proba_5" IS NULL OR "DT_Output_28"."Proba_5" > 0.0) THEN ln("DT_Output_28"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_28"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_28"."Proba_6" IS NULL OR "DT_Output_28"."Proba_6" > 0.0) THEN ln("DT_Output_28"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_28"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_28"."Proba_7" IS NULL OR "DT_Output_28"."Proba_7" > 0.0) THEN ln("DT_Output_28"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_28"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_28"."Proba_8" IS NULL OR "DT_Output_28"."Proba_8" > 0.0) THEN ln("DT_Output_28"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_28"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_28"."Proba_9" IS NULL OR "DT_Output_28"."Proba_9" > 0.0) THEN ln("DT_Output_28"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10) AS "Proba_1", (9.0 * (CASE WHEN ("DT_Output_28"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_28"."Proba_2" IS NULL OR "DT_Output_28"."Proba_2" > 0.0) THEN ln("DT_Output_28"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_28"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_28"."Proba_0" IS NULL OR "DT_Output_28"."Proba_0" > 0.0) THEN ln("DT_Output_28"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_28"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_28"."Proba_1" IS NULL OR "DT_Output_28"."Proba_1" > 0.0) THEN ln("DT_Output_28"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_28"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_28"."Proba_2" IS NULL OR "DT_Output_28"."Proba_2" > 0.0) THEN ln("DT_Output_28"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_28"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_28"."Proba_3" IS NULL OR "DT_Output_28"."Proba_3" > 0.0) THEN ln("DT_Output_28"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_28"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_28"."Proba_4" IS NULL OR "DT_Output_28"."Proba_4" > 0.0) THEN ln("DT_Output_28"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_28"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_28"."Proba_5" IS NULL OR "DT_Output_28"."Proba_5" > 0.0) THEN ln("DT_Output_28"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_28"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_28"."Proba_6" IS NULL OR "DT_Output_28"."Proba_6" > 0.0) THEN ln("DT_Output_28"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_28"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_28"."Proba_7" IS NULL OR "DT_Output_28"."Proba_7" > 0.0) THEN ln("DT_Output_28"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_28"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_28"."Proba_8" IS NULL OR "DT_Output_28"."Proba_8" > 0.0) THEN ln("DT_Output_28"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_28"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_28"."Proba_9" IS NULL OR "DT_Output_28"."Proba_9" > 0.0) THEN ln("DT_Output_28"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10)) / 32.0 AS "Score_2", 9.0 * (CASE WHEN ("DT_Output_28"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_28"."Proba_2" IS NULL OR "DT_Output_28"."Proba_2" > 0.0) THEN ln("DT_Output_28"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_28"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_28"."Proba_0" IS NULL OR "DT_Output_28"."Proba_0" > 0.0) THEN ln("DT_Output_28"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_28"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_28"."Proba_1" IS NULL OR "DT_Output_28"."Proba_1" > 0.0) THEN ln("DT_Output_28"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_28"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_28"."Proba_2" IS NULL OR "DT_Output_28"."Proba_2" > 0.0) THEN ln("DT_Output_28"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_28"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_28"."Proba_3" IS NULL OR "DT_Output_28"."Proba_3" > 0.0) THEN ln("DT_Output_28"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_28"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_28"."Proba_4" IS NULL OR "DT_Output_28"."Proba_4" > 0.0) THEN ln("DT_Output_28"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_28"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_28"."Proba_5" IS NULL OR "DT_Output_28"."Proba_5" > 0.0) THEN ln("DT_Output_28"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_28"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_28"."Proba_6" IS NULL OR "DT_Output_28"."Proba_6" > 0.0) THEN ln("DT_Output_28"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_28"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_28"."Proba_7" IS NULL OR "DT_Output_28"."Proba_7" > 0.0) THEN ln("DT_Output_28"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_28"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_28"."Proba_8" IS NULL OR "DT_Output_28"."Proba_8" > 0.0) THEN ln("DT_Output_28"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_28"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_28"."Proba_9" IS NULL OR "DT_Output_28"."Proba_9" > 0.0) THEN ln("DT_Output_28"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10) AS "Proba_2", (9.0 * (CASE WHEN ("DT_Output_28"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_28"."Proba_3" IS NULL OR "DT_Output_28"."Proba_3" > 0.0) THEN ln("DT_Output_28"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_28"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_28"."Proba_0" IS NULL OR "DT_Output_28"."Proba_0" > 0.0) THEN ln("DT_Output_28"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_28"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_28"."Proba_1" IS NULL OR "DT_Output_28"."Proba_1" > 0.0) THEN ln("DT_Output_28"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_28"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_28"."Proba_2" IS NULL OR "DT_Output_28"."Proba_2" > 0.0) THEN ln("DT_Output_28"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_28"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_28"."Proba_3" IS NULL OR "DT_Output_28"."Proba_3" > 0.0) THEN ln("DT_Output_28"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_28"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_28"."Proba_4" IS NULL OR "DT_Output_28"."Proba_4" > 0.0) THEN ln("DT_Output_28"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_28"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_28"."Proba_5" IS NULL OR "DT_Output_28"."Proba_5" > 0.0) THEN ln("DT_Output_28"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_28"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_28"."Proba_6" IS NULL OR "DT_Output_28"."Proba_6" > 0.0) THEN ln("DT_Output_28"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_28"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_28"."Proba_7" IS NULL OR "DT_Output_28"."Proba_7" > 0.0) THEN ln("DT_Output_28"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_28"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_28"."Proba_8" IS NULL OR "DT_Output_28"."Proba_8" > 0.0) THEN ln("DT_Output_28"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_28"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_28"."Proba_9" IS NULL OR "DT_Output_28"."Proba_9" > 0.0) THEN ln("DT_Output_28"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10)) / 32.0 AS "Score_3", 9.0 * (CASE WHEN ("DT_Output_28"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_28"."Proba_3" IS NULL OR "DT_Output_28"."Proba_3" > 0.0) THEN ln("DT_Output_28"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_28"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_28"."Proba_0" IS NULL OR "DT_Output_28"."Proba_0" > 0.0) THEN ln("DT_Output_28"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_28"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_28"."Proba_1" IS NULL OR "DT_Output_28"."Proba_1" > 0.0) THEN ln("DT_Output_28"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_28"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_28"."Proba_2" IS NULL OR "DT_Output_28"."Proba_2" > 0.0) THEN ln("DT_Output_28"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_28"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_28"."Proba_3" IS NULL OR "DT_Output_28"."Proba_3" > 0.0) THEN ln("DT_Output_28"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_28"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_28"."Proba_4" IS NULL OR "DT_Output_28"."Proba_4" > 0.0) THEN ln("DT_Output_28"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_28"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_28"."Proba_5" IS NULL OR "DT_Output_28"."Proba_5" > 0.0) THEN ln("DT_Output_28"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_28"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_28"."Proba_6" IS NULL OR "DT_Output_28"."Proba_6" > 0.0) THEN ln("DT_Output_28"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_28"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_28"."Proba_7" IS NULL OR "DT_Output_28"."Proba_7" > 0.0) THEN ln("DT_Output_28"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_28"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_28"."Proba_8" IS NULL OR "DT_Output_28"."Proba_8" > 0.0) THEN ln("DT_Output_28"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_28"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_28"."Proba_9" IS NULL OR "DT_Output_28"."Proba_9" > 0.0) THEN ln("DT_Output_28"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10) AS "Proba_3", (9.0 * (CASE WHEN ("DT_Output_28"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_28"."Proba_4" IS NULL OR "DT_Output_28"."Proba_4" > 0.0) THEN ln("DT_Output_28"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_28"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_28"."Proba_0" IS NULL OR "DT_Output_28"."Proba_0" > 0.0) THEN ln("DT_Output_28"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_28"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_28"."Proba_1" IS NULL OR "DT_Output_28"."Proba_1" > 0.0) THEN ln("DT_Output_28"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_28"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_28"."Proba_2" IS NULL OR "DT_Output_28"."Proba_2" > 0.0) THEN ln("DT_Output_28"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_28"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_28"."Proba_3" IS NULL OR "DT_Output_28"."Proba_3" > 0.0) THEN ln("DT_Output_28"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_28"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_28"."Proba_4" IS NULL OR "DT_Output_28"."Proba_4" > 0.0) THEN ln("DT_Output_28"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_28"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_28"."Proba_5" IS NULL OR "DT_Output_28"."Proba_5" > 0.0) THEN ln("DT_Output_28"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_28"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_28"."Proba_6" IS NULL OR "DT_Output_28"."Proba_6" > 0.0) THEN ln("DT_Output_28"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_28"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_28"."Proba_7" IS NULL OR "DT_Output_28"."Proba_7" > 0.0) THEN ln("DT_Output_28"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_28"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_28"."Proba_8" IS NULL OR "DT_Output_28"."Proba_8" > 0.0) THEN ln("DT_Output_28"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_28"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_28"."Proba_9" IS NULL OR "DT_Output_28"."Proba_9" > 0.0) THEN ln("DT_Output_28"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10)) / 32.0 AS "Score_4", 9.0 * (CASE WHEN ("DT_Output_28"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_28"."Proba_4" IS NULL OR "DT_Output_28"."Proba_4" > 0.0) THEN ln("DT_Output_28"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_28"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_28"."Proba_0" IS NULL OR "DT_Output_28"."Proba_0" > 0.0) THEN ln("DT_Output_28"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_28"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_28"."Proba_1" IS NULL OR "DT_Output_28"."Proba_1" > 0.0) THEN ln("DT_Output_28"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_28"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_28"."Proba_2" IS NULL OR "DT_Output_28"."Proba_2" > 0.0) THEN ln("DT_Output_28"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_28"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_28"."Proba_3" IS NULL OR "DT_Output_28"."Proba_3" > 0.0) THEN ln("DT_Output_28"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_28"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_28"."Proba_4" IS NULL OR "DT_Output_28"."Proba_4" > 0.0) THEN ln("DT_Output_28"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_28"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_28"."Proba_5" IS NULL OR "DT_Output_28"."Proba_5" > 0.0) THEN ln("DT_Output_28"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_28"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_28"."Proba_6" IS NULL OR "DT_Output_28"."Proba_6" > 0.0) THEN ln("DT_Output_28"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_28"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_28"."Proba_7" IS NULL OR "DT_Output_28"."Proba_7" > 0.0) THEN ln("DT_Output_28"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_28"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_28"."Proba_8" IS NULL OR "DT_Output_28"."Proba_8" > 0.0) THEN ln("DT_Output_28"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_28"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_28"."Proba_9" IS NULL OR "DT_Output_28"."Proba_9" > 0.0) THEN ln("DT_Output_28"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10) AS "Proba_4", (9.0 * (CASE WHEN ("DT_Output_28"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_28"."Proba_5" IS NULL OR "DT_Output_28"."Proba_5" > 0.0) THEN ln("DT_Output_28"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_28"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_28"."Proba_0" IS NULL OR "DT_Output_28"."Proba_0" > 0.0) THEN ln("DT_Output_28"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_28"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_28"."Proba_1" IS NULL OR "DT_Output_28"."Proba_1" > 0.0) THEN ln("DT_Output_28"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_28"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_28"."Proba_2" IS NULL OR "DT_Output_28"."Proba_2" > 0.0) THEN ln("DT_Output_28"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_28"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_28"."Proba_3" IS NULL OR "DT_Output_28"."Proba_3" > 0.0) THEN ln("DT_Output_28"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_28"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_28"."Proba_4" IS NULL OR "DT_Output_28"."Proba_4" > 0.0) THEN ln("DT_Output_28"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_28"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_28"."Proba_5" IS NULL OR "DT_Output_28"."Proba_5" > 0.0) THEN ln("DT_Output_28"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_28"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_28"."Proba_6" IS NULL OR "DT_Output_28"."Proba_6" > 0.0) THEN ln("DT_Output_28"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_28"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_28"."Proba_7" IS NULL OR "DT_Output_28"."Proba_7" > 0.0) THEN ln("DT_Output_28"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_28"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_28"."Proba_8" IS NULL OR "DT_Output_28"."Proba_8" > 0.0) THEN ln("DT_Output_28"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_28"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_28"."Proba_9" IS NULL OR "DT_Output_28"."Proba_9" > 0.0) THEN ln("DT_Output_28"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10)) / 32.0 AS "Score_5", 9.0 * (CASE WHEN ("DT_Output_28"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_28"."Proba_5" IS NULL OR "DT_Output_28"."Proba_5" > 0.0) THEN ln("DT_Output_28"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_28"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_28"."Proba_0" IS NULL OR "DT_Output_28"."Proba_0" > 0.0) THEN ln("DT_Output_28"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_28"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_28"."Proba_1" IS NULL OR "DT_Output_28"."Proba_1" > 0.0) THEN ln("DT_Output_28"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_28"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_28"."Proba_2" IS NULL OR "DT_Output_28"."Proba_2" > 0.0) THEN ln("DT_Output_28"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_28"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_28"."Proba_3" IS NULL OR "DT_Output_28"."Proba_3" > 0.0) THEN ln("DT_Output_28"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_28"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_28"."Proba_4" IS NULL OR "DT_Output_28"."Proba_4" > 0.0) THEN ln("DT_Output_28"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_28"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_28"."Proba_5" IS NULL OR "DT_Output_28"."Proba_5" > 0.0) THEN ln("DT_Output_28"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_28"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_28"."Proba_6" IS NULL OR "DT_Output_28"."Proba_6" > 0.0) THEN ln("DT_Output_28"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_28"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_28"."Proba_7" IS NULL OR "DT_Output_28"."Proba_7" > 0.0) THEN ln("DT_Output_28"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_28"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_28"."Proba_8" IS NULL OR "DT_Output_28"."Proba_8" > 0.0) THEN ln("DT_Output_28"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_28"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_28"."Proba_9" IS NULL OR "DT_Output_28"."Proba_9" > 0.0) THEN ln("DT_Output_28"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10) AS "Proba_5", (9.0 * (CASE WHEN ("DT_Output_28"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_28"."Proba_6" IS NULL OR "DT_Output_28"."Proba_6" > 0.0) THEN ln("DT_Output_28"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_28"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_28"."Proba_0" IS NULL OR "DT_Output_28"."Proba_0" > 0.0) THEN ln("DT_Output_28"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_28"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_28"."Proba_1" IS NULL OR "DT_Output_28"."Proba_1" > 0.0) THEN ln("DT_Output_28"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_28"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_28"."Proba_2" IS NULL OR "DT_Output_28"."Proba_2" > 0.0) THEN ln("DT_Output_28"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_28"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_28"."Proba_3" IS NULL OR "DT_Output_28"."Proba_3" > 0.0) THEN ln("DT_Output_28"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_28"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_28"."Proba_4" IS NULL OR "DT_Output_28"."Proba_4" > 0.0) THEN ln("DT_Output_28"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_28"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_28"."Proba_5" IS NULL OR "DT_Output_28"."Proba_5" > 0.0) THEN ln("DT_Output_28"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_28"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_28"."Proba_6" IS NULL OR "DT_Output_28"."Proba_6" > 0.0) THEN ln("DT_Output_28"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_28"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_28"."Proba_7" IS NULL OR "DT_Output_28"."Proba_7" > 0.0) THEN ln("DT_Output_28"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_28"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_28"."Proba_8" IS NULL OR "DT_Output_28"."Proba_8" > 0.0) THEN ln("DT_Output_28"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_28"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_28"."Proba_9" IS NULL OR "DT_Output_28"."Proba_9" > 0.0) THEN ln("DT_Output_28"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10)) / 32.0 AS "Score_6", 9.0 * (CASE WHEN ("DT_Output_28"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_28"."Proba_6" IS NULL OR "DT_Output_28"."Proba_6" > 0.0) THEN ln("DT_Output_28"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_28"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_28"."Proba_0" IS NULL OR "DT_Output_28"."Proba_0" > 0.0) THEN ln("DT_Output_28"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_28"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_28"."Proba_1" IS NULL OR "DT_Output_28"."Proba_1" > 0.0) THEN ln("DT_Output_28"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_28"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_28"."Proba_2" IS NULL OR "DT_Output_28"."Proba_2" > 0.0) THEN ln("DT_Output_28"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_28"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_28"."Proba_3" IS NULL OR "DT_Output_28"."Proba_3" > 0.0) THEN ln("DT_Output_28"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_28"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_28"."Proba_4" IS NULL OR "DT_Output_28"."Proba_4" > 0.0) THEN ln("DT_Output_28"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_28"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_28"."Proba_5" IS NULL OR "DT_Output_28"."Proba_5" > 0.0) THEN ln("DT_Output_28"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_28"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_28"."Proba_6" IS NULL OR "DT_Output_28"."Proba_6" > 0.0) THEN ln("DT_Output_28"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_28"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_28"."Proba_7" IS NULL OR "DT_Output_28"."Proba_7" > 0.0) THEN ln("DT_Output_28"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_28"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_28"."Proba_8" IS NULL OR "DT_Output_28"."Proba_8" > 0.0) THEN ln("DT_Output_28"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_28"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_28"."Proba_9" IS NULL OR "DT_Output_28"."Proba_9" > 0.0) THEN ln("DT_Output_28"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10) AS "Proba_6", (9.0 * (CASE WHEN ("DT_Output_28"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_28"."Proba_7" IS NULL OR "DT_Output_28"."Proba_7" > 0.0) THEN ln("DT_Output_28"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_28"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_28"."Proba_0" IS NULL OR "DT_Output_28"."Proba_0" > 0.0) THEN ln("DT_Output_28"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_28"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_28"."Proba_1" IS NULL OR "DT_Output_28"."Proba_1" > 0.0) THEN ln("DT_Output_28"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_28"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_28"."Proba_2" IS NULL OR "DT_Output_28"."Proba_2" > 0.0) THEN ln("DT_Output_28"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_28"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_28"."Proba_3" IS NULL OR "DT_Output_28"."Proba_3" > 0.0) THEN ln("DT_Output_28"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_28"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_28"."Proba_4" IS NULL OR "DT_Output_28"."Proba_4" > 0.0) THEN ln("DT_Output_28"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_28"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_28"."Proba_5" IS NULL OR "DT_Output_28"."Proba_5" > 0.0) THEN ln("DT_Output_28"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_28"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_28"."Proba_6" IS NULL OR "DT_Output_28"."Proba_6" > 0.0) THEN ln("DT_Output_28"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_28"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_28"."Proba_7" IS NULL OR "DT_Output_28"."Proba_7" > 0.0) THEN ln("DT_Output_28"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_28"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_28"."Proba_8" IS NULL OR "DT_Output_28"."Proba_8" > 0.0) THEN ln("DT_Output_28"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_28"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_28"."Proba_9" IS NULL OR "DT_Output_28"."Proba_9" > 0.0) THEN ln("DT_Output_28"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10)) / 32.0 AS "Score_7", 9.0 * (CASE WHEN ("DT_Output_28"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_28"."Proba_7" IS NULL OR "DT_Output_28"."Proba_7" > 0.0) THEN ln("DT_Output_28"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_28"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_28"."Proba_0" IS NULL OR "DT_Output_28"."Proba_0" > 0.0) THEN ln("DT_Output_28"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_28"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_28"."Proba_1" IS NULL OR "DT_Output_28"."Proba_1" > 0.0) THEN ln("DT_Output_28"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_28"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_28"."Proba_2" IS NULL OR "DT_Output_28"."Proba_2" > 0.0) THEN ln("DT_Output_28"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_28"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_28"."Proba_3" IS NULL OR "DT_Output_28"."Proba_3" > 0.0) THEN ln("DT_Output_28"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_28"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_28"."Proba_4" IS NULL OR "DT_Output_28"."Proba_4" > 0.0) THEN ln("DT_Output_28"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_28"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_28"."Proba_5" IS NULL OR "DT_Output_28"."Proba_5" > 0.0) THEN ln("DT_Output_28"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_28"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_28"."Proba_6" IS NULL OR "DT_Output_28"."Proba_6" > 0.0) THEN ln("DT_Output_28"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_28"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_28"."Proba_7" IS NULL OR "DT_Output_28"."Proba_7" > 0.0) THEN ln("DT_Output_28"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_28"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_28"."Proba_8" IS NULL OR "DT_Output_28"."Proba_8" > 0.0) THEN ln("DT_Output_28"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_28"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_28"."Proba_9" IS NULL OR "DT_Output_28"."Proba_9" > 0.0) THEN ln("DT_Output_28"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10) AS "Proba_7", (9.0 * (CASE WHEN ("DT_Output_28"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_28"."Proba_8" IS NULL OR "DT_Output_28"."Proba_8" > 0.0) THEN ln("DT_Output_28"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_28"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_28"."Proba_0" IS NULL OR "DT_Output_28"."Proba_0" > 0.0) THEN ln("DT_Output_28"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_28"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_28"."Proba_1" IS NULL OR "DT_Output_28"."Proba_1" > 0.0) THEN ln("DT_Output_28"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_28"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_28"."Proba_2" IS NULL OR "DT_Output_28"."Proba_2" > 0.0) THEN ln("DT_Output_28"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_28"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_28"."Proba_3" IS NULL OR "DT_Output_28"."Proba_3" > 0.0) THEN ln("DT_Output_28"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_28"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_28"."Proba_4" IS NULL OR "DT_Output_28"."Proba_4" > 0.0) THEN ln("DT_Output_28"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_28"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_28"."Proba_5" IS NULL OR "DT_Output_28"."Proba_5" > 0.0) THEN ln("DT_Output_28"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_28"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_28"."Proba_6" IS NULL OR "DT_Output_28"."Proba_6" > 0.0) THEN ln("DT_Output_28"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_28"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_28"."Proba_7" IS NULL OR "DT_Output_28"."Proba_7" > 0.0) THEN ln("DT_Output_28"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_28"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_28"."Proba_8" IS NULL OR "DT_Output_28"."Proba_8" > 0.0) THEN ln("DT_Output_28"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_28"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_28"."Proba_9" IS NULL OR "DT_Output_28"."Proba_9" > 0.0) THEN ln("DT_Output_28"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10)) / 32.0 AS "Score_8", 9.0 * (CASE WHEN ("DT_Output_28"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_28"."Proba_8" IS NULL OR "DT_Output_28"."Proba_8" > 0.0) THEN ln("DT_Output_28"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_28"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_28"."Proba_0" IS NULL OR "DT_Output_28"."Proba_0" > 0.0) THEN ln("DT_Output_28"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_28"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_28"."Proba_1" IS NULL OR "DT_Output_28"."Proba_1" > 0.0) THEN ln("DT_Output_28"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_28"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_28"."Proba_2" IS NULL OR "DT_Output_28"."Proba_2" > 0.0) THEN ln("DT_Output_28"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_28"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_28"."Proba_3" IS NULL OR "DT_Output_28"."Proba_3" > 0.0) THEN ln("DT_Output_28"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_28"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_28"."Proba_4" IS NULL OR "DT_Output_28"."Proba_4" > 0.0) THEN ln("DT_Output_28"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_28"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_28"."Proba_5" IS NULL OR "DT_Output_28"."Proba_5" > 0.0) THEN ln("DT_Output_28"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_28"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_28"."Proba_6" IS NULL OR "DT_Output_28"."Proba_6" > 0.0) THEN ln("DT_Output_28"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_28"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_28"."Proba_7" IS NULL OR "DT_Output_28"."Proba_7" > 0.0) THEN ln("DT_Output_28"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_28"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_28"."Proba_8" IS NULL OR "DT_Output_28"."Proba_8" > 0.0) THEN ln("DT_Output_28"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_28"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_28"."Proba_9" IS NULL OR "DT_Output_28"."Proba_9" > 0.0) THEN ln("DT_Output_28"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10) AS "Proba_8", (9.0 * (CASE WHEN ("DT_Output_28"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_28"."Proba_9" IS NULL OR "DT_Output_28"."Proba_9" > 0.0) THEN ln("DT_Output_28"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_28"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_28"."Proba_0" IS NULL OR "DT_Output_28"."Proba_0" > 0.0) THEN ln("DT_Output_28"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_28"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_28"."Proba_1" IS NULL OR "DT_Output_28"."Proba_1" > 0.0) THEN ln("DT_Output_28"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_28"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_28"."Proba_2" IS NULL OR "DT_Output_28"."Proba_2" > 0.0) THEN ln("DT_Output_28"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_28"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_28"."Proba_3" IS NULL OR "DT_Output_28"."Proba_3" > 0.0) THEN ln("DT_Output_28"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_28"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_28"."Proba_4" IS NULL OR "DT_Output_28"."Proba_4" > 0.0) THEN ln("DT_Output_28"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_28"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_28"."Proba_5" IS NULL OR "DT_Output_28"."Proba_5" > 0.0) THEN ln("DT_Output_28"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_28"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_28"."Proba_6" IS NULL OR "DT_Output_28"."Proba_6" > 0.0) THEN ln("DT_Output_28"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_28"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_28"."Proba_7" IS NULL OR "DT_Output_28"."Proba_7" > 0.0) THEN ln("DT_Output_28"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_28"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_28"."Proba_8" IS NULL OR "DT_Output_28"."Proba_8" > 0.0) THEN ln("DT_Output_28"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_28"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_28"."Proba_9" IS NULL OR "DT_Output_28"."Proba_9" > 0.0) THEN ln("DT_Output_28"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10)) / 32.0 AS "Score_9", 9.0 * (CASE WHEN ("DT_Output_28"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_28"."Proba_9" IS NULL OR "DT_Output_28"."Proba_9" > 0.0) THEN ln("DT_Output_28"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_28"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_28"."Proba_0" IS NULL OR "DT_Output_28"."Proba_0" > 0.0) THEN ln("DT_Output_28"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_28"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_28"."Proba_1" IS NULL OR "DT_Output_28"."Proba_1" > 0.0) THEN ln("DT_Output_28"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_28"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_28"."Proba_2" IS NULL OR "DT_Output_28"."Proba_2" > 0.0) THEN ln("DT_Output_28"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_28"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_28"."Proba_3" IS NULL OR "DT_Output_28"."Proba_3" > 0.0) THEN ln("DT_Output_28"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_28"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_28"."Proba_4" IS NULL OR "DT_Output_28"."Proba_4" > 0.0) THEN ln("DT_Output_28"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_28"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_28"."Proba_5" IS NULL OR "DT_Output_28"."Proba_5" > 0.0) THEN ln("DT_Output_28"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_28"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_28"."Proba_6" IS NULL OR "DT_Output_28"."Proba_6" > 0.0) THEN ln("DT_Output_28"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_28"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_28"."Proba_7" IS NULL OR "DT_Output_28"."Proba_7" > 0.0) THEN ln("DT_Output_28"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_28"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_28"."Proba_8" IS NULL OR "DT_Output_28"."Proba_8" > 0.0) THEN ln("DT_Output_28"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_28"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_28"."Proba_9" IS NULL OR "DT_Output_28"."Proba_9" > 0.0) THEN ln("DT_Output_28"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10) AS "Proba_9" 
FROM "DT_Output_28"), 
"DT_node_lookup_29" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_38 <= -1.6508052349090576) THEN 1 ELSE 2 END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_29" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Proba_0" AS "Proba_0", "Values"."LogProba_0" AS "LogProba_0", "Values"."Proba_1" AS "Proba_1", "Values"."LogProba_1" AS "LogProba_1", "Values"."Proba_2" AS "Proba_2", "Values"."LogProba_2" AS "LogProba_2", "Values"."Proba_3" AS "Proba_3", "Values"."LogProba_3" AS "LogProba_3", "Values"."Proba_4" AS "Proba_4", "Values"."LogProba_4" AS "LogProba_4", "Values"."Proba_5" AS "Proba_5", "Values"."LogProba_5" AS "LogProba_5", "Values"."Proba_6" AS "Proba_6", "Values"."LogProba_6" AS "LogProba_6", "Values"."Proba_7" AS "Proba_7", "Values"."LogProba_7" AS "LogProba_7", "Values"."Proba_8" AS "Proba_8", "Values"."LogProba_8" AS "LogProba_8", "Values"."Proba_9" AS "Proba_9", "Values"."LogProba_9" AS "LogProba_9", "Values"."Decision" AS "Decision", "Values"."DecisionProba" AS "DecisionProba" 
FROM (SELECT 1 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 219 AS count, 1 AS depth, 0 AS parent_id, 0.9999999961140276 AS "Proba_0", -3.88597244028e-09 AS "LogProba_0", 0.0 AS "Proba_1", -BINARY_FLOAT_INFINITY AS "LogProba_1", 5.56611754096245e-10 AS "Proba_2", -21.3091531494 AS "LogProba_2", 5.5478561897525e-10 AS "Proba_3", -21.3124393489 AS "LogProba_3", 5.556881155795511e-10 AS "Proba_4", -21.3108139223 AS "LogProba_4", 5.547882189984366e-10 AS "Proba_5", -21.3124346624 AS "LogProba_5", 5.547872278116551e-10 AS "Proba_6", -21.312436449 AS "LogProba_6", 0.0 AS "Proba_7", -BINARY_FLOAT_INFINITY AS "LogProba_7", 5.545258188025101e-10 AS "Proba_8", -21.3129077479 AS "LogProba_8", 5.547856189752543e-10 AS "Proba_9", -21.3124393489 AS "LogProba_9", 0 AS "Decision", 0.999999996114 AS "DecisionProba" FROM DUAL UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1218 AS count, 1 AS depth, 0 AS parent_id, 5.527512813996885e-05 AS "Proba_0", -9.803187513 AS "LogProba_0", 0.1111111111590619 AS "Proba_1", -2.1972245769 AS "LogProba_1", 0.11111111109724753 AS "Proba_2", -2.19722457746 AS "LogProba_2", 0.11111111109745023 AS "Proba_3", -2.19722457746 AS "LogProba_3", 0.11111111109734974 AS "Proba_4", -2.19722457746 AS "LogProba_4", 0.11111111109744957 AS "Proba_5", -2.19722457746 AS "LogProba_5", 0.11111111109744981 AS "Proba_6", -2.19722457746 AS "LogProba_6", 0.11111111115906222 AS "Proba_7", -2.1972245769 AS "LogProba_7", 0.11105583596933906 AS "Proba_8", -2.19772217739 AS "LogProba_8", 0.11111111109744998 AS "Proba_9", -2.19722457746 AS "LogProba_9", 7 AS "Decision", 0.111111111159 AS "DecisionProba" FROM DUAL) "Values"), 
"DT_Output_29" AS 
(SELECT "DT_node_lookup_29"."KEY" AS "KEY", "DT_node_lookup_29".node_id_2 AS node_id_2, "DT_node_data_29".node_id AS node_id, "DT_node_data_29".feature AS feature, "DT_node_data_29".threshold AS threshold, "DT_node_data_29".count AS count, "DT_node_data_29".depth AS depth, "DT_node_data_29".parent_id AS parent_id, "DT_node_data_29"."Proba_0" AS "Proba_0", "DT_node_data_29"."LogProba_0" AS "LogProba_0", "DT_node_data_29"."Proba_1" AS "Proba_1", "DT_node_data_29"."LogProba_1" AS "LogProba_1", "DT_node_data_29"."Proba_2" AS "Proba_2", "DT_node_data_29"."LogProba_2" AS "LogProba_2", "DT_node_data_29"."Proba_3" AS "Proba_3", "DT_node_data_29"."LogProba_3" AS "LogProba_3", "DT_node_data_29"."Proba_4" AS "Proba_4", "DT_node_data_29"."LogProba_4" AS "LogProba_4", "DT_node_data_29"."Proba_5" AS "Proba_5", "DT_node_data_29"."LogProba_5" AS "LogProba_5", "DT_node_data_29"."Proba_6" AS "Proba_6", "DT_node_data_29"."LogProba_6" AS "LogProba_6", "DT_node_data_29"."Proba_7" AS "Proba_7", "DT_node_data_29"."LogProba_7" AS "LogProba_7", "DT_node_data_29"."Proba_8" AS "Proba_8", "DT_node_data_29"."LogProba_8" AS "LogProba_8", "DT_node_data_29"."Proba_9" AS "Proba_9", "DT_node_data_29"."LogProba_9" AS "LogProba_9", "DT_node_data_29"."Decision" AS "Decision", "DT_node_data_29"."DecisionProba" AS "DecisionProba" 
FROM "DT_node_lookup_29" LEFT OUTER JOIN "DT_node_data_29" ON "DT_node_lookup_29".node_id_2 = "DT_node_data_29".node_id), 
"AdaBoost_Estim_29" AS 
(SELECT "DT_Output_29"."KEY" AS "KEY", (9.0 * (CASE WHEN ("DT_Output_29"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_29"."Proba_0" IS NULL OR "DT_Output_29"."Proba_0" > 0.0) THEN ln("DT_Output_29"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_29"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_29"."Proba_0" IS NULL OR "DT_Output_29"."Proba_0" > 0.0) THEN ln("DT_Output_29"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_29"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_29"."Proba_1" IS NULL OR "DT_Output_29"."Proba_1" > 0.0) THEN ln("DT_Output_29"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_29"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_29"."Proba_2" IS NULL OR "DT_Output_29"."Proba_2" > 0.0) THEN ln("DT_Output_29"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_29"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_29"."Proba_3" IS NULL OR "DT_Output_29"."Proba_3" > 0.0) THEN ln("DT_Output_29"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_29"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_29"."Proba_4" IS NULL OR "DT_Output_29"."Proba_4" > 0.0) THEN ln("DT_Output_29"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_29"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_29"."Proba_5" IS NULL OR "DT_Output_29"."Proba_5" > 0.0) THEN ln("DT_Output_29"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_29"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_29"."Proba_6" IS NULL OR "DT_Output_29"."Proba_6" > 0.0) THEN ln("DT_Output_29"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_29"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_29"."Proba_7" IS NULL OR "DT_Output_29"."Proba_7" > 0.0) THEN ln("DT_Output_29"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_29"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_29"."Proba_8" IS NULL OR "DT_Output_29"."Proba_8" > 0.0) THEN ln("DT_Output_29"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_29"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_29"."Proba_9" IS NULL OR "DT_Output_29"."Proba_9" > 0.0) THEN ln("DT_Output_29"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10)) / 32.0 AS "Score_0", 9.0 * (CASE WHEN ("DT_Output_29"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_29"."Proba_0" IS NULL OR "DT_Output_29"."Proba_0" > 0.0) THEN ln("DT_Output_29"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_29"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_29"."Proba_0" IS NULL OR "DT_Output_29"."Proba_0" > 0.0) THEN ln("DT_Output_29"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_29"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_29"."Proba_1" IS NULL OR "DT_Output_29"."Proba_1" > 0.0) THEN ln("DT_Output_29"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_29"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_29"."Proba_2" IS NULL OR "DT_Output_29"."Proba_2" > 0.0) THEN ln("DT_Output_29"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_29"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_29"."Proba_3" IS NULL OR "DT_Output_29"."Proba_3" > 0.0) THEN ln("DT_Output_29"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_29"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_29"."Proba_4" IS NULL OR "DT_Output_29"."Proba_4" > 0.0) THEN ln("DT_Output_29"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_29"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_29"."Proba_5" IS NULL OR "DT_Output_29"."Proba_5" > 0.0) THEN ln("DT_Output_29"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_29"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_29"."Proba_6" IS NULL OR "DT_Output_29"."Proba_6" > 0.0) THEN ln("DT_Output_29"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_29"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_29"."Proba_7" IS NULL OR "DT_Output_29"."Proba_7" > 0.0) THEN ln("DT_Output_29"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_29"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_29"."Proba_8" IS NULL OR "DT_Output_29"."Proba_8" > 0.0) THEN ln("DT_Output_29"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_29"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_29"."Proba_9" IS NULL OR "DT_Output_29"."Proba_9" > 0.0) THEN ln("DT_Output_29"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10) AS "Proba_0", (9.0 * (CASE WHEN ("DT_Output_29"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_29"."Proba_1" IS NULL OR "DT_Output_29"."Proba_1" > 0.0) THEN ln("DT_Output_29"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_29"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_29"."Proba_0" IS NULL OR "DT_Output_29"."Proba_0" > 0.0) THEN ln("DT_Output_29"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_29"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_29"."Proba_1" IS NULL OR "DT_Output_29"."Proba_1" > 0.0) THEN ln("DT_Output_29"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_29"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_29"."Proba_2" IS NULL OR "DT_Output_29"."Proba_2" > 0.0) THEN ln("DT_Output_29"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_29"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_29"."Proba_3" IS NULL OR "DT_Output_29"."Proba_3" > 0.0) THEN ln("DT_Output_29"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_29"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_29"."Proba_4" IS NULL OR "DT_Output_29"."Proba_4" > 0.0) THEN ln("DT_Output_29"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_29"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_29"."Proba_5" IS NULL OR "DT_Output_29"."Proba_5" > 0.0) THEN ln("DT_Output_29"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_29"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_29"."Proba_6" IS NULL OR "DT_Output_29"."Proba_6" > 0.0) THEN ln("DT_Output_29"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_29"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_29"."Proba_7" IS NULL OR "DT_Output_29"."Proba_7" > 0.0) THEN ln("DT_Output_29"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_29"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_29"."Proba_8" IS NULL OR "DT_Output_29"."Proba_8" > 0.0) THEN ln("DT_Output_29"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_29"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_29"."Proba_9" IS NULL OR "DT_Output_29"."Proba_9" > 0.0) THEN ln("DT_Output_29"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10)) / 32.0 AS "Score_1", 9.0 * (CASE WHEN ("DT_Output_29"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_29"."Proba_1" IS NULL OR "DT_Output_29"."Proba_1" > 0.0) THEN ln("DT_Output_29"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_29"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_29"."Proba_0" IS NULL OR "DT_Output_29"."Proba_0" > 0.0) THEN ln("DT_Output_29"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_29"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_29"."Proba_1" IS NULL OR "DT_Output_29"."Proba_1" > 0.0) THEN ln("DT_Output_29"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_29"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_29"."Proba_2" IS NULL OR "DT_Output_29"."Proba_2" > 0.0) THEN ln("DT_Output_29"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_29"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_29"."Proba_3" IS NULL OR "DT_Output_29"."Proba_3" > 0.0) THEN ln("DT_Output_29"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_29"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_29"."Proba_4" IS NULL OR "DT_Output_29"."Proba_4" > 0.0) THEN ln("DT_Output_29"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_29"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_29"."Proba_5" IS NULL OR "DT_Output_29"."Proba_5" > 0.0) THEN ln("DT_Output_29"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_29"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_29"."Proba_6" IS NULL OR "DT_Output_29"."Proba_6" > 0.0) THEN ln("DT_Output_29"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_29"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_29"."Proba_7" IS NULL OR "DT_Output_29"."Proba_7" > 0.0) THEN ln("DT_Output_29"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_29"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_29"."Proba_8" IS NULL OR "DT_Output_29"."Proba_8" > 0.0) THEN ln("DT_Output_29"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_29"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_29"."Proba_9" IS NULL OR "DT_Output_29"."Proba_9" > 0.0) THEN ln("DT_Output_29"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10) AS "Proba_1", (9.0 * (CASE WHEN ("DT_Output_29"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_29"."Proba_2" IS NULL OR "DT_Output_29"."Proba_2" > 0.0) THEN ln("DT_Output_29"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_29"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_29"."Proba_0" IS NULL OR "DT_Output_29"."Proba_0" > 0.0) THEN ln("DT_Output_29"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_29"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_29"."Proba_1" IS NULL OR "DT_Output_29"."Proba_1" > 0.0) THEN ln("DT_Output_29"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_29"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_29"."Proba_2" IS NULL OR "DT_Output_29"."Proba_2" > 0.0) THEN ln("DT_Output_29"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_29"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_29"."Proba_3" IS NULL OR "DT_Output_29"."Proba_3" > 0.0) THEN ln("DT_Output_29"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_29"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_29"."Proba_4" IS NULL OR "DT_Output_29"."Proba_4" > 0.0) THEN ln("DT_Output_29"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_29"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_29"."Proba_5" IS NULL OR "DT_Output_29"."Proba_5" > 0.0) THEN ln("DT_Output_29"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_29"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_29"."Proba_6" IS NULL OR "DT_Output_29"."Proba_6" > 0.0) THEN ln("DT_Output_29"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_29"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_29"."Proba_7" IS NULL OR "DT_Output_29"."Proba_7" > 0.0) THEN ln("DT_Output_29"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_29"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_29"."Proba_8" IS NULL OR "DT_Output_29"."Proba_8" > 0.0) THEN ln("DT_Output_29"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_29"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_29"."Proba_9" IS NULL OR "DT_Output_29"."Proba_9" > 0.0) THEN ln("DT_Output_29"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10)) / 32.0 AS "Score_2", 9.0 * (CASE WHEN ("DT_Output_29"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_29"."Proba_2" IS NULL OR "DT_Output_29"."Proba_2" > 0.0) THEN ln("DT_Output_29"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_29"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_29"."Proba_0" IS NULL OR "DT_Output_29"."Proba_0" > 0.0) THEN ln("DT_Output_29"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_29"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_29"."Proba_1" IS NULL OR "DT_Output_29"."Proba_1" > 0.0) THEN ln("DT_Output_29"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_29"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_29"."Proba_2" IS NULL OR "DT_Output_29"."Proba_2" > 0.0) THEN ln("DT_Output_29"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_29"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_29"."Proba_3" IS NULL OR "DT_Output_29"."Proba_3" > 0.0) THEN ln("DT_Output_29"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_29"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_29"."Proba_4" IS NULL OR "DT_Output_29"."Proba_4" > 0.0) THEN ln("DT_Output_29"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_29"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_29"."Proba_5" IS NULL OR "DT_Output_29"."Proba_5" > 0.0) THEN ln("DT_Output_29"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_29"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_29"."Proba_6" IS NULL OR "DT_Output_29"."Proba_6" > 0.0) THEN ln("DT_Output_29"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_29"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_29"."Proba_7" IS NULL OR "DT_Output_29"."Proba_7" > 0.0) THEN ln("DT_Output_29"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_29"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_29"."Proba_8" IS NULL OR "DT_Output_29"."Proba_8" > 0.0) THEN ln("DT_Output_29"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_29"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_29"."Proba_9" IS NULL OR "DT_Output_29"."Proba_9" > 0.0) THEN ln("DT_Output_29"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10) AS "Proba_2", (9.0 * (CASE WHEN ("DT_Output_29"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_29"."Proba_3" IS NULL OR "DT_Output_29"."Proba_3" > 0.0) THEN ln("DT_Output_29"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_29"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_29"."Proba_0" IS NULL OR "DT_Output_29"."Proba_0" > 0.0) THEN ln("DT_Output_29"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_29"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_29"."Proba_1" IS NULL OR "DT_Output_29"."Proba_1" > 0.0) THEN ln("DT_Output_29"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_29"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_29"."Proba_2" IS NULL OR "DT_Output_29"."Proba_2" > 0.0) THEN ln("DT_Output_29"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_29"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_29"."Proba_3" IS NULL OR "DT_Output_29"."Proba_3" > 0.0) THEN ln("DT_Output_29"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_29"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_29"."Proba_4" IS NULL OR "DT_Output_29"."Proba_4" > 0.0) THEN ln("DT_Output_29"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_29"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_29"."Proba_5" IS NULL OR "DT_Output_29"."Proba_5" > 0.0) THEN ln("DT_Output_29"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_29"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_29"."Proba_6" IS NULL OR "DT_Output_29"."Proba_6" > 0.0) THEN ln("DT_Output_29"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_29"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_29"."Proba_7" IS NULL OR "DT_Output_29"."Proba_7" > 0.0) THEN ln("DT_Output_29"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_29"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_29"."Proba_8" IS NULL OR "DT_Output_29"."Proba_8" > 0.0) THEN ln("DT_Output_29"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_29"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_29"."Proba_9" IS NULL OR "DT_Output_29"."Proba_9" > 0.0) THEN ln("DT_Output_29"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10)) / 32.0 AS "Score_3", 9.0 * (CASE WHEN ("DT_Output_29"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_29"."Proba_3" IS NULL OR "DT_Output_29"."Proba_3" > 0.0) THEN ln("DT_Output_29"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_29"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_29"."Proba_0" IS NULL OR "DT_Output_29"."Proba_0" > 0.0) THEN ln("DT_Output_29"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_29"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_29"."Proba_1" IS NULL OR "DT_Output_29"."Proba_1" > 0.0) THEN ln("DT_Output_29"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_29"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_29"."Proba_2" IS NULL OR "DT_Output_29"."Proba_2" > 0.0) THEN ln("DT_Output_29"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_29"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_29"."Proba_3" IS NULL OR "DT_Output_29"."Proba_3" > 0.0) THEN ln("DT_Output_29"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_29"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_29"."Proba_4" IS NULL OR "DT_Output_29"."Proba_4" > 0.0) THEN ln("DT_Output_29"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_29"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_29"."Proba_5" IS NULL OR "DT_Output_29"."Proba_5" > 0.0) THEN ln("DT_Output_29"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_29"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_29"."Proba_6" IS NULL OR "DT_Output_29"."Proba_6" > 0.0) THEN ln("DT_Output_29"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_29"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_29"."Proba_7" IS NULL OR "DT_Output_29"."Proba_7" > 0.0) THEN ln("DT_Output_29"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_29"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_29"."Proba_8" IS NULL OR "DT_Output_29"."Proba_8" > 0.0) THEN ln("DT_Output_29"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_29"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_29"."Proba_9" IS NULL OR "DT_Output_29"."Proba_9" > 0.0) THEN ln("DT_Output_29"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10) AS "Proba_3", (9.0 * (CASE WHEN ("DT_Output_29"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_29"."Proba_4" IS NULL OR "DT_Output_29"."Proba_4" > 0.0) THEN ln("DT_Output_29"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_29"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_29"."Proba_0" IS NULL OR "DT_Output_29"."Proba_0" > 0.0) THEN ln("DT_Output_29"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_29"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_29"."Proba_1" IS NULL OR "DT_Output_29"."Proba_1" > 0.0) THEN ln("DT_Output_29"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_29"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_29"."Proba_2" IS NULL OR "DT_Output_29"."Proba_2" > 0.0) THEN ln("DT_Output_29"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_29"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_29"."Proba_3" IS NULL OR "DT_Output_29"."Proba_3" > 0.0) THEN ln("DT_Output_29"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_29"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_29"."Proba_4" IS NULL OR "DT_Output_29"."Proba_4" > 0.0) THEN ln("DT_Output_29"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_29"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_29"."Proba_5" IS NULL OR "DT_Output_29"."Proba_5" > 0.0) THEN ln("DT_Output_29"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_29"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_29"."Proba_6" IS NULL OR "DT_Output_29"."Proba_6" > 0.0) THEN ln("DT_Output_29"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_29"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_29"."Proba_7" IS NULL OR "DT_Output_29"."Proba_7" > 0.0) THEN ln("DT_Output_29"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_29"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_29"."Proba_8" IS NULL OR "DT_Output_29"."Proba_8" > 0.0) THEN ln("DT_Output_29"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_29"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_29"."Proba_9" IS NULL OR "DT_Output_29"."Proba_9" > 0.0) THEN ln("DT_Output_29"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10)) / 32.0 AS "Score_4", 9.0 * (CASE WHEN ("DT_Output_29"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_29"."Proba_4" IS NULL OR "DT_Output_29"."Proba_4" > 0.0) THEN ln("DT_Output_29"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_29"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_29"."Proba_0" IS NULL OR "DT_Output_29"."Proba_0" > 0.0) THEN ln("DT_Output_29"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_29"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_29"."Proba_1" IS NULL OR "DT_Output_29"."Proba_1" > 0.0) THEN ln("DT_Output_29"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_29"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_29"."Proba_2" IS NULL OR "DT_Output_29"."Proba_2" > 0.0) THEN ln("DT_Output_29"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_29"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_29"."Proba_3" IS NULL OR "DT_Output_29"."Proba_3" > 0.0) THEN ln("DT_Output_29"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_29"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_29"."Proba_4" IS NULL OR "DT_Output_29"."Proba_4" > 0.0) THEN ln("DT_Output_29"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_29"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_29"."Proba_5" IS NULL OR "DT_Output_29"."Proba_5" > 0.0) THEN ln("DT_Output_29"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_29"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_29"."Proba_6" IS NULL OR "DT_Output_29"."Proba_6" > 0.0) THEN ln("DT_Output_29"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_29"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_29"."Proba_7" IS NULL OR "DT_Output_29"."Proba_7" > 0.0) THEN ln("DT_Output_29"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_29"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_29"."Proba_8" IS NULL OR "DT_Output_29"."Proba_8" > 0.0) THEN ln("DT_Output_29"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_29"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_29"."Proba_9" IS NULL OR "DT_Output_29"."Proba_9" > 0.0) THEN ln("DT_Output_29"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10) AS "Proba_4", (9.0 * (CASE WHEN ("DT_Output_29"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_29"."Proba_5" IS NULL OR "DT_Output_29"."Proba_5" > 0.0) THEN ln("DT_Output_29"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_29"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_29"."Proba_0" IS NULL OR "DT_Output_29"."Proba_0" > 0.0) THEN ln("DT_Output_29"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_29"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_29"."Proba_1" IS NULL OR "DT_Output_29"."Proba_1" > 0.0) THEN ln("DT_Output_29"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_29"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_29"."Proba_2" IS NULL OR "DT_Output_29"."Proba_2" > 0.0) THEN ln("DT_Output_29"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_29"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_29"."Proba_3" IS NULL OR "DT_Output_29"."Proba_3" > 0.0) THEN ln("DT_Output_29"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_29"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_29"."Proba_4" IS NULL OR "DT_Output_29"."Proba_4" > 0.0) THEN ln("DT_Output_29"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_29"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_29"."Proba_5" IS NULL OR "DT_Output_29"."Proba_5" > 0.0) THEN ln("DT_Output_29"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_29"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_29"."Proba_6" IS NULL OR "DT_Output_29"."Proba_6" > 0.0) THEN ln("DT_Output_29"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_29"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_29"."Proba_7" IS NULL OR "DT_Output_29"."Proba_7" > 0.0) THEN ln("DT_Output_29"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_29"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_29"."Proba_8" IS NULL OR "DT_Output_29"."Proba_8" > 0.0) THEN ln("DT_Output_29"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_29"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_29"."Proba_9" IS NULL OR "DT_Output_29"."Proba_9" > 0.0) THEN ln("DT_Output_29"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10)) / 32.0 AS "Score_5", 9.0 * (CASE WHEN ("DT_Output_29"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_29"."Proba_5" IS NULL OR "DT_Output_29"."Proba_5" > 0.0) THEN ln("DT_Output_29"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_29"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_29"."Proba_0" IS NULL OR "DT_Output_29"."Proba_0" > 0.0) THEN ln("DT_Output_29"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_29"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_29"."Proba_1" IS NULL OR "DT_Output_29"."Proba_1" > 0.0) THEN ln("DT_Output_29"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_29"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_29"."Proba_2" IS NULL OR "DT_Output_29"."Proba_2" > 0.0) THEN ln("DT_Output_29"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_29"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_29"."Proba_3" IS NULL OR "DT_Output_29"."Proba_3" > 0.0) THEN ln("DT_Output_29"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_29"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_29"."Proba_4" IS NULL OR "DT_Output_29"."Proba_4" > 0.0) THEN ln("DT_Output_29"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_29"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_29"."Proba_5" IS NULL OR "DT_Output_29"."Proba_5" > 0.0) THEN ln("DT_Output_29"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_29"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_29"."Proba_6" IS NULL OR "DT_Output_29"."Proba_6" > 0.0) THEN ln("DT_Output_29"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_29"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_29"."Proba_7" IS NULL OR "DT_Output_29"."Proba_7" > 0.0) THEN ln("DT_Output_29"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_29"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_29"."Proba_8" IS NULL OR "DT_Output_29"."Proba_8" > 0.0) THEN ln("DT_Output_29"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_29"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_29"."Proba_9" IS NULL OR "DT_Output_29"."Proba_9" > 0.0) THEN ln("DT_Output_29"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10) AS "Proba_5", (9.0 * (CASE WHEN ("DT_Output_29"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_29"."Proba_6" IS NULL OR "DT_Output_29"."Proba_6" > 0.0) THEN ln("DT_Output_29"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_29"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_29"."Proba_0" IS NULL OR "DT_Output_29"."Proba_0" > 0.0) THEN ln("DT_Output_29"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_29"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_29"."Proba_1" IS NULL OR "DT_Output_29"."Proba_1" > 0.0) THEN ln("DT_Output_29"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_29"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_29"."Proba_2" IS NULL OR "DT_Output_29"."Proba_2" > 0.0) THEN ln("DT_Output_29"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_29"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_29"."Proba_3" IS NULL OR "DT_Output_29"."Proba_3" > 0.0) THEN ln("DT_Output_29"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_29"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_29"."Proba_4" IS NULL OR "DT_Output_29"."Proba_4" > 0.0) THEN ln("DT_Output_29"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_29"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_29"."Proba_5" IS NULL OR "DT_Output_29"."Proba_5" > 0.0) THEN ln("DT_Output_29"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_29"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_29"."Proba_6" IS NULL OR "DT_Output_29"."Proba_6" > 0.0) THEN ln("DT_Output_29"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_29"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_29"."Proba_7" IS NULL OR "DT_Output_29"."Proba_7" > 0.0) THEN ln("DT_Output_29"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_29"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_29"."Proba_8" IS NULL OR "DT_Output_29"."Proba_8" > 0.0) THEN ln("DT_Output_29"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_29"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_29"."Proba_9" IS NULL OR "DT_Output_29"."Proba_9" > 0.0) THEN ln("DT_Output_29"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10)) / 32.0 AS "Score_6", 9.0 * (CASE WHEN ("DT_Output_29"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_29"."Proba_6" IS NULL OR "DT_Output_29"."Proba_6" > 0.0) THEN ln("DT_Output_29"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_29"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_29"."Proba_0" IS NULL OR "DT_Output_29"."Proba_0" > 0.0) THEN ln("DT_Output_29"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_29"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_29"."Proba_1" IS NULL OR "DT_Output_29"."Proba_1" > 0.0) THEN ln("DT_Output_29"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_29"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_29"."Proba_2" IS NULL OR "DT_Output_29"."Proba_2" > 0.0) THEN ln("DT_Output_29"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_29"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_29"."Proba_3" IS NULL OR "DT_Output_29"."Proba_3" > 0.0) THEN ln("DT_Output_29"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_29"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_29"."Proba_4" IS NULL OR "DT_Output_29"."Proba_4" > 0.0) THEN ln("DT_Output_29"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_29"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_29"."Proba_5" IS NULL OR "DT_Output_29"."Proba_5" > 0.0) THEN ln("DT_Output_29"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_29"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_29"."Proba_6" IS NULL OR "DT_Output_29"."Proba_6" > 0.0) THEN ln("DT_Output_29"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_29"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_29"."Proba_7" IS NULL OR "DT_Output_29"."Proba_7" > 0.0) THEN ln("DT_Output_29"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_29"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_29"."Proba_8" IS NULL OR "DT_Output_29"."Proba_8" > 0.0) THEN ln("DT_Output_29"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_29"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_29"."Proba_9" IS NULL OR "DT_Output_29"."Proba_9" > 0.0) THEN ln("DT_Output_29"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10) AS "Proba_6", (9.0 * (CASE WHEN ("DT_Output_29"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_29"."Proba_7" IS NULL OR "DT_Output_29"."Proba_7" > 0.0) THEN ln("DT_Output_29"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_29"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_29"."Proba_0" IS NULL OR "DT_Output_29"."Proba_0" > 0.0) THEN ln("DT_Output_29"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_29"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_29"."Proba_1" IS NULL OR "DT_Output_29"."Proba_1" > 0.0) THEN ln("DT_Output_29"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_29"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_29"."Proba_2" IS NULL OR "DT_Output_29"."Proba_2" > 0.0) THEN ln("DT_Output_29"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_29"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_29"."Proba_3" IS NULL OR "DT_Output_29"."Proba_3" > 0.0) THEN ln("DT_Output_29"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_29"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_29"."Proba_4" IS NULL OR "DT_Output_29"."Proba_4" > 0.0) THEN ln("DT_Output_29"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_29"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_29"."Proba_5" IS NULL OR "DT_Output_29"."Proba_5" > 0.0) THEN ln("DT_Output_29"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_29"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_29"."Proba_6" IS NULL OR "DT_Output_29"."Proba_6" > 0.0) THEN ln("DT_Output_29"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_29"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_29"."Proba_7" IS NULL OR "DT_Output_29"."Proba_7" > 0.0) THEN ln("DT_Output_29"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_29"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_29"."Proba_8" IS NULL OR "DT_Output_29"."Proba_8" > 0.0) THEN ln("DT_Output_29"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_29"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_29"."Proba_9" IS NULL OR "DT_Output_29"."Proba_9" > 0.0) THEN ln("DT_Output_29"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10)) / 32.0 AS "Score_7", 9.0 * (CASE WHEN ("DT_Output_29"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_29"."Proba_7" IS NULL OR "DT_Output_29"."Proba_7" > 0.0) THEN ln("DT_Output_29"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_29"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_29"."Proba_0" IS NULL OR "DT_Output_29"."Proba_0" > 0.0) THEN ln("DT_Output_29"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_29"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_29"."Proba_1" IS NULL OR "DT_Output_29"."Proba_1" > 0.0) THEN ln("DT_Output_29"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_29"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_29"."Proba_2" IS NULL OR "DT_Output_29"."Proba_2" > 0.0) THEN ln("DT_Output_29"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_29"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_29"."Proba_3" IS NULL OR "DT_Output_29"."Proba_3" > 0.0) THEN ln("DT_Output_29"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_29"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_29"."Proba_4" IS NULL OR "DT_Output_29"."Proba_4" > 0.0) THEN ln("DT_Output_29"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_29"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_29"."Proba_5" IS NULL OR "DT_Output_29"."Proba_5" > 0.0) THEN ln("DT_Output_29"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_29"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_29"."Proba_6" IS NULL OR "DT_Output_29"."Proba_6" > 0.0) THEN ln("DT_Output_29"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_29"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_29"."Proba_7" IS NULL OR "DT_Output_29"."Proba_7" > 0.0) THEN ln("DT_Output_29"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_29"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_29"."Proba_8" IS NULL OR "DT_Output_29"."Proba_8" > 0.0) THEN ln("DT_Output_29"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_29"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_29"."Proba_9" IS NULL OR "DT_Output_29"."Proba_9" > 0.0) THEN ln("DT_Output_29"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10) AS "Proba_7", (9.0 * (CASE WHEN ("DT_Output_29"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_29"."Proba_8" IS NULL OR "DT_Output_29"."Proba_8" > 0.0) THEN ln("DT_Output_29"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_29"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_29"."Proba_0" IS NULL OR "DT_Output_29"."Proba_0" > 0.0) THEN ln("DT_Output_29"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_29"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_29"."Proba_1" IS NULL OR "DT_Output_29"."Proba_1" > 0.0) THEN ln("DT_Output_29"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_29"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_29"."Proba_2" IS NULL OR "DT_Output_29"."Proba_2" > 0.0) THEN ln("DT_Output_29"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_29"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_29"."Proba_3" IS NULL OR "DT_Output_29"."Proba_3" > 0.0) THEN ln("DT_Output_29"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_29"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_29"."Proba_4" IS NULL OR "DT_Output_29"."Proba_4" > 0.0) THEN ln("DT_Output_29"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_29"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_29"."Proba_5" IS NULL OR "DT_Output_29"."Proba_5" > 0.0) THEN ln("DT_Output_29"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_29"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_29"."Proba_6" IS NULL OR "DT_Output_29"."Proba_6" > 0.0) THEN ln("DT_Output_29"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_29"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_29"."Proba_7" IS NULL OR "DT_Output_29"."Proba_7" > 0.0) THEN ln("DT_Output_29"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_29"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_29"."Proba_8" IS NULL OR "DT_Output_29"."Proba_8" > 0.0) THEN ln("DT_Output_29"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_29"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_29"."Proba_9" IS NULL OR "DT_Output_29"."Proba_9" > 0.0) THEN ln("DT_Output_29"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10)) / 32.0 AS "Score_8", 9.0 * (CASE WHEN ("DT_Output_29"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_29"."Proba_8" IS NULL OR "DT_Output_29"."Proba_8" > 0.0) THEN ln("DT_Output_29"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_29"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_29"."Proba_0" IS NULL OR "DT_Output_29"."Proba_0" > 0.0) THEN ln("DT_Output_29"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_29"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_29"."Proba_1" IS NULL OR "DT_Output_29"."Proba_1" > 0.0) THEN ln("DT_Output_29"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_29"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_29"."Proba_2" IS NULL OR "DT_Output_29"."Proba_2" > 0.0) THEN ln("DT_Output_29"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_29"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_29"."Proba_3" IS NULL OR "DT_Output_29"."Proba_3" > 0.0) THEN ln("DT_Output_29"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_29"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_29"."Proba_4" IS NULL OR "DT_Output_29"."Proba_4" > 0.0) THEN ln("DT_Output_29"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_29"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_29"."Proba_5" IS NULL OR "DT_Output_29"."Proba_5" > 0.0) THEN ln("DT_Output_29"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_29"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_29"."Proba_6" IS NULL OR "DT_Output_29"."Proba_6" > 0.0) THEN ln("DT_Output_29"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_29"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_29"."Proba_7" IS NULL OR "DT_Output_29"."Proba_7" > 0.0) THEN ln("DT_Output_29"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_29"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_29"."Proba_8" IS NULL OR "DT_Output_29"."Proba_8" > 0.0) THEN ln("DT_Output_29"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_29"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_29"."Proba_9" IS NULL OR "DT_Output_29"."Proba_9" > 0.0) THEN ln("DT_Output_29"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10) AS "Proba_8", (9.0 * (CASE WHEN ("DT_Output_29"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_29"."Proba_9" IS NULL OR "DT_Output_29"."Proba_9" > 0.0) THEN ln("DT_Output_29"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_29"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_29"."Proba_0" IS NULL OR "DT_Output_29"."Proba_0" > 0.0) THEN ln("DT_Output_29"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_29"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_29"."Proba_1" IS NULL OR "DT_Output_29"."Proba_1" > 0.0) THEN ln("DT_Output_29"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_29"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_29"."Proba_2" IS NULL OR "DT_Output_29"."Proba_2" > 0.0) THEN ln("DT_Output_29"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_29"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_29"."Proba_3" IS NULL OR "DT_Output_29"."Proba_3" > 0.0) THEN ln("DT_Output_29"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_29"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_29"."Proba_4" IS NULL OR "DT_Output_29"."Proba_4" > 0.0) THEN ln("DT_Output_29"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_29"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_29"."Proba_5" IS NULL OR "DT_Output_29"."Proba_5" > 0.0) THEN ln("DT_Output_29"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_29"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_29"."Proba_6" IS NULL OR "DT_Output_29"."Proba_6" > 0.0) THEN ln("DT_Output_29"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_29"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_29"."Proba_7" IS NULL OR "DT_Output_29"."Proba_7" > 0.0) THEN ln("DT_Output_29"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_29"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_29"."Proba_8" IS NULL OR "DT_Output_29"."Proba_8" > 0.0) THEN ln("DT_Output_29"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_29"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_29"."Proba_9" IS NULL OR "DT_Output_29"."Proba_9" > 0.0) THEN ln("DT_Output_29"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10)) / 32.0 AS "Score_9", 9.0 * (CASE WHEN ("DT_Output_29"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_29"."Proba_9" IS NULL OR "DT_Output_29"."Proba_9" > 0.0) THEN ln("DT_Output_29"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_29"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_29"."Proba_0" IS NULL OR "DT_Output_29"."Proba_0" > 0.0) THEN ln("DT_Output_29"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_29"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_29"."Proba_1" IS NULL OR "DT_Output_29"."Proba_1" > 0.0) THEN ln("DT_Output_29"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_29"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_29"."Proba_2" IS NULL OR "DT_Output_29"."Proba_2" > 0.0) THEN ln("DT_Output_29"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_29"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_29"."Proba_3" IS NULL OR "DT_Output_29"."Proba_3" > 0.0) THEN ln("DT_Output_29"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_29"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_29"."Proba_4" IS NULL OR "DT_Output_29"."Proba_4" > 0.0) THEN ln("DT_Output_29"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_29"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_29"."Proba_5" IS NULL OR "DT_Output_29"."Proba_5" > 0.0) THEN ln("DT_Output_29"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_29"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_29"."Proba_6" IS NULL OR "DT_Output_29"."Proba_6" > 0.0) THEN ln("DT_Output_29"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_29"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_29"."Proba_7" IS NULL OR "DT_Output_29"."Proba_7" > 0.0) THEN ln("DT_Output_29"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_29"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_29"."Proba_8" IS NULL OR "DT_Output_29"."Proba_8" > 0.0) THEN ln("DT_Output_29"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_29"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_29"."Proba_9" IS NULL OR "DT_Output_29"."Proba_9" > 0.0) THEN ln("DT_Output_29"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10) AS "Proba_9" 
FROM "DT_Output_29"), 
"DT_node_lookup_30" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_30 <= -1.555469036102295) THEN 1 ELSE 2 END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_30" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Proba_0" AS "Proba_0", "Values"."LogProba_0" AS "LogProba_0", "Values"."Proba_1" AS "Proba_1", "Values"."LogProba_1" AS "LogProba_1", "Values"."Proba_2" AS "Proba_2", "Values"."LogProba_2" AS "LogProba_2", "Values"."Proba_3" AS "Proba_3", "Values"."LogProba_3" AS "LogProba_3", "Values"."Proba_4" AS "Proba_4", "Values"."LogProba_4" AS "LogProba_4", "Values"."Proba_5" AS "Proba_5", "Values"."LogProba_5" AS "LogProba_5", "Values"."Proba_6" AS "Proba_6", "Values"."LogProba_6" AS "LogProba_6", "Values"."Proba_7" AS "Proba_7", "Values"."LogProba_7" AS "LogProba_7", "Values"."Proba_8" AS "Proba_8", "Values"."LogProba_8" AS "LogProba_8", "Values"."Proba_9" AS "Proba_9", "Values"."LogProba_9" AS "LogProba_9", "Values"."Decision" AS "Decision", "Values"."DecisionProba" AS "DecisionProba" 
FROM (SELECT 1 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 246 AS count, 1 AS depth, 0 AS parent_id, 0.99603596687215 AS "Proba_0", -0.00397191073212 AS "LogProba_0", 0.0004955041410940445 AS "Proba_1", -7.60993484682 AS "LogProba_1", 0.0004955041396479859 AS "Proba_2", -7.60993484974 AS "LogProba_2", 0.000495504141368804 AS "Proba_3", -7.60993484627 AS "LogProba_3", 0.0004955041405423857 AS "Proba_4", -7.60993484794 AS "LogProba_4", 0.0004955041413664927 AS "Proba_5", -7.60993484627 AS "LogProba_5", 0.0004955041413673747 AS "Proba_6", -7.60993484627 AS "LogProba_6", 0.000495504141094043 AS "Proba_7", -7.60993484682 AS "LogProba_7", 0.0 AS "Proba_8", -BINARY_FLOAT_INFINITY AS "LogProba_8", 0.0004955041413688054 AS "Proba_9", -7.60993484627 AS "LogProba_9", 0 AS "Decision", 0.996035966872 AS "DecisionProba" FROM DUAL UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1191 AS count, 1 AS depth, 0 AS parent_id, 5.840457079441406e-11 AS "Proba_0", -23.5636269621 AS "LogProba_0", 0.11110496666122716 AS "Proba_1", -2.19727987891 AS "LogProba_1", 0.11110496671979272 AS "Proba_2", -2.19727987839 AS "LogProba_2", 0.11110496671960067 AS "Proba_3", -2.19727987839 AS "LogProba_3", 0.11110496671969282 AS "Proba_4", -2.19727987839 AS "LogProba_4", 0.11110496671960061 AS "Proba_5", -2.19727987839 AS "LogProba_5", 0.11110496671960057 AS "Proba_6", -2.19727987839 AS "LogProba_6", 0.11110496666122636 AS "Proba_7", -2.19727987891 AS "LogProba_7", 0.11116026630125364 AS "Proba_8", -2.19678227845 AS "LogProba_8", 0.11110496671960084 AS "Proba_9", -2.19727987839 AS "LogProba_9", 8 AS "Decision", 0.111160266301 AS "DecisionProba" FROM DUAL) "Values"), 
"DT_Output_30" AS 
(SELECT "DT_node_lookup_30"."KEY" AS "KEY", "DT_node_lookup_30".node_id_2 AS node_id_2, "DT_node_data_30".node_id AS node_id, "DT_node_data_30".feature AS feature, "DT_node_data_30".threshold AS threshold, "DT_node_data_30".count AS count, "DT_node_data_30".depth AS depth, "DT_node_data_30".parent_id AS parent_id, "DT_node_data_30"."Proba_0" AS "Proba_0", "DT_node_data_30"."LogProba_0" AS "LogProba_0", "DT_node_data_30"."Proba_1" AS "Proba_1", "DT_node_data_30"."LogProba_1" AS "LogProba_1", "DT_node_data_30"."Proba_2" AS "Proba_2", "DT_node_data_30"."LogProba_2" AS "LogProba_2", "DT_node_data_30"."Proba_3" AS "Proba_3", "DT_node_data_30"."LogProba_3" AS "LogProba_3", "DT_node_data_30"."Proba_4" AS "Proba_4", "DT_node_data_30"."LogProba_4" AS "LogProba_4", "DT_node_data_30"."Proba_5" AS "Proba_5", "DT_node_data_30"."LogProba_5" AS "LogProba_5", "DT_node_data_30"."Proba_6" AS "Proba_6", "DT_node_data_30"."LogProba_6" AS "LogProba_6", "DT_node_data_30"."Proba_7" AS "Proba_7", "DT_node_data_30"."LogProba_7" AS "LogProba_7", "DT_node_data_30"."Proba_8" AS "Proba_8", "DT_node_data_30"."LogProba_8" AS "LogProba_8", "DT_node_data_30"."Proba_9" AS "Proba_9", "DT_node_data_30"."LogProba_9" AS "LogProba_9", "DT_node_data_30"."Decision" AS "Decision", "DT_node_data_30"."DecisionProba" AS "DecisionProba" 
FROM "DT_node_lookup_30" LEFT OUTER JOIN "DT_node_data_30" ON "DT_node_lookup_30".node_id_2 = "DT_node_data_30".node_id), 
"AdaBoost_Estim_30" AS 
(SELECT "DT_Output_30"."KEY" AS "KEY", (9.0 * (CASE WHEN ("DT_Output_30"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_30"."Proba_0" IS NULL OR "DT_Output_30"."Proba_0" > 0.0) THEN ln("DT_Output_30"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_30"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_30"."Proba_0" IS NULL OR "DT_Output_30"."Proba_0" > 0.0) THEN ln("DT_Output_30"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_30"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_30"."Proba_1" IS NULL OR "DT_Output_30"."Proba_1" > 0.0) THEN ln("DT_Output_30"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_30"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_30"."Proba_2" IS NULL OR "DT_Output_30"."Proba_2" > 0.0) THEN ln("DT_Output_30"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_30"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_30"."Proba_3" IS NULL OR "DT_Output_30"."Proba_3" > 0.0) THEN ln("DT_Output_30"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_30"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_30"."Proba_4" IS NULL OR "DT_Output_30"."Proba_4" > 0.0) THEN ln("DT_Output_30"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_30"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_30"."Proba_5" IS NULL OR "DT_Output_30"."Proba_5" > 0.0) THEN ln("DT_Output_30"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_30"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_30"."Proba_6" IS NULL OR "DT_Output_30"."Proba_6" > 0.0) THEN ln("DT_Output_30"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_30"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_30"."Proba_7" IS NULL OR "DT_Output_30"."Proba_7" > 0.0) THEN ln("DT_Output_30"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_30"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_30"."Proba_8" IS NULL OR "DT_Output_30"."Proba_8" > 0.0) THEN ln("DT_Output_30"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_30"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_30"."Proba_9" IS NULL OR "DT_Output_30"."Proba_9" > 0.0) THEN ln("DT_Output_30"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10)) / 32.0 AS "Score_0", 9.0 * (CASE WHEN ("DT_Output_30"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_30"."Proba_0" IS NULL OR "DT_Output_30"."Proba_0" > 0.0) THEN ln("DT_Output_30"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_30"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_30"."Proba_0" IS NULL OR "DT_Output_30"."Proba_0" > 0.0) THEN ln("DT_Output_30"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_30"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_30"."Proba_1" IS NULL OR "DT_Output_30"."Proba_1" > 0.0) THEN ln("DT_Output_30"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_30"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_30"."Proba_2" IS NULL OR "DT_Output_30"."Proba_2" > 0.0) THEN ln("DT_Output_30"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_30"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_30"."Proba_3" IS NULL OR "DT_Output_30"."Proba_3" > 0.0) THEN ln("DT_Output_30"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_30"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_30"."Proba_4" IS NULL OR "DT_Output_30"."Proba_4" > 0.0) THEN ln("DT_Output_30"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_30"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_30"."Proba_5" IS NULL OR "DT_Output_30"."Proba_5" > 0.0) THEN ln("DT_Output_30"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_30"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_30"."Proba_6" IS NULL OR "DT_Output_30"."Proba_6" > 0.0) THEN ln("DT_Output_30"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_30"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_30"."Proba_7" IS NULL OR "DT_Output_30"."Proba_7" > 0.0) THEN ln("DT_Output_30"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_30"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_30"."Proba_8" IS NULL OR "DT_Output_30"."Proba_8" > 0.0) THEN ln("DT_Output_30"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_30"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_30"."Proba_9" IS NULL OR "DT_Output_30"."Proba_9" > 0.0) THEN ln("DT_Output_30"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10) AS "Proba_0", (9.0 * (CASE WHEN ("DT_Output_30"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_30"."Proba_1" IS NULL OR "DT_Output_30"."Proba_1" > 0.0) THEN ln("DT_Output_30"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_30"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_30"."Proba_0" IS NULL OR "DT_Output_30"."Proba_0" > 0.0) THEN ln("DT_Output_30"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_30"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_30"."Proba_1" IS NULL OR "DT_Output_30"."Proba_1" > 0.0) THEN ln("DT_Output_30"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_30"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_30"."Proba_2" IS NULL OR "DT_Output_30"."Proba_2" > 0.0) THEN ln("DT_Output_30"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_30"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_30"."Proba_3" IS NULL OR "DT_Output_30"."Proba_3" > 0.0) THEN ln("DT_Output_30"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_30"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_30"."Proba_4" IS NULL OR "DT_Output_30"."Proba_4" > 0.0) THEN ln("DT_Output_30"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_30"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_30"."Proba_5" IS NULL OR "DT_Output_30"."Proba_5" > 0.0) THEN ln("DT_Output_30"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_30"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_30"."Proba_6" IS NULL OR "DT_Output_30"."Proba_6" > 0.0) THEN ln("DT_Output_30"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_30"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_30"."Proba_7" IS NULL OR "DT_Output_30"."Proba_7" > 0.0) THEN ln("DT_Output_30"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_30"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_30"."Proba_8" IS NULL OR "DT_Output_30"."Proba_8" > 0.0) THEN ln("DT_Output_30"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_30"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_30"."Proba_9" IS NULL OR "DT_Output_30"."Proba_9" > 0.0) THEN ln("DT_Output_30"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10)) / 32.0 AS "Score_1", 9.0 * (CASE WHEN ("DT_Output_30"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_30"."Proba_1" IS NULL OR "DT_Output_30"."Proba_1" > 0.0) THEN ln("DT_Output_30"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_30"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_30"."Proba_0" IS NULL OR "DT_Output_30"."Proba_0" > 0.0) THEN ln("DT_Output_30"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_30"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_30"."Proba_1" IS NULL OR "DT_Output_30"."Proba_1" > 0.0) THEN ln("DT_Output_30"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_30"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_30"."Proba_2" IS NULL OR "DT_Output_30"."Proba_2" > 0.0) THEN ln("DT_Output_30"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_30"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_30"."Proba_3" IS NULL OR "DT_Output_30"."Proba_3" > 0.0) THEN ln("DT_Output_30"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_30"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_30"."Proba_4" IS NULL OR "DT_Output_30"."Proba_4" > 0.0) THEN ln("DT_Output_30"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_30"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_30"."Proba_5" IS NULL OR "DT_Output_30"."Proba_5" > 0.0) THEN ln("DT_Output_30"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_30"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_30"."Proba_6" IS NULL OR "DT_Output_30"."Proba_6" > 0.0) THEN ln("DT_Output_30"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_30"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_30"."Proba_7" IS NULL OR "DT_Output_30"."Proba_7" > 0.0) THEN ln("DT_Output_30"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_30"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_30"."Proba_8" IS NULL OR "DT_Output_30"."Proba_8" > 0.0) THEN ln("DT_Output_30"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_30"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_30"."Proba_9" IS NULL OR "DT_Output_30"."Proba_9" > 0.0) THEN ln("DT_Output_30"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10) AS "Proba_1", (9.0 * (CASE WHEN ("DT_Output_30"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_30"."Proba_2" IS NULL OR "DT_Output_30"."Proba_2" > 0.0) THEN ln("DT_Output_30"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_30"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_30"."Proba_0" IS NULL OR "DT_Output_30"."Proba_0" > 0.0) THEN ln("DT_Output_30"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_30"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_30"."Proba_1" IS NULL OR "DT_Output_30"."Proba_1" > 0.0) THEN ln("DT_Output_30"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_30"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_30"."Proba_2" IS NULL OR "DT_Output_30"."Proba_2" > 0.0) THEN ln("DT_Output_30"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_30"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_30"."Proba_3" IS NULL OR "DT_Output_30"."Proba_3" > 0.0) THEN ln("DT_Output_30"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_30"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_30"."Proba_4" IS NULL OR "DT_Output_30"."Proba_4" > 0.0) THEN ln("DT_Output_30"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_30"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_30"."Proba_5" IS NULL OR "DT_Output_30"."Proba_5" > 0.0) THEN ln("DT_Output_30"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_30"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_30"."Proba_6" IS NULL OR "DT_Output_30"."Proba_6" > 0.0) THEN ln("DT_Output_30"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_30"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_30"."Proba_7" IS NULL OR "DT_Output_30"."Proba_7" > 0.0) THEN ln("DT_Output_30"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_30"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_30"."Proba_8" IS NULL OR "DT_Output_30"."Proba_8" > 0.0) THEN ln("DT_Output_30"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_30"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_30"."Proba_9" IS NULL OR "DT_Output_30"."Proba_9" > 0.0) THEN ln("DT_Output_30"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10)) / 32.0 AS "Score_2", 9.0 * (CASE WHEN ("DT_Output_30"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_30"."Proba_2" IS NULL OR "DT_Output_30"."Proba_2" > 0.0) THEN ln("DT_Output_30"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_30"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_30"."Proba_0" IS NULL OR "DT_Output_30"."Proba_0" > 0.0) THEN ln("DT_Output_30"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_30"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_30"."Proba_1" IS NULL OR "DT_Output_30"."Proba_1" > 0.0) THEN ln("DT_Output_30"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_30"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_30"."Proba_2" IS NULL OR "DT_Output_30"."Proba_2" > 0.0) THEN ln("DT_Output_30"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_30"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_30"."Proba_3" IS NULL OR "DT_Output_30"."Proba_3" > 0.0) THEN ln("DT_Output_30"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_30"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_30"."Proba_4" IS NULL OR "DT_Output_30"."Proba_4" > 0.0) THEN ln("DT_Output_30"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_30"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_30"."Proba_5" IS NULL OR "DT_Output_30"."Proba_5" > 0.0) THEN ln("DT_Output_30"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_30"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_30"."Proba_6" IS NULL OR "DT_Output_30"."Proba_6" > 0.0) THEN ln("DT_Output_30"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_30"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_30"."Proba_7" IS NULL OR "DT_Output_30"."Proba_7" > 0.0) THEN ln("DT_Output_30"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_30"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_30"."Proba_8" IS NULL OR "DT_Output_30"."Proba_8" > 0.0) THEN ln("DT_Output_30"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_30"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_30"."Proba_9" IS NULL OR "DT_Output_30"."Proba_9" > 0.0) THEN ln("DT_Output_30"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10) AS "Proba_2", (9.0 * (CASE WHEN ("DT_Output_30"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_30"."Proba_3" IS NULL OR "DT_Output_30"."Proba_3" > 0.0) THEN ln("DT_Output_30"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_30"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_30"."Proba_0" IS NULL OR "DT_Output_30"."Proba_0" > 0.0) THEN ln("DT_Output_30"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_30"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_30"."Proba_1" IS NULL OR "DT_Output_30"."Proba_1" > 0.0) THEN ln("DT_Output_30"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_30"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_30"."Proba_2" IS NULL OR "DT_Output_30"."Proba_2" > 0.0) THEN ln("DT_Output_30"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_30"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_30"."Proba_3" IS NULL OR "DT_Output_30"."Proba_3" > 0.0) THEN ln("DT_Output_30"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_30"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_30"."Proba_4" IS NULL OR "DT_Output_30"."Proba_4" > 0.0) THEN ln("DT_Output_30"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_30"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_30"."Proba_5" IS NULL OR "DT_Output_30"."Proba_5" > 0.0) THEN ln("DT_Output_30"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_30"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_30"."Proba_6" IS NULL OR "DT_Output_30"."Proba_6" > 0.0) THEN ln("DT_Output_30"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_30"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_30"."Proba_7" IS NULL OR "DT_Output_30"."Proba_7" > 0.0) THEN ln("DT_Output_30"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_30"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_30"."Proba_8" IS NULL OR "DT_Output_30"."Proba_8" > 0.0) THEN ln("DT_Output_30"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_30"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_30"."Proba_9" IS NULL OR "DT_Output_30"."Proba_9" > 0.0) THEN ln("DT_Output_30"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10)) / 32.0 AS "Score_3", 9.0 * (CASE WHEN ("DT_Output_30"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_30"."Proba_3" IS NULL OR "DT_Output_30"."Proba_3" > 0.0) THEN ln("DT_Output_30"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_30"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_30"."Proba_0" IS NULL OR "DT_Output_30"."Proba_0" > 0.0) THEN ln("DT_Output_30"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_30"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_30"."Proba_1" IS NULL OR "DT_Output_30"."Proba_1" > 0.0) THEN ln("DT_Output_30"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_30"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_30"."Proba_2" IS NULL OR "DT_Output_30"."Proba_2" > 0.0) THEN ln("DT_Output_30"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_30"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_30"."Proba_3" IS NULL OR "DT_Output_30"."Proba_3" > 0.0) THEN ln("DT_Output_30"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_30"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_30"."Proba_4" IS NULL OR "DT_Output_30"."Proba_4" > 0.0) THEN ln("DT_Output_30"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_30"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_30"."Proba_5" IS NULL OR "DT_Output_30"."Proba_5" > 0.0) THEN ln("DT_Output_30"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_30"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_30"."Proba_6" IS NULL OR "DT_Output_30"."Proba_6" > 0.0) THEN ln("DT_Output_30"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_30"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_30"."Proba_7" IS NULL OR "DT_Output_30"."Proba_7" > 0.0) THEN ln("DT_Output_30"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_30"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_30"."Proba_8" IS NULL OR "DT_Output_30"."Proba_8" > 0.0) THEN ln("DT_Output_30"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_30"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_30"."Proba_9" IS NULL OR "DT_Output_30"."Proba_9" > 0.0) THEN ln("DT_Output_30"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10) AS "Proba_3", (9.0 * (CASE WHEN ("DT_Output_30"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_30"."Proba_4" IS NULL OR "DT_Output_30"."Proba_4" > 0.0) THEN ln("DT_Output_30"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_30"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_30"."Proba_0" IS NULL OR "DT_Output_30"."Proba_0" > 0.0) THEN ln("DT_Output_30"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_30"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_30"."Proba_1" IS NULL OR "DT_Output_30"."Proba_1" > 0.0) THEN ln("DT_Output_30"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_30"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_30"."Proba_2" IS NULL OR "DT_Output_30"."Proba_2" > 0.0) THEN ln("DT_Output_30"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_30"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_30"."Proba_3" IS NULL OR "DT_Output_30"."Proba_3" > 0.0) THEN ln("DT_Output_30"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_30"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_30"."Proba_4" IS NULL OR "DT_Output_30"."Proba_4" > 0.0) THEN ln("DT_Output_30"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_30"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_30"."Proba_5" IS NULL OR "DT_Output_30"."Proba_5" > 0.0) THEN ln("DT_Output_30"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_30"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_30"."Proba_6" IS NULL OR "DT_Output_30"."Proba_6" > 0.0) THEN ln("DT_Output_30"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_30"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_30"."Proba_7" IS NULL OR "DT_Output_30"."Proba_7" > 0.0) THEN ln("DT_Output_30"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_30"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_30"."Proba_8" IS NULL OR "DT_Output_30"."Proba_8" > 0.0) THEN ln("DT_Output_30"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_30"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_30"."Proba_9" IS NULL OR "DT_Output_30"."Proba_9" > 0.0) THEN ln("DT_Output_30"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10)) / 32.0 AS "Score_4", 9.0 * (CASE WHEN ("DT_Output_30"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_30"."Proba_4" IS NULL OR "DT_Output_30"."Proba_4" > 0.0) THEN ln("DT_Output_30"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_30"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_30"."Proba_0" IS NULL OR "DT_Output_30"."Proba_0" > 0.0) THEN ln("DT_Output_30"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_30"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_30"."Proba_1" IS NULL OR "DT_Output_30"."Proba_1" > 0.0) THEN ln("DT_Output_30"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_30"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_30"."Proba_2" IS NULL OR "DT_Output_30"."Proba_2" > 0.0) THEN ln("DT_Output_30"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_30"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_30"."Proba_3" IS NULL OR "DT_Output_30"."Proba_3" > 0.0) THEN ln("DT_Output_30"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_30"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_30"."Proba_4" IS NULL OR "DT_Output_30"."Proba_4" > 0.0) THEN ln("DT_Output_30"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_30"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_30"."Proba_5" IS NULL OR "DT_Output_30"."Proba_5" > 0.0) THEN ln("DT_Output_30"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_30"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_30"."Proba_6" IS NULL OR "DT_Output_30"."Proba_6" > 0.0) THEN ln("DT_Output_30"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_30"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_30"."Proba_7" IS NULL OR "DT_Output_30"."Proba_7" > 0.0) THEN ln("DT_Output_30"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_30"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_30"."Proba_8" IS NULL OR "DT_Output_30"."Proba_8" > 0.0) THEN ln("DT_Output_30"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_30"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_30"."Proba_9" IS NULL OR "DT_Output_30"."Proba_9" > 0.0) THEN ln("DT_Output_30"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10) AS "Proba_4", (9.0 * (CASE WHEN ("DT_Output_30"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_30"."Proba_5" IS NULL OR "DT_Output_30"."Proba_5" > 0.0) THEN ln("DT_Output_30"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_30"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_30"."Proba_0" IS NULL OR "DT_Output_30"."Proba_0" > 0.0) THEN ln("DT_Output_30"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_30"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_30"."Proba_1" IS NULL OR "DT_Output_30"."Proba_1" > 0.0) THEN ln("DT_Output_30"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_30"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_30"."Proba_2" IS NULL OR "DT_Output_30"."Proba_2" > 0.0) THEN ln("DT_Output_30"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_30"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_30"."Proba_3" IS NULL OR "DT_Output_30"."Proba_3" > 0.0) THEN ln("DT_Output_30"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_30"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_30"."Proba_4" IS NULL OR "DT_Output_30"."Proba_4" > 0.0) THEN ln("DT_Output_30"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_30"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_30"."Proba_5" IS NULL OR "DT_Output_30"."Proba_5" > 0.0) THEN ln("DT_Output_30"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_30"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_30"."Proba_6" IS NULL OR "DT_Output_30"."Proba_6" > 0.0) THEN ln("DT_Output_30"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_30"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_30"."Proba_7" IS NULL OR "DT_Output_30"."Proba_7" > 0.0) THEN ln("DT_Output_30"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_30"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_30"."Proba_8" IS NULL OR "DT_Output_30"."Proba_8" > 0.0) THEN ln("DT_Output_30"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_30"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_30"."Proba_9" IS NULL OR "DT_Output_30"."Proba_9" > 0.0) THEN ln("DT_Output_30"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10)) / 32.0 AS "Score_5", 9.0 * (CASE WHEN ("DT_Output_30"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_30"."Proba_5" IS NULL OR "DT_Output_30"."Proba_5" > 0.0) THEN ln("DT_Output_30"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_30"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_30"."Proba_0" IS NULL OR "DT_Output_30"."Proba_0" > 0.0) THEN ln("DT_Output_30"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_30"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_30"."Proba_1" IS NULL OR "DT_Output_30"."Proba_1" > 0.0) THEN ln("DT_Output_30"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_30"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_30"."Proba_2" IS NULL OR "DT_Output_30"."Proba_2" > 0.0) THEN ln("DT_Output_30"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_30"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_30"."Proba_3" IS NULL OR "DT_Output_30"."Proba_3" > 0.0) THEN ln("DT_Output_30"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_30"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_30"."Proba_4" IS NULL OR "DT_Output_30"."Proba_4" > 0.0) THEN ln("DT_Output_30"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_30"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_30"."Proba_5" IS NULL OR "DT_Output_30"."Proba_5" > 0.0) THEN ln("DT_Output_30"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_30"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_30"."Proba_6" IS NULL OR "DT_Output_30"."Proba_6" > 0.0) THEN ln("DT_Output_30"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_30"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_30"."Proba_7" IS NULL OR "DT_Output_30"."Proba_7" > 0.0) THEN ln("DT_Output_30"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_30"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_30"."Proba_8" IS NULL OR "DT_Output_30"."Proba_8" > 0.0) THEN ln("DT_Output_30"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_30"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_30"."Proba_9" IS NULL OR "DT_Output_30"."Proba_9" > 0.0) THEN ln("DT_Output_30"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10) AS "Proba_5", (9.0 * (CASE WHEN ("DT_Output_30"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_30"."Proba_6" IS NULL OR "DT_Output_30"."Proba_6" > 0.0) THEN ln("DT_Output_30"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_30"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_30"."Proba_0" IS NULL OR "DT_Output_30"."Proba_0" > 0.0) THEN ln("DT_Output_30"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_30"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_30"."Proba_1" IS NULL OR "DT_Output_30"."Proba_1" > 0.0) THEN ln("DT_Output_30"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_30"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_30"."Proba_2" IS NULL OR "DT_Output_30"."Proba_2" > 0.0) THEN ln("DT_Output_30"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_30"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_30"."Proba_3" IS NULL OR "DT_Output_30"."Proba_3" > 0.0) THEN ln("DT_Output_30"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_30"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_30"."Proba_4" IS NULL OR "DT_Output_30"."Proba_4" > 0.0) THEN ln("DT_Output_30"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_30"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_30"."Proba_5" IS NULL OR "DT_Output_30"."Proba_5" > 0.0) THEN ln("DT_Output_30"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_30"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_30"."Proba_6" IS NULL OR "DT_Output_30"."Proba_6" > 0.0) THEN ln("DT_Output_30"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_30"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_30"."Proba_7" IS NULL OR "DT_Output_30"."Proba_7" > 0.0) THEN ln("DT_Output_30"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_30"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_30"."Proba_8" IS NULL OR "DT_Output_30"."Proba_8" > 0.0) THEN ln("DT_Output_30"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_30"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_30"."Proba_9" IS NULL OR "DT_Output_30"."Proba_9" > 0.0) THEN ln("DT_Output_30"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10)) / 32.0 AS "Score_6", 9.0 * (CASE WHEN ("DT_Output_30"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_30"."Proba_6" IS NULL OR "DT_Output_30"."Proba_6" > 0.0) THEN ln("DT_Output_30"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_30"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_30"."Proba_0" IS NULL OR "DT_Output_30"."Proba_0" > 0.0) THEN ln("DT_Output_30"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_30"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_30"."Proba_1" IS NULL OR "DT_Output_30"."Proba_1" > 0.0) THEN ln("DT_Output_30"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_30"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_30"."Proba_2" IS NULL OR "DT_Output_30"."Proba_2" > 0.0) THEN ln("DT_Output_30"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_30"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_30"."Proba_3" IS NULL OR "DT_Output_30"."Proba_3" > 0.0) THEN ln("DT_Output_30"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_30"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_30"."Proba_4" IS NULL OR "DT_Output_30"."Proba_4" > 0.0) THEN ln("DT_Output_30"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_30"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_30"."Proba_5" IS NULL OR "DT_Output_30"."Proba_5" > 0.0) THEN ln("DT_Output_30"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_30"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_30"."Proba_6" IS NULL OR "DT_Output_30"."Proba_6" > 0.0) THEN ln("DT_Output_30"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_30"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_30"."Proba_7" IS NULL OR "DT_Output_30"."Proba_7" > 0.0) THEN ln("DT_Output_30"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_30"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_30"."Proba_8" IS NULL OR "DT_Output_30"."Proba_8" > 0.0) THEN ln("DT_Output_30"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_30"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_30"."Proba_9" IS NULL OR "DT_Output_30"."Proba_9" > 0.0) THEN ln("DT_Output_30"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10) AS "Proba_6", (9.0 * (CASE WHEN ("DT_Output_30"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_30"."Proba_7" IS NULL OR "DT_Output_30"."Proba_7" > 0.0) THEN ln("DT_Output_30"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_30"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_30"."Proba_0" IS NULL OR "DT_Output_30"."Proba_0" > 0.0) THEN ln("DT_Output_30"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_30"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_30"."Proba_1" IS NULL OR "DT_Output_30"."Proba_1" > 0.0) THEN ln("DT_Output_30"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_30"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_30"."Proba_2" IS NULL OR "DT_Output_30"."Proba_2" > 0.0) THEN ln("DT_Output_30"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_30"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_30"."Proba_3" IS NULL OR "DT_Output_30"."Proba_3" > 0.0) THEN ln("DT_Output_30"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_30"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_30"."Proba_4" IS NULL OR "DT_Output_30"."Proba_4" > 0.0) THEN ln("DT_Output_30"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_30"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_30"."Proba_5" IS NULL OR "DT_Output_30"."Proba_5" > 0.0) THEN ln("DT_Output_30"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_30"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_30"."Proba_6" IS NULL OR "DT_Output_30"."Proba_6" > 0.0) THEN ln("DT_Output_30"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_30"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_30"."Proba_7" IS NULL OR "DT_Output_30"."Proba_7" > 0.0) THEN ln("DT_Output_30"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_30"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_30"."Proba_8" IS NULL OR "DT_Output_30"."Proba_8" > 0.0) THEN ln("DT_Output_30"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_30"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_30"."Proba_9" IS NULL OR "DT_Output_30"."Proba_9" > 0.0) THEN ln("DT_Output_30"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10)) / 32.0 AS "Score_7", 9.0 * (CASE WHEN ("DT_Output_30"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_30"."Proba_7" IS NULL OR "DT_Output_30"."Proba_7" > 0.0) THEN ln("DT_Output_30"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_30"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_30"."Proba_0" IS NULL OR "DT_Output_30"."Proba_0" > 0.0) THEN ln("DT_Output_30"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_30"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_30"."Proba_1" IS NULL OR "DT_Output_30"."Proba_1" > 0.0) THEN ln("DT_Output_30"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_30"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_30"."Proba_2" IS NULL OR "DT_Output_30"."Proba_2" > 0.0) THEN ln("DT_Output_30"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_30"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_30"."Proba_3" IS NULL OR "DT_Output_30"."Proba_3" > 0.0) THEN ln("DT_Output_30"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_30"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_30"."Proba_4" IS NULL OR "DT_Output_30"."Proba_4" > 0.0) THEN ln("DT_Output_30"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_30"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_30"."Proba_5" IS NULL OR "DT_Output_30"."Proba_5" > 0.0) THEN ln("DT_Output_30"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_30"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_30"."Proba_6" IS NULL OR "DT_Output_30"."Proba_6" > 0.0) THEN ln("DT_Output_30"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_30"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_30"."Proba_7" IS NULL OR "DT_Output_30"."Proba_7" > 0.0) THEN ln("DT_Output_30"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_30"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_30"."Proba_8" IS NULL OR "DT_Output_30"."Proba_8" > 0.0) THEN ln("DT_Output_30"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_30"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_30"."Proba_9" IS NULL OR "DT_Output_30"."Proba_9" > 0.0) THEN ln("DT_Output_30"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10) AS "Proba_7", (9.0 * (CASE WHEN ("DT_Output_30"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_30"."Proba_8" IS NULL OR "DT_Output_30"."Proba_8" > 0.0) THEN ln("DT_Output_30"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_30"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_30"."Proba_0" IS NULL OR "DT_Output_30"."Proba_0" > 0.0) THEN ln("DT_Output_30"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_30"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_30"."Proba_1" IS NULL OR "DT_Output_30"."Proba_1" > 0.0) THEN ln("DT_Output_30"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_30"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_30"."Proba_2" IS NULL OR "DT_Output_30"."Proba_2" > 0.0) THEN ln("DT_Output_30"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_30"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_30"."Proba_3" IS NULL OR "DT_Output_30"."Proba_3" > 0.0) THEN ln("DT_Output_30"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_30"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_30"."Proba_4" IS NULL OR "DT_Output_30"."Proba_4" > 0.0) THEN ln("DT_Output_30"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_30"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_30"."Proba_5" IS NULL OR "DT_Output_30"."Proba_5" > 0.0) THEN ln("DT_Output_30"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_30"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_30"."Proba_6" IS NULL OR "DT_Output_30"."Proba_6" > 0.0) THEN ln("DT_Output_30"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_30"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_30"."Proba_7" IS NULL OR "DT_Output_30"."Proba_7" > 0.0) THEN ln("DT_Output_30"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_30"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_30"."Proba_8" IS NULL OR "DT_Output_30"."Proba_8" > 0.0) THEN ln("DT_Output_30"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_30"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_30"."Proba_9" IS NULL OR "DT_Output_30"."Proba_9" > 0.0) THEN ln("DT_Output_30"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10)) / 32.0 AS "Score_8", 9.0 * (CASE WHEN ("DT_Output_30"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_30"."Proba_8" IS NULL OR "DT_Output_30"."Proba_8" > 0.0) THEN ln("DT_Output_30"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_30"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_30"."Proba_0" IS NULL OR "DT_Output_30"."Proba_0" > 0.0) THEN ln("DT_Output_30"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_30"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_30"."Proba_1" IS NULL OR "DT_Output_30"."Proba_1" > 0.0) THEN ln("DT_Output_30"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_30"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_30"."Proba_2" IS NULL OR "DT_Output_30"."Proba_2" > 0.0) THEN ln("DT_Output_30"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_30"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_30"."Proba_3" IS NULL OR "DT_Output_30"."Proba_3" > 0.0) THEN ln("DT_Output_30"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_30"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_30"."Proba_4" IS NULL OR "DT_Output_30"."Proba_4" > 0.0) THEN ln("DT_Output_30"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_30"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_30"."Proba_5" IS NULL OR "DT_Output_30"."Proba_5" > 0.0) THEN ln("DT_Output_30"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_30"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_30"."Proba_6" IS NULL OR "DT_Output_30"."Proba_6" > 0.0) THEN ln("DT_Output_30"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_30"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_30"."Proba_7" IS NULL OR "DT_Output_30"."Proba_7" > 0.0) THEN ln("DT_Output_30"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_30"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_30"."Proba_8" IS NULL OR "DT_Output_30"."Proba_8" > 0.0) THEN ln("DT_Output_30"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_30"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_30"."Proba_9" IS NULL OR "DT_Output_30"."Proba_9" > 0.0) THEN ln("DT_Output_30"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10) AS "Proba_8", (9.0 * (CASE WHEN ("DT_Output_30"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_30"."Proba_9" IS NULL OR "DT_Output_30"."Proba_9" > 0.0) THEN ln("DT_Output_30"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_30"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_30"."Proba_0" IS NULL OR "DT_Output_30"."Proba_0" > 0.0) THEN ln("DT_Output_30"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_30"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_30"."Proba_1" IS NULL OR "DT_Output_30"."Proba_1" > 0.0) THEN ln("DT_Output_30"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_30"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_30"."Proba_2" IS NULL OR "DT_Output_30"."Proba_2" > 0.0) THEN ln("DT_Output_30"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_30"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_30"."Proba_3" IS NULL OR "DT_Output_30"."Proba_3" > 0.0) THEN ln("DT_Output_30"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_30"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_30"."Proba_4" IS NULL OR "DT_Output_30"."Proba_4" > 0.0) THEN ln("DT_Output_30"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_30"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_30"."Proba_5" IS NULL OR "DT_Output_30"."Proba_5" > 0.0) THEN ln("DT_Output_30"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_30"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_30"."Proba_6" IS NULL OR "DT_Output_30"."Proba_6" > 0.0) THEN ln("DT_Output_30"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_30"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_30"."Proba_7" IS NULL OR "DT_Output_30"."Proba_7" > 0.0) THEN ln("DT_Output_30"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_30"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_30"."Proba_8" IS NULL OR "DT_Output_30"."Proba_8" > 0.0) THEN ln("DT_Output_30"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_30"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_30"."Proba_9" IS NULL OR "DT_Output_30"."Proba_9" > 0.0) THEN ln("DT_Output_30"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10)) / 32.0 AS "Score_9", 9.0 * (CASE WHEN ("DT_Output_30"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_30"."Proba_9" IS NULL OR "DT_Output_30"."Proba_9" > 0.0) THEN ln("DT_Output_30"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_30"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_30"."Proba_0" IS NULL OR "DT_Output_30"."Proba_0" > 0.0) THEN ln("DT_Output_30"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_30"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_30"."Proba_1" IS NULL OR "DT_Output_30"."Proba_1" > 0.0) THEN ln("DT_Output_30"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_30"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_30"."Proba_2" IS NULL OR "DT_Output_30"."Proba_2" > 0.0) THEN ln("DT_Output_30"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_30"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_30"."Proba_3" IS NULL OR "DT_Output_30"."Proba_3" > 0.0) THEN ln("DT_Output_30"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_30"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_30"."Proba_4" IS NULL OR "DT_Output_30"."Proba_4" > 0.0) THEN ln("DT_Output_30"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_30"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_30"."Proba_5" IS NULL OR "DT_Output_30"."Proba_5" > 0.0) THEN ln("DT_Output_30"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_30"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_30"."Proba_6" IS NULL OR "DT_Output_30"."Proba_6" > 0.0) THEN ln("DT_Output_30"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_30"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_30"."Proba_7" IS NULL OR "DT_Output_30"."Proba_7" > 0.0) THEN ln("DT_Output_30"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_30"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_30"."Proba_8" IS NULL OR "DT_Output_30"."Proba_8" > 0.0) THEN ln("DT_Output_30"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_30"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_30"."Proba_9" IS NULL OR "DT_Output_30"."Proba_9" > 0.0) THEN ln("DT_Output_30"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10) AS "Proba_9" 
FROM "DT_Output_30"), 
"DT_node_lookup_31" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_38 <= -1.6508052349090576) THEN 1 ELSE 2 END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_31" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Proba_0" AS "Proba_0", "Values"."LogProba_0" AS "LogProba_0", "Values"."Proba_1" AS "Proba_1", "Values"."LogProba_1" AS "LogProba_1", "Values"."Proba_2" AS "Proba_2", "Values"."LogProba_2" AS "LogProba_2", "Values"."Proba_3" AS "Proba_3", "Values"."LogProba_3" AS "LogProba_3", "Values"."Proba_4" AS "Proba_4", "Values"."LogProba_4" AS "LogProba_4", "Values"."Proba_5" AS "Proba_5", "Values"."LogProba_5" AS "LogProba_5", "Values"."Proba_6" AS "Proba_6", "Values"."LogProba_6" AS "LogProba_6", "Values"."Proba_7" AS "Proba_7", "Values"."LogProba_7" AS "LogProba_7", "Values"."Proba_8" AS "Proba_8", "Values"."LogProba_8" AS "LogProba_8", "Values"."Proba_9" AS "Proba_9", "Values"."LogProba_9" AS "LogProba_9", "Values"."Decision" AS "Decision", "Values"."DecisionProba" AS "DecisionProba" 
FROM (SELECT 1 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 219 AS count, 1 AS depth, 0 AS parent_id, 0.9999999963181379 AS "Proba_0", -3.68186215527e-09 AS "LogProba_0", 0.0 AS "Proba_1", -BINARY_FLOAT_INFINITY AS "LogProba_1", 5.272945206744768e-10 AS "Proba_2", -21.3632618607 AS "LogProba_2", 5.256702045262695e-10 AS "Proba_3", -21.3663470874 AS "LogProba_3", 5.264742942199468e-10 AS "Proba_4", -21.3648186094 AS "LogProba_4", 5.2567252480426e-10 AS "Proba_5", -21.3663426735 AS "LogProba_5", 5.256716402651439e-10 AS "Proba_6", -21.3663443562 AS "LogProba_6", 0.0 AS "Proba_7", -BINARY_FLOAT_INFINITY AS "LogProba_7", 5.254086961351417e-10 AS "Proba_8", -21.3668446874 AS "LogProba_8", 5.256702045262677e-10 AS "Proba_9", -21.3663470874 AS "LogProba_9", 0 AS "Decision", 0.999999996318 AS "DecisionProba" FROM DUAL UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1218 AS count, 1 AS depth, 0 AS parent_id, 5.8329322764969255e-05 AS "Proba_0", -9.74940562767 AS "LogProba_0", 0.11111111115654217 AS "Proba_1", -2.19722457693 AS "LogProba_1", 0.11111111109798445 AS "Proba_2", -2.19722457745 AS "LogProba_2", 0.11111111109816521 AS "Proba_3", -2.19722457745 AS "LogProba_3", 0.11111111109807602 AS "Proba_4", -2.19722457745 AS "LogProba_4", 0.11111111109816492 AS "Proba_5", -2.19722457745 AS "LogProba_5", 0.1111111110981651 AS "Proba_6", -2.19722457745 AS "LogProba_6", 0.1111111111565429 AS "Proba_7", -2.19722457693 AS "LogProba_7", 0.11105278177542928 AS "Proba_8", -2.1977496792 AS "LogProba_8", 0.11111111109816499 AS "Proba_9", -2.19722457745 AS "LogProba_9", 7 AS "Decision", 0.111111111157 AS "DecisionProba" FROM DUAL) "Values"), 
"DT_Output_31" AS 
(SELECT "DT_node_lookup_31"."KEY" AS "KEY", "DT_node_lookup_31".node_id_2 AS node_id_2, "DT_node_data_31".node_id AS node_id, "DT_node_data_31".feature AS feature, "DT_node_data_31".threshold AS threshold, "DT_node_data_31".count AS count, "DT_node_data_31".depth AS depth, "DT_node_data_31".parent_id AS parent_id, "DT_node_data_31"."Proba_0" AS "Proba_0", "DT_node_data_31"."LogProba_0" AS "LogProba_0", "DT_node_data_31"."Proba_1" AS "Proba_1", "DT_node_data_31"."LogProba_1" AS "LogProba_1", "DT_node_data_31"."Proba_2" AS "Proba_2", "DT_node_data_31"."LogProba_2" AS "LogProba_2", "DT_node_data_31"."Proba_3" AS "Proba_3", "DT_node_data_31"."LogProba_3" AS "LogProba_3", "DT_node_data_31"."Proba_4" AS "Proba_4", "DT_node_data_31"."LogProba_4" AS "LogProba_4", "DT_node_data_31"."Proba_5" AS "Proba_5", "DT_node_data_31"."LogProba_5" AS "LogProba_5", "DT_node_data_31"."Proba_6" AS "Proba_6", "DT_node_data_31"."LogProba_6" AS "LogProba_6", "DT_node_data_31"."Proba_7" AS "Proba_7", "DT_node_data_31"."LogProba_7" AS "LogProba_7", "DT_node_data_31"."Proba_8" AS "Proba_8", "DT_node_data_31"."LogProba_8" AS "LogProba_8", "DT_node_data_31"."Proba_9" AS "Proba_9", "DT_node_data_31"."LogProba_9" AS "LogProba_9", "DT_node_data_31"."Decision" AS "Decision", "DT_node_data_31"."DecisionProba" AS "DecisionProba" 
FROM "DT_node_lookup_31" LEFT OUTER JOIN "DT_node_data_31" ON "DT_node_lookup_31".node_id_2 = "DT_node_data_31".node_id), 
"AdaBoost_Estim_31" AS 
(SELECT "DT_Output_31"."KEY" AS "KEY", (9.0 * (CASE WHEN ("DT_Output_31"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_31"."Proba_0" IS NULL OR "DT_Output_31"."Proba_0" > 0.0) THEN ln("DT_Output_31"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_31"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_31"."Proba_0" IS NULL OR "DT_Output_31"."Proba_0" > 0.0) THEN ln("DT_Output_31"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_31"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_31"."Proba_1" IS NULL OR "DT_Output_31"."Proba_1" > 0.0) THEN ln("DT_Output_31"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_31"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_31"."Proba_2" IS NULL OR "DT_Output_31"."Proba_2" > 0.0) THEN ln("DT_Output_31"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_31"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_31"."Proba_3" IS NULL OR "DT_Output_31"."Proba_3" > 0.0) THEN ln("DT_Output_31"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_31"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_31"."Proba_4" IS NULL OR "DT_Output_31"."Proba_4" > 0.0) THEN ln("DT_Output_31"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_31"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_31"."Proba_5" IS NULL OR "DT_Output_31"."Proba_5" > 0.0) THEN ln("DT_Output_31"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_31"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_31"."Proba_6" IS NULL OR "DT_Output_31"."Proba_6" > 0.0) THEN ln("DT_Output_31"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_31"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_31"."Proba_7" IS NULL OR "DT_Output_31"."Proba_7" > 0.0) THEN ln("DT_Output_31"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_31"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_31"."Proba_8" IS NULL OR "DT_Output_31"."Proba_8" > 0.0) THEN ln("DT_Output_31"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_31"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_31"."Proba_9" IS NULL OR "DT_Output_31"."Proba_9" > 0.0) THEN ln("DT_Output_31"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10)) / 32.0 AS "Score_0", 9.0 * (CASE WHEN ("DT_Output_31"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_31"."Proba_0" IS NULL OR "DT_Output_31"."Proba_0" > 0.0) THEN ln("DT_Output_31"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_31"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_31"."Proba_0" IS NULL OR "DT_Output_31"."Proba_0" > 0.0) THEN ln("DT_Output_31"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_31"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_31"."Proba_1" IS NULL OR "DT_Output_31"."Proba_1" > 0.0) THEN ln("DT_Output_31"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_31"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_31"."Proba_2" IS NULL OR "DT_Output_31"."Proba_2" > 0.0) THEN ln("DT_Output_31"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_31"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_31"."Proba_3" IS NULL OR "DT_Output_31"."Proba_3" > 0.0) THEN ln("DT_Output_31"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_31"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_31"."Proba_4" IS NULL OR "DT_Output_31"."Proba_4" > 0.0) THEN ln("DT_Output_31"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_31"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_31"."Proba_5" IS NULL OR "DT_Output_31"."Proba_5" > 0.0) THEN ln("DT_Output_31"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_31"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_31"."Proba_6" IS NULL OR "DT_Output_31"."Proba_6" > 0.0) THEN ln("DT_Output_31"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_31"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_31"."Proba_7" IS NULL OR "DT_Output_31"."Proba_7" > 0.0) THEN ln("DT_Output_31"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_31"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_31"."Proba_8" IS NULL OR "DT_Output_31"."Proba_8" > 0.0) THEN ln("DT_Output_31"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_31"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_31"."Proba_9" IS NULL OR "DT_Output_31"."Proba_9" > 0.0) THEN ln("DT_Output_31"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10) AS "Proba_0", (9.0 * (CASE WHEN ("DT_Output_31"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_31"."Proba_1" IS NULL OR "DT_Output_31"."Proba_1" > 0.0) THEN ln("DT_Output_31"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_31"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_31"."Proba_0" IS NULL OR "DT_Output_31"."Proba_0" > 0.0) THEN ln("DT_Output_31"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_31"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_31"."Proba_1" IS NULL OR "DT_Output_31"."Proba_1" > 0.0) THEN ln("DT_Output_31"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_31"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_31"."Proba_2" IS NULL OR "DT_Output_31"."Proba_2" > 0.0) THEN ln("DT_Output_31"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_31"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_31"."Proba_3" IS NULL OR "DT_Output_31"."Proba_3" > 0.0) THEN ln("DT_Output_31"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_31"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_31"."Proba_4" IS NULL OR "DT_Output_31"."Proba_4" > 0.0) THEN ln("DT_Output_31"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_31"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_31"."Proba_5" IS NULL OR "DT_Output_31"."Proba_5" > 0.0) THEN ln("DT_Output_31"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_31"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_31"."Proba_6" IS NULL OR "DT_Output_31"."Proba_6" > 0.0) THEN ln("DT_Output_31"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_31"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_31"."Proba_7" IS NULL OR "DT_Output_31"."Proba_7" > 0.0) THEN ln("DT_Output_31"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_31"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_31"."Proba_8" IS NULL OR "DT_Output_31"."Proba_8" > 0.0) THEN ln("DT_Output_31"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_31"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_31"."Proba_9" IS NULL OR "DT_Output_31"."Proba_9" > 0.0) THEN ln("DT_Output_31"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10)) / 32.0 AS "Score_1", 9.0 * (CASE WHEN ("DT_Output_31"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_31"."Proba_1" IS NULL OR "DT_Output_31"."Proba_1" > 0.0) THEN ln("DT_Output_31"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_31"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_31"."Proba_0" IS NULL OR "DT_Output_31"."Proba_0" > 0.0) THEN ln("DT_Output_31"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_31"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_31"."Proba_1" IS NULL OR "DT_Output_31"."Proba_1" > 0.0) THEN ln("DT_Output_31"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_31"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_31"."Proba_2" IS NULL OR "DT_Output_31"."Proba_2" > 0.0) THEN ln("DT_Output_31"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_31"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_31"."Proba_3" IS NULL OR "DT_Output_31"."Proba_3" > 0.0) THEN ln("DT_Output_31"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_31"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_31"."Proba_4" IS NULL OR "DT_Output_31"."Proba_4" > 0.0) THEN ln("DT_Output_31"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_31"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_31"."Proba_5" IS NULL OR "DT_Output_31"."Proba_5" > 0.0) THEN ln("DT_Output_31"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_31"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_31"."Proba_6" IS NULL OR "DT_Output_31"."Proba_6" > 0.0) THEN ln("DT_Output_31"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_31"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_31"."Proba_7" IS NULL OR "DT_Output_31"."Proba_7" > 0.0) THEN ln("DT_Output_31"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_31"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_31"."Proba_8" IS NULL OR "DT_Output_31"."Proba_8" > 0.0) THEN ln("DT_Output_31"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_31"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_31"."Proba_9" IS NULL OR "DT_Output_31"."Proba_9" > 0.0) THEN ln("DT_Output_31"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10) AS "Proba_1", (9.0 * (CASE WHEN ("DT_Output_31"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_31"."Proba_2" IS NULL OR "DT_Output_31"."Proba_2" > 0.0) THEN ln("DT_Output_31"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_31"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_31"."Proba_0" IS NULL OR "DT_Output_31"."Proba_0" > 0.0) THEN ln("DT_Output_31"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_31"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_31"."Proba_1" IS NULL OR "DT_Output_31"."Proba_1" > 0.0) THEN ln("DT_Output_31"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_31"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_31"."Proba_2" IS NULL OR "DT_Output_31"."Proba_2" > 0.0) THEN ln("DT_Output_31"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_31"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_31"."Proba_3" IS NULL OR "DT_Output_31"."Proba_3" > 0.0) THEN ln("DT_Output_31"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_31"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_31"."Proba_4" IS NULL OR "DT_Output_31"."Proba_4" > 0.0) THEN ln("DT_Output_31"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_31"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_31"."Proba_5" IS NULL OR "DT_Output_31"."Proba_5" > 0.0) THEN ln("DT_Output_31"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_31"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_31"."Proba_6" IS NULL OR "DT_Output_31"."Proba_6" > 0.0) THEN ln("DT_Output_31"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_31"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_31"."Proba_7" IS NULL OR "DT_Output_31"."Proba_7" > 0.0) THEN ln("DT_Output_31"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_31"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_31"."Proba_8" IS NULL OR "DT_Output_31"."Proba_8" > 0.0) THEN ln("DT_Output_31"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_31"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_31"."Proba_9" IS NULL OR "DT_Output_31"."Proba_9" > 0.0) THEN ln("DT_Output_31"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10)) / 32.0 AS "Score_2", 9.0 * (CASE WHEN ("DT_Output_31"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_31"."Proba_2" IS NULL OR "DT_Output_31"."Proba_2" > 0.0) THEN ln("DT_Output_31"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_31"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_31"."Proba_0" IS NULL OR "DT_Output_31"."Proba_0" > 0.0) THEN ln("DT_Output_31"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_31"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_31"."Proba_1" IS NULL OR "DT_Output_31"."Proba_1" > 0.0) THEN ln("DT_Output_31"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_31"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_31"."Proba_2" IS NULL OR "DT_Output_31"."Proba_2" > 0.0) THEN ln("DT_Output_31"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_31"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_31"."Proba_3" IS NULL OR "DT_Output_31"."Proba_3" > 0.0) THEN ln("DT_Output_31"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_31"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_31"."Proba_4" IS NULL OR "DT_Output_31"."Proba_4" > 0.0) THEN ln("DT_Output_31"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_31"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_31"."Proba_5" IS NULL OR "DT_Output_31"."Proba_5" > 0.0) THEN ln("DT_Output_31"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_31"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_31"."Proba_6" IS NULL OR "DT_Output_31"."Proba_6" > 0.0) THEN ln("DT_Output_31"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_31"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_31"."Proba_7" IS NULL OR "DT_Output_31"."Proba_7" > 0.0) THEN ln("DT_Output_31"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_31"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_31"."Proba_8" IS NULL OR "DT_Output_31"."Proba_8" > 0.0) THEN ln("DT_Output_31"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_31"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_31"."Proba_9" IS NULL OR "DT_Output_31"."Proba_9" > 0.0) THEN ln("DT_Output_31"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10) AS "Proba_2", (9.0 * (CASE WHEN ("DT_Output_31"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_31"."Proba_3" IS NULL OR "DT_Output_31"."Proba_3" > 0.0) THEN ln("DT_Output_31"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_31"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_31"."Proba_0" IS NULL OR "DT_Output_31"."Proba_0" > 0.0) THEN ln("DT_Output_31"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_31"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_31"."Proba_1" IS NULL OR "DT_Output_31"."Proba_1" > 0.0) THEN ln("DT_Output_31"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_31"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_31"."Proba_2" IS NULL OR "DT_Output_31"."Proba_2" > 0.0) THEN ln("DT_Output_31"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_31"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_31"."Proba_3" IS NULL OR "DT_Output_31"."Proba_3" > 0.0) THEN ln("DT_Output_31"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_31"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_31"."Proba_4" IS NULL OR "DT_Output_31"."Proba_4" > 0.0) THEN ln("DT_Output_31"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_31"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_31"."Proba_5" IS NULL OR "DT_Output_31"."Proba_5" > 0.0) THEN ln("DT_Output_31"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_31"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_31"."Proba_6" IS NULL OR "DT_Output_31"."Proba_6" > 0.0) THEN ln("DT_Output_31"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_31"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_31"."Proba_7" IS NULL OR "DT_Output_31"."Proba_7" > 0.0) THEN ln("DT_Output_31"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_31"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_31"."Proba_8" IS NULL OR "DT_Output_31"."Proba_8" > 0.0) THEN ln("DT_Output_31"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_31"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_31"."Proba_9" IS NULL OR "DT_Output_31"."Proba_9" > 0.0) THEN ln("DT_Output_31"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10)) / 32.0 AS "Score_3", 9.0 * (CASE WHEN ("DT_Output_31"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_31"."Proba_3" IS NULL OR "DT_Output_31"."Proba_3" > 0.0) THEN ln("DT_Output_31"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_31"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_31"."Proba_0" IS NULL OR "DT_Output_31"."Proba_0" > 0.0) THEN ln("DT_Output_31"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_31"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_31"."Proba_1" IS NULL OR "DT_Output_31"."Proba_1" > 0.0) THEN ln("DT_Output_31"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_31"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_31"."Proba_2" IS NULL OR "DT_Output_31"."Proba_2" > 0.0) THEN ln("DT_Output_31"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_31"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_31"."Proba_3" IS NULL OR "DT_Output_31"."Proba_3" > 0.0) THEN ln("DT_Output_31"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_31"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_31"."Proba_4" IS NULL OR "DT_Output_31"."Proba_4" > 0.0) THEN ln("DT_Output_31"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_31"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_31"."Proba_5" IS NULL OR "DT_Output_31"."Proba_5" > 0.0) THEN ln("DT_Output_31"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_31"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_31"."Proba_6" IS NULL OR "DT_Output_31"."Proba_6" > 0.0) THEN ln("DT_Output_31"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_31"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_31"."Proba_7" IS NULL OR "DT_Output_31"."Proba_7" > 0.0) THEN ln("DT_Output_31"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_31"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_31"."Proba_8" IS NULL OR "DT_Output_31"."Proba_8" > 0.0) THEN ln("DT_Output_31"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_31"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_31"."Proba_9" IS NULL OR "DT_Output_31"."Proba_9" > 0.0) THEN ln("DT_Output_31"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10) AS "Proba_3", (9.0 * (CASE WHEN ("DT_Output_31"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_31"."Proba_4" IS NULL OR "DT_Output_31"."Proba_4" > 0.0) THEN ln("DT_Output_31"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_31"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_31"."Proba_0" IS NULL OR "DT_Output_31"."Proba_0" > 0.0) THEN ln("DT_Output_31"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_31"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_31"."Proba_1" IS NULL OR "DT_Output_31"."Proba_1" > 0.0) THEN ln("DT_Output_31"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_31"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_31"."Proba_2" IS NULL OR "DT_Output_31"."Proba_2" > 0.0) THEN ln("DT_Output_31"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_31"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_31"."Proba_3" IS NULL OR "DT_Output_31"."Proba_3" > 0.0) THEN ln("DT_Output_31"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_31"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_31"."Proba_4" IS NULL OR "DT_Output_31"."Proba_4" > 0.0) THEN ln("DT_Output_31"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_31"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_31"."Proba_5" IS NULL OR "DT_Output_31"."Proba_5" > 0.0) THEN ln("DT_Output_31"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_31"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_31"."Proba_6" IS NULL OR "DT_Output_31"."Proba_6" > 0.0) THEN ln("DT_Output_31"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_31"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_31"."Proba_7" IS NULL OR "DT_Output_31"."Proba_7" > 0.0) THEN ln("DT_Output_31"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_31"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_31"."Proba_8" IS NULL OR "DT_Output_31"."Proba_8" > 0.0) THEN ln("DT_Output_31"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_31"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_31"."Proba_9" IS NULL OR "DT_Output_31"."Proba_9" > 0.0) THEN ln("DT_Output_31"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10)) / 32.0 AS "Score_4", 9.0 * (CASE WHEN ("DT_Output_31"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_31"."Proba_4" IS NULL OR "DT_Output_31"."Proba_4" > 0.0) THEN ln("DT_Output_31"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_31"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_31"."Proba_0" IS NULL OR "DT_Output_31"."Proba_0" > 0.0) THEN ln("DT_Output_31"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_31"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_31"."Proba_1" IS NULL OR "DT_Output_31"."Proba_1" > 0.0) THEN ln("DT_Output_31"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_31"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_31"."Proba_2" IS NULL OR "DT_Output_31"."Proba_2" > 0.0) THEN ln("DT_Output_31"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_31"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_31"."Proba_3" IS NULL OR "DT_Output_31"."Proba_3" > 0.0) THEN ln("DT_Output_31"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_31"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_31"."Proba_4" IS NULL OR "DT_Output_31"."Proba_4" > 0.0) THEN ln("DT_Output_31"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_31"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_31"."Proba_5" IS NULL OR "DT_Output_31"."Proba_5" > 0.0) THEN ln("DT_Output_31"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_31"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_31"."Proba_6" IS NULL OR "DT_Output_31"."Proba_6" > 0.0) THEN ln("DT_Output_31"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_31"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_31"."Proba_7" IS NULL OR "DT_Output_31"."Proba_7" > 0.0) THEN ln("DT_Output_31"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_31"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_31"."Proba_8" IS NULL OR "DT_Output_31"."Proba_8" > 0.0) THEN ln("DT_Output_31"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_31"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_31"."Proba_9" IS NULL OR "DT_Output_31"."Proba_9" > 0.0) THEN ln("DT_Output_31"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10) AS "Proba_4", (9.0 * (CASE WHEN ("DT_Output_31"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_31"."Proba_5" IS NULL OR "DT_Output_31"."Proba_5" > 0.0) THEN ln("DT_Output_31"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_31"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_31"."Proba_0" IS NULL OR "DT_Output_31"."Proba_0" > 0.0) THEN ln("DT_Output_31"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_31"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_31"."Proba_1" IS NULL OR "DT_Output_31"."Proba_1" > 0.0) THEN ln("DT_Output_31"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_31"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_31"."Proba_2" IS NULL OR "DT_Output_31"."Proba_2" > 0.0) THEN ln("DT_Output_31"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_31"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_31"."Proba_3" IS NULL OR "DT_Output_31"."Proba_3" > 0.0) THEN ln("DT_Output_31"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_31"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_31"."Proba_4" IS NULL OR "DT_Output_31"."Proba_4" > 0.0) THEN ln("DT_Output_31"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_31"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_31"."Proba_5" IS NULL OR "DT_Output_31"."Proba_5" > 0.0) THEN ln("DT_Output_31"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_31"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_31"."Proba_6" IS NULL OR "DT_Output_31"."Proba_6" > 0.0) THEN ln("DT_Output_31"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_31"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_31"."Proba_7" IS NULL OR "DT_Output_31"."Proba_7" > 0.0) THEN ln("DT_Output_31"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_31"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_31"."Proba_8" IS NULL OR "DT_Output_31"."Proba_8" > 0.0) THEN ln("DT_Output_31"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_31"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_31"."Proba_9" IS NULL OR "DT_Output_31"."Proba_9" > 0.0) THEN ln("DT_Output_31"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10)) / 32.0 AS "Score_5", 9.0 * (CASE WHEN ("DT_Output_31"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_31"."Proba_5" IS NULL OR "DT_Output_31"."Proba_5" > 0.0) THEN ln("DT_Output_31"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_31"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_31"."Proba_0" IS NULL OR "DT_Output_31"."Proba_0" > 0.0) THEN ln("DT_Output_31"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_31"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_31"."Proba_1" IS NULL OR "DT_Output_31"."Proba_1" > 0.0) THEN ln("DT_Output_31"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_31"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_31"."Proba_2" IS NULL OR "DT_Output_31"."Proba_2" > 0.0) THEN ln("DT_Output_31"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_31"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_31"."Proba_3" IS NULL OR "DT_Output_31"."Proba_3" > 0.0) THEN ln("DT_Output_31"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_31"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_31"."Proba_4" IS NULL OR "DT_Output_31"."Proba_4" > 0.0) THEN ln("DT_Output_31"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_31"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_31"."Proba_5" IS NULL OR "DT_Output_31"."Proba_5" > 0.0) THEN ln("DT_Output_31"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_31"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_31"."Proba_6" IS NULL OR "DT_Output_31"."Proba_6" > 0.0) THEN ln("DT_Output_31"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_31"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_31"."Proba_7" IS NULL OR "DT_Output_31"."Proba_7" > 0.0) THEN ln("DT_Output_31"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_31"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_31"."Proba_8" IS NULL OR "DT_Output_31"."Proba_8" > 0.0) THEN ln("DT_Output_31"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_31"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_31"."Proba_9" IS NULL OR "DT_Output_31"."Proba_9" > 0.0) THEN ln("DT_Output_31"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10) AS "Proba_5", (9.0 * (CASE WHEN ("DT_Output_31"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_31"."Proba_6" IS NULL OR "DT_Output_31"."Proba_6" > 0.0) THEN ln("DT_Output_31"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_31"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_31"."Proba_0" IS NULL OR "DT_Output_31"."Proba_0" > 0.0) THEN ln("DT_Output_31"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_31"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_31"."Proba_1" IS NULL OR "DT_Output_31"."Proba_1" > 0.0) THEN ln("DT_Output_31"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_31"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_31"."Proba_2" IS NULL OR "DT_Output_31"."Proba_2" > 0.0) THEN ln("DT_Output_31"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_31"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_31"."Proba_3" IS NULL OR "DT_Output_31"."Proba_3" > 0.0) THEN ln("DT_Output_31"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_31"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_31"."Proba_4" IS NULL OR "DT_Output_31"."Proba_4" > 0.0) THEN ln("DT_Output_31"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_31"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_31"."Proba_5" IS NULL OR "DT_Output_31"."Proba_5" > 0.0) THEN ln("DT_Output_31"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_31"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_31"."Proba_6" IS NULL OR "DT_Output_31"."Proba_6" > 0.0) THEN ln("DT_Output_31"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_31"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_31"."Proba_7" IS NULL OR "DT_Output_31"."Proba_7" > 0.0) THEN ln("DT_Output_31"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_31"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_31"."Proba_8" IS NULL OR "DT_Output_31"."Proba_8" > 0.0) THEN ln("DT_Output_31"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_31"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_31"."Proba_9" IS NULL OR "DT_Output_31"."Proba_9" > 0.0) THEN ln("DT_Output_31"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10)) / 32.0 AS "Score_6", 9.0 * (CASE WHEN ("DT_Output_31"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_31"."Proba_6" IS NULL OR "DT_Output_31"."Proba_6" > 0.0) THEN ln("DT_Output_31"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_31"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_31"."Proba_0" IS NULL OR "DT_Output_31"."Proba_0" > 0.0) THEN ln("DT_Output_31"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_31"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_31"."Proba_1" IS NULL OR "DT_Output_31"."Proba_1" > 0.0) THEN ln("DT_Output_31"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_31"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_31"."Proba_2" IS NULL OR "DT_Output_31"."Proba_2" > 0.0) THEN ln("DT_Output_31"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_31"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_31"."Proba_3" IS NULL OR "DT_Output_31"."Proba_3" > 0.0) THEN ln("DT_Output_31"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_31"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_31"."Proba_4" IS NULL OR "DT_Output_31"."Proba_4" > 0.0) THEN ln("DT_Output_31"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_31"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_31"."Proba_5" IS NULL OR "DT_Output_31"."Proba_5" > 0.0) THEN ln("DT_Output_31"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_31"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_31"."Proba_6" IS NULL OR "DT_Output_31"."Proba_6" > 0.0) THEN ln("DT_Output_31"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_31"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_31"."Proba_7" IS NULL OR "DT_Output_31"."Proba_7" > 0.0) THEN ln("DT_Output_31"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_31"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_31"."Proba_8" IS NULL OR "DT_Output_31"."Proba_8" > 0.0) THEN ln("DT_Output_31"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_31"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_31"."Proba_9" IS NULL OR "DT_Output_31"."Proba_9" > 0.0) THEN ln("DT_Output_31"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10) AS "Proba_6", (9.0 * (CASE WHEN ("DT_Output_31"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_31"."Proba_7" IS NULL OR "DT_Output_31"."Proba_7" > 0.0) THEN ln("DT_Output_31"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_31"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_31"."Proba_0" IS NULL OR "DT_Output_31"."Proba_0" > 0.0) THEN ln("DT_Output_31"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_31"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_31"."Proba_1" IS NULL OR "DT_Output_31"."Proba_1" > 0.0) THEN ln("DT_Output_31"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_31"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_31"."Proba_2" IS NULL OR "DT_Output_31"."Proba_2" > 0.0) THEN ln("DT_Output_31"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_31"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_31"."Proba_3" IS NULL OR "DT_Output_31"."Proba_3" > 0.0) THEN ln("DT_Output_31"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_31"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_31"."Proba_4" IS NULL OR "DT_Output_31"."Proba_4" > 0.0) THEN ln("DT_Output_31"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_31"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_31"."Proba_5" IS NULL OR "DT_Output_31"."Proba_5" > 0.0) THEN ln("DT_Output_31"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_31"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_31"."Proba_6" IS NULL OR "DT_Output_31"."Proba_6" > 0.0) THEN ln("DT_Output_31"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_31"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_31"."Proba_7" IS NULL OR "DT_Output_31"."Proba_7" > 0.0) THEN ln("DT_Output_31"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_31"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_31"."Proba_8" IS NULL OR "DT_Output_31"."Proba_8" > 0.0) THEN ln("DT_Output_31"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_31"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_31"."Proba_9" IS NULL OR "DT_Output_31"."Proba_9" > 0.0) THEN ln("DT_Output_31"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10)) / 32.0 AS "Score_7", 9.0 * (CASE WHEN ("DT_Output_31"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_31"."Proba_7" IS NULL OR "DT_Output_31"."Proba_7" > 0.0) THEN ln("DT_Output_31"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_31"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_31"."Proba_0" IS NULL OR "DT_Output_31"."Proba_0" > 0.0) THEN ln("DT_Output_31"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_31"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_31"."Proba_1" IS NULL OR "DT_Output_31"."Proba_1" > 0.0) THEN ln("DT_Output_31"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_31"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_31"."Proba_2" IS NULL OR "DT_Output_31"."Proba_2" > 0.0) THEN ln("DT_Output_31"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_31"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_31"."Proba_3" IS NULL OR "DT_Output_31"."Proba_3" > 0.0) THEN ln("DT_Output_31"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_31"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_31"."Proba_4" IS NULL OR "DT_Output_31"."Proba_4" > 0.0) THEN ln("DT_Output_31"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_31"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_31"."Proba_5" IS NULL OR "DT_Output_31"."Proba_5" > 0.0) THEN ln("DT_Output_31"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_31"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_31"."Proba_6" IS NULL OR "DT_Output_31"."Proba_6" > 0.0) THEN ln("DT_Output_31"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_31"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_31"."Proba_7" IS NULL OR "DT_Output_31"."Proba_7" > 0.0) THEN ln("DT_Output_31"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_31"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_31"."Proba_8" IS NULL OR "DT_Output_31"."Proba_8" > 0.0) THEN ln("DT_Output_31"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_31"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_31"."Proba_9" IS NULL OR "DT_Output_31"."Proba_9" > 0.0) THEN ln("DT_Output_31"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10) AS "Proba_7", (9.0 * (CASE WHEN ("DT_Output_31"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_31"."Proba_8" IS NULL OR "DT_Output_31"."Proba_8" > 0.0) THEN ln("DT_Output_31"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_31"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_31"."Proba_0" IS NULL OR "DT_Output_31"."Proba_0" > 0.0) THEN ln("DT_Output_31"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_31"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_31"."Proba_1" IS NULL OR "DT_Output_31"."Proba_1" > 0.0) THEN ln("DT_Output_31"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_31"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_31"."Proba_2" IS NULL OR "DT_Output_31"."Proba_2" > 0.0) THEN ln("DT_Output_31"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_31"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_31"."Proba_3" IS NULL OR "DT_Output_31"."Proba_3" > 0.0) THEN ln("DT_Output_31"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_31"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_31"."Proba_4" IS NULL OR "DT_Output_31"."Proba_4" > 0.0) THEN ln("DT_Output_31"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_31"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_31"."Proba_5" IS NULL OR "DT_Output_31"."Proba_5" > 0.0) THEN ln("DT_Output_31"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_31"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_31"."Proba_6" IS NULL OR "DT_Output_31"."Proba_6" > 0.0) THEN ln("DT_Output_31"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_31"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_31"."Proba_7" IS NULL OR "DT_Output_31"."Proba_7" > 0.0) THEN ln("DT_Output_31"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_31"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_31"."Proba_8" IS NULL OR "DT_Output_31"."Proba_8" > 0.0) THEN ln("DT_Output_31"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_31"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_31"."Proba_9" IS NULL OR "DT_Output_31"."Proba_9" > 0.0) THEN ln("DT_Output_31"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10)) / 32.0 AS "Score_8", 9.0 * (CASE WHEN ("DT_Output_31"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_31"."Proba_8" IS NULL OR "DT_Output_31"."Proba_8" > 0.0) THEN ln("DT_Output_31"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_31"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_31"."Proba_0" IS NULL OR "DT_Output_31"."Proba_0" > 0.0) THEN ln("DT_Output_31"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_31"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_31"."Proba_1" IS NULL OR "DT_Output_31"."Proba_1" > 0.0) THEN ln("DT_Output_31"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_31"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_31"."Proba_2" IS NULL OR "DT_Output_31"."Proba_2" > 0.0) THEN ln("DT_Output_31"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_31"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_31"."Proba_3" IS NULL OR "DT_Output_31"."Proba_3" > 0.0) THEN ln("DT_Output_31"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_31"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_31"."Proba_4" IS NULL OR "DT_Output_31"."Proba_4" > 0.0) THEN ln("DT_Output_31"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_31"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_31"."Proba_5" IS NULL OR "DT_Output_31"."Proba_5" > 0.0) THEN ln("DT_Output_31"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_31"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_31"."Proba_6" IS NULL OR "DT_Output_31"."Proba_6" > 0.0) THEN ln("DT_Output_31"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_31"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_31"."Proba_7" IS NULL OR "DT_Output_31"."Proba_7" > 0.0) THEN ln("DT_Output_31"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_31"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_31"."Proba_8" IS NULL OR "DT_Output_31"."Proba_8" > 0.0) THEN ln("DT_Output_31"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_31"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_31"."Proba_9" IS NULL OR "DT_Output_31"."Proba_9" > 0.0) THEN ln("DT_Output_31"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10) AS "Proba_8", (9.0 * (CASE WHEN ("DT_Output_31"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_31"."Proba_9" IS NULL OR "DT_Output_31"."Proba_9" > 0.0) THEN ln("DT_Output_31"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_31"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_31"."Proba_0" IS NULL OR "DT_Output_31"."Proba_0" > 0.0) THEN ln("DT_Output_31"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_31"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_31"."Proba_1" IS NULL OR "DT_Output_31"."Proba_1" > 0.0) THEN ln("DT_Output_31"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_31"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_31"."Proba_2" IS NULL OR "DT_Output_31"."Proba_2" > 0.0) THEN ln("DT_Output_31"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_31"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_31"."Proba_3" IS NULL OR "DT_Output_31"."Proba_3" > 0.0) THEN ln("DT_Output_31"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_31"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_31"."Proba_4" IS NULL OR "DT_Output_31"."Proba_4" > 0.0) THEN ln("DT_Output_31"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_31"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_31"."Proba_5" IS NULL OR "DT_Output_31"."Proba_5" > 0.0) THEN ln("DT_Output_31"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_31"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_31"."Proba_6" IS NULL OR "DT_Output_31"."Proba_6" > 0.0) THEN ln("DT_Output_31"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_31"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_31"."Proba_7" IS NULL OR "DT_Output_31"."Proba_7" > 0.0) THEN ln("DT_Output_31"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_31"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_31"."Proba_8" IS NULL OR "DT_Output_31"."Proba_8" > 0.0) THEN ln("DT_Output_31"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_31"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_31"."Proba_9" IS NULL OR "DT_Output_31"."Proba_9" > 0.0) THEN ln("DT_Output_31"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10)) / 32.0 AS "Score_9", 9.0 * (CASE WHEN ("DT_Output_31"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_31"."Proba_9" IS NULL OR "DT_Output_31"."Proba_9" > 0.0) THEN ln("DT_Output_31"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("DT_Output_31"."Proba_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_31"."Proba_0" IS NULL OR "DT_Output_31"."Proba_0" > 0.0) THEN ln("DT_Output_31"."Proba_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_31"."Proba_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_31"."Proba_1" IS NULL OR "DT_Output_31"."Proba_1" > 0.0) THEN ln("DT_Output_31"."Proba_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_31"."Proba_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_31"."Proba_2" IS NULL OR "DT_Output_31"."Proba_2" > 0.0) THEN ln("DT_Output_31"."Proba_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_31"."Proba_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_31"."Proba_3" IS NULL OR "DT_Output_31"."Proba_3" > 0.0) THEN ln("DT_Output_31"."Proba_3") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_31"."Proba_4" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_31"."Proba_4" IS NULL OR "DT_Output_31"."Proba_4" > 0.0) THEN ln("DT_Output_31"."Proba_4") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_31"."Proba_5" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_31"."Proba_5" IS NULL OR "DT_Output_31"."Proba_5" > 0.0) THEN ln("DT_Output_31"."Proba_5") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_31"."Proba_6" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_31"."Proba_6" IS NULL OR "DT_Output_31"."Proba_6" > 0.0) THEN ln("DT_Output_31"."Proba_6") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_31"."Proba_7" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_31"."Proba_7" IS NULL OR "DT_Output_31"."Proba_7" > 0.0) THEN ln("DT_Output_31"."Proba_7") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_31"."Proba_8" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_31"."Proba_8" IS NULL OR "DT_Output_31"."Proba_8" > 0.0) THEN ln("DT_Output_31"."Proba_8") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("DT_Output_31"."Proba_9" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("DT_Output_31"."Proba_9" IS NULL OR "DT_Output_31"."Proba_9" > 0.0) THEN ln("DT_Output_31"."Proba_9") ELSE -BINARY_FLOAT_INFINITY END END) / 10) AS "Proba_9" 
FROM "DT_Output_31"), 
"Score_Union_CTE" AS 
(SELECT ensemble_score_union."KEY" AS "KEY", ensemble_score_union."Score_0" AS "Score_0", ensemble_score_union."Proba_0" AS "Proba_0", ensemble_score_union."Score_1" AS "Score_1", ensemble_score_union."Proba_1" AS "Proba_1", ensemble_score_union."Score_2" AS "Score_2", ensemble_score_union."Proba_2" AS "Proba_2", ensemble_score_union."Score_3" AS "Score_3", ensemble_score_union."Proba_3" AS "Proba_3", ensemble_score_union."Score_4" AS "Score_4", ensemble_score_union."Proba_4" AS "Proba_4", ensemble_score_union."Score_5" AS "Score_5", ensemble_score_union."Proba_5" AS "Proba_5", ensemble_score_union."Score_6" AS "Score_6", ensemble_score_union."Proba_6" AS "Proba_6", ensemble_score_union."Score_7" AS "Score_7", ensemble_score_union."Proba_7" AS "Proba_7", ensemble_score_union."Score_8" AS "Score_8", ensemble_score_union."Proba_8" AS "Proba_8", ensemble_score_union."Score_9" AS "Score_9", ensemble_score_union."Proba_9" AS "Proba_9" 
FROM (SELECT "AdaBoost_Estim_0"."KEY" AS "KEY", "AdaBoost_Estim_0"."Score_0" AS "Score_0", "AdaBoost_Estim_0"."Proba_0" AS "Proba_0", "AdaBoost_Estim_0"."Score_1" AS "Score_1", "AdaBoost_Estim_0"."Proba_1" AS "Proba_1", "AdaBoost_Estim_0"."Score_2" AS "Score_2", "AdaBoost_Estim_0"."Proba_2" AS "Proba_2", "AdaBoost_Estim_0"."Score_3" AS "Score_3", "AdaBoost_Estim_0"."Proba_3" AS "Proba_3", "AdaBoost_Estim_0"."Score_4" AS "Score_4", "AdaBoost_Estim_0"."Proba_4" AS "Proba_4", "AdaBoost_Estim_0"."Score_5" AS "Score_5", "AdaBoost_Estim_0"."Proba_5" AS "Proba_5", "AdaBoost_Estim_0"."Score_6" AS "Score_6", "AdaBoost_Estim_0"."Proba_6" AS "Proba_6", "AdaBoost_Estim_0"."Score_7" AS "Score_7", "AdaBoost_Estim_0"."Proba_7" AS "Proba_7", "AdaBoost_Estim_0"."Score_8" AS "Score_8", "AdaBoost_Estim_0"."Proba_8" AS "Proba_8", "AdaBoost_Estim_0"."Score_9" AS "Score_9", "AdaBoost_Estim_0"."Proba_9" AS "Proba_9" 
FROM "AdaBoost_Estim_0" UNION ALL SELECT "AdaBoost_Estim_1"."KEY" AS "KEY", "AdaBoost_Estim_1"."Score_0" AS "Score_0", "AdaBoost_Estim_1"."Proba_0" AS "Proba_0", "AdaBoost_Estim_1"."Score_1" AS "Score_1", "AdaBoost_Estim_1"."Proba_1" AS "Proba_1", "AdaBoost_Estim_1"."Score_2" AS "Score_2", "AdaBoost_Estim_1"."Proba_2" AS "Proba_2", "AdaBoost_Estim_1"."Score_3" AS "Score_3", "AdaBoost_Estim_1"."Proba_3" AS "Proba_3", "AdaBoost_Estim_1"."Score_4" AS "Score_4", "AdaBoost_Estim_1"."Proba_4" AS "Proba_4", "AdaBoost_Estim_1"."Score_5" AS "Score_5", "AdaBoost_Estim_1"."Proba_5" AS "Proba_5", "AdaBoost_Estim_1"."Score_6" AS "Score_6", "AdaBoost_Estim_1"."Proba_6" AS "Proba_6", "AdaBoost_Estim_1"."Score_7" AS "Score_7", "AdaBoost_Estim_1"."Proba_7" AS "Proba_7", "AdaBoost_Estim_1"."Score_8" AS "Score_8", "AdaBoost_Estim_1"."Proba_8" AS "Proba_8", "AdaBoost_Estim_1"."Score_9" AS "Score_9", "AdaBoost_Estim_1"."Proba_9" AS "Proba_9" 
FROM "AdaBoost_Estim_1" UNION ALL SELECT "AdaBoost_Estim_2"."KEY" AS "KEY", "AdaBoost_Estim_2"."Score_0" AS "Score_0", "AdaBoost_Estim_2"."Proba_0" AS "Proba_0", "AdaBoost_Estim_2"."Score_1" AS "Score_1", "AdaBoost_Estim_2"."Proba_1" AS "Proba_1", "AdaBoost_Estim_2"."Score_2" AS "Score_2", "AdaBoost_Estim_2"."Proba_2" AS "Proba_2", "AdaBoost_Estim_2"."Score_3" AS "Score_3", "AdaBoost_Estim_2"."Proba_3" AS "Proba_3", "AdaBoost_Estim_2"."Score_4" AS "Score_4", "AdaBoost_Estim_2"."Proba_4" AS "Proba_4", "AdaBoost_Estim_2"."Score_5" AS "Score_5", "AdaBoost_Estim_2"."Proba_5" AS "Proba_5", "AdaBoost_Estim_2"."Score_6" AS "Score_6", "AdaBoost_Estim_2"."Proba_6" AS "Proba_6", "AdaBoost_Estim_2"."Score_7" AS "Score_7", "AdaBoost_Estim_2"."Proba_7" AS "Proba_7", "AdaBoost_Estim_2"."Score_8" AS "Score_8", "AdaBoost_Estim_2"."Proba_8" AS "Proba_8", "AdaBoost_Estim_2"."Score_9" AS "Score_9", "AdaBoost_Estim_2"."Proba_9" AS "Proba_9" 
FROM "AdaBoost_Estim_2" UNION ALL SELECT "AdaBoost_Estim_3"."KEY" AS "KEY", "AdaBoost_Estim_3"."Score_0" AS "Score_0", "AdaBoost_Estim_3"."Proba_0" AS "Proba_0", "AdaBoost_Estim_3"."Score_1" AS "Score_1", "AdaBoost_Estim_3"."Proba_1" AS "Proba_1", "AdaBoost_Estim_3"."Score_2" AS "Score_2", "AdaBoost_Estim_3"."Proba_2" AS "Proba_2", "AdaBoost_Estim_3"."Score_3" AS "Score_3", "AdaBoost_Estim_3"."Proba_3" AS "Proba_3", "AdaBoost_Estim_3"."Score_4" AS "Score_4", "AdaBoost_Estim_3"."Proba_4" AS "Proba_4", "AdaBoost_Estim_3"."Score_5" AS "Score_5", "AdaBoost_Estim_3"."Proba_5" AS "Proba_5", "AdaBoost_Estim_3"."Score_6" AS "Score_6", "AdaBoost_Estim_3"."Proba_6" AS "Proba_6", "AdaBoost_Estim_3"."Score_7" AS "Score_7", "AdaBoost_Estim_3"."Proba_7" AS "Proba_7", "AdaBoost_Estim_3"."Score_8" AS "Score_8", "AdaBoost_Estim_3"."Proba_8" AS "Proba_8", "AdaBoost_Estim_3"."Score_9" AS "Score_9", "AdaBoost_Estim_3"."Proba_9" AS "Proba_9" 
FROM "AdaBoost_Estim_3" UNION ALL SELECT "AdaBoost_Estim_4"."KEY" AS "KEY", "AdaBoost_Estim_4"."Score_0" AS "Score_0", "AdaBoost_Estim_4"."Proba_0" AS "Proba_0", "AdaBoost_Estim_4"."Score_1" AS "Score_1", "AdaBoost_Estim_4"."Proba_1" AS "Proba_1", "AdaBoost_Estim_4"."Score_2" AS "Score_2", "AdaBoost_Estim_4"."Proba_2" AS "Proba_2", "AdaBoost_Estim_4"."Score_3" AS "Score_3", "AdaBoost_Estim_4"."Proba_3" AS "Proba_3", "AdaBoost_Estim_4"."Score_4" AS "Score_4", "AdaBoost_Estim_4"."Proba_4" AS "Proba_4", "AdaBoost_Estim_4"."Score_5" AS "Score_5", "AdaBoost_Estim_4"."Proba_5" AS "Proba_5", "AdaBoost_Estim_4"."Score_6" AS "Score_6", "AdaBoost_Estim_4"."Proba_6" AS "Proba_6", "AdaBoost_Estim_4"."Score_7" AS "Score_7", "AdaBoost_Estim_4"."Proba_7" AS "Proba_7", "AdaBoost_Estim_4"."Score_8" AS "Score_8", "AdaBoost_Estim_4"."Proba_8" AS "Proba_8", "AdaBoost_Estim_4"."Score_9" AS "Score_9", "AdaBoost_Estim_4"."Proba_9" AS "Proba_9" 
FROM "AdaBoost_Estim_4" UNION ALL SELECT "AdaBoost_Estim_5"."KEY" AS "KEY", "AdaBoost_Estim_5"."Score_0" AS "Score_0", "AdaBoost_Estim_5"."Proba_0" AS "Proba_0", "AdaBoost_Estim_5"."Score_1" AS "Score_1", "AdaBoost_Estim_5"."Proba_1" AS "Proba_1", "AdaBoost_Estim_5"."Score_2" AS "Score_2", "AdaBoost_Estim_5"."Proba_2" AS "Proba_2", "AdaBoost_Estim_5"."Score_3" AS "Score_3", "AdaBoost_Estim_5"."Proba_3" AS "Proba_3", "AdaBoost_Estim_5"."Score_4" AS "Score_4", "AdaBoost_Estim_5"."Proba_4" AS "Proba_4", "AdaBoost_Estim_5"."Score_5" AS "Score_5", "AdaBoost_Estim_5"."Proba_5" AS "Proba_5", "AdaBoost_Estim_5"."Score_6" AS "Score_6", "AdaBoost_Estim_5"."Proba_6" AS "Proba_6", "AdaBoost_Estim_5"."Score_7" AS "Score_7", "AdaBoost_Estim_5"."Proba_7" AS "Proba_7", "AdaBoost_Estim_5"."Score_8" AS "Score_8", "AdaBoost_Estim_5"."Proba_8" AS "Proba_8", "AdaBoost_Estim_5"."Score_9" AS "Score_9", "AdaBoost_Estim_5"."Proba_9" AS "Proba_9" 
FROM "AdaBoost_Estim_5" UNION ALL SELECT "AdaBoost_Estim_6"."KEY" AS "KEY", "AdaBoost_Estim_6"."Score_0" AS "Score_0", "AdaBoost_Estim_6"."Proba_0" AS "Proba_0", "AdaBoost_Estim_6"."Score_1" AS "Score_1", "AdaBoost_Estim_6"."Proba_1" AS "Proba_1", "AdaBoost_Estim_6"."Score_2" AS "Score_2", "AdaBoost_Estim_6"."Proba_2" AS "Proba_2", "AdaBoost_Estim_6"."Score_3" AS "Score_3", "AdaBoost_Estim_6"."Proba_3" AS "Proba_3", "AdaBoost_Estim_6"."Score_4" AS "Score_4", "AdaBoost_Estim_6"."Proba_4" AS "Proba_4", "AdaBoost_Estim_6"."Score_5" AS "Score_5", "AdaBoost_Estim_6"."Proba_5" AS "Proba_5", "AdaBoost_Estim_6"."Score_6" AS "Score_6", "AdaBoost_Estim_6"."Proba_6" AS "Proba_6", "AdaBoost_Estim_6"."Score_7" AS "Score_7", "AdaBoost_Estim_6"."Proba_7" AS "Proba_7", "AdaBoost_Estim_6"."Score_8" AS "Score_8", "AdaBoost_Estim_6"."Proba_8" AS "Proba_8", "AdaBoost_Estim_6"."Score_9" AS "Score_9", "AdaBoost_Estim_6"."Proba_9" AS "Proba_9" 
FROM "AdaBoost_Estim_6" UNION ALL SELECT "AdaBoost_Estim_7"."KEY" AS "KEY", "AdaBoost_Estim_7"."Score_0" AS "Score_0", "AdaBoost_Estim_7"."Proba_0" AS "Proba_0", "AdaBoost_Estim_7"."Score_1" AS "Score_1", "AdaBoost_Estim_7"."Proba_1" AS "Proba_1", "AdaBoost_Estim_7"."Score_2" AS "Score_2", "AdaBoost_Estim_7"."Proba_2" AS "Proba_2", "AdaBoost_Estim_7"."Score_3" AS "Score_3", "AdaBoost_Estim_7"."Proba_3" AS "Proba_3", "AdaBoost_Estim_7"."Score_4" AS "Score_4", "AdaBoost_Estim_7"."Proba_4" AS "Proba_4", "AdaBoost_Estim_7"."Score_5" AS "Score_5", "AdaBoost_Estim_7"."Proba_5" AS "Proba_5", "AdaBoost_Estim_7"."Score_6" AS "Score_6", "AdaBoost_Estim_7"."Proba_6" AS "Proba_6", "AdaBoost_Estim_7"."Score_7" AS "Score_7", "AdaBoost_Estim_7"."Proba_7" AS "Proba_7", "AdaBoost_Estim_7"."Score_8" AS "Score_8", "AdaBoost_Estim_7"."Proba_8" AS "Proba_8", "AdaBoost_Estim_7"."Score_9" AS "Score_9", "AdaBoost_Estim_7"."Proba_9" AS "Proba_9" 
FROM "AdaBoost_Estim_7" UNION ALL SELECT "AdaBoost_Estim_8"."KEY" AS "KEY", "AdaBoost_Estim_8"."Score_0" AS "Score_0", "AdaBoost_Estim_8"."Proba_0" AS "Proba_0", "AdaBoost_Estim_8"."Score_1" AS "Score_1", "AdaBoost_Estim_8"."Proba_1" AS "Proba_1", "AdaBoost_Estim_8"."Score_2" AS "Score_2", "AdaBoost_Estim_8"."Proba_2" AS "Proba_2", "AdaBoost_Estim_8"."Score_3" AS "Score_3", "AdaBoost_Estim_8"."Proba_3" AS "Proba_3", "AdaBoost_Estim_8"."Score_4" AS "Score_4", "AdaBoost_Estim_8"."Proba_4" AS "Proba_4", "AdaBoost_Estim_8"."Score_5" AS "Score_5", "AdaBoost_Estim_8"."Proba_5" AS "Proba_5", "AdaBoost_Estim_8"."Score_6" AS "Score_6", "AdaBoost_Estim_8"."Proba_6" AS "Proba_6", "AdaBoost_Estim_8"."Score_7" AS "Score_7", "AdaBoost_Estim_8"."Proba_7" AS "Proba_7", "AdaBoost_Estim_8"."Score_8" AS "Score_8", "AdaBoost_Estim_8"."Proba_8" AS "Proba_8", "AdaBoost_Estim_8"."Score_9" AS "Score_9", "AdaBoost_Estim_8"."Proba_9" AS "Proba_9" 
FROM "AdaBoost_Estim_8" UNION ALL SELECT "AdaBoost_Estim_9"."KEY" AS "KEY", "AdaBoost_Estim_9"."Score_0" AS "Score_0", "AdaBoost_Estim_9"."Proba_0" AS "Proba_0", "AdaBoost_Estim_9"."Score_1" AS "Score_1", "AdaBoost_Estim_9"."Proba_1" AS "Proba_1", "AdaBoost_Estim_9"."Score_2" AS "Score_2", "AdaBoost_Estim_9"."Proba_2" AS "Proba_2", "AdaBoost_Estim_9"."Score_3" AS "Score_3", "AdaBoost_Estim_9"."Proba_3" AS "Proba_3", "AdaBoost_Estim_9"."Score_4" AS "Score_4", "AdaBoost_Estim_9"."Proba_4" AS "Proba_4", "AdaBoost_Estim_9"."Score_5" AS "Score_5", "AdaBoost_Estim_9"."Proba_5" AS "Proba_5", "AdaBoost_Estim_9"."Score_6" AS "Score_6", "AdaBoost_Estim_9"."Proba_6" AS "Proba_6", "AdaBoost_Estim_9"."Score_7" AS "Score_7", "AdaBoost_Estim_9"."Proba_7" AS "Proba_7", "AdaBoost_Estim_9"."Score_8" AS "Score_8", "AdaBoost_Estim_9"."Proba_8" AS "Proba_8", "AdaBoost_Estim_9"."Score_9" AS "Score_9", "AdaBoost_Estim_9"."Proba_9" AS "Proba_9" 
FROM "AdaBoost_Estim_9" UNION ALL SELECT "AdaBoost_Estim_10"."KEY" AS "KEY", "AdaBoost_Estim_10"."Score_0" AS "Score_0", "AdaBoost_Estim_10"."Proba_0" AS "Proba_0", "AdaBoost_Estim_10"."Score_1" AS "Score_1", "AdaBoost_Estim_10"."Proba_1" AS "Proba_1", "AdaBoost_Estim_10"."Score_2" AS "Score_2", "AdaBoost_Estim_10"."Proba_2" AS "Proba_2", "AdaBoost_Estim_10"."Score_3" AS "Score_3", "AdaBoost_Estim_10"."Proba_3" AS "Proba_3", "AdaBoost_Estim_10"."Score_4" AS "Score_4", "AdaBoost_Estim_10"."Proba_4" AS "Proba_4", "AdaBoost_Estim_10"."Score_5" AS "Score_5", "AdaBoost_Estim_10"."Proba_5" AS "Proba_5", "AdaBoost_Estim_10"."Score_6" AS "Score_6", "AdaBoost_Estim_10"."Proba_6" AS "Proba_6", "AdaBoost_Estim_10"."Score_7" AS "Score_7", "AdaBoost_Estim_10"."Proba_7" AS "Proba_7", "AdaBoost_Estim_10"."Score_8" AS "Score_8", "AdaBoost_Estim_10"."Proba_8" AS "Proba_8", "AdaBoost_Estim_10"."Score_9" AS "Score_9", "AdaBoost_Estim_10"."Proba_9" AS "Proba_9" 
FROM "AdaBoost_Estim_10" UNION ALL SELECT "AdaBoost_Estim_11"."KEY" AS "KEY", "AdaBoost_Estim_11"."Score_0" AS "Score_0", "AdaBoost_Estim_11"."Proba_0" AS "Proba_0", "AdaBoost_Estim_11"."Score_1" AS "Score_1", "AdaBoost_Estim_11"."Proba_1" AS "Proba_1", "AdaBoost_Estim_11"."Score_2" AS "Score_2", "AdaBoost_Estim_11"."Proba_2" AS "Proba_2", "AdaBoost_Estim_11"."Score_3" AS "Score_3", "AdaBoost_Estim_11"."Proba_3" AS "Proba_3", "AdaBoost_Estim_11"."Score_4" AS "Score_4", "AdaBoost_Estim_11"."Proba_4" AS "Proba_4", "AdaBoost_Estim_11"."Score_5" AS "Score_5", "AdaBoost_Estim_11"."Proba_5" AS "Proba_5", "AdaBoost_Estim_11"."Score_6" AS "Score_6", "AdaBoost_Estim_11"."Proba_6" AS "Proba_6", "AdaBoost_Estim_11"."Score_7" AS "Score_7", "AdaBoost_Estim_11"."Proba_7" AS "Proba_7", "AdaBoost_Estim_11"."Score_8" AS "Score_8", "AdaBoost_Estim_11"."Proba_8" AS "Proba_8", "AdaBoost_Estim_11"."Score_9" AS "Score_9", "AdaBoost_Estim_11"."Proba_9" AS "Proba_9" 
FROM "AdaBoost_Estim_11" UNION ALL SELECT "AdaBoost_Estim_12"."KEY" AS "KEY", "AdaBoost_Estim_12"."Score_0" AS "Score_0", "AdaBoost_Estim_12"."Proba_0" AS "Proba_0", "AdaBoost_Estim_12"."Score_1" AS "Score_1", "AdaBoost_Estim_12"."Proba_1" AS "Proba_1", "AdaBoost_Estim_12"."Score_2" AS "Score_2", "AdaBoost_Estim_12"."Proba_2" AS "Proba_2", "AdaBoost_Estim_12"."Score_3" AS "Score_3", "AdaBoost_Estim_12"."Proba_3" AS "Proba_3", "AdaBoost_Estim_12"."Score_4" AS "Score_4", "AdaBoost_Estim_12"."Proba_4" AS "Proba_4", "AdaBoost_Estim_12"."Score_5" AS "Score_5", "AdaBoost_Estim_12"."Proba_5" AS "Proba_5", "AdaBoost_Estim_12"."Score_6" AS "Score_6", "AdaBoost_Estim_12"."Proba_6" AS "Proba_6", "AdaBoost_Estim_12"."Score_7" AS "Score_7", "AdaBoost_Estim_12"."Proba_7" AS "Proba_7", "AdaBoost_Estim_12"."Score_8" AS "Score_8", "AdaBoost_Estim_12"."Proba_8" AS "Proba_8", "AdaBoost_Estim_12"."Score_9" AS "Score_9", "AdaBoost_Estim_12"."Proba_9" AS "Proba_9" 
FROM "AdaBoost_Estim_12" UNION ALL SELECT "AdaBoost_Estim_13"."KEY" AS "KEY", "AdaBoost_Estim_13"."Score_0" AS "Score_0", "AdaBoost_Estim_13"."Proba_0" AS "Proba_0", "AdaBoost_Estim_13"."Score_1" AS "Score_1", "AdaBoost_Estim_13"."Proba_1" AS "Proba_1", "AdaBoost_Estim_13"."Score_2" AS "Score_2", "AdaBoost_Estim_13"."Proba_2" AS "Proba_2", "AdaBoost_Estim_13"."Score_3" AS "Score_3", "AdaBoost_Estim_13"."Proba_3" AS "Proba_3", "AdaBoost_Estim_13"."Score_4" AS "Score_4", "AdaBoost_Estim_13"."Proba_4" AS "Proba_4", "AdaBoost_Estim_13"."Score_5" AS "Score_5", "AdaBoost_Estim_13"."Proba_5" AS "Proba_5", "AdaBoost_Estim_13"."Score_6" AS "Score_6", "AdaBoost_Estim_13"."Proba_6" AS "Proba_6", "AdaBoost_Estim_13"."Score_7" AS "Score_7", "AdaBoost_Estim_13"."Proba_7" AS "Proba_7", "AdaBoost_Estim_13"."Score_8" AS "Score_8", "AdaBoost_Estim_13"."Proba_8" AS "Proba_8", "AdaBoost_Estim_13"."Score_9" AS "Score_9", "AdaBoost_Estim_13"."Proba_9" AS "Proba_9" 
FROM "AdaBoost_Estim_13" UNION ALL SELECT "AdaBoost_Estim_14"."KEY" AS "KEY", "AdaBoost_Estim_14"."Score_0" AS "Score_0", "AdaBoost_Estim_14"."Proba_0" AS "Proba_0", "AdaBoost_Estim_14"."Score_1" AS "Score_1", "AdaBoost_Estim_14"."Proba_1" AS "Proba_1", "AdaBoost_Estim_14"."Score_2" AS "Score_2", "AdaBoost_Estim_14"."Proba_2" AS "Proba_2", "AdaBoost_Estim_14"."Score_3" AS "Score_3", "AdaBoost_Estim_14"."Proba_3" AS "Proba_3", "AdaBoost_Estim_14"."Score_4" AS "Score_4", "AdaBoost_Estim_14"."Proba_4" AS "Proba_4", "AdaBoost_Estim_14"."Score_5" AS "Score_5", "AdaBoost_Estim_14"."Proba_5" AS "Proba_5", "AdaBoost_Estim_14"."Score_6" AS "Score_6", "AdaBoost_Estim_14"."Proba_6" AS "Proba_6", "AdaBoost_Estim_14"."Score_7" AS "Score_7", "AdaBoost_Estim_14"."Proba_7" AS "Proba_7", "AdaBoost_Estim_14"."Score_8" AS "Score_8", "AdaBoost_Estim_14"."Proba_8" AS "Proba_8", "AdaBoost_Estim_14"."Score_9" AS "Score_9", "AdaBoost_Estim_14"."Proba_9" AS "Proba_9" 
FROM "AdaBoost_Estim_14" UNION ALL SELECT "AdaBoost_Estim_15"."KEY" AS "KEY", "AdaBoost_Estim_15"."Score_0" AS "Score_0", "AdaBoost_Estim_15"."Proba_0" AS "Proba_0", "AdaBoost_Estim_15"."Score_1" AS "Score_1", "AdaBoost_Estim_15"."Proba_1" AS "Proba_1", "AdaBoost_Estim_15"."Score_2" AS "Score_2", "AdaBoost_Estim_15"."Proba_2" AS "Proba_2", "AdaBoost_Estim_15"."Score_3" AS "Score_3", "AdaBoost_Estim_15"."Proba_3" AS "Proba_3", "AdaBoost_Estim_15"."Score_4" AS "Score_4", "AdaBoost_Estim_15"."Proba_4" AS "Proba_4", "AdaBoost_Estim_15"."Score_5" AS "Score_5", "AdaBoost_Estim_15"."Proba_5" AS "Proba_5", "AdaBoost_Estim_15"."Score_6" AS "Score_6", "AdaBoost_Estim_15"."Proba_6" AS "Proba_6", "AdaBoost_Estim_15"."Score_7" AS "Score_7", "AdaBoost_Estim_15"."Proba_7" AS "Proba_7", "AdaBoost_Estim_15"."Score_8" AS "Score_8", "AdaBoost_Estim_15"."Proba_8" AS "Proba_8", "AdaBoost_Estim_15"."Score_9" AS "Score_9", "AdaBoost_Estim_15"."Proba_9" AS "Proba_9" 
FROM "AdaBoost_Estim_15" UNION ALL SELECT "AdaBoost_Estim_16"."KEY" AS "KEY", "AdaBoost_Estim_16"."Score_0" AS "Score_0", "AdaBoost_Estim_16"."Proba_0" AS "Proba_0", "AdaBoost_Estim_16"."Score_1" AS "Score_1", "AdaBoost_Estim_16"."Proba_1" AS "Proba_1", "AdaBoost_Estim_16"."Score_2" AS "Score_2", "AdaBoost_Estim_16"."Proba_2" AS "Proba_2", "AdaBoost_Estim_16"."Score_3" AS "Score_3", "AdaBoost_Estim_16"."Proba_3" AS "Proba_3", "AdaBoost_Estim_16"."Score_4" AS "Score_4", "AdaBoost_Estim_16"."Proba_4" AS "Proba_4", "AdaBoost_Estim_16"."Score_5" AS "Score_5", "AdaBoost_Estim_16"."Proba_5" AS "Proba_5", "AdaBoost_Estim_16"."Score_6" AS "Score_6", "AdaBoost_Estim_16"."Proba_6" AS "Proba_6", "AdaBoost_Estim_16"."Score_7" AS "Score_7", "AdaBoost_Estim_16"."Proba_7" AS "Proba_7", "AdaBoost_Estim_16"."Score_8" AS "Score_8", "AdaBoost_Estim_16"."Proba_8" AS "Proba_8", "AdaBoost_Estim_16"."Score_9" AS "Score_9", "AdaBoost_Estim_16"."Proba_9" AS "Proba_9" 
FROM "AdaBoost_Estim_16" UNION ALL SELECT "AdaBoost_Estim_17"."KEY" AS "KEY", "AdaBoost_Estim_17"."Score_0" AS "Score_0", "AdaBoost_Estim_17"."Proba_0" AS "Proba_0", "AdaBoost_Estim_17"."Score_1" AS "Score_1", "AdaBoost_Estim_17"."Proba_1" AS "Proba_1", "AdaBoost_Estim_17"."Score_2" AS "Score_2", "AdaBoost_Estim_17"."Proba_2" AS "Proba_2", "AdaBoost_Estim_17"."Score_3" AS "Score_3", "AdaBoost_Estim_17"."Proba_3" AS "Proba_3", "AdaBoost_Estim_17"."Score_4" AS "Score_4", "AdaBoost_Estim_17"."Proba_4" AS "Proba_4", "AdaBoost_Estim_17"."Score_5" AS "Score_5", "AdaBoost_Estim_17"."Proba_5" AS "Proba_5", "AdaBoost_Estim_17"."Score_6" AS "Score_6", "AdaBoost_Estim_17"."Proba_6" AS "Proba_6", "AdaBoost_Estim_17"."Score_7" AS "Score_7", "AdaBoost_Estim_17"."Proba_7" AS "Proba_7", "AdaBoost_Estim_17"."Score_8" AS "Score_8", "AdaBoost_Estim_17"."Proba_8" AS "Proba_8", "AdaBoost_Estim_17"."Score_9" AS "Score_9", "AdaBoost_Estim_17"."Proba_9" AS "Proba_9" 
FROM "AdaBoost_Estim_17" UNION ALL SELECT "AdaBoost_Estim_18"."KEY" AS "KEY", "AdaBoost_Estim_18"."Score_0" AS "Score_0", "AdaBoost_Estim_18"."Proba_0" AS "Proba_0", "AdaBoost_Estim_18"."Score_1" AS "Score_1", "AdaBoost_Estim_18"."Proba_1" AS "Proba_1", "AdaBoost_Estim_18"."Score_2" AS "Score_2", "AdaBoost_Estim_18"."Proba_2" AS "Proba_2", "AdaBoost_Estim_18"."Score_3" AS "Score_3", "AdaBoost_Estim_18"."Proba_3" AS "Proba_3", "AdaBoost_Estim_18"."Score_4" AS "Score_4", "AdaBoost_Estim_18"."Proba_4" AS "Proba_4", "AdaBoost_Estim_18"."Score_5" AS "Score_5", "AdaBoost_Estim_18"."Proba_5" AS "Proba_5", "AdaBoost_Estim_18"."Score_6" AS "Score_6", "AdaBoost_Estim_18"."Proba_6" AS "Proba_6", "AdaBoost_Estim_18"."Score_7" AS "Score_7", "AdaBoost_Estim_18"."Proba_7" AS "Proba_7", "AdaBoost_Estim_18"."Score_8" AS "Score_8", "AdaBoost_Estim_18"."Proba_8" AS "Proba_8", "AdaBoost_Estim_18"."Score_9" AS "Score_9", "AdaBoost_Estim_18"."Proba_9" AS "Proba_9" 
FROM "AdaBoost_Estim_18" UNION ALL SELECT "AdaBoost_Estim_19"."KEY" AS "KEY", "AdaBoost_Estim_19"."Score_0" AS "Score_0", "AdaBoost_Estim_19"."Proba_0" AS "Proba_0", "AdaBoost_Estim_19"."Score_1" AS "Score_1", "AdaBoost_Estim_19"."Proba_1" AS "Proba_1", "AdaBoost_Estim_19"."Score_2" AS "Score_2", "AdaBoost_Estim_19"."Proba_2" AS "Proba_2", "AdaBoost_Estim_19"."Score_3" AS "Score_3", "AdaBoost_Estim_19"."Proba_3" AS "Proba_3", "AdaBoost_Estim_19"."Score_4" AS "Score_4", "AdaBoost_Estim_19"."Proba_4" AS "Proba_4", "AdaBoost_Estim_19"."Score_5" AS "Score_5", "AdaBoost_Estim_19"."Proba_5" AS "Proba_5", "AdaBoost_Estim_19"."Score_6" AS "Score_6", "AdaBoost_Estim_19"."Proba_6" AS "Proba_6", "AdaBoost_Estim_19"."Score_7" AS "Score_7", "AdaBoost_Estim_19"."Proba_7" AS "Proba_7", "AdaBoost_Estim_19"."Score_8" AS "Score_8", "AdaBoost_Estim_19"."Proba_8" AS "Proba_8", "AdaBoost_Estim_19"."Score_9" AS "Score_9", "AdaBoost_Estim_19"."Proba_9" AS "Proba_9" 
FROM "AdaBoost_Estim_19" UNION ALL SELECT "AdaBoost_Estim_20"."KEY" AS "KEY", "AdaBoost_Estim_20"."Score_0" AS "Score_0", "AdaBoost_Estim_20"."Proba_0" AS "Proba_0", "AdaBoost_Estim_20"."Score_1" AS "Score_1", "AdaBoost_Estim_20"."Proba_1" AS "Proba_1", "AdaBoost_Estim_20"."Score_2" AS "Score_2", "AdaBoost_Estim_20"."Proba_2" AS "Proba_2", "AdaBoost_Estim_20"."Score_3" AS "Score_3", "AdaBoost_Estim_20"."Proba_3" AS "Proba_3", "AdaBoost_Estim_20"."Score_4" AS "Score_4", "AdaBoost_Estim_20"."Proba_4" AS "Proba_4", "AdaBoost_Estim_20"."Score_5" AS "Score_5", "AdaBoost_Estim_20"."Proba_5" AS "Proba_5", "AdaBoost_Estim_20"."Score_6" AS "Score_6", "AdaBoost_Estim_20"."Proba_6" AS "Proba_6", "AdaBoost_Estim_20"."Score_7" AS "Score_7", "AdaBoost_Estim_20"."Proba_7" AS "Proba_7", "AdaBoost_Estim_20"."Score_8" AS "Score_8", "AdaBoost_Estim_20"."Proba_8" AS "Proba_8", "AdaBoost_Estim_20"."Score_9" AS "Score_9", "AdaBoost_Estim_20"."Proba_9" AS "Proba_9" 
FROM "AdaBoost_Estim_20" UNION ALL SELECT "AdaBoost_Estim_21"."KEY" AS "KEY", "AdaBoost_Estim_21"."Score_0" AS "Score_0", "AdaBoost_Estim_21"."Proba_0" AS "Proba_0", "AdaBoost_Estim_21"."Score_1" AS "Score_1", "AdaBoost_Estim_21"."Proba_1" AS "Proba_1", "AdaBoost_Estim_21"."Score_2" AS "Score_2", "AdaBoost_Estim_21"."Proba_2" AS "Proba_2", "AdaBoost_Estim_21"."Score_3" AS "Score_3", "AdaBoost_Estim_21"."Proba_3" AS "Proba_3", "AdaBoost_Estim_21"."Score_4" AS "Score_4", "AdaBoost_Estim_21"."Proba_4" AS "Proba_4", "AdaBoost_Estim_21"."Score_5" AS "Score_5", "AdaBoost_Estim_21"."Proba_5" AS "Proba_5", "AdaBoost_Estim_21"."Score_6" AS "Score_6", "AdaBoost_Estim_21"."Proba_6" AS "Proba_6", "AdaBoost_Estim_21"."Score_7" AS "Score_7", "AdaBoost_Estim_21"."Proba_7" AS "Proba_7", "AdaBoost_Estim_21"."Score_8" AS "Score_8", "AdaBoost_Estim_21"."Proba_8" AS "Proba_8", "AdaBoost_Estim_21"."Score_9" AS "Score_9", "AdaBoost_Estim_21"."Proba_9" AS "Proba_9" 
FROM "AdaBoost_Estim_21" UNION ALL SELECT "AdaBoost_Estim_22"."KEY" AS "KEY", "AdaBoost_Estim_22"."Score_0" AS "Score_0", "AdaBoost_Estim_22"."Proba_0" AS "Proba_0", "AdaBoost_Estim_22"."Score_1" AS "Score_1", "AdaBoost_Estim_22"."Proba_1" AS "Proba_1", "AdaBoost_Estim_22"."Score_2" AS "Score_2", "AdaBoost_Estim_22"."Proba_2" AS "Proba_2", "AdaBoost_Estim_22"."Score_3" AS "Score_3", "AdaBoost_Estim_22"."Proba_3" AS "Proba_3", "AdaBoost_Estim_22"."Score_4" AS "Score_4", "AdaBoost_Estim_22"."Proba_4" AS "Proba_4", "AdaBoost_Estim_22"."Score_5" AS "Score_5", "AdaBoost_Estim_22"."Proba_5" AS "Proba_5", "AdaBoost_Estim_22"."Score_6" AS "Score_6", "AdaBoost_Estim_22"."Proba_6" AS "Proba_6", "AdaBoost_Estim_22"."Score_7" AS "Score_7", "AdaBoost_Estim_22"."Proba_7" AS "Proba_7", "AdaBoost_Estim_22"."Score_8" AS "Score_8", "AdaBoost_Estim_22"."Proba_8" AS "Proba_8", "AdaBoost_Estim_22"."Score_9" AS "Score_9", "AdaBoost_Estim_22"."Proba_9" AS "Proba_9" 
FROM "AdaBoost_Estim_22" UNION ALL SELECT "AdaBoost_Estim_23"."KEY" AS "KEY", "AdaBoost_Estim_23"."Score_0" AS "Score_0", "AdaBoost_Estim_23"."Proba_0" AS "Proba_0", "AdaBoost_Estim_23"."Score_1" AS "Score_1", "AdaBoost_Estim_23"."Proba_1" AS "Proba_1", "AdaBoost_Estim_23"."Score_2" AS "Score_2", "AdaBoost_Estim_23"."Proba_2" AS "Proba_2", "AdaBoost_Estim_23"."Score_3" AS "Score_3", "AdaBoost_Estim_23"."Proba_3" AS "Proba_3", "AdaBoost_Estim_23"."Score_4" AS "Score_4", "AdaBoost_Estim_23"."Proba_4" AS "Proba_4", "AdaBoost_Estim_23"."Score_5" AS "Score_5", "AdaBoost_Estim_23"."Proba_5" AS "Proba_5", "AdaBoost_Estim_23"."Score_6" AS "Score_6", "AdaBoost_Estim_23"."Proba_6" AS "Proba_6", "AdaBoost_Estim_23"."Score_7" AS "Score_7", "AdaBoost_Estim_23"."Proba_7" AS "Proba_7", "AdaBoost_Estim_23"."Score_8" AS "Score_8", "AdaBoost_Estim_23"."Proba_8" AS "Proba_8", "AdaBoost_Estim_23"."Score_9" AS "Score_9", "AdaBoost_Estim_23"."Proba_9" AS "Proba_9" 
FROM "AdaBoost_Estim_23" UNION ALL SELECT "AdaBoost_Estim_24"."KEY" AS "KEY", "AdaBoost_Estim_24"."Score_0" AS "Score_0", "AdaBoost_Estim_24"."Proba_0" AS "Proba_0", "AdaBoost_Estim_24"."Score_1" AS "Score_1", "AdaBoost_Estim_24"."Proba_1" AS "Proba_1", "AdaBoost_Estim_24"."Score_2" AS "Score_2", "AdaBoost_Estim_24"."Proba_2" AS "Proba_2", "AdaBoost_Estim_24"."Score_3" AS "Score_3", "AdaBoost_Estim_24"."Proba_3" AS "Proba_3", "AdaBoost_Estim_24"."Score_4" AS "Score_4", "AdaBoost_Estim_24"."Proba_4" AS "Proba_4", "AdaBoost_Estim_24"."Score_5" AS "Score_5", "AdaBoost_Estim_24"."Proba_5" AS "Proba_5", "AdaBoost_Estim_24"."Score_6" AS "Score_6", "AdaBoost_Estim_24"."Proba_6" AS "Proba_6", "AdaBoost_Estim_24"."Score_7" AS "Score_7", "AdaBoost_Estim_24"."Proba_7" AS "Proba_7", "AdaBoost_Estim_24"."Score_8" AS "Score_8", "AdaBoost_Estim_24"."Proba_8" AS "Proba_8", "AdaBoost_Estim_24"."Score_9" AS "Score_9", "AdaBoost_Estim_24"."Proba_9" AS "Proba_9" 
FROM "AdaBoost_Estim_24" UNION ALL SELECT "AdaBoost_Estim_25"."KEY" AS "KEY", "AdaBoost_Estim_25"."Score_0" AS "Score_0", "AdaBoost_Estim_25"."Proba_0" AS "Proba_0", "AdaBoost_Estim_25"."Score_1" AS "Score_1", "AdaBoost_Estim_25"."Proba_1" AS "Proba_1", "AdaBoost_Estim_25"."Score_2" AS "Score_2", "AdaBoost_Estim_25"."Proba_2" AS "Proba_2", "AdaBoost_Estim_25"."Score_3" AS "Score_3", "AdaBoost_Estim_25"."Proba_3" AS "Proba_3", "AdaBoost_Estim_25"."Score_4" AS "Score_4", "AdaBoost_Estim_25"."Proba_4" AS "Proba_4", "AdaBoost_Estim_25"."Score_5" AS "Score_5", "AdaBoost_Estim_25"."Proba_5" AS "Proba_5", "AdaBoost_Estim_25"."Score_6" AS "Score_6", "AdaBoost_Estim_25"."Proba_6" AS "Proba_6", "AdaBoost_Estim_25"."Score_7" AS "Score_7", "AdaBoost_Estim_25"."Proba_7" AS "Proba_7", "AdaBoost_Estim_25"."Score_8" AS "Score_8", "AdaBoost_Estim_25"."Proba_8" AS "Proba_8", "AdaBoost_Estim_25"."Score_9" AS "Score_9", "AdaBoost_Estim_25"."Proba_9" AS "Proba_9" 
FROM "AdaBoost_Estim_25" UNION ALL SELECT "AdaBoost_Estim_26"."KEY" AS "KEY", "AdaBoost_Estim_26"."Score_0" AS "Score_0", "AdaBoost_Estim_26"."Proba_0" AS "Proba_0", "AdaBoost_Estim_26"."Score_1" AS "Score_1", "AdaBoost_Estim_26"."Proba_1" AS "Proba_1", "AdaBoost_Estim_26"."Score_2" AS "Score_2", "AdaBoost_Estim_26"."Proba_2" AS "Proba_2", "AdaBoost_Estim_26"."Score_3" AS "Score_3", "AdaBoost_Estim_26"."Proba_3" AS "Proba_3", "AdaBoost_Estim_26"."Score_4" AS "Score_4", "AdaBoost_Estim_26"."Proba_4" AS "Proba_4", "AdaBoost_Estim_26"."Score_5" AS "Score_5", "AdaBoost_Estim_26"."Proba_5" AS "Proba_5", "AdaBoost_Estim_26"."Score_6" AS "Score_6", "AdaBoost_Estim_26"."Proba_6" AS "Proba_6", "AdaBoost_Estim_26"."Score_7" AS "Score_7", "AdaBoost_Estim_26"."Proba_7" AS "Proba_7", "AdaBoost_Estim_26"."Score_8" AS "Score_8", "AdaBoost_Estim_26"."Proba_8" AS "Proba_8", "AdaBoost_Estim_26"."Score_9" AS "Score_9", "AdaBoost_Estim_26"."Proba_9" AS "Proba_9" 
FROM "AdaBoost_Estim_26" UNION ALL SELECT "AdaBoost_Estim_27"."KEY" AS "KEY", "AdaBoost_Estim_27"."Score_0" AS "Score_0", "AdaBoost_Estim_27"."Proba_0" AS "Proba_0", "AdaBoost_Estim_27"."Score_1" AS "Score_1", "AdaBoost_Estim_27"."Proba_1" AS "Proba_1", "AdaBoost_Estim_27"."Score_2" AS "Score_2", "AdaBoost_Estim_27"."Proba_2" AS "Proba_2", "AdaBoost_Estim_27"."Score_3" AS "Score_3", "AdaBoost_Estim_27"."Proba_3" AS "Proba_3", "AdaBoost_Estim_27"."Score_4" AS "Score_4", "AdaBoost_Estim_27"."Proba_4" AS "Proba_4", "AdaBoost_Estim_27"."Score_5" AS "Score_5", "AdaBoost_Estim_27"."Proba_5" AS "Proba_5", "AdaBoost_Estim_27"."Score_6" AS "Score_6", "AdaBoost_Estim_27"."Proba_6" AS "Proba_6", "AdaBoost_Estim_27"."Score_7" AS "Score_7", "AdaBoost_Estim_27"."Proba_7" AS "Proba_7", "AdaBoost_Estim_27"."Score_8" AS "Score_8", "AdaBoost_Estim_27"."Proba_8" AS "Proba_8", "AdaBoost_Estim_27"."Score_9" AS "Score_9", "AdaBoost_Estim_27"."Proba_9" AS "Proba_9" 
FROM "AdaBoost_Estim_27" UNION ALL SELECT "AdaBoost_Estim_28"."KEY" AS "KEY", "AdaBoost_Estim_28"."Score_0" AS "Score_0", "AdaBoost_Estim_28"."Proba_0" AS "Proba_0", "AdaBoost_Estim_28"."Score_1" AS "Score_1", "AdaBoost_Estim_28"."Proba_1" AS "Proba_1", "AdaBoost_Estim_28"."Score_2" AS "Score_2", "AdaBoost_Estim_28"."Proba_2" AS "Proba_2", "AdaBoost_Estim_28"."Score_3" AS "Score_3", "AdaBoost_Estim_28"."Proba_3" AS "Proba_3", "AdaBoost_Estim_28"."Score_4" AS "Score_4", "AdaBoost_Estim_28"."Proba_4" AS "Proba_4", "AdaBoost_Estim_28"."Score_5" AS "Score_5", "AdaBoost_Estim_28"."Proba_5" AS "Proba_5", "AdaBoost_Estim_28"."Score_6" AS "Score_6", "AdaBoost_Estim_28"."Proba_6" AS "Proba_6", "AdaBoost_Estim_28"."Score_7" AS "Score_7", "AdaBoost_Estim_28"."Proba_7" AS "Proba_7", "AdaBoost_Estim_28"."Score_8" AS "Score_8", "AdaBoost_Estim_28"."Proba_8" AS "Proba_8", "AdaBoost_Estim_28"."Score_9" AS "Score_9", "AdaBoost_Estim_28"."Proba_9" AS "Proba_9" 
FROM "AdaBoost_Estim_28" UNION ALL SELECT "AdaBoost_Estim_29"."KEY" AS "KEY", "AdaBoost_Estim_29"."Score_0" AS "Score_0", "AdaBoost_Estim_29"."Proba_0" AS "Proba_0", "AdaBoost_Estim_29"."Score_1" AS "Score_1", "AdaBoost_Estim_29"."Proba_1" AS "Proba_1", "AdaBoost_Estim_29"."Score_2" AS "Score_2", "AdaBoost_Estim_29"."Proba_2" AS "Proba_2", "AdaBoost_Estim_29"."Score_3" AS "Score_3", "AdaBoost_Estim_29"."Proba_3" AS "Proba_3", "AdaBoost_Estim_29"."Score_4" AS "Score_4", "AdaBoost_Estim_29"."Proba_4" AS "Proba_4", "AdaBoost_Estim_29"."Score_5" AS "Score_5", "AdaBoost_Estim_29"."Proba_5" AS "Proba_5", "AdaBoost_Estim_29"."Score_6" AS "Score_6", "AdaBoost_Estim_29"."Proba_6" AS "Proba_6", "AdaBoost_Estim_29"."Score_7" AS "Score_7", "AdaBoost_Estim_29"."Proba_7" AS "Proba_7", "AdaBoost_Estim_29"."Score_8" AS "Score_8", "AdaBoost_Estim_29"."Proba_8" AS "Proba_8", "AdaBoost_Estim_29"."Score_9" AS "Score_9", "AdaBoost_Estim_29"."Proba_9" AS "Proba_9" 
FROM "AdaBoost_Estim_29" UNION ALL SELECT "AdaBoost_Estim_30"."KEY" AS "KEY", "AdaBoost_Estim_30"."Score_0" AS "Score_0", "AdaBoost_Estim_30"."Proba_0" AS "Proba_0", "AdaBoost_Estim_30"."Score_1" AS "Score_1", "AdaBoost_Estim_30"."Proba_1" AS "Proba_1", "AdaBoost_Estim_30"."Score_2" AS "Score_2", "AdaBoost_Estim_30"."Proba_2" AS "Proba_2", "AdaBoost_Estim_30"."Score_3" AS "Score_3", "AdaBoost_Estim_30"."Proba_3" AS "Proba_3", "AdaBoost_Estim_30"."Score_4" AS "Score_4", "AdaBoost_Estim_30"."Proba_4" AS "Proba_4", "AdaBoost_Estim_30"."Score_5" AS "Score_5", "AdaBoost_Estim_30"."Proba_5" AS "Proba_5", "AdaBoost_Estim_30"."Score_6" AS "Score_6", "AdaBoost_Estim_30"."Proba_6" AS "Proba_6", "AdaBoost_Estim_30"."Score_7" AS "Score_7", "AdaBoost_Estim_30"."Proba_7" AS "Proba_7", "AdaBoost_Estim_30"."Score_8" AS "Score_8", "AdaBoost_Estim_30"."Proba_8" AS "Proba_8", "AdaBoost_Estim_30"."Score_9" AS "Score_9", "AdaBoost_Estim_30"."Proba_9" AS "Proba_9" 
FROM "AdaBoost_Estim_30" UNION ALL SELECT "AdaBoost_Estim_31"."KEY" AS "KEY", "AdaBoost_Estim_31"."Score_0" AS "Score_0", "AdaBoost_Estim_31"."Proba_0" AS "Proba_0", "AdaBoost_Estim_31"."Score_1" AS "Score_1", "AdaBoost_Estim_31"."Proba_1" AS "Proba_1", "AdaBoost_Estim_31"."Score_2" AS "Score_2", "AdaBoost_Estim_31"."Proba_2" AS "Proba_2", "AdaBoost_Estim_31"."Score_3" AS "Score_3", "AdaBoost_Estim_31"."Proba_3" AS "Proba_3", "AdaBoost_Estim_31"."Score_4" AS "Score_4", "AdaBoost_Estim_31"."Proba_4" AS "Proba_4", "AdaBoost_Estim_31"."Score_5" AS "Score_5", "AdaBoost_Estim_31"."Proba_5" AS "Proba_5", "AdaBoost_Estim_31"."Score_6" AS "Score_6", "AdaBoost_Estim_31"."Proba_6" AS "Proba_6", "AdaBoost_Estim_31"."Score_7" AS "Score_7", "AdaBoost_Estim_31"."Proba_7" AS "Proba_7", "AdaBoost_Estim_31"."Score_8" AS "Score_8", "AdaBoost_Estim_31"."Proba_8" AS "Proba_8", "AdaBoost_Estim_31"."Score_9" AS "Score_9", "AdaBoost_Estim_31"."Proba_9" AS "Proba_9" 
FROM "AdaBoost_Estim_31") ensemble_score_union), 
"ADA_Sum_Scores" AS 
(SELECT "T"."KEY" AS "KEY", "T"."Score_0" AS "Score_0", "T"."Proba_0" AS "Proba_0", "T"."Score_1" AS "Score_1", "T"."Proba_1" AS "Proba_1", "T"."Score_2" AS "Score_2", "T"."Proba_2" AS "Proba_2", "T"."Score_3" AS "Score_3", "T"."Proba_3" AS "Proba_3", "T"."Score_4" AS "Score_4", "T"."Proba_4" AS "Proba_4", "T"."Score_5" AS "Score_5", "T"."Proba_5" AS "Proba_5", "T"."Score_6" AS "Score_6", "T"."Proba_6" AS "Proba_6", "T"."Score_7" AS "Score_7", "T"."Proba_7" AS "Proba_7", "T"."Score_8" AS "Score_8", "T"."Proba_8" AS "Proba_8", "T"."Score_9" AS "Score_9", "T"."Proba_9" AS "Proba_9" 
FROM (SELECT "Score_Union_CTE"."KEY" AS "KEY", sum("Score_Union_CTE"."Score_0") AS "Score_0", sum("Score_Union_CTE"."Proba_0") AS "Proba_0", sum("Score_Union_CTE"."Score_1") AS "Score_1", sum("Score_Union_CTE"."Proba_1") AS "Proba_1", sum("Score_Union_CTE"."Score_2") AS "Score_2", sum("Score_Union_CTE"."Proba_2") AS "Proba_2", sum("Score_Union_CTE"."Score_3") AS "Score_3", sum("Score_Union_CTE"."Proba_3") AS "Proba_3", sum("Score_Union_CTE"."Score_4") AS "Score_4", sum("Score_Union_CTE"."Proba_4") AS "Proba_4", sum("Score_Union_CTE"."Score_5") AS "Score_5", sum("Score_Union_CTE"."Proba_5") AS "Proba_5", sum("Score_Union_CTE"."Score_6") AS "Score_6", sum("Score_Union_CTE"."Proba_6") AS "Proba_6", sum("Score_Union_CTE"."Score_7") AS "Score_7", sum("Score_Union_CTE"."Proba_7") AS "Proba_7", sum("Score_Union_CTE"."Score_8") AS "Score_8", sum("Score_Union_CTE"."Proba_8") AS "Proba_8", sum("Score_Union_CTE"."Score_9") AS "Score_9", sum("Score_Union_CTE"."Proba_9") AS "Proba_9" 
FROM "Score_Union_CTE" GROUP BY "Score_Union_CTE"."KEY") "T"), 
"AdaBoost_AVG_Scores_BN" AS 
(SELECT "ADA_Sum_Scores"."KEY" AS "KEY", "ADA_Sum_Scores"."Score_0" AS "Score_0", "ADA_Sum_Scores"."Proba_0" AS "Proba_0", "ADA_Sum_Scores"."Score_1" AS "Score_1", "ADA_Sum_Scores"."Proba_1" AS "Proba_1", "ADA_Sum_Scores"."Score_2" AS "Score_2", "ADA_Sum_Scores"."Proba_2" AS "Proba_2", "ADA_Sum_Scores"."Score_3" AS "Score_3", "ADA_Sum_Scores"."Proba_3" AS "Proba_3", "ADA_Sum_Scores"."Score_4" AS "Score_4", "ADA_Sum_Scores"."Proba_4" AS "Proba_4", "ADA_Sum_Scores"."Score_5" AS "Score_5", "ADA_Sum_Scores"."Proba_5" AS "Proba_5", "ADA_Sum_Scores"."Score_6" AS "Score_6", "ADA_Sum_Scores"."Proba_6" AS "Proba_6", "ADA_Sum_Scores"."Score_7" AS "Score_7", "ADA_Sum_Scores"."Proba_7" AS "Proba_7", "ADA_Sum_Scores"."Score_8" AS "Score_8", "ADA_Sum_Scores"."Proba_8" AS "Proba_8", "ADA_Sum_Scores"."Score_9" AS "Score_9", "ADA_Sum_Scores"."Proba_9" AS "Proba_9" 
FROM "ADA_Sum_Scores"), 
"AdaBoost_AVG_Scores" AS 
(SELECT "AdaBoost_AVG_Scores_BN"."KEY" AS "KEY", "AdaBoost_AVG_Scores_BN"."Score_0" AS "Score_0", exp(("AdaBoost_AVG_Scores_BN"."Proba_0" / 32.0) / 9) / (exp(("AdaBoost_AVG_Scores_BN"."Proba_0" / 32.0) / 9) + exp(("AdaBoost_AVG_Scores_BN"."Proba_1" / 32.0) / 9) + exp(("AdaBoost_AVG_Scores_BN"."Proba_2" / 32.0) / 9) + exp(("AdaBoost_AVG_Scores_BN"."Proba_3" / 32.0) / 9) + exp(("AdaBoost_AVG_Scores_BN"."Proba_4" / 32.0) / 9) + exp(("AdaBoost_AVG_Scores_BN"."Proba_5" / 32.0) / 9) + exp(("AdaBoost_AVG_Scores_BN"."Proba_6" / 32.0) / 9) + exp(("AdaBoost_AVG_Scores_BN"."Proba_7" / 32.0) / 9) + exp(("AdaBoost_AVG_Scores_BN"."Proba_8" / 32.0) / 9) + exp(("AdaBoost_AVG_Scores_BN"."Proba_9" / 32.0) / 9)) AS "Proba_0", CAST(NULL AS FLOAT) AS "LogProba_0", "AdaBoost_AVG_Scores_BN"."Score_1" AS "Score_1", exp(("AdaBoost_AVG_Scores_BN"."Proba_1" / 32.0) / 9) / (exp(("AdaBoost_AVG_Scores_BN"."Proba_0" / 32.0) / 9) + exp(("AdaBoost_AVG_Scores_BN"."Proba_1" / 32.0) / 9) + exp(("AdaBoost_AVG_Scores_BN"."Proba_2" / 32.0) / 9) + exp(("AdaBoost_AVG_Scores_BN"."Proba_3" / 32.0) / 9) + exp(("AdaBoost_AVG_Scores_BN"."Proba_4" / 32.0) / 9) + exp(("AdaBoost_AVG_Scores_BN"."Proba_5" / 32.0) / 9) + exp(("AdaBoost_AVG_Scores_BN"."Proba_6" / 32.0) / 9) + exp(("AdaBoost_AVG_Scores_BN"."Proba_7" / 32.0) / 9) + exp(("AdaBoost_AVG_Scores_BN"."Proba_8" / 32.0) / 9) + exp(("AdaBoost_AVG_Scores_BN"."Proba_9" / 32.0) / 9)) AS "Proba_1", CAST(NULL AS FLOAT) AS "LogProba_1", "AdaBoost_AVG_Scores_BN"."Score_2" AS "Score_2", exp(("AdaBoost_AVG_Scores_BN"."Proba_2" / 32.0) / 9) / (exp(("AdaBoost_AVG_Scores_BN"."Proba_0" / 32.0) / 9) + exp(("AdaBoost_AVG_Scores_BN"."Proba_1" / 32.0) / 9) + exp(("AdaBoost_AVG_Scores_BN"."Proba_2" / 32.0) / 9) + exp(("AdaBoost_AVG_Scores_BN"."Proba_3" / 32.0) / 9) + exp(("AdaBoost_AVG_Scores_BN"."Proba_4" / 32.0) / 9) + exp(("AdaBoost_AVG_Scores_BN"."Proba_5" / 32.0) / 9) + exp(("AdaBoost_AVG_Scores_BN"."Proba_6" / 32.0) / 9) + exp(("AdaBoost_AVG_Scores_BN"."Proba_7" / 32.0) / 9) + exp(("AdaBoost_AVG_Scores_BN"."Proba_8" / 32.0) / 9) + exp(("AdaBoost_AVG_Scores_BN"."Proba_9" / 32.0) / 9)) AS "Proba_2", CAST(NULL AS FLOAT) AS "LogProba_2", "AdaBoost_AVG_Scores_BN"."Score_3" AS "Score_3", exp(("AdaBoost_AVG_Scores_BN"."Proba_3" / 32.0) / 9) / (exp(("AdaBoost_AVG_Scores_BN"."Proba_0" / 32.0) / 9) + exp(("AdaBoost_AVG_Scores_BN"."Proba_1" / 32.0) / 9) + exp(("AdaBoost_AVG_Scores_BN"."Proba_2" / 32.0) / 9) + exp(("AdaBoost_AVG_Scores_BN"."Proba_3" / 32.0) / 9) + exp(("AdaBoost_AVG_Scores_BN"."Proba_4" / 32.0) / 9) + exp(("AdaBoost_AVG_Scores_BN"."Proba_5" / 32.0) / 9) + exp(("AdaBoost_AVG_Scores_BN"."Proba_6" / 32.0) / 9) + exp(("AdaBoost_AVG_Scores_BN"."Proba_7" / 32.0) / 9) + exp(("AdaBoost_AVG_Scores_BN"."Proba_8" / 32.0) / 9) + exp(("AdaBoost_AVG_Scores_BN"."Proba_9" / 32.0) / 9)) AS "Proba_3", CAST(NULL AS FLOAT) AS "LogProba_3", "AdaBoost_AVG_Scores_BN"."Score_4" AS "Score_4", exp(("AdaBoost_AVG_Scores_BN"."Proba_4" / 32.0) / 9) / (exp(("AdaBoost_AVG_Scores_BN"."Proba_0" / 32.0) / 9) + exp(("AdaBoost_AVG_Scores_BN"."Proba_1" / 32.0) / 9) + exp(("AdaBoost_AVG_Scores_BN"."Proba_2" / 32.0) / 9) + exp(("AdaBoost_AVG_Scores_BN"."Proba_3" / 32.0) / 9) + exp(("AdaBoost_AVG_Scores_BN"."Proba_4" / 32.0) / 9) + exp(("AdaBoost_AVG_Scores_BN"."Proba_5" / 32.0) / 9) + exp(("AdaBoost_AVG_Scores_BN"."Proba_6" / 32.0) / 9) + exp(("AdaBoost_AVG_Scores_BN"."Proba_7" / 32.0) / 9) + exp(("AdaBoost_AVG_Scores_BN"."Proba_8" / 32.0) / 9) + exp(("AdaBoost_AVG_Scores_BN"."Proba_9" / 32.0) / 9)) AS "Proba_4", CAST(NULL AS FLOAT) AS "LogProba_4", "AdaBoost_AVG_Scores_BN"."Score_5" AS "Score_5", exp(("AdaBoost_AVG_Scores_BN"."Proba_5" / 32.0) / 9) / (exp(("AdaBoost_AVG_Scores_BN"."Proba_0" / 32.0) / 9) + exp(("AdaBoost_AVG_Scores_BN"."Proba_1" / 32.0) / 9) + exp(("AdaBoost_AVG_Scores_BN"."Proba_2" / 32.0) / 9) + exp(("AdaBoost_AVG_Scores_BN"."Proba_3" / 32.0) / 9) + exp(("AdaBoost_AVG_Scores_BN"."Proba_4" / 32.0) / 9) + exp(("AdaBoost_AVG_Scores_BN"."Proba_5" / 32.0) / 9) + exp(("AdaBoost_AVG_Scores_BN"."Proba_6" / 32.0) / 9) + exp(("AdaBoost_AVG_Scores_BN"."Proba_7" / 32.0) / 9) + exp(("AdaBoost_AVG_Scores_BN"."Proba_8" / 32.0) / 9) + exp(("AdaBoost_AVG_Scores_BN"."Proba_9" / 32.0) / 9)) AS "Proba_5", CAST(NULL AS FLOAT) AS "LogProba_5", "AdaBoost_AVG_Scores_BN"."Score_6" AS "Score_6", exp(("AdaBoost_AVG_Scores_BN"."Proba_6" / 32.0) / 9) / (exp(("AdaBoost_AVG_Scores_BN"."Proba_0" / 32.0) / 9) + exp(("AdaBoost_AVG_Scores_BN"."Proba_1" / 32.0) / 9) + exp(("AdaBoost_AVG_Scores_BN"."Proba_2" / 32.0) / 9) + exp(("AdaBoost_AVG_Scores_BN"."Proba_3" / 32.0) / 9) + exp(("AdaBoost_AVG_Scores_BN"."Proba_4" / 32.0) / 9) + exp(("AdaBoost_AVG_Scores_BN"."Proba_5" / 32.0) / 9) + exp(("AdaBoost_AVG_Scores_BN"."Proba_6" / 32.0) / 9) + exp(("AdaBoost_AVG_Scores_BN"."Proba_7" / 32.0) / 9) + exp(("AdaBoost_AVG_Scores_BN"."Proba_8" / 32.0) / 9) + exp(("AdaBoost_AVG_Scores_BN"."Proba_9" / 32.0) / 9)) AS "Proba_6", CAST(NULL AS FLOAT) AS "LogProba_6", "AdaBoost_AVG_Scores_BN"."Score_7" AS "Score_7", exp(("AdaBoost_AVG_Scores_BN"."Proba_7" / 32.0) / 9) / (exp(("AdaBoost_AVG_Scores_BN"."Proba_0" / 32.0) / 9) + exp(("AdaBoost_AVG_Scores_BN"."Proba_1" / 32.0) / 9) + exp(("AdaBoost_AVG_Scores_BN"."Proba_2" / 32.0) / 9) + exp(("AdaBoost_AVG_Scores_BN"."Proba_3" / 32.0) / 9) + exp(("AdaBoost_AVG_Scores_BN"."Proba_4" / 32.0) / 9) + exp(("AdaBoost_AVG_Scores_BN"."Proba_5" / 32.0) / 9) + exp(("AdaBoost_AVG_Scores_BN"."Proba_6" / 32.0) / 9) + exp(("AdaBoost_AVG_Scores_BN"."Proba_7" / 32.0) / 9) + exp(("AdaBoost_AVG_Scores_BN"."Proba_8" / 32.0) / 9) + exp(("AdaBoost_AVG_Scores_BN"."Proba_9" / 32.0) / 9)) AS "Proba_7", CAST(NULL AS FLOAT) AS "LogProba_7", "AdaBoost_AVG_Scores_BN"."Score_8" AS "Score_8", exp(("AdaBoost_AVG_Scores_BN"."Proba_8" / 32.0) / 9) / (exp(("AdaBoost_AVG_Scores_BN"."Proba_0" / 32.0) / 9) + exp(("AdaBoost_AVG_Scores_BN"."Proba_1" / 32.0) / 9) + exp(("AdaBoost_AVG_Scores_BN"."Proba_2" / 32.0) / 9) + exp(("AdaBoost_AVG_Scores_BN"."Proba_3" / 32.0) / 9) + exp(("AdaBoost_AVG_Scores_BN"."Proba_4" / 32.0) / 9) + exp(("AdaBoost_AVG_Scores_BN"."Proba_5" / 32.0) / 9) + exp(("AdaBoost_AVG_Scores_BN"."Proba_6" / 32.0) / 9) + exp(("AdaBoost_AVG_Scores_BN"."Proba_7" / 32.0) / 9) + exp(("AdaBoost_AVG_Scores_BN"."Proba_8" / 32.0) / 9) + exp(("AdaBoost_AVG_Scores_BN"."Proba_9" / 32.0) / 9)) AS "Proba_8", CAST(NULL AS FLOAT) AS "LogProba_8", "AdaBoost_AVG_Scores_BN"."Score_9" AS "Score_9", exp(("AdaBoost_AVG_Scores_BN"."Proba_9" / 32.0) / 9) / (exp(("AdaBoost_AVG_Scores_BN"."Proba_0" / 32.0) / 9) + exp(("AdaBoost_AVG_Scores_BN"."Proba_1" / 32.0) / 9) + exp(("AdaBoost_AVG_Scores_BN"."Proba_2" / 32.0) / 9) + exp(("AdaBoost_AVG_Scores_BN"."Proba_3" / 32.0) / 9) + exp(("AdaBoost_AVG_Scores_BN"."Proba_4" / 32.0) / 9) + exp(("AdaBoost_AVG_Scores_BN"."Proba_5" / 32.0) / 9) + exp(("AdaBoost_AVG_Scores_BN"."Proba_6" / 32.0) / 9) + exp(("AdaBoost_AVG_Scores_BN"."Proba_7" / 32.0) / 9) + exp(("AdaBoost_AVG_Scores_BN"."Proba_8" / 32.0) / 9) + exp(("AdaBoost_AVG_Scores_BN"."Proba_9" / 32.0) / 9)) AS "Proba_9", CAST(NULL AS FLOAT) AS "LogProba_9" 
FROM "AdaBoost_AVG_Scores_BN"), 
orig_cte AS 
(SELECT "AdaBoost_AVG_Scores"."KEY" AS "KEY", "AdaBoost_AVG_Scores"."Score_0" AS "Score_0", "AdaBoost_AVG_Scores"."Score_1" AS "Score_1", "AdaBoost_AVG_Scores"."Score_2" AS "Score_2", "AdaBoost_AVG_Scores"."Score_3" AS "Score_3", "AdaBoost_AVG_Scores"."Score_4" AS "Score_4", "AdaBoost_AVG_Scores"."Score_5" AS "Score_5", "AdaBoost_AVG_Scores"."Score_6" AS "Score_6", "AdaBoost_AVG_Scores"."Score_7" AS "Score_7", "AdaBoost_AVG_Scores"."Score_8" AS "Score_8", "AdaBoost_AVG_Scores"."Score_9" AS "Score_9", "AdaBoost_AVG_Scores"."Proba_0" AS "Proba_0", "AdaBoost_AVG_Scores"."Proba_1" AS "Proba_1", "AdaBoost_AVG_Scores"."Proba_2" AS "Proba_2", "AdaBoost_AVG_Scores"."Proba_3" AS "Proba_3", "AdaBoost_AVG_Scores"."Proba_4" AS "Proba_4", "AdaBoost_AVG_Scores"."Proba_5" AS "Proba_5", "AdaBoost_AVG_Scores"."Proba_6" AS "Proba_6", "AdaBoost_AVG_Scores"."Proba_7" AS "Proba_7", "AdaBoost_AVG_Scores"."Proba_8" AS "Proba_8", "AdaBoost_AVG_Scores"."Proba_9" AS "Proba_9", "AdaBoost_AVG_Scores"."LogProba_0" AS "LogProba_0", "AdaBoost_AVG_Scores"."LogProba_1" AS "LogProba_1", "AdaBoost_AVG_Scores"."LogProba_2" AS "LogProba_2", "AdaBoost_AVG_Scores"."LogProba_3" AS "LogProba_3", "AdaBoost_AVG_Scores"."LogProba_4" AS "LogProba_4", "AdaBoost_AVG_Scores"."LogProba_5" AS "LogProba_5", "AdaBoost_AVG_Scores"."LogProba_6" AS "LogProba_6", "AdaBoost_AVG_Scores"."LogProba_7" AS "LogProba_7", "AdaBoost_AVG_Scores"."LogProba_8" AS "LogProba_8", "AdaBoost_AVG_Scores"."LogProba_9" AS "LogProba_9", CAST(NULL AS INTEGER) AS "Decision", CAST(NULL AS FLOAT) AS "DecisionProba" 
FROM "AdaBoost_AVG_Scores"), 
score_class_union AS 
(SELECT scu."KEY_u" AS "KEY_u", scu.class AS class, scu."LogProba" AS "LogProba", scu."Proba" AS "Proba", scu."Score" AS "Score" 
FROM (SELECT orig_cte."KEY" AS "KEY_u", 0 AS class, orig_cte."LogProba_0" AS "LogProba", orig_cte."Proba_0" AS "Proba", orig_cte."Score_0" AS "Score" 
FROM orig_cte UNION ALL SELECT orig_cte."KEY" AS "KEY_u", 1 AS class, orig_cte."LogProba_1" AS "LogProba", orig_cte."Proba_1" AS "Proba", orig_cte."Score_1" AS "Score" 
FROM orig_cte UNION ALL SELECT orig_cte."KEY" AS "KEY_u", 2 AS class, orig_cte."LogProba_2" AS "LogProba", orig_cte."Proba_2" AS "Proba", orig_cte."Score_2" AS "Score" 
FROM orig_cte UNION ALL SELECT orig_cte."KEY" AS "KEY_u", 3 AS class, orig_cte."LogProba_3" AS "LogProba", orig_cte."Proba_3" AS "Proba", orig_cte."Score_3" AS "Score" 
FROM orig_cte UNION ALL SELECT orig_cte."KEY" AS "KEY_u", 4 AS class, orig_cte."LogProba_4" AS "LogProba", orig_cte."Proba_4" AS "Proba", orig_cte."Score_4" AS "Score" 
FROM orig_cte UNION ALL SELECT orig_cte."KEY" AS "KEY_u", 5 AS class, orig_cte."LogProba_5" AS "LogProba", orig_cte."Proba_5" AS "Proba", orig_cte."Score_5" AS "Score" 
FROM orig_cte UNION ALL SELECT orig_cte."KEY" AS "KEY_u", 6 AS class, orig_cte."LogProba_6" AS "LogProba", orig_cte."Proba_6" AS "Proba", orig_cte."Score_6" AS "Score" 
FROM orig_cte UNION ALL SELECT orig_cte."KEY" AS "KEY_u", 7 AS class, orig_cte."LogProba_7" AS "LogProba", orig_cte."Proba_7" AS "Proba", orig_cte."Score_7" AS "Score" 
FROM orig_cte UNION ALL SELECT orig_cte."KEY" AS "KEY_u", 8 AS class, orig_cte."LogProba_8" AS "LogProba", orig_cte."Proba_8" AS "Proba", orig_cte."Score_8" AS "Score" 
FROM orig_cte UNION ALL SELECT orig_cte."KEY" AS "KEY_u", 9 AS class, orig_cte."LogProba_9" AS "LogProba", orig_cte."Proba_9" AS "Proba", orig_cte."Score_9" AS "Score" 
FROM orig_cte) scu), 
score_max AS 
(SELECT orig_cte."KEY" AS "KEY", orig_cte."Score_0" AS "Score_0", orig_cte."Score_1" AS "Score_1", orig_cte."Score_2" AS "Score_2", orig_cte."Score_3" AS "Score_3", orig_cte."Score_4" AS "Score_4", orig_cte."Score_5" AS "Score_5", orig_cte."Score_6" AS "Score_6", orig_cte."Score_7" AS "Score_7", orig_cte."Score_8" AS "Score_8", orig_cte."Score_9" AS "Score_9", orig_cte."Proba_0" AS "Proba_0", orig_cte."Proba_1" AS "Proba_1", orig_cte."Proba_2" AS "Proba_2", orig_cte."Proba_3" AS "Proba_3", orig_cte."Proba_4" AS "Proba_4", orig_cte."Proba_5" AS "Proba_5", orig_cte."Proba_6" AS "Proba_6", orig_cte."Proba_7" AS "Proba_7", orig_cte."Proba_8" AS "Proba_8", orig_cte."Proba_9" AS "Proba_9", orig_cte."LogProba_0" AS "LogProba_0", orig_cte."LogProba_1" AS "LogProba_1", orig_cte."LogProba_2" AS "LogProba_2", orig_cte."LogProba_3" AS "LogProba_3", orig_cte."LogProba_4" AS "LogProba_4", orig_cte."LogProba_5" AS "LogProba_5", orig_cte."LogProba_6" AS "LogProba_6", orig_cte."LogProba_7" AS "LogProba_7", orig_cte."LogProba_8" AS "LogProba_8", orig_cte."LogProba_9" AS "LogProba_9", orig_cte."Decision" AS "Decision", orig_cte."DecisionProba" AS "DecisionProba", max_select."KEY_m" AS "KEY_m", max_select."max_Score" AS "max_Score" 
FROM orig_cte LEFT OUTER JOIN (SELECT score_class_union."KEY_u" AS "KEY_m", max(score_class_union."Score") AS "max_Score" 
FROM score_class_union GROUP BY score_class_union."KEY_u") max_select ON orig_cte."KEY" = max_select."KEY_m"), 
union_with_max AS 
(SELECT score_class_union."KEY_u" AS "KEY_u", score_class_union.class AS class, score_class_union."LogProba" AS "LogProba", score_class_union."Proba" AS "Proba", score_class_union."Score" AS "Score", score_max."KEY" AS "KEY", score_max."Score_0" AS "Score_0", score_max."Score_1" AS "Score_1", score_max."Score_2" AS "Score_2", score_max."Score_3" AS "Score_3", score_max."Score_4" AS "Score_4", score_max."Score_5" AS "Score_5", score_max."Score_6" AS "Score_6", score_max."Score_7" AS "Score_7", score_max."Score_8" AS "Score_8", score_max."Score_9" AS "Score_9", score_max."Proba_0" AS "Proba_0", score_max."Proba_1" AS "Proba_1", score_max."Proba_2" AS "Proba_2", score_max."Proba_3" AS "Proba_3", score_max."Proba_4" AS "Proba_4", score_max."Proba_5" AS "Proba_5", score_max."Proba_6" AS "Proba_6", score_max."Proba_7" AS "Proba_7", score_max."Proba_8" AS "Proba_8", score_max."Proba_9" AS "Proba_9", score_max."LogProba_0" AS "LogProba_0", score_max."LogProba_1" AS "LogProba_1", score_max."LogProba_2" AS "LogProba_2", score_max."LogProba_3" AS "LogProba_3", score_max."LogProba_4" AS "LogProba_4", score_max."LogProba_5" AS "LogProba_5", score_max."LogProba_6" AS "LogProba_6", score_max."LogProba_7" AS "LogProba_7", score_max."LogProba_8" AS "LogProba_8", score_max."LogProba_9" AS "LogProba_9", score_max."Decision" AS "Decision", score_max."DecisionProba" AS "DecisionProba", score_max."KEY_m" AS "KEY_m", score_max."max_Score" AS "max_Score" 
FROM score_class_union LEFT OUTER JOIN score_max ON score_class_union."KEY_u" = score_max."KEY"), 
arg_max_cte AS 
(SELECT score_max."KEY" AS "KEY", score_max."Score_0" AS "Score_0", score_max."Score_1" AS "Score_1", score_max."Score_2" AS "Score_2", score_max."Score_3" AS "Score_3", score_max."Score_4" AS "Score_4", score_max."Score_5" AS "Score_5", score_max."Score_6" AS "Score_6", score_max."Score_7" AS "Score_7", score_max."Score_8" AS "Score_8", score_max."Score_9" AS "Score_9", score_max."Proba_0" AS "Proba_0", score_max."Proba_1" AS "Proba_1", score_max."Proba_2" AS "Proba_2", score_max."Proba_3" AS "Proba_3", score_max."Proba_4" AS "Proba_4", score_max."Proba_5" AS "Proba_5", score_max."Proba_6" AS "Proba_6", score_max."Proba_7" AS "Proba_7", score_max."Proba_8" AS "Proba_8", score_max."Proba_9" AS "Proba_9", score_max."LogProba_0" AS "LogProba_0", score_max."LogProba_1" AS "LogProba_1", score_max."LogProba_2" AS "LogProba_2", score_max."LogProba_3" AS "LogProba_3", score_max."LogProba_4" AS "LogProba_4", score_max."LogProba_5" AS "LogProba_5", score_max."LogProba_6" AS "LogProba_6", score_max."LogProba_7" AS "LogProba_7", score_max."LogProba_8" AS "LogProba_8", score_max."LogProba_9" AS "LogProba_9", score_max."Decision" AS "Decision", score_max."DecisionProba" AS "DecisionProba", score_max."KEY_m" AS "KEY_m", score_max."max_Score" AS "max_Score", "arg_max_t_Score"."KEY_Score" AS "KEY_Score", "arg_max_t_Score"."arg_max_Score" AS "arg_max_Score" 
FROM score_max LEFT OUTER JOIN (SELECT union_with_max."KEY" AS "KEY_Score", min(union_with_max.class) AS "arg_max_Score" 
FROM union_with_max 
WHERE union_with_max."max_Score" <= union_with_max."Score" GROUP BY union_with_max."KEY") "arg_max_t_Score" ON score_max."KEY" = "arg_max_t_Score"."KEY_Score")
 SELECT arg_max_cte."KEY" AS "KEY", arg_max_cte."Score_0" AS "Score_0", arg_max_cte."Score_1" AS "Score_1", arg_max_cte."Score_2" AS "Score_2", arg_max_cte."Score_3" AS "Score_3", arg_max_cte."Score_4" AS "Score_4", arg_max_cte."Score_5" AS "Score_5", arg_max_cte."Score_6" AS "Score_6", arg_max_cte."Score_7" AS "Score_7", arg_max_cte."Score_8" AS "Score_8", arg_max_cte."Score_9" AS "Score_9", arg_max_cte."Proba_0" AS "Proba_0", arg_max_cte."Proba_1" AS "Proba_1", arg_max_cte."Proba_2" AS "Proba_2", arg_max_cte."Proba_3" AS "Proba_3", arg_max_cte."Proba_4" AS "Proba_4", arg_max_cte."Proba_5" AS "Proba_5", arg_max_cte."Proba_6" AS "Proba_6", arg_max_cte."Proba_7" AS "Proba_7", arg_max_cte."Proba_8" AS "Proba_8", arg_max_cte."Proba_9" AS "Proba_9", CASE WHEN (arg_max_cte."Proba_0" IS NULL OR arg_max_cte."Proba_0" > 0.0) THEN ln(arg_max_cte."Proba_0") ELSE -BINARY_FLOAT_INFINITY END AS "LogProba_0", CASE WHEN (arg_max_cte."Proba_1" IS NULL OR arg_max_cte."Proba_1" > 0.0) THEN ln(arg_max_cte."Proba_1") ELSE -BINARY_FLOAT_INFINITY END AS "LogProba_1", CASE WHEN (arg_max_cte."Proba_2" IS NULL OR arg_max_cte."Proba_2" > 0.0) THEN ln(arg_max_cte."Proba_2") ELSE -BINARY_FLOAT_INFINITY END AS "LogProba_2", CASE WHEN (arg_max_cte."Proba_3" IS NULL OR arg_max_cte."Proba_3" > 0.0) THEN ln(arg_max_cte."Proba_3") ELSE -BINARY_FLOAT_INFINITY END AS "LogProba_3", CASE WHEN (arg_max_cte."Proba_4" IS NULL OR arg_max_cte."Proba_4" > 0.0) THEN ln(arg_max_cte."Proba_4") ELSE -BINARY_FLOAT_INFINITY END AS "LogProba_4", CASE WHEN (arg_max_cte."Proba_5" IS NULL OR arg_max_cte."Proba_5" > 0.0) THEN ln(arg_max_cte."Proba_5") ELSE -BINARY_FLOAT_INFINITY END AS "LogProba_5", CASE WHEN (arg_max_cte."Proba_6" IS NULL OR arg_max_cte."Proba_6" > 0.0) THEN ln(arg_max_cte."Proba_6") ELSE -BINARY_FLOAT_INFINITY END AS "LogProba_6", CASE WHEN (arg_max_cte."Proba_7" IS NULL OR arg_max_cte."Proba_7" > 0.0) THEN ln(arg_max_cte."Proba_7") ELSE -BINARY_FLOAT_INFINITY END AS "LogProba_7", CASE WHEN (arg_max_cte."Proba_8" IS NULL OR arg_max_cte."Proba_8" > 0.0) THEN ln(arg_max_cte."Proba_8") ELSE -BINARY_FLOAT_INFINITY END AS "LogProba_8", CASE WHEN (arg_max_cte."Proba_9" IS NULL OR arg_max_cte."Proba_9" > 0.0) THEN ln(arg_max_cte."Proba_9") ELSE -BINARY_FLOAT_INFINITY END AS "LogProba_9", arg_max_cte."arg_max_Score" AS "Decision", CASE WHEN (arg_max_cte."arg_max_Score" = 0) THEN arg_max_cte."Proba_0" WHEN (arg_max_cte."arg_max_Score" = 1) THEN arg_max_cte."Proba_1" WHEN (arg_max_cte."arg_max_Score" = 2) THEN arg_max_cte."Proba_2" WHEN (arg_max_cte."arg_max_Score" = 3) THEN arg_max_cte."Proba_3" WHEN (arg_max_cte."arg_max_Score" = 4) THEN arg_max_cte."Proba_4" WHEN (arg_max_cte."arg_max_Score" = 5) THEN arg_max_cte."Proba_5" WHEN (arg_max_cte."arg_max_Score" = 6) THEN arg_max_cte."Proba_6" WHEN (arg_max_cte."arg_max_Score" = 7) THEN arg_max_cte."Proba_7" WHEN (arg_max_cte."arg_max_Score" = 8) THEN arg_max_cte."Proba_8" WHEN (arg_max_cte."arg_max_Score" = 9) THEN arg_max_cte."Proba_9" END AS "DecisionProba" 
FROM arg_max_cte