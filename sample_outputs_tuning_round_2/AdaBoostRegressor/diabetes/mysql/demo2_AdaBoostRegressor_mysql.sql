-- This SQL code was generated by sklearn2sql (development version).
-- Copyright 2017

WITH `WeightedEstimators_0` AS 
(WITH `DT_node_lookup` AS 
(SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_8` <= -0.005612778477370739) THEN CASE WHEN (`ADS`.`Feature_2` <= 0.0061888848431408405) THEN CASE WHEN (`ADS`.`Feature_8` <= -0.04327875375747681) THEN 3 ELSE 4 END ELSE CASE WHEN (`ADS`.`Feature_6` <= -0.061809033155441284) THEN 6 ELSE 7 END END ELSE CASE WHEN (`ADS`.`Feature_2` <= 0.06654636561870575) THEN CASE WHEN (`ADS`.`Feature_2` <= -0.00782267190515995) THEN 10 ELSE 11 END ELSE CASE WHEN (`ADS`.`Feature_5` <= 0.02671290934085846) THEN 13 ELSE 14 END END END AS node_id_2 
FROM diabetes AS `ADS`), 
`DT_node_data` AS 
(SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Estimator` AS `Estimator` 
FROM (SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 45 AS count, 3 AS depth, 2 AS parent_id, 76.73333333333333 AS `Estimator` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 89 AS count, 3 AS depth, 2 AS parent_id, 106.52808988764045 AS `Estimator` UNION ALL SELECT 6 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS count, 3 AS depth, 5 AS parent_id, 244.0 AS `Estimator` UNION ALL SELECT 7 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 27 AS count, 3 AS depth, 5 AS parent_id, 155.5185185185185 AS `Estimator` UNION ALL SELECT 10 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 60 AS count, 3 AS depth, 9 AS parent_id, 155.5 AS `Estimator` UNION ALL SELECT 11 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 105 AS count, 3 AS depth, 9 AS parent_id, 198.71428571428572 AS `Estimator` UNION ALL SELECT 13 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 19 AS count, 3 AS depth, 12 AS parent_id, 297.3157894736842 AS `Estimator` UNION ALL SELECT 14 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 6 AS count, 3 AS depth, 12 AS parent_id, 223.5 AS `Estimator`) AS `Values`), 
`DT_Output` AS 
(SELECT `DT_node_lookup`.`KEY` AS `KEY`, `DT_node_lookup`.node_id_2 AS node_id_2, `DT_node_data`.node_id AS node_id, `DT_node_data`.feature AS feature, `DT_node_data`.threshold AS threshold, `DT_node_data`.count AS count, `DT_node_data`.depth AS depth, `DT_node_data`.parent_id AS parent_id, `DT_node_data`.`Estimator` AS `Estimator` 
FROM `DT_node_lookup` LEFT OUTER JOIN `DT_node_data` ON `DT_node_lookup`.node_id_2 = `DT_node_data`.node_id), 
`AdaBoost_Estim_0` AS 
(SELECT `DT_Output`.`KEY` AS `KEY`, `DT_Output`.`Estimator` AS `Estimator`, 0.321205997312 AS `Weight`, 0 AS est_index 
FROM `DT_Output`), 
`DT_node_lookup_1` AS 
(SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_3` <= 0.03679146245121956) THEN CASE WHEN (`ADS`.`Feature_7` <= 0.03135676681995392) THEN CASE WHEN (`ADS`.`Feature_2` <= 0.07247433066368103) THEN 3 ELSE 4 END ELSE CASE WHEN (`ADS`.`Feature_3` <= -0.04182075336575508) THEN 6 ELSE 7 END END ELSE CASE WHEN (`ADS`.`Feature_6` <= 0.021027816459536552) THEN CASE WHEN (`ADS`.`Feature_2` <= 0.07894119620323181) THEN 10 ELSE 11 END ELSE CASE WHEN (`ADS`.`Feature_8` <= 0.03883656859397888) THEN 13 ELSE 14 END END END AS node_id_2 
FROM diabetes AS `ADS`), 
`DT_node_data_1` AS 
(SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Estimator` AS `Estimator` 
FROM (SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 179 AS count, 3 AS depth, 2 AS parent_id, 106.35754189944134 AS `Estimator` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 6 AS count, 3 AS depth, 2 AS parent_id, 219.66666666666666 AS `Estimator` UNION ALL SELECT 6 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 15 AS count, 3 AS depth, 5 AS parent_id, 131.06666666666666 AS `Estimator` UNION ALL SELECT 7 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 49 AS count, 3 AS depth, 5 AS parent_id, 197.14285714285714 AS `Estimator` UNION ALL SELECT 10 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 77 AS count, 3 AS depth, 9 AS parent_id, 218.5064935064935 AS `Estimator` UNION ALL SELECT 11 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 15 AS count, 3 AS depth, 9 AS parent_id, 291.26666666666665 AS `Estimator` UNION ALL SELECT 13 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 10 AS count, 3 AS depth, 12 AS parent_id, 103.8 AS `Estimator` UNION ALL SELECT 14 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS count, 3 AS depth, 12 AS parent_id, 201.0 AS `Estimator`) AS `Values`), 
`DT_Output_1` AS 
(SELECT `DT_node_lookup_1`.`KEY` AS `KEY`, `DT_node_lookup_1`.node_id_2 AS node_id_2, `DT_node_data_1`.node_id AS node_id, `DT_node_data_1`.feature AS feature, `DT_node_data_1`.threshold AS threshold, `DT_node_data_1`.count AS count, `DT_node_data_1`.depth AS depth, `DT_node_data_1`.parent_id AS parent_id, `DT_node_data_1`.`Estimator` AS `Estimator` 
FROM `DT_node_lookup_1` LEFT OUTER JOIN `DT_node_data_1` ON `DT_node_lookup_1`.node_id_2 = `DT_node_data_1`.node_id), 
`AdaBoost_Estim_1` AS 
(SELECT `DT_Output_1`.`KEY` AS `KEY`, `DT_Output_1`.`Estimator` AS `Estimator`, 0.279494367859 AS `Weight`, 1 AS est_index 
FROM `DT_Output_1`), 
`DT_node_lookup_2` AS 
(SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_8` <= -0.019742898643016815) THEN CASE WHEN (`ADS`.`Feature_3` <= 0.06835110485553741) THEN CASE WHEN (`ADS`.`Feature_2` <= 0.00996122695505619) THEN 3 ELSE 4 END ELSE CASE WHEN (`ADS`.`Feature_1` <= 0.003019241616129875) THEN 6 ELSE 7 END END ELSE CASE WHEN (`ADS`.`Feature_2` <= 0.06977979838848114) THEN CASE WHEN (`ADS`.`Feature_3` <= 0.03679146245121956) THEN 10 ELSE 11 END ELSE CASE WHEN (`ADS`.`Feature_5` <= 0.020136792212724686) THEN 13 ELSE 14 END END END AS node_id_2 
FROM diabetes AS `ADS`), 
`DT_node_data_2` AS 
(SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Estimator` AS `Estimator` 
FROM (SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 90 AS count, 3 AS depth, 2 AS parent_id, 95.83333333333333 AS `Estimator` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 18 AS count, 3 AS depth, 2 AS parent_id, 136.88888888888889 AS `Estimator` UNION ALL SELECT 6 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 8 AS count, 3 AS depth, 5 AS parent_id, 235.25 AS `Estimator` UNION ALL SELECT 7 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS count, 3 AS depth, 5 AS parent_id, 150.5 AS `Estimator` UNION ALL SELECT 10 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 155 AS count, 3 AS depth, 9 AS parent_id, 162.04516129032257 AS `Estimator` UNION ALL SELECT 11 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 51 AS count, 3 AS depth, 9 AS parent_id, 221.15686274509804 AS `Estimator` UNION ALL SELECT 13 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 18 AS count, 3 AS depth, 12 AS parent_id, 298.1666666666667 AS `Estimator` UNION ALL SELECT 14 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 11 AS count, 3 AS depth, 12 AS parent_id, 217.54545454545453 AS `Estimator`) AS `Values`), 
`DT_Output_2` AS 
(SELECT `DT_node_lookup_2`.`KEY` AS `KEY`, `DT_node_lookup_2`.node_id_2 AS node_id_2, `DT_node_data_2`.node_id AS node_id, `DT_node_data_2`.feature AS feature, `DT_node_data_2`.threshold AS threshold, `DT_node_data_2`.count AS count, `DT_node_data_2`.depth AS depth, `DT_node_data_2`.parent_id AS parent_id, `DT_node_data_2`.`Estimator` AS `Estimator` 
FROM `DT_node_lookup_2` LEFT OUTER JOIN `DT_node_data_2` ON `DT_node_lookup_2`.node_id_2 = `DT_node_data_2`.node_id), 
`AdaBoost_Estim_2` AS 
(SELECT `DT_Output_2`.`KEY` AS `KEY`, `DT_Output_2`.`Estimator` AS `Estimator`, 0.183346546932 AS `Weight`, 2 AS est_index 
FROM `DT_Output_2`), 
`DT_node_lookup_3` AS 
(SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_8` <= 0.00026727162185125053) THEN CASE WHEN (`ADS`.`Feature_2` <= 0.004033260513097048) THEN CASE WHEN (`ADS`.`Feature_5` <= 0.11267216503620148) THEN 3 ELSE 4 END ELSE CASE WHEN (`ADS`.`Feature_0` <= -0.07634904980659485) THEN 6 ELSE 7 END END ELSE CASE WHEN (`ADS`.`Feature_5` <= 0.06663933396339417) THEN CASE WHEN (`ADS`.`Feature_0` <= -0.029126055538654327) THEN 10 ELSE 11 END ELSE CASE WHEN (`ADS`.`Feature_8` <= 0.05185259133577347) THEN 13 ELSE 14 END END END AS node_id_2 
FROM diabetes AS `ADS`), 
`DT_node_data_3` AS 
(SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Estimator` AS `Estimator` 
FROM (SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 130 AS count, 3 AS depth, 2 AS parent_id, 100.7 AS `Estimator` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS count, 3 AS depth, 2 AS parent_id, 253.0 AS `Estimator` UNION ALL SELECT 6 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 5 AS count, 3 AS depth, 5 AS parent_id, 302.0 AS `Estimator` UNION ALL SELECT 7 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 45 AS count, 3 AS depth, 5 AS parent_id, 158.17777777777778 AS `Estimator` UNION ALL SELECT 10 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 34 AS count, 3 AS depth, 9 AS parent_id, 162.41176470588235 AS `Estimator` UNION ALL SELECT 11 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 106 AS count, 3 AS depth, 9 AS parent_id, 232.24528301886792 AS `Estimator` UNION ALL SELECT 13 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 24 AS count, 3 AS depth, 12 AS parent_id, 110.70833333333333 AS `Estimator` UNION ALL SELECT 14 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 6 AS count, 3 AS depth, 12 AS parent_id, 246.66666666666666 AS `Estimator`) AS `Values`), 
`DT_Output_3` AS 
(SELECT `DT_node_lookup_3`.`KEY` AS `KEY`, `DT_node_lookup_3`.node_id_2 AS node_id_2, `DT_node_data_3`.node_id AS node_id, `DT_node_data_3`.feature AS feature, `DT_node_data_3`.threshold AS threshold, `DT_node_data_3`.count AS count, `DT_node_data_3`.depth AS depth, `DT_node_data_3`.parent_id AS parent_id, `DT_node_data_3`.`Estimator` AS `Estimator` 
FROM `DT_node_lookup_3` LEFT OUTER JOIN `DT_node_data_3` ON `DT_node_lookup_3`.node_id_2 = `DT_node_data_3`.node_id), 
`AdaBoost_Estim_3` AS 
(SELECT `DT_Output_3`.`KEY` AS `KEY`, `DT_Output_3`.`Estimator` AS `Estimator`, 0.215953087896 AS `Weight`, 3 AS est_index 
FROM `DT_Output_3`)
 SELECT `WeightedEstimators_esu_0`.`KEY`, `WeightedEstimators_esu_0`.`Estimator`, `WeightedEstimators_esu_0`.`Weight`, `WeightedEstimators_esu_0`.est_index 
FROM (SELECT `AdaBoost_Estim_0`.`KEY` AS `KEY`, `AdaBoost_Estim_0`.`Estimator` AS `Estimator`, `AdaBoost_Estim_0`.`Weight` AS `Weight`, `AdaBoost_Estim_0`.est_index AS est_index 
FROM `AdaBoost_Estim_0` UNION ALL SELECT `AdaBoost_Estim_1`.`KEY` AS `KEY`, `AdaBoost_Estim_1`.`Estimator` AS `Estimator`, `AdaBoost_Estim_1`.`Weight` AS `Weight`, `AdaBoost_Estim_1`.est_index AS est_index 
FROM `AdaBoost_Estim_1` UNION ALL SELECT `AdaBoost_Estim_2`.`KEY` AS `KEY`, `AdaBoost_Estim_2`.`Estimator` AS `Estimator`, `AdaBoost_Estim_2`.`Weight` AS `Weight`, `AdaBoost_Estim_2`.est_index AS est_index 
FROM `AdaBoost_Estim_2` UNION ALL SELECT `AdaBoost_Estim_3`.`KEY` AS `KEY`, `AdaBoost_Estim_3`.`Estimator` AS `Estimator`, `AdaBoost_Estim_3`.`Weight` AS `Weight`, `AdaBoost_Estim_3`.est_index AS est_index 
FROM `AdaBoost_Estim_3`) AS `WeightedEstimators_esu_0`), 
`WeightedEstimators` AS 
(SELECT `WeightedEstimatorsbig_esu`.`KEY` AS `KEY`, `WeightedEstimatorsbig_esu`.`Estimator` AS `Estimator`, `WeightedEstimatorsbig_esu`.`Weight` AS `Weight`, `WeightedEstimatorsbig_esu`.est_index AS est_index 
FROM (SELECT `WeightedEstimators_0`.`KEY` AS `KEY`, `WeightedEstimators_0`.`Estimator` AS `Estimator`, `WeightedEstimators_0`.`Weight` AS `Weight`, `WeightedEstimators_0`.est_index AS est_index 
FROM `WeightedEstimators_0`) AS `WeightedEstimatorsbig_esu`), 
`Cumulative_Frequencies` AS 
(SELECT `CW`.`KEY` AS `KEY`, `CW`.`Estimator` AS `Estimator`, `CW`.`Weight` AS `Weight`, `CW`.est_index AS est_index, `CW`.cum_weight AS cum_weight 
FROM (SELECT u1.`KEY` AS `KEY`, u1.`Estimator` AS `Estimator`, u1.`Weight` AS `Weight`, u1.est_index AS est_index, sum(u2.`Weight`) AS cum_weight 
FROM `WeightedEstimators` AS u1, `WeightedEstimators` AS u2 
WHERE u1.`Estimator` >= u2.`Estimator` AND u1.`KEY` = u2.`KEY` GROUP BY u1.`KEY`, u1.est_index, u1.`Estimator`, u1.`Weight`) AS `CW`), 
`Quantiles` AS 
(SELECT `CW2`.`KEY` AS `KEY`, `CW2`.`Quantile` AS `Quantile` 
FROM (SELECT `Cumulative_Frequencies`.`KEY` AS `KEY`, min(`Cumulative_Frequencies`.`Estimator`) AS `Quantile` 
FROM `Cumulative_Frequencies` 
WHERE `Cumulative_Frequencies`.cum_weight >= 0.5 GROUP BY `Cumulative_Frequencies`.`KEY`) AS `CW2`)
 SELECT `Quantiles`.`KEY` AS `KEY`, `Quantiles`.`Quantile` AS `Estimator` 
FROM `Quantiles`