-- This SQL code was generated by sklearn2sql (development version).
-- Copyright 2017

WITH `WeightedEstimators_0` AS 
(WITH `DT_node_lookup` AS 
(SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_2` <= 0.5740115642547607) THEN CASE WHEN (`ADS`.`Feature_2` <= 0.20348544418811798) THEN CASE WHEN (`ADS`.`Feature_2` <= 0.1157732754945755) THEN 3 ELSE 4 END ELSE CASE WHEN (`ADS`.`Feature_1` <= 1435.057373046875) THEN 6 ELSE 7 END END ELSE CASE WHEN (`ADS`.`Feature_1` <= 989.6936645507812) THEN CASE WHEN (`ADS`.`Feature_3` <= 7.547978401184082) THEN 10 ELSE 11 END ELSE CASE WHEN (`ADS`.`Feature_2` <= 0.6275076270103455) THEN 13 ELSE 14 END END END AS node_id_2 
FROM freidman2 AS `ADS`), 
`DT_node_data` AS 
(SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Estimator` AS `Estimator` 
FROM (SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 10 AS count, 3 AS depth, 2 AS parent_id, 64.45369065255933 AS `Estimator` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 7 AS count, 3 AS depth, 2 AS parent_id, 202.28209039774268 AS `Estimator` UNION ALL SELECT 6 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 19 AS count, 3 AS depth, 5 AS parent_id, 299.2743124225056 AS `Estimator` UNION ALL SELECT 7 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 5 AS count, 3 AS depth, 5 AS parent_id, 623.5052580108661 AS `Estimator` UNION ALL SELECT 10 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 4 AS count, 3 AS depth, 9 AS parent_id, 154.48498448216702 AS `Estimator` UNION ALL SELECT 11 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 12 AS count, 3 AS depth, 9 AS parent_id, 587.5278729144649 AS `Estimator` UNION ALL SELECT 13 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 7 AS count, 3 AS depth, 12 AS parent_id, 672.6347380054439 AS `Estimator` UNION ALL SELECT 14 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 16 AS count, 3 AS depth, 12 AS parent_id, 1069.6801245266563 AS `Estimator`) AS `Values`), 
`DT_Output` AS 
(SELECT `DT_node_lookup`.`KEY` AS `KEY`, `DT_node_lookup`.node_id_2 AS node_id_2, `DT_node_data`.node_id AS node_id, `DT_node_data`.feature AS feature, `DT_node_data`.threshold AS threshold, `DT_node_data`.count AS count, `DT_node_data`.depth AS depth, `DT_node_data`.parent_id AS parent_id, `DT_node_data`.`Estimator` AS `Estimator` 
FROM `DT_node_lookup` LEFT OUTER JOIN `DT_node_data` ON `DT_node_lookup`.node_id_2 = `DT_node_data`.node_id), 
`AdaBoost_Estim_0` AS 
(SELECT `DT_Output`.`KEY` AS `KEY`, `DT_Output`.`Estimator` AS `Estimator`, 0.348813479781 AS `Weight`, 0 AS est_index 
FROM `DT_Output`), 
`DT_node_lookup_1` AS 
(SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_1` <= 882.4659423828125) THEN CASE WHEN (`ADS`.`Feature_2` <= 0.562952995300293) THEN CASE WHEN (`ADS`.`Feature_3` <= 5.282727241516113) THEN 3 ELSE 4 END ELSE CASE WHEN (`ADS`.`Feature_1` <= 602.7623901367188) THEN 6 ELSE 7 END END ELSE CASE WHEN (`ADS`.`Feature_2` <= 0.3650708496570587) THEN CASE WHEN (`ADS`.`Feature_1` <= 1654.1549072265625) THEN 10 ELSE 11 END ELSE CASE WHEN (`ADS`.`Feature_2` <= 0.976730465888977) THEN 13 ELSE 14 END END END AS node_id_2 
FROM freidman2 AS `ADS`), 
`DT_node_data_1` AS 
(SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Estimator` AS `Estimator` 
FROM (SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 4 AS count, 3 AS depth, 2 AS parent_id, 216.82967879019387 AS `Estimator` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 6 AS count, 3 AS depth, 2 AS parent_id, 81.00036759616331 AS `Estimator` UNION ALL SELECT 6 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 12 AS count, 3 AS depth, 5 AS parent_id, 264.5753460987517 AS `Estimator` UNION ALL SELECT 7 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 4 AS count, 3 AS depth, 5 AS parent_id, 546.1890496395341 AS `Estimator` UNION ALL SELECT 10 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 8 AS count, 3 AS depth, 9 AS parent_id, 229.15913713796215 AS `Estimator` UNION ALL SELECT 11 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS count, 3 AS depth, 9 AS parent_id, 520.6117294724178 AS `Estimator` UNION ALL SELECT 13 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 38 AS count, 3 AS depth, 12 AS parent_id, 852.044079581605 AS `Estimator` UNION ALL SELECT 14 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 6 AS count, 3 AS depth, 12 AS parent_id, 1375.101694218316 AS `Estimator`) AS `Values`), 
`DT_Output_1` AS 
(SELECT `DT_node_lookup_1`.`KEY` AS `KEY`, `DT_node_lookup_1`.node_id_2 AS node_id_2, `DT_node_data_1`.node_id AS node_id, `DT_node_data_1`.feature AS feature, `DT_node_data_1`.threshold AS threshold, `DT_node_data_1`.count AS count, `DT_node_data_1`.depth AS depth, `DT_node_data_1`.parent_id AS parent_id, `DT_node_data_1`.`Estimator` AS `Estimator` 
FROM `DT_node_lookup_1` LEFT OUTER JOIN `DT_node_data_1` ON `DT_node_lookup_1`.node_id_2 = `DT_node_data_1`.node_id), 
`AdaBoost_Estim_1` AS 
(SELECT `DT_Output_1`.`KEY` AS `KEY`, `DT_Output_1`.`Estimator` AS `Estimator`, 0.230563230919 AS `Weight`, 1 AS est_index 
FROM `DT_Output_1`), 
`DT_node_lookup_2` AS 
(SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_1` <= 733.729248046875) THEN CASE WHEN (`ADS`.`Feature_2` <= 0.7902979850769043) THEN CASE WHEN (`ADS`.`Feature_0` <= 67.72291564941406) THEN 3 ELSE 4 END ELSE CASE WHEN (`ADS`.`Feature_0` <= 44.586341857910156) THEN 6 ELSE 7 END END ELSE CASE WHEN (`ADS`.`Feature_2` <= 0.3474539518356323) THEN CASE WHEN (`ADS`.`Feature_1` <= 1505.22705078125) THEN 10 ELSE 11 END ELSE CASE WHEN (`ADS`.`Feature_2` <= 0.784777045249939) THEN 13 ELSE 14 END END END AS node_id_2 
FROM freidman2 AS `ADS`), 
`DT_node_data_2` AS 
(SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Estimator` AS `Estimator` 
FROM (SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 16 AS count, 3 AS depth, 2 AS parent_id, 87.95940899385482 AS `Estimator` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS count, 3 AS depth, 2 AS parent_id, 217.97307207934023 AS `Estimator` UNION ALL SELECT 6 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS count, 3 AS depth, 5 AS parent_id, 456.84183869251734 AS `Estimator` UNION ALL SELECT 7 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS count, 3 AS depth, 5 AS parent_id, 262.27001215911247 AS `Estimator` UNION ALL SELECT 10 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 4 AS count, 3 AS depth, 9 AS parent_id, 254.19291276653803 AS `Estimator` UNION ALL SELECT 11 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 4 AS count, 3 AS depth, 9 AS parent_id, 17.512631595279426 AS `Estimator` UNION ALL SELECT 13 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 34 AS count, 3 AS depth, 12 AS parent_id, 749.325459238228 AS `Estimator` UNION ALL SELECT 14 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 14 AS count, 3 AS depth, 12 AS parent_id, 1106.961558761814 AS `Estimator`) AS `Values`), 
`DT_Output_2` AS 
(SELECT `DT_node_lookup_2`.`KEY` AS `KEY`, `DT_node_lookup_2`.node_id_2 AS node_id_2, `DT_node_data_2`.node_id AS node_id, `DT_node_data_2`.feature AS feature, `DT_node_data_2`.threshold AS threshold, `DT_node_data_2`.count AS count, `DT_node_data_2`.depth AS depth, `DT_node_data_2`.parent_id AS parent_id, `DT_node_data_2`.`Estimator` AS `Estimator` 
FROM `DT_node_lookup_2` LEFT OUTER JOIN `DT_node_data_2` ON `DT_node_lookup_2`.node_id_2 = `DT_node_data_2`.node_id), 
`AdaBoost_Estim_2` AS 
(SELECT `DT_Output_2`.`KEY` AS `KEY`, `DT_Output_2`.`Estimator` AS `Estimator`, 0.211537222562 AS `Weight`, 2 AS est_index 
FROM `DT_Output_2`), 
`DT_node_lookup_3` AS 
(SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_2` <= 0.7971992492675781) THEN CASE WHEN (`ADS`.`Feature_2` <= 0.3094656765460968) THEN CASE WHEN (`ADS`.`Feature_2` <= 0.11461476236581802) THEN 3 ELSE 4 END ELSE CASE WHEN (`ADS`.`Feature_1` <= 781.071533203125) THEN 6 ELSE 7 END END ELSE CASE WHEN (`ADS`.`Feature_1` <= 1257.4737548828125) THEN CASE WHEN (`ADS`.`Feature_1` <= 691.4310302734375) THEN 10 ELSE 11 END ELSE CASE WHEN (`ADS`.`Feature_0` <= 42.05487823486328) THEN 13 ELSE 14 END END END AS node_id_2 
FROM freidman2 AS `ADS`), 
`DT_node_data_3` AS 
(SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Estimator` AS `Estimator` 
FROM (SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 7 AS count, 3 AS depth, 2 AS parent_id, 51.02105150973193 AS `Estimator` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 8 AS count, 3 AS depth, 2 AS parent_id, 219.73160142888457 AS `Estimator` UNION ALL SELECT 6 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 13 AS count, 3 AS depth, 5 AS parent_id, 257.1949901310189 AS `Estimator` UNION ALL SELECT 7 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 29 AS count, 3 AS depth, 5 AS parent_id, 709.5225260605212 AS `Estimator` UNION ALL SELECT 10 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS count, 3 AS depth, 9 AS parent_id, 451.9899115058162 AS `Estimator` UNION ALL SELECT 11 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 10 AS count, 3 AS depth, 9 AS parent_id, 891.9116137909689 AS `Estimator` UNION ALL SELECT 13 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 4 AS count, 3 AS depth, 12 AS parent_id, 1450.4501202950794 AS `Estimator` UNION ALL SELECT 14 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 6 AS count, 3 AS depth, 12 AS parent_id, 1310.3597486879787 AS `Estimator`) AS `Values`), 
`DT_Output_3` AS 
(SELECT `DT_node_lookup_3`.`KEY` AS `KEY`, `DT_node_lookup_3`.node_id_2 AS node_id_2, `DT_node_data_3`.node_id AS node_id, `DT_node_data_3`.feature AS feature, `DT_node_data_3`.threshold AS threshold, `DT_node_data_3`.count AS count, `DT_node_data_3`.depth AS depth, `DT_node_data_3`.parent_id AS parent_id, `DT_node_data_3`.`Estimator` AS `Estimator` 
FROM `DT_node_lookup_3` LEFT OUTER JOIN `DT_node_data_3` ON `DT_node_lookup_3`.node_id_2 = `DT_node_data_3`.node_id), 
`AdaBoost_Estim_3` AS 
(SELECT `DT_Output_3`.`KEY` AS `KEY`, `DT_Output_3`.`Estimator` AS `Estimator`, 0.209086066738 AS `Weight`, 3 AS est_index 
FROM `DT_Output_3`)
 SELECT `WeightedEstimators_esu_0`.`KEY`, `WeightedEstimators_esu_0`.`Estimator`, `WeightedEstimators_esu_0`.`Weight`, `WeightedEstimators_esu_0`.est_index 
FROM (SELECT `AdaBoost_Estim_0`.`KEY` AS `KEY`, `AdaBoost_Estim_0`.`Estimator` AS `Estimator`, `AdaBoost_Estim_0`.`Weight` AS `Weight`, `AdaBoost_Estim_0`.est_index AS est_index 
FROM `AdaBoost_Estim_0` UNION ALL SELECT `AdaBoost_Estim_1`.`KEY` AS `KEY`, `AdaBoost_Estim_1`.`Estimator` AS `Estimator`, `AdaBoost_Estim_1`.`Weight` AS `Weight`, `AdaBoost_Estim_1`.est_index AS est_index 
FROM `AdaBoost_Estim_1` UNION ALL SELECT `AdaBoost_Estim_2`.`KEY` AS `KEY`, `AdaBoost_Estim_2`.`Estimator` AS `Estimator`, `AdaBoost_Estim_2`.`Weight` AS `Weight`, `AdaBoost_Estim_2`.est_index AS est_index 
FROM `AdaBoost_Estim_2` UNION ALL SELECT `AdaBoost_Estim_3`.`KEY` AS `KEY`, `AdaBoost_Estim_3`.`Estimator` AS `Estimator`, `AdaBoost_Estim_3`.`Weight` AS `Weight`, `AdaBoost_Estim_3`.est_index AS est_index 
FROM `AdaBoost_Estim_3`) AS `WeightedEstimators_esu_0`), 
`WeightedEstimators` AS 
(SELECT `WeightedEstimatorsbig_esu`.`KEY` AS `KEY`, `WeightedEstimatorsbig_esu`.`Estimator` AS `Estimator`, `WeightedEstimatorsbig_esu`.`Weight` AS `Weight`, `WeightedEstimatorsbig_esu`.est_index AS est_index 
FROM (SELECT `WeightedEstimators_0`.`KEY` AS `KEY`, `WeightedEstimators_0`.`Estimator` AS `Estimator`, `WeightedEstimators_0`.`Weight` AS `Weight`, `WeightedEstimators_0`.est_index AS est_index 
FROM `WeightedEstimators_0`) AS `WeightedEstimatorsbig_esu`), 
`Cumulative_Frequencies` AS 
(SELECT `CW`.`KEY` AS `KEY`, `CW`.`Estimator` AS `Estimator`, `CW`.`Weight` AS `Weight`, `CW`.est_index AS est_index, `CW`.cum_weight AS cum_weight 
FROM (SELECT u1.`KEY` AS `KEY`, u1.`Estimator` AS `Estimator`, u1.`Weight` AS `Weight`, u1.est_index AS est_index, sum(u2.`Weight`) AS cum_weight 
FROM `WeightedEstimators` AS u1, `WeightedEstimators` AS u2 
WHERE u1.`Estimator` >= u2.`Estimator` AND u1.`KEY` = u2.`KEY` GROUP BY u1.`KEY`, u1.est_index, u1.`Estimator`, u1.`Weight`) AS `CW`), 
`Quantiles` AS 
(SELECT `CW2`.`KEY` AS `KEY`, `CW2`.`Quantile` AS `Quantile` 
FROM (SELECT `Cumulative_Frequencies`.`KEY` AS `KEY`, min(`Cumulative_Frequencies`.`Estimator`) AS `Quantile` 
FROM `Cumulative_Frequencies` 
WHERE `Cumulative_Frequencies`.cum_weight >= 0.5 GROUP BY `Cumulative_Frequencies`.`KEY`) AS `CW2`)
 SELECT `Quantiles`.`KEY` AS `KEY`, `Quantiles`.`Quantile` AS `Estimator` 
FROM `Quantiles`