-- This SQL code was generated by sklearn2sql (development version).
-- Copyright 2017

WITH `WeightedEstimators_0` AS 
(WITH `ADS_imp_1_OUT` AS 
(SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_0` IS NULL) THEN 0.000268693206665 ELSE `ADS`.`Feature_0` END AS impter_2, CASE WHEN (`ADS`.`Feature_1` IS NULL) THEN 0.000723958058064 ELSE `ADS`.`Feature_1` END AS impter_3, CASE WHEN (`ADS`.`Feature_2` IS NULL) THEN 0.000728071982559 ELSE `ADS`.`Feature_2` END AS impter_4, CASE WHEN (`ADS`.`Feature_3` IS NULL) THEN 0.00101356522108 ELSE `ADS`.`Feature_3` END AS impter_5, CASE WHEN (`ADS`.`Feature_4` IS NULL) THEN 0.000976358073288 ELSE `ADS`.`Feature_4` END AS impter_6, CASE WHEN (`ADS`.`Feature_5` IS NULL) THEN 0.00176438082423 ELSE `ADS`.`Feature_5` END AS impter_7, CASE WHEN (`ADS`.`Feature_6` IS NULL) THEN -0.00165128154506 ELSE `ADS`.`Feature_6` END AS impter_8, CASE WHEN (`ADS`.`Feature_7` IS NULL) THEN 0.00139055019834 ELSE `ADS`.`Feature_7` END AS impter_9, CASE WHEN (`ADS`.`Feature_8` IS NULL) THEN 0.00127264825481 ELSE `ADS`.`Feature_8` END AS impter_10, CASE WHEN (`ADS`.`Feature_9` IS NULL) THEN 0.00103442500568 ELSE `ADS`.`Feature_9` END AS impter_11 
FROM diabetes AS `ADS`), 
`ADS_sca_2_OUT` AS 
(SELECT `ADS_imp_1_OUT`.`KEY` AS `KEY`, (CAST(`ADS_imp_1_OUT`.impter_2 AS DOUBLE) - 0.000268693206665) / 0.0472420958365 AS scaler_2, (CAST(`ADS_imp_1_OUT`.impter_3 AS DOUBLE) - 0.000723958058064) / 0.047605576685 AS scaler_3, (CAST(`ADS_imp_1_OUT`.impter_4 AS DOUBLE) - 0.000728071982559) / 0.0469359114394 AS scaler_4, (CAST(`ADS_imp_1_OUT`.impter_5 AS DOUBLE) - 0.00101356522108) / 0.048335271949 AS scaler_5, (CAST(`ADS_imp_1_OUT`.impter_6 AS DOUBLE) - 0.000976358073288) / 0.0480507620097 AS scaler_6, (CAST(`ADS_imp_1_OUT`.impter_7 AS DOUBLE) - 0.00176438082423) / 0.0480608087315 AS scaler_7, (CAST(`ADS_imp_1_OUT`.impter_8 AS DOUBLE) - -0.00165128154506) / 0.0462024037804 AS scaler_8, (CAST(`ADS_imp_1_OUT`.impter_9 AS DOUBLE) - 0.00139055019834) / 0.0473630930405 AS scaler_9, (CAST(`ADS_imp_1_OUT`.impter_10 AS DOUBLE) - 0.00127264825481) / 0.0458928613136 AS scaler_10, (CAST(`ADS_imp_1_OUT`.impter_11 AS DOUBLE) - 0.00103442500568) / 0.0477615851957 AS scaler_11 
FROM `ADS_imp_1_OUT`), 
`DT_node_lookup` AS 
(SELECT `ADS_sca_2_OUT`.`KEY` AS `KEY`, CASE WHEN (`ADS_sca_2_OUT`.scaler_10 <= -0.1500326246023178) THEN CASE WHEN (`ADS_sca_2_OUT`.scaler_4 <= 0.11634615063667297) THEN CASE WHEN (`ADS_sca_2_OUT`.scaler_10 <= -0.9707697629928589) THEN 3 ELSE 4 END ELSE CASE WHEN (`ADS_sca_2_OUT`.scaler_8 <= -1.3020480871200562) THEN 6 ELSE 7 END END ELSE CASE WHEN (`ADS_sca_2_OUT`.scaler_4 <= 1.40230131149292) THEN CASE WHEN (`ADS_sca_2_OUT`.scaler_4 <= -0.18217915296554565) THEN 10 ELSE 11 END ELSE CASE WHEN (`ADS_sca_2_OUT`.scaler_7 <= 0.5191034078598022) THEN 13 ELSE 14 END END END AS node_id_2 
FROM `ADS_sca_2_OUT`), 
`DT_node_data` AS 
(SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Estimator` AS `Estimator` 
FROM (SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 45 AS count, 3 AS depth, 2 AS parent_id, 76.73333333333333 AS `Estimator` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 89 AS count, 3 AS depth, 2 AS parent_id, 106.52808988764045 AS `Estimator` UNION ALL SELECT 6 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS count, 3 AS depth, 5 AS parent_id, 244.0 AS `Estimator` UNION ALL SELECT 7 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 27 AS count, 3 AS depth, 5 AS parent_id, 155.5185185185185 AS `Estimator` UNION ALL SELECT 10 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 60 AS count, 3 AS depth, 9 AS parent_id, 155.5 AS `Estimator` UNION ALL SELECT 11 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 105 AS count, 3 AS depth, 9 AS parent_id, 198.71428571428572 AS `Estimator` UNION ALL SELECT 13 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 19 AS count, 3 AS depth, 12 AS parent_id, 297.3157894736842 AS `Estimator` UNION ALL SELECT 14 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 6 AS count, 3 AS depth, 12 AS parent_id, 223.5 AS `Estimator`) AS `Values`), 
`DT_Output` AS 
(SELECT `DT_node_lookup`.`KEY` AS `KEY`, `DT_node_lookup`.node_id_2 AS node_id_2, `DT_node_data`.node_id AS node_id, `DT_node_data`.feature AS feature, `DT_node_data`.threshold AS threshold, `DT_node_data`.count AS count, `DT_node_data`.depth AS depth, `DT_node_data`.parent_id AS parent_id, `DT_node_data`.`Estimator` AS `Estimator` 
FROM `DT_node_lookup` LEFT OUTER JOIN `DT_node_data` ON `DT_node_lookup`.node_id_2 = `DT_node_data`.node_id), 
`AdaBoost_Estim_0` AS 
(SELECT `DT_Output`.`KEY` AS `KEY`, `DT_Output`.`Estimator` AS `Estimator`, 0.321205997312 AS `Weight`, 0 AS est_index 
FROM `DT_Output`), 
`DT_node_lookup_1` AS 
(SELECT `ADS_sca_2_OUT`.`KEY` AS `KEY`, CASE WHEN (`ADS_sca_2_OUT`.scaler_5 <= 0.7402026653289795) THEN CASE WHEN (`ADS_sca_2_OUT`.scaler_9 <= 0.6326913833618164) THEN CASE WHEN (`ADS_sca_2_OUT`.scaler_4 <= 1.5286004543304443) THEN 3 ELSE 4 END ELSE CASE WHEN (`ADS_sca_2_OUT`.scaler_5 <= -0.886191725730896) THEN 6 ELSE 7 END END ELSE CASE WHEN (`ADS_sca_2_OUT`.scaler_8 <= 0.4908640384674072) THEN CASE WHEN (`ADS_sca_2_OUT`.scaler_4 <= 1.6663813591003418) THEN 10 ELSE 11 END ELSE CASE WHEN (`ADS_sca_2_OUT`.scaler_10 <= 0.8185133337974548) THEN 13 ELSE 14 END END END AS node_id_2 
FROM `ADS_sca_2_OUT`), 
`DT_node_data_1` AS 
(SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Estimator` AS `Estimator` 
FROM (SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 179 AS count, 3 AS depth, 2 AS parent_id, 106.35754189944134 AS `Estimator` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 6 AS count, 3 AS depth, 2 AS parent_id, 219.66666666666666 AS `Estimator` UNION ALL SELECT 6 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 15 AS count, 3 AS depth, 5 AS parent_id, 131.06666666666666 AS `Estimator` UNION ALL SELECT 7 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 49 AS count, 3 AS depth, 5 AS parent_id, 197.14285714285714 AS `Estimator` UNION ALL SELECT 10 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 77 AS count, 3 AS depth, 9 AS parent_id, 218.5064935064935 AS `Estimator` UNION ALL SELECT 11 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 15 AS count, 3 AS depth, 9 AS parent_id, 291.26666666666665 AS `Estimator` UNION ALL SELECT 13 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 10 AS count, 3 AS depth, 12 AS parent_id, 103.8 AS `Estimator` UNION ALL SELECT 14 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS count, 3 AS depth, 12 AS parent_id, 201.0 AS `Estimator`) AS `Values`), 
`DT_Output_1` AS 
(SELECT `DT_node_lookup_1`.`KEY` AS `KEY`, `DT_node_lookup_1`.node_id_2 AS node_id_2, `DT_node_data_1`.node_id AS node_id, `DT_node_data_1`.feature AS feature, `DT_node_data_1`.threshold AS threshold, `DT_node_data_1`.count AS count, `DT_node_data_1`.depth AS depth, `DT_node_data_1`.parent_id AS parent_id, `DT_node_data_1`.`Estimator` AS `Estimator` 
FROM `DT_node_lookup_1` LEFT OUTER JOIN `DT_node_data_1` ON `DT_node_lookup_1`.node_id_2 = `DT_node_data_1`.node_id), 
`AdaBoost_Estim_1` AS 
(SELECT `DT_Output_1`.`KEY` AS `KEY`, `DT_Output_1`.`Estimator` AS `Estimator`, 0.279494367859 AS `Weight`, 1 AS est_index 
FROM `DT_Output_1`), 
`DT_node_lookup_2` AS 
(SELECT `ADS_sca_2_OUT`.`KEY` AS `KEY`, CASE WHEN (`ADS_sca_2_OUT`.scaler_10 <= -0.45792627334594727) THEN CASE WHEN (`ADS_sca_2_OUT`.scaler_5 <= 1.3931347131729126) THEN CASE WHEN (`ADS_sca_2_OUT`.scaler_4 <= 0.19671835005283356) THEN 3 ELSE 4 END ELSE CASE WHEN (`ADS_sca_2_OUT`.scaler_3 <= 0.04821458458900452) THEN 6 ELSE 7 END END ELSE CASE WHEN (`ADS_sca_2_OUT`.scaler_4 <= 1.4711917638778687) THEN CASE WHEN (`ADS_sca_2_OUT`.scaler_5 <= 0.7402026653289795) THEN 10 ELSE 11 END ELSE CASE WHEN (`ADS_sca_2_OUT`.scaler_7 <= 0.3822742700576782) THEN 13 ELSE 14 END END END AS node_id_2 
FROM `ADS_sca_2_OUT`), 
`DT_node_data_2` AS 
(SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Estimator` AS `Estimator` 
FROM (SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 90 AS count, 3 AS depth, 2 AS parent_id, 95.83333333333333 AS `Estimator` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 18 AS count, 3 AS depth, 2 AS parent_id, 136.88888888888889 AS `Estimator` UNION ALL SELECT 6 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 8 AS count, 3 AS depth, 5 AS parent_id, 235.25 AS `Estimator` UNION ALL SELECT 7 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS count, 3 AS depth, 5 AS parent_id, 150.5 AS `Estimator` UNION ALL SELECT 10 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 155 AS count, 3 AS depth, 9 AS parent_id, 162.04516129032257 AS `Estimator` UNION ALL SELECT 11 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 51 AS count, 3 AS depth, 9 AS parent_id, 221.15686274509804 AS `Estimator` UNION ALL SELECT 13 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 18 AS count, 3 AS depth, 12 AS parent_id, 298.1666666666667 AS `Estimator` UNION ALL SELECT 14 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 11 AS count, 3 AS depth, 12 AS parent_id, 217.54545454545453 AS `Estimator`) AS `Values`), 
`DT_Output_2` AS 
(SELECT `DT_node_lookup_2`.`KEY` AS `KEY`, `DT_node_lookup_2`.node_id_2 AS node_id_2, `DT_node_data_2`.node_id AS node_id, `DT_node_data_2`.feature AS feature, `DT_node_data_2`.threshold AS threshold, `DT_node_data_2`.count AS count, `DT_node_data_2`.depth AS depth, `DT_node_data_2`.parent_id AS parent_id, `DT_node_data_2`.`Estimator` AS `Estimator` 
FROM `DT_node_lookup_2` LEFT OUTER JOIN `DT_node_data_2` ON `DT_node_lookup_2`.node_id_2 = `DT_node_data_2`.node_id), 
`AdaBoost_Estim_2` AS 
(SELECT `DT_Output_2`.`KEY` AS `KEY`, `DT_Output_2`.`Estimator` AS `Estimator`, 0.183346546932 AS `Weight`, 2 AS est_index 
FROM `DT_Output_2`), 
`DT_node_lookup_3` AS 
(SELECT `ADS_sca_2_OUT`.`KEY` AS `KEY`, CASE WHEN (`ADS_sca_2_OUT`.scaler_10 <= -0.021907038986682892) THEN CASE WHEN (`ADS_sca_2_OUT`.scaler_4 <= 0.07041918486356735) THEN CASE WHEN (`ADS_sca_2_OUT`.scaler_7 <= 2.3076553344726562) THEN 3 ELSE 4 END ELSE CASE WHEN (`ADS_sca_2_OUT`.scaler_2 <= -1.6218109130859375) THEN 6 ELSE 7 END END ELSE CASE WHEN (`ADS_sca_2_OUT`.scaler_7 <= 1.3498516082763672) THEN CASE WHEN (`ADS_sca_2_OUT`.scaler_2 <= -0.6222151517868042) THEN 10 ELSE 11 END ELSE CASE WHEN (`ADS_sca_2_OUT`.scaler_10 <= 1.1021310091018677) THEN 13 ELSE 14 END END END AS node_id_2 
FROM `ADS_sca_2_OUT`), 
`DT_node_data_3` AS 
(SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Estimator` AS `Estimator` 
FROM (SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 130 AS count, 3 AS depth, 2 AS parent_id, 100.7 AS `Estimator` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS count, 3 AS depth, 2 AS parent_id, 253.0 AS `Estimator` UNION ALL SELECT 6 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 5 AS count, 3 AS depth, 5 AS parent_id, 302.0 AS `Estimator` UNION ALL SELECT 7 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 45 AS count, 3 AS depth, 5 AS parent_id, 158.17777777777778 AS `Estimator` UNION ALL SELECT 10 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 34 AS count, 3 AS depth, 9 AS parent_id, 162.41176470588235 AS `Estimator` UNION ALL SELECT 11 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 106 AS count, 3 AS depth, 9 AS parent_id, 232.24528301886792 AS `Estimator` UNION ALL SELECT 13 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 24 AS count, 3 AS depth, 12 AS parent_id, 110.70833333333333 AS `Estimator` UNION ALL SELECT 14 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 6 AS count, 3 AS depth, 12 AS parent_id, 246.66666666666666 AS `Estimator`) AS `Values`), 
`DT_Output_3` AS 
(SELECT `DT_node_lookup_3`.`KEY` AS `KEY`, `DT_node_lookup_3`.node_id_2 AS node_id_2, `DT_node_data_3`.node_id AS node_id, `DT_node_data_3`.feature AS feature, `DT_node_data_3`.threshold AS threshold, `DT_node_data_3`.count AS count, `DT_node_data_3`.depth AS depth, `DT_node_data_3`.parent_id AS parent_id, `DT_node_data_3`.`Estimator` AS `Estimator` 
FROM `DT_node_lookup_3` LEFT OUTER JOIN `DT_node_data_3` ON `DT_node_lookup_3`.node_id_2 = `DT_node_data_3`.node_id), 
`AdaBoost_Estim_3` AS 
(SELECT `DT_Output_3`.`KEY` AS `KEY`, `DT_Output_3`.`Estimator` AS `Estimator`, 0.215953087896 AS `Weight`, 3 AS est_index 
FROM `DT_Output_3`)
 SELECT `WeightedEstimators_esu_0`.`KEY`, `WeightedEstimators_esu_0`.`Estimator`, `WeightedEstimators_esu_0`.`Weight`, `WeightedEstimators_esu_0`.est_index 
FROM (SELECT `AdaBoost_Estim_0`.`KEY` AS `KEY`, `AdaBoost_Estim_0`.`Estimator` AS `Estimator`, `AdaBoost_Estim_0`.`Weight` AS `Weight`, `AdaBoost_Estim_0`.est_index AS est_index 
FROM `AdaBoost_Estim_0` UNION ALL SELECT `AdaBoost_Estim_1`.`KEY` AS `KEY`, `AdaBoost_Estim_1`.`Estimator` AS `Estimator`, `AdaBoost_Estim_1`.`Weight` AS `Weight`, `AdaBoost_Estim_1`.est_index AS est_index 
FROM `AdaBoost_Estim_1` UNION ALL SELECT `AdaBoost_Estim_2`.`KEY` AS `KEY`, `AdaBoost_Estim_2`.`Estimator` AS `Estimator`, `AdaBoost_Estim_2`.`Weight` AS `Weight`, `AdaBoost_Estim_2`.est_index AS est_index 
FROM `AdaBoost_Estim_2` UNION ALL SELECT `AdaBoost_Estim_3`.`KEY` AS `KEY`, `AdaBoost_Estim_3`.`Estimator` AS `Estimator`, `AdaBoost_Estim_3`.`Weight` AS `Weight`, `AdaBoost_Estim_3`.est_index AS est_index 
FROM `AdaBoost_Estim_3`) AS `WeightedEstimators_esu_0`), 
`WeightedEstimators` AS 
(SELECT `WeightedEstimatorsbig_esu`.`KEY` AS `KEY`, `WeightedEstimatorsbig_esu`.`Estimator` AS `Estimator`, `WeightedEstimatorsbig_esu`.`Weight` AS `Weight`, `WeightedEstimatorsbig_esu`.est_index AS est_index 
FROM (SELECT `WeightedEstimators_0`.`KEY` AS `KEY`, `WeightedEstimators_0`.`Estimator` AS `Estimator`, `WeightedEstimators_0`.`Weight` AS `Weight`, `WeightedEstimators_0`.est_index AS est_index 
FROM `WeightedEstimators_0`) AS `WeightedEstimatorsbig_esu`), 
`Cumulative_Frequencies` AS 
(SELECT `CW`.`KEY` AS `KEY`, `CW`.`Estimator` AS `Estimator`, `CW`.`Weight` AS `Weight`, `CW`.est_index AS est_index, `CW`.cum_weight AS cum_weight 
FROM (SELECT u1.`KEY` AS `KEY`, u1.`Estimator` AS `Estimator`, u1.`Weight` AS `Weight`, u1.est_index AS est_index, sum(u2.`Weight`) AS cum_weight 
FROM `WeightedEstimators` AS u1, `WeightedEstimators` AS u2 
WHERE u1.`Estimator` >= u2.`Estimator` AND u1.`KEY` = u2.`KEY` GROUP BY u1.`KEY`, u1.est_index, u1.`Estimator`, u1.`Weight`) AS `CW`), 
`Quantiles` AS 
(SELECT `CW2`.`KEY` AS `KEY`, `CW2`.`Quantile` AS `Quantile` 
FROM (SELECT `Cumulative_Frequencies`.`KEY` AS `KEY`, min(`Cumulative_Frequencies`.`Estimator`) AS `Quantile` 
FROM `Cumulative_Frequencies` 
WHERE `Cumulative_Frequencies`.cum_weight >= 0.5 GROUP BY `Cumulative_Frequencies`.`KEY`) AS `CW2`)
 SELECT `Quantiles`.`KEY` AS `KEY`, `Quantiles`.`Quantile` AS `Estimator` 
FROM `Quantiles`