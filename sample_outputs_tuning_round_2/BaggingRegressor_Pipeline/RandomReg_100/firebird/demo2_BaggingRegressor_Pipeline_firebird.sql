-- This SQL code was generated by sklearn2sql (development version).
-- Copyright 2017

WITH "ADS_imp_1_OUT" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_0" IS NULL) THEN -0.0812808530019 ELSE "ADS"."Feature_0" END AS impter_2, CASE WHEN ("ADS"."Feature_1" IS NULL) THEN -0.134368051725 ELSE "ADS"."Feature_1" END AS impter_3, CASE WHEN ("ADS"."Feature_2" IS NULL) THEN -0.117133543927 ELSE "ADS"."Feature_2" END AS impter_4, CASE WHEN ("ADS"."Feature_3" IS NULL) THEN 0.103145256915 ELSE "ADS"."Feature_3" END AS impter_5, CASE WHEN ("ADS"."Feature_4" IS NULL) THEN 0.048598770616 ELSE "ADS"."Feature_4" END AS impter_6, CASE WHEN ("ADS"."Feature_5" IS NULL) THEN 0.0998569467735 ELSE "ADS"."Feature_5" END AS impter_7, CASE WHEN ("ADS"."Feature_6" IS NULL) THEN 0.0672774556566 ELSE "ADS"."Feature_6" END AS impter_8, CASE WHEN ("ADS"."Feature_7" IS NULL) THEN 0.162238409285 ELSE "ADS"."Feature_7" END AS impter_9, CASE WHEN ("ADS"."Feature_8" IS NULL) THEN 0.0406936285261 ELSE "ADS"."Feature_8" END AS impter_10, CASE WHEN ("ADS"."Feature_9" IS NULL) THEN 0.0516599050886 ELSE "ADS"."Feature_9" END AS impter_11, CASE WHEN ("ADS"."Feature_10" IS NULL) THEN 0.101790678393 ELSE "ADS"."Feature_10" END AS impter_12, CASE WHEN ("ADS"."Feature_11" IS NULL) THEN -0.17597473627 ELSE "ADS"."Feature_11" END AS impter_13, CASE WHEN ("ADS"."Feature_12" IS NULL) THEN -0.096751384941 ELSE "ADS"."Feature_12" END AS impter_14, CASE WHEN ("ADS"."Feature_13" IS NULL) THEN -0.0460865691263 ELSE "ADS"."Feature_13" END AS impter_15, CASE WHEN ("ADS"."Feature_14" IS NULL) THEN 0.101658522861 ELSE "ADS"."Feature_14" END AS impter_16, CASE WHEN ("ADS"."Feature_15" IS NULL) THEN 0.111799030108 ELSE "ADS"."Feature_15" END AS impter_17, CASE WHEN ("ADS"."Feature_16" IS NULL) THEN -0.00611023335938 ELSE "ADS"."Feature_16" END AS impter_18, CASE WHEN ("ADS"."Feature_17" IS NULL) THEN 0.0714470406891 ELSE "ADS"."Feature_17" END AS impter_19, CASE WHEN ("ADS"."Feature_18" IS NULL) THEN -0.0880845865012 ELSE "ADS"."Feature_18" END AS impter_20, CASE WHEN ("ADS"."Feature_19" IS NULL) THEN -0.0718279900088 ELSE "ADS"."Feature_19" END AS impter_21, CASE WHEN ("ADS"."Feature_20" IS NULL) THEN -0.0723020084731 ELSE "ADS"."Feature_20" END AS impter_22, CASE WHEN ("ADS"."Feature_21" IS NULL) THEN 0.0289669307994 ELSE "ADS"."Feature_21" END AS impter_23, CASE WHEN ("ADS"."Feature_22" IS NULL) THEN 0.21388217633 ELSE "ADS"."Feature_22" END AS impter_24, CASE WHEN ("ADS"."Feature_23" IS NULL) THEN -0.0666929791941 ELSE "ADS"."Feature_23" END AS impter_25, CASE WHEN ("ADS"."Feature_24" IS NULL) THEN 0.04615234855 ELSE "ADS"."Feature_24" END AS impter_26, CASE WHEN ("ADS"."Feature_25" IS NULL) THEN 0.0324951322277 ELSE "ADS"."Feature_25" END AS impter_27, CASE WHEN ("ADS"."Feature_26" IS NULL) THEN 0.0522423933061 ELSE "ADS"."Feature_26" END AS impter_28, CASE WHEN ("ADS"."Feature_27" IS NULL) THEN 0.0187458719666 ELSE "ADS"."Feature_27" END AS impter_29, CASE WHEN ("ADS"."Feature_28" IS NULL) THEN 0.0155530792298 ELSE "ADS"."Feature_28" END AS impter_30, CASE WHEN ("ADS"."Feature_29" IS NULL) THEN 0.22581537299 ELSE "ADS"."Feature_29" END AS impter_31, CASE WHEN ("ADS"."Feature_30" IS NULL) THEN -0.169898577788 ELSE "ADS"."Feature_30" END AS impter_32, CASE WHEN ("ADS"."Feature_31" IS NULL) THEN 0.036044309157 ELSE "ADS"."Feature_31" END AS impter_33, CASE WHEN ("ADS"."Feature_32" IS NULL) THEN -0.171993241626 ELSE "ADS"."Feature_32" END AS impter_34, CASE WHEN ("ADS"."Feature_33" IS NULL) THEN 0.137814188879 ELSE "ADS"."Feature_33" END AS impter_35, CASE WHEN ("ADS"."Feature_34" IS NULL) THEN -0.00243821096422 ELSE "ADS"."Feature_34" END AS impter_36, CASE WHEN ("ADS"."Feature_35" IS NULL) THEN 0.0608337491315 ELSE "ADS"."Feature_35" END AS impter_37, CASE WHEN ("ADS"."Feature_36" IS NULL) THEN -0.1890599869 ELSE "ADS"."Feature_36" END AS impter_38, CASE WHEN ("ADS"."Feature_37" IS NULL) THEN -0.0963521927847 ELSE "ADS"."Feature_37" END AS impter_39, CASE WHEN ("ADS"."Feature_38" IS NULL) THEN -0.101606675074 ELSE "ADS"."Feature_38" END AS impter_40, CASE WHEN ("ADS"."Feature_39" IS NULL) THEN 0.0647525054158 ELSE "ADS"."Feature_39" END AS impter_41, CASE WHEN ("ADS"."Feature_40" IS NULL) THEN -0.302643050361 ELSE "ADS"."Feature_40" END AS impter_42, CASE WHEN ("ADS"."Feature_41" IS NULL) THEN -0.132641556819 ELSE "ADS"."Feature_41" END AS impter_43, CASE WHEN ("ADS"."Feature_42" IS NULL) THEN -0.133405478073 ELSE "ADS"."Feature_42" END AS impter_44, CASE WHEN ("ADS"."Feature_43" IS NULL) THEN -0.00114360097028 ELSE "ADS"."Feature_43" END AS impter_45, CASE WHEN ("ADS"."Feature_44" IS NULL) THEN -0.0533515790892 ELSE "ADS"."Feature_44" END AS impter_46, CASE WHEN ("ADS"."Feature_45" IS NULL) THEN 0.0171453700269 ELSE "ADS"."Feature_45" END AS impter_47, CASE WHEN ("ADS"."Feature_46" IS NULL) THEN -0.0590594495726 ELSE "ADS"."Feature_46" END AS impter_48, CASE WHEN ("ADS"."Feature_47" IS NULL) THEN -0.0952887996818 ELSE "ADS"."Feature_47" END AS impter_49, CASE WHEN ("ADS"."Feature_48" IS NULL) THEN -0.157813634634 ELSE "ADS"."Feature_48" END AS impter_50, CASE WHEN ("ADS"."Feature_49" IS NULL) THEN -0.237944333925 ELSE "ADS"."Feature_49" END AS impter_51, CASE WHEN ("ADS"."Feature_50" IS NULL) THEN 0.13863850693 ELSE "ADS"."Feature_50" END AS impter_52, CASE WHEN ("ADS"."Feature_51" IS NULL) THEN -0.0169962199149 ELSE "ADS"."Feature_51" END AS impter_53, CASE WHEN ("ADS"."Feature_52" IS NULL) THEN 0.197014900038 ELSE "ADS"."Feature_52" END AS impter_54, CASE WHEN ("ADS"."Feature_53" IS NULL) THEN 0.0516299047324 ELSE "ADS"."Feature_53" END AS impter_55, CASE WHEN ("ADS"."Feature_54" IS NULL) THEN -0.134530020987 ELSE "ADS"."Feature_54" END AS impter_56, CASE WHEN ("ADS"."Feature_55" IS NULL) THEN 0.147893701046 ELSE "ADS"."Feature_55" END AS impter_57, CASE WHEN ("ADS"."Feature_56" IS NULL) THEN -0.0131427594384 ELSE "ADS"."Feature_56" END AS impter_58, CASE WHEN ("ADS"."Feature_57" IS NULL) THEN -0.0929916299466 ELSE "ADS"."Feature_57" END AS impter_59, CASE WHEN ("ADS"."Feature_58" IS NULL) THEN -0.24689492769 ELSE "ADS"."Feature_58" END AS impter_60, CASE WHEN ("ADS"."Feature_59" IS NULL) THEN 0.134997271083 ELSE "ADS"."Feature_59" END AS impter_61, CASE WHEN ("ADS"."Feature_60" IS NULL) THEN 0.00255440055077 ELSE "ADS"."Feature_60" END AS impter_62, CASE WHEN ("ADS"."Feature_61" IS NULL) THEN 0.125273686635 ELSE "ADS"."Feature_61" END AS impter_63, CASE WHEN ("ADS"."Feature_62" IS NULL) THEN -0.0373996229606 ELSE "ADS"."Feature_62" END AS impter_64, CASE WHEN ("ADS"."Feature_63" IS NULL) THEN -0.0299886958018 ELSE "ADS"."Feature_63" END AS impter_65, CASE WHEN ("ADS"."Feature_64" IS NULL) THEN -0.0428608851687 ELSE "ADS"."Feature_64" END AS impter_66, CASE WHEN ("ADS"."Feature_65" IS NULL) THEN -0.143834700665 ELSE "ADS"."Feature_65" END AS impter_67, CASE WHEN ("ADS"."Feature_66" IS NULL) THEN -0.0526979391089 ELSE "ADS"."Feature_66" END AS impter_68, CASE WHEN ("ADS"."Feature_67" IS NULL) THEN 0.0292679402713 ELSE "ADS"."Feature_67" END AS impter_69, CASE WHEN ("ADS"."Feature_68" IS NULL) THEN 0.104310808883 ELSE "ADS"."Feature_68" END AS impter_70, CASE WHEN ("ADS"."Feature_69" IS NULL) THEN -0.0961968743305 ELSE "ADS"."Feature_69" END AS impter_71, CASE WHEN ("ADS"."Feature_70" IS NULL) THEN 0.00673331929833 ELSE "ADS"."Feature_70" END AS impter_72, CASE WHEN ("ADS"."Feature_71" IS NULL) THEN 0.0328966593537 ELSE "ADS"."Feature_71" END AS impter_73, CASE WHEN ("ADS"."Feature_72" IS NULL) THEN 0.0806427727546 ELSE "ADS"."Feature_72" END AS impter_74, CASE WHEN ("ADS"."Feature_73" IS NULL) THEN -0.106035567555 ELSE "ADS"."Feature_73" END AS impter_75, CASE WHEN ("ADS"."Feature_74" IS NULL) THEN 0.094891001483 ELSE "ADS"."Feature_74" END AS impter_76, CASE WHEN ("ADS"."Feature_75" IS NULL) THEN -0.1966488711 ELSE "ADS"."Feature_75" END AS impter_77, CASE WHEN ("ADS"."Feature_76" IS NULL) THEN 0.116526435149 ELSE "ADS"."Feature_76" END AS impter_78, CASE WHEN ("ADS"."Feature_77" IS NULL) THEN 0.193402183481 ELSE "ADS"."Feature_77" END AS impter_79, CASE WHEN ("ADS"."Feature_78" IS NULL) THEN 0.112097090879 ELSE "ADS"."Feature_78" END AS impter_80, CASE WHEN ("ADS"."Feature_79" IS NULL) THEN 0.107090136212 ELSE "ADS"."Feature_79" END AS impter_81, CASE WHEN ("ADS"."Feature_80" IS NULL) THEN -0.0103304292092 ELSE "ADS"."Feature_80" END AS impter_82, CASE WHEN ("ADS"."Feature_81" IS NULL) THEN 0.110265521044 ELSE "ADS"."Feature_81" END AS impter_83, CASE WHEN ("ADS"."Feature_82" IS NULL) THEN 0.0119163458945 ELSE "ADS"."Feature_82" END AS impter_84, CASE WHEN ("ADS"."Feature_83" IS NULL) THEN 0.013369825695 ELSE "ADS"."Feature_83" END AS impter_85, CASE WHEN ("ADS"."Feature_84" IS NULL) THEN -0.15005120007 ELSE "ADS"."Feature_84" END AS impter_86, CASE WHEN ("ADS"."Feature_85" IS NULL) THEN -0.0902217757945 ELSE "ADS"."Feature_85" END AS impter_87, CASE WHEN ("ADS"."Feature_86" IS NULL) THEN -0.160296256572 ELSE "ADS"."Feature_86" END AS impter_88, CASE WHEN ("ADS"."Feature_87" IS NULL) THEN -0.101270172935 ELSE "ADS"."Feature_87" END AS impter_89, CASE WHEN ("ADS"."Feature_88" IS NULL) THEN 0.332354300629 ELSE "ADS"."Feature_88" END AS impter_90, CASE WHEN ("ADS"."Feature_89" IS NULL) THEN 0.0517311730608 ELSE "ADS"."Feature_89" END AS impter_91, CASE WHEN ("ADS"."Feature_90" IS NULL) THEN 0.10788792122 ELSE "ADS"."Feature_90" END AS impter_92, CASE WHEN ("ADS"."Feature_91" IS NULL) THEN 0.214549318747 ELSE "ADS"."Feature_91" END AS impter_93, CASE WHEN ("ADS"."Feature_92" IS NULL) THEN -0.163173377699 ELSE "ADS"."Feature_92" END AS impter_94, CASE WHEN ("ADS"."Feature_93" IS NULL) THEN -0.224238407688 ELSE "ADS"."Feature_93" END AS impter_95, CASE WHEN ("ADS"."Feature_94" IS NULL) THEN -0.276958475653 ELSE "ADS"."Feature_94" END AS impter_96, CASE WHEN ("ADS"."Feature_95" IS NULL) THEN 0.037863552135 ELSE "ADS"."Feature_95" END AS impter_97, CASE WHEN ("ADS"."Feature_96" IS NULL) THEN -0.0275885280314 ELSE "ADS"."Feature_96" END AS impter_98, CASE WHEN ("ADS"."Feature_97" IS NULL) THEN 0.105287788103 ELSE "ADS"."Feature_97" END AS impter_99, CASE WHEN ("ADS"."Feature_98" IS NULL) THEN 0.0664070338022 ELSE "ADS"."Feature_98" END AS impter_100, CASE WHEN ("ADS"."Feature_99" IS NULL) THEN 0.0656993099584 ELSE "ADS"."Feature_99" END AS impter_101 
FROM "RandomReg_100" AS "ADS"), 
"ADS_sca_2_OUT" AS 
(SELECT "ADS_imp_1_OUT"."KEY" AS "KEY", (CAST("ADS_imp_1_OUT".impter_2 AS DOUBLE) - -0.0812808530019) / 1.00004035593 AS scaler_2, (CAST("ADS_imp_1_OUT".impter_3 AS DOUBLE) - -0.134368051725) / 0.883790498818 AS scaler_3, (CAST("ADS_imp_1_OUT".impter_4 AS DOUBLE) - -0.117133543927) / 0.85705690229 AS scaler_4, (CAST("ADS_imp_1_OUT".impter_5 AS DOUBLE) - 0.103145256915) / 1.00291762835 AS scaler_5, (CAST("ADS_imp_1_OUT".impter_6 AS DOUBLE) - 0.048598770616) / 0.912896663254 AS scaler_6, (CAST("ADS_imp_1_OUT".impter_7 AS DOUBLE) - 0.0998569467735) / 0.898709059445 AS scaler_7, (CAST("ADS_imp_1_OUT".impter_8 AS DOUBLE) - 0.0672774556566) / 1.01424476115 AS scaler_8, (CAST("ADS_imp_1_OUT".impter_9 AS DOUBLE) - 0.162238409285) / 1.07476623075 AS scaler_9, (CAST("ADS_imp_1_OUT".impter_10 AS DOUBLE) - 0.0406936285261) / 1.02626786723 AS scaler_10, (CAST("ADS_imp_1_OUT".impter_11 AS DOUBLE) - 0.0516599050886) / 0.840243604374 AS scaler_11, (CAST("ADS_imp_1_OUT".impter_12 AS DOUBLE) - 0.101790678393) / 1.00682423639 AS scaler_12, (CAST("ADS_imp_1_OUT".impter_13 AS DOUBLE) - -0.17597473627) / 0.924071076492 AS scaler_13, (CAST("ADS_imp_1_OUT".impter_14 AS DOUBLE) - -0.096751384941) / 0.978379086977 AS scaler_14, (CAST("ADS_imp_1_OUT".impter_15 AS DOUBLE) - -0.0460865691263) / 0.978113535429 AS scaler_15, (CAST("ADS_imp_1_OUT".impter_16 AS DOUBLE) - 0.101658522861) / 0.901445697871 AS scaler_16, (CAST("ADS_imp_1_OUT".impter_17 AS DOUBLE) - 0.111799030108) / 0.977915503486 AS scaler_17, (CAST("ADS_imp_1_OUT".impter_18 AS DOUBLE) - -0.00611023335938) / 0.998102069762 AS scaler_18, (CAST("ADS_imp_1_OUT".impter_19 AS DOUBLE) - 0.0714470406891) / 0.887481646517 AS scaler_19, (CAST("ADS_imp_1_OUT".impter_20 AS DOUBLE) - -0.0880845865012) / 0.839292570374 AS scaler_20, (CAST("ADS_imp_1_OUT".impter_21 AS DOUBLE) - -0.0718279900088) / 0.950741976578 AS scaler_21, (CAST("ADS_imp_1_OUT".impter_22 AS DOUBLE) - -0.0723020084731) / 1.06682699865 AS scaler_22, (CAST("ADS_imp_1_OUT".impter_23 AS DOUBLE) - 0.0289669307994) / 0.990282372492 AS scaler_23, (CAST("ADS_imp_1_OUT".impter_24 AS DOUBLE) - 0.21388217633) / 0.862325396878 AS scaler_24, (CAST("ADS_imp_1_OUT".impter_25 AS DOUBLE) - -0.0666929791941) / 0.959877056408 AS scaler_25, (CAST("ADS_imp_1_OUT".impter_26 AS DOUBLE) - 0.04615234855) / 0.987850288585 AS scaler_26, (CAST("ADS_imp_1_OUT".impter_27 AS DOUBLE) - 0.0324951322277) / 0.958395474025 AS scaler_27, (CAST("ADS_imp_1_OUT".impter_28 AS DOUBLE) - 0.0522423933061) / 0.977110727504 AS scaler_28, (CAST("ADS_imp_1_OUT".impter_29 AS DOUBLE) - 0.0187458719666) / 1.05571992608 AS scaler_29, (CAST("ADS_imp_1_OUT".impter_30 AS DOUBLE) - 0.0155530792298) / 0.937648102202 AS scaler_30, (CAST("ADS_imp_1_OUT".impter_31 AS DOUBLE) - 0.22581537299) / 1.0513597557 AS scaler_31, (CAST("ADS_imp_1_OUT".impter_32 AS DOUBLE) - -0.169898577788) / 1.05781688636 AS scaler_32, (CAST("ADS_imp_1_OUT".impter_33 AS DOUBLE) - 0.036044309157) / 0.920010657344 AS scaler_33, (CAST("ADS_imp_1_OUT".impter_34 AS DOUBLE) - -0.171993241626) / 0.981480025144 AS scaler_34, (CAST("ADS_imp_1_OUT".impter_35 AS DOUBLE) - 0.137814188879) / 0.917701205117 AS scaler_35, (CAST("ADS_imp_1_OUT".impter_36 AS DOUBLE) - -0.00243821096422) / 0.894438011611 AS scaler_36, (CAST("ADS_imp_1_OUT".impter_37 AS DOUBLE) - 0.0608337491315) / 0.936165105488 AS scaler_37, (CAST("ADS_imp_1_OUT".impter_38 AS DOUBLE) - -0.1890599869) / 1.12903981758 AS scaler_38, (CAST("ADS_imp_1_OUT".impter_39 AS DOUBLE) - -0.0963521927847) / 1.07035462545 AS scaler_39, (CAST("ADS_imp_1_OUT".impter_40 AS DOUBLE) - -0.101606675074) / 0.920646499227 AS scaler_40, (CAST("ADS_imp_1_OUT".impter_41 AS DOUBLE) - 0.0647525054158) / 0.898610910619 AS scaler_41, (CAST("ADS_imp_1_OUT".impter_42 AS DOUBLE) - -0.302643050361) / 1.13043240597 AS scaler_42, (CAST("ADS_imp_1_OUT".impter_43 AS DOUBLE) - -0.132641556819) / 0.858526079685 AS scaler_43, (CAST("ADS_imp_1_OUT".impter_44 AS DOUBLE) - -0.133405478073) / 0.962489523356 AS scaler_44, (CAST("ADS_imp_1_OUT".impter_45 AS DOUBLE) - -0.00114360097028) / 0.904937048405 AS scaler_45, (CAST("ADS_imp_1_OUT".impter_46 AS DOUBLE) - -0.0533515790892) / 1.06100264576 AS scaler_46, (CAST("ADS_imp_1_OUT".impter_47 AS DOUBLE) - 0.0171453700269) / 0.95570978583 AS scaler_47, (CAST("ADS_imp_1_OUT".impter_48 AS DOUBLE) - -0.0590594495726) / 1.08948220126 AS scaler_48, (CAST("ADS_imp_1_OUT".impter_49 AS DOUBLE) - -0.0952887996818) / 0.857147595338 AS scaler_49, (CAST("ADS_imp_1_OUT".impter_50 AS DOUBLE) - -0.157813634634) / 0.991963586752 AS scaler_50, (CAST("ADS_imp_1_OUT".impter_51 AS DOUBLE) - -0.237944333925) / 1.00675031297 AS scaler_51, (CAST("ADS_imp_1_OUT".impter_52 AS DOUBLE) - 0.13863850693) / 1.02792733889 AS scaler_52, (CAST("ADS_imp_1_OUT".impter_53 AS DOUBLE) - -0.0169962199149) / 0.974408927554 AS scaler_53, (CAST("ADS_imp_1_OUT".impter_54 AS DOUBLE) - 0.197014900038) / 0.868492071166 AS scaler_54, (CAST("ADS_imp_1_OUT".impter_55 AS DOUBLE) - 0.0516299047324) / 0.894397475223 AS scaler_55, (CAST("ADS_imp_1_OUT".impter_56 AS DOUBLE) - -0.134530020987) / 0.963483965932 AS scaler_56, (CAST("ADS_imp_1_OUT".impter_57 AS DOUBLE) - 0.147893701046) / 1.06153996262 AS scaler_57, (CAST("ADS_imp_1_OUT".impter_58 AS DOUBLE) - -0.0131427594384) / 0.97720152785 AS scaler_58, (CAST("ADS_imp_1_OUT".impter_59 AS DOUBLE) - -0.0929916299466) / 1.00717584355 AS scaler_59, (CAST("ADS_imp_1_OUT".impter_60 AS DOUBLE) - -0.24689492769) / 0.923735412805 AS scaler_60, (CAST("ADS_imp_1_OUT".impter_61 AS DOUBLE) - 0.134997271083) / 1.10158436882 AS scaler_61, (CAST("ADS_imp_1_OUT".impter_62 AS DOUBLE) - 0.00255440055077) / 1.06644516394 AS scaler_62, (CAST("ADS_imp_1_OUT".impter_63 AS DOUBLE) - 0.125273686635) / 1.10356772219 AS scaler_63, (CAST("ADS_imp_1_OUT".impter_64 AS DOUBLE) - -0.0373996229606) / 1.03216944442 AS scaler_64, (CAST("ADS_imp_1_OUT".impter_65 AS DOUBLE) - -0.0299886958018) / 1.07149048005 AS scaler_65, (CAST("ADS_imp_1_OUT".impter_66 AS DOUBLE) - -0.0428608851687) / 1.19000074729 AS scaler_66, (CAST("ADS_imp_1_OUT".impter_67 AS DOUBLE) - -0.143834700665) / 0.983863253624 AS scaler_67, (CAST("ADS_imp_1_OUT".impter_68 AS DOUBLE) - -0.0526979391089) / 1.13300410964 AS scaler_68, (CAST("ADS_imp_1_OUT".impter_69 AS DOUBLE) - 0.0292679402713) / 0.950591188382 AS scaler_69, (CAST("ADS_imp_1_OUT".impter_70 AS DOUBLE) - 0.104310808883) / 0.912489280474 AS scaler_70, (CAST("ADS_imp_1_OUT".impter_71 AS DOUBLE) - -0.0961968743305) / 1.04352637486 AS scaler_71, (CAST("ADS_imp_1_OUT".impter_72 AS DOUBLE) - 0.00673331929833) / 1.068622613 AS scaler_72, (CAST("ADS_imp_1_OUT".impter_73 AS DOUBLE) - 0.0328966593537) / 0.859185924601 AS scaler_73, (CAST("ADS_imp_1_OUT".impter_74 AS DOUBLE) - 0.0806427727546) / 1.03107280398 AS scaler_74, (CAST("ADS_imp_1_OUT".impter_75 AS DOUBLE) - -0.106035567555) / 0.97576444918 AS scaler_75, (CAST("ADS_imp_1_OUT".impter_76 AS DOUBLE) - 0.094891001483) / 0.908286175367 AS scaler_76, (CAST("ADS_imp_1_OUT".impter_77 AS DOUBLE) - -0.1966488711) / 0.95700911115 AS scaler_77, (CAST("ADS_imp_1_OUT".impter_78 AS DOUBLE) - 0.116526435149) / 0.890699364506 AS scaler_78, (CAST("ADS_imp_1_OUT".impter_79 AS DOUBLE) - 0.193402183481) / 1.01519063544 AS scaler_79, (CAST("ADS_imp_1_OUT".impter_80 AS DOUBLE) - 0.112097090879) / 1.0005941329 AS scaler_80, (CAST("ADS_imp_1_OUT".impter_81 AS DOUBLE) - 0.107090136212) / 0.998199099541 AS scaler_81, (CAST("ADS_imp_1_OUT".impter_82 AS DOUBLE) - -0.0103304292092) / 1.1261340687 AS scaler_82, (CAST("ADS_imp_1_OUT".impter_83 AS DOUBLE) - 0.110265521044) / 1.02036315958 AS scaler_83, (CAST("ADS_imp_1_OUT".impter_84 AS DOUBLE) - 0.0119163458945) / 0.952019831589 AS scaler_84, (CAST("ADS_imp_1_OUT".impter_85 AS DOUBLE) - 0.013369825695) / 1.05396504769 AS scaler_85, (CAST("ADS_imp_1_OUT".impter_86 AS DOUBLE) - -0.15005120007) / 0.998199382399 AS scaler_86, (CAST("ADS_imp_1_OUT".impter_87 AS DOUBLE) - -0.0902217757945) / 0.911905498566 AS scaler_87, (CAST("ADS_imp_1_OUT".impter_88 AS DOUBLE) - -0.160296256572) / 1.05306114439 AS scaler_88, (CAST("ADS_imp_1_OUT".impter_89 AS DOUBLE) - -0.101270172935) / 1.06730881623 AS scaler_89, (CAST("ADS_imp_1_OUT".impter_90 AS DOUBLE) - 0.332354300629) / 0.85173986088 AS scaler_90, (CAST("ADS_imp_1_OUT".impter_91 AS DOUBLE) - 0.0517311730608) / 0.903657197208 AS scaler_91, (CAST("ADS_imp_1_OUT".impter_92 AS DOUBLE) - 0.10788792122) / 0.967916174644 AS scaler_92, (CAST("ADS_imp_1_OUT".impter_93 AS DOUBLE) - 0.214549318747) / 0.905927839775 AS scaler_93, (CAST("ADS_imp_1_OUT".impter_94 AS DOUBLE) - -0.163173377699) / 1.09771899499 AS scaler_94, (CAST("ADS_imp_1_OUT".impter_95 AS DOUBLE) - -0.224238407688) / 0.785962436803 AS scaler_95, (CAST("ADS_imp_1_OUT".impter_96 AS DOUBLE) - -0.276958475653) / 1.00075974241 AS scaler_96, (CAST("ADS_imp_1_OUT".impter_97 AS DOUBLE) - 0.037863552135) / 0.961749101486 AS scaler_97, (CAST("ADS_imp_1_OUT".impter_98 AS DOUBLE) - -0.0275885280314) / 0.888578840708 AS scaler_98, (CAST("ADS_imp_1_OUT".impter_99 AS DOUBLE) - 0.105287788103) / 0.988117943765 AS scaler_99, (CAST("ADS_imp_1_OUT".impter_100 AS DOUBLE) - 0.0664070338022) / 0.893132152456 AS scaler_100, (CAST("ADS_imp_1_OUT".impter_101 AS DOUBLE) - 0.0656993099584) / 0.936700135182 AS scaler_101 
FROM "ADS_imp_1_OUT"), 
"DT_node_lookup" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_82 <= 0.135885089635849) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_97 <= -0.3484189808368683) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_43 <= -0.0922880470752716) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_6 <= -1.3176839351654053) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_50 <= -0.6029541492462158) THEN 5 ELSE 6 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_40 <= -0.41500037908554077) THEN 8 ELSE 9 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_92 <= -0.432160884141922) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_34 <= 1.099859356880188) THEN 12 ELSE 13 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_35 <= -0.9364092350006104) THEN 15 ELSE 16 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_86 <= 0.18410347402095795) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_40 <= -0.11629784107208252) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_15 <= 0.7607582211494446) THEN 20 ELSE 21 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_42 <= 1.542219638824463) THEN 23 ELSE 24 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_47 <= 0.7033376693725586) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_59 <= 1.057080864906311) THEN 27 ELSE 28 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_44 <= 0.21681813895702362) THEN 30 ELSE 31 END END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_19 <= -0.3298351764678955) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_101 <= 0.3663505017757416) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_70 <= -0.37532007694244385) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_9 <= 0.19408807158470154) THEN 36 ELSE 37 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_3 <= 1.552549123764038) THEN 39 ELSE 40 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_57 <= -0.25391656160354614) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_83 <= 1.1383962631225586) THEN 43 ELSE 44 END ELSE 45 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_34 <= -0.8477431535720825) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_35 <= 1.6468461751937866) THEN 48 ELSE 49 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_83 <= 0.7957848310470581) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_93 <= 0.954957902431488) THEN 52 ELSE 53 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_42 <= 0.17777973413467407) THEN 55 ELSE 56 END END END END END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values"."count" AS "count", "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 5 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 5 AS depth, 4 AS parent_id, -436.8930860886948 AS "Estimator" FROM rdb$database UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 5 AS depth, 4 AS parent_id, -430.7322420182495 AS "Estimator" FROM rdb$database UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS "count", 5 AS depth, 7 AS parent_id, -342.4054039004797 AS "Estimator" FROM rdb$database UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS "count", 5 AS depth, 7 AS parent_id, -289.0914798442405 AS "Estimator" FROM rdb$database UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 5 AS depth, 11 AS parent_id, -197.78121613409624 AS "Estimator" FROM rdb$database UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 5 AS depth, 11 AS parent_id, -200.3373934821458 AS "Estimator" FROM rdb$database UNION ALL SELECT 15 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 5 AS depth, 14 AS parent_id, -167.53786194153668 AS "Estimator" FROM rdb$database UNION ALL SELECT 16 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 5 AS depth, 14 AS parent_id, -172.78010697974267 AS "Estimator" FROM rdb$database UNION ALL SELECT 20 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS "count", 5 AS depth, 19 AS parent_id, 17.269204342160073 AS "Estimator" FROM rdb$database UNION ALL SELECT 21 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS "count", 5 AS depth, 19 AS parent_id, -52.19608399259265 AS "Estimator" FROM rdb$database UNION ALL SELECT 23 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS "count", 5 AS depth, 22 AS parent_id, 109.6215604796885 AS "Estimator" FROM rdb$database UNION ALL SELECT 24 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 5 AS depth, 22 AS parent_id, 183.77184322024888 AS "Estimator" FROM rdb$database UNION ALL SELECT 27 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS "count", 5 AS depth, 26 AS parent_id, -87.98768967181586 AS "Estimator" FROM rdb$database UNION ALL SELECT 28 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 5 AS depth, 26 AS parent_id, -146.53732849176905 AS "Estimator" FROM rdb$database UNION ALL SELECT 30 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 5 AS depth, 29 AS parent_id, -290.52672487497273 AS "Estimator" FROM rdb$database UNION ALL SELECT 31 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 5 AS depth, 29 AS parent_id, -207.8249772062679 AS "Estimator" FROM rdb$database UNION ALL SELECT 36 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 5 AS depth, 35 AS parent_id, -3.8590694942672137 AS "Estimator" FROM rdb$database UNION ALL SELECT 37 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 5 AS depth, 35 AS parent_id, -10.715443370853677 AS "Estimator" FROM rdb$database UNION ALL SELECT 39 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS "count", 5 AS depth, 38 AS parent_id, -78.19974088289858 AS "Estimator" FROM rdb$database UNION ALL SELECT 40 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 5 AS depth, 38 AS parent_id, -107.89147253045782 AS "Estimator" FROM rdb$database UNION ALL SELECT 43 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 5 AS depth, 42 AS parent_id, 122.37894790928655 AS "Estimator" FROM rdb$database UNION ALL SELECT 44 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 5 AS depth, 42 AS parent_id, 128.74971924769997 AS "Estimator" FROM rdb$database UNION ALL SELECT 45 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 4 AS depth, 41 AS parent_id, 94.43377409338842 AS "Estimator" FROM rdb$database UNION ALL SELECT 48 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 4 AS depth, 47 AS parent_id, 419.8117904787066 AS "Estimator" FROM rdb$database UNION ALL SELECT 49 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 4 AS depth, 47 AS parent_id, 294.7646845425511 AS "Estimator" FROM rdb$database UNION ALL SELECT 52 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS "count", 5 AS depth, 51 AS parent_id, 175.13630623402935 AS "Estimator" FROM rdb$database UNION ALL SELECT 53 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS "count", 5 AS depth, 51 AS parent_id, 242.13277188530355 AS "Estimator" FROM rdb$database UNION ALL SELECT 55 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 5 AS depth, 54 AS parent_id, 130.61554227069345 AS "Estimator" FROM rdb$database UNION ALL SELECT 56 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 5 AS depth, 54 AS parent_id, 38.19976422974274 AS "Estimator" FROM rdb$database) AS "Values"), 
"DT_Output" AS 
(SELECT "DT_node_lookup"."KEY" AS "KEY", "DT_node_lookup".node_id_2 AS node_id_2, "DT_node_data".node_id AS node_id, "DT_node_data".feature AS feature, "DT_node_data".threshold AS threshold, "DT_node_data"."count" AS "count", "DT_node_data".depth AS depth, "DT_node_data".parent_id AS parent_id, "DT_node_data"."Estimator" AS "Estimator" 
FROM "DT_node_lookup" LEFT OUTER JOIN "DT_node_data" ON "DT_node_lookup".node_id_2 = "DT_node_data".node_id), 
"BAG_Tree_0" AS 
(SELECT "DT_Output"."KEY" AS "KEY", "DT_Output"."Estimator" AS "Estimator" 
FROM "DT_Output"), 
"DT_node_lookup_1" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_43 <= -0.24190443754196167) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_65 <= 0.3340517282485962) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_82 <= 0.016605645418167114) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_51 <= 0.6710361242294312) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_48 <= -0.13238966464996338) THEN 5 ELSE 6 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_92 <= -0.7204855680465698) THEN 8 ELSE 9 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_43 <= -1.0667657852172852) THEN 11 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_73 <= -1.1124014854431152) THEN 13 ELSE 14 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_90 <= 0.15849824249744415) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_82 <= -0.3875652551651001) THEN 17 ELSE 18 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_38 <= 0.28269705176353455) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_13 <= 1.1512380838394165) THEN 21 ELSE 22 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_29 <= -0.08913635462522507) THEN 24 ELSE 25 END END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_98 <= 0.06357328593730927) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_95 <= 1.359060525894165) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_12 <= 0.34180063009262085) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_57 <= -0.2550550699234009) THEN 30 ELSE 31 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_74 <= 1.0394151210784912) THEN 33 ELSE 34 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_24 <= -0.37234562635421753) THEN 36 ELSE 37 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_69 <= 0.1088850274682045) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_23 <= 0.2690564692020416) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_58 <= 0.09164606034755707) THEN 41 ELSE 42 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_50 <= 0.5146782994270325) THEN 44 ELSE 45 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_93 <= 1.4089877605438232) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_34 <= 0.9721011519432068) THEN 48 ELSE 49 END ELSE 50 END END END END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_1" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values"."count" AS "count", "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 5 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS "count", 5 AS depth, 4 AS parent_id, -277.9943003280067 AS "Estimator" FROM rdb$database UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS "count", 5 AS depth, 4 AS parent_id, -317.7622966546957 AS "Estimator" FROM rdb$database UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 5 AS depth, 7 AS parent_id, -436.8930860886948 AS "Estimator" FROM rdb$database UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 5 AS depth, 7 AS parent_id, -454.8215873712685 AS "Estimator" FROM rdb$database UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 4 AS depth, 10 AS parent_id, 48.423335696929506 AS "Estimator" FROM rdb$database UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 5 AS depth, 12 AS parent_id, -202.60833883427068 AS "Estimator" FROM rdb$database UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS "count", 5 AS depth, 12 AS parent_id, -93.83764625824504 AS "Estimator" FROM rdb$database UNION ALL SELECT 17 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 4 AS depth, 16 AS parent_id, -146.53732849176905 AS "Estimator" FROM rdb$database UNION ALL SELECT 18 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 4 AS depth, 16 AS parent_id, -87.98512254511704 AS "Estimator" FROM rdb$database UNION ALL SELECT 21 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 5 AS depth, 20 AS parent_id, 38.19976422974274 AS "Estimator" FROM rdb$database UNION ALL SELECT 22 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 5 AS depth, 20 AS parent_id, 94.43377409338842 AS "Estimator" FROM rdb$database UNION ALL SELECT 24 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 5 AS depth, 23 AS parent_id, 215.90083761986222 AS "Estimator" FROM rdb$database UNION ALL SELECT 25 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 5 AS depth, 23 AS parent_id, 233.33694106574706 AS "Estimator" FROM rdb$database UNION ALL SELECT 30 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS "count", 5 AS depth, 29 AS parent_id, 260.903930477948 AS "Estimator" FROM rdb$database UNION ALL SELECT 31 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS "count", 5 AS depth, 29 AS parent_id, 197.52771586544975 AS "Estimator" FROM rdb$database UNION ALL SELECT 33 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS "count", 5 AS depth, 32 AS parent_id, 143.79050379619025 AS "Estimator" FROM rdb$database UNION ALL SELECT 34 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 5 AS depth, 32 AS parent_id, 39.44300011869663 AS "Estimator" FROM rdb$database UNION ALL SELECT 36 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 4 AS depth, 35 AS parent_id, 419.8117904787066 AS "Estimator" FROM rdb$database UNION ALL SELECT 37 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 4 AS depth, 35 AS parent_id, 294.7646845425511 AS "Estimator" FROM rdb$database UNION ALL SELECT 41 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS "count", 5 AS depth, 40 AS parent_id, 288.0094422410094 AS "Estimator" FROM rdb$database UNION ALL SELECT 42 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 5 AS depth, 40 AS parent_id, 195.39419395402132 AS "Estimator" FROM rdb$database UNION ALL SELECT 44 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 5 AS depth, 43 AS parent_id, 75.60702200307296 AS "Estimator" FROM rdb$database UNION ALL SELECT 45 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS "count", 5 AS depth, 43 AS parent_id, 118.41659006827764 AS "Estimator" FROM rdb$database UNION ALL SELECT 48 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS "count", 5 AS depth, 47 AS parent_id, -34.42289055269504 AS "Estimator" FROM rdb$database UNION ALL SELECT 49 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 5 AS depth, 47 AS parent_id, 75.33652615813574 AS "Estimator" FROM rdb$database UNION ALL SELECT 50 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 4 AS depth, 46 AS parent_id, -140.57351311758325 AS "Estimator" FROM rdb$database) AS "Values"), 
"DT_Output_1" AS 
(SELECT "DT_node_lookup_1"."KEY" AS "KEY", "DT_node_lookup_1".node_id_2 AS node_id_2, "DT_node_data_1".node_id AS node_id, "DT_node_data_1".feature AS feature, "DT_node_data_1".threshold AS threshold, "DT_node_data_1"."count" AS "count", "DT_node_data_1".depth AS depth, "DT_node_data_1".parent_id AS parent_id, "DT_node_data_1"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_1" LEFT OUTER JOIN "DT_node_data_1" ON "DT_node_lookup_1".node_id_2 = "DT_node_data_1".node_id), 
"BAG_Tree_1" AS 
(SELECT "DT_Output_1"."KEY" AS "KEY", "DT_Output_1"."Estimator" AS "Estimator" 
FROM "DT_Output_1"), 
"DT_node_lookup_2" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_43 <= -0.6384425163269043) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_69 <= -0.36332565546035767) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_88 <= -0.13700932264328003) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_71 <= 0.45342856645584106) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_35 <= 0.42212390899658203) THEN 5 ELSE 6 END ELSE 7 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_96 <= 0.34899836778640747) THEN 9 ELSE 10 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_61 <= 0.10854455828666687) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_3 <= 0.6412311792373657) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_100 <= 0.34490323066711426) THEN 14 ELSE 15 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_62 <= -0.6346205472946167) THEN 17 ELSE 18 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_68 <= 0.13060027360916138) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_64 <= 0.6113810539245605) THEN 21 ELSE 22 END ELSE 23 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_41 <= 0.33608147501945496) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_91 <= -0.47807782888412476) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_14 <= 0.8450253009796143) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_11 <= 0.3602488040924072) THEN 28 ELSE 29 END ELSE 30 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_60 <= 0.20620231330394745) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_6 <= -0.5119889974594116) THEN 33 ELSE 34 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_99 <= -0.8897421360015869) THEN 36 ELSE 37 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_2 <= -0.1398860514163971) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_61 <= -0.039171718060970306) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_8 <= -0.18742313981056213) THEN 41 ELSE 42 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_37 <= 0.5639608502388) THEN 44 ELSE 45 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_93 <= -0.4381721615791321) THEN 47 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_40 <= -0.7356124520301819) THEN 49 ELSE 50 END END END END END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_2" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values"."count" AS "count", "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 5 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 5 AS depth, 4 AS parent_id, -87.98512254511704 AS "Estimator" FROM rdb$database UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS "count", 5 AS depth, 4 AS parent_id, -80.78526024187205 AS "Estimator" FROM rdb$database UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 4 AS depth, 3 AS parent_id, 48.423335696929506 AS "Estimator" FROM rdb$database UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 4 AS depth, 8 AS parent_id, -146.53732849176905 AS "Estimator" FROM rdb$database UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 4 AS depth, 8 AS parent_id, -190.64702660055804 AS "Estimator" FROM rdb$database UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS "count", 5 AS depth, 13 AS parent_id, -309.6370714844199 AS "Estimator" FROM rdb$database UNION ALL SELECT 15 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS "count", 5 AS depth, 13 AS parent_id, -291.4048332061729 AS "Estimator" FROM rdb$database UNION ALL SELECT 17 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 5 AS depth, 16 AS parent_id, -338.5499431552182 AS "Estimator" FROM rdb$database UNION ALL SELECT 18 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 5 AS depth, 16 AS parent_id, -327.50301874204285 AS "Estimator" FROM rdb$database UNION ALL SELECT 21 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 5 AS depth, 20 AS parent_id, -234.4658092919816 AS "Estimator" FROM rdb$database UNION ALL SELECT 22 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 5 AS depth, 20 AS parent_id, -234.79191600815204 AS "Estimator" FROM rdb$database UNION ALL SELECT 23 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 4 AS depth, 19 AS parent_id, -207.8249772062679 AS "Estimator" FROM rdb$database UNION ALL SELECT 28 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 5 AS depth, 27 AS parent_id, -202.60833883427068 AS "Estimator" FROM rdb$database UNION ALL SELECT 29 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 5 AS depth, 27 AS parent_id, -196.1762239786283 AS "Estimator" FROM rdb$database UNION ALL SELECT 30 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 4 AS depth, 26 AS parent_id, -172.78010697974267 AS "Estimator" FROM rdb$database UNION ALL SELECT 33 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS "count", 5 AS depth, 32 AS parent_id, 172.24630421448748 AS "Estimator" FROM rdb$database UNION ALL SELECT 34 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS "count", 5 AS depth, 32 AS parent_id, 62.959830768471186 AS "Estimator" FROM rdb$database UNION ALL SELECT 36 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS "count", 5 AS depth, 35 AS parent_id, -107.37554008844234 AS "Estimator" FROM rdb$database UNION ALL SELECT 37 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS "count", 5 AS depth, 35 AS parent_id, -10.699448838632264 AS "Estimator" FROM rdb$database UNION ALL SELECT 41 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS "count", 5 AS depth, 40 AS parent_id, 232.57313239110618 AS "Estimator" FROM rdb$database UNION ALL SELECT 42 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS "count", 5 AS depth, 40 AS parent_id, 284.62467006023536 AS "Estimator" FROM rdb$database UNION ALL SELECT 44 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS "count", 5 AS depth, 43 AS parent_id, 133.77117132652984 AS "Estimator" FROM rdb$database UNION ALL SELECT 45 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 5 AS depth, 43 AS parent_id, 174.05588768325575 AS "Estimator" FROM rdb$database UNION ALL SELECT 47 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 4 AS depth, 46 AS parent_id, -51.54063841079579 AS "Estimator" FROM rdb$database UNION ALL SELECT 49 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 5 AS depth, 48 AS parent_id, 195.39419395402132 AS "Estimator" FROM rdb$database UNION ALL SELECT 50 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS "count", 5 AS depth, 48 AS parent_id, 106.33605558789863 AS "Estimator" FROM rdb$database) AS "Values"), 
"DT_Output_2" AS 
(SELECT "DT_node_lookup_2"."KEY" AS "KEY", "DT_node_lookup_2".node_id_2 AS node_id_2, "DT_node_data_2".node_id AS node_id, "DT_node_data_2".feature AS feature, "DT_node_data_2".threshold AS threshold, "DT_node_data_2"."count" AS "count", "DT_node_data_2".depth AS depth, "DT_node_data_2".parent_id AS parent_id, "DT_node_data_2"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_2" LEFT OUTER JOIN "DT_node_data_2" ON "DT_node_lookup_2".node_id_2 = "DT_node_data_2".node_id), 
"BAG_Tree_2" AS 
(SELECT "DT_Output_2"."KEY" AS "KEY", "DT_Output_2"."Estimator" AS "Estimator" 
FROM "DT_Output_2"), 
"DT_node_lookup_3" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_82 <= -0.5905457735061646) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_97 <= -0.2816576361656189) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_70 <= 0.327038049697876) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_15 <= -0.047308117151260376) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_19 <= -0.48369014263153076) THEN 5 ELSE 6 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_34 <= 0.2769126296043396) THEN 8 ELSE 9 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_32 <= 1.1592122316360474) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_42 <= 0.8213825225830078) THEN 12 ELSE 13 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_49 <= 1.4842803478240967) THEN 15 ELSE 16 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_88 <= -0.0067549049854278564) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_9 <= -0.6425902843475342) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_70 <= 0.005364324897527695) THEN 20 ELSE 21 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_99 <= 0.6516649723052979) THEN 23 ELSE 24 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_66 <= 0.9750791788101196) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_25 <= -0.7607408165931702) THEN 27 ELSE 28 END ELSE 29 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_94 <= -0.7621618509292603) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_15 <= 0.26470527052879333) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_11 <= -0.15072588622570038) THEN 33 ELSE 34 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_5 <= -0.5726299285888672) THEN 36 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_44 <= 1.4312689304351807) THEN 38 ELSE 39 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_94 <= 1.4349288940429688) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_44 <= 1.3134000301361084) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_15 <= 0.8135956525802612) THEN 43 ELSE 44 END ELSE 45 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_84 <= -0.43413615226745605) THEN 47 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_9 <= -0.6750941276550293) THEN 49 ELSE 50 END END END END END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_3" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values"."count" AS "count", "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 5 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS "count", 5 AS depth, 4 AS parent_id, -301.31124105639145 AS "Estimator" FROM rdb$database UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS "count", 5 AS depth, 4 AS parent_id, -352.11792714459403 AS "Estimator" FROM rdb$database UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 5 AS depth, 7 AS parent_id, -430.7322420182495 AS "Estimator" FROM rdb$database UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 5 AS depth, 7 AS parent_id, -436.8930860886948 AS "Estimator" FROM rdb$database UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS "count", 5 AS depth, 11 AS parent_id, -197.24621874894024 AS "Estimator" FROM rdb$database UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 5 AS depth, 11 AS parent_id, -200.33739348214584 AS "Estimator" FROM rdb$database UNION ALL SELECT 15 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 5 AS depth, 14 AS parent_id, -234.4658092919816 AS "Estimator" FROM rdb$database UNION ALL SELECT 16 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 5 AS depth, 14 AS parent_id, -257.9792248911822 AS "Estimator" FROM rdb$database UNION ALL SELECT 20 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 5 AS depth, 19 AS parent_id, 75.60702200307296 AS "Estimator" FROM rdb$database UNION ALL SELECT 21 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 5 AS depth, 19 AS parent_id, 75.33652615813574 AS "Estimator" FROM rdb$database UNION ALL SELECT 23 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 5 AS depth, 22 AS parent_id, 183.77184322024888 AS "Estimator" FROM rdb$database UNION ALL SELECT 24 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 5 AS depth, 22 AS parent_id, 215.90083761986222 AS "Estimator" FROM rdb$database UNION ALL SELECT 27 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS "count", 5 AS depth, 26 AS parent_id, -75.11307978566836 AS "Estimator" FROM rdb$database UNION ALL SELECT 28 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS "count", 5 AS depth, 26 AS parent_id, -176.70096647455082 AS "Estimator" FROM rdb$database UNION ALL SELECT 29 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 4 AS depth, 25 AS parent_id, 114.45423222726873 AS "Estimator" FROM rdb$database UNION ALL SELECT 33 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 4 AS depth, 32 AS parent_id, -327.50301874204285 AS "Estimator" FROM rdb$database UNION ALL SELECT 34 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 4 AS depth, 32 AS parent_id, -172.78010697974267 AS "Estimator" FROM rdb$database UNION ALL SELECT 36 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 4 AS depth, 35 AS parent_id, -79.28963380412185 AS "Estimator" FROM rdb$database UNION ALL SELECT 38 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 5 AS depth, 37 AS parent_id, -10.715443370853677 AS "Estimator" FROM rdb$database UNION ALL SELECT 39 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 5 AS depth, 37 AS parent_id, 38.19976422974274 AS "Estimator" FROM rdb$database UNION ALL SELECT 43 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 13 AS "count", 5 AS depth, 42 AS parent_id, 171.2173303723761 AS "Estimator" FROM rdb$database UNION ALL SELECT 44 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS "count", 5 AS depth, 42 AS parent_id, 286.0386139327542 AS "Estimator" FROM rdb$database UNION ALL SELECT 45 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 4 AS depth, 41 AS parent_id, -140.57351311758325 AS "Estimator" FROM rdb$database UNION ALL SELECT 47 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 4 AS depth, 46 AS parent_id, -76.8627548707201 AS "Estimator" FROM rdb$database UNION ALL SELECT 49 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 5 AS depth, 48 AS parent_id, -51.54063841079579 AS "Estimator" FROM rdb$database UNION ALL SELECT 50 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 5 AS depth, 48 AS parent_id, -54.81786631978007 AS "Estimator" FROM rdb$database) AS "Values"), 
"DT_Output_3" AS 
(SELECT "DT_node_lookup_3"."KEY" AS "KEY", "DT_node_lookup_3".node_id_2 AS node_id_2, "DT_node_data_3".node_id AS node_id, "DT_node_data_3".feature AS feature, "DT_node_data_3".threshold AS threshold, "DT_node_data_3"."count" AS "count", "DT_node_data_3".depth AS depth, "DT_node_data_3".parent_id AS parent_id, "DT_node_data_3"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_3" LEFT OUTER JOIN "DT_node_data_3" ON "DT_node_lookup_3".node_id_2 = "DT_node_data_3".node_id), 
"BAG_Tree_3" AS 
(SELECT "DT_Output_3"."KEY" AS "KEY", "DT_Output_3"."Estimator" AS "Estimator" 
FROM "DT_Output_3"), 
"DT_node_lookup_4" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_82 <= -0.2599138915538788) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_57 <= 0.964031994342804) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_43 <= -0.15556256473064423) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_45 <= -1.9152398109436035) THEN 4 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_94 <= 0.1511060744524002) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_71 <= -0.1613456904888153) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_72 <= -0.08867679536342621) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_10 <= -1.073592185974121) THEN 13 ELSE 14 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_64 <= 0.9964526295661926) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_2 <= -0.46227917075157166) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_6 <= 0.2354198694229126) THEN 18 ELSE 19 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_45 <= 0.04705125093460083) THEN 21 ELSE 22 END END ELSE 23 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_19 <= -0.4882625937461853) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_31 <= -0.5568568706512451) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_50 <= -1.250923752784729) THEN 27 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_62 <= 0.21893398463726044) THEN 29 ELSE 30 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_19 <= -1.7056453227996826) THEN 32 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_53 <= 1.071792721748352) THEN 34 ELSE 35 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_24 <= 0.8942134380340576) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_37 <= 0.8171093463897705) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_94 <= -1.7251373529434204) THEN 39 ELSE 40 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_92 <= -1.2859869003295898) THEN 42 ELSE 43 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_43 <= -0.5422762632369995) THEN 45 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_45 <= -0.2854149341583252) THEN 47 ELSE 48 END END END END END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_4" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values"."count" AS "count", "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 4 AS depth, 3 AS parent_id, -146.53732849176905 AS "Estimator" FROM rdb$database UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 6 AS "count", 5 AS depth, 5 AS parent_id, -305.1211137513931 AS "Estimator" FROM rdb$database UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS "count", 5 AS depth, 5 AS parent_id, -244.00161821812998 AS "Estimator" FROM rdb$database UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 5 AS depth, 9 AS parent_id, -55.13785992768933 AS "Estimator" FROM rdb$database UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 5 AS depth, 9 AS parent_id, -86.11645147491663 AS "Estimator" FROM rdb$database UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 5 AS depth, 12 AS parent_id, -167.53786194153668 AS "Estimator" FROM rdb$database UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 5 AS depth, 12 AS parent_id, -190.99779883345465 AS "Estimator" FROM rdb$database UNION ALL SELECT 18 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 5 AS depth, 17 AS parent_id, 183.77184322024888 AS "Estimator" FROM rdb$database UNION ALL SELECT 19 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 5 AS depth, 17 AS parent_id, 136.92680038236625 AS "Estimator" FROM rdb$database UNION ALL SELECT 21 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 5 AS depth, 20 AS parent_id, 75.33652615813574 AS "Estimator" FROM rdb$database UNION ALL SELECT 22 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 5 AS depth, 20 AS parent_id, 75.60702200307296 AS "Estimator" FROM rdb$database UNION ALL SELECT 23 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 3 AS depth, 15 AS parent_id, -42.10296471792358 AS "Estimator" FROM rdb$database UNION ALL SELECT 27 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 4 AS depth, 26 AS parent_id, -10.715443370853677 AS "Estimator" FROM rdb$database UNION ALL SELECT 29 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS "count", 5 AS depth, 28 AS parent_id, 101.56660782160331 AS "Estimator" FROM rdb$database UNION ALL SELECT 30 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 5 AS depth, 28 AS parent_id, 128.74971924769997 AS "Estimator" FROM rdb$database UNION ALL SELECT 32 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 4 AS depth, 31 AS parent_id, -202.60833883427068 AS "Estimator" FROM rdb$database UNION ALL SELECT 34 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS "count", 5 AS depth, 33 AS parent_id, -86.53286310582766 AS "Estimator" FROM rdb$database UNION ALL SELECT 35 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 5 AS depth, 33 AS parent_id, -3.8590694942672137 AS "Estimator" FROM rdb$database UNION ALL SELECT 39 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS "count", 5 AS depth, 38 AS parent_id, -17.80178458293171 AS "Estimator" FROM rdb$database UNION ALL SELECT 40 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 11 AS "count", 5 AS depth, 38 AS parent_id, 181.01831600308512 AS "Estimator" FROM rdb$database UNION ALL SELECT 42 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 5 AS depth, 41 AS parent_id, 419.8117904787066 AS "Estimator" FROM rdb$database UNION ALL SELECT 43 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS "count", 5 AS depth, 41 AS parent_id, 299.12743811895916 AS "Estimator" FROM rdb$database UNION ALL SELECT 45 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 4 AS depth, 44 AS parent_id, 38.19976422974274 AS "Estimator" FROM rdb$database UNION ALL SELECT 47 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 5 AS depth, 46 AS parent_id, -51.54063841079579 AS "Estimator" FROM rdb$database UNION ALL SELECT 48 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 5 AS depth, 46 AS parent_id, -140.57351311758325 AS "Estimator" FROM rdb$database) AS "Values"), 
"DT_Output_4" AS 
(SELECT "DT_node_lookup_4"."KEY" AS "KEY", "DT_node_lookup_4".node_id_2 AS node_id_2, "DT_node_data_4".node_id AS node_id, "DT_node_data_4".feature AS feature, "DT_node_data_4".threshold AS threshold, "DT_node_data_4"."count" AS "count", "DT_node_data_4".depth AS depth, "DT_node_data_4".parent_id AS parent_id, "DT_node_data_4"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_4" LEFT OUTER JOIN "DT_node_data_4" ON "DT_node_lookup_4".node_id_2 = "DT_node_data_4".node_id), 
"BAG_Tree_4" AS 
(SELECT "DT_Output_4"."KEY" AS "KEY", "DT_Output_4"."Estimator" AS "Estimator" 
FROM "DT_Output_4"), 
"DT_node_lookup_5" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_82 <= -0.17478495836257935) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_65 <= -0.024759966880083084) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_43 <= -0.15556256473064423) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_4 <= 0.786942720413208) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_36 <= -1.2527716159820557) THEN 5 ELSE 6 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_92 <= -0.5133842825889587) THEN 8 ELSE 9 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_84 <= 0.05828530341386795) THEN 11 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_40 <= 1.1409262418746948) THEN 13 ELSE 14 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_43 <= -0.7281080484390259) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_45 <= -1.4686870574951172) THEN 17 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_11 <= 1.5903061628341675) THEN 19 ELSE 20 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_99 <= 0.6642626523971558) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_82 <= -1.031199336051941) THEN 23 ELSE 24 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_80 <= 0.5836193561553955) THEN 26 ELSE 27 END END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_13 <= -1.0560717582702637) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_6 <= 0.46844035387039185) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_59 <= -0.17537346482276917) THEN 31 ELSE 32 END ELSE 33 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_83 <= 0.9659855365753174) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_37 <= 0.5280824303627014) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_50 <= -0.6721514463424683) THEN 37 ELSE 38 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_80 <= 1.0278422832489014) THEN 40 ELSE 41 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_31 <= 0.14485293626785278) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_64 <= -0.3903980255126953) THEN 44 ELSE 45 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_24 <= 0.21610042452812195) THEN 47 ELSE 48 END END END END END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_5" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values"."count" AS "count", "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 5 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 5 AS depth, 4 AS parent_id, -207.8249772062679 AS "Estimator" FROM rdb$database UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS "count", 5 AS depth, 4 AS parent_id, -300.4367274016759 AS "Estimator" FROM rdb$database UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS "count", 5 AS depth, 7 AS parent_id, -433.8126640534722 AS "Estimator" FROM rdb$database UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 5 AS depth, 7 AS parent_id, -361.1632498041779 AS "Estimator" FROM rdb$database UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 4 AS depth, 10 AS parent_id, -86.11645147491663 AS "Estimator" FROM rdb$database UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS "count", 5 AS depth, 12 AS parent_id, -194.98507964872638 AS "Estimator" FROM rdb$database UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 5 AS depth, 12 AS parent_id, -167.53786194153668 AS "Estimator" FROM rdb$database UNION ALL SELECT 17 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 4 AS depth, 16 AS parent_id, -146.53732849176905 AS "Estimator" FROM rdb$database UNION ALL SELECT 19 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 5 AS depth, 18 AS parent_id, -234.4658092919816 AS "Estimator" FROM rdb$database UNION ALL SELECT 20 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 5 AS depth, 18 AS parent_id, -190.64702660055804 AS "Estimator" FROM rdb$database UNION ALL SELECT 23 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS "count", 5 AS depth, 22 AS parent_id, 57.479928420061924 AS "Estimator" FROM rdb$database UNION ALL SELECT 24 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS "count", 5 AS depth, 22 AS parent_id, 144.06561030288705 AS "Estimator" FROM rdb$database UNION ALL SELECT 26 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS "count", 5 AS depth, 25 AS parent_id, -55.07386120610747 AS "Estimator" FROM rdb$database UNION ALL SELECT 27 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 5 AS depth, 25 AS parent_id, -42.10296471792358 AS "Estimator" FROM rdb$database UNION ALL SELECT 31 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 4 AS depth, 30 AS parent_id, -172.78010697974267 AS "Estimator" FROM rdb$database UNION ALL SELECT 32 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 4 AS depth, 30 AS parent_id, -202.60833883427068 AS "Estimator" FROM rdb$database UNION ALL SELECT 33 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 3 AS depth, 29 AS parent_id, -4.904591434376485 AS "Estimator" FROM rdb$database UNION ALL SELECT 37 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS "count", 5 AS depth, 36 AS parent_id, -1.5284529027981684 AS "Estimator" FROM rdb$database UNION ALL SELECT 38 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 8 AS "count", 5 AS depth, 36 AS parent_id, 160.1950785598386 AS "Estimator" FROM rdb$database UNION ALL SELECT 40 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS "count", 5 AS depth, 39 AS parent_id, 259.1951167703648 AS "Estimator" FROM rdb$database UNION ALL SELECT 41 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 5 AS depth, 39 AS parent_id, 419.8117904787066 AS "Estimator" FROM rdb$database UNION ALL SELECT 44 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS "count", 5 AS depth, 43 AS parent_id, 99.03982346239465 AS "Estimator" FROM rdb$database UNION ALL SELECT 45 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS "count", 5 AS depth, 43 AS parent_id, 23.42094503357611 AS "Estimator" FROM rdb$database UNION ALL SELECT 47 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 5 AS depth, 46 AS parent_id, -79.28963380412185 AS "Estimator" FROM rdb$database UNION ALL SELECT 48 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 5 AS depth, 46 AS parent_id, -140.57351311758325 AS "Estimator" FROM rdb$database) AS "Values"), 
"DT_Output_5" AS 
(SELECT "DT_node_lookup_5"."KEY" AS "KEY", "DT_node_lookup_5".node_id_2 AS node_id_2, "DT_node_data_5".node_id AS node_id, "DT_node_data_5".feature AS feature, "DT_node_data_5".threshold AS threshold, "DT_node_data_5"."count" AS "count", "DT_node_data_5".depth AS depth, "DT_node_data_5".parent_id AS parent_id, "DT_node_data_5"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_5" LEFT OUTER JOIN "DT_node_data_5" ON "DT_node_lookup_5".node_id_2 = "DT_node_data_5".node_id), 
"BAG_Tree_5" AS 
(SELECT "DT_Output_5"."KEY" AS "KEY", "DT_Output_5"."Estimator" AS "Estimator" 
FROM "DT_Output_5"), 
"DT_node_lookup_6" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_97 <= -0.3545883893966675) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_15 <= 0.31322333216667175) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_60 <= -0.3370527923107147) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_99 <= 0.3789428472518921) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_47 <= 1.585436224937439) THEN 5 ELSE 6 END ELSE 7 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_19 <= 0.8482424020767212) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_77 <= -0.010394670069217682) THEN 10 ELSE 11 END ELSE 12 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_72 <= -0.31539008021354675) THEN 14 ELSE 15 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_70 <= -0.7578790187835693) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_87 <= 0.7658727169036865) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_19 <= -1.2071588039398193) THEN 19 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_90 <= 0.989708423614502) THEN 21 ELSE 22 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_17 <= -0.020362108945846558) THEN 24 ELSE 25 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_81 <= -0.1350070685148239) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_56 <= 0.44433164596557617) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_42 <= 0.01365644857287407) THEN 29 ELSE 30 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_64 <= -0.08650192618370056) THEN 32 ELSE 33 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_71 <= -0.33004483580589294) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_86 <= 0.10651705414056778) THEN 36 ELSE 37 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_89 <= 0.2993222773075104) THEN 39 ELSE 40 END END END END END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_6" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values"."count" AS "count", "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 5 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS "count", 5 AS depth, 4 AS parent_id, -200.19477748418348 AS "Estimator" FROM rdb$database UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 5 AS depth, 4 AS parent_id, -234.4658092919816 AS "Estimator" FROM rdb$database UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 4 AS depth, 3 AS parent_id, -167.53786194153668 AS "Estimator" FROM rdb$database UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS "count", 5 AS depth, 9 AS parent_id, -312.4692471373754 AS "Estimator" FROM rdb$database UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS "count", 5 AS depth, 9 AS parent_id, -349.85659647969806 AS "Estimator" FROM rdb$database UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 4 AS depth, 8 AS parent_id, -430.7322420182495 AS "Estimator" FROM rdb$database UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 3 AS depth, 13 AS parent_id, 174.05588768325575 AS "Estimator" FROM rdb$database UNION ALL SELECT 15 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 3 AS depth, 13 AS parent_id, -55.13785992768933 AS "Estimator" FROM rdb$database UNION ALL SELECT 19 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 4 AS depth, 18 AS parent_id, -146.53732849176905 AS "Estimator" FROM rdb$database UNION ALL SELECT 21 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS "count", 5 AS depth, 20 AS parent_id, -88.08599662350004 AS "Estimator" FROM rdb$database UNION ALL SELECT 22 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS "count", 5 AS depth, 20 AS parent_id, -50.5795657858279 AS "Estimator" FROM rdb$database UNION ALL SELECT 24 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 4 AS depth, 23 AS parent_id, -190.99779883345465 AS "Estimator" FROM rdb$database UNION ALL SELECT 25 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 4 AS depth, 23 AS parent_id, -290.52672487497273 AS "Estimator" FROM rdb$database UNION ALL SELECT 29 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS "count", 5 AS depth, 28 AS parent_id, 10.869390280461314 AS "Estimator" FROM rdb$database UNION ALL SELECT 30 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS "count", 5 AS depth, 28 AS parent_id, 107.44906867815173 AS "Estimator" FROM rdb$database UNION ALL SELECT 32 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 5 AS depth, 31 AS parent_id, -207.8249772062679 AS "Estimator" FROM rdb$database UNION ALL SELECT 33 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 5 AS depth, 31 AS parent_id, -234.79191600815204 AS "Estimator" FROM rdb$database UNION ALL SELECT 36 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS "count", 5 AS depth, 35 AS parent_id, 344.0999710690674 AS "Estimator" FROM rdb$database UNION ALL SELECT 37 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS "count", 5 AS depth, 35 AS parent_id, 213.7433285611016 AS "Estimator" FROM rdb$database UNION ALL SELECT 39 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 6 AS "count", 5 AS depth, 38 AS parent_id, 105.41534311316869 AS "Estimator" FROM rdb$database UNION ALL SELECT 40 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS "count", 5 AS depth, 38 AS parent_id, 198.47951527633785 AS "Estimator" FROM rdb$database) AS "Values"), 
"DT_Output_6" AS 
(SELECT "DT_node_lookup_6"."KEY" AS "KEY", "DT_node_lookup_6".node_id_2 AS node_id_2, "DT_node_data_6".node_id AS node_id, "DT_node_data_6".feature AS feature, "DT_node_data_6".threshold AS threshold, "DT_node_data_6"."count" AS "count", "DT_node_data_6".depth AS depth, "DT_node_data_6".parent_id AS parent_id, "DT_node_data_6"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_6" LEFT OUTER JOIN "DT_node_data_6" ON "DT_node_lookup_6".node_id_2 = "DT_node_data_6".node_id), 
"BAG_Tree_6" AS 
(SELECT "DT_Output_6"."KEY" AS "KEY", "DT_Output_6"."Estimator" AS "Estimator" 
FROM "DT_Output_6"), 
"DT_node_lookup_7" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_43 <= -0.44576358795166016) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_82 <= -0.1993236392736435) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_29 <= 0.09924034774303436) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_94 <= 0.4329536557197571) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_3 <= 0.6412311792373657) THEN 5 ELSE 6 END ELSE 7 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_46 <= -0.45283305644989014) THEN 9 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_85 <= 0.8430514335632324) THEN 11 ELSE 12 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_5 <= 0.08654440194368362) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_34 <= -0.3573017716407776) THEN 15 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_100 <= -0.6467522978782654) THEN 17 ELSE 18 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_60 <= -0.6479641199111938) THEN 20 ELSE 21 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_94 <= -0.8815765380859375) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_12 <= -0.6827864050865173) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_69 <= 0.5267578959465027) THEN 25 ELSE 26 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_10 <= -0.07696785032749176) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_58 <= 0.38032132387161255) THEN 29 ELSE 30 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_17 <= -0.7945051193237305) THEN 32 ELSE 33 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_81 <= -0.13316401839256287) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_82 <= 0.8295708894729614) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_43 <= 0.14935947954654694) THEN 37 ELSE 38 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_3 <= -0.7720855474472046) THEN 40 ELSE 41 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_37 <= 0.5280824303627014) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_31 <= -1.5268332958221436) THEN 44 ELSE 45 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_34 <= -0.9303498864173889) THEN 47 ELSE 48 END END END END END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_7" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values"."count" AS "count", "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 5 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS "count", 5 AS depth, 4 AS parent_id, -290.9850439982121 AS "Estimator" FROM rdb$database UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS "count", 5 AS depth, 4 AS parent_id, -334.8676350174931 AS "Estimator" FROM rdb$database UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 4 AS depth, 3 AS parent_id, -436.8930860886948 AS "Estimator" FROM rdb$database UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 4 AS depth, 8 AS parent_id, -310.56333873263117 AS "Estimator" FROM rdb$database UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS "count", 5 AS depth, 10 AS parent_id, -227.9686546286384 AS "Estimator" FROM rdb$database UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS "count", 5 AS depth, 10 AS parent_id, -168.59217754616355 AS "Estimator" FROM rdb$database UNION ALL SELECT 15 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 4 AS depth, 14 AS parent_id, -202.60833883427068 AS "Estimator" FROM rdb$database UNION ALL SELECT 17 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 5 AS depth, 16 AS parent_id, -76.8627548707201 AS "Estimator" FROM rdb$database UNION ALL SELECT 18 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS "count", 5 AS depth, 16 AS parent_id, -80.78526024187205 AS "Estimator" FROM rdb$database UNION ALL SELECT 20 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 4 AS depth, 19 AS parent_id, 48.423335696929506 AS "Estimator" FROM rdb$database UNION ALL SELECT 21 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 4 AS depth, 19 AS parent_id, 38.19976422974274 AS "Estimator" FROM rdb$database UNION ALL SELECT 25 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 4 AS depth, 24 AS parent_id, -79.28963380412185 AS "Estimator" FROM rdb$database UNION ALL SELECT 26 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 4 AS depth, 24 AS parent_id, 62.605323392817695 AS "Estimator" FROM rdb$database UNION ALL SELECT 29 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 5 AS depth, 28 AS parent_id, -172.78010697974267 AS "Estimator" FROM rdb$database UNION ALL SELECT 30 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 5 AS depth, 28 AS parent_id, -167.53786194153668 AS "Estimator" FROM rdb$database UNION ALL SELECT 32 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 5 AS depth, 31 AS parent_id, -200.33739348214584 AS "Estimator" FROM rdb$database UNION ALL SELECT 33 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 5 AS depth, 31 AS parent_id, -190.99779883345465 AS "Estimator" FROM rdb$database UNION ALL SELECT 37 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS "count", 5 AS depth, 36 AS parent_id, -152.83634433227704 AS "Estimator" FROM rdb$database UNION ALL SELECT 38 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS "count", 5 AS depth, 36 AS parent_id, -3.7150483664869456 AS "Estimator" FROM rdb$database UNION ALL SELECT 40 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS "count", 5 AS depth, 39 AS parent_id, 125.56433357849326 AS "Estimator" FROM rdb$database UNION ALL SELECT 41 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS "count", 5 AS depth, 39 AS parent_id, 176.9109362378024 AS "Estimator" FROM rdb$database UNION ALL SELECT 44 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS "count", 5 AS depth, 43 AS parent_id, 12.033191796138581 AS "Estimator" FROM rdb$database UNION ALL SELECT 45 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 13 AS "count", 5 AS depth, 43 AS parent_id, 186.69926654930842 AS "Estimator" FROM rdb$database UNION ALL SELECT 47 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 5 AS depth, 46 AS parent_id, 419.8117904787066 AS "Estimator" FROM rdb$database UNION ALL SELECT 48 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS "count", 5 AS depth, 46 AS parent_id, 288.33141635856674 AS "Estimator" FROM rdb$database) AS "Values"), 
"DT_Output_7" AS 
(SELECT "DT_node_lookup_7"."KEY" AS "KEY", "DT_node_lookup_7".node_id_2 AS node_id_2, "DT_node_data_7".node_id AS node_id, "DT_node_data_7".feature AS feature, "DT_node_data_7".threshold AS threshold, "DT_node_data_7"."count" AS "count", "DT_node_data_7".depth AS depth, "DT_node_data_7".parent_id AS parent_id, "DT_node_data_7"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_7" LEFT OUTER JOIN "DT_node_data_7" ON "DT_node_lookup_7".node_id_2 = "DT_node_data_7".node_id), 
"BAG_Tree_7" AS 
(SELECT "DT_Output_7"."KEY" AS "KEY", "DT_Output_7"."Estimator" AS "Estimator" 
FROM "DT_Output_7"), 
"DT_node_lookup_8" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_82 <= -0.5676142573356628) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_43 <= 0.14935947954654694) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_28 <= -0.5670719742774963) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_18 <= -0.7129938006401062) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_27 <= -0.11800521612167358) THEN 5 ELSE 6 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_3 <= -0.0187528133392334) THEN 8 ELSE 9 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_63 <= -0.18518686294555664) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_53 <= -0.07446937263011932) THEN 12 ELSE 13 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_45 <= -0.10983976721763611) THEN 15 ELSE 16 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_33 <= -0.518391489982605) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_76 <= -1.6602555513381958) THEN 19 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_33 <= -0.9197112917900085) THEN 21 ELSE 22 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_44 <= 0.7461913824081421) THEN 24 ELSE 25 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_48 <= -0.22414420545101166) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_17 <= 1.0705060958862305) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_95 <= 2.1624717712402344) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_64 <= -0.8457379341125488) THEN 30 ELSE 31 END ELSE 32 END ELSE 33 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_96 <= -0.8380407094955444) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_68 <= 0.24510791897773743) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_22 <= -1.6742477416992188) THEN 37 ELSE 38 END ELSE 39 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_95 <= -0.7109259366989136) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_28 <= -0.12265044450759888) THEN 42 ELSE 43 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_82 <= 0.03779133781790733) THEN 45 ELSE 46 END END END END END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_8" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values"."count" AS "count", "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 5 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 5 AS depth, 4 AS parent_id, -430.7322420182495 AS "Estimator" FROM rdb$database UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 5 AS depth, 4 AS parent_id, -436.8930860886948 AS "Estimator" FROM rdb$database UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 5 AS depth, 7 AS parent_id, -310.56333873263117 AS "Estimator" FROM rdb$database UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 5 AS depth, 7 AS parent_id, -338.5499431552182 AS "Estimator" FROM rdb$database UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 5 AS depth, 11 AS parent_id, -146.53732849176905 AS "Estimator" FROM rdb$database UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS "count", 5 AS depth, 11 AS parent_id, -199.78996834853058 AS "Estimator" FROM rdb$database UNION ALL SELECT 15 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS "count", 5 AS depth, 14 AS parent_id, -246.3040437706245 AS "Estimator" FROM rdb$database UNION ALL SELECT 16 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS "count", 5 AS depth, 14 AS parent_id, -287.3395119211027 AS "Estimator" FROM rdb$database UNION ALL SELECT 19 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 4 AS depth, 18 AS parent_id, -200.33739348214584 AS "Estimator" FROM rdb$database UNION ALL SELECT 21 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS "count", 5 AS depth, 20 AS parent_id, -46.44792978784549 AS "Estimator" FROM rdb$database UNION ALL SELECT 22 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 5 AS depth, 20 AS parent_id, -102.26347334362194 AS "Estimator" FROM rdb$database UNION ALL SELECT 24 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 4 AS depth, 23 AS parent_id, 114.45423222726873 AS "Estimator" FROM rdb$database UNION ALL SELECT 25 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 4 AS depth, 23 AS parent_id, 75.60702200307296 AS "Estimator" FROM rdb$database UNION ALL SELECT 30 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS "count", 5 AS depth, 29 AS parent_id, 157.53882923776118 AS "Estimator" FROM rdb$database UNION ALL SELECT 31 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS "count", 5 AS depth, 29 AS parent_id, 255.712657091142 AS "Estimator" FROM rdb$database UNION ALL SELECT 32 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 4 AS depth, 28 AS parent_id, 419.8117904787066 AS "Estimator" FROM rdb$database UNION ALL SELECT 33 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 3 AS depth, 27 AS parent_id, -140.57351311758325 AS "Estimator" FROM rdb$database UNION ALL SELECT 37 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS "count", 5 AS depth, 36 AS parent_id, 76.63859902488964 AS "Estimator" FROM rdb$database UNION ALL SELECT 38 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS "count", 5 AS depth, 36 AS parent_id, 134.61347025859965 AS "Estimator" FROM rdb$database UNION ALL SELECT 39 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 4 AS depth, 35 AS parent_id, 327.27619652811467 AS "Estimator" FROM rdb$database UNION ALL SELECT 42 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 5 AS depth, 41 AS parent_id, 278.8145316391315 AS "Estimator" FROM rdb$database UNION ALL SELECT 43 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 5 AS depth, 41 AS parent_id, 136.92680038236625 AS "Estimator" FROM rdb$database UNION ALL SELECT 45 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS "count", 5 AS depth, 44 AS parent_id, -14.683897347860945 AS "Estimator" FROM rdb$database UNION ALL SELECT 46 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 8 AS "count", 5 AS depth, 44 AS parent_id, -108.12274909378837 AS "Estimator" FROM rdb$database) AS "Values"), 
"DT_Output_8" AS 
(SELECT "DT_node_lookup_8"."KEY" AS "KEY", "DT_node_lookup_8".node_id_2 AS node_id_2, "DT_node_data_8".node_id AS node_id, "DT_node_data_8".feature AS feature, "DT_node_data_8".threshold AS threshold, "DT_node_data_8"."count" AS "count", "DT_node_data_8".depth AS depth, "DT_node_data_8".parent_id AS parent_id, "DT_node_data_8"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_8" LEFT OUTER JOIN "DT_node_data_8" ON "DT_node_lookup_8".node_id_2 = "DT_node_data_8".node_id), 
"BAG_Tree_8" AS 
(SELECT "DT_Output_8"."KEY" AS "KEY", "DT_Output_8"."Estimator" AS "Estimator" 
FROM "DT_Output_8"), 
"DT_node_lookup_9" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_82 <= -0.5905457735061646) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_43 <= -0.35369566082954407) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_65 <= 0.07095328718423843) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_18 <= -0.7129938006401062) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_52 <= 0.2289997935295105) THEN 5 ELSE 6 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_69 <= -0.32832205295562744) THEN 8 ELSE 9 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_81 <= -0.34679239988327026) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_98 <= -0.3886333107948303) THEN 12 ELSE 13 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_30 <= 1.517297387123108) THEN 15 ELSE 16 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_83 <= -0.1402587741613388) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_81 <= -0.2491864413022995) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_84 <= -0.63832026720047) THEN 20 ELSE 21 END ELSE 22 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_63 <= -1.0312206745147705) THEN 24 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_80 <= 0.09387217462062836) THEN 26 ELSE 27 END END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_41 <= 0.43509984016418457) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_3 <= -0.0815727636218071) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_19 <= -0.5461323857307434) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_75 <= 0.7287901043891907) THEN 32 ELSE 33 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_90 <= 1.4343923330307007) THEN 35 ELSE 36 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_29 <= -0.15350958704948425) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_60 <= 1.4446299076080322) THEN 39 ELSE 40 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_28 <= 0.5832789540290833) THEN 42 ELSE 43 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_55 <= -0.7115787267684937) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_18 <= 0.5566278696060181) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_9 <= 0.42843306064605713) THEN 47 ELSE 48 END ELSE 49 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_46 <= -0.04996819794178009) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_54 <= 0.45903366804122925) THEN 52 ELSE 53 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_7 <= -0.7987546324729919) THEN 55 ELSE 56 END END END END END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_9" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values"."count" AS "count", "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 5 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 5 AS depth, 4 AS parent_id, -454.8215873712685 AS "Estimator" FROM rdb$database UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 5 AS depth, 4 AS parent_id, -430.7322420182495 AS "Estimator" FROM rdb$database UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS "count", 5 AS depth, 7 AS parent_id, -346.08771203820476 AS "Estimator" FROM rdb$database UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS "count", 5 AS depth, 7 AS parent_id, -299.06823541675624 AS "Estimator" FROM rdb$database UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 5 AS depth, 11 AS parent_id, -146.53732849176905 AS "Estimator" FROM rdb$database UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 5 AS depth, 11 AS parent_id, -190.64702660055804 AS "Estimator" FROM rdb$database UNION ALL SELECT 15 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 5 AS depth, 14 AS parent_id, -257.9792248911822 AS "Estimator" FROM rdb$database UNION ALL SELECT 16 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 5 AS depth, 14 AS parent_id, -234.79191600815204 AS "Estimator" FROM rdb$database UNION ALL SELECT 20 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 5 AS depth, 19 AS parent_id, -200.3373934821458 AS "Estimator" FROM rdb$database UNION ALL SELECT 21 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS "count", 5 AS depth, 19 AS parent_id, -195.14053894959358 AS "Estimator" FROM rdb$database UNION ALL SELECT 22 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 4 AS depth, 18 AS parent_id, -102.26347334362194 AS "Estimator" FROM rdb$database UNION ALL SELECT 24 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 4 AS depth, 23 AS parent_id, 39.44300011869663 AS "Estimator" FROM rdb$database UNION ALL SELECT 26 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 5 AS depth, 25 AS parent_id, 75.33652615813574 AS "Estimator" FROM rdb$database UNION ALL SELECT 27 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 5 AS depth, 25 AS parent_id, 75.60702200307296 AS "Estimator" FROM rdb$database UNION ALL SELECT 32 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS "count", 5 AS depth, 31 AS parent_id, 98.59864297004285 AS "Estimator" FROM rdb$database UNION ALL SELECT 33 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 5 AS depth, 31 AS parent_id, -3.8590694942672137 AS "Estimator" FROM rdb$database UNION ALL SELECT 35 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS "count", 5 AS depth, 34 AS parent_id, 168.8457387530468 AS "Estimator" FROM rdb$database UNION ALL SELECT 36 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 5 AS depth, 34 AS parent_id, 327.27619652811467 AS "Estimator" FROM rdb$database UNION ALL SELECT 39 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS "count", 5 AS depth, 38 AS parent_id, -103.15843491730894 AS "Estimator" FROM rdb$database UNION ALL SELECT 40 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 5 AS depth, 38 AS parent_id, -327.50301874204285 AS "Estimator" FROM rdb$database UNION ALL SELECT 42 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS "count", 5 AS depth, 41 AS parent_id, 8.792374222390666 AS "Estimator" FROM rdb$database UNION ALL SELECT 43 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS "count", 5 AS depth, 41 AS parent_id, 119.5812167572754 AS "Estimator" FROM rdb$database UNION ALL SELECT 47 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 5 AS depth, 46 AS parent_id, 270.9786797098036 AS "Estimator" FROM rdb$database UNION ALL SELECT 48 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS "count", 5 AS depth, 46 AS parent_id, 294.7961773027205 AS "Estimator" FROM rdb$database UNION ALL SELECT 49 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 4 AS depth, 45 AS parent_id, 419.8117904787066 AS "Estimator" FROM rdb$database UNION ALL SELECT 52 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS "count", 5 AS depth, 51 AS parent_id, 129.6826307591967 AS "Estimator" FROM rdb$database UNION ALL SELECT 53 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS "count", 5 AS depth, 51 AS parent_id, 112.55251202912707 AS "Estimator" FROM rdb$database UNION ALL SELECT 55 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 5 AS depth, 54 AS parent_id, 195.39419395402132 AS "Estimator" FROM rdb$database UNION ALL SELECT 56 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS "count", 5 AS depth, 54 AS parent_id, 216.372382438852 AS "Estimator" FROM rdb$database) AS "Values"), 
"DT_Output_9" AS 
(SELECT "DT_node_lookup_9"."KEY" AS "KEY", "DT_node_lookup_9".node_id_2 AS node_id_2, "DT_node_data_9".node_id AS node_id, "DT_node_data_9".feature AS feature, "DT_node_data_9".threshold AS threshold, "DT_node_data_9"."count" AS "count", "DT_node_data_9".depth AS depth, "DT_node_data_9".parent_id AS parent_id, "DT_node_data_9"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_9" LEFT OUTER JOIN "DT_node_data_9" ON "DT_node_lookup_9".node_id_2 = "DT_node_data_9".node_id), 
"BAG_Tree_9" AS 
(SELECT "DT_Output_9"."KEY" AS "KEY", "DT_Output_9"."Estimator" AS "Estimator" 
FROM "DT_Output_9"), 
"Score_Union_CTE" AS 
(SELECT ensemble_score_union."KEY" AS "KEY", ensemble_score_union."Estimator" AS "Estimator" 
FROM (SELECT "BAG_Tree_0"."KEY" AS "KEY", "BAG_Tree_0"."Estimator" AS "Estimator" 
FROM "BAG_Tree_0" UNION ALL SELECT "BAG_Tree_1"."KEY" AS "KEY", "BAG_Tree_1"."Estimator" AS "Estimator" 
FROM "BAG_Tree_1" UNION ALL SELECT "BAG_Tree_2"."KEY" AS "KEY", "BAG_Tree_2"."Estimator" AS "Estimator" 
FROM "BAG_Tree_2" UNION ALL SELECT "BAG_Tree_3"."KEY" AS "KEY", "BAG_Tree_3"."Estimator" AS "Estimator" 
FROM "BAG_Tree_3" UNION ALL SELECT "BAG_Tree_4"."KEY" AS "KEY", "BAG_Tree_4"."Estimator" AS "Estimator" 
FROM "BAG_Tree_4" UNION ALL SELECT "BAG_Tree_5"."KEY" AS "KEY", "BAG_Tree_5"."Estimator" AS "Estimator" 
FROM "BAG_Tree_5" UNION ALL SELECT "BAG_Tree_6"."KEY" AS "KEY", "BAG_Tree_6"."Estimator" AS "Estimator" 
FROM "BAG_Tree_6" UNION ALL SELECT "BAG_Tree_7"."KEY" AS "KEY", "BAG_Tree_7"."Estimator" AS "Estimator" 
FROM "BAG_Tree_7" UNION ALL SELECT "BAG_Tree_8"."KEY" AS "KEY", "BAG_Tree_8"."Estimator" AS "Estimator" 
FROM "BAG_Tree_8" UNION ALL SELECT "BAG_Tree_9"."KEY" AS "KEY", "BAG_Tree_9"."Estimator" AS "Estimator" 
FROM "BAG_Tree_9") AS ensemble_score_union), 
"BAG_AVG_Scores" AS 
(SELECT "T"."KEY" AS "KEY", "T"."Estimator" AS "Estimator" 
FROM (SELECT "Score_Union_CTE"."KEY" AS "KEY", avg("Score_Union_CTE"."Estimator") AS "Estimator" 
FROM "Score_Union_CTE" GROUP BY "Score_Union_CTE"."KEY") AS "T")
 SELECT "BAG_AVG_Scores"."KEY" AS "KEY", "BAG_AVG_Scores"."Estimator" AS "Estimator" 
FROM "BAG_AVG_Scores"