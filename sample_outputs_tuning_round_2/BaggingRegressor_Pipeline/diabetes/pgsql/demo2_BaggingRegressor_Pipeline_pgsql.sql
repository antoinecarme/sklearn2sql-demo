-- This SQL code was generated by sklearn2sql (development version).
-- Copyright 2017

WITH "Score_Union_CTE_0" AS 
(WITH "ADS_imp_1_OUT" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_0" IS NULL) THEN 0.000268693206665 ELSE "ADS"."Feature_0" END AS impter_2, CASE WHEN ("ADS"."Feature_1" IS NULL) THEN 0.000723958058064 ELSE "ADS"."Feature_1" END AS impter_3, CASE WHEN ("ADS"."Feature_2" IS NULL) THEN 0.000728071982559 ELSE "ADS"."Feature_2" END AS impter_4, CASE WHEN ("ADS"."Feature_3" IS NULL) THEN 0.00101356522108 ELSE "ADS"."Feature_3" END AS impter_5, CASE WHEN ("ADS"."Feature_4" IS NULL) THEN 0.000976358073288 ELSE "ADS"."Feature_4" END AS impter_6, CASE WHEN ("ADS"."Feature_5" IS NULL) THEN 0.00176438082423 ELSE "ADS"."Feature_5" END AS impter_7, CASE WHEN ("ADS"."Feature_6" IS NULL) THEN -0.00165128154506 ELSE "ADS"."Feature_6" END AS impter_8, CASE WHEN ("ADS"."Feature_7" IS NULL) THEN 0.00139055019834 ELSE "ADS"."Feature_7" END AS impter_9, CASE WHEN ("ADS"."Feature_8" IS NULL) THEN 0.00127264825481 ELSE "ADS"."Feature_8" END AS impter_10, CASE WHEN ("ADS"."Feature_9" IS NULL) THEN 0.00103442500568 ELSE "ADS"."Feature_9" END AS impter_11 
FROM diabetes AS "ADS"), 
"ADS_sca_2_OUT" AS 
(SELECT "ADS_imp_1_OUT"."KEY" AS "KEY", (CAST("ADS_imp_1_OUT".impter_2 AS FLOAT) - 0.000268693206665) / 0.0472420958365 AS scaler_2, (CAST("ADS_imp_1_OUT".impter_3 AS FLOAT) - 0.000723958058064) / 0.047605576685 AS scaler_3, (CAST("ADS_imp_1_OUT".impter_4 AS FLOAT) - 0.000728071982559) / 0.0469359114394 AS scaler_4, (CAST("ADS_imp_1_OUT".impter_5 AS FLOAT) - 0.00101356522108) / 0.048335271949 AS scaler_5, (CAST("ADS_imp_1_OUT".impter_6 AS FLOAT) - 0.000976358073288) / 0.0480507620097 AS scaler_6, (CAST("ADS_imp_1_OUT".impter_7 AS FLOAT) - 0.00176438082423) / 0.0480608087315 AS scaler_7, (CAST("ADS_imp_1_OUT".impter_8 AS FLOAT) - -0.00165128154506) / 0.0462024037804 AS scaler_8, (CAST("ADS_imp_1_OUT".impter_9 AS FLOAT) - 0.00139055019834) / 0.0473630930405 AS scaler_9, (CAST("ADS_imp_1_OUT".impter_10 AS FLOAT) - 0.00127264825481) / 0.0458928613136 AS scaler_10, (CAST("ADS_imp_1_OUT".impter_11 AS FLOAT) - 0.00103442500568) / 0.0477615851957 AS scaler_11 
FROM "ADS_imp_1_OUT"), 
"DT_node_lookup" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_5 <= 0.3484434187412262) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_10 <= -0.2439785897731781) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_4 <= 0.15079137682914734) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_2 <= -1.8909327983856201) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_5 <= -0.9574206471443176) THEN 5 ELSE 6 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_2 <= 0.06981269270181656) THEN 8 ELSE 9 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_4 <= 0.7937689423561096) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_2 <= -0.4684312045574188) THEN 12 ELSE 13 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_2 <= -0.5453231334686279) THEN 15 ELSE 16 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_9 <= 2.486976146697998) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_5 <= -0.8149627447128296) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_11 <= 0.8230242729187012) THEN 20 ELSE 21 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_6 <= 1.8656004667282104) THEN 23 ELSE 24 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_8 <= -1.50126051902771) THEN 26 ELSE 27 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_4 <= 0.2656087875366211) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_2 <= 0.3773806095123291) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_2 <= -0.46843117475509644) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_4 <= -0.5495948791503906) THEN 32 ELSE 33 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_7 <= 0.09232687950134277) THEN 35 ELSE 36 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_10 <= -0.6866148114204407) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_11 <= -0.17430917918682098) THEN 39 ELSE 40 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_2 <= 0.6849485635757446) THEN 42 ELSE 43 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_9 <= -0.5788267254829407) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_2 <= -0.19930924475193024) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_8 <= 0.21196657419204712) THEN 47 ELSE 48 END ELSE 49 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_4 <= 1.5515639781951904) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_4 <= 1.5171186923980713) THEN 52 ELSE 53 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_7 <= 0.4474309980869293) THEN 55 ELSE 56 END END END END END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 5 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 5 AS depth, 4 AS parent_id, 183.33333333333334 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 5 AS depth, 4 AS parent_id, 103.4 AS "Estimator" UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 41 AS count, 5 AS depth, 7 AS parent_id, 72.65217391304348 AS "Estimator" UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 23 AS count, 5 AS depth, 7 AS parent_id, 100.57894736842105 AS "Estimator" UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS count, 5 AS depth, 11 AS parent_id, 193.0 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 5 AS depth, 11 AS parent_id, 133.0 AS "Estimator" UNION ALL SELECT 15 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 5 AS depth, 14 AS parent_id, 99.0 AS "Estimator" UNION ALL SELECT 16 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS count, 5 AS depth, 14 AS parent_id, 138.75 AS "Estimator" UNION ALL SELECT 20 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 18 AS count, 5 AS depth, 19 AS parent_id, 116.75 AS "Estimator" UNION ALL SELECT 21 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 5 AS depth, 19 AS parent_id, 206.0 AS "Estimator" UNION ALL SELECT 23 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 45 AS count, 5 AS depth, 22 AS parent_id, 170.0 AS "Estimator" UNION ALL SELECT 24 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 5 AS depth, 22 AS parent_id, 101.57142857142857 AS "Estimator" UNION ALL SELECT 26 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 25 AS parent_id, 317.0 AS "Estimator" UNION ALL SELECT 27 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 25 AS parent_id, 306.0 AS "Estimator" UNION ALL SELECT 32 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 31 AS parent_id, 252.0 AS "Estimator" UNION ALL SELECT 33 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 5 AS depth, 31 AS parent_id, 149.66666666666666 AS "Estimator" UNION ALL SELECT 35 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 5 AS depth, 34 AS parent_id, 51.5 AS "Estimator" UNION ALL SELECT 36 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS count, 5 AS depth, 34 AS parent_id, 116.75 AS "Estimator" UNION ALL SELECT 39 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 38 AS parent_id, 80.0 AS "Estimator" UNION ALL SELECT 40 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 5 AS depth, 38 AS parent_id, 67.0 AS "Estimator" UNION ALL SELECT 42 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 8 AS count, 5 AS depth, 41 AS parent_id, 167.36363636363637 AS "Estimator" UNION ALL SELECT 43 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 18 AS count, 5 AS depth, 41 AS parent_id, 220.0 AS "Estimator" UNION ALL SELECT 47 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 46 AS parent_id, 170.0 AS "Estimator" UNION ALL SELECT 48 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 46 AS parent_id, 175.0 AS "Estimator" UNION ALL SELECT 49 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 4 AS depth, 45 AS parent_id, 202.0 AS "Estimator" UNION ALL SELECT 52 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 25 AS count, 5 AS depth, 51 AS parent_id, 241.9142857142857 AS "Estimator" UNION ALL SELECT 53 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 51 AS parent_id, 131.0 AS "Estimator" UNION ALL SELECT 55 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 9 AS count, 5 AS depth, 54 AS parent_id, 289.46153846153845 AS "Estimator" UNION ALL SELECT 56 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 5 AS depth, 54 AS parent_id, 241.0 AS "Estimator") AS "Values"), 
"DT_Output" AS 
(SELECT "DT_node_lookup"."KEY" AS "KEY", "DT_node_lookup".node_id_2 AS node_id_2, "DT_node_data".node_id AS node_id, "DT_node_data".feature AS feature, "DT_node_data".threshold AS threshold, "DT_node_data".count AS count, "DT_node_data".depth AS depth, "DT_node_data".parent_id AS parent_id, "DT_node_data"."Estimator" AS "Estimator" 
FROM "DT_node_lookup" LEFT OUTER JOIN "DT_node_data" ON "DT_node_lookup".node_id_2 = "DT_node_data".node_id), 
"BAG_Tree_0" AS 
(SELECT "DT_Output"."KEY" AS "KEY", "DT_Output"."Estimator" AS "Estimator" 
FROM "DT_Output"), 
"DT_node_lookup_1" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_10 <= 0.006606053560972214) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_5 <= 0.46715831756591797) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_4 <= 0.11634615063667297) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_2 <= -1.5449190139770508) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_5 <= -1.990240454673767) THEN 5 ELSE 6 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_7 <= 2.0144500732421875) THEN 8 ELSE 9 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_4 <= 0.7593237161636353) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_10 <= -0.39942848682403564) THEN 12 ELSE 13 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_5 <= 0.2178570032119751) THEN 15 ELSE 16 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_4 <= 1.103775978088379) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_7 <= 1.9101994037628174) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_2 <= -0.2762012183666229) THEN 20 ELSE 21 END ELSE 22 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_7 <= -0.17481565475463867) THEN 24 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_6 <= 0.004299357533454895) THEN 26 ELSE 27 END END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_4 <= 0.9889585971832275) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_4 <= -0.4692227244377136) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_6 <= 0.5626896619796753) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_11 <= 0.5194880366325378) THEN 32 ELSE 33 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_5 <= 0.7876886129379272) THEN 35 ELSE 36 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_5 <= 0.32470041513442993) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_11 <= 1.863720178604126) THEN 39 ELSE 40 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_2 <= -0.2762012183666229) THEN 42 ELSE 43 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_11 <= 0.25931409001350403) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_8 <= -0.4653558135032654) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_4 <= 1.3678560256958008) THEN 47 ELSE 48 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_8 <= -0.38567081093788147) THEN 50 ELSE 51 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_5 <= -1.0642640590667725) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_8 <= -0.5450407862663269) THEN 54 ELSE 55 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_5 <= -0.4588180184364319) THEN 57 ELSE 58 END END END END END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_1" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 5 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 4 AS parent_id, 55.0 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 14 AS count, 5 AS depth, 4 AS parent_id, 138.20833333333334 AS "Estimator" UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 63 AS count, 5 AS depth, 7 AS parent_id, 81.98 AS "Estimator" UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 7 AS parent_id, 230.0 AS "Estimator" UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS count, 5 AS depth, 11 AS parent_id, 186.3 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 11 AS parent_id, 121.0 AS "Estimator" UNION ALL SELECT 15 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 8 AS count, 5 AS depth, 14 AS parent_id, 128.9375 AS "Estimator" UNION ALL SELECT 16 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 14 AS parent_id, 70.0 AS "Estimator" UNION ALL SELECT 20 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 5 AS depth, 19 AS parent_id, 182.75 AS "Estimator" UNION ALL SELECT 21 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 9 AS count, 5 AS depth, 19 AS parent_id, 104.84615384615384 AS "Estimator" UNION ALL SELECT 22 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 18 AS parent_id, 253.0 AS "Estimator" UNION ALL SELECT 24 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 23 AS parent_id, 288.0 AS "Estimator" UNION ALL SELECT 26 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 25 AS parent_id, 263.0 AS "Estimator" UNION ALL SELECT 27 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 25 AS parent_id, 237.0 AS "Estimator" UNION ALL SELECT 32 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 8 AS count, 5 AS depth, 31 AS parent_id, 134.72727272727272 AS "Estimator" UNION ALL SELECT 33 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS count, 5 AS depth, 31 AS parent_id, 188.85714285714286 AS "Estimator" UNION ALL SELECT 35 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS count, 5 AS depth, 34 AS parent_id, 82.4 AS "Estimator" UNION ALL SELECT 36 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 34 AS parent_id, 120.0 AS "Estimator" UNION ALL SELECT 39 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 29 AS count, 5 AS depth, 38 AS parent_id, 158.7 AS "Estimator" UNION ALL SELECT 40 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 38 AS parent_id, 262.0 AS "Estimator" UNION ALL SELECT 42 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 41 AS parent_id, 48.0 AS "Estimator" UNION ALL SELECT 43 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 27 AS count, 5 AS depth, 41 AS parent_id, 225.1 AS "Estimator" UNION ALL SELECT 47 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 5 AS depth, 46 AS parent_id, 164.5 AS "Estimator" UNION ALL SELECT 48 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 46 AS parent_id, 121.0 AS "Estimator" UNION ALL SELECT 50 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 49 AS parent_id, 308.0 AS "Estimator" UNION ALL SELECT 51 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 5 AS depth, 49 AS parent_id, 224.6 AS "Estimator" UNION ALL SELECT 54 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 53 AS parent_id, 192.0 AS "Estimator" UNION ALL SELECT 55 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 53 AS parent_id, 164.0 AS "Estimator" UNION ALL SELECT 57 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS count, 5 AS depth, 56 AS parent_id, 301.27272727272725 AS "Estimator" UNION ALL SELECT 58 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 18 AS count, 5 AS depth, 56 AS parent_id, 263.0 AS "Estimator") AS "Values"), 
"DT_Output_1" AS 
(SELECT "DT_node_lookup_1"."KEY" AS "KEY", "DT_node_lookup_1".node_id_2 AS node_id_2, "DT_node_data_1".node_id AS node_id, "DT_node_data_1".feature AS feature, "DT_node_data_1".threshold AS threshold, "DT_node_data_1".count AS count, "DT_node_data_1".depth AS depth, "DT_node_data_1".parent_id AS parent_id, "DT_node_data_1"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_1" LEFT OUTER JOIN "DT_node_data_1" ON "DT_node_lookup_1".node_id_2 = "DT_node_data_1".node_id), 
"BAG_Tree_1" AS 
(SELECT "DT_Output_1"."KEY" AS "KEY", "DT_Output_1"."Estimator" AS "Estimator" 
FROM "DT_Output_1"), 
"DT_node_lookup_2" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_4 <= 1.4482282400131226) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_10 <= -0.2121104747056961) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_4 <= 0.11634615063667297) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_5 <= 2.4259543418884277) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_7 <= 2.0144500732421875) THEN 5 ELSE 6 END ELSE 7 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_7 <= -0.02169737219810486) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_5 <= 1.3100342750549316) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_9 <= -0.47364670038223267) THEN 13 ELSE 14 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_11 <= 0.6062126755714417) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_7 <= 1.00126314163208) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_10 <= 0.7317838072776794) THEN 18 ELSE 19 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_6 <= 2.524214744567871) THEN 21 ELSE 22 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_4 <= -0.18217915296554565) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_10 <= 0.27863484621047974) THEN 25 ELSE 26 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_8 <= -0.4255133271217346) THEN 28 ELSE 29 END END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_10 <= -0.49448758363723755) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_9 <= 0.16522455215454102) THEN 32 ELSE 33 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_7 <= 0.4474309980869293) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_10 <= 0.6651052236557007) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_10 <= 0.5247355699539185) THEN 37 ELSE 38 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_7 <= 0.12164740264415741) THEN 40 ELSE 41 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_8 <= -1.1028356552124023) THEN 43 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_8 <= -0.18645834922790527) THEN 45 ELSE 46 END END END END END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_2" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 5 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 75 AS count, 5 AS depth, 4 AS parent_id, 91.7542372881356 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 4 AS parent_id, 230.0 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 3 AS parent_id, 216.0 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 9 AS count, 5 AS depth, 9 AS parent_id, 114.0 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 5 AS depth, 9 AS parent_id, 173.33333333333334 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 5 AS depth, 12 AS parent_id, 171.8 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 12 AS parent_id, 263.0 AS "Estimator" UNION ALL SELECT 18 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 36 AS count, 5 AS depth, 17 AS parent_id, 148.8846153846154 AS "Estimator" UNION ALL SELECT 19 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 16 AS count, 5 AS depth, 17 AS parent_id, 196.125 AS "Estimator" UNION ALL SELECT 21 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 16 AS count, 5 AS depth, 20 AS parent_id, 105.47058823529412 AS "Estimator" UNION ALL SELECT 22 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 5 AS depth, 20 AS parent_id, 207.5 AS "Estimator" UNION ALL SELECT 25 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 5 AS depth, 24 AS parent_id, 114.8 AS "Estimator" UNION ALL SELECT 26 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 6 AS count, 5 AS depth, 24 AS parent_id, 177.42857142857142 AS "Estimator" UNION ALL SELECT 28 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 16 AS count, 5 AS depth, 27 AS parent_id, 251.83333333333334 AS "Estimator" UNION ALL SELECT 29 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 8 AS count, 5 AS depth, 27 AS parent_id, 204.35714285714286 AS "Estimator" UNION ALL SELECT 32 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 31 AS parent_id, 131.0 AS "Estimator" UNION ALL SELECT 33 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 31 AS parent_id, 140.0 AS "Estimator" UNION ALL SELECT 37 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 5 AS depth, 36 AS parent_id, 294.3333333333333 AS "Estimator" UNION ALL SELECT 38 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 5 AS depth, 36 AS parent_id, 334.0 AS "Estimator" UNION ALL SELECT 40 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 7 AS count, 5 AS depth, 39 AS parent_id, 269.9230769230769 AS "Estimator" UNION ALL SELECT 41 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 5 AS depth, 39 AS parent_id, 308.2857142857143 AS "Estimator" UNION ALL SELECT 43 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 42 AS parent_id, 180.0 AS "Estimator" UNION ALL SELECT 45 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS count, 5 AS depth, 44 AS parent_id, 255.875 AS "Estimator" UNION ALL SELECT 46 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 5 AS depth, 44 AS parent_id, 227.5 AS "Estimator") AS "Values"), 
"DT_Output_2" AS 
(SELECT "DT_node_lookup_2"."KEY" AS "KEY", "DT_node_lookup_2".node_id_2 AS node_id_2, "DT_node_data_2".node_id AS node_id, "DT_node_data_2".feature AS feature, "DT_node_data_2".threshold AS threshold, "DT_node_data_2".count AS count, "DT_node_data_2".depth AS depth, "DT_node_data_2".parent_id AS parent_id, "DT_node_data_2"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_2" LEFT OUTER JOIN "DT_node_data_2" ON "DT_node_lookup_2".node_id_2 = "DT_node_data_2".node_id), 
"BAG_Tree_2" AS 
(SELECT "DT_Output_2"."KEY" AS "KEY", "DT_Output_2"."Estimator" AS "Estimator" 
FROM "DT_Output_2"), 
"DT_node_lookup_3" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_5 <= 0.46715831756591797) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_10 <= -0.23324185609817505) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_4 <= 0.11634615063667297) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_4 <= -0.26255133748054504) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_8 <= 0.6502339839935303) THEN 5 ELSE 6 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_11 <= -0.17430917918682098) THEN 8 ELSE 9 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_6 <= -1.0122573375701904) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_2 <= -0.2762012481689453) THEN 12 ELSE 13 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_2 <= 0.8002865314483643) THEN 15 ELSE 16 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_4 <= 1.471191644668579) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_10 <= 1.4572434425354004) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_9 <= 0.6326913833618164) THEN 20 ELSE 21 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_4 <= -0.1477339118719101) THEN 23 ELSE 24 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_3 <= 0.04821458458900452) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_11 <= 0.5194880366325378) THEN 27 ELSE 28 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_2 <= 0.41582661867141724) THEN 30 ELSE 31 END END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_4 <= 0.9315498471260071) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_10 <= -0.021907038986682892) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_4 <= 0.48376190662384033) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_7 <= -0.6862959265708923) THEN 36 ELSE 37 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_8 <= -1.2622056007385254) THEN 39 ELSE 40 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_11 <= 0.9097490310668945) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_6 <= -0.38227856159210205) THEN 43 ELSE 44 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_6 <= 1.04949152469635) THEN 46 ELSE 47 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_4 <= 1.7811987400054932) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_11 <= 0.779662013053894) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_8 <= 0.4111790359020233) THEN 51 ELSE 52 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_8 <= -0.42551329731941223) THEN 54 ELSE 55 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_7 <= 0.09558472037315369) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_6 <= -0.7545387744903564) THEN 58 ELSE 59 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_2 <= 0.33893463015556335) THEN 61 ELSE 62 END END END END END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_3" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 5 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 32 AS count, 5 AS depth, 4 AS parent_id, 109.60416666666667 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 22 AS count, 5 AS depth, 4 AS parent_id, 79.16216216216216 AS "Estimator" UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 10 AS count, 5 AS depth, 7 AS parent_id, 50.8 AS "Estimator" UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS count, 5 AS depth, 7 AS parent_id, 95.0 AS "Estimator" UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 5 AS depth, 11 AS parent_id, 204.0 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 11 AS parent_id, 182.0 AS "Estimator" UNION ALL SELECT 15 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 8 AS count, 5 AS depth, 14 AS parent_id, 134.72727272727272 AS "Estimator" UNION ALL SELECT 16 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 5 AS depth, 14 AS parent_id, 90.0 AS "Estimator" UNION ALL SELECT 20 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 30 AS count, 5 AS depth, 19 AS parent_id, 128.15384615384616 AS "Estimator" UNION ALL SELECT 21 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 29 AS count, 5 AS depth, 19 AS parent_id, 157.9387755102041 AS "Estimator" UNION ALL SELECT 23 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 22 AS parent_id, 161.0 AS "Estimator" UNION ALL SELECT 24 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS count, 5 AS depth, 22 AS parent_id, 230.33333333333334 AS "Estimator" UNION ALL SELECT 27 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 26 AS parent_id, 346.0 AS "Estimator" UNION ALL SELECT 28 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 5 AS depth, 26 AS parent_id, 277.0 AS "Estimator" UNION ALL SELECT 30 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 5 AS depth, 29 AS parent_id, 231.4 AS "Estimator" UNION ALL SELECT 31 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 29 AS parent_id, 180.0 AS "Estimator" UNION ALL SELECT 36 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 35 AS parent_id, 219.0 AS "Estimator" UNION ALL SELECT 37 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 8 AS count, 5 AS depth, 35 AS parent_id, 89.06666666666666 AS "Estimator" UNION ALL SELECT 39 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 38 AS parent_id, 244.0 AS "Estimator" UNION ALL SELECT 40 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 5 AS depth, 38 AS parent_id, 162.5 AS "Estimator" UNION ALL SELECT 43 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 5 AS depth, 42 AS parent_id, 248.66666666666666 AS "Estimator" UNION ALL SELECT 44 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 21 AS count, 5 AS depth, 42 AS parent_id, 181.66666666666666 AS "Estimator" UNION ALL SELECT 46 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 6 AS count, 5 AS depth, 45 AS parent_id, 283.5 AS "Estimator" UNION ALL SELECT 47 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 45 AS parent_id, 120.0 AS "Estimator" UNION ALL SELECT 51 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 8 AS count, 5 AS depth, 50 AS parent_id, 273.92857142857144 AS "Estimator" UNION ALL SELECT 52 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 5 AS depth, 50 AS parent_id, 213.66666666666666 AS "Estimator" UNION ALL SELECT 54 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 6 AS count, 5 AS depth, 53 AS parent_id, 232.30769230769232 AS "Estimator" UNION ALL SELECT 55 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 5 AS depth, 53 AS parent_id, 158.5 AS "Estimator" UNION ALL SELECT 58 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 57 AS parent_id, 321.0 AS "Estimator" UNION ALL SELECT 59 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS count, 5 AS depth, 57 AS parent_id, 266.42857142857144 AS "Estimator" UNION ALL SELECT 61 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 60 AS parent_id, 308.0 AS "Estimator" UNION ALL SELECT 62 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 60 AS parent_id, 310.0 AS "Estimator") AS "Values"), 
"DT_Output_3" AS 
(SELECT "DT_node_lookup_3"."KEY" AS "KEY", "DT_node_lookup_3".node_id_2 AS node_id_2, "DT_node_data_3".node_id AS node_id, "DT_node_data_3".feature AS feature, "DT_node_data_3".threshold AS threshold, "DT_node_data_3".count AS count, "DT_node_data_3".depth AS depth, "DT_node_data_3".parent_id AS parent_id, "DT_node_data_3"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_3" LEFT OUTER JOIN "DT_node_data_3" ON "DT_node_lookup_3".node_id_2 = "DT_node_data_3".node_id), 
"BAG_Tree_3" AS 
(SELECT "DT_Output_3"."KEY" AS "KEY", "DT_Output_3"."Estimator" AS "Estimator" 
FROM "DT_Output_3"), 
"DT_node_lookup_4" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_4 <= 0.2082000970840454) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_10 <= 0.5037015676498413) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_9 <= 0.6326913833618164) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_4 <= -1.2155358791351318) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_2 <= -2.0062708854675293) THEN 5 ELSE 6 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_2 <= -1.0835671424865723) THEN 8 ELSE 9 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_5 <= -0.8743202686309814) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_10 <= -0.6296394467353821) THEN 12 ELSE 13 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_5 <= -0.10267326235771179) THEN 15 ELSE 16 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_7 <= -1.3541522026062012) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_5 <= 0.39592936635017395) THEN 19 ELSE 20 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_8 <= 0.7299189567565918) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_6 <= 0.13315866887569427) THEN 23 ELSE 24 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_6 <= 0.2477002739906311) THEN 26 ELSE 27 END END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_10 <= 0.924607515335083) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_5 <= 0.07539910078048706) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_5 <= -1.1236215829849243) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_9 <= -0.47364670038223267) THEN 32 ELSE 33 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_7 <= -0.5494667887687683) THEN 35 ELSE 36 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_4 <= 1.758235216140747) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_10 <= -0.6844651699066162) THEN 39 ELSE 40 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_5 <= 1.3575202226638794) THEN 42 ELSE 43 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_2 <= -1.4295809268951416) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_5 <= -0.6368904113769531) THEN 46 ELSE 47 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_11 <= 2.6876044273376465) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_8 <= -0.38567081093788147) THEN 50 ELSE 51 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_7 <= 0.7829880714416504) THEN 53 ELSE 54 END END END END END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_4" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 5 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 5 AS depth, 4 AS parent_id, 132.0 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 16 AS count, 5 AS depth, 4 AS parent_id, 71.93103448275862 AS "Estimator" UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 12 AS count, 5 AS depth, 7 AS parent_id, 147.625 AS "Estimator" UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 59 AS count, 5 AS depth, 7 AS parent_id, 101.9578947368421 AS "Estimator" UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 5 AS depth, 11 AS parent_id, 88.5 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 5 AS depth, 11 AS parent_id, 103.0 AS "Estimator" UNION ALL SELECT 15 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 6 AS count, 5 AS depth, 14 AS parent_id, 209.9 AS "Estimator" UNION ALL SELECT 16 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 6 AS count, 5 AS depth, 14 AS parent_id, 128.28571428571428 AS "Estimator" UNION ALL SELECT 19 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 18 AS parent_id, 252.0 AS "Estimator" UNION ALL SELECT 20 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 18 AS parent_id, 283.0 AS "Estimator" UNION ALL SELECT 23 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 7 AS count, 5 AS depth, 22 AS parent_id, 153.0 AS "Estimator" UNION ALL SELECT 24 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 11 AS count, 5 AS depth, 22 AS parent_id, 197.29166666666666 AS "Estimator" UNION ALL SELECT 26 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 5 AS depth, 25 AS parent_id, 194.0 AS "Estimator" UNION ALL SELECT 27 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS count, 5 AS depth, 25 AS parent_id, 111.85714285714286 AS "Estimator" UNION ALL SELECT 32 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 31 AS parent_id, 276.0 AS "Estimator" UNION ALL SELECT 33 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS count, 5 AS depth, 31 AS parent_id, 169.0 AS "Estimator" UNION ALL SELECT 35 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 5 AS depth, 34 AS parent_id, 64.66666666666667 AS "Estimator" UNION ALL SELECT 36 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 15 AS count, 5 AS depth, 34 AS parent_id, 135.30434782608697 AS "Estimator" UNION ALL SELECT 39 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 6 AS count, 5 AS depth, 38 AS parent_id, 159.85714285714286 AS "Estimator" UNION ALL SELECT 40 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 20 AS count, 5 AS depth, 38 AS parent_id, 213.75757575757575 AS "Estimator" UNION ALL SELECT 42 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 5 AS depth, 41 AS parent_id, 251.5 AS "Estimator" UNION ALL SELECT 43 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 5 AS depth, 41 AS parent_id, 306.0 AS "Estimator" UNION ALL SELECT 46 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 45 AS parent_id, 68.0 AS "Estimator" UNION ALL SELECT 47 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 45 AS parent_id, 137.0 AS "Estimator" UNION ALL SELECT 50 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 21 AS count, 5 AS depth, 49 AS parent_id, 255.02857142857144 AS "Estimator" UNION ALL SELECT 51 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 9 AS count, 5 AS depth, 49 AS parent_id, 214.93333333333334 AS "Estimator" UNION ALL SELECT 53 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 52 AS parent_id, 310.0 AS "Estimator" UNION ALL SELECT 54 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 52 AS parent_id, 317.0 AS "Estimator") AS "Values"), 
"DT_Output_4" AS 
(SELECT "DT_node_lookup_4"."KEY" AS "KEY", "DT_node_lookup_4".node_id_2 AS node_id_2, "DT_node_data_4".node_id AS node_id, "DT_node_data_4".feature AS feature, "DT_node_data_4".threshold AS threshold, "DT_node_data_4".count AS count, "DT_node_data_4".depth AS depth, "DT_node_data_4".parent_id AS parent_id, "DT_node_data_4"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_4" LEFT OUTER JOIN "DT_node_data_4" ON "DT_node_lookup_4".node_id_2 = "DT_node_data_4".node_id), 
"BAG_Tree_4" AS 
(SELECT "DT_Output_4"."KEY" AS "KEY", "DT_Output_4"."Estimator" AS "Estimator" 
FROM "DT_Output_4"), 
"DT_node_lookup_5" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_10 <= 0.28708022832870483) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_4 <= 0.11634615063667297) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_10 <= -0.23324185609817505) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_8 <= 0.4908640384674072) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_5 <= -1.9190115928649902) THEN 5 ELSE 6 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_2 <= 0.06981269270181656) THEN 8 ELSE 9 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_10 <= 0.16023415327072144) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_10 <= 0.09841897338628769) THEN 12 ELSE 13 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_8 <= -0.7044107913970947) THEN 15 ELSE 16 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_10 <= -0.4821503162384033) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_2 <= 0.2620426416397095) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_9 <= -0.021762147545814514) THEN 20 ELSE 21 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_7 <= -0.3116447925567627) THEN 23 ELSE 24 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_5 <= -0.6012759208679199) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_4 <= 1.0234037637710571) THEN 27 ELSE 28 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_6 <= -0.7831741571426392) THEN 30 ELSE 31 END END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_4 <= 0.9889585971832275) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_6 <= 1.1497154235839844) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_7 <= 0.023912331089377403) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_7 <= -1.0935254096984863) THEN 36 ELSE 37 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_10 <= 0.30336153507232666) THEN 39 ELSE 40 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_10 <= 1.1957367658615112) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_6 <= 1.4647047519683838) THEN 43 ELSE 44 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_10 <= 1.612431526184082) THEN 46 ELSE 47 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_7 <= 0.43114182353019714) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_11 <= -0.3477584719657898) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_10 <= 0.5425282716751099) THEN 51 ELSE 52 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_2 <= 0.6849485635757446) THEN 54 ELSE 55 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_8 <= -0.9833081960678101) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_5 <= 0.3247004449367523) THEN 58 ELSE 59 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_5 <= 1.0369899272918701) THEN 61 ELSE 62 END END END END END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_5" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 5 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 5 AS depth, 4 AS parent_id, 58.666666666666664 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 38 AS count, 5 AS depth, 4 AS parent_id, 113.92592592592592 AS "Estimator" UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 21 AS count, 5 AS depth, 7 AS parent_id, 67.85714285714286 AS "Estimator" UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 14 AS count, 5 AS depth, 7 AS parent_id, 94.26086956521739 AS "Estimator" UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 17 AS count, 5 AS depth, 11 AS parent_id, 147.52 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 11 AS parent_id, 214.0 AS "Estimator" UNION ALL SELECT 15 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 5 AS depth, 14 AS parent_id, 140.0 AS "Estimator" UNION ALL SELECT 16 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS count, 5 AS depth, 14 AS parent_id, 86.36363636363636 AS "Estimator" UNION ALL SELECT 20 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 7 AS count, 5 AS depth, 19 AS parent_id, 172.0 AS "Estimator" UNION ALL SELECT 21 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 5 AS depth, 19 AS parent_id, 250.5 AS "Estimator" UNION ALL SELECT 23 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 5 AS depth, 22 AS parent_id, 70.66666666666667 AS "Estimator" UNION ALL SELECT 24 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 5 AS depth, 22 AS parent_id, 136.85714285714286 AS "Estimator" UNION ALL SELECT 27 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 5 AS depth, 26 AS parent_id, 184.16666666666666 AS "Estimator" UNION ALL SELECT 28 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 5 AS depth, 26 AS parent_id, 97.25 AS "Estimator" UNION ALL SELECT 30 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 5 AS depth, 29 AS parent_id, 164.5 AS "Estimator" UNION ALL SELECT 31 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 7 AS count, 5 AS depth, 29 AS parent_id, 258.3076923076923 AS "Estimator" UNION ALL SELECT 36 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS count, 5 AS depth, 35 AS parent_id, 206.77777777777777 AS "Estimator" UNION ALL SELECT 37 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 14 AS count, 5 AS depth, 35 AS parent_id, 134.11111111111111 AS "Estimator" UNION ALL SELECT 39 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 5 AS depth, 38 AS parent_id, 291.4 AS "Estimator" UNION ALL SELECT 40 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 21 AS count, 5 AS depth, 38 AS parent_id, 210.02777777777777 AS "Estimator" UNION ALL SELECT 43 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS count, 5 AS depth, 42 AS parent_id, 160.8 AS "Estimator" UNION ALL SELECT 44 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS count, 5 AS depth, 42 AS parent_id, 96.45454545454545 AS "Estimator" UNION ALL SELECT 46 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 5 AS depth, 45 AS parent_id, 266.0 AS "Estimator" UNION ALL SELECT 47 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 5 AS depth, 45 AS parent_id, 199.0 AS "Estimator" UNION ALL SELECT 51 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 50 AS parent_id, 151.0 AS "Estimator" UNION ALL SELECT 52 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 5 AS depth, 50 AS parent_id, 233.66666666666666 AS "Estimator" UNION ALL SELECT 54 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 8 AS count, 5 AS depth, 53 AS parent_id, 273.84615384615387 AS "Estimator" UNION ALL SELECT 55 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS count, 5 AS depth, 53 AS parent_id, 316.8333333333333 AS "Estimator" UNION ALL SELECT 58 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 5 AS depth, 57 AS parent_id, 311.5 AS "Estimator" UNION ALL SELECT 59 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 5 AS depth, 57 AS parent_id, 257.2 AS "Estimator" UNION ALL SELECT 61 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 7 AS count, 5 AS depth, 60 AS parent_id, 168.5 AS "Estimator" UNION ALL SELECT 62 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS count, 5 AS depth, 60 AS parent_id, 230.0 AS "Estimator") AS "Values"), 
"DT_Output_5" AS 
(SELECT "DT_node_lookup_5"."KEY" AS "KEY", "DT_node_lookup_5".node_id_2 AS node_id_2, "DT_node_data_5".node_id AS node_id, "DT_node_data_5".feature AS feature, "DT_node_data_5".threshold AS threshold, "DT_node_data_5".count AS count, "DT_node_data_5".depth AS depth, "DT_node_data_5".parent_id AS parent_id, "DT_node_data_5"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_5" LEFT OUTER JOIN "DT_node_data_5" ON "DT_node_lookup_5".node_id_2 = "DT_node_data_5".node_id), 
"BAG_Tree_5" AS 
(SELECT "DT_Output_5"."KEY" AS "KEY", "DT_Output_5"."Estimator" AS "Estimator" 
FROM "DT_Output_5"), 
"DT_node_lookup_6" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_4 <= -0.021434754133224487) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_10 <= -0.2439785897731781) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_7 <= 2.3076553344726562) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_2 <= -1.2757970094680786) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_5 <= -1.990240454673767) THEN 5 ELSE 6 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_2 <= 0.06981269270181656) THEN 8 ELSE 9 END END ELSE 10 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_5 <= 1.2506767511367798) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_8 <= -0.8637807369232178) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_3 <= 0.04821458458900452) THEN 14 ELSE 15 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_7 <= 1.9395198822021484) THEN 17 ELSE 18 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_2 <= 1.1078544855117798) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_5 <= 1.4643635749816895) THEN 21 ELSE 22 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_3 <= 0.04821458458900452) THEN 24 ELSE 25 END END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_11 <= 0.6929373741149902) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_10 <= -0.5805795192718506) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_4 <= 0.19671835005283356) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_2 <= -0.39153921604156494) THEN 30 ELSE 31 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_2 <= 0.2620426416397095) THEN 33 ELSE 34 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_8 <= -1.0231506824493408) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_2 <= 0.5311645865440369) THEN 37 ELSE 38 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_11 <= -0.0008598752319812775) THEN 40 ELSE 41 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_6 <= 0.77745521068573) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_7 <= 0.2747657001018524) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_4 <= 2.28639554977417) THEN 45 ELSE 46 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_4 <= 1.6548995971679688) THEN 48 ELSE 49 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_10 <= 1.2750499248504639) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_4 <= 0.9430315494537354) THEN 52 ELSE 53 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_5 <= -0.5656614303588867) THEN 55 ELSE 56 END END END END END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_6" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 5 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 4 AS parent_id, 55.0 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 19 AS count, 5 AS depth, 4 AS parent_id, 122.18518518518519 AS "Estimator" UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 37 AS count, 5 AS depth, 7 AS parent_id, 74.11111111111111 AS "Estimator" UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 30 AS count, 5 AS depth, 7 AS parent_id, 101.92857142857143 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 2 AS parent_id, 253.0 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS count, 5 AS depth, 13 AS parent_id, 230.6 AS "Estimator" UNION ALL SELECT 15 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 6 AS count, 5 AS depth, 13 AS parent_id, 145.25 AS "Estimator" UNION ALL SELECT 17 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 32 AS count, 5 AS depth, 16 AS parent_id, 130.40425531914894 AS "Estimator" UNION ALL SELECT 18 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 16 AS parent_id, 230.0 AS "Estimator" UNION ALL SELECT 21 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 20 AS parent_id, 185.0 AS "Estimator" UNION ALL SELECT 22 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 20 AS parent_id, 171.0 AS "Estimator" UNION ALL SELECT 24 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 23 AS parent_id, 281.0 AS "Estimator" UNION ALL SELECT 25 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 23 AS parent_id, 283.0 AS "Estimator" UNION ALL SELECT 30 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 5 AS depth, 29 AS parent_id, 63.5 AS "Estimator" UNION ALL SELECT 31 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 29 AS parent_id, 51.0 AS "Estimator" UNION ALL SELECT 33 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 9 AS count, 5 AS depth, 32 AS parent_id, 161.27272727272728 AS "Estimator" UNION ALL SELECT 34 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 6 AS count, 5 AS depth, 32 AS parent_id, 121.36363636363636 AS "Estimator" UNION ALL SELECT 37 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 5 AS depth, 36 AS parent_id, 244.5 AS "Estimator" UNION ALL SELECT 38 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 5 AS depth, 36 AS parent_id, 268.3333333333333 AS "Estimator" UNION ALL SELECT 40 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 25 AS count, 5 AS depth, 39 AS parent_id, 207.24324324324326 AS "Estimator" UNION ALL SELECT 41 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 23 AS count, 5 AS depth, 39 AS parent_id, 165.75757575757575 AS "Estimator" UNION ALL SELECT 45 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 9 AS count, 5 AS depth, 44 AS parent_id, 256.84615384615387 AS "Estimator" UNION ALL SELECT 46 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 44 AS parent_id, 336.0 AS "Estimator" UNION ALL SELECT 48 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS count, 5 AS depth, 47 AS parent_id, 309.875 AS "Estimator" UNION ALL SELECT 49 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS count, 5 AS depth, 47 AS parent_id, 271.8333333333333 AS "Estimator" UNION ALL SELECT 52 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 5 AS depth, 51 AS parent_id, 113.0 AS "Estimator" UNION ALL SELECT 53 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 5 AS depth, 51 AS parent_id, 186.33333333333334 AS "Estimator" UNION ALL SELECT 55 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 54 AS parent_id, 306.0 AS "Estimator" UNION ALL SELECT 56 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS count, 5 AS depth, 54 AS parent_id, 231.0 AS "Estimator") AS "Values"), 
"DT_Output_6" AS 
(SELECT "DT_node_lookup_6"."KEY" AS "KEY", "DT_node_lookup_6".node_id_2 AS node_id_2, "DT_node_data_6".node_id AS node_id, "DT_node_data_6".feature AS feature, "DT_node_data_6".threshold AS threshold, "DT_node_data_6".count AS count, "DT_node_data_6".depth AS depth, "DT_node_data_6".parent_id AS parent_id, "DT_node_data_6"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_6" LEFT OUTER JOIN "DT_node_data_6" ON "DT_node_lookup_6".node_id_2 = "DT_node_data_6".node_id), 
"BAG_Tree_6" AS 
(SELECT "DT_Output_6"."KEY" AS "KEY", "DT_Output_6"."Estimator" AS "Estimator" 
FROM "DT_Output_6"), 
"DT_node_lookup_7" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_10 <= -0.2439785897731781) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_4 <= 0.11634615063667297) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_4 <= -0.2740330696105957) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_4 <= -0.6644123196601868) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_6 <= 1.0065383911132812) THEN 5 ELSE 6 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_7 <= -0.539693295955658) THEN 8 ELSE 9 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_2 <= -1.5449190139770508) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_4 <= -0.22810611128807068) THEN 12 ELSE 13 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_4 <= -0.22810611128807068) THEN 15 ELSE 16 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_8 <= -0.1466158628463745) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_2 <= 0.6849485635757446) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_5 <= -0.24513116478919983) THEN 20 ELSE 21 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_10 <= -0.8730798363685608) THEN 23 ELSE 24 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_6 <= -0.8977158069610596) THEN 26 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_8 <= 0.4111790359020233) THEN 28 ELSE 29 END END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_4 <= 0.09338267147541046) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_10 <= 0.4516777992248535) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_11 <= 0.17258942127227783) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_4 <= -0.43477749824523926) THEN 34 ELSE 35 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_8 <= -0.3458282947540283) THEN 37 ELSE 38 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_5 <= -0.9218062162399292) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_6 <= -0.7402210831642151) THEN 41 ELSE 42 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_8 <= -0.70441073179245) THEN 44 ELSE 45 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_4 <= 1.3908195495605469) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_5 <= 0.5027728080749512) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_4 <= 0.6445063352584839) THEN 49 ELSE 50 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_2 <= 0.9156244993209839) THEN 52 ELSE 53 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_2 <= -0.8913370370864868) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_3 <= 0.04821458458900452) THEN 56 ELSE 57 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_6 <= 0.6629135608673096) THEN 59 ELSE 60 END END END END END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_7" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 5 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 49 AS count, 5 AS depth, 4 AS parent_id, 79.92647058823529 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 4 AS parent_id, 158.0 AS "Estimator" UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS count, 5 AS depth, 7 AS parent_id, 161.16666666666666 AS "Estimator" UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 12 AS count, 5 AS depth, 7 AS parent_id, 102.86666666666666 AS "Estimator" UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 11 AS parent_id, 168.0 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 11 AS parent_id, 60.0 AS "Estimator" UNION ALL SELECT 15 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 14 AS parent_id, 25.0 AS "Estimator" UNION ALL SELECT 16 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 11 AS count, 5 AS depth, 14 AS parent_id, 55.375 AS "Estimator" UNION ALL SELECT 20 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS count, 5 AS depth, 19 AS parent_id, 189.88888888888889 AS "Estimator" UNION ALL SELECT 21 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 5 AS depth, 19 AS parent_id, 260.4 AS "Estimator" UNION ALL SELECT 23 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 22 AS parent_id, 145.0 AS "Estimator" UNION ALL SELECT 24 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 22 AS parent_id, 127.0 AS "Estimator" UNION ALL SELECT 26 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 25 AS parent_id, 187.0 AS "Estimator" UNION ALL SELECT 28 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS count, 5 AS depth, 27 AS parent_id, 144.5 AS "Estimator" UNION ALL SELECT 29 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS count, 5 AS depth, 27 AS parent_id, 105.0 AS "Estimator" UNION ALL SELECT 34 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 7 AS count, 5 AS depth, 33 AS parent_id, 135.5 AS "Estimator" UNION ALL SELECT 35 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 6 AS count, 5 AS depth, 33 AS parent_id, 197.16666666666666 AS "Estimator" UNION ALL SELECT 37 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 7 AS count, 5 AS depth, 36 AS parent_id, 139.875 AS "Estimator" UNION ALL SELECT 38 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 8 AS count, 5 AS depth, 36 AS parent_id, 84.14285714285714 AS "Estimator" UNION ALL SELECT 41 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 40 AS parent_id, 144.0 AS "Estimator" UNION ALL SELECT 42 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 5 AS depth, 40 AS parent_id, 99.75 AS "Estimator" UNION ALL SELECT 44 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 9 AS count, 5 AS depth, 43 AS parent_id, 231.58333333333334 AS "Estimator" UNION ALL SELECT 45 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 19 AS count, 5 AS depth, 43 AS parent_id, 182.34375 AS "Estimator" UNION ALL SELECT 49 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 10 AS count, 5 AS depth, 48 AS parent_id, 214.8125 AS "Estimator" UNION ALL SELECT 50 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 11 AS count, 5 AS depth, 48 AS parent_id, 151.38095238095238 AS "Estimator" UNION ALL SELECT 52 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 23 AS count, 5 AS depth, 51 AS parent_id, 230.71052631578948 AS "Estimator" UNION ALL SELECT 53 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 6 AS count, 5 AS depth, 51 AS parent_id, 170.3 AS "Estimator" UNION ALL SELECT 56 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 55 AS parent_id, 128.0 AS "Estimator" UNION ALL SELECT 57 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 5 AS depth, 55 AS parent_id, 241.2 AS "Estimator" UNION ALL SELECT 59 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 12 AS count, 5 AS depth, 58 AS parent_id, 267.0625 AS "Estimator" UNION ALL SELECT 60 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 5 AS depth, 58 AS parent_id, 308.0 AS "Estimator") AS "Values"), 
"DT_Output_7" AS 
(SELECT "DT_node_lookup_7"."KEY" AS "KEY", "DT_node_lookup_7".node_id_2 AS node_id_2, "DT_node_data_7".node_id AS node_id, "DT_node_data_7".feature AS feature, "DT_node_data_7".threshold AS threshold, "DT_node_data_7".count AS count, "DT_node_data_7".depth AS depth, "DT_node_data_7".parent_id AS parent_id, "DT_node_data_7"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_7" LEFT OUTER JOIN "DT_node_data_7" ON "DT_node_lookup_7".node_id_2 = "DT_node_data_7".node_id), 
"BAG_Tree_7" AS 
(SELECT "DT_Output_7"."KEY" AS "KEY", "DT_Output_7"."Estimator" AS "Estimator" 
FROM "DT_Output_7")
 SELECT "Score_Union_CTE_esu_0"."KEY", "Score_Union_CTE_esu_0"."Estimator" 
FROM (SELECT "BAG_Tree_0"."KEY" AS "KEY", "BAG_Tree_0"."Estimator" AS "Estimator" 
FROM "BAG_Tree_0" UNION ALL SELECT "BAG_Tree_1"."KEY" AS "KEY", "BAG_Tree_1"."Estimator" AS "Estimator" 
FROM "BAG_Tree_1" UNION ALL SELECT "BAG_Tree_2"."KEY" AS "KEY", "BAG_Tree_2"."Estimator" AS "Estimator" 
FROM "BAG_Tree_2" UNION ALL SELECT "BAG_Tree_3"."KEY" AS "KEY", "BAG_Tree_3"."Estimator" AS "Estimator" 
FROM "BAG_Tree_3" UNION ALL SELECT "BAG_Tree_4"."KEY" AS "KEY", "BAG_Tree_4"."Estimator" AS "Estimator" 
FROM "BAG_Tree_4" UNION ALL SELECT "BAG_Tree_5"."KEY" AS "KEY", "BAG_Tree_5"."Estimator" AS "Estimator" 
FROM "BAG_Tree_5" UNION ALL SELECT "BAG_Tree_6"."KEY" AS "KEY", "BAG_Tree_6"."Estimator" AS "Estimator" 
FROM "BAG_Tree_6" UNION ALL SELECT "BAG_Tree_7"."KEY" AS "KEY", "BAG_Tree_7"."Estimator" AS "Estimator" 
FROM "BAG_Tree_7") AS "Score_Union_CTE_esu_0"), 
"Score_Union_CTE_1" AS 
(WITH "ADS_imp_1_OUT" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_0" IS NULL) THEN 0.000268693206665 ELSE "ADS"."Feature_0" END AS impter_2, CASE WHEN ("ADS"."Feature_1" IS NULL) THEN 0.000723958058064 ELSE "ADS"."Feature_1" END AS impter_3, CASE WHEN ("ADS"."Feature_2" IS NULL) THEN 0.000728071982559 ELSE "ADS"."Feature_2" END AS impter_4, CASE WHEN ("ADS"."Feature_3" IS NULL) THEN 0.00101356522108 ELSE "ADS"."Feature_3" END AS impter_5, CASE WHEN ("ADS"."Feature_4" IS NULL) THEN 0.000976358073288 ELSE "ADS"."Feature_4" END AS impter_6, CASE WHEN ("ADS"."Feature_5" IS NULL) THEN 0.00176438082423 ELSE "ADS"."Feature_5" END AS impter_7, CASE WHEN ("ADS"."Feature_6" IS NULL) THEN -0.00165128154506 ELSE "ADS"."Feature_6" END AS impter_8, CASE WHEN ("ADS"."Feature_7" IS NULL) THEN 0.00139055019834 ELSE "ADS"."Feature_7" END AS impter_9, CASE WHEN ("ADS"."Feature_8" IS NULL) THEN 0.00127264825481 ELSE "ADS"."Feature_8" END AS impter_10, CASE WHEN ("ADS"."Feature_9" IS NULL) THEN 0.00103442500568 ELSE "ADS"."Feature_9" END AS impter_11 
FROM diabetes AS "ADS"), 
"ADS_sca_2_OUT" AS 
(SELECT "ADS_imp_1_OUT"."KEY" AS "KEY", (CAST("ADS_imp_1_OUT".impter_2 AS FLOAT) - 0.000268693206665) / 0.0472420958365 AS scaler_2, (CAST("ADS_imp_1_OUT".impter_3 AS FLOAT) - 0.000723958058064) / 0.047605576685 AS scaler_3, (CAST("ADS_imp_1_OUT".impter_4 AS FLOAT) - 0.000728071982559) / 0.0469359114394 AS scaler_4, (CAST("ADS_imp_1_OUT".impter_5 AS FLOAT) - 0.00101356522108) / 0.048335271949 AS scaler_5, (CAST("ADS_imp_1_OUT".impter_6 AS FLOAT) - 0.000976358073288) / 0.0480507620097 AS scaler_6, (CAST("ADS_imp_1_OUT".impter_7 AS FLOAT) - 0.00176438082423) / 0.0480608087315 AS scaler_7, (CAST("ADS_imp_1_OUT".impter_8 AS FLOAT) - -0.00165128154506) / 0.0462024037804 AS scaler_8, (CAST("ADS_imp_1_OUT".impter_9 AS FLOAT) - 0.00139055019834) / 0.0473630930405 AS scaler_9, (CAST("ADS_imp_1_OUT".impter_10 AS FLOAT) - 0.00127264825481) / 0.0458928613136 AS scaler_10, (CAST("ADS_imp_1_OUT".impter_11 AS FLOAT) - 0.00103442500568) / 0.0477615851957 AS scaler_11 
FROM "ADS_imp_1_OUT"), 
"DT_node_lookup_8" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_4 <= 0.11634615063667297) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_10 <= -0.23324185609817505) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_7 <= 2.3076553344726562) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_8 <= 0.4908640384674072) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_3 <= 0.04821458458900452) THEN 5 ELSE 6 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_5 <= -0.6725049018859863) THEN 8 ELSE 9 END END ELSE 10 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_4 <= -0.503667950630188) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_4 <= -0.9973828196525574) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_2 <= -1.4295809268951416) THEN 14 ELSE 15 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_5 <= 0.11101357638835907) THEN 17 ELSE 18 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_9 <= 0.9248580932617188) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_9 <= -1.2527580261230469) THEN 21 ELSE 22 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_2 <= -0.8528910875320435) THEN 24 ELSE 25 END END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_5 <= 0.46715831756591797) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_10 <= -0.21344593167304993) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_6 <= -0.5970441102981567) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_8 <= -0.823938250541687) THEN 30 ELSE 31 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_7 <= -0.3279339671134949) THEN 33 ELSE 34 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_8 <= -0.1466158628463745) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_10 <= 0.6095067858695984) THEN 37 ELSE 38 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_6 <= 0.7917729616165161) THEN 40 ELSE 41 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_4 <= 0.9774768352508545) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_11 <= 0.779662013053894) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_10 <= -0.9227691888809204) THEN 45 ELSE 46 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_10 <= -0.022182565182447433) THEN 48 ELSE 49 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_6 <= 0.3765595853328705) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_4 <= 2.1026875972747803) THEN 52 ELSE 53 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_5 <= 1.1438333988189697) THEN 55 ELSE 56 END END END END END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_8" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 5 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 17 AS count, 5 AS depth, 4 AS parent_id, 139.72 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 25 AS count, 5 AS depth, 4 AS parent_id, 94.16279069767442 AS "Estimator" UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 13 AS count, 5 AS depth, 7 AS parent_id, 62.26315789473684 AS "Estimator" UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 24 AS count, 5 AS depth, 7 AS parent_id, 87.14285714285714 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 2 AS parent_id, 253.0 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 13 AS parent_id, 94.0 AS "Estimator" UNION ALL SELECT 15 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 5 AS depth, 13 AS parent_id, 216.5 AS "Estimator" UNION ALL SELECT 17 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 8 AS count, 5 AS depth, 16 AS parent_id, 84.92307692307692 AS "Estimator" UNION ALL SELECT 18 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 6 AS count, 5 AS depth, 16 AS parent_id, 132.5 AS "Estimator" UNION ALL SELECT 21 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 20 AS parent_id, 283.0 AS "Estimator" UNION ALL SELECT 22 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 30 AS count, 5 AS depth, 20 AS parent_id, 155.33333333333334 AS "Estimator" UNION ALL SELECT 24 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 5 AS depth, 23 AS parent_id, 156.0 AS "Estimator" UNION ALL SELECT 25 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 6 AS count, 5 AS depth, 23 AS parent_id, 252.625 AS "Estimator" UNION ALL SELECT 30 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 29 AS parent_id, 145.0 AS "Estimator" UNION ALL SELECT 31 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS count, 5 AS depth, 29 AS parent_id, 189.42857142857142 AS "Estimator" UNION ALL SELECT 33 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 5 AS depth, 32 AS parent_id, 87.85714285714286 AS "Estimator" UNION ALL SELECT 34 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 8 AS count, 5 AS depth, 32 AS parent_id, 133.375 AS "Estimator" UNION ALL SELECT 37 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 10 AS count, 5 AS depth, 36 AS parent_id, 136.92857142857142 AS "Estimator" UNION ALL SELECT 38 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 14 AS count, 5 AS depth, 36 AS parent_id, 211.32 AS "Estimator" UNION ALL SELECT 40 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 5 AS depth, 39 AS parent_id, 287.4 AS "Estimator" UNION ALL SELECT 41 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 5 AS depth, 39 AS parent_id, 231.0 AS "Estimator" UNION ALL SELECT 45 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 5 AS depth, 44 AS parent_id, 82.5 AS "Estimator" UNION ALL SELECT 46 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 15 AS count, 5 AS depth, 44 AS parent_id, 198.0909090909091 AS "Estimator" UNION ALL SELECT 48 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 47 AS parent_id, 155.0 AS "Estimator" UNION ALL SELECT 49 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 6 AS count, 5 AS depth, 47 AS parent_id, 267.0 AS "Estimator" UNION ALL SELECT 52 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 9 AS count, 5 AS depth, 51 AS parent_id, 283.3333333333333 AS "Estimator" UNION ALL SELECT 53 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 5 AS depth, 51 AS parent_id, 321.5 AS "Estimator" UNION ALL SELECT 55 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS count, 5 AS depth, 54 AS parent_id, 219.0 AS "Estimator" UNION ALL SELECT 56 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 5 AS depth, 54 AS parent_id, 272.0 AS "Estimator") AS "Values"), 
"DT_Output_8" AS 
(SELECT "DT_node_lookup_8"."KEY" AS "KEY", "DT_node_lookup_8".node_id_2 AS node_id_2, "DT_node_data_8".node_id AS node_id, "DT_node_data_8".feature AS feature, "DT_node_data_8".threshold AS threshold, "DT_node_data_8".count AS count, "DT_node_data_8".depth AS depth, "DT_node_data_8".parent_id AS parent_id, "DT_node_data_8"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_8" LEFT OUTER JOIN "DT_node_data_8" ON "DT_node_lookup_8".node_id_2 = "DT_node_data_8".node_id), 
"BAG_Tree_8" AS 
(SELECT "DT_Output_8"."KEY" AS "KEY", "DT_Output_8"."Estimator" AS "Estimator" 
FROM "DT_Output_8"), 
"DT_node_lookup_9" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_4 <= 0.09338267147541046) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_10 <= -0.23324185609817505) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_6 <= -0.8118095397949219) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_10 <= -1.686265230178833) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_11 <= -1.301729679107666) THEN 5 ELSE 6 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_4 <= -0.1706974059343338) THEN 8 ELSE 9 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_11 <= 0.8663866519927979) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_7 <= -0.6243970394134521) THEN 12 ELSE 13 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_9 <= -0.14252439141273499) THEN 15 ELSE 16 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_5 <= 0.7876886129379272) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_9 <= 0.6326913833618164) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_11 <= -0.9981933832168579) THEN 20 ELSE 21 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_8 <= -1.2223631143569946) THEN 23 ELSE 24 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_6 <= -0.5827263593673706) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_7 <= -1.5300754308700562) THEN 27 ELSE 28 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_2 <= 1.1463004350662231) THEN 30 ELSE 31 END END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_4 <= 1.5400822162628174) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_5 <= 0.07539910078048706) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_11 <= 2.4274303913116455) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_2 <= -0.5453231334686279) THEN 36 ELSE 37 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_3 <= 0.04821458458900452) THEN 39 ELSE 40 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_8 <= 0.4908640384674072) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_7 <= 0.8970123529434204) THEN 43 ELSE 44 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_6 <= 2.02309513092041) THEN 46 ELSE 47 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_5 <= -0.9336776733398438) THEN 49 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_7 <= 0.43114182353019714) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_6 <= 0.11884097754955292) THEN 52 ELSE 53 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_7 <= 0.538650393486023) THEN 55 ELSE 56 END END END END END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_9" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 5 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 5 AS depth, 4 AS parent_id, 73.33333333333333 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 5 AS depth, 4 AS parent_id, 102.75 AS "Estimator" UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 21 AS count, 5 AS depth, 7 AS parent_id, 123.83333333333333 AS "Estimator" UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 5 AS depth, 7 AS parent_id, 52.5 AS "Estimator" UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 8 AS count, 5 AS depth, 11 AS parent_id, 49.92307692307692 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 39 AS count, 5 AS depth, 11 AS parent_id, 84.8923076923077 AS "Estimator" UNION ALL SELECT 15 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 5 AS depth, 14 AS parent_id, 157.0 AS "Estimator" UNION ALL SELECT 16 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 5 AS depth, 14 AS parent_id, 99.0 AS "Estimator" UNION ALL SELECT 20 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 9 AS count, 5 AS depth, 19 AS parent_id, 158.07142857142858 AS "Estimator" UNION ALL SELECT 21 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 15 AS count, 5 AS depth, 19 AS parent_id, 94.1304347826087 AS "Estimator" UNION ALL SELECT 23 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 5 AS depth, 22 AS parent_id, 106.0 AS "Estimator" UNION ALL SELECT 24 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 11 AS count, 5 AS depth, 22 AS parent_id, 196.27777777777777 AS "Estimator" UNION ALL SELECT 27 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 26 AS parent_id, 283.0 AS "Estimator" UNION ALL SELECT 28 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 5 AS depth, 26 AS parent_id, 255.33333333333334 AS "Estimator" UNION ALL SELECT 30 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 7 AS count, 5 AS depth, 29 AS parent_id, 171.27272727272728 AS "Estimator" UNION ALL SELECT 31 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 5 AS depth, 29 AS parent_id, 254.33333333333334 AS "Estimator" UNION ALL SELECT 36 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 9 AS count, 5 AS depth, 35 AS parent_id, 99.5 AS "Estimator" UNION ALL SELECT 37 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 19 AS count, 5 AS depth, 35 AS parent_id, 160.80769230769232 AS "Estimator" UNION ALL SELECT 39 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 38 AS parent_id, 317.0 AS "Estimator" UNION ALL SELECT 40 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 38 AS parent_id, 268.0 AS "Estimator" UNION ALL SELECT 43 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 27 AS count, 5 AS depth, 42 AS parent_id, 244.75 AS "Estimator" UNION ALL SELECT 44 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 8 AS count, 5 AS depth, 42 AS parent_id, 194.52941176470588 AS "Estimator" UNION ALL SELECT 46 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 8 AS count, 5 AS depth, 45 AS parent_id, 161.0 AS "Estimator" UNION ALL SELECT 47 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 45 AS parent_id, 283.0 AS "Estimator" UNION ALL SELECT 49 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 48 AS parent_id, 346.0 AS "Estimator" UNION ALL SELECT 52 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 8 AS count, 5 AS depth, 51 AS parent_id, 273.2142857142857 AS "Estimator" UNION ALL SELECT 53 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 5 AS depth, 51 AS parent_id, 308.6666666666667 AS "Estimator" UNION ALL SELECT 55 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 54 AS parent_id, 128.0 AS "Estimator" UNION ALL SELECT 56 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 6 AS count, 5 AS depth, 54 AS parent_id, 240.0909090909091 AS "Estimator") AS "Values"), 
"DT_Output_9" AS 
(SELECT "DT_node_lookup_9"."KEY" AS "KEY", "DT_node_lookup_9".node_id_2 AS node_id_2, "DT_node_data_9".node_id AS node_id, "DT_node_data_9".feature AS feature, "DT_node_data_9".threshold AS threshold, "DT_node_data_9".count AS count, "DT_node_data_9".depth AS depth, "DT_node_data_9".parent_id AS parent_id, "DT_node_data_9"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_9" LEFT OUTER JOIN "DT_node_data_9" ON "DT_node_lookup_9".node_id_2 = "DT_node_data_9".node_id), 
"BAG_Tree_9" AS 
(SELECT "DT_Output_9"."KEY" AS "KEY", "DT_Output_9"."Estimator" AS "Estimator" 
FROM "DT_Output_9")
 SELECT "Score_Union_CTE_esu_1"."KEY", "Score_Union_CTE_esu_1"."Estimator" 
FROM (SELECT "BAG_Tree_8"."KEY" AS "KEY", "BAG_Tree_8"."Estimator" AS "Estimator" 
FROM "BAG_Tree_8" UNION ALL SELECT "BAG_Tree_9"."KEY" AS "KEY", "BAG_Tree_9"."Estimator" AS "Estimator" 
FROM "BAG_Tree_9") AS "Score_Union_CTE_esu_1"), 
"Score_Union_CTE" AS 
(SELECT "Score_Union_CTEbig_esu"."KEY" AS "KEY", "Score_Union_CTEbig_esu"."Estimator" AS "Estimator" 
FROM (SELECT "Score_Union_CTE_0"."KEY" AS "KEY", "Score_Union_CTE_0"."Estimator" AS "Estimator" 
FROM "Score_Union_CTE_0" UNION ALL SELECT "Score_Union_CTE_1"."KEY" AS "KEY", "Score_Union_CTE_1"."Estimator" AS "Estimator" 
FROM "Score_Union_CTE_1") AS "Score_Union_CTEbig_esu"), 
"BAG_AVG_Scores" AS 
(SELECT "T"."KEY" AS "KEY", "T"."Estimator" AS "Estimator" 
FROM (SELECT "Score_Union_CTE"."KEY" AS "KEY", avg("Score_Union_CTE"."Estimator") AS "Estimator" 
FROM "Score_Union_CTE" GROUP BY "Score_Union_CTE"."KEY") AS "T")
 SELECT "BAG_AVG_Scores"."KEY" AS "KEY", "BAG_AVG_Scores"."Estimator" AS "Estimator" 
FROM "BAG_AVG_Scores"