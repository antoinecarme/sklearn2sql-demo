-- This SQL code was generated by sklearn2sql (development version).
-- Copyright 2017

WITH "Score_Union_CTE_0" AS 
(WITH "ADS_imp_1_OUT" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_0" IS NULL) THEN 43.7912812221 ELSE "ADS"."Feature_0" END AS imputer_output_2, CASE WHEN ("ADS"."Feature_1" IS NULL) THEN 945.967283308 ELSE "ADS"."Feature_1" END AS imputer_output_3, CASE WHEN ("ADS"."Feature_2" IS NULL) THEN 0.531000909998 ELSE "ADS"."Feature_2" END AS imputer_output_4, CASE WHEN ("ADS"."Feature_3" IS NULL) THEN 6.13996715205 ELSE "ADS"."Feature_3" END AS imputer_output_5 
FROM freidman3 AS "ADS"), 
"ADS_sca_2_OUT" AS 
(SELECT "ADS_imp_1_OUT"."KEY" AS "KEY", (CAST("ADS_imp_1_OUT".imputer_output_2 AS FLOAT) - 43.7912812221) / 26.0356235762 AS scaler_output_2, (CAST("ADS_imp_1_OUT".imputer_output_3 AS FLOAT) - 945.967283308) / 461.455276615 AS scaler_output_3, (CAST("ADS_imp_1_OUT".imputer_output_4 AS FLOAT) - 0.531000909998) / 0.290186328214 AS scaler_output_4, (CAST("ADS_imp_1_OUT".imputer_output_5 AS FLOAT) - 6.13996715205) / 3.07291724256 AS scaler_output_5 
FROM "ADS_imp_1_OUT"), 
"DT_node_lookup" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= -1.6865601539611816) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= 1.0818819999694824) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= -0.19290710985660553) THEN 3 ELSE 4 END ELSE 5 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= -0.37393590807914734) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= 0.19635166227817535) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= -1.3463561534881592) THEN 9 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= -1.660830020904541) THEN 11 ELSE 12 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= -1.360541820526123) THEN 14 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= 0.32986393570899963) THEN 16 ELSE 17 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= -1.4956881999969482) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= -1.5442689657211304) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= -0.5514519214630127) THEN 21 ELSE 22 END ELSE 23 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= -0.9236918687820435) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= 0.17494834959506989) THEN 26 ELSE 27 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= 0.18584853410720825) THEN 29 ELSE 30 END END END END END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 2 AS parent_id, 0.4848669214064692 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 2 AS parent_id, 0.38342473185592096 AS "Estimator" UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 2 AS depth, 1 AS parent_id, 0.6100168381304848 AS "Estimator" UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 8 AS parent_id, 1.5543288470291443 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 10 AS parent_id, 1.4092998433520778 AS "Estimator" UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS count, 5 AS depth, 10 AS parent_id, 1.3563339545579924 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 13 AS parent_id, 0.7050714675464733 AS "Estimator" UNION ALL SELECT 16 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS count, 5 AS depth, 15 AS parent_id, 1.1374938624615878 AS "Estimator" UNION ALL SELECT 17 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 5 AS depth, 15 AS parent_id, 1.3303435503706273 AS "Estimator" UNION ALL SELECT 21 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 20 AS parent_id, 1.1610071359052208 AS "Estimator" UNION ALL SELECT 22 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 20 AS parent_id, 1.1440564349145939 AS "Estimator" UNION ALL SELECT 23 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 19 AS parent_id, 1.278877589279357 AS "Estimator" UNION ALL SELECT 26 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 5 AS depth, 25 AS parent_id, 1.4971523528706554 AS "Estimator" UNION ALL SELECT 27 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 5 AS depth, 25 AS parent_id, 1.3289249199479547 AS "Estimator" UNION ALL SELECT 29 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 17 AS count, 5 AS depth, 28 AS parent_id, 1.5363130370512887 AS "Estimator" UNION ALL SELECT 30 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 8 AS count, 5 AS depth, 28 AS parent_id, 1.4894720475856322 AS "Estimator") AS "Values"), 
"DT_Output" AS 
(SELECT "DT_node_lookup"."KEY" AS "KEY", "DT_node_lookup".node_id_2 AS node_id_2, "DT_node_data".node_id AS node_id, "DT_node_data".feature AS feature, "DT_node_data".threshold AS threshold, "DT_node_data".count AS count, "DT_node_data".depth AS depth, "DT_node_data".parent_id AS parent_id, "DT_node_data"."Estimator" AS "Estimator" 
FROM "DT_node_lookup" LEFT OUTER JOIN "DT_node_data" ON "DT_node_lookup".node_id_2 = "DT_node_data".node_id), 
"BAG_Tree_0" AS 
(SELECT "DT_Output"."KEY" AS "KEY", "DT_Output"."Estimator" AS "Estimator" 
FROM "DT_Output"), 
"DT_node_lookup_1" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= -1.7298851013183594) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= -0.6579667329788208) THEN 2 ELSE 3 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= -0.778099536895752) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= -0.9540339708328247) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= -1.4776207208633423) THEN 7 ELSE 8 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= 0.32986393570899963) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= 0.8264346718788147) THEN 11 ELSE 12 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= -0.9826455116271973) THEN 14 ELSE 15 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= -0.9236918687820435) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= -0.567963719367981) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= -1.7171177864074707) THEN 19 ELSE 20 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= -1.3738551139831543) THEN 22 ELSE 23 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= -0.4938386082649231) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= 0.07024127244949341) THEN 26 ELSE 27 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= 0.2522202730178833) THEN 29 ELSE 30 END END END END END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_1" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 2 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 2 AS depth, 1 AS parent_id, 0.6100168381304848 AS "Estimator" UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 2 AS depth, 1 AS parent_id, 0.38342473185592096 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 6 AS parent_id, 0.8079109230317987 AS "Estimator" UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 6 AS parent_id, 0.7050714675464733 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 5 AS depth, 10 AS parent_id, 1.2687944775738975 AS "Estimator" UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS count, 5 AS depth, 10 AS parent_id, 1.1030160952316779 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 13 AS parent_id, 1.4092998433520778 AS "Estimator" UNION ALL SELECT 15 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 5 AS depth, 13 AS parent_id, 1.3446890522072203 AS "Estimator" UNION ALL SELECT 19 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 18 AS parent_id, 1.5359670902044162 AS "Estimator" UNION ALL SELECT 20 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 5 AS depth, 18 AS parent_id, 1.431302438485138 AS "Estimator" UNION ALL SELECT 22 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 21 AS parent_id, 1.4608890093126605 AS "Estimator" UNION ALL SELECT 23 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 6 AS count, 5 AS depth, 21 AS parent_id, 1.1864820226324824 AS "Estimator" UNION ALL SELECT 26 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 25 AS parent_id, 1.4251802174855326 AS "Estimator" UNION ALL SELECT 27 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 5 AS depth, 25 AS parent_id, 1.3588685668611398 AS "Estimator" UNION ALL SELECT 29 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 13 AS count, 5 AS depth, 28 AS parent_id, 1.5302213945792857 AS "Estimator" UNION ALL SELECT 30 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 9 AS count, 5 AS depth, 28 AS parent_id, 1.4959927364521912 AS "Estimator") AS "Values"), 
"DT_Output_1" AS 
(SELECT "DT_node_lookup_1"."KEY" AS "KEY", "DT_node_lookup_1".node_id_2 AS node_id_2, "DT_node_data_1".node_id AS node_id, "DT_node_data_1".feature AS feature, "DT_node_data_1".threshold AS threshold, "DT_node_data_1".count AS count, "DT_node_data_1".depth AS depth, "DT_node_data_1".parent_id AS parent_id, "DT_node_data_1"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_1" LEFT OUTER JOIN "DT_node_data_1" ON "DT_node_lookup_1".node_id_2 = "DT_node_data_1".node_id), 
"BAG_Tree_1" AS 
(SELECT "DT_Output_1"."KEY" AS "KEY", "DT_Output_1"."Estimator" AS "Estimator" 
FROM "DT_Output_1"), 
"DT_node_lookup_2" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= -1.3343552350997925) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= 0.06683275103569031) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= -0.15695497393608093) THEN 3 ELSE 4 END ELSE 5 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= -1.072701096534729) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= 0.040250442922115326) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= -0.468605101108551) THEN 9 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= -1.3401830196380615) THEN 11 ELSE 12 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= -1.5181928873062134) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= -1.5474199056625366) THEN 15 ELSE 16 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= 0.7340636253356934) THEN 18 ELSE 19 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= -0.5216202735900879) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= 1.2749183177947998) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= -0.8660534620285034) THEN 23 ELSE 24 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= 1.673033356666565) THEN 26 ELSE 27 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= 0.26149412989616394) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= -1.3878793716430664) THEN 30 ELSE 31 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= -0.6153143644332886) THEN 33 ELSE 34 END END END END END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_2" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 2 AS parent_id, 0.38342473185592096 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 2 AS parent_id, 0.4848669214064692 AS "Estimator" UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 2 AS depth, 1 AS parent_id, 0.7050714675464733 AS "Estimator" UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 8 AS parent_id, 1.5359670902044162 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 5 AS depth, 10 AS parent_id, 1.4508599947569365 AS "Estimator" UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 10 AS parent_id, 1.1610071359052208 AS "Estimator" UNION ALL SELECT 15 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 14 AS parent_id, 1.1440564349145939 AS "Estimator" UNION ALL SELECT 16 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 14 AS parent_id, 1.1156147639563705 AS "Estimator" UNION ALL SELECT 18 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 17 AS parent_id, 1.3844945172080796 AS "Estimator" UNION ALL SELECT 19 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 5 AS depth, 17 AS parent_id, 1.272218062008273 AS "Estimator" UNION ALL SELECT 23 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 22 AS parent_id, 1.536711230505171 AS "Estimator" UNION ALL SELECT 24 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 22 AS parent_id, 1.3498429932286293 AS "Estimator" UNION ALL SELECT 26 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 25 AS parent_id, 1.1063441203172228 AS "Estimator" UNION ALL SELECT 27 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 25 AS parent_id, 1.0818920012987259 AS "Estimator" UNION ALL SELECT 30 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 5 AS depth, 29 AS parent_id, 1.567781003074441 AS "Estimator" UNION ALL SELECT 31 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 15 AS count, 5 AS depth, 29 AS parent_id, 1.532493855489065 AS "Estimator" UNION ALL SELECT 33 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 32 AS parent_id, 1.2794872288206998 AS "Estimator" UNION ALL SELECT 34 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 11 AS count, 5 AS depth, 32 AS parent_id, 1.4900952353234584 AS "Estimator") AS "Values"), 
"DT_Output_2" AS 
(SELECT "DT_node_lookup_2"."KEY" AS "KEY", "DT_node_lookup_2".node_id_2 AS node_id_2, "DT_node_data_2".node_id AS node_id, "DT_node_data_2".feature AS feature, "DT_node_data_2".threshold AS threshold, "DT_node_data_2".count AS count, "DT_node_data_2".depth AS depth, "DT_node_data_2".parent_id AS parent_id, "DT_node_data_2"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_2" LEFT OUTER JOIN "DT_node_data_2" ON "DT_node_lookup_2".node_id_2 = "DT_node_data_2".node_id), 
"BAG_Tree_2" AS 
(SELECT "DT_Output_2"."KEY" AS "KEY", "DT_Output_2"."Estimator" AS "Estimator" 
FROM "DT_Output_2"), 
"DT_node_lookup_3" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= -1.360541820526123) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= -1.7298851013183594) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= 1.0818819999694824) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= -0.9296590089797974) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= -1.4776207208633423) THEN 7 ELSE 8 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= 0.20885485410690308) THEN 10 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= -0.6441354751586914) THEN 12 ELSE 13 END END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= 1.238775610923767) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= -1.4956881999969482) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= -0.6530774235725403) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= -1.7171177864074707) THEN 18 ELSE 19 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= 0.8984425663948059) THEN 21 ELSE 22 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= -0.9403092861175537) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= -1.1080100536346436) THEN 25 ELSE 26 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= -1.113467812538147) THEN 28 ELSE 29 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= -0.6062601208686829) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= -1.091903567314148) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= -1.5203046798706055) THEN 33 ELSE 34 END ELSE 35 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= 0.5518082976341248) THEN 37 ELSE 38 END END END END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_3" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 2 AS parent_id, 0.38342473185592096 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 2 AS parent_id, 0.6100168381304848 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 6 AS parent_id, 0.8079109230317987 AS "Estimator" UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 6 AS parent_id, 0.7050714675464733 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 9 AS parent_id, 1.1409162524546155 AS "Estimator" UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 11 AS parent_id, 1.4092998433520778 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 11 AS parent_id, 1.350090108150775 AS "Estimator" UNION ALL SELECT 18 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 17 AS parent_id, 1.5359670902044162 AS "Estimator" UNION ALL SELECT 19 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 17 AS parent_id, 1.4518609404362353 AS "Estimator" UNION ALL SELECT 21 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 5 AS depth, 20 AS parent_id, 1.1337717127359106 AS "Estimator" UNION ALL SELECT 22 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 20 AS parent_id, 1.278877589279357 AS "Estimator" UNION ALL SELECT 25 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 24 AS parent_id, 1.314325621172093 AS "Estimator" UNION ALL SELECT 26 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 24 AS parent_id, 1.3463614795691619 AS "Estimator" UNION ALL SELECT 28 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 7 AS count, 5 AS depth, 27 AS parent_id, 1.56002598305888 AS "Estimator" UNION ALL SELECT 29 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 22 AS count, 5 AS depth, 27 AS parent_id, 1.4917756774308468 AS "Estimator" UNION ALL SELECT 33 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 32 AS parent_id, 1.0818920012987259 AS "Estimator" UNION ALL SELECT 34 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 32 AS parent_id, 1.0274843519223331 AS "Estimator" UNION ALL SELECT 35 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 31 AS parent_id, 1.1577860434316234 AS "Estimator" UNION ALL SELECT 37 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 36 AS parent_id, 1.2794872288206998 AS "Estimator" UNION ALL SELECT 38 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 36 AS parent_id, 1.4949662645575934 AS "Estimator") AS "Values"), 
"DT_Output_3" AS 
(SELECT "DT_node_lookup_3"."KEY" AS "KEY", "DT_node_lookup_3".node_id_2 AS node_id_2, "DT_node_data_3".node_id AS node_id, "DT_node_data_3".feature AS feature, "DT_node_data_3".threshold AS threshold, "DT_node_data_3".count AS count, "DT_node_data_3".depth AS depth, "DT_node_data_3".parent_id AS parent_id, "DT_node_data_3"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_3" LEFT OUTER JOIN "DT_node_data_3" ON "DT_node_lookup_3".node_id_2 = "DT_node_data_3".node_id), 
"BAG_Tree_3" AS 
(SELECT "DT_Output_3"."KEY" AS "KEY", "DT_Output_3"."Estimator" AS "Estimator" 
FROM "DT_Output_3"), 
"DT_node_lookup_4" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= -1.4309000968933105) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= -1.2066214084625244) THEN 2 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= -1.5602660179138184) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= -1.7965635061264038) THEN 5 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= -0.14987096190452576) THEN 7 ELSE 8 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= -0.3636448383331299) THEN 10 ELSE 11 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= 0.6816338896751404) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= -1.6158922910690308) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= -0.046768903732299805) THEN 15 ELSE 16 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= -1.1599440574645996) THEN 18 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= -1.2838690280914307) THEN 20 ELSE 21 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= -0.13757695257663727) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= -0.7887826561927795) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= 0.49538496136665344) THEN 25 ELSE 26 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= 1.1004490852355957) THEN 28 ELSE 29 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= 0.98177170753479) THEN 31 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= 0.18995893001556396) THEN 33 ELSE 34 END END END END END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_4" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 2 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 2 AS depth, 1 AS parent_id, 1.4092998433520778 AS "Estimator" UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 4 AS parent_id, 0.6100168381304848 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 6 AS parent_id, 0.4848669214064692 AS "Estimator" UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 5 AS depth, 6 AS parent_id, 0.3792961489164929 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 9 AS parent_id, 1.3687175770364277 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 9 AS parent_id, 0.7050714675464733 AS "Estimator" UNION ALL SELECT 15 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 14 AS parent_id, 1.1610071359052208 AS "Estimator" UNION ALL SELECT 16 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 14 AS parent_id, 1.5359670902044162 AS "Estimator" UNION ALL SELECT 18 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 17 AS parent_id, 1.341344197483337 AS "Estimator" UNION ALL SELECT 20 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS count, 5 AS depth, 19 AS parent_id, 1.464838277794978 AS "Estimator" UNION ALL SELECT 21 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 23 AS count, 5 AS depth, 19 AS parent_id, 1.5233275322603257 AS "Estimator" UNION ALL SELECT 25 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 24 AS parent_id, 1.076547084481779 AS "Estimator" UNION ALL SELECT 26 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 24 AS parent_id, 1.0274843519223331 AS "Estimator" UNION ALL SELECT 28 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS count, 5 AS depth, 27 AS parent_id, 1.1584146853058088 AS "Estimator" UNION ALL SELECT 29 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 27 AS parent_id, 1.278877589279357 AS "Estimator" UNION ALL SELECT 31 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 30 AS parent_id, 1.3463614795691619 AS "Estimator" UNION ALL SELECT 33 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 32 AS parent_id, 1.4783281269798374 AS "Estimator" UNION ALL SELECT 34 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 5 AS depth, 32 AS parent_id, 1.5075412676794349 AS "Estimator") AS "Values"), 
"DT_Output_4" AS 
(SELECT "DT_node_lookup_4"."KEY" AS "KEY", "DT_node_lookup_4".node_id_2 AS node_id_2, "DT_node_data_4".node_id AS node_id, "DT_node_data_4".feature AS feature, "DT_node_data_4".threshold AS threshold, "DT_node_data_4".count AS count, "DT_node_data_4".depth AS depth, "DT_node_data_4".parent_id AS parent_id, "DT_node_data_4"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_4" LEFT OUTER JOIN "DT_node_data_4" ON "DT_node_lookup_4".node_id_2 = "DT_node_data_4".node_id), 
"BAG_Tree_4" AS 
(SELECT "DT_Output_4"."KEY" AS "KEY", "DT_Output_4"."Estimator" AS "Estimator" 
FROM "DT_Output_4"), 
"DT_node_lookup_5" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= -1.360541820526123) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= -0.5874325633049011) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= -0.4679744839668274) THEN 3 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= 0.6646462082862854) THEN 5 ELSE 6 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= -0.7836979031562805) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= -1.1247649192810059) THEN 9 ELSE 10 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= -0.14987096190452576) THEN 12 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= -0.2956656813621521) THEN 14 ELSE 15 END END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= 0.8440569639205933) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= -1.2677711248397827) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= -0.3538225591182709) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= -1.6177830696105957) THEN 20 ELSE 21 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= 0.3329373598098755) THEN 23 ELSE 24 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= -1.1697484254837036) THEN 26 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= -0.7974013090133667) THEN 28 ELSE 29 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= 1.0049841403961182) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= 1.1800363063812256) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= -0.41351938247680664) THEN 33 ELSE 34 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= 1.8500051498413086) THEN 36 ELSE 37 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= -0.8243342638015747) THEN 39 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= 0.026924937963485718) THEN 41 ELSE 42 END END END END END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_5" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 2 AS parent_id, 1.1409162524546155 AS "Estimator" UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 4 AS parent_id, 1.3687175770364277 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 4 AS parent_id, 1.4092998433520778 AS "Estimator" UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 8 AS parent_id, 0.8079109230317987 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 8 AS parent_id, 0.7050714675464733 AS "Estimator" UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 11 AS parent_id, 0.4848669214064692 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 13 AS parent_id, 0.3751675659770648 AS "Estimator" UNION ALL SELECT 15 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 13 AS parent_id, 0.38342473185592096 AS "Estimator" UNION ALL SELECT 20 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 19 AS parent_id, 1.5359670902044162 AS "Estimator" UNION ALL SELECT 21 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 19 AS parent_id, 1.410743936534041 AS "Estimator" UNION ALL SELECT 23 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 22 AS parent_id, 1.1156147639563705 AS "Estimator" UNION ALL SELECT 24 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 22 AS parent_id, 1.3844945172080796 AS "Estimator" UNION ALL SELECT 26 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 25 AS parent_id, 1.314325621172093 AS "Estimator" UNION ALL SELECT 28 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 10 AS count, 5 AS depth, 27 AS parent_id, 1.5517220273343093 AS "Estimator" UNION ALL SELECT 29 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 19 AS count, 5 AS depth, 27 AS parent_id, 1.5010121460030872 AS "Estimator" UNION ALL SELECT 33 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 32 AS parent_id, 1.3463614795691619 AS "Estimator" UNION ALL SELECT 34 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 32 AS parent_id, 1.26722341655496 AS "Estimator" UNION ALL SELECT 36 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 5 AS depth, 35 AS parent_id, 1.1360621995544802 AS "Estimator" UNION ALL SELECT 37 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 5 AS depth, 35 AS parent_id, 1.0546881766105294 AS "Estimator" UNION ALL SELECT 39 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 38 AS parent_id, 1.278877589279357 AS "Estimator" UNION ALL SELECT 41 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 40 AS parent_id, 1.4670826204003842 AS "Estimator" UNION ALL SELECT 42 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 5 AS depth, 40 AS parent_id, 1.5018140880060709 AS "Estimator") AS "Values"), 
"DT_Output_5" AS 
(SELECT "DT_node_lookup_5"."KEY" AS "KEY", "DT_node_lookup_5".node_id_2 AS node_id_2, "DT_node_data_5".node_id AS node_id, "DT_node_data_5".feature AS feature, "DT_node_data_5".threshold AS threshold, "DT_node_data_5".count AS count, "DT_node_data_5".depth AS depth, "DT_node_data_5".parent_id AS parent_id, "DT_node_data_5"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_5" LEFT OUTER JOIN "DT_node_data_5" ON "DT_node_lookup_5".node_id_2 = "DT_node_data_5".node_id), 
"BAG_Tree_5" AS 
(SELECT "DT_Output_5"."KEY" AS "KEY", "DT_Output_5"."Estimator" AS "Estimator" 
FROM "DT_Output_5"), 
"DT_node_lookup_6" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= -1.360541820526123) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= -0.5874325633049011) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= 0.7551565766334534) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= -1.0282886028289795) THEN 4 ELSE 5 END ELSE 6 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= -1.5640677213668823) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= -0.2956656813621521) THEN 9 ELSE 10 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= -1.1247649192810059) THEN 12 ELSE 13 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= -0.349178671836853) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= 1.1800363063812256) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= -0.2754115164279938) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= -0.13076937198638916) THEN 18 ELSE 19 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= -1.5181928873062134) THEN 21 ELSE 22 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= 1.7521882057189941) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= 1.405125617980957) THEN 25 ELSE 26 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= 0.49538496136665344) THEN 28 ELSE 29 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= -1.143561840057373) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= -1.2250702381134033) THEN 32 ELSE 33 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= 0.17194722592830658) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= -1.19354248046875) THEN 36 ELSE 37 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= 0.025099143385887146) THEN 39 ELSE 40 END END END END END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_6" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 3 AS parent_id, 1.1409162524546155 AS "Estimator" UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 3 AS parent_id, 1.3687175770364277 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 2 AS parent_id, 0.6100168381304848 AS "Estimator" UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 8 AS parent_id, 0.3751675659770648 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 8 AS parent_id, 0.38342473185592096 AS "Estimator" UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 11 AS parent_id, 0.8079109230317987 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 11 AS parent_id, 0.7050714675464733 AS "Estimator" UNION ALL SELECT 18 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 17 AS parent_id, 1.410743936534041 AS "Estimator" UNION ALL SELECT 19 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 5 AS depth, 17 AS parent_id, 1.4607101682047825 AS "Estimator" UNION ALL SELECT 21 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 5 AS depth, 20 AS parent_id, 1.145876345255604 AS "Estimator" UNION ALL SELECT 22 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS count, 5 AS depth, 20 AS parent_id, 1.3293542398118607 AS "Estimator" UNION ALL SELECT 25 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 5 AS depth, 24 AS parent_id, 1.1252002776159085 AS "Estimator" UNION ALL SELECT 26 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 5 AS depth, 24 AS parent_id, 1.198353105227982 AS "Estimator" UNION ALL SELECT 28 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 27 AS parent_id, 1.076547084481779 AS "Estimator" UNION ALL SELECT 29 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 27 AS parent_id, 1.0274843519223331 AS "Estimator" UNION ALL SELECT 32 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 31 AS parent_id, 1.314325621172093 AS "Estimator" UNION ALL SELECT 33 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 31 AS parent_id, 1.0818920012987259 AS "Estimator" UNION ALL SELECT 36 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 5 AS depth, 35 AS parent_id, 1.55559363141818 AS "Estimator" UNION ALL SELECT 37 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 12 AS count, 5 AS depth, 35 AS parent_id, 1.5337094883437412 AS "Estimator" UNION ALL SELECT 39 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 5 AS depth, 38 AS parent_id, 1.4667989906601597 AS "Estimator" UNION ALL SELECT 40 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 6 AS count, 5 AS depth, 38 AS parent_id, 1.495249738550219 AS "Estimator") AS "Values"), 
"DT_Output_6" AS 
(SELECT "DT_node_lookup_6"."KEY" AS "KEY", "DT_node_lookup_6".node_id_2 AS node_id_2, "DT_node_data_6".node_id AS node_id, "DT_node_data_6".feature AS feature, "DT_node_data_6".threshold AS threshold, "DT_node_data_6".count AS count, "DT_node_data_6".depth AS depth, "DT_node_data_6".parent_id AS parent_id, "DT_node_data_6"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_6" LEFT OUTER JOIN "DT_node_data_6" ON "DT_node_lookup_6".node_id_2 = "DT_node_data_6".node_id), 
"BAG_Tree_6" AS 
(SELECT "DT_Output_6"."KEY" AS "KEY", "DT_Output_6"."Estimator" AS "Estimator" 
FROM "DT_Output_6"), 
"DT_node_lookup_7" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= -0.9838693141937256) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= -0.9312378764152527) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= 0.49834805727005005) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= -1.7142226696014404) THEN 6 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= 0.2876416742801666) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= 0.8264346718788147) THEN 9 ELSE 10 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= 0.7461351156234741) THEN 12 ELSE 13 END END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= -1.4956881999969482) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= 0.5453606247901917) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= -1.5181928873062134) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= 0.6481035947799683) THEN 18 ELSE 19 END ELSE 20 END ELSE 21 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= 0.44591888785362244) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= -1.3374958038330078) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= -1.4630563259124756) THEN 25 ELSE 26 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= -0.5963975787162781) THEN 28 ELSE 29 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= -0.45993202924728394) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= 1.5820972919464111) THEN 32 ELSE 33 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= -0.6569682359695435) THEN 35 ELSE 36 END END END END END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_7" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 2 AS parent_id, 0.7050714675464733 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 2 AS parent_id, 0.3751675659770648 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 5 AS parent_id, 0.38342473185592096 AS "Estimator" UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 5 AS depth, 8 AS parent_id, 1.2258217092568202 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 5 AS depth, 8 AS parent_id, 1.1007176614195537 AS "Estimator" UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 5 AS depth, 11 AS parent_id, 1.3352533089354017 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 11 AS parent_id, 1.536711230505171 AS "Estimator" UNION ALL SELECT 18 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 5 AS depth, 17 AS parent_id, 1.1383109499307955 AS "Estimator" UNION ALL SELECT 19 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 17 AS parent_id, 1.0274843519223331 AS "Estimator" UNION ALL SELECT 20 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 16 AS parent_id, 1.278877589279357 AS "Estimator" UNION ALL SELECT 21 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 15 AS parent_id, 1.4518609404362353 AS "Estimator" UNION ALL SELECT 25 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 24 AS parent_id, 1.5220836338497605 AS "Estimator" UNION ALL SELECT 26 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 5 AS depth, 24 AS parent_id, 1.427458960793581 AS "Estimator" UNION ALL SELECT 28 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 10 AS count, 5 AS depth, 27 AS parent_id, 1.5523096583251623 AS "Estimator" UNION ALL SELECT 29 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 12 AS count, 5 AS depth, 27 AS parent_id, 1.5143707533460067 AS "Estimator" UNION ALL SELECT 32 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 5 AS depth, 31 AS parent_id, 1.3104017208612466 AS "Estimator" UNION ALL SELECT 33 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 31 AS parent_id, 1.1577860434316234 AS "Estimator" UNION ALL SELECT 35 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 34 AS parent_id, 1.3463614795691619 AS "Estimator" UNION ALL SELECT 36 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 9 AS count, 5 AS depth, 34 AS parent_id, 1.4891029086027276 AS "Estimator") AS "Values"), 
"DT_Output_7" AS 
(SELECT "DT_node_lookup_7"."KEY" AS "KEY", "DT_node_lookup_7".node_id_2 AS node_id_2, "DT_node_data_7".node_id AS node_id, "DT_node_data_7".feature AS feature, "DT_node_data_7".threshold AS threshold, "DT_node_data_7".count AS count, "DT_node_data_7".depth AS depth, "DT_node_data_7".parent_id AS parent_id, "DT_node_data_7"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_7" LEFT OUTER JOIN "DT_node_data_7" ON "DT_node_lookup_7".node_id_2 = "DT_node_data_7".node_id), 
"BAG_Tree_7" AS 
(SELECT "DT_Output_7"."KEY" AS "KEY", "DT_Output_7"."Estimator" AS "Estimator" 
FROM "DT_Output_7")
 SELECT "Score_Union_CTE_esu_0"."KEY", "Score_Union_CTE_esu_0"."Estimator" 
FROM (SELECT "BAG_Tree_0"."KEY" AS "KEY", "BAG_Tree_0"."Estimator" AS "Estimator" 
FROM "BAG_Tree_0" UNION ALL SELECT "BAG_Tree_1"."KEY" AS "KEY", "BAG_Tree_1"."Estimator" AS "Estimator" 
FROM "BAG_Tree_1" UNION ALL SELECT "BAG_Tree_2"."KEY" AS "KEY", "BAG_Tree_2"."Estimator" AS "Estimator" 
FROM "BAG_Tree_2" UNION ALL SELECT "BAG_Tree_3"."KEY" AS "KEY", "BAG_Tree_3"."Estimator" AS "Estimator" 
FROM "BAG_Tree_3" UNION ALL SELECT "BAG_Tree_4"."KEY" AS "KEY", "BAG_Tree_4"."Estimator" AS "Estimator" 
FROM "BAG_Tree_4" UNION ALL SELECT "BAG_Tree_5"."KEY" AS "KEY", "BAG_Tree_5"."Estimator" AS "Estimator" 
FROM "BAG_Tree_5" UNION ALL SELECT "BAG_Tree_6"."KEY" AS "KEY", "BAG_Tree_6"."Estimator" AS "Estimator" 
FROM "BAG_Tree_6" UNION ALL SELECT "BAG_Tree_7"."KEY" AS "KEY", "BAG_Tree_7"."Estimator" AS "Estimator" 
FROM "BAG_Tree_7") AS "Score_Union_CTE_esu_0"), 
"Score_Union_CTE_1" AS 
(WITH "ADS_imp_1_OUT" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_0" IS NULL) THEN 43.7912812221 ELSE "ADS"."Feature_0" END AS imputer_output_2, CASE WHEN ("ADS"."Feature_1" IS NULL) THEN 945.967283308 ELSE "ADS"."Feature_1" END AS imputer_output_3, CASE WHEN ("ADS"."Feature_2" IS NULL) THEN 0.531000909998 ELSE "ADS"."Feature_2" END AS imputer_output_4, CASE WHEN ("ADS"."Feature_3" IS NULL) THEN 6.13996715205 ELSE "ADS"."Feature_3" END AS imputer_output_5 
FROM freidman3 AS "ADS"), 
"ADS_sca_2_OUT" AS 
(SELECT "ADS_imp_1_OUT"."KEY" AS "KEY", (CAST("ADS_imp_1_OUT".imputer_output_2 AS FLOAT) - 43.7912812221) / 26.0356235762 AS scaler_output_2, (CAST("ADS_imp_1_OUT".imputer_output_3 AS FLOAT) - 945.967283308) / 461.455276615 AS scaler_output_3, (CAST("ADS_imp_1_OUT".imputer_output_4 AS FLOAT) - 0.531000909998) / 0.290186328214 AS scaler_output_4, (CAST("ADS_imp_1_OUT".imputer_output_5 AS FLOAT) - 6.13996715205) / 3.07291724256 AS scaler_output_5 
FROM "ADS_imp_1_OUT"), 
"DT_node_lookup_8" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= -1.481613039970398) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= -0.5904802083969116) THEN 2 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= -1.084075689315796) THEN 4 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= 0.2745603322982788) THEN 6 ELSE 7 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= 0.20899805426597595) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= -1.3374958038330078) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= 0.23203356564044952) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= -0.3779405653476715) THEN 12 ELSE 13 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= -1.4630563259124756) THEN 15 ELSE 16 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= -1.2830257415771484) THEN 18 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= -0.8880466222763062) THEN 20 ELSE 21 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= -0.5494245290756226) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= 0.938457727432251) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= -0.19714802503585815) THEN 25 ELSE 26 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= 0.5208854079246521) THEN 28 ELSE 29 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= -0.26058903336524963) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= 0.401416152715683) THEN 32 ELSE 33 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= -0.1196240484714508) THEN 35 ELSE 36 END END END END END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_8" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 2 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 2 AS depth, 1 AS parent_id, 1.350090108150775 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 3 AS parent_id, 0.8079109230317987 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 5 AS parent_id, 0.38342473185592096 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 5 AS parent_id, 0.3751675659770648 AS "Estimator" UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 11 AS parent_id, 1.410743936534041 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 11 AS parent_id, 1.3678941404936502 AS "Estimator" UNION ALL SELECT 15 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 14 AS parent_id, 1.5220836338497605 AS "Estimator" UNION ALL SELECT 16 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 14 AS parent_id, 1.4608890093126605 AS "Estimator" UNION ALL SELECT 18 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 17 AS parent_id, 1.3687175770364277 AS "Estimator" UNION ALL SELECT 20 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 9 AS count, 5 AS depth, 19 AS parent_id, 1.5558566047131794 AS "Estimator" UNION ALL SELECT 21 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 16 AS count, 5 AS depth, 19 AS parent_id, 1.5141262426042308 AS "Estimator" UNION ALL SELECT 25 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 5 AS depth, 24 AS parent_id, 1.1119525838507072 AS "Estimator" UNION ALL SELECT 26 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 5 AS depth, 24 AS parent_id, 1.1610367957829166 AS "Estimator" UNION ALL SELECT 28 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 27 AS parent_id, 1.278877589279357 AS "Estimator" UNION ALL SELECT 29 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 27 AS parent_id, 1.3844945172080796 AS "Estimator" UNION ALL SELECT 32 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 31 AS parent_id, 1.3498429932286293 AS "Estimator" UNION ALL SELECT 33 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 31 AS parent_id, 1.314325621172093 AS "Estimator" UNION ALL SELECT 35 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 5 AS depth, 34 AS parent_id, 1.4666571757900475 AS "Estimator" UNION ALL SELECT 36 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS count, 5 AS depth, 34 AS parent_id, 1.489123778130218 AS "Estimator") AS "Values"), 
"DT_Output_8" AS 
(SELECT "DT_node_lookup_8"."KEY" AS "KEY", "DT_node_lookup_8".node_id_2 AS node_id_2, "DT_node_data_8".node_id AS node_id, "DT_node_data_8".feature AS feature, "DT_node_data_8".threshold AS threshold, "DT_node_data_8".count AS count, "DT_node_data_8".depth AS depth, "DT_node_data_8".parent_id AS parent_id, "DT_node_data_8"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_8" LEFT OUTER JOIN "DT_node_data_8" ON "DT_node_lookup_8".node_id_2 = "DT_node_data_8".node_id), 
"BAG_Tree_8" AS 
(SELECT "DT_Output_8"."KEY" AS "KEY", "DT_Output_8"."Estimator" AS "Estimator" 
FROM "DT_Output_8"), 
"DT_node_lookup_9" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= -1.6865601539611816) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= -0.6579667329788208) THEN 2 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= -0.19290710985660553) THEN 4 ELSE 5 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= 1.1021127700805664) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= -1.0424461364746094) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= -0.2286939173936844) THEN 9 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= -0.6441354751586914) THEN 11 ELSE 12 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= -0.3589157462120056) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= -1.3878793716430664) THEN 15 ELSE 16 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= -1.385697841644287) THEN 18 ELSE 19 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= 1.0049841403961182) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= -0.7887826561927795) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= -1.494538426399231) THEN 23 ELSE 24 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= -0.388088583946228) THEN 26 ELSE 27 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= 1.3188034296035767) THEN 29 ELSE 30 END END END END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_9" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 2 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 2 AS depth, 1 AS parent_id, 0.6100168381304848 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 3 AS parent_id, 0.4848669214064692 AS "Estimator" UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 3 AS parent_id, 0.38342473185592096 AS "Estimator" UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 8 AS parent_id, 1.1968265037681187 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 10 AS parent_id, 1.4092998433520778 AS "Estimator" UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 5 AS depth, 10 AS parent_id, 1.357541095705036 AS "Estimator" UNION ALL SELECT 15 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 6 AS count, 5 AS depth, 14 AS parent_id, 1.5603066802796168 AS "Estimator" UNION ALL SELECT 16 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 9 AS count, 5 AS depth, 14 AS parent_id, 1.5354964384632988 AS "Estimator" UNION ALL SELECT 18 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 17 AS parent_id, 1.278877589279357 AS "Estimator" UNION ALL SELECT 19 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 15 AS count, 5 AS depth, 17 AS parent_id, 1.4855991752949391 AS "Estimator" UNION ALL SELECT 23 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 22 AS parent_id, 1.0274843519223331 AS "Estimator" UNION ALL SELECT 24 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 5 AS depth, 22 AS parent_id, 1.0792195428902525 AS "Estimator" UNION ALL SELECT 26 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 5 AS depth, 25 AS parent_id, 1.123491428022023 AS "Estimator" UNION ALL SELECT 27 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 5 AS depth, 25 AS parent_id, 1.2322996621410411 AS "Estimator" UNION ALL SELECT 29 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 28 AS parent_id, 1.4670826204003842 AS "Estimator" UNION ALL SELECT 30 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 28 AS parent_id, 1.4932233184960249 AS "Estimator") AS "Values"), 
"DT_Output_9" AS 
(SELECT "DT_node_lookup_9"."KEY" AS "KEY", "DT_node_lookup_9".node_id_2 AS node_id_2, "DT_node_data_9".node_id AS node_id, "DT_node_data_9".feature AS feature, "DT_node_data_9".threshold AS threshold, "DT_node_data_9".count AS count, "DT_node_data_9".depth AS depth, "DT_node_data_9".parent_id AS parent_id, "DT_node_data_9"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_9" LEFT OUTER JOIN "DT_node_data_9" ON "DT_node_lookup_9".node_id_2 = "DT_node_data_9".node_id), 
"BAG_Tree_9" AS 
(SELECT "DT_Output_9"."KEY" AS "KEY", "DT_Output_9"."Estimator" AS "Estimator" 
FROM "DT_Output_9")
 SELECT "Score_Union_CTE_esu_1"."KEY", "Score_Union_CTE_esu_1"."Estimator" 
FROM (SELECT "BAG_Tree_8"."KEY" AS "KEY", "BAG_Tree_8"."Estimator" AS "Estimator" 
FROM "BAG_Tree_8" UNION ALL SELECT "BAG_Tree_9"."KEY" AS "KEY", "BAG_Tree_9"."Estimator" AS "Estimator" 
FROM "BAG_Tree_9") AS "Score_Union_CTE_esu_1"), 
"Score_Union_CTE" AS 
(SELECT "Score_Union_CTEbig_esu"."KEY" AS "KEY", "Score_Union_CTEbig_esu"."Estimator" AS "Estimator" 
FROM (SELECT "Score_Union_CTE_0"."KEY" AS "KEY", "Score_Union_CTE_0"."Estimator" AS "Estimator" 
FROM "Score_Union_CTE_0" UNION ALL SELECT "Score_Union_CTE_1"."KEY" AS "KEY", "Score_Union_CTE_1"."Estimator" AS "Estimator" 
FROM "Score_Union_CTE_1") AS "Score_Union_CTEbig_esu"), 
"BAG_AVG_Scores" AS 
(SELECT "T"."KEY" AS "KEY", "T"."Estimator" AS "Estimator" 
FROM (SELECT "Score_Union_CTE"."KEY" AS "KEY", avg("Score_Union_CTE"."Estimator") AS "Estimator" 
FROM "Score_Union_CTE" GROUP BY "Score_Union_CTE"."KEY") AS "T")
 SELECT "BAG_AVG_Scores"."KEY" AS "KEY", "BAG_AVG_Scores"."Estimator" AS "Estimator" 
FROM "BAG_AVG_Scores"