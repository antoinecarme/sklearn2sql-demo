-- This SQL code was generated by sklearn2sql (development version).
-- Copyright 2017

WITH [ADS_imp_1_OUT] AS 
(SELECT [ADS].[KEY] AS [KEY], CASE WHEN ([ADS].[Feature_0] IS NULL) THEN 0.149034408453 ELSE [ADS].[Feature_0] END AS impter_2, CASE WHEN ([ADS].[Feature_1] IS NULL) THEN -0.0336763649303 ELSE [ADS].[Feature_1] END AS impter_3, CASE WHEN ([ADS].[Feature_2] IS NULL) THEN 0.119333163556 ELSE [ADS].[Feature_2] END AS impter_4, CASE WHEN ([ADS].[Feature_3] IS NULL) THEN -0.173692031302 ELSE [ADS].[Feature_3] END AS impter_5, CASE WHEN ([ADS].[Feature_4] IS NULL) THEN 0.0653435549211 ELSE [ADS].[Feature_4] END AS impter_6, CASE WHEN ([ADS].[Feature_5] IS NULL) THEN 0.243622899376 ELSE [ADS].[Feature_5] END AS impter_7, CASE WHEN ([ADS].[Feature_6] IS NULL) THEN -0.113673579111 ELSE [ADS].[Feature_6] END AS impter_8, CASE WHEN ([ADS].[Feature_7] IS NULL) THEN -0.211764438767 ELSE [ADS].[Feature_7] END AS impter_9, CASE WHEN ([ADS].[Feature_8] IS NULL) THEN 0.115139799146 ELSE [ADS].[Feature_8] END AS impter_10, CASE WHEN ([ADS].[Feature_9] IS NULL) THEN 0.0291119249386 ELSE [ADS].[Feature_9] END AS impter_11, CASE WHEN ([ADS].[Feature_10] IS NULL) THEN 0.110771892686 ELSE [ADS].[Feature_10] END AS impter_12, CASE WHEN ([ADS].[Feature_11] IS NULL) THEN 0.00145803754246 ELSE [ADS].[Feature_11] END AS impter_13, CASE WHEN ([ADS].[Feature_12] IS NULL) THEN -0.0773739291867 ELSE [ADS].[Feature_12] END AS impter_14, CASE WHEN ([ADS].[Feature_13] IS NULL) THEN -0.113957287588 ELSE [ADS].[Feature_13] END AS impter_15, CASE WHEN ([ADS].[Feature_14] IS NULL) THEN -0.12567631285 ELSE [ADS].[Feature_14] END AS impter_16, CASE WHEN ([ADS].[Feature_15] IS NULL) THEN -0.0579959783399 ELSE [ADS].[Feature_15] END AS impter_17, CASE WHEN ([ADS].[Feature_16] IS NULL) THEN -0.141812641745 ELSE [ADS].[Feature_16] END AS impter_18, CASE WHEN ([ADS].[Feature_17] IS NULL) THEN -0.12654542869 ELSE [ADS].[Feature_17] END AS impter_19, CASE WHEN ([ADS].[Feature_18] IS NULL) THEN -0.0781224868352 ELSE [ADS].[Feature_18] END AS impter_20, CASE WHEN ([ADS].[Feature_19] IS NULL) THEN -0.0764873768302 ELSE [ADS].[Feature_19] END AS impter_21, CASE WHEN ([ADS].[Feature_20] IS NULL) THEN 0.0586426242787 ELSE [ADS].[Feature_20] END AS impter_22, CASE WHEN ([ADS].[Feature_21] IS NULL) THEN 0.108440370746 ELSE [ADS].[Feature_21] END AS impter_23, CASE WHEN ([ADS].[Feature_22] IS NULL) THEN 0.0600659693334 ELSE [ADS].[Feature_22] END AS impter_24, CASE WHEN ([ADS].[Feature_23] IS NULL) THEN 0.152557712719 ELSE [ADS].[Feature_23] END AS impter_25, CASE WHEN ([ADS].[Feature_24] IS NULL) THEN -0.047123256878 ELSE [ADS].[Feature_24] END AS impter_26, CASE WHEN ([ADS].[Feature_25] IS NULL) THEN -0.0569629691409 ELSE [ADS].[Feature_25] END AS impter_27, CASE WHEN ([ADS].[Feature_26] IS NULL) THEN 0.0961468409994 ELSE [ADS].[Feature_26] END AS impter_28, CASE WHEN ([ADS].[Feature_27] IS NULL) THEN 0.104338334098 ELSE [ADS].[Feature_27] END AS impter_29, CASE WHEN ([ADS].[Feature_28] IS NULL) THEN 0.0325771619196 ELSE [ADS].[Feature_28] END AS impter_30, CASE WHEN ([ADS].[Feature_29] IS NULL) THEN 0.0614290574937 ELSE [ADS].[Feature_29] END AS impter_31, CASE WHEN ([ADS].[Feature_30] IS NULL) THEN -0.0145404234607 ELSE [ADS].[Feature_30] END AS impter_32, CASE WHEN ([ADS].[Feature_31] IS NULL) THEN -0.112338009994 ELSE [ADS].[Feature_31] END AS impter_33, CASE WHEN ([ADS].[Feature_32] IS NULL) THEN 0.118912844605 ELSE [ADS].[Feature_32] END AS impter_34, CASE WHEN ([ADS].[Feature_33] IS NULL) THEN 0.228686493008 ELSE [ADS].[Feature_33] END AS impter_35, CASE WHEN ([ADS].[Feature_34] IS NULL) THEN 0.235661815499 ELSE [ADS].[Feature_34] END AS impter_36, CASE WHEN ([ADS].[Feature_35] IS NULL) THEN 0.0731697039996 ELSE [ADS].[Feature_35] END AS impter_37, CASE WHEN ([ADS].[Feature_36] IS NULL) THEN -0.0331940982747 ELSE [ADS].[Feature_36] END AS impter_38, CASE WHEN ([ADS].[Feature_37] IS NULL) THEN 0.273493877418 ELSE [ADS].[Feature_37] END AS impter_39, CASE WHEN ([ADS].[Feature_38] IS NULL) THEN -0.0232895677422 ELSE [ADS].[Feature_38] END AS impter_40, CASE WHEN ([ADS].[Feature_39] IS NULL) THEN 0.0302883792606 ELSE [ADS].[Feature_39] END AS impter_41, CASE WHEN ([ADS].[Feature_40] IS NULL) THEN -0.107368262331 ELSE [ADS].[Feature_40] END AS impter_42, CASE WHEN ([ADS].[Feature_41] IS NULL) THEN 0.0264029500979 ELSE [ADS].[Feature_41] END AS impter_43, CASE WHEN ([ADS].[Feature_42] IS NULL) THEN -0.0967714665491 ELSE [ADS].[Feature_42] END AS impter_44, CASE WHEN ([ADS].[Feature_43] IS NULL) THEN 0.00597424834297 ELSE [ADS].[Feature_43] END AS impter_45, CASE WHEN ([ADS].[Feature_44] IS NULL) THEN 0.0369172681271 ELSE [ADS].[Feature_44] END AS impter_46, CASE WHEN ([ADS].[Feature_45] IS NULL) THEN -0.145257173824 ELSE [ADS].[Feature_45] END AS impter_47, CASE WHEN ([ADS].[Feature_46] IS NULL) THEN -0.166752698812 ELSE [ADS].[Feature_46] END AS impter_48, CASE WHEN ([ADS].[Feature_47] IS NULL) THEN 0.250844656957 ELSE [ADS].[Feature_47] END AS impter_49, CASE WHEN ([ADS].[Feature_48] IS NULL) THEN 0.146233983223 ELSE [ADS].[Feature_48] END AS impter_50, CASE WHEN ([ADS].[Feature_49] IS NULL) THEN 0.101854311334 ELSE [ADS].[Feature_49] END AS impter_51, CASE WHEN ([ADS].[Feature_50] IS NULL) THEN -0.132925609451 ELSE [ADS].[Feature_50] END AS impter_52, CASE WHEN ([ADS].[Feature_51] IS NULL) THEN -0.0421917913654 ELSE [ADS].[Feature_51] END AS impter_53, CASE WHEN ([ADS].[Feature_52] IS NULL) THEN 0.152140284047 ELSE [ADS].[Feature_52] END AS impter_54, CASE WHEN ([ADS].[Feature_53] IS NULL) THEN -0.158213723143 ELSE [ADS].[Feature_53] END AS impter_55, CASE WHEN ([ADS].[Feature_54] IS NULL) THEN 0.179262605358 ELSE [ADS].[Feature_54] END AS impter_56, CASE WHEN ([ADS].[Feature_55] IS NULL) THEN 0.0507753321044 ELSE [ADS].[Feature_55] END AS impter_57, CASE WHEN ([ADS].[Feature_56] IS NULL) THEN -0.0118845513623 ELSE [ADS].[Feature_56] END AS impter_58, CASE WHEN ([ADS].[Feature_57] IS NULL) THEN -0.0494874506914 ELSE [ADS].[Feature_57] END AS impter_59, CASE WHEN ([ADS].[Feature_58] IS NULL) THEN -0.132567335525 ELSE [ADS].[Feature_58] END AS impter_60, CASE WHEN ([ADS].[Feature_59] IS NULL) THEN 0.118662382025 ELSE [ADS].[Feature_59] END AS impter_61, CASE WHEN ([ADS].[Feature_60] IS NULL) THEN -0.0659082852023 ELSE [ADS].[Feature_60] END AS impter_62, CASE WHEN ([ADS].[Feature_61] IS NULL) THEN 0.155485733887 ELSE [ADS].[Feature_61] END AS impter_63, CASE WHEN ([ADS].[Feature_62] IS NULL) THEN -0.00660830149098 ELSE [ADS].[Feature_62] END AS impter_64, CASE WHEN ([ADS].[Feature_63] IS NULL) THEN -0.0182758014849 ELSE [ADS].[Feature_63] END AS impter_65, CASE WHEN ([ADS].[Feature_64] IS NULL) THEN -0.0273663174287 ELSE [ADS].[Feature_64] END AS impter_66, CASE WHEN ([ADS].[Feature_65] IS NULL) THEN 0.0143662500367 ELSE [ADS].[Feature_65] END AS impter_67, CASE WHEN ([ADS].[Feature_66] IS NULL) THEN 0.0540753000896 ELSE [ADS].[Feature_66] END AS impter_68, CASE WHEN ([ADS].[Feature_67] IS NULL) THEN -0.230852733839 ELSE [ADS].[Feature_67] END AS impter_69, CASE WHEN ([ADS].[Feature_68] IS NULL) THEN -0.243965288084 ELSE [ADS].[Feature_68] END AS impter_70, CASE WHEN ([ADS].[Feature_69] IS NULL) THEN 0.0654506578766 ELSE [ADS].[Feature_69] END AS impter_71, CASE WHEN ([ADS].[Feature_70] IS NULL) THEN 0.0426651830202 ELSE [ADS].[Feature_70] END AS impter_72, CASE WHEN ([ADS].[Feature_71] IS NULL) THEN -0.154045182035 ELSE [ADS].[Feature_71] END AS impter_73, CASE WHEN ([ADS].[Feature_72] IS NULL) THEN -0.222235256457 ELSE [ADS].[Feature_72] END AS impter_74, CASE WHEN ([ADS].[Feature_73] IS NULL) THEN 0.0685606372973 ELSE [ADS].[Feature_73] END AS impter_75, CASE WHEN ([ADS].[Feature_74] IS NULL) THEN -0.0963959208539 ELSE [ADS].[Feature_74] END AS impter_76, CASE WHEN ([ADS].[Feature_75] IS NULL) THEN 0.207475189275 ELSE [ADS].[Feature_75] END AS impter_77, CASE WHEN ([ADS].[Feature_76] IS NULL) THEN -0.139452563671 ELSE [ADS].[Feature_76] END AS impter_78, CASE WHEN ([ADS].[Feature_77] IS NULL) THEN 0.0219542087737 ELSE [ADS].[Feature_77] END AS impter_79, CASE WHEN ([ADS].[Feature_78] IS NULL) THEN 0.0703351703703 ELSE [ADS].[Feature_78] END AS impter_80, CASE WHEN ([ADS].[Feature_79] IS NULL) THEN 0.120624721907 ELSE [ADS].[Feature_79] END AS impter_81, CASE WHEN ([ADS].[Feature_80] IS NULL) THEN -0.0337659474425 ELSE [ADS].[Feature_80] END AS impter_82, CASE WHEN ([ADS].[Feature_81] IS NULL) THEN -0.110635213133 ELSE [ADS].[Feature_81] END AS impter_83, CASE WHEN ([ADS].[Feature_82] IS NULL) THEN 0.0402642804367 ELSE [ADS].[Feature_82] END AS impter_84, CASE WHEN ([ADS].[Feature_83] IS NULL) THEN 0.0476196986347 ELSE [ADS].[Feature_83] END AS impter_85, CASE WHEN ([ADS].[Feature_84] IS NULL) THEN 0.102945428966 ELSE [ADS].[Feature_84] END AS impter_86, CASE WHEN ([ADS].[Feature_85] IS NULL) THEN 0.0354313908654 ELSE [ADS].[Feature_85] END AS impter_87, CASE WHEN ([ADS].[Feature_86] IS NULL) THEN 0.158126749954 ELSE [ADS].[Feature_86] END AS impter_88, CASE WHEN ([ADS].[Feature_87] IS NULL) THEN -0.093706792025 ELSE [ADS].[Feature_87] END AS impter_89, CASE WHEN ([ADS].[Feature_88] IS NULL) THEN -0.0535217413313 ELSE [ADS].[Feature_88] END AS impter_90, CASE WHEN ([ADS].[Feature_89] IS NULL) THEN -0.0567114213575 ELSE [ADS].[Feature_89] END AS impter_91, CASE WHEN ([ADS].[Feature_90] IS NULL) THEN 0.168350191992 ELSE [ADS].[Feature_90] END AS impter_92, CASE WHEN ([ADS].[Feature_91] IS NULL) THEN -0.0801468778596 ELSE [ADS].[Feature_91] END AS impter_93, CASE WHEN ([ADS].[Feature_92] IS NULL) THEN 0.0673275172113 ELSE [ADS].[Feature_92] END AS impter_94, CASE WHEN ([ADS].[Feature_93] IS NULL) THEN -0.00888651681787 ELSE [ADS].[Feature_93] END AS impter_95, CASE WHEN ([ADS].[Feature_94] IS NULL) THEN 0.0260953855178 ELSE [ADS].[Feature_94] END AS impter_96, CASE WHEN ([ADS].[Feature_95] IS NULL) THEN 0.04435425201 ELSE [ADS].[Feature_95] END AS impter_97, CASE WHEN ([ADS].[Feature_96] IS NULL) THEN 0.0268954080706 ELSE [ADS].[Feature_96] END AS impter_98, CASE WHEN ([ADS].[Feature_97] IS NULL) THEN 0.182329715391 ELSE [ADS].[Feature_97] END AS impter_99, CASE WHEN ([ADS].[Feature_98] IS NULL) THEN -0.12132540363 ELSE [ADS].[Feature_98] END AS impter_100, CASE WHEN ([ADS].[Feature_99] IS NULL) THEN 0.00442013252429 ELSE [ADS].[Feature_99] END AS impter_101 
FROM [BinaryClass_100] AS [ADS]), 
[ADS_sca_2_OUT] AS 
(SELECT [ADS_imp_1_OUT].[KEY] AS [KEY], (CAST([ADS_imp_1_OUT].impter_2 AS FLOAT) - 0.149034408453) / 0.863660967893 AS scaler_2, (CAST([ADS_imp_1_OUT].impter_3 AS FLOAT) - -0.0336763649303) / 0.957846118882 AS scaler_3, (CAST([ADS_imp_1_OUT].impter_4 AS FLOAT) - 0.119333163556) / 0.988940710895 AS scaler_4, (CAST([ADS_imp_1_OUT].impter_5 AS FLOAT) - -0.173692031302) / 0.925555542437 AS scaler_5, (CAST([ADS_imp_1_OUT].impter_6 AS FLOAT) - 0.0653435549211) / 1.25490665905 AS scaler_6, (CAST([ADS_imp_1_OUT].impter_7 AS FLOAT) - 0.243622899376) / 1.02899858975 AS scaler_7, (CAST([ADS_imp_1_OUT].impter_8 AS FLOAT) - -0.113673579111) / 0.892313689578 AS scaler_8, (CAST([ADS_imp_1_OUT].impter_9 AS FLOAT) - -0.211764438767) / 0.900298899995 AS scaler_9, (CAST([ADS_imp_1_OUT].impter_10 AS FLOAT) - 0.115139799146) / 1.04079311782 AS scaler_10, (CAST([ADS_imp_1_OUT].impter_11 AS FLOAT) - 0.0291119249386) / 0.819188267775 AS scaler_11, (CAST([ADS_imp_1_OUT].impter_12 AS FLOAT) - 0.110771892686) / 1.1250344343 AS scaler_12, (CAST([ADS_imp_1_OUT].impter_13 AS FLOAT) - 0.00145803754246) / 1.05817527823 AS scaler_13, (CAST([ADS_imp_1_OUT].impter_14 AS FLOAT) - -0.0773739291867) / 0.941909260462 AS scaler_14, (CAST([ADS_imp_1_OUT].impter_15 AS FLOAT) - -0.113957287588) / 0.984434017257 AS scaler_15, (CAST([ADS_imp_1_OUT].impter_16 AS FLOAT) - -0.12567631285) / 1.06969606599 AS scaler_16, (CAST([ADS_imp_1_OUT].impter_17 AS FLOAT) - -0.0579959783399) / 0.957224686977 AS scaler_17, (CAST([ADS_imp_1_OUT].impter_18 AS FLOAT) - -0.141812641745) / 0.940278231802 AS scaler_18, (CAST([ADS_imp_1_OUT].impter_19 AS FLOAT) - -0.12654542869) / 1.03940757746 AS scaler_19, (CAST([ADS_imp_1_OUT].impter_20 AS FLOAT) - -0.0781224868352) / 1.32237602306 AS scaler_20, (CAST([ADS_imp_1_OUT].impter_21 AS FLOAT) - -0.0764873768302) / 0.948894937925 AS scaler_21, (CAST([ADS_imp_1_OUT].impter_22 AS FLOAT) - 0.0586426242787) / 0.953858142664 AS scaler_22, (CAST([ADS_imp_1_OUT].impter_23 AS FLOAT) - 0.108440370746) / 1.21093008257 AS scaler_23, (CAST([ADS_imp_1_OUT].impter_24 AS FLOAT) - 0.0600659693334) / 0.919150215651 AS scaler_24, (CAST([ADS_imp_1_OUT].impter_25 AS FLOAT) - 0.152557712719) / 0.929957615475 AS scaler_25, (CAST([ADS_imp_1_OUT].impter_26 AS FLOAT) - -0.047123256878) / 0.772185544077 AS scaler_26, (CAST([ADS_imp_1_OUT].impter_27 AS FLOAT) - -0.0569629691409) / 0.865508439351 AS scaler_27, (CAST([ADS_imp_1_OUT].impter_28 AS FLOAT) - 0.0961468409994) / 0.96937898079 AS scaler_28, (CAST([ADS_imp_1_OUT].impter_29 AS FLOAT) - 0.104338334098) / 1.09747315088 AS scaler_29, (CAST([ADS_imp_1_OUT].impter_30 AS FLOAT) - 0.0325771619196) / 0.943506396878 AS scaler_30, (CAST([ADS_imp_1_OUT].impter_31 AS FLOAT) - 0.0614290574937) / 1.11707327333 AS scaler_31, (CAST([ADS_imp_1_OUT].impter_32 AS FLOAT) - -0.0145404234607) / 1.05731681973 AS scaler_32, (CAST([ADS_imp_1_OUT].impter_33 AS FLOAT) - -0.112338009994) / 0.978615165975 AS scaler_33, (CAST([ADS_imp_1_OUT].impter_34 AS FLOAT) - 0.118912844605) / 1.00635634008 AS scaler_34, (CAST([ADS_imp_1_OUT].impter_35 AS FLOAT) - 0.228686493008) / 0.99875178991 AS scaler_35, (CAST([ADS_imp_1_OUT].impter_36 AS FLOAT) - 0.235661815499) / 0.889212557545 AS scaler_36, (CAST([ADS_imp_1_OUT].impter_37 AS FLOAT) - 0.0731697039996) / 0.847859331458 AS scaler_37, (CAST([ADS_imp_1_OUT].impter_38 AS FLOAT) - -0.0331940982747) / 0.941776159176 AS scaler_38, (CAST([ADS_imp_1_OUT].impter_39 AS FLOAT) - 0.273493877418) / 0.88427109411 AS scaler_39, (CAST([ADS_imp_1_OUT].impter_40 AS FLOAT) - -0.0232895677422) / 0.994764574925 AS scaler_40, (CAST([ADS_imp_1_OUT].impter_41 AS FLOAT) - 0.0302883792606) / 1.03853940215 AS scaler_41, (CAST([ADS_imp_1_OUT].impter_42 AS FLOAT) - -0.107368262331) / 0.983011795115 AS scaler_42, (CAST([ADS_imp_1_OUT].impter_43 AS FLOAT) - 0.0264029500979) / 1.03982875397 AS scaler_43, (CAST([ADS_imp_1_OUT].impter_44 AS FLOAT) - -0.0967714665491) / 1.00152255641 AS scaler_44, (CAST([ADS_imp_1_OUT].impter_45 AS FLOAT) - 0.00597424834297) / 0.919224835729 AS scaler_45, (CAST([ADS_imp_1_OUT].impter_46 AS FLOAT) - 0.0369172681271) / 1.06975493897 AS scaler_46, (CAST([ADS_imp_1_OUT].impter_47 AS FLOAT) - -0.145257173824) / 1.0022143023 AS scaler_47, (CAST([ADS_imp_1_OUT].impter_48 AS FLOAT) - -0.166752698812) / 1.02649761736 AS scaler_48, (CAST([ADS_imp_1_OUT].impter_49 AS FLOAT) - 0.250844656957) / 1.01763512955 AS scaler_49, (CAST([ADS_imp_1_OUT].impter_50 AS FLOAT) - 0.146233983223) / 0.949901088245 AS scaler_50, (CAST([ADS_imp_1_OUT].impter_51 AS FLOAT) - 0.101854311334) / 1.08349130232 AS scaler_51, (CAST([ADS_imp_1_OUT].impter_52 AS FLOAT) - -0.132925609451) / 1.20304301294 AS scaler_52, (CAST([ADS_imp_1_OUT].impter_53 AS FLOAT) - -0.0421917913654) / 1.0890718482 AS scaler_53, (CAST([ADS_imp_1_OUT].impter_54 AS FLOAT) - 0.152140284047) / 1.03559281627 AS scaler_54, (CAST([ADS_imp_1_OUT].impter_55 AS FLOAT) - -0.158213723143) / 0.813084857359 AS scaler_55, (CAST([ADS_imp_1_OUT].impter_56 AS FLOAT) - 0.179262605358) / 1.07046714633 AS scaler_56, (CAST([ADS_imp_1_OUT].impter_57 AS FLOAT) - 0.0507753321044) / 1.00525649412 AS scaler_57, (CAST([ADS_imp_1_OUT].impter_58 AS FLOAT) - -0.0118845513623) / 0.969141309787 AS scaler_58, (CAST([ADS_imp_1_OUT].impter_59 AS FLOAT) - -0.0494874506914) / 1.26097682699 AS scaler_59, (CAST([ADS_imp_1_OUT].impter_60 AS FLOAT) - -0.132567335525) / 0.868625102233 AS scaler_60, (CAST([ADS_imp_1_OUT].impter_61 AS FLOAT) - 0.118662382025) / 1.06316548496 AS scaler_61, (CAST([ADS_imp_1_OUT].impter_62 AS FLOAT) - -0.0659082852023) / 1.04187279083 AS scaler_62, (CAST([ADS_imp_1_OUT].impter_63 AS FLOAT) - 0.155485733887) / 0.894651979404 AS scaler_63, (CAST([ADS_imp_1_OUT].impter_64 AS FLOAT) - -0.00660830149098) / 0.916615314172 AS scaler_64, (CAST([ADS_imp_1_OUT].impter_65 AS FLOAT) - -0.0182758014849) / 1.0372814666 AS scaler_65, (CAST([ADS_imp_1_OUT].impter_66 AS FLOAT) - -0.0273663174287) / 0.887668072204 AS scaler_66, (CAST([ADS_imp_1_OUT].impter_67 AS FLOAT) - 0.0143662500367) / 0.918497664595 AS scaler_67, (CAST([ADS_imp_1_OUT].impter_68 AS FLOAT) - 0.0540753000896) / 0.92958848937 AS scaler_68, (CAST([ADS_imp_1_OUT].impter_69 AS FLOAT) - -0.230852733839) / 0.944088767881 AS scaler_69, (CAST([ADS_imp_1_OUT].impter_70 AS FLOAT) - -0.243965288084) / 1.04592379692 AS scaler_70, (CAST([ADS_imp_1_OUT].impter_71 AS FLOAT) - 0.0654506578766) / 0.896770163985 AS scaler_71, (CAST([ADS_imp_1_OUT].impter_72 AS FLOAT) - 0.0426651830202) / 0.883539188169 AS scaler_72, (CAST([ADS_imp_1_OUT].impter_73 AS FLOAT) - -0.154045182035) / 0.986979156102 AS scaler_73, (CAST([ADS_imp_1_OUT].impter_74 AS FLOAT) - -0.222235256457) / 0.953792741196 AS scaler_74, (CAST([ADS_imp_1_OUT].impter_75 AS FLOAT) - 0.0685606372973) / 0.953717717146 AS scaler_75, (CAST([ADS_imp_1_OUT].impter_76 AS FLOAT) - -0.0963959208539) / 1.03587753203 AS scaler_76, (CAST([ADS_imp_1_OUT].impter_77 AS FLOAT) - 0.207475189275) / 1.06110762223 AS scaler_77, (CAST([ADS_imp_1_OUT].impter_78 AS FLOAT) - -0.139452563671) / 1.02237005332 AS scaler_78, (CAST([ADS_imp_1_OUT].impter_79 AS FLOAT) - 0.0219542087737) / 0.48752447533 AS scaler_79, (CAST([ADS_imp_1_OUT].impter_80 AS FLOAT) - 0.0703351703703) / 0.998427876189 AS scaler_80, (CAST([ADS_imp_1_OUT].impter_81 AS FLOAT) - 0.120624721907) / 1.04829143705 AS scaler_81, (CAST([ADS_imp_1_OUT].impter_82 AS FLOAT) - -0.0337659474425) / 1.01203950398 AS scaler_82, (CAST([ADS_imp_1_OUT].impter_83 AS FLOAT) - -0.110635213133) / 0.848796528198 AS scaler_83, (CAST([ADS_imp_1_OUT].impter_84 AS FLOAT) - 0.0402642804367) / 0.927886551998 AS scaler_84, (CAST([ADS_imp_1_OUT].impter_85 AS FLOAT) - 0.0476196986347) / 1.01736816768 AS scaler_85, (CAST([ADS_imp_1_OUT].impter_86 AS FLOAT) - 0.102945428966) / 0.936375113827 AS scaler_86, (CAST([ADS_imp_1_OUT].impter_87 AS FLOAT) - 0.0354313908654) / 0.976657395204 AS scaler_87, (CAST([ADS_imp_1_OUT].impter_88 AS FLOAT) - 0.158126749954) / 1.00656799984 AS scaler_88, (CAST([ADS_imp_1_OUT].impter_89 AS FLOAT) - -0.093706792025) / 0.952144160924 AS scaler_89, (CAST([ADS_imp_1_OUT].impter_90 AS FLOAT) - -0.0535217413313) / 1.03366798768 AS scaler_90, (CAST([ADS_imp_1_OUT].impter_91 AS FLOAT) - -0.0567114213575) / 1.08511078116 AS scaler_91, (CAST([ADS_imp_1_OUT].impter_92 AS FLOAT) - 0.168350191992) / 0.828654443272 AS scaler_92, (CAST([ADS_imp_1_OUT].impter_93 AS FLOAT) - -0.0801468778596) / 1.07042043255 AS scaler_93, (CAST([ADS_imp_1_OUT].impter_94 AS FLOAT) - 0.0673275172113) / 1.17497921998 AS scaler_94, (CAST([ADS_imp_1_OUT].impter_95 AS FLOAT) - -0.00888651681787) / 1.07500733772 AS scaler_95, (CAST([ADS_imp_1_OUT].impter_96 AS FLOAT) - 0.0260953855178) / 1.10781838782 AS scaler_96, (CAST([ADS_imp_1_OUT].impter_97 AS FLOAT) - 0.04435425201) / 0.88613754112 AS scaler_97, (CAST([ADS_imp_1_OUT].impter_98 AS FLOAT) - 0.0268954080706) / 1.00952888239 AS scaler_98, (CAST([ADS_imp_1_OUT].impter_99 AS FLOAT) - 0.182329715391) / 0.955138205624 AS scaler_99, (CAST([ADS_imp_1_OUT].impter_100 AS FLOAT) - -0.12132540363) / 0.925885755687 AS scaler_100, (CAST([ADS_imp_1_OUT].impter_101 AS FLOAT) - 0.00442013252429) / 0.937196598221 AS scaler_101 
FROM [ADS_imp_1_OUT]), 
[RawScores] AS 
(SELECT [ADS_sca_2_OUT].[KEY] AS [KEY], CAST(NULL AS FLOAT) AS [LogProba_0], CAST(NULL AS FLOAT) AS [Proba_0], -0.644357016391 + (-0.5 * 1.89962529933 - (0.5 * (CAST([ADS_sca_2_OUT].scaler_2 AS FLOAT) - -0.149641844002) * (CAST([ADS_sca_2_OUT].scaler_2 AS FLOAT) - -0.149641844002)) / 1.06369450775) + (-0.5 * 1.79866201097 - (0.5 * (CAST([ADS_sca_2_OUT].scaler_3 AS FLOAT) - 0.0914091647658) * (CAST([ADS_sca_2_OUT].scaler_3 AS FLOAT) - 0.0914091647658)) / 0.96154390166) + (-0.5 * 1.70802471938 - (0.5 * (CAST([ADS_sca_2_OUT].scaler_4 AS FLOAT) - -0.00449506000095) * (CAST([ADS_sca_2_OUT].scaler_4 AS FLOAT) - -0.00449506000095)) / 0.878225093896) + (-0.5 * 1.80107691393 - (0.5 * (CAST([ADS_sca_2_OUT].scaler_5 AS FLOAT) - 0.1233796926) * (CAST([ADS_sca_2_OUT].scaler_5 AS FLOAT) - 0.1233796926)) / 0.963868742884) + (-0.5 * 0.793738242967 - (0.5 * (CAST([ADS_sca_2_OUT].scaler_6 AS FLOAT) - 0.659597113347) * (CAST([ADS_sca_2_OUT].scaler_6 AS FLOAT) - 0.659597113347)) / 0.351994818578) + (-0.5 * 1.58017527271 - (0.5 * (CAST([ADS_sca_2_OUT].scaler_7 AS FLOAT) - -0.149786802739) * (CAST([ADS_sca_2_OUT].scaler_7 AS FLOAT) - -0.149786802739)) / 0.772825659232) + (-0.5 * 1.87041609872 - (0.5 * (CAST([ADS_sca_2_OUT].scaler_8 AS FLOAT) - 0.0542959994896) * (CAST([ADS_sca_2_OUT].scaler_8 AS FLOAT) - 0.0542959994896)) / 1.03307421564) + (-0.5 * 1.98930287035 - (0.5 * (CAST([ADS_sca_2_OUT].scaler_9 AS FLOAT) - 0.13756544885) * (CAST([ADS_sca_2_OUT].scaler_9 AS FLOAT) - 0.13756544885)) / 1.16349197209) + (-0.5 * 1.92606396951 - (0.5 * (CAST([ADS_sca_2_OUT].scaler_10 AS FLOAT) - -0.0862703526808) * (CAST([ADS_sca_2_OUT].scaler_10 AS FLOAT) - -0.0862703526808)) / 1.09219223707) + (-0.5 * 1.64190978498 - (0.5 * (CAST([ADS_sca_2_OUT].scaler_11 AS FLOAT) - -0.0149066393699) * (CAST([ADS_sca_2_OUT].scaler_11 AS FLOAT) - -0.0149066393699)) / 0.822039130187) + (-0.5 * 1.67982970235 - (0.5 * (CAST([ADS_sca_2_OUT].scaler_12 AS FLOAT) - 0.068201351881) * (CAST([ADS_sca_2_OUT].scaler_12 AS FLOAT) - 0.068201351881)) / 0.853809341131) + (-0.5 * 1.56304481236 - (0.5 * (CAST([ADS_sca_2_OUT].scaler_13 AS FLOAT) - -0.0910005651409) * (CAST([ADS_sca_2_OUT].scaler_13 AS FLOAT) - -0.0910005651409)) / 0.759699549064) + (-0.5 * 1.80632635709 - (0.5 * (CAST([ADS_sca_2_OUT].scaler_14 AS FLOAT) - -0.107467117211) * (CAST([ADS_sca_2_OUT].scaler_14 AS FLOAT) - -0.107467117211)) / 0.968941820831) + (-0.5 * 2.02503196207 - (0.5 * (CAST([ADS_sca_2_OUT].scaler_15 AS FLOAT) - -0.0690275629968) * (CAST([ADS_sca_2_OUT].scaler_15 AS FLOAT) - -0.0690275629968)) / 1.20581404595) + (-0.5 * 1.8535540247 - (0.5 * (CAST([ADS_sca_2_OUT].scaler_16 AS FLOAT) - 0.11342379674) * (CAST([ADS_sca_2_OUT].scaler_16 AS FLOAT) - 0.11342379674)) / 1.01580048647) + (-0.5 * 1.45707957199 - (0.5 * (CAST([ADS_sca_2_OUT].scaler_17 AS FLOAT) - 0.194709245651) * (CAST([ADS_sca_2_OUT].scaler_17 AS FLOAT) - 0.194709245651)) / 0.683316250963) + (-0.5 * 1.98233240747 - (0.5 * (CAST([ADS_sca_2_OUT].scaler_18 AS FLOAT) - -0.00589663140007) * (CAST([ADS_sca_2_OUT].scaler_18 AS FLOAT) - -0.00589663140007)) / 1.15541009442) + (-0.5 * 1.71423014878 - (0.5 * (CAST([ADS_sca_2_OUT].scaler_19 AS FLOAT) - -0.0972998376727) * (CAST([ADS_sca_2_OUT].scaler_19 AS FLOAT) - -0.0972998376727)) / 0.883691801806) + (-0.5 * 1.87266462486 - (0.5 * (CAST([ADS_sca_2_OUT].scaler_20 AS FLOAT) - 0.0737544399151) * (CAST([ADS_sca_2_OUT].scaler_20 AS FLOAT) - 0.0737544399151)) / 1.03539972351) + (-0.5 * 1.64004408813 - (0.5 * (CAST([ADS_sca_2_OUT].scaler_21 AS FLOAT) - 0.0753577528014) * (CAST([ADS_sca_2_OUT].scaler_21 AS FLOAT) - 0.0753577528014)) / 0.820506884164) + (-0.5 * 1.87088168387 - (0.5 * (CAST([ADS_sca_2_OUT].scaler_22 AS FLOAT) - -0.0749551298381) * (CAST([ADS_sca_2_OUT].scaler_22 AS FLOAT) - -0.0749551298381)) / 1.03355531163) + (-0.5 * 1.72325311325 - (0.5 * (CAST([ADS_sca_2_OUT].scaler_23 AS FLOAT) - 0.0944153295151) * (CAST([ADS_sca_2_OUT].scaler_23 AS FLOAT) - 0.0944153295151)) / 0.891701402361) + (-0.5 * 2.09304391957 - (0.5 * (CAST([ADS_sca_2_OUT].scaler_24 AS FLOAT) - 0.10141396532) * (CAST([ADS_sca_2_OUT].scaler_24 AS FLOAT) - 0.10141396532)) / 1.29067695644) + (-0.5 * 1.91986892573 - (0.5 * (CAST([ADS_sca_2_OUT].scaler_25 AS FLOAT) - 0.0861277882533) * (CAST([ADS_sca_2_OUT].scaler_25 AS FLOAT) - 0.0861277882533)) / 1.08544697352) + (-0.5 * 1.84261954582 - (0.5 * (CAST([ADS_sca_2_OUT].scaler_26 AS FLOAT) - 0.192016480002) * (CAST([ADS_sca_2_OUT].scaler_26 AS FLOAT) - 0.192016480002)) / 1.00475374276) + (-0.5 * 1.93113118275 - (0.5 * (CAST([ADS_sca_2_OUT].scaler_27 AS FLOAT) - 0.0928418652186) * (CAST([ADS_sca_2_OUT].scaler_27 AS FLOAT) - 0.0928418652186)) / 1.09774065367) + (-0.5 * 1.76948616465 - (0.5 * (CAST([ADS_sca_2_OUT].scaler_28 AS FLOAT) - 0.0131751089665) * (CAST([ADS_sca_2_OUT].scaler_28 AS FLOAT) - 0.0131751089665)) / 0.933895340885) + (-0.5 * 1.75418643903 - (0.5 * (CAST([ADS_sca_2_OUT].scaler_29 AS FLOAT) - -0.124468142937) * (CAST([ADS_sca_2_OUT].scaler_29 AS FLOAT) - -0.124468142937)) / 0.919715746957) + (-0.5 * 1.96777164032 - (0.5 * (CAST([ADS_sca_2_OUT].scaler_30 AS FLOAT) - -0.0580618587023) * (CAST([ADS_sca_2_OUT].scaler_30 AS FLOAT) - -0.0580618587023)) / 1.13870832743) + (-0.5 * 1.58487850492 - (0.5 * (CAST([ADS_sca_2_OUT].scaler_31 AS FLOAT) - -0.0221430476849) * (CAST([ADS_sca_2_OUT].scaler_31 AS FLOAT) - -0.0221430476849)) / 0.776468998783) + (-0.5 * 1.85630847513 - (0.5 * (CAST([ADS_sca_2_OUT].scaler_32 AS FLOAT) - 0.0437115486596) * (CAST([ADS_sca_2_OUT].scaler_32 AS FLOAT) - 0.0437115486596)) / 1.01860231554) + (-0.5 * 1.70345634244 - (0.5 * (CAST([ADS_sca_2_OUT].scaler_33 AS FLOAT) - 0.116345398691) * (CAST([ADS_sca_2_OUT].scaler_33 AS FLOAT) - 0.116345398691)) / 0.87422218099) + (-0.5 * 1.85966808714 - (0.5 * (CAST([ADS_sca_2_OUT].scaler_34 AS FLOAT) - -0.0186058688905) * (CAST([ADS_sca_2_OUT].scaler_34 AS FLOAT) - -0.0186058688905)) / 1.02203017903) + (-0.5 * 2.12257620377 - (0.5 * (CAST([ADS_sca_2_OUT].scaler_35 AS FLOAT) - 0.16395327302) * (CAST([ADS_sca_2_OUT].scaler_35 AS FLOAT) - 0.16395327302)) / 1.32936201258) + (-0.5 * 2.04703405502 - (0.5 * (CAST([ADS_sca_2_OUT].scaler_36 AS FLOAT) - 0.104948576561) * (CAST([ADS_sca_2_OUT].scaler_36 AS FLOAT) - 0.104948576561)) / 1.23263849355) + (-0.5 * 1.07855398175 - (0.5 * (CAST([ADS_sca_2_OUT].scaler_37 AS FLOAT) - -0.111171985557) * (CAST([ADS_sca_2_OUT].scaler_37 AS FLOAT) - -0.111171985557)) / 0.467983104757) + (-0.5 * 1.84940987436 - (0.5 * (CAST([ADS_sca_2_OUT].scaler_38 AS FLOAT) - 0.10965890191) * (CAST([ADS_sca_2_OUT].scaler_38 AS FLOAT) - 0.10965890191)) / 1.01159956717) + (-0.5 * 1.83329721015 - (0.5 * (CAST([ADS_sca_2_OUT].scaler_39 AS FLOAT) - 0.0106559474167) * (CAST([ADS_sca_2_OUT].scaler_39 AS FLOAT) - 0.0106559474167)) / 0.995430615289) + (-0.5 * 1.998737808 - (0.5 * (CAST([ADS_sca_2_OUT].scaler_40 AS FLOAT) - 0.122819622331) * (CAST([ADS_sca_2_OUT].scaler_40 AS FLOAT) - 0.122819622331)) / 1.17452139545) + (-0.5 * 1.85164999572 - (0.5 * (CAST([ADS_sca_2_OUT].scaler_41 AS FLOAT) - 0.171795911297) * (CAST([ADS_sca_2_OUT].scaler_41 AS FLOAT) - 0.171795911297)) / 1.01386821304) + (-0.5 * 1.98683806813 - (0.5 * (CAST([ADS_sca_2_OUT].scaler_42 AS FLOAT) - -0.0188586727352) * (CAST([ADS_sca_2_OUT].scaler_42 AS FLOAT) - -0.0188586727352)) / 1.16062772584) + (-0.5 * 1.56196814864 - (0.5 * (CAST([ADS_sca_2_OUT].scaler_43 AS FLOAT) - 0.0987593341147) * (CAST([ADS_sca_2_OUT].scaler_43 AS FLOAT) - 0.0987593341147)) / 0.758882048281) + (-0.5 * 2.10743186193 - (0.5 * (CAST([ADS_sca_2_OUT].scaler_44 AS FLOAT) - 0.0574506916926) * (CAST([ADS_sca_2_OUT].scaler_44 AS FLOAT) - 0.0574506916926)) / 1.3093813785) + (-0.5 * 1.75334496514 - (0.5 * (CAST([ADS_sca_2_OUT].scaler_45 AS FLOAT) - 0.0586399388119) * (CAST([ADS_sca_2_OUT].scaler_45 AS FLOAT) - 0.0586399388119)) / 0.918942155695) + (-0.5 * 1.84190166305 - (0.5 * (CAST([ADS_sca_2_OUT].scaler_46 AS FLOAT) - 0.108848084503) * (CAST([ADS_sca_2_OUT].scaler_46 AS FLOAT) - 0.108848084503)) / 1.00403270621) + (-0.5 * 2.09046019363 - (0.5 * (CAST([ADS_sca_2_OUT].scaler_47 AS FLOAT) - 0.135706143889) * (CAST([ADS_sca_2_OUT].scaler_47 AS FLOAT) - 0.135706143889)) / 1.28734650524) + (-0.5 * 1.76660713215 - (0.5 * (CAST([ADS_sca_2_OUT].scaler_48 AS FLOAT) - -0.128925950471) * (CAST([ADS_sca_2_OUT].scaler_48 AS FLOAT) - -0.128925950471)) / 0.931210492584) + (-0.5 * 1.89564515251 - (0.5 * (CAST([ADS_sca_2_OUT].scaler_49 AS FLOAT) - -0.013214664893) * (CAST([ADS_sca_2_OUT].scaler_49 AS FLOAT) - -0.013214664893)) / 1.05946926157) + (-0.5 * 1.92899187354 - (0.5 * (CAST([ADS_sca_2_OUT].scaler_50 AS FLOAT) - 0.200927116134) * (CAST([ADS_sca_2_OUT].scaler_50 AS FLOAT) - 0.200927116134)) / 1.09539475717) + (-0.5 * 2.07928227445 - (0.5 * (CAST([ADS_sca_2_OUT].scaler_51 AS FLOAT) - 0.115607351028) * (CAST([ADS_sca_2_OUT].scaler_51 AS FLOAT) - 0.115607351028)) / 1.27303677555) + (-0.5 * 1.89148459943 - (0.5 * (CAST([ADS_sca_2_OUT].scaler_52 AS FLOAT) - 0.000725214581355) * (CAST([ADS_sca_2_OUT].scaler_52 AS FLOAT) - 0.000725214581355)) / 1.05507044058) + (-0.5 * 1.95820832735 - (0.5 * (CAST([ADS_sca_2_OUT].scaler_53 AS FLOAT) - 0.0154779474644) * (CAST([ADS_sca_2_OUT].scaler_53 AS FLOAT) - 0.0154779474644)) / 1.12787040912) + (-0.5 * 1.72734228344 - (0.5 * (CAST([ADS_sca_2_OUT].scaler_54 AS FLOAT) - 0.0323299446876) * (CAST([ADS_sca_2_OUT].scaler_54 AS FLOAT) - 0.0323299446876)) / 0.895355186534) + (-0.5 * 1.79810331409 - (0.5 * (CAST([ADS_sca_2_OUT].scaler_55 AS FLOAT) - -0.0110487449421) * (CAST([ADS_sca_2_OUT].scaler_55 AS FLOAT) - -0.0110487449421)) / 0.961006840125) + (-0.5 * 2.05676877034 - (0.5 * (CAST([ADS_sca_2_OUT].scaler_56 AS FLOAT) - 0.123415934873) * (CAST([ADS_sca_2_OUT].scaler_56 AS FLOAT) - 0.123415934873)) / 1.24469647365) + (-0.5 * 1.85680835772 - (0.5 * (CAST([ADS_sca_2_OUT].scaler_57 AS FLOAT) - 0.0711171843902) * (CAST([ADS_sca_2_OUT].scaler_57 AS FLOAT) - 0.0711171843902)) / 1.01911162439) + (-0.5 * 1.77547332122 - (0.5 * (CAST([ADS_sca_2_OUT].scaler_58 AS FLOAT) - -0.0400249789523) * (CAST([ADS_sca_2_OUT].scaler_58 AS FLOAT) - -0.0400249789523)) / 0.939503490188) + (-0.5 * 0.310505928529 - (0.5 * (CAST([ADS_sca_2_OUT].scaler_59 AS FLOAT) - -0.694586967165) * (CAST([ADS_sca_2_OUT].scaler_59 AS FLOAT) - -0.694586967165)) / 0.217105658615) + (-0.5 * 1.90665464301 - (0.5 * (CAST([ADS_sca_2_OUT].scaler_60 AS FLOAT) - 0.0298044839051) * (CAST([ADS_sca_2_OUT].scaler_60 AS FLOAT) - 0.0298044839051)) / 1.07119792317) + (-0.5 * 2.11651191259 - (0.5 * (CAST([ADS_sca_2_OUT].scaler_61 AS FLOAT) - -0.0486092900192) * (CAST([ADS_sca_2_OUT].scaler_61 AS FLOAT) - -0.0486092900192)) / 1.32132476898) + (-0.5 * 1.52612539007 - (0.5 * (CAST([ADS_sca_2_OUT].scaler_62 AS FLOAT) - 0.238163116996) * (CAST([ADS_sca_2_OUT].scaler_62 AS FLOAT) - 0.238163116996)) / 0.732163319134) + (-0.5 * 1.77370244499 - (0.5 * (CAST([ADS_sca_2_OUT].scaler_63 AS FLOAT) - -0.109907279762) * (CAST([ADS_sca_2_OUT].scaler_63 AS FLOAT) - -0.109907279762)) / 0.937841218069) + (-0.5 * 1.81548615449 - (0.5 * (CAST([ADS_sca_2_OUT].scaler_64 AS FLOAT) - -0.0867228804729) * (CAST([ADS_sca_2_OUT].scaler_64 AS FLOAT) - -0.0867228804729)) / 0.977857904018) + (-0.5 * 1.54469285869 - (0.5 * (CAST([ADS_sca_2_OUT].scaler_65 AS FLOAT) - -0.113945254187) * (CAST([ADS_sca_2_OUT].scaler_65 AS FLOAT) - -0.113945254187)) / 0.745884730314) + (-0.5 * 1.91510053884 - (0.5 * (CAST([ADS_sca_2_OUT].scaler_66 AS FLOAT) - -0.107145253687) * (CAST([ADS_sca_2_OUT].scaler_66 AS FLOAT) - -0.107145253687)) / 1.08028346299) + (-0.5 * 1.94600627517 - (0.5 * (CAST([ADS_sca_2_OUT].scaler_67 AS FLOAT) - -0.134297822492) * (CAST([ADS_sca_2_OUT].scaler_67 AS FLOAT) - -0.134297822492)) / 1.11419169942) + (-0.5 * 1.78912635103 - (0.5 * (CAST([ADS_sca_2_OUT].scaler_68 AS FLOAT) - -0.11553583132) * (CAST([ADS_sca_2_OUT].scaler_68 AS FLOAT) - -0.11553583132)) / 0.9524185234) + (-0.5 * 1.58211310881 - (0.5 * (CAST([ADS_sca_2_OUT].scaler_69 AS FLOAT) - -0.19784507834) * (CAST([ADS_sca_2_OUT].scaler_69 AS FLOAT) - -0.19784507834)) / 0.774324720691) + (-0.5 * 1.8493672457 - (0.5 * (CAST([ADS_sca_2_OUT].scaler_70 AS FLOAT) - 0.0913545088017) * (CAST([ADS_sca_2_OUT].scaler_70 AS FLOAT) - 0.0913545088017)) / 1.01155644496) + (-0.5 * 1.86254248989 - (0.5 * (CAST([ADS_sca_2_OUT].scaler_71 AS FLOAT) - 0.198380790726) * (CAST([ADS_sca_2_OUT].scaler_71 AS FLOAT) - 0.198380790726)) / 1.02497213154) + (-0.5 * 1.90514736776 - (0.5 * (CAST([ADS_sca_2_OUT].scaler_72 AS FLOAT) - 0.0513274125779) * (CAST([ADS_sca_2_OUT].scaler_72 AS FLOAT) - 0.0513274125779)) / 1.06958454926) + (-0.5 * 1.66963757939 - (0.5 * (CAST([ADS_sca_2_OUT].scaler_73 AS FLOAT) - 0.0698974874023) * (CAST([ADS_sca_2_OUT].scaler_73 AS FLOAT) - 0.0698974874023)) / 0.845151407657) + (-0.5 * 1.95638365973 - (0.5 * (CAST([ADS_sca_2_OUT].scaler_74 AS FLOAT) - -0.0400130810156) * (CAST([ADS_sca_2_OUT].scaler_74 AS FLOAT) - -0.0400130810156)) / 1.12581429693) + (-0.5 * 1.90058976566 - (0.5 * (CAST([ADS_sca_2_OUT].scaler_75 AS FLOAT) - 0.149110362651) * (CAST([ADS_sca_2_OUT].scaler_75 AS FLOAT) - 0.149110362651)) / 1.06472090017) + (-0.5 * 1.82227313053 - (0.5 * (CAST([ADS_sca_2_OUT].scaler_76 AS FLOAT) - -0.0694726250465) * (CAST([ADS_sca_2_OUT].scaler_76 AS FLOAT) - -0.0694726250465)) / 0.98451717478) + (-0.5 * 1.93458618268 - (0.5 * (CAST([ADS_sca_2_OUT].scaler_77 AS FLOAT) - 0.0266188944385) * (CAST([ADS_sca_2_OUT].scaler_77 AS FLOAT) - 0.0266188944385)) / 1.10153990698) + (-0.5 * 1.88001168067 - (0.5 * (CAST([ADS_sca_2_OUT].scaler_78 AS FLOAT) - -0.083949841969) * (CAST([ADS_sca_2_OUT].scaler_78 AS FLOAT) - -0.083949841969)) / 1.04303487666) + (-0.5 * 0.509841015361 - (0.5 * (CAST([ADS_sca_2_OUT].scaler_79 AS FLOAT) - 0.684303782696) * (CAST([ADS_sca_2_OUT].scaler_79 AS FLOAT) - 0.684303782696)) / 0.264997191531) + (-0.5 * 1.87256111624 - (0.5 * (CAST([ADS_sca_2_OUT].scaler_80 AS FLOAT) - -0.0104153959278) * (CAST([ADS_sca_2_OUT].scaler_80 AS FLOAT) - -0.0104153959278)) / 1.03529255627) + (-0.5 * 2.00442776474 - (0.5 * (CAST([ADS_sca_2_OUT].scaler_81 AS FLOAT) - -0.103724535065) * (CAST([ADS_sca_2_OUT].scaler_81 AS FLOAT) - -0.103724535065)) / 1.18122342041) + (-0.5 * 1.64675051389 - (0.5 * (CAST([ADS_sca_2_OUT].scaler_82 AS FLOAT) - -0.0849644817349) * (CAST([ADS_sca_2_OUT].scaler_82 AS FLOAT) - -0.0849644817349)) / 0.826028045603) + (-0.5 * 1.90265928851 - (0.5 * (CAST([ADS_sca_2_OUT].scaler_83 AS FLOAT) - -0.0411023788965) * (CAST([ADS_sca_2_OUT].scaler_83 AS FLOAT) - -0.0411023788965)) / 1.06692664604) + (-0.5 * 1.63196429488 - (0.5 * (CAST([ADS_sca_2_OUT].scaler_84 AS FLOAT) - -0.174908844142) * (CAST([ADS_sca_2_OUT].scaler_84 AS FLOAT) - -0.174908844142)) / 0.813904068796) + (-0.5 * 1.9435056979 - (0.5 * (CAST([ADS_sca_2_OUT].scaler_85 AS FLOAT) - -0.0199774674222) * (CAST([ADS_sca_2_OUT].scaler_85 AS FLOAT) - -0.0199774674222)) / 1.11140905753) + (-0.5 * 1.82109254922 - (0.5 * (CAST([ADS_sca_2_OUT].scaler_86 AS FLOAT) - -0.0196910244104) * (CAST([ADS_sca_2_OUT].scaler_86 AS FLOAT) - -0.0196910244104)) / 0.983355558028) + (-0.5 * 1.65246684565 - (0.5 * (CAST([ADS_sca_2_OUT].scaler_87 AS FLOAT) - 0.0955596442382) * (CAST([ADS_sca_2_OUT].scaler_87 AS FLOAT) - 0.0955596442382)) / 0.830763417546) + (-0.5 * 2.13332488631 - (0.5 * (CAST([ADS_sca_2_OUT].scaler_88 AS FLOAT) - 0.105596727599) * (CAST([ADS_sca_2_OUT].scaler_88 AS FLOAT) - 0.105596727599)) / 1.34372797209) + (-0.5 * 1.83778924625 - (0.5 * (CAST([ADS_sca_2_OUT].scaler_89 AS FLOAT) - -0.0442194842946) * (CAST([ADS_sca_2_OUT].scaler_89 AS FLOAT) - -0.0442194842946)) / 0.999912183696) + (-0.5 * 1.48882271276 - (0.5 * (CAST([ADS_sca_2_OUT].scaler_90 AS FLOAT) - -0.0167930811528) * (CAST([ADS_sca_2_OUT].scaler_90 AS FLOAT) - -0.0167930811528)) / 0.705354790621) + (-0.5 * 1.54376189783 - (0.5 * (CAST([ADS_sca_2_OUT].scaler_91 AS FLOAT) - 0.0627115442776) * (CAST([ADS_sca_2_OUT].scaler_91 AS FLOAT) - 0.0627115442776)) / 0.745190663952) + (-0.5 * 1.8023028755 - (0.5 * (CAST([ADS_sca_2_OUT].scaler_92 AS FLOAT) - 0.194806260785) * (CAST([ADS_sca_2_OUT].scaler_92 AS FLOAT) - 0.194806260785)) / 0.965051133549) + (-0.5 * 1.90739334419 - (0.5 * (CAST([ADS_sca_2_OUT].scaler_93 AS FLOAT) - 0.132090891124) * (CAST([ADS_sca_2_OUT].scaler_93 AS FLOAT) - 0.132090891124)) / 1.07198951068) + (-0.5 * 1.66415759845 - (0.5 * (CAST([ADS_sca_2_OUT].scaler_94 AS FLOAT) - -0.170340308046) * (CAST([ADS_sca_2_OUT].scaler_94 AS FLOAT) - -0.170340308046)) / 0.840532660931) + (-0.5 * 1.76785562983 - (0.5 * (CAST([ADS_sca_2_OUT].scaler_95 AS FLOAT) - 0.0995830899531) * (CAST([ADS_sca_2_OUT].scaler_95 AS FLOAT) - 0.0995830899531)) / 0.932373832789) + (-0.5 * 1.66520523646 - (0.5 * (CAST([ADS_sca_2_OUT].scaler_96 AS FLOAT) - -0.0635682178366) * (CAST([ADS_sca_2_OUT].scaler_96 AS FLOAT) - -0.0635682178366)) / 0.84141369632) + (-0.5 * 1.71932462018 - (0.5 * (CAST([ADS_sca_2_OUT].scaler_97 AS FLOAT) - 0.114411345671) * (CAST([ADS_sca_2_OUT].scaler_97 AS FLOAT) - 0.114411345671)) / 0.888205231421) + (-0.5 * 1.80981779496 - (0.5 * (CAST([ADS_sca_2_OUT].scaler_98 AS FLOAT) - 0.204339531432) * (CAST([ADS_sca_2_OUT].scaler_98 AS FLOAT) - 0.204339531432)) / 0.972330733645) + (-0.5 * 1.96169830789 - (0.5 * (CAST([ADS_sca_2_OUT].scaler_99 AS FLOAT) - 0.0425543586407) * (CAST([ADS_sca_2_OUT].scaler_99 AS FLOAT) - 0.0425543586407)) / 1.13181353161) + (-0.5 * 1.83773299188 - (0.5 * (CAST([ADS_sca_2_OUT].scaler_100 AS FLOAT) - -0.0587586904453) * (CAST([ADS_sca_2_OUT].scaler_100 AS FLOAT) - -0.0587586904453)) / 0.999855935852) + (-0.5 * 1.87263561026 - (0.5 * (CAST([ADS_sca_2_OUT].scaler_101 AS FLOAT) - 0.179635556259) * (CAST([ADS_sca_2_OUT].scaler_101 AS FLOAT) - 0.179635556259)) / 1.03536968224) AS [Score_0], CAST(NULL AS FLOAT) AS [LogProba_1], CAST(NULL AS FLOAT) AS [Proba_1], -0.744440474947 + (-0.5 * 1.70719413298 - (0.5 * (CAST([ADS_sca_2_OUT].scaler_2 AS FLOAT) - 0.165393617055) * (CAST([ADS_sca_2_OUT].scaler_2 AS FLOAT) - 0.165393617055)) / 0.877495954924) + (-0.5 * 1.8606768009 - (0.5 * (CAST([ADS_sca_2_OUT].scaler_3 AS FLOAT) - -0.10103118211) * (CAST([ADS_sca_2_OUT].scaler_3 AS FLOAT) - -0.10103118211)) / 1.02306163507) + (-0.5 * 1.96410990497 - (0.5 * (CAST([ADS_sca_2_OUT].scaler_4 AS FLOAT) - 0.00496822421158) * (CAST([ADS_sca_2_OUT].scaler_4 AS FLOAT) - 0.00496822421158)) / 1.13454630366) + (-0.5 * 1.84238057125 - (0.5 * (CAST([ADS_sca_2_OUT].scaler_5 AS FLOAT) - -0.136367028663) * (CAST([ADS_sca_2_OUT].scaler_5 AS FLOAT) - -0.136367028663)) / 1.00451366086) + (-0.5 * 1.48671382446 - (0.5 * (CAST([ADS_sca_2_OUT].scaler_6 AS FLOAT) - -0.729028388436) * (CAST([ADS_sca_2_OUT].scaler_6 AS FLOAT) - -0.729028388436)) / 0.703868843551) + (-0.5 * 2.01926617165 - (0.5 * (CAST([ADS_sca_2_OUT].scaler_7 AS FLOAT) - 0.165553834606) * (CAST([ADS_sca_2_OUT].scaler_7 AS FLOAT) - 0.165553834606)) / 1.19888157966) + (-0.5 * 1.79349096615 - (0.5 * (CAST([ADS_sca_2_OUT].scaler_8 AS FLOAT) - -0.0600113678569) * (CAST([ADS_sca_2_OUT].scaler_8 AS FLOAT) - -0.0600113678569)) / 0.956584548617) + (-0.5 * 1.5833255026 - (0.5 * (CAST([ADS_sca_2_OUT].scaler_9 AS FLOAT) - -0.152046022413) * (CAST([ADS_sca_2_OUT].scaler_9 AS FLOAT) - -0.152046022413)) / 0.775264076492) + (-0.5 * 1.7109358183 - (0.5 * (CAST([ADS_sca_2_OUT].scaler_10 AS FLOAT) - 0.0953514424367) * (CAST([ADS_sca_2_OUT].scaler_10 AS FLOAT) - 0.0953514424367)) / 0.880785418884) + (-0.5 * 2.01700732493 - (0.5 * (CAST([ADS_sca_2_OUT].scaler_11 AS FLOAT) - 0.0164757593036) * (CAST([ADS_sca_2_OUT].scaler_11 AS FLOAT) - 0.0164757593036)) / 1.19617654621) + (-0.5 * 1.97829609059 - (0.5 * (CAST([ADS_sca_2_OUT].scaler_12 AS FLOAT) - -0.0753804415527) * (CAST([ADS_sca_2_OUT].scaler_12 AS FLOAT) - -0.0753804415527)) / 1.15075589239) + (-0.5 * 2.05807724156 - (0.5 * (CAST([ADS_sca_2_OUT].scaler_13 AS FLOAT) - 0.100579571998) * (CAST([ADS_sca_2_OUT].scaler_13 AS FLOAT) - 0.100579571998)) / 1.24632618915) + (-0.5 * 1.84530344456 - (0.5 * (CAST([ADS_sca_2_OUT].scaler_14 AS FLOAT) - 0.118779445339) * (CAST([ADS_sca_2_OUT].scaler_14 AS FLOAT) - 0.118779445339)) / 1.00745402208) + (-0.5 * 1.56532560032 - (0.5 * (CAST([ADS_sca_2_OUT].scaler_15 AS FLOAT) - 0.0762936222597) * (CAST([ADS_sca_2_OUT].scaler_15 AS FLOAT) - 0.0762936222597)) / 0.761434240124) + (-0.5 * 1.78931816173 - (0.5 * (CAST([ADS_sca_2_OUT].scaler_16 AS FLOAT) - -0.125363143765) * (CAST([ADS_sca_2_OUT].scaler_16 AS FLOAT) - -0.125363143765)) / 0.952601224982) + (-0.5 * 2.07041896661 - (0.5 * (CAST([ADS_sca_2_OUT].scaler_17 AS FLOAT) - -0.21520495572) * (CAST([ADS_sca_2_OUT].scaler_17 AS FLOAT) - -0.21520495572)) / 1.26180331506) + (-0.5 * 1.64931613857 - (0.5 * (CAST([ADS_sca_2_OUT].scaler_18 AS FLOAT) - 0.00651732944219) * (CAST([ADS_sca_2_OUT].scaler_18 AS FLOAT) - 0.00651732944219)) / 0.828150044505) + (-0.5 * 1.93909891128 - (0.5 * (CAST([ADS_sca_2_OUT].scaler_19 AS FLOAT) - 0.107541925849) * (CAST([ADS_sca_2_OUT].scaler_19 AS FLOAT) - 0.107541925849)) / 1.10652209079) + (-0.5 * 1.78470461564 - (0.5 * (CAST([ADS_sca_2_OUT].scaler_20 AS FLOAT) - -0.0815180651693) * (CAST([ADS_sca_2_OUT].scaler_20 AS FLOAT) - -0.0815180651693)) / 0.94821647772) + (-0.5 * 2.00776609447 - (0.5 * (CAST([ADS_sca_2_OUT].scaler_21 AS FLOAT) - -0.0832901478331) * (CAST([ADS_sca_2_OUT].scaler_21 AS FLOAT) - -0.0832901478331)) / 1.18517332304) + (-0.5 * 1.78641487999 - (0.5 * (CAST([ADS_sca_2_OUT].scaler_22 AS FLOAT) - 0.0828451435053) * (CAST([ADS_sca_2_OUT].scaler_22 AS FLOAT) - 0.0828451435053)) / 0.949839566114) + (-0.5 * 1.9322378344 - (0.5 * (CAST([ADS_sca_2_OUT].scaler_23 AS FLOAT) - -0.104353785254) * (CAST([ADS_sca_2_OUT].scaler_23 AS FLOAT) - -0.104353785254)) / 1.09895614261) + (-0.5 * 1.4144426202 - (0.5 * (CAST([ADS_sca_2_OUT].scaler_24 AS FLOAT) - -0.112089119564) * (CAST([ADS_sca_2_OUT].scaler_24 AS FLOAT) - -0.112089119564)) / 0.654794098494) + (-0.5 * 1.7194289467 - (0.5 * (CAST([ADS_sca_2_OUT].scaler_25 AS FLOAT) - -0.0951938712274) * (CAST([ADS_sca_2_OUT].scaler_25 AS FLOAT) - -0.0951938712274)) / 0.888297899613) + (-0.5 * 1.74241562729 - (0.5 * (CAST([ADS_sca_2_OUT].scaler_26 AS FLOAT) - -0.212228741055) * (CAST([ADS_sca_2_OUT].scaler_26 AS FLOAT) - -0.212228741055)) / 0.908953411023) + (-0.5 * 1.70081274756 - (0.5 * (CAST([ADS_sca_2_OUT].scaler_27 AS FLOAT) - -0.102614693136) * (CAST([ADS_sca_2_OUT].scaler_27 AS FLOAT) - -0.102614693136)) / 0.871914143817) + (-0.5 * 1.90801780969 - (0.5 * (CAST([ADS_sca_2_OUT].scaler_28 AS FLOAT) - -0.0145619625419) * (CAST([ADS_sca_2_OUT].scaler_28 AS FLOAT) - -0.0145619625419)) / 1.07265914019) + (-0.5 * 1.88922264915 - (0.5 * (CAST([ADS_sca_2_OUT].scaler_29 AS FLOAT) - 0.13757005272) * (CAST([ADS_sca_2_OUT].scaler_29 AS FLOAT) - 0.13757005272)) / 1.05268662076) + (-0.5 * 1.66214952419 - (0.5 * (CAST([ADS_sca_2_OUT].scaler_30 AS FLOAT) - 0.0641736333026) * (CAST([ADS_sca_2_OUT].scaler_30 AS FLOAT) - 0.0641736333026)) / 0.838846502465) + (-0.5 * 2.05775102583 - (0.5 * (CAST([ADS_sca_2_OUT].scaler_31 AS FLOAT) - 0.0244738948096) * (CAST([ADS_sca_2_OUT].scaler_31 AS FLOAT) - 0.0244738948096)) / 1.24591968425) + (-0.5 * 1.81255269342 - (0.5 * (CAST([ADS_sca_2_OUT].scaler_32 AS FLOAT) - -0.048312764308) * (CAST([ADS_sca_2_OUT].scaler_32 AS FLOAT) - -0.048312764308)) / 0.974993599145) + (-0.5 * 1.94000079567 - (0.5 * (CAST([ADS_sca_2_OUT].scaler_33 AS FLOAT) - -0.128592282764) * (CAST([ADS_sca_2_OUT].scaler_33 AS FLOAT) - -0.128592282764)) / 1.10752049594) + (-0.5 * 1.81240062522 - (0.5 * (CAST([ADS_sca_2_OUT].scaler_34 AS FLOAT) - 0.0205643814053) * (CAST([ADS_sca_2_OUT].scaler_34 AS FLOAT) - 0.0205643814053)) / 0.974845344895) + (-0.5 * 1.28174104176 - (0.5 * (CAST([ADS_sca_2_OUT].scaler_35 AS FLOAT) - -0.181211512285) * (CAST([ADS_sca_2_OUT].scaler_35 AS FLOAT) - -0.181211512285)) / 0.573420471252) + (-0.5 * 1.50553875254 - (0.5 * (CAST([ADS_sca_2_OUT].scaler_36 AS FLOAT) - -0.115995795146) * (CAST([ADS_sca_2_OUT].scaler_36 AS FLOAT) - -0.115995795146)) / 0.717244627995) + (-0.5 * 2.28208867419 - (0.5 * (CAST([ADS_sca_2_OUT].scaler_37 AS FLOAT) - 0.122874299826) * (CAST([ADS_sca_2_OUT].scaler_37 AS FLOAT) - 0.122874299826)) / 1.55926040235) + (-0.5 * 1.79621997795 - (0.5 * (CAST([ADS_sca_2_OUT].scaler_38 AS FLOAT) - -0.121201944216) * (CAST([ADS_sca_2_OUT].scaler_38 AS FLOAT) - -0.121201944216)) / 0.959198644469) + (-0.5 * 1.8426518096 - (0.5 * (CAST([ADS_sca_2_OUT].scaler_39 AS FLOAT) - -0.0117776260922) * (CAST([ADS_sca_2_OUT].scaler_39 AS FLOAT) - -0.0117776260922)) / 1.00478616044) + (-0.5 * 1.57911656334 - (0.5 * (CAST([ADS_sca_2_OUT].scaler_40 AS FLOAT) - -0.135748003629) * (CAST([ADS_sca_2_OUT].scaler_40 AS FLOAT) - -0.135748003629)) / 0.772007894426) + (-0.5 * 1.7501350138 - (0.5 * (CAST([ADS_sca_2_OUT].scaler_41 AS FLOAT) - -0.189879691433) * (CAST([ADS_sca_2_OUT].scaler_41 AS FLOAT) - -0.189879691433)) / 0.915997125317) + (-0.5 * 1.64141992463 - (0.5 * (CAST([ADS_sca_2_OUT].scaler_42 AS FLOAT) - 0.020843796181) * (CAST([ADS_sca_2_OUT].scaler_42 AS FLOAT) - 0.020843796181)) / 0.821636544424) + (-0.5 * 2.05605139938 - (0.5 * (CAST([ADS_sca_2_OUT].scaler_43 AS FLOAT) - -0.109155053495) * (CAST([ADS_sca_2_OUT].scaler_43 AS FLOAT) - -0.109155053495)) / 1.24380388475) + (-0.5 * 1.40766650675 - (0.5 * (CAST([ADS_sca_2_OUT].scaler_44 AS FLOAT) - -0.0634981329234) * (CAST([ADS_sca_2_OUT].scaler_44 AS FLOAT) - -0.0634981329234)) / 0.650372138169) + (-0.5 * 1.91630830206 - (0.5 * (CAST([ADS_sca_2_OUT].scaler_45 AS FLOAT) - -0.06481256395) * (CAST([ADS_sca_2_OUT].scaler_45 AS FLOAT) - -0.06481256395)) / 1.08158897784) + (-0.5 * 1.80532729061 - (0.5 * (CAST([ADS_sca_2_OUT].scaler_46 AS FLOAT) - -0.120305777609) * (CAST([ADS_sca_2_OUT].scaler_46 AS FLOAT) - -0.120305777609)) / 0.967974266936) + (-0.5 * 1.39089362062 - (0.5 * (CAST([ADS_sca_2_OUT].scaler_47 AS FLOAT) - -0.149991001141) * (CAST([ADS_sca_2_OUT].scaler_47 AS FLOAT) - -0.149991001141)) / 0.639554495508) + (-0.5 * 1.87454983576 - (0.5 * (CAST([ADS_sca_2_OUT].scaler_48 AS FLOAT) - 0.142497103153) * (CAST([ADS_sca_2_OUT].scaler_48 AS FLOAT) - 0.142497103153)) / 1.03735351143) + (-0.5 * 1.7694531221 - (0.5 * (CAST([ADS_sca_2_OUT].scaler_49 AS FLOAT) - 0.0146056822502) * (CAST([ADS_sca_2_OUT].scaler_49 AS FLOAT) - 0.0146056822502)) / 0.933864483111) + (-0.5 * 1.61551319587 - (0.5 * (CAST([ADS_sca_2_OUT].scaler_50 AS FLOAT) - -0.222077338885) * (CAST([ADS_sca_2_OUT].scaler_50 AS FLOAT) - -0.222077338885)) / 0.800623987845) + (-0.5 * 1.43309736287 - (0.5 * (CAST([ADS_sca_2_OUT].scaler_51 AS FLOAT) - -0.127776545873) * (CAST([ADS_sca_2_OUT].scaler_51 AS FLOAT) - -0.127776545873)) / 0.667123759676) + (-0.5 * 1.7750772454 - (0.5 * (CAST([ADS_sca_2_OUT].scaler_52 AS FLOAT) - -0.000801552958339) * (CAST([ADS_sca_2_OUT].scaler_52 AS FLOAT) - -0.000801552958339)) / 0.939131449259) + (-0.5 * 1.68485654159 - (0.5 * (CAST([ADS_sca_2_OUT].scaler_53 AS FLOAT) - -0.0171072050922) * (CAST([ADS_sca_2_OUT].scaler_53 AS FLOAT) - -0.0171072050922)) / 0.858112109034) + (-0.5 * 1.94514092981 - (0.5 * (CAST([ADS_sca_2_OUT].scaler_54 AS FLOAT) - -0.03573309676) * (CAST([ADS_sca_2_OUT].scaler_54 AS FLOAT) - -0.03573309676)) / 1.11322795585) + (-0.5 * 1.87979956208 - (0.5 * (CAST([ADS_sca_2_OUT].scaler_55 AS FLOAT) - 0.0122117707255) * (CAST([ADS_sca_2_OUT].scaler_55 AS FLOAT) - 0.0122117707255)) / 1.04281365304) + (-0.5 * 1.4727440303 - (0.5 * (CAST([ADS_sca_2_OUT].scaler_56 AS FLOAT) - -0.136407085912) * (CAST([ADS_sca_2_OUT].scaler_56 AS FLOAT) - -0.136407085912)) / 0.694104303798) + (-0.5 * 1.80443209214 - (0.5 * (CAST([ADS_sca_2_OUT].scaler_57 AS FLOAT) - -0.0786032037997) * (CAST([ADS_sca_2_OUT].scaler_57 AS FLOAT) - -0.0786032037997)) / 0.967108125596) + (-0.5 * 1.89910096521 - (0.5 * (CAST([ADS_sca_2_OUT].scaler_58 AS FLOAT) - 0.0442381346315) * (CAST([ADS_sca_2_OUT].scaler_58 AS FLOAT) - 0.0442381346315)) / 1.06313692262) + (-0.5 * 1.54041866968 - (0.5 * (CAST([ADS_sca_2_OUT].scaler_59 AS FLOAT) - 0.767701384761) * (CAST([ADS_sca_2_OUT].scaler_59 AS FLOAT) - 0.767701384761)) / 0.742703481469) + (-0.5 * 1.75366966591 - (0.5 * (CAST([ADS_sca_2_OUT].scaler_60 AS FLOAT) - -0.0329417980004) * (CAST([ADS_sca_2_OUT].scaler_60 AS FLOAT) - -0.0329417980004)) / 0.919240585365) + (-0.5 * 1.3905792946 - (0.5 * (CAST([ADS_sca_2_OUT].scaler_61 AS FLOAT) - 0.0537260573896) * (CAST([ADS_sca_2_OUT].scaler_61 AS FLOAT) - 0.0537260573896)) / 0.639353498481) + (-0.5 * 1.98977899898 - (0.5 * (CAST([ADS_sca_2_OUT].scaler_62 AS FLOAT) - -0.263232918785) * (CAST([ADS_sca_2_OUT].scaler_62 AS FLOAT) - -0.263232918785)) / 1.16404607583) + (-0.5 * 1.87766889875 - (0.5 * (CAST([ADS_sca_2_OUT].scaler_63 AS FLOAT) - 0.121476467106) * (CAST([ADS_sca_2_OUT].scaler_63 AS FLOAT) - 0.121476467106)) / 1.0405941336) + (-0.5 * 1.84482565659 - (0.5 * (CAST([ADS_sca_2_OUT].scaler_64 AS FLOAT) - 0.0958516047332) * (CAST([ADS_sca_2_OUT].scaler_64 AS FLOAT) - 0.0958516047332)) / 1.00697278764) + (-0.5 * 2.06154310894 - (0.5 * (CAST([ADS_sca_2_OUT].scaler_65 AS FLOAT) - 0.12593949147) * (CAST([ADS_sca_2_OUT].scaler_65 AS FLOAT) - 0.12593949147)) / 1.25065328467) + (-0.5 * 1.71520414964 - (0.5 * (CAST([ADS_sca_2_OUT].scaler_66 AS FLOAT) - 0.118423701443) * (CAST([ADS_sca_2_OUT].scaler_66 AS FLOAT) - 0.118423701443)) / 0.884552937681) + (-0.5 * 1.65373896558 - (0.5 * (CAST([ADS_sca_2_OUT].scaler_67 AS FLOAT) - 0.148434435386) * (CAST([ADS_sca_2_OUT].scaler_67 AS FLOAT) - 0.148434435386)) / 0.831820920735) + (-0.5 * 1.85917834241 - (0.5 * (CAST([ADS_sca_2_OUT].scaler_68 AS FLOAT) - 0.127697497775) * (CAST([ADS_sca_2_OUT].scaler_68 AS FLOAT) - 0.127697497775)) / 1.02152976769) + (-0.5 * 1.98487421952 - (0.5 * (CAST([ADS_sca_2_OUT].scaler_69 AS FLOAT) - 0.21867087606) * (CAST([ADS_sca_2_OUT].scaler_69 AS FLOAT) - 0.21867087606)) / 1.15835066533) + (-0.5 * 1.80515536008 - (0.5 * (CAST([ADS_sca_2_OUT].scaler_70 AS FLOAT) - -0.100970772886) * (CAST([ADS_sca_2_OUT].scaler_70 AS FLOAT) - -0.100970772886)) / 0.967807856921) + (-0.5 * 1.7109812188 - (0.5 * (CAST([ADS_sca_2_OUT].scaler_71 AS FLOAT) - -0.219262979223) * (CAST([ADS_sca_2_OUT].scaler_71 AS FLOAT) - -0.219262979223)) / 0.880825407891) + (-0.5 * 1.75118631145 - (0.5 * (CAST([ADS_sca_2_OUT].scaler_72 AS FLOAT) - -0.0567302981124) * (CAST([ADS_sca_2_OUT].scaler_72 AS FLOAT) - -0.0567302981124)) / 0.916960617314) + (-0.5 * 1.98610753155 - (0.5 * (CAST([ADS_sca_2_OUT].scaler_73 AS FLOAT) - -0.0772551176551) * (CAST([ADS_sca_2_OUT].scaler_73 AS FLOAT) - -0.0772551176551)) / 1.15978015446) + (-0.5 * 1.68381249537 - (0.5 * (CAST([ADS_sca_2_OUT].scaler_74 AS FLOAT) - 0.0442249842804) * (CAST([ADS_sca_2_OUT].scaler_74 AS FLOAT) - 0.0442249842804)) / 0.857216667854) + (-0.5 * 1.70632198752 - (0.5 * (CAST([ADS_sca_2_OUT].scaler_75 AS FLOAT) - -0.164806190299) * (CAST([ADS_sca_2_OUT].scaler_75 AS FLOAT) - -0.164806190299)) / 0.876730984439) + (-0.5 * 1.84374192226 - (0.5 * (CAST([ADS_sca_2_OUT].scaler_76 AS FLOAT) - 0.0767855329461) * (CAST([ADS_sca_2_OUT].scaler_76 AS FLOAT) - 0.0767855329461)) / 1.00588208779) + (-0.5 * 1.7169774915 - (0.5 * (CAST([ADS_sca_2_OUT].scaler_77 AS FLOAT) - -0.0294208833268) * (CAST([ADS_sca_2_OUT].scaler_77 AS FLOAT) - -0.0294208833268)) / 0.886122944103) + (-0.5 * 1.7717760951 - (0.5 * (CAST([ADS_sca_2_OUT].scaler_78 AS FLOAT) - 0.0927866674394) * (CAST([ADS_sca_2_OUT].scaler_78 AS FLOAT) - 0.0927866674394)) / 0.9360363467) + (-0.5 * 1.5132049872 - (0.5 * (CAST([ADS_sca_2_OUT].scaler_79 AS FLOAT) - -0.756335759822) * (CAST([ADS_sca_2_OUT].scaler_79 AS FLOAT) - -0.756335759822)) / 0.722764324236) + (-0.5 * 1.79782562908 - (0.5 * (CAST([ADS_sca_2_OUT].scaler_80 AS FLOAT) - 0.0115117533939) * (CAST([ADS_sca_2_OUT].scaler_80 AS FLOAT) - 0.0115117533939)) / 0.960740019981) + (-0.5 * 1.58255395464 - (0.5 * (CAST([ADS_sca_2_OUT].scaler_81 AS FLOAT) - 0.114642907177) * (CAST([ADS_sca_2_OUT].scaler_81 AS FLOAT) - 0.114642907177)) / 0.774666153765) + (-0.5 * 1.99955977181 - (0.5 * (CAST([ADS_sca_2_OUT].scaler_82 AS FLOAT) - 0.0939081113912) * (CAST([ADS_sca_2_OUT].scaler_82 AS FLOAT) - 0.0939081113912)) / 1.17548720641) + (-0.5 * 1.75677266613 - (0.5 * (CAST([ADS_sca_2_OUT].scaler_83 AS FLOAT) - 0.0454289450961) * (CAST([ADS_sca_2_OUT].scaler_83 AS FLOAT) - 0.0454289450961)) / 0.922097419189) + (-0.5 * 1.9640680421 - (0.5 * (CAST([ADS_sca_2_OUT].scaler_84 AS FLOAT) - 0.19332030142) * (CAST([ADS_sca_2_OUT].scaler_84 AS FLOAT) - 0.19332030142)) / 1.13449880929) + (-0.5 * 1.7054137015 - (0.5 * (CAST([ADS_sca_2_OUT].scaler_85 AS FLOAT) - 0.0220803587298) * (CAST([ADS_sca_2_OUT].scaler_85 AS FLOAT) - 0.0220803587298)) / 0.875935023476) + (-0.5 * 1.85522008151 - (0.5 * (CAST([ADS_sca_2_OUT].scaler_86 AS FLOAT) - 0.021763763822) * (CAST([ADS_sca_2_OUT].scaler_86 AS FLOAT) - 0.021763763822)) / 1.01749427838) + (-0.5 * 1.99128702444 - (0.5 * (CAST([ADS_sca_2_OUT].scaler_87 AS FLOAT) - -0.105618554158) * (CAST([ADS_sca_2_OUT].scaler_87 AS FLOAT) - -0.105618554158)) / 1.16580281122) + (-0.5 * 1.31724347385 - (0.5 * (CAST([ADS_sca_2_OUT].scaler_88 AS FLOAT) - -0.116712172609) * (CAST([ADS_sca_2_OUT].scaler_88 AS FLOAT) - -0.116712172609)) / 0.59414398348) + (-0.5 * 1.8334143107 - (0.5 * (CAST([ADS_sca_2_OUT].scaler_89 AS FLOAT) - 0.048874166852) * (CAST([ADS_sca_2_OUT].scaler_89 AS FLOAT) - 0.048874166852)) / 0.995547187592) + (-0.5 * 2.11929277246 - (0.5 * (CAST([ADS_sca_2_OUT].scaler_90 AS FLOAT) - 0.0185607739058) * (CAST([ADS_sca_2_OUT].scaler_90 AS FLOAT) - 0.0185607739058)) / 1.32500430177) + (-0.5 * 2.07884513669 - (0.5 * (CAST([ADS_sca_2_OUT].scaler_91 AS FLOAT) - -0.0693127594648) * (CAST([ADS_sca_2_OUT].scaler_91 AS FLOAT) - -0.0693127594648)) / 1.27248040472) + (-0.5 * 1.78692497612 - (0.5 * (CAST([ADS_sca_2_OUT].scaler_92 AS FLOAT) - -0.215312182973) * (CAST([ADS_sca_2_OUT].scaler_92 AS FLOAT) - -0.215312182973)) / 0.950324199201) + (-0.5 * 1.70985437657 - (0.5 * (CAST([ADS_sca_2_OUT].scaler_93 AS FLOAT) - -0.145995195453) * (CAST([ADS_sca_2_OUT].scaler_93 AS FLOAT) - -0.145995195453)) / 0.879833415638) + (-0.5 * 1.94109890285 - (0.5 * (CAST([ADS_sca_2_OUT].scaler_94 AS FLOAT) - 0.188270866787) * (CAST([ADS_sca_2_OUT].scaler_94 AS FLOAT) - 0.188270866787)) / 1.10873734014) + (-0.5 * 1.8882560913 - (0.5 * (CAST([ADS_sca_2_OUT].scaler_95 AS FLOAT) - -0.110065520474) * (CAST([ADS_sca_2_OUT].scaler_95 AS FLOAT) - -0.110065520474)) / 1.05166962981) + (-0.5 * 1.9913505828 - (0.5 * (CAST([ADS_sca_2_OUT].scaler_96 AS FLOAT) - 0.0702596091879) * (CAST([ADS_sca_2_OUT].scaler_96 AS FLOAT) - 0.0702596091879)) / 1.16587691008) + (-0.5 * 1.92689843817 - (0.5 * (CAST([ADS_sca_2_OUT].scaler_97 AS FLOAT) - -0.126454645216) * (CAST([ADS_sca_2_OUT].scaler_97 AS FLOAT) - -0.126454645216)) / 1.09310401764) + (-0.5 * 1.76898154966 - (0.5 * (CAST([ADS_sca_2_OUT].scaler_98 AS FLOAT) - -0.225848955793) * (CAST([ADS_sca_2_OUT].scaler_98 AS FLOAT) - -0.225848955793)) / 0.93342420218) + (-0.5 * 1.67547306581 - (0.5 * (CAST([ADS_sca_2_OUT].scaler_99 AS FLOAT) - -0.0470337648134) * (CAST([ADS_sca_2_OUT].scaler_99 AS FLOAT) - -0.0470337648134)) / 0.85009769518) + (-0.5 * 1.82997141708 - (0.5 * (CAST([ADS_sca_2_OUT].scaler_100 AS FLOAT) - 0.0649438157554) * (CAST([ADS_sca_2_OUT].scaler_100 AS FLOAT) - 0.0649438157554)) / 0.99212551813) + (-0.5 * 1.71663735136 - (0.5 * (CAST([ADS_sca_2_OUT].scaler_101 AS FLOAT) - -0.198544562181) * (CAST([ADS_sca_2_OUT].scaler_101 AS FLOAT) - -0.198544562181)) / 0.885821589374) AS [Score_1] 
FROM [ADS_sca_2_OUT]), 
orig_cte AS 
(SELECT [RawScores].[KEY] AS [KEY], [RawScores].[Score_0] AS [Score_0], [RawScores].[Score_1] AS [Score_1], [RawScores].[Proba_0] AS [Proba_0], [RawScores].[Proba_1] AS [Proba_1], [RawScores].[LogProba_0] AS [LogProba_0], [RawScores].[LogProba_1] AS [LogProba_1], CAST(NULL AS INTEGER) AS [Decision], CAST(NULL AS FLOAT) AS [DecisionProba] 
FROM [RawScores]), 
score_class_union AS 
(SELECT scu.[KEY_u] AS [KEY_u], scu.class AS class, scu.[LogProba] AS [LogProba], scu.[Proba] AS [Proba], scu.[Score] AS [Score] 
FROM (SELECT orig_cte.[KEY] AS [KEY_u], 0 AS class, orig_cte.[LogProba_0] AS [LogProba], orig_cte.[Proba_0] AS [Proba], orig_cte.[Score_0] AS [Score] 
FROM orig_cte UNION ALL SELECT orig_cte.[KEY] AS [KEY_u], 1 AS class, orig_cte.[LogProba_1] AS [LogProba], orig_cte.[Proba_1] AS [Proba], orig_cte.[Score_1] AS [Score] 
FROM orig_cte) AS scu), 
score_max AS 
(SELECT orig_cte.[KEY] AS [KEY], orig_cte.[Score_0] AS [Score_0], orig_cte.[Score_1] AS [Score_1], orig_cte.[Proba_0] AS [Proba_0], orig_cte.[Proba_1] AS [Proba_1], orig_cte.[LogProba_0] AS [LogProba_0], orig_cte.[LogProba_1] AS [LogProba_1], orig_cte.[Decision] AS [Decision], orig_cte.[DecisionProba] AS [DecisionProba], max_select.[KEY_m] AS [KEY_m], max_select.[max_Score] AS [max_Score] 
FROM orig_cte LEFT OUTER JOIN (SELECT score_class_union.[KEY_u] AS [KEY_m], max(score_class_union.[Score]) AS [max_Score] 
FROM score_class_union GROUP BY score_class_union.[KEY_u]) AS max_select ON orig_cte.[KEY] = max_select.[KEY_m]), 
score_soft_max_deltas AS 
(SELECT score_max.[KEY] AS [KEY], score_max.[Score_0] AS [Score_0], score_max.[Score_1] AS [Score_1], score_max.[Proba_0] AS [Proba_0], score_max.[Proba_1] AS [Proba_1], score_max.[LogProba_0] AS [LogProba_0], score_max.[LogProba_1] AS [LogProba_1], score_max.[Decision] AS [Decision], score_max.[DecisionProba] AS [DecisionProba], score_max.[KEY_m] AS [KEY_m], score_max.[max_Score] AS [max_Score], exp(score_max.[Score_0] - score_max.[max_Score]) AS [exp_delta_Score_0], exp(score_max.[Score_1] - score_max.[max_Score]) AS [exp_delta_Score_1] 
FROM score_max), 
score_class_union_soft AS 
(SELECT soft_scu.[KEY] AS [KEY], soft_scu.class AS class, soft_scu.[exp_delta_Score] AS [exp_delta_Score] 
FROM (SELECT score_soft_max_deltas.[KEY] AS [KEY], 0 AS class, score_soft_max_deltas.[exp_delta_Score_0] AS [exp_delta_Score] 
FROM score_soft_max_deltas UNION ALL SELECT score_soft_max_deltas.[KEY] AS [KEY], 1 AS class, score_soft_max_deltas.[exp_delta_Score_1] AS [exp_delta_Score] 
FROM score_soft_max_deltas) AS soft_scu), 
score_soft_max AS 
(SELECT score_soft_max_deltas.[KEY] AS [KEY], score_soft_max_deltas.[Score_0] AS [Score_0], score_soft_max_deltas.[Score_1] AS [Score_1], score_soft_max_deltas.[Proba_0] AS [Proba_0], score_soft_max_deltas.[Proba_1] AS [Proba_1], score_soft_max_deltas.[LogProba_0] AS [LogProba_0], score_soft_max_deltas.[LogProba_1] AS [LogProba_1], score_soft_max_deltas.[Decision] AS [Decision], score_soft_max_deltas.[DecisionProba] AS [DecisionProba], score_soft_max_deltas.[KEY_m] AS [KEY_m], score_soft_max_deltas.[max_Score] AS [max_Score], score_soft_max_deltas.[exp_delta_Score_0] AS [exp_delta_Score_0], score_soft_max_deltas.[exp_delta_Score_1] AS [exp_delta_Score_1], sum_exp_t.[KEY_sum] AS [KEY_sum], sum_exp_t.[sum_ExpDeltaScore] AS [sum_ExpDeltaScore] 
FROM score_soft_max_deltas LEFT OUTER JOIN (SELECT score_class_union_soft.[KEY] AS [KEY_sum], sum(score_class_union_soft.[exp_delta_Score]) AS [sum_ExpDeltaScore] 
FROM score_class_union_soft GROUP BY score_class_union_soft.[KEY]) AS sum_exp_t ON score_soft_max_deltas.[KEY] = sum_exp_t.[KEY_sum]), 
union_with_max AS 
(SELECT score_class_union.[KEY_u] AS [KEY_u], score_class_union.class AS class, score_class_union.[LogProba] AS [LogProba], score_class_union.[Proba] AS [Proba], score_class_union.[Score] AS [Score], score_soft_max.[KEY] AS [KEY], score_soft_max.[Score_0] AS [Score_0], score_soft_max.[Score_1] AS [Score_1], score_soft_max.[Proba_0] AS [Proba_0], score_soft_max.[Proba_1] AS [Proba_1], score_soft_max.[LogProba_0] AS [LogProba_0], score_soft_max.[LogProba_1] AS [LogProba_1], score_soft_max.[Decision] AS [Decision], score_soft_max.[DecisionProba] AS [DecisionProba], score_soft_max.[KEY_m] AS [KEY_m], score_soft_max.[max_Score] AS [max_Score], score_soft_max.[exp_delta_Score_0] AS [exp_delta_Score_0], score_soft_max.[exp_delta_Score_1] AS [exp_delta_Score_1], score_soft_max.[KEY_sum] AS [KEY_sum], score_soft_max.[sum_ExpDeltaScore] AS [sum_ExpDeltaScore] 
FROM score_class_union LEFT OUTER JOIN score_soft_max ON score_class_union.[KEY_u] = score_soft_max.[KEY]), 
arg_max_cte AS 
(SELECT score_soft_max.[KEY] AS [KEY], score_soft_max.[Score_0] AS [Score_0], score_soft_max.[Score_1] AS [Score_1], score_soft_max.[Proba_0] AS [Proba_0], score_soft_max.[Proba_1] AS [Proba_1], score_soft_max.[LogProba_0] AS [LogProba_0], score_soft_max.[LogProba_1] AS [LogProba_1], score_soft_max.[Decision] AS [Decision], score_soft_max.[DecisionProba] AS [DecisionProba], score_soft_max.[KEY_m] AS [KEY_m], score_soft_max.[max_Score] AS [max_Score], score_soft_max.[exp_delta_Score_0] AS [exp_delta_Score_0], score_soft_max.[exp_delta_Score_1] AS [exp_delta_Score_1], score_soft_max.[KEY_sum] AS [KEY_sum], score_soft_max.[sum_ExpDeltaScore] AS [sum_ExpDeltaScore], [arg_max_t_Score].[KEY_Score] AS [KEY_Score], [arg_max_t_Score].[arg_max_Score] AS [arg_max_Score], soft_max_comp.[KEY_softmax] AS [KEY_softmax], soft_max_comp.[SoftProba_0] AS [SoftProba_0], soft_max_comp.[SoftProba_1] AS [SoftProba_1] 
FROM score_soft_max LEFT OUTER JOIN (SELECT union_with_max.[KEY] AS [KEY_Score], min(union_with_max.class) AS [arg_max_Score] 
FROM union_with_max 
WHERE union_with_max.[max_Score] <= union_with_max.[Score] GROUP BY union_with_max.[KEY]) AS [arg_max_t_Score] ON score_soft_max.[KEY] = [arg_max_t_Score].[KEY_Score] LEFT OUTER JOIN (SELECT score_soft_max.[KEY] AS [KEY_softmax], score_soft_max.[exp_delta_Score_0] / score_soft_max.[sum_ExpDeltaScore] AS [SoftProba_0], score_soft_max.[exp_delta_Score_1] / score_soft_max.[sum_ExpDeltaScore] AS [SoftProba_1] 
FROM score_soft_max) AS soft_max_comp ON soft_max_comp.[KEY_softmax] = [arg_max_t_Score].[KEY_Score])
 SELECT arg_max_cte.[KEY] AS [KEY], CAST(NULL AS FLOAT) AS [Score_0], CAST(NULL AS FLOAT) AS [Score_1], arg_max_cte.[SoftProba_0] AS [Proba_0], arg_max_cte.[SoftProba_1] AS [Proba_1], CASE WHEN (arg_max_cte.[SoftProba_0] IS NULL OR arg_max_cte.[SoftProba_0] > 0.0) THEN log(arg_max_cte.[SoftProba_0]) ELSE -1.79769313486231e+308 END AS [LogProba_0], CASE WHEN (arg_max_cte.[SoftProba_1] IS NULL OR arg_max_cte.[SoftProba_1] > 0.0) THEN log(arg_max_cte.[SoftProba_1]) ELSE -1.79769313486231e+308 END AS [LogProba_1], arg_max_cte.[arg_max_Score] AS [Decision], CASE WHEN (arg_max_cte.[SoftProba_0] <= arg_max_cte.[SoftProba_1]) THEN arg_max_cte.[SoftProba_1] ELSE arg_max_cte.[SoftProba_0] END AS [DecisionProba] 
FROM arg_max_cte