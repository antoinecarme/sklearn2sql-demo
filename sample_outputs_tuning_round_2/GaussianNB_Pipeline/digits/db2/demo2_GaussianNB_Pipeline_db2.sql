-- This SQL code was generated by sklearn2sql (development version).
-- Copyright 2017

WITH "ADS_imp_1_OUT" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_0" IS NULL) THEN 0.0 ELSE "ADS"."Feature_0" END AS impter_2, CASE WHEN ("ADS"."Feature_1" IS NULL) THEN 0.295059151009 ELSE "ADS"."Feature_1" END AS impter_3, CASE WHEN ("ADS"."Feature_2" IS NULL) THEN 5.10438413361 ELSE "ADS"."Feature_2" END AS impter_4, CASE WHEN ("ADS"."Feature_3" IS NULL) THEN 11.791927627 ELSE "ADS"."Feature_3" END AS impter_5, CASE WHEN ("ADS"."Feature_4" IS NULL) THEN 11.8482950592 ELSE "ADS"."Feature_4" END AS impter_6, CASE WHEN ("ADS"."Feature_5" IS NULL) THEN 5.82324286708 ELSE "ADS"."Feature_5" END AS impter_7, CASE WHEN ("ADS"."Feature_6" IS NULL) THEN 1.39457202505 ELSE "ADS"."Feature_6" END AS impter_8, CASE WHEN ("ADS"."Feature_7" IS NULL) THEN 0.134307585247 ELSE "ADS"."Feature_7" END AS impter_9, CASE WHEN ("ADS"."Feature_8" IS NULL) THEN 0.00556715379262 ELSE "ADS"."Feature_8" END AS impter_10, CASE WHEN ("ADS"."Feature_9" IS NULL) THEN 1.97703549061 ELSE "ADS"."Feature_9" END AS impter_11, CASE WHEN ("ADS"."Feature_10" IS NULL) THEN 10.3625608907 ELSE "ADS"."Feature_10" END AS impter_12, CASE WHEN ("ADS"."Feature_11" IS NULL) THEN 12.0306193459 ELSE "ADS"."Feature_11" END AS impter_13, CASE WHEN ("ADS"."Feature_12" IS NULL) THEN 10.2713987474 ELSE "ADS"."Feature_12" END AS impter_14, CASE WHEN ("ADS"."Feature_13" IS NULL) THEN 8.12178148921 ELSE "ADS"."Feature_13" END AS impter_15, CASE WHEN ("ADS"."Feature_14" IS NULL) THEN 1.89213639527 ELSE "ADS"."Feature_14" END AS impter_16, CASE WHEN ("ADS"."Feature_15" IS NULL) THEN 0.117606123869 ELSE "ADS"."Feature_15" END AS impter_17, CASE WHEN ("ADS"."Feature_16" IS NULL) THEN 0.00208768267223 ELSE "ADS"."Feature_16" END AS impter_18, CASE WHEN ("ADS"."Feature_17" IS NULL) THEN 2.54279749478 ELSE "ADS"."Feature_17" END AS impter_19, CASE WHEN ("ADS"."Feature_18" IS NULL) THEN 9.93528183716 ELSE "ADS"."Feature_18" END AS impter_20, CASE WHEN ("ADS"."Feature_19" IS NULL) THEN 7.09951287404 ELSE "ADS"."Feature_19" END AS impter_21, CASE WHEN ("ADS"."Feature_20" IS NULL) THEN 7.1329157968 ELSE "ADS"."Feature_20" END AS impter_22, CASE WHEN ("ADS"."Feature_21" IS NULL) THEN 7.81419624217 ELSE "ADS"."Feature_21" END AS impter_23, CASE WHEN ("ADS"."Feature_22" IS NULL) THEN 1.84342379958 ELSE "ADS"."Feature_22" END AS impter_24, CASE WHEN ("ADS"."Feature_23" IS NULL) THEN 0.0577592205985 ELSE "ADS"."Feature_23" END AS impter_25, CASE WHEN ("ADS"."Feature_24" IS NULL) THEN 0.000695894224078 ELSE "ADS"."Feature_24" END AS impter_26, CASE WHEN ("ADS"."Feature_25" IS NULL) THEN 2.48086290884 ELSE "ADS"."Feature_25" END AS impter_27, CASE WHEN ("ADS"."Feature_26" IS NULL) THEN 9.14335421016 ELSE "ADS"."Feature_26" END AS impter_28, CASE WHEN ("ADS"."Feature_27" IS NULL) THEN 8.96033402923 ELSE "ADS"."Feature_27" END AS impter_29, CASE WHEN ("ADS"."Feature_28" IS NULL) THEN 10.0368823939 ELSE "ADS"."Feature_28" END AS impter_30, CASE WHEN ("ADS"."Feature_29" IS NULL) THEN 7.59498956159 ELSE "ADS"."Feature_29" END AS impter_31, CASE WHEN ("ADS"."Feature_30" IS NULL) THEN 2.33750869868 ELSE "ADS"."Feature_30" END AS impter_32, CASE WHEN ("ADS"."Feature_31" IS NULL) THEN 0.00278357689631 ELSE "ADS"."Feature_31" END AS impter_33, CASE WHEN ("ADS"."Feature_32" IS NULL) THEN 0.0 ELSE "ADS"."Feature_32" END AS impter_34, CASE WHEN ("ADS"."Feature_33" IS NULL) THEN 2.33194154489 ELSE "ADS"."Feature_33" END AS impter_35, CASE WHEN ("ADS"."Feature_34" IS NULL) THEN 7.60890744607 ELSE "ADS"."Feature_34" END AS impter_36, CASE WHEN ("ADS"."Feature_35" IS NULL) THEN 9.02853166319 ELSE "ADS"."Feature_35" END AS impter_37, CASE WHEN ("ADS"."Feature_36" IS NULL) THEN 10.2700069589 ELSE "ADS"."Feature_36" END AS impter_38, CASE WHEN ("ADS"."Feature_37" IS NULL) THEN 8.80654140571 ELSE "ADS"."Feature_37" END AS impter_39, CASE WHEN ("ADS"."Feature_38" IS NULL) THEN 2.87543493389 ELSE "ADS"."Feature_38" END AS impter_40, CASE WHEN ("ADS"."Feature_39" IS NULL) THEN 0.0 ELSE "ADS"."Feature_39" END AS impter_41, CASE WHEN ("ADS"."Feature_40" IS NULL) THEN 0.0104384133612 ELSE "ADS"."Feature_40" END AS impter_42, CASE WHEN ("ADS"."Feature_41" IS NULL) THEN 1.57550452331 ELSE "ADS"."Feature_41" END AS impter_43, CASE WHEN ("ADS"."Feature_42" IS NULL) THEN 6.85873347251 ELSE "ADS"."Feature_42" END AS impter_44, CASE WHEN ("ADS"."Feature_43" IS NULL) THEN 7.25887265136 ELSE "ADS"."Feature_43" END AS impter_45, CASE WHEN ("ADS"."Feature_44" IS NULL) THEN 7.71050800278 ELSE "ADS"."Feature_44" END AS impter_46, CASE WHEN ("ADS"."Feature_45" IS NULL) THEN 8.28114126653 ELSE "ADS"."Feature_45" END AS impter_47, CASE WHEN ("ADS"."Feature_46" IS NULL) THEN 3.43215031315 ELSE "ADS"."Feature_46" END AS impter_48, CASE WHEN ("ADS"."Feature_47" IS NULL) THEN 0.0313152400835 ELSE "ADS"."Feature_47" END AS impter_49, CASE WHEN ("ADS"."Feature_48" IS NULL) THEN 0.00904662491301 ELSE "ADS"."Feature_48" END AS impter_50, CASE WHEN ("ADS"."Feature_49" IS NULL) THEN 0.708420320111 ELSE "ADS"."Feature_49" END AS impter_51, CASE WHEN ("ADS"."Feature_50" IS NULL) THEN 7.49269311065 ELSE "ADS"."Feature_50" END AS impter_52, CASE WHEN ("ADS"."Feature_51" IS NULL) THEN 9.52957550452 ELSE "ADS"."Feature_51" END AS impter_53, CASE WHEN ("ADS"."Feature_52" IS NULL) THEN 9.54140570633 ELSE "ADS"."Feature_52" END AS impter_54, CASE WHEN ("ADS"."Feature_53" IS NULL) THEN 8.7543493389 ELSE "ADS"."Feature_53" END AS impter_55, CASE WHEN ("ADS"."Feature_54" IS NULL) THEN 3.73973556019 ELSE "ADS"."Feature_54" END AS impter_56, CASE WHEN ("ADS"."Feature_55" IS NULL) THEN 0.219206680585 ELSE "ADS"."Feature_55" END AS impter_57, CASE WHEN ("ADS"."Feature_56" IS NULL) THEN 0.000695894224078 ELSE "ADS"."Feature_56" END AS impter_58, CASE WHEN ("ADS"."Feature_57" IS NULL) THEN 0.263743910926 ELSE "ADS"."Feature_57" END AS impter_59, CASE WHEN ("ADS"."Feature_58" IS NULL) THEN 5.47459986082 ELSE "ADS"."Feature_58" END AS impter_60, CASE WHEN ("ADS"."Feature_59" IS NULL) THEN 12.0974251914 ELSE "ADS"."Feature_59" END AS impter_61, CASE WHEN ("ADS"."Feature_60" IS NULL) THEN 11.8580375783 ELSE "ADS"."Feature_60" END AS impter_62, CASE WHEN ("ADS"."Feature_61" IS NULL) THEN 6.7167710508 ELSE "ADS"."Feature_61" END AS impter_63, CASE WHEN ("ADS"."Feature_62" IS NULL) THEN 2.08698677801 ELSE "ADS"."Feature_62" END AS impter_64, CASE WHEN ("ADS"."Feature_63" IS NULL) THEN 0.386221294363 ELSE "ADS"."Feature_63" END AS impter_65 
FROM digits AS "ADS"), 
"ADS_sca_2_OUT" AS 
(SELECT "ADS_imp_1_OUT"."KEY" AS "KEY", (CAST("ADS_imp_1_OUT".impter_2 AS DOUBLE) - 0.0) / 1.0 AS scaler_2, (CAST("ADS_imp_1_OUT".impter_3 AS DOUBLE) - 0.295059151009) / 0.886335971514 AS scaler_3, (CAST("ADS_imp_1_OUT".impter_4 AS DOUBLE) - 5.10438413361) / 4.71456252236 AS scaler_4, (CAST("ADS_imp_1_OUT".impter_5 AS DOUBLE) - 11.791927627) / 4.24270517756 AS scaler_5, (CAST("ADS_imp_1_OUT".impter_6 AS DOUBLE) - 11.8482950592) / 4.29860785049 AS scaler_6, (CAST("ADS_imp_1_OUT".impter_7 AS DOUBLE) - 5.82324286708) / 5.66405259335 AS scaler_7, (CAST("ADS_imp_1_OUT".impter_8 AS DOUBLE) - 1.39457202505) / 3.36725374989 AS scaler_8, (CAST("ADS_imp_1_OUT".impter_9 AS DOUBLE) - 0.134307585247) / 1.07384889611 AS scaler_9, (CAST("ADS_imp_1_OUT".impter_10 AS DOUBLE) - 0.00556715379262) / 0.0912125950052 AS scaler_10, (CAST("ADS_imp_1_OUT".impter_11 AS DOUBLE) - 1.97703549061) / 3.17657595134 AS scaler_11, (CAST("ADS_imp_1_OUT".impter_12 AS DOUBLE) - 10.3625608907) / 5.42745576804 AS scaler_12, (CAST("ADS_imp_1_OUT".impter_13 AS DOUBLE) - 12.0306193459) / 3.9240043127 AS scaler_13, (CAST("ADS_imp_1_OUT".impter_14 AS DOUBLE) - 10.2713987474) / 4.75130678201 AS scaler_14, (CAST("ADS_imp_1_OUT".impter_15 AS DOUBLE) - 8.12178148921) / 6.05574247042 AS scaler_15, (CAST("ADS_imp_1_OUT".impter_16 AS DOUBLE) - 1.89213639527) / 3.63584960156 AS scaler_16, (CAST("ADS_imp_1_OUT".impter_17 AS DOUBLE) - 0.117606123869) / 0.880913584841 AS scaler_17, (CAST("ADS_imp_1_OUT".impter_18 AS DOUBLE) - 0.00208768267223) / 0.0456434469918 AS scaler_18, (CAST("ADS_imp_1_OUT".impter_19 AS DOUBLE) - 2.54279749478) / 3.5359391483 AS scaler_19, (CAST("ADS_imp_1_OUT".impter_20 AS DOUBLE) - 9.93528183716) / 5.67423342754 AS scaler_20, (CAST("ADS_imp_1_OUT".impter_21 AS DOUBLE) - 7.09951287404) / 5.82896862212 AS scaler_21, (CAST("ADS_imp_1_OUT".impter_22 AS DOUBLE) - 7.1329157968) / 6.16416638076 AS scaler_22, (CAST("ADS_imp_1_OUT".impter_23 AS DOUBLE) - 7.81419624217) / 6.23721464144 AS scaler_23, (CAST("ADS_imp_1_OUT".impter_24 AS DOUBLE) - 1.84342379958) / 3.35529684953 AS scaler_24, (CAST("ADS_imp_1_OUT".impter_25 AS DOUBLE) - 0.0577592205985) / 0.470571680845 AS scaler_25, (CAST("ADS_imp_1_OUT".impter_26 AS DOUBLE) - 0.000695894224078) / 0.0263706267523 AS scaler_26, (CAST("ADS_imp_1_OUT".impter_27 AS DOUBLE) - 2.48086290884) / 3.15795311405 AS scaler_27, (CAST("ADS_imp_1_OUT".impter_28 AS DOUBLE) - 9.14335421016) / 6.21144862077 AS scaler_28, (CAST("ADS_imp_1_OUT".impter_29 AS DOUBLE) - 8.96033402923) / 5.8724993369 AS scaler_29, (CAST("ADS_imp_1_OUT".impter_30 AS DOUBLE) - 10.0368823939) / 6.13119413882 AS scaler_30, (CAST("ADS_imp_1_OUT".impter_31 AS DOUBLE) - 7.59498956159) / 5.88300951231 AS scaler_31, (CAST("ADS_imp_1_OUT".impter_32 AS DOUBLE) - 2.33750869868) / 3.7555163121 AS scaler_32, (CAST("ADS_imp_1_OUT".impter_33 AS DOUBLE) - 0.00278357689631) / 0.0526861328622 AS scaler_33, (CAST("ADS_imp_1_OUT".impter_34 AS DOUBLE) - 0.0) / 1.0 AS scaler_34, (CAST("ADS_imp_1_OUT".impter_35 AS DOUBLE) - 2.33194154489) / 3.5203616767 AS scaler_35, (CAST("ADS_imp_1_OUT".impter_36 AS DOUBLE) - 7.60890744607) / 6.33742712715 AS scaler_36, (CAST("ADS_imp_1_OUT".impter_37 AS DOUBLE) - 9.02853166319) / 6.25539879291 AS scaler_37, (CAST("ADS_imp_1_OUT".impter_38 AS DOUBLE) - 10.2700069589) / 5.9183282366 AS scaler_38, (CAST("ADS_imp_1_OUT".impter_39 AS DOUBLE) - 8.80654140571) / 5.86250594875 AS scaler_39, (CAST("ADS_imp_1_OUT".impter_40 AS DOUBLE) - 2.87543493389) / 3.52155138888 AS scaler_40, (CAST("ADS_imp_1_OUT".impter_41 AS DOUBLE) - 0.0) / 1.0 AS scaler_41, (CAST("ADS_imp_1_OUT".impter_42 AS DOUBLE) - 0.0104384133612) / 0.160122221498 AS scaler_42, (CAST("ADS_imp_1_OUT".impter_43 AS DOUBLE) - 1.57550452331) / 3.01481585756 AS scaler_43, (CAST("ADS_imp_1_OUT".impter_44 AS DOUBLE) - 6.85873347251) / 6.54220934077 AS scaler_44, (CAST("ADS_imp_1_OUT".impter_45 AS DOUBLE) - 7.25887265136) / 6.49091755443 AS scaler_45, (CAST("ADS_imp_1_OUT".impter_46 AS DOUBLE) - 7.71050800278) / 6.29287362068 AS scaler_46, (CAST("ADS_imp_1_OUT".impter_47 AS DOUBLE) - 8.28114126653) / 5.71330954915 AS scaler_47, (CAST("ADS_imp_1_OUT".impter_48 AS DOUBLE) - 3.43215031315) / 4.32650025914 AS scaler_48, (CAST("ADS_imp_1_OUT".impter_49 AS DOUBLE) - 0.0313152400835) / 0.333254145983 AS scaler_49, (CAST("ADS_imp_1_OUT".impter_50 AS DOUBLE) - 0.00904662491301) / 0.228276642221 AS scaler_50, (CAST("ADS_imp_1_OUT".impter_51 AS DOUBLE) - 0.708420320111) / 1.76307682322 AS scaler_51, (CAST("ADS_imp_1_OUT".impter_52 AS DOUBLE) - 7.49269311065) / 5.67473574734 AS scaler_52, (CAST("ADS_imp_1_OUT".impter_53 AS DOUBLE) - 9.52957550452) / 5.23079002251 AS scaler_53, (CAST("ADS_imp_1_OUT".impter_54 AS DOUBLE) - 9.54140570633) / 5.25155551469 AS scaler_54, (CAST("ADS_imp_1_OUT".impter_55 AS DOUBLE) - 8.7543493389) / 6.03436489776 AS scaler_55, (CAST("ADS_imp_1_OUT".impter_56 AS DOUBLE) - 3.73973556019) / 4.95383426986 AS scaler_56, (CAST("ADS_imp_1_OUT".impter_57 AS DOUBLE) - 0.219206680585) / 1.02574714206 AS scaler_57, (CAST("ADS_imp_1_OUT".impter_58 AS DOUBLE) - 0.000695894224078) / 0.0263706267523 AS scaler_58, (CAST("ADS_imp_1_OUT".impter_59 AS DOUBLE) - 0.263743910926) / 0.893431165158 AS scaler_59, (CAST("ADS_imp_1_OUT".impter_60 AS DOUBLE) - 5.47459986082) / 5.06659361292 AS scaler_60, (CAST("ADS_imp_1_OUT".impter_61 AS DOUBLE) - 12.0974251914) / 4.35996530676 AS scaler_61, (CAST("ADS_imp_1_OUT".impter_62 AS DOUBLE) - 11.8580375783) / 4.88924228226 AS scaler_62, (CAST("ADS_imp_1_OUT".impter_63 AS DOUBLE) - 6.7167710508) / 5.87255780346 AS scaler_63, (CAST("ADS_imp_1_OUT".impter_64 AS DOUBLE) - 2.08698677801) / 4.12826085472 AS scaler_64, (CAST("ADS_imp_1_OUT".impter_65 AS DOUBLE) - 0.386221294363) / 1.9151535006 AS scaler_65 
FROM "ADS_imp_1_OUT"), 
"RawScores" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CAST(NULL AS DOUBLE) AS "LogProba_0", CAST(NULL AS DOUBLE) AS "Proba_0", -2.34305920092 + (-0.5 * -18.8853887705 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_2 AS DOUBLE) - 0.0) * (CAST("ADS_sca_2_OUT".scaler_2 AS DOUBLE) - 0.0)) / 1e-09) + (-0.5 * -0.783215462936 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_3 AS DOUBLE) - -0.300195018948) * (CAST("ADS_sca_2_OUT".scaler_3 AS DOUBLE) - -0.300195018948)) / 0.072723366997) + (-0.5 * 0.862815432713 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_4 AS DOUBLE) - -0.208120206946) * (CAST("ADS_sca_2_OUT".scaler_4 AS DOUBLE) - -0.208120206946)) / 0.377169106521) + (-0.5 * 0.525214262795 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_5 AS DOUBLE) - 0.327440096624) * (CAST("ADS_sca_2_OUT".scaler_5 AS DOUBLE) - 0.327440096624)) / 0.269102534298) + (-0.5 * 1.42942339494 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_6 AS DOUBLE) - -0.148455070528) * (CAST("ADS_sca_2_OUT".scaler_6 AS DOUBLE) - -0.148455070528)) / 0.664677265298) + (-0.5 * 0.640131948491 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_7 AS DOUBLE) - -0.530433331587) * (CAST("ADS_sca_2_OUT".scaler_7 AS DOUBLE) - -0.530433331587)) / 0.301874135629) + (-0.5 * -3.94503794081 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_8 AS DOUBLE) - -0.403397023773) * (CAST("ADS_sca_2_OUT".scaler_8 AS DOUBLE) - -0.403397023773)) / 0.00307972489061) + (-0.5 * -18.8853887705 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_9 AS DOUBLE) - -0.125071214148) * (CAST("ADS_sca_2_OUT".scaler_9 AS DOUBLE) - -0.125071214148)) / 1e-09) + (-0.5 * -18.8853887705 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_10 AS DOUBLE) - -0.0610349238754) * (CAST("ADS_sca_2_OUT".scaler_10 AS DOUBLE) - -0.0610349238754)) / 1e-09) + (-0.5 * 0.778296884114 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_11 AS DOUBLE) - -0.323543382569) * (CAST("ADS_sca_2_OUT".scaler_11 AS DOUBLE) - -0.323543382569)) / 0.346601289148) + (-0.5 * 0.820547291091 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_12 AS DOUBLE) - 0.407171052482) * (CAST("ADS_sca_2_OUT".scaler_12 AS DOUBLE) - 0.407171052482)) / 0.361559096366) + (-0.5 * 1.45113373614 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_13 AS DOUBLE) - 0.274738817903) * (CAST("ADS_sca_2_OUT".scaler_13 AS DOUBLE) - 0.274738817903)) / 0.679265419428) + (-0.5 * 1.46432404897 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_14 AS DOUBLE) - 0.249430955759) * (CAST("ADS_sca_2_OUT".scaler_14 AS DOUBLE) - 0.249430955759)) / 0.688284494248) + (-0.5 * 0.685792964942 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_15 AS DOUBLE) - 0.541101153398) * (CAST("ADS_sca_2_OUT".scaler_15 AS DOUBLE) - 0.541101153398)) / 0.315977553399) + (-0.5 * 0.649497504705 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_16 AS DOUBLE) - -0.253344335838) * (CAST("ADS_sca_2_OUT".scaler_16 AS DOUBLE) - -0.253344335838)) / 0.304714635484) + (-0.5 * -18.8853887705 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_17 AS DOUBLE) - -0.133504722703) * (CAST("ADS_sca_2_OUT".scaler_17 AS DOUBLE) - -0.133504722703)) / 1e-09) + (-0.5 * -18.8853887705 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_18 AS DOUBLE) - -0.0457389353746) * (CAST("ADS_sca_2_OUT".scaler_18 AS DOUBLE) - -0.0457389353746)) / 1e-09) + (-0.5 * 1.28547644499 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_19 AS DOUBLE) - 0.336285923858) * (CAST("ADS_sca_2_OUT".scaler_19 AS DOUBLE) - 0.336285923858)) / 0.575566433456) + (-0.5 * 0.218542581998 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_20 AS DOUBLE) - 0.780200014673) * (CAST("ADS_sca_2_OUT".scaler_20 AS DOUBLE) - 0.780200014673)) / 0.198030447588) + (-0.5 * 1.53150113031 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_21 AS DOUBLE) - -0.322891010693) * (CAST("ADS_sca_2_OUT".scaler_21 AS DOUBLE) - -0.322891010693)) / 0.736109837169) + (-0.5 * 0.576985173059 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_22 AS DOUBLE) - -0.796259836685) * (CAST("ADS_sca_2_OUT".scaler_22 AS DOUBLE) - -0.796259836685)) / 0.283401150146) + (-0.5 * 0.561427614377 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_23 AS DOUBLE) - 0.716411525073) * (CAST("ADS_sca_2_OUT".scaler_23 AS DOUBLE) - 0.716411525073)) / 0.279026239825) + (-0.5 * 1.35066220498 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_24 AS DOUBLE) - 0.500198762172) * (CAST("ADS_sca_2_OUT".scaler_24 AS DOUBLE) - 0.500198762172)) / 0.614335021861) + (-0.5 * -18.8853887705 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_25 AS DOUBLE) - -0.122742661638) * (CAST("ADS_sca_2_OUT".scaler_25 AS DOUBLE) - -0.122742661638)) / 1e-09) + (-0.5 * -18.8853887705 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_26 AS DOUBLE) - -0.0263889906985) * (CAST("ADS_sca_2_OUT".scaler_26 AS DOUBLE) - -0.0263889906985)) / 1e-09) + (-0.5 * 1.37973478118 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_27 AS DOUBLE) - 0.889497741789) * (CAST("ADS_sca_2_OUT".scaler_27 AS DOUBLE) - 0.889497741789)) / 0.632457480449) + (-0.5 * 0.398081413966 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_28 AS DOUBLE) - 0.613893434813) * (CAST("ADS_sca_2_OUT".scaler_28 AS DOUBLE) - 0.613893434813)) / 0.236976179238) + (-0.5 * 0.774932679252 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_29 AS DOUBLE) - -1.18277429713) * (CAST("ADS_sca_2_OUT".scaler_29 AS DOUBLE) - -1.18277429713)) / 0.345437210604) + (-0.5 * -2.95259894276 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_30 AS DOUBLE) - -1.61338144473) * (CAST("ADS_sca_2_OUT".scaler_30 AS DOUBLE) - -1.61338144473)) / 0.00830850151761) + (-0.5 * 0.839032537688 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_31 AS DOUBLE) - 0.284399740803) * (CAST("ADS_sca_2_OUT".scaler_31 AS DOUBLE) - 0.284399740803)) / 0.368304760975) + (-0.5 * 0.917137708313 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_32 AS DOUBLE) - 1.08135385083) * (CAST("ADS_sca_2_OUT".scaler_32 AS DOUBLE) - 1.08135385083)) / 0.398224501703) + (-0.5 * -18.8853887705 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_33 AS DOUBLE) - -0.0528331981319) * (CAST("ADS_sca_2_OUT".scaler_33 AS DOUBLE) - -0.0528331981319)) / 1e-09) + (-0.5 * -18.8853887705 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_34 AS DOUBLE) - 0.0) * (CAST("ADS_sca_2_OUT".scaler_34 AS DOUBLE) - 0.0)) / 1e-09) + (-0.5 * 0.900351736394 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_35 AS DOUBLE) - 0.986377707774) * (CAST("ADS_sca_2_OUT".scaler_35 AS DOUBLE) - 0.986377707774)) / 0.391595707426) + (-0.5 * 0.401245923903 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_36 AS DOUBLE) - 0.636854674489) * (CAST("ADS_sca_2_OUT".scaler_36 AS DOUBLE) - 0.636854674489)) / 0.237727280519) + (-0.5 * -0.278569667793 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_37 AS DOUBLE) - -1.31241689863) * (CAST("ADS_sca_2_OUT".scaler_37 AS DOUBLE) - -1.31241689863)) / 0.120458891431) + (-0.5 * -3.67321361755 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_38 AS DOUBLE) - -1.72549333802) * (CAST("ADS_sca_2_OUT".scaler_38 AS DOUBLE) - -1.72549333802)) / 0.00404169676453) + (-0.5 * 0.929131594408 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_39 AS DOUBLE) - 0.0428877362316) * (CAST("ADS_sca_2_OUT".scaler_39 AS DOUBLE) - 0.0428877362316)) / 0.40302951883) + (-0.5 * 1.29429485497 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_40 AS DOUBLE) - 1.15888889713) * (CAST("ADS_sca_2_OUT".scaler_40 AS DOUBLE) - 1.15888889713)) / 0.580664459441) + (-0.5 * -18.8853887705 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_41 AS DOUBLE) - 0.0) * (CAST("ADS_sca_2_OUT".scaler_41 AS DOUBLE) - 0.0)) / 1e-09) + (-0.5 * -18.8853887705 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_42 AS DOUBLE) - -0.0651902856676) * (CAST("ADS_sca_2_OUT".scaler_42 AS DOUBLE) - -0.0651902856676)) / 1e-09) + (-0.5 * 1.28227360282 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_43 AS DOUBLE) - 0.611906470883) * (CAST("ADS_sca_2_OUT".scaler_43 AS DOUBLE) - 0.611906470883)) / 0.573725933997) + (-0.5 * -0.218182274917 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_44 AS DOUBLE) - 1.00406489876) * (CAST("ADS_sca_2_OUT".scaler_44 AS DOUBLE) - 1.00406489876)) / 0.127957213391) + (-0.5 * 0.153034542752 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_45 AS DOUBLE) - -0.891685668484) * (CAST("ADS_sca_2_OUT".scaler_45 AS DOUBLE) - -0.891685668484)) / 0.185473637366) + (-0.5 * 0.352969953289 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_46 AS DOUBLE) - -0.976547596838) * (CAST("ADS_sca_2_OUT".scaler_46 AS DOUBLE) - -0.976547596838)) / 0.226523380749) + (-0.5 * 0.841936403079 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_47 AS DOUBLE) - 0.587494842353) * (CAST("ADS_sca_2_OUT".scaler_47 AS DOUBLE) - 0.587494842353)) / 0.369375822781) + (-0.5 * 1.4575983581 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_48 AS DOUBLE) - 0.491348797876) * (CAST("ADS_sca_2_OUT".scaler_48 AS DOUBLE) - 0.491348797876)) / 0.683670837914) + (-0.5 * -18.8853887705 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_49 AS DOUBLE) - -0.0939680434916) * (CAST("ADS_sca_2_OUT".scaler_49 AS DOUBLE) - -0.0939680434916)) / 1e-09) + (-0.5 * -18.8853887705 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_50 AS DOUBLE) - -0.0396300945423) * (CAST("ADS_sca_2_OUT".scaler_50 AS DOUBLE) - -0.0396300945423)) / 1e-09) + (-0.5 * 1.20218639012 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_51 AS DOUBLE) - 0.070849444322) * (CAST("ADS_sca_2_OUT".scaler_51 AS DOUBLE) - 0.070849444322)) / 0.529569600809) + (-0.5 * 0.33642671373 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_52 AS DOUBLE) - 0.990927008535) * (CAST("ADS_sca_2_OUT".scaler_52 AS DOUBLE) - 0.990927008535)) / 0.222806777289) + (-0.5 * 1.16806476872 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_53 AS DOUBLE) - 0.0594564500359) * (CAST("ADS_sca_2_OUT".scaler_53 AS DOUBLE) - 0.0594564500359)) / 0.511804635684) + (-0.5 * 1.26321883231 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_54 AS DOUBLE) - 0.189434573231) * (CAST("ADS_sca_2_OUT".scaler_54 AS DOUBLE) - 0.189434573231)) / 0.562897215008) + (-0.5 * 0.504931929519 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_55 AS DOUBLE) - 0.743206811631) * (CAST("ADS_sca_2_OUT".scaler_55 AS DOUBLE) - 0.743206811631)) / 0.263699485451) + (-0.5 * 0.829630358373 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_56 AS DOUBLE) - -0.301455128947) * (CAST("ADS_sca_2_OUT".scaler_56 AS DOUBLE) - -0.301455128947)) / 0.364858121919) + (-0.5 * -18.8853887705 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_57 AS DOUBLE) - -0.213704402962) * (CAST("ADS_sca_2_OUT".scaler_57 AS DOUBLE) - -0.213704402962)) / 1e-09) + (-0.5 * -18.8853887705 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_58 AS DOUBLE) - -0.0263889906985) * (CAST("ADS_sca_2_OUT".scaler_58 AS DOUBLE) - -0.0263889906985)) / 1e-09) + (-0.5 * -2.87127729331 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_59 AS DOUBLE) - -0.287092664905) * (CAST("ADS_sca_2_OUT".scaler_59 AS DOUBLE) - -0.287092664905)) / 0.0090123956057) + (-0.5 * 0.591770526106 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_60 AS DOUBLE) - -0.266729790915) * (CAST("ADS_sca_2_OUT".scaler_60 AS DOUBLE) - -0.266729790915)) / 0.287622466128) + (-0.5 * 0.211633416899 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_61 AS DOUBLE) - 0.336652265938) * (CAST("ADS_sca_2_OUT".scaler_61 AS DOUBLE) - 0.336652265938)) / 0.196666938311) + (-0.5 * 0.673053398772 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_62 AS DOUBLE) - 0.267654784286) * (CAST("ADS_sca_2_OUT".scaler_62 AS DOUBLE) - 0.267654784286)) / 0.311977668942) + (-0.5 * 1.01523950215 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_63 AS DOUBLE) - -0.275062728967) * (CAST("ADS_sca_2_OUT".scaler_63 AS DOUBLE) - -0.275062728967)) / 0.439271518353) + (-0.5 * -1.49764228879 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_64 AS DOUBLE) - -0.458143191687) * (CAST("ADS_sca_2_OUT".scaler_64 AS DOUBLE) - -0.458143191687)) / 0.035596094393) + (-0.5 * -18.8853887705 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_65 AS DOUBLE) - -0.201665973115) * (CAST("ADS_sca_2_OUT".scaler_65 AS DOUBLE) - -0.201665973115)) / 1e-09) AS "Score_0", CAST(NULL AS DOUBLE) AS "LogProba_1", CAST(NULL AS DOUBLE) AS "Proba_1", -2.2798802993 + (-0.5 * -18.8853887705 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_2 AS DOUBLE) - 0.0) * (CAST("ADS_sca_2_OUT".scaler_2 AS DOUBLE) - 0.0)) / 1e-09) + (-0.5 * -2.23178872583 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_3 AS DOUBLE) - -0.317547428828) * (CAST("ADS_sca_2_OUT".scaler_3 AS DOUBLE) - -0.317547428828)) / 0.0170830968571) + (-0.5 * 1.23528950808 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_4 AS DOUBLE) - -0.544476641353) * (CAST("ADS_sca_2_OUT".scaler_4 AS DOUBLE) - -0.544476641353)) / 0.547393389664) + (-0.5 * 2.41796601953 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_5 AS DOUBLE) - -0.5698670697) * (CAST("ADS_sca_2_OUT".scaler_5 AS DOUBLE) - -0.5698670697)) / 1.78619731152) + (-0.5 * 2.04372418519 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_6 AS DOUBLE) - -0.338187917248) * (CAST("ADS_sca_2_OUT".scaler_6 AS DOUBLE) - -0.338187917248)) / 1.22856536507) + (-0.5 * 1.81774210042 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_7 AS DOUBLE) - 0.0288047626765) * (CAST("ADS_sca_2_OUT".scaler_7 AS DOUBLE) - 0.0288047626765)) / 0.980066388749) + (-0.5 * 1.04127995309 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_8 AS DOUBLE) - -0.0868753086207) * (CAST("ADS_sca_2_OUT".scaler_8 AS DOUBLE) - -0.0868753086207)) / 0.450860584152) + (-0.5 * -18.8853887705 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_9 AS DOUBLE) - -0.125071214148) * (CAST("ADS_sca_2_OUT".scaler_9 AS DOUBLE) - -0.125071214148)) / 1e-09) + (-0.5 * -18.8853887705 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_10 AS DOUBLE) - -0.0610349238754) * (CAST("ADS_sca_2_OUT".scaler_10 AS DOUBLE) - -0.0610349238754)) / 1e-09) + (-0.5 * -2.43564109587 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_11 AS DOUBLE) - -0.592398048777) * (CAST("ADS_sca_2_OUT".scaler_11 AS DOUBLE) - -0.592398048777)) / 0.0139326793994) + (-0.5 * 1.49951805651 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_12 AS DOUBLE) - -1.12716956029) * (CAST("ADS_sca_2_OUT".scaler_12 AS DOUBLE) - -1.12716956029)) / 0.712939289686) + (-0.5 * 2.20758933761 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_13 AS DOUBLE) - 0.250505865434) * (CAST("ADS_sca_2_OUT".scaler_13 AS DOUBLE) - 0.250505865434)) / 1.44731811965) + (-0.5 * 1.78893240284 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_14 AS DOUBLE) - 0.754685873649) * (CAST("ADS_sca_2_OUT".scaler_14 AS DOUBLE) - 0.754685873649)) / 0.95223382146) + (-0.5 * 1.91612809781 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_15 AS DOUBLE) - 0.0259472849415) * (CAST("ADS_sca_2_OUT".scaler_15 AS DOUBLE) - 0.0259472849415)) / 1.08139408847) + (-0.5 * 1.20694891307 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_16 AS DOUBLE) - -0.166789657442) * (CAST("ADS_sca_2_OUT".scaler_16 AS DOUBLE) - -0.166789657442)) / 0.532097703485) + (-0.5 * -18.8853887705 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_17 AS DOUBLE) - -0.133504722703) * (CAST("ADS_sca_2_OUT".scaler_17 AS DOUBLE) - -0.133504722703)) / 1e-09) + (-0.5 * -18.8853887705 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_18 AS DOUBLE) - -0.0457389353746) * (CAST("ADS_sca_2_OUT".scaler_18 AS DOUBLE) - -0.0457389353746)) / 1e-09) + (-0.5 * 1.12385113935 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_19 AS DOUBLE) - -0.440166776543) * (CAST("ADS_sca_2_OUT".scaler_19 AS DOUBLE) - -0.440166776543)) / 0.48966885275) + (-0.5 * 1.83328821112 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_20 AS DOUBLE) - -0.482532655831) * (CAST("ADS_sca_2_OUT".scaler_20 AS DOUBLE) - -0.482532655831)) / 0.995421657416) + (-0.5 * -0.437973078185 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_21 AS DOUBLE) - 1.3565504225) * (CAST("ADS_sca_2_OUT".scaler_21 AS DOUBLE) - 1.3565504225)) / 0.102709553337) + (-0.5 * 0.873937277833 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_22 AS DOUBLE) - 1.13169037137) * (CAST("ADS_sca_2_OUT".scaler_22 AS DOUBLE) - 1.13169037137)) / 0.381387336677) + (-0.5 * 1.7511935527 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_23 AS DOUBLE) - -0.0978184405366) * (CAST("ADS_sca_2_OUT".scaler_23 AS DOUBLE) - -0.0978184405366)) / 0.916967257283) + (-0.5 * 0.641624936935 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_24 AS DOUBLE) - -0.348688793957) * (CAST("ADS_sca_2_OUT".scaler_24 AS DOUBLE) - -0.348688793957)) / 0.302325166834) + (-0.5 * -18.8853887705 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_25 AS DOUBLE) - -0.122742661638) * (CAST("ADS_sca_2_OUT".scaler_25 AS DOUBLE) - -0.122742661638)) / 1e-09) + (-0.5 * -18.8853887705 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_26 AS DOUBLE) - -0.0263889906985) * (CAST("ADS_sca_2_OUT".scaler_26 AS DOUBLE) - -0.0263889906985)) / 1e-09) + (-0.5 * 1.93745017868 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_27 AS DOUBLE) - -0.119958111736) * (CAST("ADS_sca_2_OUT".scaler_27 AS DOUBLE) - -0.119958111736)) / 1.10469923486) + (-0.5 * 1.64399872334 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_28 AS DOUBLE) - 0.0229189814238) * (CAST("ADS_sca_2_OUT".scaler_28 AS DOUBLE) - 0.0229189814238)) / 0.823758114055) + (-0.5 * 0.839704085068 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_29 AS DOUBLE) - 0.93463536524) * (CAST("ADS_sca_2_OUT".scaler_29 AS DOUBLE) - 0.93463536524)) / 0.368552178139) + (-0.5 * 0.749962264185 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_30 AS DOUBLE) - 0.626414453624) * (CAST("ADS_sca_2_OUT".scaler_30 AS DOUBLE) - 0.626414453624)) / 0.336918303043) + (-0.5 * 1.82659102666 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_31 AS DOUBLE) - -0.293088300921) * (CAST("ADS_sca_2_OUT".scaler_31 AS DOUBLE) - -0.293088300921)) / 0.988777408681) + (-0.5 * -0.362644695629 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_32 AS DOUBLE) - -0.528227555739) * (CAST("ADS_sca_2_OUT".scaler_32 AS DOUBLE) - -0.528227555739)) / 0.11074536056) + (-0.5 * -18.8853887705 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_33 AS DOUBLE) - -0.0528331981319) * (CAST("ADS_sca_2_OUT".scaler_33 AS DOUBLE) - -0.0528331981319)) / 1e-09) + (-0.5 * -18.8853887705 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_34 AS DOUBLE) - 0.0) * (CAST("ADS_sca_2_OUT".scaler_34 AS DOUBLE) - 0.0)) / 1e-09) + (-0.5 * 0.851629196966 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_35 AS DOUBLE) - -0.349367718862) * (CAST("ADS_sca_2_OUT".scaler_35 AS DOUBLE) - -0.349367718862)) / 0.372973514171) + (-0.5 * 1.72122040452 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_36 AS DOUBLE) - -0.128283775483) * (CAST("ADS_sca_2_OUT".scaler_36 AS DOUBLE) - -0.128283775483)) / 0.889890674097) + (-0.5 * 1.54138841029 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_37 AS DOUBLE) - 0.492424540178) * (CAST("ADS_sca_2_OUT".scaler_37 AS DOUBLE) - 0.492424540178)) / 0.74342406053) + (-0.5 * 0.736515564694 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_38 AS DOUBLE) - 0.592313083188) * (CAST("ADS_sca_2_OUT".scaler_38 AS DOUBLE) - 0.592313083188)) / 0.332418187526) + (-0.5 * 1.7645073515 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_39 AS DOUBLE) - -0.598246161023) * (CAST("ADS_sca_2_OUT".scaler_39 AS DOUBLE) - -0.598246161023)) / 0.929257206267) + (-0.5 * -0.151677220254 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_40 AS DOUBLE) - -0.718006321408) * (CAST("ADS_sca_2_OUT".scaler_40 AS DOUBLE) - -0.718006321408)) / 0.136756366) + (-0.5 * -18.8853887705 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_41 AS DOUBLE) - 0.0) * (CAST("ADS_sca_2_OUT".scaler_41 AS DOUBLE) - 0.0)) / 1e-09) + (-0.5 * -18.8853887705 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_42 AS DOUBLE) - -0.0651902856676) * (CAST("ADS_sca_2_OUT".scaler_42 AS DOUBLE) - -0.0651902856676)) / 1e-09) + (-0.5 * -0.199639852816 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_43 AS DOUBLE) - -0.400740092138) * (CAST("ADS_sca_2_OUT".scaler_43 AS DOUBLE) - -0.400740092138)) / 0.130351983861) + (-0.5 * 1.69771459069 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_44 AS DOUBLE) - -0.238361945238) * (CAST("ADS_sca_2_OUT".scaler_44 AS DOUBLE) - -0.238361945238)) / 0.869216997271) + (-0.5 * 1.7816310228 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_45 AS DOUBLE) - 0.517673339634) * (CAST("ADS_sca_2_OUT".scaler_45 AS DOUBLE) - 0.517673339634)) / 0.945306520647) + (-0.5 * 0.665261277391 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_46 AS DOUBLE) - 0.931358378053) * (CAST("ADS_sca_2_OUT".scaler_46 AS DOUBLE) - 0.931358378053)) / 0.309556147724) + (-0.5 * 1.87350983528 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_47 AS DOUBLE) - -0.464755305756) * (CAST("ADS_sca_2_OUT".scaler_47 AS DOUBLE) - -0.464755305756)) / 1.03627522408) + (-0.5 * -0.904656193878 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_48 AS DOUBLE) - -0.722530377195) * (CAST("ADS_sca_2_OUT".scaler_48 AS DOUBLE) - -0.722530377195)) / 0.0644069804099) + (-0.5 * -18.8853887705 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_49 AS DOUBLE) - -0.0939680434916) * (CAST("ADS_sca_2_OUT".scaler_49 AS DOUBLE) - -0.0939680434916)) / 1e-09) + (-0.5 * -18.8853887705 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_50 AS DOUBLE) - -0.0396300945423) * (CAST("ADS_sca_2_OUT".scaler_50 AS DOUBLE) - -0.0396300945423)) / 1e-09) + (-0.5 * -0.684808386275 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_51 AS DOUBLE) - -0.347790984941) * (CAST("ADS_sca_2_OUT".scaler_51 AS DOUBLE) - -0.347790984941)) / 0.0802438261465) + (-0.5 * 1.5602384606 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_52 AS DOUBLE) - -0.452448035809) * (CAST("ADS_sca_2_OUT".scaler_52 AS DOUBLE) - -0.452448035809)) / 0.757570553644) + (-0.5 * 2.03563790695 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_53 AS DOUBLE) - 0.348736229943) * (CAST("ADS_sca_2_OUT".scaler_53 AS DOUBLE) - 0.348736229943)) / 1.21867090229) + (-0.5 * 0.829595491758 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_54 AS DOUBLE) - 0.797189601903) * (CAST("ADS_sca_2_OUT".scaler_54 AS DOUBLE) - 0.797189601903)) / 0.364845400773) + (-0.5 * 1.99988127257 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_55 AS DOUBLE) - -0.185884728001) * (CAST("ADS_sca_2_OUT".scaler_55 AS DOUBLE) - -0.185884728001)) / 1.17586518718) + (-0.5 * 1.30771580247 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_56 AS DOUBLE) - -0.334711017125) * (CAST("ADS_sca_2_OUT".scaler_56 AS DOUBLE) - -0.334711017125)) / 0.588510056574) + (-0.5 * 3.16873694421 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_57 AS DOUBLE) - 0.422964418923) * (CAST("ADS_sca_2_OUT".scaler_57 AS DOUBLE) - 0.422964418923)) / 3.78429602106) + (-0.5 * -18.8853887705 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_58 AS DOUBLE) - -0.0263889906985) * (CAST("ADS_sca_2_OUT".scaler_58 AS DOUBLE) - -0.0263889906985)) / 1e-09) + (-0.5 * -2.93400939349 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_59 AS DOUBLE) - -0.287589240064) * (CAST("ADS_sca_2_OUT".scaler_59 AS DOUBLE) - -0.287589240064)) / 0.00846439734309) + (-0.5 * 0.896410394973 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_60 AS DOUBLE) - -0.614625107329) * (CAST("ADS_sca_2_OUT".scaler_60 AS DOUBLE) - -0.614625107329)) / 0.39005533261) + (-0.5 * 2.37139348041 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_61 AS DOUBLE) - -0.62616971937) * (CAST("ADS_sca_2_OUT".scaler_61 AS DOUBLE) - -0.62616971937)) / 1.70491697409) + (-0.5 * 0.968615551931 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_62 AS DOUBLE) - 0.261393641325) * (CAST("ADS_sca_2_OUT".scaler_62 AS DOUBLE) - 0.261393641325)) / 0.419261053169) + (-0.5 * 1.92384211213 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_63 AS DOUBLE) - 0.299600188585) * (CAST("ADS_sca_2_OUT".scaler_63 AS DOUBLE) - 0.299600188585)) / 1.08976823558) + (-0.5 * 2.43049154378 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_64 AS DOUBLE) - 0.268949122313) * (CAST("ADS_sca_2_OUT".scaler_64 AS DOUBLE) - 0.268949122313)) / 1.80871107325) + (-0.5 * 3.37712748275 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_65 AS DOUBLE) - 0.636617838793) * (CAST("ADS_sca_2_OUT".scaler_65 AS DOUBLE) - 0.636617838793)) / 4.66109508049) AS "Score_1", CAST(NULL AS DOUBLE) AS "LogProba_2", CAST(NULL AS DOUBLE) AS "Proba_2", -2.27310061231 + (-0.5 * -18.8853887705 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_2 AS DOUBLE) - 0.0) * (CAST("ADS_sca_2_OUT".scaler_2 AS DOUBLE) - 0.0)) / 1e-09) + (-0.5 * 2.57837575194 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_3 AS DOUBLE) - 0.658124284827) * (CAST("ADS_sca_2_OUT".scaler_3 AS DOUBLE) - 0.658124284827)) / 2.09698098786) + (-0.5 * 1.85028097788 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_4 AS DOUBLE) - 0.922316450034) * (CAST("ADS_sca_2_OUT".scaler_4 AS DOUBLE) - 0.922316450034)) / 1.01248115904) + (-0.5 * 1.35256582629 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_5 AS DOUBLE) - 0.529995090263) * (CAST("ADS_sca_2_OUT".scaler_5 AS DOUBLE) - 0.529995090263)) / 0.615505596911) + (-0.5 * 2.22899842595 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_6 AS DOUBLE) - -0.502280260275) * (CAST("ADS_sca_2_OUT".scaler_6 AS DOUBLE) - -0.502280260275)) / 1.47863794935) + (-0.5 * 1.18309980465 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_7 AS DOUBLE) - -0.58195360755) * (CAST("ADS_sca_2_OUT".scaler_7 AS DOUBLE) - -0.58195360755)) / 0.519557775087) + (-0.5 * -1.58821430454 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_8 AS DOUBLE) - -0.376031549958) * (CAST("ADS_sca_2_OUT".scaler_8 AS DOUBLE) - -0.376031549958)) / 0.0325137770271) + (-0.5 * -18.8853887705 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_9 AS DOUBLE) - -0.125071214148) * (CAST("ADS_sca_2_OUT".scaler_9 AS DOUBLE) - -0.125071214148)) / 1e-09) + (-0.5 * 3.00930404371 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_10 AS DOUBLE) - 0.0871191058695) * (CAST("ADS_sca_2_OUT".scaler_10 AS DOUBLE) - 0.0871191058695)) / 3.22659363086) + (-0.5 * 2.29114714749 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_11 AS DOUBLE) - 0.989929464676) * (CAST("ADS_sca_2_OUT".scaler_11 AS DOUBLE) - 0.989929464676)) / 1.57344908796) + (-0.5 * 1.20464361514 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_12 AS DOUBLE) - 0.610436072909) * (CAST("ADS_sca_2_OUT".scaler_12 AS DOUBLE) - 0.610436072909)) / 0.530872472553) + (-0.5 * 1.44858437152 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_13 AS DOUBLE) - 0.0283568867833) * (CAST("ADS_sca_2_OUT".scaler_13 AS DOUBLE) - 0.0283568867833)) / 0.677535929682) + (-0.5 * 1.34987851814 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_14 AS DOUBLE) - 0.464783918122) * (CAST("ADS_sca_2_OUT".scaler_14 AS DOUBLE) - 0.464783918122)) / 0.61385376419) + (-0.5 * 1.75136235486 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_15 AS DOUBLE) - -0.396121289496) * (CAST("ADS_sca_2_OUT".scaler_15 AS DOUBLE) - -0.396121289496)) / 0.917122056402) + (-0.5 * 0.422293977294 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_16 AS DOUBLE) - -0.382891634096) * (CAST("ADS_sca_2_OUT".scaler_16 AS DOUBLE) - -0.382891634096)) / 0.242784007456) + (-0.5 * -18.8853887705 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_17 AS DOUBLE) - -0.133504722703) * (CAST("ADS_sca_2_OUT".scaler_17 AS DOUBLE) - -0.133504722703)) / 1e-09) + (-0.5 * 3.0076755683 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_18 AS DOUBLE) - 0.102294510872) * (CAST("ADS_sca_2_OUT".scaler_18 AS DOUBLE) - 0.102294510872)) / 3.22134347851) + (-0.5 * 2.35533663734 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_19 AS DOUBLE) - 0.53822997833) * (CAST("ADS_sca_2_OUT".scaler_19 AS DOUBLE) - 0.53822997833)) / 1.67776000088) + (-0.5 * 1.56843441761 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_20 AS DOUBLE) - -0.380360596316) * (CAST("ADS_sca_2_OUT".scaler_20 AS DOUBLE) - -0.380360596316)) / 0.763805083403) + (-0.5 * 1.3594526666 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_21 AS DOUBLE) - -0.410030241974) * (CAST("ADS_sca_2_OUT".scaler_21 AS DOUBLE) - -0.410030241974)) / 0.619759115507) + (-0.5 * 1.30528502539 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_22 AS DOUBLE) - 0.692021043618) * (CAST("ADS_sca_2_OUT".scaler_22 AS DOUBLE) - 0.692021043618)) / 0.587081257069) + (-0.5 * 1.63846835611 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_23 AS DOUBLE) - -0.267033874777) * (CAST("ADS_sca_2_OUT".scaler_23 AS DOUBLE) - -0.267033874777)) / 0.819215003294) + (-0.5 * 0.741712745273 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_24 AS DOUBLE) - -0.388306405505) * (CAST("ADS_sca_2_OUT".scaler_24 AS DOUBLE) - -0.388306405505)) / 0.334150322084) + (-0.5 * -18.8853887705 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_25 AS DOUBLE) - -0.122742661638) * (CAST("ADS_sca_2_OUT".scaler_25 AS DOUBLE) - -0.122742661638)) / 1e-09) + (-0.5 * -18.8853887705 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_26 AS DOUBLE) - -0.0263889906985) * (CAST("ADS_sca_2_OUT".scaler_26 AS DOUBLE) - -0.0263889906985)) / 1e-09) + (-0.5 * 0.86860864288 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_27 AS DOUBLE) - -0.533119255016) * (CAST("ADS_sca_2_OUT".scaler_27 AS DOUBLE) - -0.533119255016)) / 0.379360467802) + (-0.5 * 0.243743038106 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_28 AS DOUBLE) - -1.1946297378) * (CAST("ADS_sca_2_OUT".scaler_28 AS DOUBLE) - -1.1946297378)) / 0.203084317649) + (-0.5 * 1.4593764427 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_29 AS DOUBLE) - -0.712355466082) * (CAST("ADS_sca_2_OUT".scaler_29 AS DOUBLE) - -0.712355466082)) / 0.684887543882) + (-0.5 * 1.03271545506 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_30 AS DOUBLE) - 0.321287226971) * (CAST("ADS_sca_2_OUT".scaler_30 AS DOUBLE) - 0.321287226971)) / 0.447015677916) + (-0.5 * 1.59973814427 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_31 AS DOUBLE) - -0.505416136714) * (CAST("ADS_sca_2_OUT".scaler_31 AS DOUBLE) - -0.505416136714)) / 0.788093199895) + (-0.5 * -0.374220969586 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_32 AS DOUBLE) - -0.54505638853) * (CAST("ADS_sca_2_OUT".scaler_32 AS DOUBLE) - -0.54505638853)) / 0.109470733875) + (-0.5 * -18.8853887705 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_33 AS DOUBLE) - -0.0528331981319) * (CAST("ADS_sca_2_OUT".scaler_33 AS DOUBLE) - -0.0528331981319)) / 1e-09) + (-0.5 * -18.8853887705 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_34 AS DOUBLE) - 0.0) * (CAST("ADS_sca_2_OUT".scaler_34 AS DOUBLE) - 0.0)) / 1e-09) + (-0.5 * -2.74960252474 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_35 AS DOUBLE) - -0.648979979162) * (CAST("ADS_sca_2_OUT".scaler_35 AS DOUBLE) - -0.648979979162)) / 0.0101784800024) + (-0.5 * -0.0104056233847 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_36 AS DOUBLE) - -1.00232327124) * (CAST("ADS_sca_2_OUT".scaler_36 AS DOUBLE) - -1.00232327124)) / 0.157507423295) + (-0.5 * 1.70786251143 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_37 AS DOUBLE) - -0.0477670478493) * (CAST("ADS_sca_2_OUT".scaler_37 AS DOUBLE) - -0.0477670478493)) / 0.87808265035) + (-0.5 * 1.26077156659 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_38 AS DOUBLE) - 0.0434278157293) * (CAST("ADS_sca_2_OUT".scaler_38 AS DOUBLE) - 0.0434278157293)) / 0.561521340205) + (-0.5 * 1.10877309147 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_39 AS DOUBLE) - -1.09302963836) * (CAST("ADS_sca_2_OUT".scaler_39 AS DOUBLE) - -1.09302963836)) / 0.482340986132) + (-0.5 * -2.0885647035 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_40 AS DOUBLE) - -0.795419489947) * (CAST("ADS_sca_2_OUT".scaler_40 AS DOUBLE) - -0.795419489947)) / 0.0197136937618) + (-0.5 * -18.8853887705 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_41 AS DOUBLE) - 0.0) * (CAST("ADS_sca_2_OUT".scaler_41 AS DOUBLE) - 0.0)) / 1e-09) + (-0.5 * -18.8853887705 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_42 AS DOUBLE) - -0.0651902856676) * (CAST("ADS_sca_2_OUT".scaler_42 AS DOUBLE) - -0.0651902856676)) / 1e-09) + (-0.5 * 0.794837374792 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_43 AS DOUBLE) - -0.309674844346) * (CAST("ADS_sca_2_OUT".scaler_43 AS DOUBLE) - -0.309674844346)) / 0.352381919984) + (-0.5 * 1.53085521554 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_44 AS DOUBLE) - -0.194260924479) * (CAST("ADS_sca_2_OUT".scaler_44 AS DOUBLE) - -0.194260924479)) / 0.735634526476) + (-0.5 * 1.04444499382 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_45 AS DOUBLE) - 0.713769540544) * (CAST("ADS_sca_2_OUT".scaler_45 AS DOUBLE) - 0.713769540544)) / 0.45228983689) + (-0.5 * 1.64799456909 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_46 AS DOUBLE) - -0.0742530023176) * (CAST("ADS_sca_2_OUT".scaler_46 AS DOUBLE) - -0.0742530023176)) / 0.827056309567) + (-0.5 * 0.808954610536 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_47 AS DOUBLE) - -1.07691747405) * (CAST("ADS_sca_2_OUT".scaler_47 AS DOUBLE) - -1.07691747405)) / 0.357391858658) + (-0.5 * 0.439065278417 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_48 AS DOUBLE) - -0.559028465219) * (CAST("ADS_sca_2_OUT".scaler_48 AS DOUBLE) - -0.559028465219)) / 0.246890147563) + (-0.5 * 0.116498313443 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_49 AS DOUBLE) - -0.0331427829072) * (CAST("ADS_sca_2_OUT".scaler_49 AS DOUBLE) - -0.0331427829072)) / 0.178819430049) + (-0.5 * 1.98550376878 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_50 AS DOUBLE) - 0.0491668584577) * (CAST("ADS_sca_2_OUT".scaler_50 AS DOUBLE) - 0.0491668584577)) / 1.15908013373) + (-0.5 * 2.50956153005 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_51 AS DOUBLE) - 0.376161317973) * (CAST("ADS_sca_2_OUT".scaler_51 AS DOUBLE) - 0.376161317973)) / 1.9575319364) + (-0.5 * 1.42493001842 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_52 AS DOUBLE) - 0.666874033413) * (CAST("ADS_sca_2_OUT".scaler_52 AS DOUBLE) - 0.666874033413)) / 0.661697320106) + (-0.5 * 0.399282511888 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_53 AS DOUBLE) - 0.917931240959) * (CAST("ADS_sca_2_OUT".scaler_53 AS DOUBLE) - 0.917931240959)) / 0.237260981838) + (-0.5 * 1.23338210623 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_54 AS DOUBLE) - 0.495183984685) * (CAST("ADS_sca_2_OUT".scaler_54 AS DOUBLE) - 0.495183984685)) / 0.546350285625) + (-0.5 * 1.08729085824 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_55 AS DOUBLE) - 0.334073422063) * (CAST("ADS_sca_2_OUT".scaler_55 AS DOUBLE) - 0.334073422063)) / 0.472089728756) + (-0.5 * 1.78927898057 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_56 AS DOUBLE) - 0.720870956936) * (CAST("ADS_sca_2_OUT".scaler_56 AS DOUBLE) - 0.720870956936)) / 0.952563901696) + (-0.5 * 2.78175966901 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_57 AS DOUBLE) - 0.537231416094) * (CAST("ADS_sca_2_OUT".scaler_57 AS DOUBLE) - 0.537231416094)) / 2.56994012918) + (-0.5 * 4.10489412831 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_58 AS DOUBLE) - 0.229833844664) * (CAST("ADS_sca_2_OUT".scaler_58 AS DOUBLE) - 0.229833844664)) / 9.65057078112) + (-0.5 * 2.86127268979 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_59 AS DOUBLE) - 0.657697496284) * (CAST("ADS_sca_2_OUT".scaler_59 AS DOUBLE) - 0.657697496284)) / 2.78262749488) + (-0.5 * 1.852718265 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_60 AS DOUBLE) - 0.865178576018) * (CAST("ADS_sca_2_OUT".scaler_60 AS DOUBLE) - 0.865178576018)) / 1.01495187603) + (-0.5 * 1.41103700225 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_61 AS DOUBLE) - 0.389882025733) * (CAST("ADS_sca_2_OUT".scaler_61 AS DOUBLE) - 0.389882025733)) / 0.652567912878) + (-0.5 * 0.895110949353 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_62 AS DOUBLE) - 0.248767943133) * (CAST("ADS_sca_2_OUT".scaler_62 AS DOUBLE) - 0.248767943133)) / 0.389548806089) + (-0.5 * 1.13133396489 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_63 AS DOUBLE) - 0.845570456319) * (CAST("ADS_sca_2_OUT".scaler_63 AS DOUBLE) - 0.845570456319)) / 0.493346702539) + (-0.5 * 2.49799130509 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_64 AS DOUBLE) - 1.40941157358) * (CAST("ADS_sca_2_OUT".scaler_64 AS DOUBLE) - 1.40941157358)) / 1.93501337515) + (-0.5 * 3.09837276746 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_65 AS DOUBLE) - 0.793244045748) * (CAST("ADS_sca_2_OUT".scaler_65 AS DOUBLE) - 0.793244045748)) / 3.52716947571) AS "Score_2", CAST(NULL AS DOUBLE) AS "LogProba_3", CAST(NULL AS DOUBLE) AS "Proba_3", -2.29357914366 + (-0.5 * -18.8853887705 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_2 AS DOUBLE) - 0.0) * (CAST("ADS_sca_2_OUT".scaler_2 AS DOUBLE) - 0.0)) / 1e-09) + (-0.5 * 2.27880625588 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_3 AS DOUBLE) - 0.445199150307) * (CAST("ADS_sca_2_OUT".scaler_3 AS DOUBLE) - 0.445199150307)) / 1.55415064821) + (-0.5 * 1.38190776523 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_4 AS DOUBLE) - 0.699028987473) * (CAST("ADS_sca_2_OUT".scaler_4 AS DOUBLE) - 0.699028987473)) / 0.633833294738) + (-0.5 * 0.530297793789 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_5 AS DOUBLE) - 0.554575409022) * (CAST("ADS_sca_2_OUT".scaler_5 AS DOUBLE) - 0.554575409022)) / 0.270474008383) + (-0.5 * 0.658865332653 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_6 AS DOUBLE) - 0.577568252318) * (CAST("ADS_sca_2_OUT".scaler_6 AS DOUBLE) - 0.577568252318)) / 0.30758256191) + (-0.5 * 1.52986455251 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_7 AS DOUBLE) - 0.330736487026) * (CAST("ADS_sca_2_OUT".scaler_7 AS DOUBLE) - 0.330736487026)) / 0.734906121407) + (-0.5 * 1.00271021002 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_8 AS DOUBLE) - -0.176574760685) * (CAST("ADS_sca_2_OUT".scaler_8 AS DOUBLE) - -0.176574760685)) / 0.433802092743) + (-0.5 * -3.28827553759 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_9 AS DOUBLE) - -0.118648940261) * (CAST("ADS_sca_2_OUT".scaler_9 AS DOUBLE) - -0.118648940261)) / 0.00593936767083) + (-0.5 * 2.32952596962 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_10 AS DOUBLE) - 0.0901843616573) * (CAST("ADS_sca_2_OUT".scaler_10 AS DOUBLE) - 0.0901843616573)) / 1.63500997167) + (-0.5 * 2.20428600006 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_11 AS DOUBLE) - 0.732364917726) * (CAST("ADS_sca_2_OUT".scaler_11 AS DOUBLE) - 0.732364917726)) / 1.44254502726) + (-0.5 * 0.920327380926 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_12 AS DOUBLE) - 0.446552880279) * (CAST("ADS_sca_2_OUT".scaler_12 AS DOUBLE) - 0.446552880279)) / 0.399496735416) + (-0.5 * 1.6133999117 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_13 AS DOUBLE) - -0.803963763925) * (CAST("ADS_sca_2_OUT".scaler_13 AS DOUBLE) - -0.803963763925)) / 0.798933828368) + (-0.5 * 1.44473962569 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_14 AS DOUBLE) - 0.167862612633) * (CAST("ADS_sca_2_OUT".scaler_14 AS DOUBLE) - 0.167862612633)) / 0.674935977527) + (-0.5 * 1.26610821971 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_15 AS DOUBLE) - 0.655224970775) * (CAST("ADS_sca_2_OUT".scaler_15 AS DOUBLE) - 0.655224970775)) / 0.564525995088) + (-0.5 * 1.81942342156 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_16 AS DOUBLE) - 0.0638094424112) * (CAST("ADS_sca_2_OUT".scaler_16 AS DOUBLE) - 0.0638094424112)) / 0.98171558111) + (-0.5 * -1.28831873781 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_17 AS DOUBLE) - -0.110018133861) * (CAST("ADS_sca_2_OUT".scaler_17 AS DOUBLE) - -0.110018133861)) / 0.0438844250542) + (-0.5 * 3.02801334378 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_18 AS DOUBLE) - 0.105357271828) * (CAST("ADS_sca_2_OUT".scaler_18 AS DOUBLE) - 0.105357271828)) / 3.28752919269) + (-0.5 * 1.75050587495 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_19 AS DOUBLE) - -0.114500403802) * (CAST("ADS_sca_2_OUT".scaler_19 AS DOUBLE) - -0.114500403802)) / 0.916336896063) + (-0.5 * 1.37509469464 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_20 AS DOUBLE) - -1.11771545353) * (CAST("ADS_sca_2_OUT".scaler_20 AS DOUBLE) - -1.11771545353)) / 0.629529621018) + (-0.5 * 0.985333122255 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_21 AS DOUBLE) - -0.666622180097) * (CAST("ADS_sca_2_OUT".scaler_21 AS DOUBLE) - -0.666622180097)) / 0.426328994099) + (-0.5 * 1.01017785772 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_22 AS DOUBLE) - 0.791814659949) * (CAST("ADS_sca_2_OUT".scaler_22 AS DOUBLE) - 0.791814659949)) / 0.437053699758) + (-0.5 * 1.38083327117 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_23 AS DOUBLE) - 0.231028793213) * (CAST("ADS_sca_2_OUT".scaler_23 AS DOUBLE) - 0.231028793213)) / 0.633152610382) + (-0.5 * 0.755857231345 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_24 AS DOUBLE) - -0.292479288145) * (CAST("ADS_sca_2_OUT".scaler_24 AS DOUBLE) - -0.292479288145)) / 0.338910290958) + (-0.5 * -18.8853887705 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_25 AS DOUBLE) - -0.122742661638) * (CAST("ADS_sca_2_OUT".scaler_25 AS DOUBLE) - -0.122742661638)) / 1e-09) + (-0.5 * -18.8853887705 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_26 AS DOUBLE) - -0.0263889906985) * (CAST("ADS_sca_2_OUT".scaler_26 AS DOUBLE) - -0.0263889906985)) / 1e-09) + (-0.5 * -0.0518714492333 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_27 AS DOUBLE) - -0.700421225937) * (CAST("ADS_sca_2_OUT".scaler_27 AS DOUBLE) - -0.700421225937)) / 0.151109805811) + (-0.5 * 0.464063204054 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_28 AS DOUBLE) - -1.22664079578) * (CAST("ADS_sca_2_OUT".scaler_28 AS DOUBLE) - -1.22664079578)) / 0.253139676301) + (-0.5 * 1.65725241712 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_29 AS DOUBLE) - 0.0196727207804) * (CAST("ADS_sca_2_OUT".scaler_29 AS DOUBLE) - 0.0196727207804)) / 0.834748623386) + (-0.5 * 0.492096238651 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_30 AS DOUBLE) - 0.697003281408) * (CAST("ADS_sca_2_OUT".scaler_30 AS DOUBLE) - 0.697003281408)) / 0.260336350628) + (-0.5 * 1.16747542136 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_31 AS DOUBLE) - -0.308631018352) * (CAST("ADS_sca_2_OUT".scaler_31 AS DOUBLE) - -0.308631018352)) / 0.511503093836) + (-0.5 * -2.95168916577 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_32 AS DOUBLE) - -0.600383513373) * (CAST("ADS_sca_2_OUT".scaler_32 AS DOUBLE) - -0.600383513373)) / 0.00831606384055) + (-0.5 * -18.8853887705 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_33 AS DOUBLE) - -0.0528331981319) * (CAST("ADS_sca_2_OUT".scaler_33 AS DOUBLE) - -0.0528331981319)) / 1e-09) + (-0.5 * -18.8853887705 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_34 AS DOUBLE) - 0.0) * (CAST("ADS_sca_2_OUT".scaler_34 AS DOUBLE) - 0.0)) / 1e-09) + (-0.5 * -2.11672536221 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_35 AS DOUBLE) - -0.64478391365) * (CAST("ADS_sca_2_OUT".scaler_35 AS DOUBLE) - -0.64478391365)) / 0.0191662870024) + (-0.5 * -0.111989974263 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_36 AS DOUBLE) - -1.05045520439) * (CAST("ADS_sca_2_OUT".scaler_36 AS DOUBLE) - -1.05045520439)) / 0.142292989509) + (-0.5 * 1.49521714434 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_37 AS DOUBLE) - -0.573449027248) * (CAST("ADS_sca_2_OUT".scaler_37 AS DOUBLE) - -0.573449027248)) / 0.709879584894) + (-0.5 * 1.11589124795 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_38 AS DOUBLE) - 0.269005358089) * (CAST("ADS_sca_2_OUT".scaler_38 AS DOUBLE) - 0.269005358089)) / 0.485786613456) + (-0.5 * 1.47916495228 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_39 AS DOUBLE) - 0.435322250631) * (CAST("ADS_sca_2_OUT".scaler_39 AS DOUBLE) - 0.435322250631)) / 0.698575432401) + (-0.5 * 1.34638044974 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_40 AS DOUBLE) - -0.195717160202) * (CAST("ADS_sca_2_OUT".scaler_40 AS DOUBLE) - -0.195717160202)) / 0.611710213069) + (-0.5 * -18.8853887705 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_41 AS DOUBLE) - 0.0) * (CAST("ADS_sca_2_OUT".scaler_41 AS DOUBLE) - 0.0)) / 1e-09) + (-0.5 * -18.8853887705 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_42 AS DOUBLE) - -0.0651902856676) * (CAST("ADS_sca_2_OUT".scaler_42 AS DOUBLE) - -0.0651902856676)) / 1e-09) + (-0.5 * 0.625855319474 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_43 AS DOUBLE) - -0.362458589264) * (CAST("ADS_sca_2_OUT".scaler_43 AS DOUBLE) - -0.362458589264)) / 0.297595009018) + (-0.5 * 0.482326517473 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_44 AS DOUBLE) - -0.825953554413) * (CAST("ADS_sca_2_OUT".scaler_44 AS DOUBLE) - -0.825953554413)) / 0.257805320928) + (-0.5 * 0.191534136952 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_45 AS DOUBLE) - -0.972750772475) * (CAST("ADS_sca_2_OUT".scaler_45 AS DOUBLE) - -0.972750772475)) / 0.192753534505) + (-0.5 * 1.48566558936 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_46 AS DOUBLE) - -0.539223704147) * (CAST("ADS_sca_2_OUT".scaler_46 AS DOUBLE) - -0.539223704147)) / 0.703131410096) + (-0.5 * 1.02300336046 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_47 AS DOUBLE) - 0.63884044525) * (CAST("ADS_sca_2_OUT".scaler_47 AS DOUBLE) - 0.63884044525)) / 0.442695233603) + (-0.5 * 1.93138729305 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_48 AS DOUBLE) - 0.709880452733) * (CAST("ADS_sca_2_OUT".scaler_48 AS DOUBLE) - 0.709880452733)) / 1.09802183236) + (-0.5 * -18.8853887705 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_49 AS DOUBLE) - -0.0939680434916) * (CAST("ADS_sca_2_OUT".scaler_49 AS DOUBLE) - -0.0939680434916)) / 1e-09) + (-0.5 * -18.8853887705 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_50 AS DOUBLE) - -0.0396300945423) * (CAST("ADS_sca_2_OUT".scaler_50 AS DOUBLE) - -0.0396300945423)) / 1e-09) + (-0.5 * 2.18950296392 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_51 AS DOUBLE) - 0.110617956735) * (CAST("ADS_sca_2_OUT".scaler_51 AS DOUBLE) - 0.110617956735)) / 1.42137668369) + (-0.5 * 1.66311114297 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_52 AS DOUBLE) - -0.0600854362031) * (CAST("ADS_sca_2_OUT".scaler_52 AS DOUBLE) - -0.0600854362031)) / 0.839653540982) + (-0.5 * 1.09670102864 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_53 AS DOUBLE) - -0.645763135598) * (CAST("ADS_sca_2_OUT".scaler_53 AS DOUBLE) - -0.645763135598)) / 0.476553141348) + (-0.5 * 1.72972549536 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_54 AS DOUBLE) - -0.277755244434) * (CAST("ADS_sca_2_OUT".scaler_54 AS DOUBLE) - -0.277755244434)) / 0.897491552389) + (-0.5 * 1.05397323492 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_55 AS DOUBLE) - 0.667006565583) * (CAST("ADS_sca_2_OUT".scaler_55 AS DOUBLE) - 0.667006565583)) / 0.456619959972) + (-0.5 * 1.73964679152 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_56 AS DOUBLE) - 0.477148121416) * (CAST("ADS_sca_2_OUT".scaler_56 AS DOUBLE) - 0.477148121416)) / 0.906440149315) + (-0.5 * 0.474039260765 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_57 AS DOUBLE) - -0.133023095361) * (CAST("ADS_sca_2_OUT".scaler_57 AS DOUBLE) - -0.133023095361)) / 0.255677650506) + (-0.5 * -18.8853887705 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_58 AS DOUBLE) - -0.0263889906985) * (CAST("ADS_sca_2_OUT".scaler_58 AS DOUBLE) - -0.0263889906985)) / 1e-09) + (-0.5 * 2.22328689269 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_59 AS DOUBLE) - 0.291453925343) * (CAST("ADS_sca_2_OUT".scaler_59 AS DOUBLE) - 0.291453925343)) / 1.47021673145) + (-0.5 * 1.53060247938 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_60 AS DOUBLE) - 0.780205922968) * (CAST("ADS_sca_2_OUT".scaler_60 AS DOUBLE) - 0.780205922968)) / 0.735448628523) + (-0.5 * 0.222540754165 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_61 AS DOUBLE) - 0.6119525873) * (CAST("ADS_sca_2_OUT".scaler_61 AS DOUBLE) - 0.6119525873)) / 0.19882379232) + (-0.5 * 0.844933032185 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_62 AS DOUBLE) - 0.453613129119) * (CAST("ADS_sca_2_OUT".scaler_62 AS DOUBLE) - 0.453613129119)) / 0.370484365238) + (-0.5 * 1.36872509469 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_63 AS DOUBLE) - 0.34417030046) * (CAST("ADS_sca_2_OUT".scaler_63 AS DOUBLE) - 0.34417030046)) / 0.625532512681) + (-0.5 * 1.06090587956 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_64 AS DOUBLE) - -0.144693280444) * (CAST("ADS_sca_2_OUT".scaler_64 AS DOUBLE) - -0.144693280444)) / 0.459796542226) + (-0.5 * -0.147898311509 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_65 AS DOUBLE) - -0.158453446984) * (CAST("ADS_sca_2_OUT".scaler_65 AS DOUBLE) - -0.158453446984)) / 0.137274133509) AS "Score_3", CAST(NULL AS DOUBLE) AS "LogProba_4", CAST(NULL AS DOUBLE) AS "Proba_4", -2.25303304926 + (-0.5 * -18.8853887705 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_2 AS DOUBLE) - 0.0) * (CAST("ADS_sca_2_OUT".scaler_2 AS DOUBLE) - 0.0)) / 1e-09) + (-0.5 * -18.8853887705 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_3 AS DOUBLE) - -0.332897637569) * (CAST("ADS_sca_2_OUT".scaler_3 AS DOUBLE) - -0.332897637569)) / 1e-09) + (-0.5 * -0.560338100514 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_4 AS DOUBLE) - -0.99137948331) * (CAST("ADS_sca_2_OUT".scaler_4 AS DOUBLE) - -0.99137948331)) / 0.0908800142759) + (-0.5 * 2.11409348947 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_5 AS DOUBLE) - -1.09511080038) * (CAST("ADS_sca_2_OUT".scaler_5 AS DOUBLE) - -1.09511080038)) / 1.31813310756) + (-0.5 * 1.70054939632 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_6 AS DOUBLE) - -0.104904676458) * (CAST("ADS_sca_2_OUT".scaler_6 AS DOUBLE) - -0.104904676458)) / 0.871684554373) + (-0.5 * 0.600963317106 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_7 AS DOUBLE) - -0.687862706956) * (CAST("ADS_sca_2_OUT".scaler_7 AS DOUBLE) - -0.687862706956)) / 0.290278709786) + (-0.5 * 0.0706517864411 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_8 AS DOUBLE) - -0.339420928984) * (CAST("ADS_sca_2_OUT".scaler_8 AS DOUBLE) - -0.339420928984)) / 0.170806271491) + (-0.5 * 2.22910550394 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_9 AS DOUBLE) - 0.0167717223652) * (CAST("ADS_sca_2_OUT".scaler_9 AS DOUBLE) - 0.0167717223652)) / 1.4787962874) + (-0.5 * -18.8853887705 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_10 AS DOUBLE) - -0.0610349238754) * (CAST("ADS_sca_2_OUT".scaler_10 AS DOUBLE) - -0.0610349238754)) / 1e-09) + (-0.5 * -1.90198794229 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_11 AS DOUBLE) - -0.599446648735) * (CAST("ADS_sca_2_OUT".scaler_11 AS DOUBLE) - -0.599446648735)) / 0.023757309945) + (-0.5 * 1.1668296365 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_12 AS DOUBLE) - -1.28576910227) * (CAST("ADS_sca_2_OUT".scaler_12 AS DOUBLE) - -1.28576910227)) / 0.511172879518) + (-0.5 * 1.48403898524 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_13 AS DOUBLE) - 0.292606355565) * (CAST("ADS_sca_2_OUT".scaler_13 AS DOUBLE) - 0.292606355565)) / 0.70198862333) + (-0.5 * 2.0649213306 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_14 AS DOUBLE) - -0.3777018908) * (CAST("ADS_sca_2_OUT".scaler_14 AS DOUBLE) - -0.3777018908)) / 1.25488541319) + (-0.5 * 0.852600197807 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_15 AS DOUBLE) - -0.999969261115) * (CAST("ADS_sca_2_OUT".scaler_15 AS DOUBLE) - -0.999969261115)) / 0.373335847652) + (-0.5 * 1.57739086033 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_16 AS DOUBLE) - -0.159764066388) * (CAST("ADS_sca_2_OUT".scaler_16 AS DOUBLE) - -0.159764066388)) / 0.770676786955) + (-0.5 * 2.98955146016 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_17 AS DOUBLE) - 0.272455521519) * (CAST("ADS_sca_2_OUT".scaler_17 AS DOUBLE) - 0.272455521519)) / 3.16348539778) + (-0.5 * -18.8853887705 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_18 AS DOUBLE) - -0.0457389353746) * (CAST("ADS_sca_2_OUT".scaler_18 AS DOUBLE) - -0.0457389353746)) / 1e-09) + (-0.5 * 0.454980072664 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_19 AS DOUBLE) - -0.520600231681) * (CAST("ADS_sca_2_OUT".scaler_19 AS DOUBLE) - -0.520600231681)) / 0.250850786242) + (-0.5 * 1.56986692335 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_20 AS DOUBLE) - 0.0674274265286) * (CAST("ADS_sca_2_OUT".scaler_20 AS DOUBLE) - 0.0674274265286)) / 0.764900022635) + (-0.5 * 1.07045156314 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_21 AS DOUBLE) - 0.760046714551) * (CAST("ADS_sca_2_OUT".scaler_21 AS DOUBLE) - 0.760046714551)) / 0.464206629693) + (-0.5 * 1.56565213184 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_22 AS DOUBLE) - -0.320233958254) * (CAST("ADS_sca_2_OUT".scaler_22 AS DOUBLE) - -0.320233958254)) / 0.761682913) + (-0.5 * 1.49756781577 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_23 AS DOUBLE) - -0.304669482557) * (CAST("ADS_sca_2_OUT".scaler_23 AS DOUBLE) - -0.304669482557)) / 0.711550241367) + (-0.5 * 2.85333135284 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_24 AS DOUBLE) - 0.636816575872) * (CAST("ADS_sca_2_OUT".scaler_24 AS DOUBLE) - 0.636816575872)) / 2.76061722351) + (-0.5 * 3.69992672365 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_25 AS DOUBLE) - 0.665364532757) * (CAST("ADS_sca_2_OUT".scaler_25 AS DOUBLE) - 0.665364532757)) / 6.43691673262) + (-0.5 * 4.08496170953 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_26 AS DOUBLE) - 0.224743324756) * (CAST("ADS_sca_2_OUT".scaler_26 AS DOUBLE) - 0.224743324756)) / 9.46011598086) + (-0.5 * 1.79107580434 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_27 AS DOUBLE) - 0.661401053014) * (CAST("ADS_sca_2_OUT".scaler_27 AS DOUBLE) - 0.661401053014)) / 0.954277029784) + (-0.5 * -0.0617054531438 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_28 AS DOUBLE) - 0.860783424518) * (CAST("ADS_sca_2_OUT".scaler_28 AS DOUBLE) - 0.860783424518)) / 0.149631074233) + (-0.5 * 1.40283429594 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_29 AS DOUBLE) - -0.376669205302) * (CAST("ADS_sca_2_OUT".scaler_29 AS DOUBLE) - -0.376669205302)) / 0.64723698386) + (-0.5 * 1.8148485921 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_30 AS DOUBLE) - -0.385142869671) * (CAST("ADS_sca_2_OUT".scaler_30 AS DOUBLE) - -0.385142869671)) / 0.977234657292) + (-0.5 * 1.49072826131 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_31 AS DOUBLE) - 0.503365126802) * (CAST("ADS_sca_2_OUT".scaler_31 AS DOUBLE) - 0.503365126802)) / 0.706700159845) + (-0.5 * 2.47023958559 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_32 AS DOUBLE) - 1.0175516177) * (CAST("ADS_sca_2_OUT".scaler_32 AS DOUBLE) - 1.0175516177)) / 1.88205171434) + (-0.5 * 4.066850324 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_33 AS DOUBLE) - 0.449956905944) * (CAST("ADS_sca_2_OUT".scaler_33 AS DOUBLE) - 0.449956905944)) / 9.29032241282) + (-0.5 * -18.8853887705 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_34 AS DOUBLE) - 0.0) * (CAST("ADS_sca_2_OUT".scaler_34 AS DOUBLE) - 0.0)) / 1e-09) + (-0.5 * 1.8958191939 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_35 AS DOUBLE) - 1.79067397712) * (CAST("ADS_sca_2_OUT".scaler_35 AS DOUBLE) - 1.79067397712)) / 1.05965366912) + (-0.5 * -0.107638033313 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_36 AS DOUBLE) - 1.10042669856) * (CAST("ADS_sca_2_OUT".scaler_36 AS DOUBLE) - 1.10042669856)) / 0.142913589625) + (-0.5 * 1.47388622658 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_37 AS DOUBLE) - 0.151066031419) * (CAST("ADS_sca_2_OUT".scaler_37 AS DOUBLE) - 0.151066031419)) / 0.694897560096) + (-0.5 * 1.0468242991 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_38 AS DOUBLE) - 0.507156092037) * (CAST("ADS_sca_2_OUT".scaler_38 AS DOUBLE) - 0.507156092037)) / 0.453367253731) + (-0.5 * 0.730638325566 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_39 AS DOUBLE) - 0.872321229236) * (CAST("ADS_sca_2_OUT".scaler_39 AS DOUBLE) - 0.872321229236)) / 0.330470216301) + (-0.5 * 1.88149822446 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_40 AS DOUBLE) - 0.701093255329) * (CAST("ADS_sca_2_OUT".scaler_40 AS DOUBLE) - 0.701093255329)) / 1.04458654672) + (-0.5 * -18.8853887705 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_41 AS DOUBLE) - 0.0) * (CAST("ADS_sca_2_OUT".scaler_41 AS DOUBLE) - 0.0)) / 1e-09) + (-0.5 * 4.05404545368 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_42 AS DOUBLE) - 0.55519673754) * (CAST("ADS_sca_2_OUT".scaler_42 AS DOUBLE) - 0.55519673754)) / 9.17211944109) + (-0.5 * 2.96593198286 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_43 AS DOUBLE) - 1.58400681163) * (CAST("ADS_sca_2_OUT".scaler_43 AS DOUBLE) - 1.58400681163)) / 3.08964104176) + (-0.5 * 1.55316535156 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_44 AS DOUBLE) - 0.641105541182) * (CAST("ADS_sca_2_OUT".scaler_44 AS DOUBLE) - 0.641105541182)) / 0.752231080114) + (-0.5 * 1.17671175894 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_45 AS DOUBLE) - 0.765114156806) * (CAST("ADS_sca_2_OUT".scaler_45 AS DOUBLE) - 0.765114156806)) / 0.516249394561) + (-0.5 * 0.155414989784 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_46 AS DOUBLE) - 1.07628662422) * (CAST("ADS_sca_2_OUT".scaler_46 AS DOUBLE) - 1.07628662422)) / 0.185915673449) + (-0.5 * 1.56176328319 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_47 AS DOUBLE) - 0.385468776571) * (CAST("ADS_sca_2_OUT".scaler_47 AS DOUBLE) - 0.385468776571)) / 0.758726595497) + (-0.5 * 0.376068359952 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_48 AS DOUBLE) - -0.416736653718) * (CAST("ADS_sca_2_OUT".scaler_48 AS DOUBLE) - -0.416736653718)) / 0.231816607122) + (-0.5 * -18.8853887705 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_49 AS DOUBLE) - -0.0939680434916) * (CAST("ADS_sca_2_OUT".scaler_49 AS DOUBLE) - -0.0939680434916)) / 1e-09) + (-0.5 * 3.95456125961 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_50 AS DOUBLE) - 0.250479155877) * (CAST("ADS_sca_2_OUT".scaler_50 AS DOUBLE) - 0.250479155877)) / 8.30355879348) + (-0.5 * 2.63748132709 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_51 AS DOUBLE) - 0.206699649844) * (CAST("ADS_sca_2_OUT".scaler_51 AS DOUBLE) - 0.206699649844)) / 2.22466036869) + (-0.5 * 1.33075076259 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_52 AS DOUBLE) - -0.846550677015) * (CAST("ADS_sca_2_OUT".scaler_52 AS DOUBLE) - -0.846550677015)) / 0.602223702527) + (-0.5 * 1.93818154915 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_53 AS DOUBLE) - -0.355720899583) * (CAST("ADS_sca_2_OUT".scaler_53 AS DOUBLE) - -0.355720899583)) / 1.10550747478) + (-0.5 * 1.0452843869 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_54 AS DOUBLE) - 0.72037658068) * (CAST("ADS_sca_2_OUT".scaler_54 AS DOUBLE) - 0.72037658068)) / 0.452669645235) + (-0.5 * 1.37618698737 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_55 AS DOUBLE) - -0.752760047836) * (CAST("ADS_sca_2_OUT".scaler_55 AS DOUBLE) - -0.752760047836)) / 0.630217627329) + (-0.5 * -5.30118053796 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_56 AS DOUBLE) - -0.750906834562) * (CAST("ADS_sca_2_OUT".scaler_56 AS DOUBLE) - -0.750906834562)) / 0.000793499534718) + (-0.5 * -18.8853887705 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_57 AS DOUBLE) - -0.213704402962) * (CAST("ADS_sca_2_OUT".scaler_57 AS DOUBLE) - -0.213704402962)) / 1e-09) + (-0.5 * -18.8853887705 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_58 AS DOUBLE) - -0.0263889906985) * (CAST("ADS_sca_2_OUT".scaler_58 AS DOUBLE) - -0.0263889906985)) / 1e-09) + (-0.5 * -0.662098255535 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_59 AS DOUBLE) - -0.265553580346) * (CAST("ADS_sca_2_OUT".scaler_59 AS DOUBLE) - -0.265553580346)) / 0.0820870243471) + (-0.5 * -0.24440824167 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_60 AS DOUBLE) - -0.969425679022) * (CAST("ADS_sca_2_OUT".scaler_60 AS DOUBLE) - -0.969425679022)) / 0.124645034159) + (-0.5 * 2.23066112214 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_61 AS DOUBLE) - -0.970162656097) * (CAST("ADS_sca_2_OUT".scaler_61 AS DOUBLE) - -0.970162656097)) / 1.48109852006) + (-0.5 * 1.55308685982 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_62 AS DOUBLE) - 0.0127815762502) * (CAST("ADS_sca_2_OUT".scaler_62 AS DOUBLE) - 0.0127815762502)) / 0.752172038506) + (-0.5 * 0.566344456557 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_63 AS DOUBLE) - -0.790783764776) * (CAST("ADS_sca_2_OUT".scaler_63 AS DOUBLE) - -0.790783764776)) / 0.280401546121) + (-0.5 * -18.8853887705 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_64 AS DOUBLE) - -0.505536556786) * (CAST("ADS_sca_2_OUT".scaler_64 AS DOUBLE) - -0.505536556786)) / 1e-09) + (-0.5 * -18.8853887705 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_65 AS DOUBLE) - -0.201665973115) * (CAST("ADS_sca_2_OUT".scaler_65 AS DOUBLE) - -0.201665973115)) / 1e-09) AS "Score_4", CAST(NULL AS DOUBLE) AS "LogProba_5", CAST(NULL AS DOUBLE) AS "Proba_5", -2.3004995865 + (-0.5 * -18.8853887705 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_2 AS DOUBLE) - 0.0) * (CAST("ADS_sca_2_OUT".scaler_2 AS DOUBLE) - 0.0)) / 1e-09) + (-0.5 * 3.01381639749 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_3 AS DOUBLE) - 0.599467645403) * (CAST("ADS_sca_2_OUT".scaler_3 AS DOUBLE) - 0.599467645403)) / 3.24118606117) + (-0.5 * 1.49406327513 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_4 AS DOUBLE) - 0.960335193214) * (CAST("ADS_sca_2_OUT".scaler_4 AS DOUBLE) - 0.960335193214)) / 0.709060949089) + (-0.5 * 1.00724113105 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_5 AS DOUBLE) - 0.271646689838) * (CAST("ADS_sca_2_OUT".scaler_5 AS DOUBLE) - 0.271646689838)) / 0.435772075314) + (-0.5 * 0.775583234555 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_6 AS DOUBLE) - 0.510251617222) * (CAST("ADS_sca_2_OUT".scaler_6 AS DOUBLE) - 0.510251617222)) / 0.345662009727) + (-0.5 * 1.12827056271 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_7 AS DOUBLE) - 1.14323942748) * (CAST("ADS_sca_2_OUT".scaler_7 AS DOUBLE) - 1.14323942748)) / 0.491837695704) + (-0.5 * 2.37974034151 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_8 AS DOUBLE) - 0.798502728929) * (CAST("ADS_sca_2_OUT".scaler_8 AS DOUBLE) - 0.798502728929)) / 1.71920723571) + (-0.5 * -1.09668882984 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_9 AS DOUBLE) - -0.0927368490911) * (CAST("ADS_sca_2_OUT".scaler_9 AS DOUBLE) - -0.0927368490911)) / 0.0531537885578) + (-0.5 * 1.65021967534 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_10 AS DOUBLE) - 0.0150997858546) * (CAST("ADS_sca_2_OUT".scaler_10 AS DOUBLE) - 0.0150997858546)) / 0.828898646672) + (-0.5 * 2.07180059515 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_11 AS DOUBLE) - 0.531903282635) * (CAST("ADS_sca_2_OUT".scaler_11 AS DOUBLE) - 0.531903282635)) / 1.26354786342) + (-0.5 * 0.0774726748345 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_12 AS DOUBLE) - 0.80709909984) * (CAST("ADS_sca_2_OUT".scaler_12 AS DOUBLE) - 0.80709909984)) / 0.171975304395) + (-0.5 * 1.65731604735 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_13 AS DOUBLE) - -0.00603335254714) * (CAST("ADS_sca_2_OUT".scaler_13 AS DOUBLE) - -0.00603335254714)) / 0.83480174033) + (-0.5 * 1.29207822781 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_14 AS DOUBLE) - -0.456133897506) * (CAST("ADS_sca_2_OUT".scaler_14 AS DOUBLE) - -0.456133897506)) / 0.579378768305) + (-0.5 * 1.03027207153 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_15 AS DOUBLE) - -0.356108887055) * (CAST("ADS_sca_2_OUT".scaler_15 AS DOUBLE) - -0.356108887055)) / 0.445924780452) + (-0.5 * 1.50377572064 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_16 AS DOUBLE) - 0.0353966616249) * (CAST("ADS_sca_2_OUT".scaler_16 AS DOUBLE) - 0.0353966616249)) / 0.715981216881) + (-0.5 * -0.81288942842 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_17 AS DOUBLE) - -0.101971802498) * (CAST("ADS_sca_2_OUT".scaler_17 AS DOUBLE) - -0.101971802498)) / 0.0705970800199) + (-0.5 * -18.8853887705 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_18 AS DOUBLE) - -0.0457389353746) * (CAST("ADS_sca_2_OUT".scaler_18 AS DOUBLE) - -0.0457389353746)) / 1e-09) + (-0.5 * 2.18901900664 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_19 AS DOUBLE) - 0.82650751623) * (CAST("ADS_sca_2_OUT".scaler_19 AS DOUBLE) - 0.82650751623)) / 1.42068896452) + (-0.5 * -0.0649540687781 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_20 AS DOUBLE) - 0.781211026125) * (CAST("ADS_sca_2_OUT".scaler_20 AS DOUBLE) - 0.781211026125)) / 0.149145769097) + (-0.5 * 1.38293564327 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_21 AS DOUBLE) - -0.301808983769) * (CAST("ADS_sca_2_OUT".scaler_21 AS DOUBLE) - -0.301808983769)) / 0.63448513301) + (-0.5 * 0.368184103368 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_22 AS DOUBLE) - -0.876639077589) * (CAST("ADS_sca_2_OUT".scaler_22 AS DOUBLE) - -0.876639077589)) / 0.229996091647) + (-0.5 * -1.17645983601 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_23 AS DOUBLE) - -1.19605144353) * (CAST("ADS_sca_2_OUT".scaler_23 AS DOUBLE) - -1.19605144353)) / 0.0490783684469) + (-0.5 * -2.34110950481 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_24 AS DOUBLE) - -0.539058586609) * (CAST("ADS_sca_2_OUT".scaler_24 AS DOUBLE) - -0.539058586609)) / 0.0153140193733) + (-0.5 * -18.8853887705 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_25 AS DOUBLE) - -0.122742661638) * (CAST("ADS_sca_2_OUT".scaler_25 AS DOUBLE) - -0.122742661638)) / 1e-09) + (-0.5 * -18.8853887705 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_26 AS DOUBLE) - -0.0263889906985) * (CAST("ADS_sca_2_OUT".scaler_26 AS DOUBLE) - -0.0263889906985)) / 1e-09) + (-0.5 * 2.18486839917 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_27 AS DOUBLE) - 0.995625006961) * (CAST("ADS_sca_2_OUT".scaler_27 AS DOUBLE) - 0.995625006961)) / 1.41480446287) + (-0.5 * 0.193896884845 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_28 AS DOUBLE) - 0.852320628096) * (CAST("ADS_sca_2_OUT".scaler_28 AS DOUBLE) - 0.852320628096)) / 0.193209500967) + (-0.5 * 1.09950701782 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_29 AS DOUBLE) - 0.541260999331) * (CAST("ADS_sca_2_OUT".scaler_29 AS DOUBLE) - 0.541260999331)) / 0.47789222215) + (-0.5 * 1.67714581241 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_30 AS DOUBLE) - -0.152126275256) * (CAST("ADS_sca_2_OUT".scaler_30 AS DOUBLE) - -0.152126275256)) / 0.851520883192) + (-0.5 * 1.51998843501 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_31 AS DOUBLE) - -0.585110694893) * (CAST("ADS_sca_2_OUT".scaler_31 AS DOUBLE) - -0.585110694893)) / 0.727683825034) + (-0.5 * -0.511819105766 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_32 AS DOUBLE) - -0.522566948346) * (CAST("ADS_sca_2_OUT".scaler_32 AS DOUBLE) - -0.522566948346)) / 0.0953981424229) + (-0.5 * -18.8853887705 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_33 AS DOUBLE) - -0.0528331981319) * (CAST("ADS_sca_2_OUT".scaler_33 AS DOUBLE) - -0.0528331981319)) / 1e-09) + (-0.5 * -18.8853887705 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_34 AS DOUBLE) - 0.0) * (CAST("ADS_sca_2_OUT".scaler_34 AS DOUBLE) - 0.0)) / 1e-09) + (-0.5 * 1.32275472845 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_35 AS DOUBLE) - -0.0725927275279) * (CAST("ADS_sca_2_OUT".scaler_35 AS DOUBLE) - -0.0725927275279)) / 0.597427502085) + (-0.5 * 1.5054393254 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_36 AS DOUBLE) - 0.0419874735587) * (CAST("ADS_sca_2_OUT".scaler_36 AS DOUBLE) - 0.0419874735587)) / 0.717173317959) + (-0.5 * 1.72900894978 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_37 AS DOUBLE) - -0.105584972197) * (CAST("ADS_sca_2_OUT".scaler_37 AS DOUBLE) - -0.105584972197)) / 0.896848689129) + (-0.5 * 1.7416268128 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_38 AS DOUBLE) - -0.234536250611) * (CAST("ADS_sca_2_OUT".scaler_38 AS DOUBLE) - -0.234536250611)) / 0.908236698112) + (-0.5 * 1.92212600776 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_39 AS DOUBLE) - -0.150606294017) * (CAST("ADS_sca_2_OUT".scaler_39 AS DOUBLE) - -0.150606294017)) / 1.08789968332) + (-0.5 * 1.47258378852 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_40 AS DOUBLE) - -0.293949183698) * (CAST("ADS_sca_2_OUT".scaler_40 AS DOUBLE) - -0.293949183698)) / 0.693993088199) + (-0.5 * -18.8853887705 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_41 AS DOUBLE) - 0.0) * (CAST("ADS_sca_2_OUT".scaler_41 AS DOUBLE) - 0.0)) / 1e-09) + (-0.5 * -18.8853887705 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_42 AS DOUBLE) - -0.0651902856676) * (CAST("ADS_sca_2_OUT".scaler_42 AS DOUBLE) - -0.0651902856676)) / 1e-09) + (-0.5 * -0.341989161616 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_43 AS DOUBLE) - -0.435056632442) * (CAST("ADS_sca_2_OUT".scaler_43 AS DOUBLE) - -0.435056632442)) / 0.113056653441) + (-0.5 * 0.177767552676 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_44 AS DOUBLE) - -0.863683787061) * (CAST("ADS_sca_2_OUT".scaler_44 AS DOUBLE) - -0.863683787061)) / 0.190118158412) + (-0.5 * 1.3934204041 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_45 AS DOUBLE) - -0.579097272432) * (CAST("ADS_sca_2_OUT".scaler_45 AS DOUBLE) - -0.579097272432)) / 0.641172554625) + (-0.5 * 1.7106443307 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_46 AS DOUBLE) - -0.0809040741295) * (CAST("ADS_sca_2_OUT".scaler_46 AS DOUBLE) - -0.0809040741295)) / 0.880528718271) + (-0.5 * 1.878094439 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_47 AS DOUBLE) - 0.000626774317745) * (CAST("ADS_sca_2_OUT".scaler_47 AS DOUBLE) - 0.000626774317745)) / 1.04103704251) + (-0.5 * 1.59854234503 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_48 AS DOUBLE) - -0.225081918754) * (CAST("ADS_sca_2_OUT".scaler_48 AS DOUBLE) - -0.225081918754)) / 0.787151361883) + (-0.5 * -18.8853887705 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_49 AS DOUBLE) - -0.0939680434916) * (CAST("ADS_sca_2_OUT".scaler_49 AS DOUBLE) - -0.0939680434916)) / 1e-09) + (-0.5 * -18.8853887705 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_50 AS DOUBLE) - -0.0396300945423) * (CAST("ADS_sca_2_OUT".scaler_50 AS DOUBLE) - -0.0396300945423)) / 1e-09) + (-0.5 * 1.81101149677 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_51 AS DOUBLE) - 0.0472165168636) * (CAST("ADS_sca_2_OUT".scaler_51 AS DOUBLE) - 0.0472165168636)) / 0.973492099621) + (-0.5 * 1.38625160579 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_52 AS DOUBLE) - -0.330347991265) * (CAST("ADS_sca_2_OUT".scaler_52 AS DOUBLE) - -0.330347991265)) / 0.636592554062) + (-0.5 * 1.77189732833 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_53 AS DOUBLE) - -0.280469202206) * (CAST("ADS_sca_2_OUT".scaler_53 AS DOUBLE) - -0.280469202206)) / 0.936149832291) + (-0.5 * 1.59944835857 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_54 AS DOUBLE) - 0.235429687068) * (CAST("ADS_sca_2_OUT".scaler_54 AS DOUBLE) - 0.235429687068)) / 0.787864854846) + (-0.5 * 1.76052068193 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_55 AS DOUBLE) - -0.230883987196) * (CAST("ADS_sca_2_OUT".scaler_55 AS DOUBLE) - -0.230883987196)) / 0.925559939621) + (-0.5 * 0.816871614758 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_56 AS DOUBLE) - -0.468943603476) * (CAST("ADS_sca_2_OUT".scaler_56 AS DOUBLE) - -0.468943603476)) / 0.360232561603) + (-0.5 * -18.8853887705 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_57 AS DOUBLE) - -0.213704402962) * (CAST("ADS_sca_2_OUT".scaler_57 AS DOUBLE) - -0.213704402962)) / 1e-09) + (-0.5 * -18.8853887705 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_58 AS DOUBLE) - -0.0263889906985) * (CAST("ADS_sca_2_OUT".scaler_58 AS DOUBLE) - -0.0263889906985)) / 1e-09) + (-0.5 * 2.89233898358 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_59 AS DOUBLE) - 0.614211939851) * (CAST("ADS_sca_2_OUT".scaler_59 AS DOUBLE) - 0.614211939851)) / 2.87043020907) + (-0.5 * 1.4469473227 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_60 AS DOUBLE) - 0.946638676581) * (CAST("ADS_sca_2_OUT".scaler_60 AS DOUBLE) - 0.946638676581)) / 0.676427677671) + (-0.5 * 0.0874878496316 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_61 AS DOUBLE) - 0.606800783502) * (CAST("ADS_sca_2_OUT".scaler_61 AS DOUBLE) - 0.606800783502)) / 0.173706320877) + (-0.5 * 1.97899097766 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_62 AS DOUBLE) - -0.530582969638) * (CAST("ADS_sca_2_OUT".scaler_62 AS DOUBLE) - -0.530582969638)) / 1.15155581568) + (-0.5 * 1.03634280895 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_63 AS DOUBLE) - -0.718046750994) * (CAST("ADS_sca_2_OUT".scaler_63 AS DOUBLE) - -0.718046750994)) / 0.448640106382) + (-0.5 * -1.71915339152 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_64 AS DOUBLE) - -0.465164430961) * (CAST("ADS_sca_2_OUT".scaler_64 AS DOUBLE) - -0.465164430961)) / 0.0285234005141) + (-0.5 * -18.8853887705 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_65 AS DOUBLE) - -0.201665973115) * (CAST("ADS_sca_2_OUT".scaler_65 AS DOUBLE) - -0.201665973115)) / 1e-09) AS "Score_5", CAST(NULL AS DOUBLE) AS "LogProba_6", CAST(NULL AS DOUBLE) AS "Proba_6", -2.31448582848 + (-0.5 * -18.8853887705 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_2 AS DOUBLE) - 0.0) * (CAST("ADS_sca_2_OUT".scaler_2 AS DOUBLE) - 0.0)) / 1e-09) + (-0.5 * -18.8853887705 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_3 AS DOUBLE) - -0.332897637569) * (CAST("ADS_sca_2_OUT".scaler_3 AS DOUBLE) - -0.332897637569)) / 1e-09) + (-0.5 * -0.151081203337 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_4 AS DOUBLE) - -0.83920762338) * (CAST("ADS_sca_2_OUT".scaler_4 AS DOUBLE) - -0.83920762338)) / 0.136837899403) + (-0.5 * 1.21409049519 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_5 AS DOUBLE) - -0.123582000458) * (CAST("ADS_sca_2_OUT".scaler_5 AS DOUBLE) - -0.123582000458)) / 0.535911324363) + (-0.5 * 2.24449830894 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_6 AS DOUBLE) - -0.48731449931) * (CAST("ADS_sca_2_OUT".scaler_6 AS DOUBLE) - -0.48731449931)) / 1.50173520451) + (-0.5 * 0.239498351335 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_7 AS DOUBLE) - -0.770737262104) * (CAST("ADS_sca_2_OUT".scaler_7 AS DOUBLE) - -0.770737262104)) / 0.202224115268) + (-0.5 * -4.86718163136 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_8 AS DOUBLE) - -0.409974305636) * (CAST("ADS_sca_2_OUT".scaler_8 AS DOUBLE) - -0.409974305636)) / 0.00122470081463) + (-0.5 * -18.8853887705 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_9 AS DOUBLE) - -0.125071214148) * (CAST("ADS_sca_2_OUT".scaler_9 AS DOUBLE) - -0.125071214148)) / 1e-09) + (-0.5 * -18.8853887705 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_10 AS DOUBLE) - -0.0610349238754) * (CAST("ADS_sca_2_OUT".scaler_10 AS DOUBLE) - -0.0610349238754)) / 1e-09) + (-0.5 * -4.07183637757 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_11 AS DOUBLE) - -0.613511688803) * (CAST("ADS_sca_2_OUT".scaler_11 AS DOUBLE) - -0.613511688803)) / 0.00271296419224) + (-0.5 * 1.18675760758 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_12 AS DOUBLE) - -0.585810817274) * (CAST("ADS_sca_2_OUT".scaler_12 AS DOUBLE) - -0.585810817274)) / 0.521461694996) + (-0.5 * 0.455281596025 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_13 AS DOUBLE) - 0.649042467826) * (CAST("ADS_sca_2_OUT".scaler_13 AS DOUBLE) - 0.649042467826)) / 0.250926435019) + (-0.5 * 1.77160870907 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_14 AS DOUBLE) - -0.826368093031) * (CAST("ADS_sca_2_OUT".scaler_14 AS DOUBLE) - -0.826368093031)) / 0.935879680408) + (-0.5 * -0.255463418242 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_15 AS DOUBLE) - -1.2039474283) * (CAST("ADS_sca_2_OUT".scaler_15 AS DOUBLE) - -1.2039474283)) / 0.123274650173) + (-0.5 * -2.0000739357 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_16 AS DOUBLE) - -0.502979032134) * (CAST("ADS_sca_2_OUT".scaler_16 AS DOUBLE) - -0.502979032134)) / 0.021537686839) + (-0.5 * -18.8853887705 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_17 AS DOUBLE) - -0.133504722703) * (CAST("ADS_sca_2_OUT".scaler_17 AS DOUBLE) - -0.133504722703)) / 1e-09) + (-0.5 * -18.8853887705 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_18 AS DOUBLE) - -0.0457389353746) * (CAST("ADS_sca_2_OUT".scaler_18 AS DOUBLE) - -0.0457389353746)) / 1e-09) + (-0.5 * -0.393036483749 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_19 AS DOUBLE) - -0.515983889741) * (CAST("ADS_sca_2_OUT".scaler_19 AS DOUBLE) - -0.515983889741)) / 0.107430242378) + (-0.5 * 0.991887932444 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_20 AS DOUBLE) - 0.486744385247) * (CAST("ADS_sca_2_OUT".scaler_20 AS DOUBLE) - 0.486744385247)) / 0.429132678505) + (-0.5 * 1.53042384937 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_21 AS DOUBLE) - 0.43115057658) * (CAST("ADS_sca_2_OUT".scaler_21 AS DOUBLE) - 0.43115057658)) / 0.735317267059) + (-0.5 * -0.471847318361 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_22 AS DOUBLE) - -1.015494387) * (CAST("ADS_sca_2_OUT".scaler_22 AS DOUBLE) - -1.015494387)) / 0.0992886132428) + (-0.5 * -2.25508777558 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_23 AS DOUBLE) - -1.23476914433) * (CAST("ADS_sca_2_OUT".scaler_23 AS DOUBLE) - -1.23476914433)) / 0.0166896778747) + (-0.5 * -5.54609604094 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_24 AS DOUBLE) - -0.547308219933) * (CAST("ADS_sca_2_OUT".scaler_24 AS DOUBLE) - -0.547308219933)) / 0.000621128168177) + (-0.5 * -18.8853887705 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_25 AS DOUBLE) - -0.122742661638) * (CAST("ADS_sca_2_OUT".scaler_25 AS DOUBLE) - -0.122742661638)) / 1e-09) + (-0.5 * -18.8853887705 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_26 AS DOUBLE) - -0.0263889906985) * (CAST("ADS_sca_2_OUT".scaler_26 AS DOUBLE) - -0.0263889906985)) / 1e-09) + (-0.5 * 1.28020939013 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_27 AS DOUBLE) - -0.0809102564014) * (CAST("ADS_sca_2_OUT".scaler_27 AS DOUBLE) - -0.0809102564014)) / 0.572542863121) + (-0.5 * 0.35758824182 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_28 AS DOUBLE) - 0.745606051007) * (CAST("ADS_sca_2_OUT".scaler_28 AS DOUBLE) - 0.745606051007)) / 0.227571950516) + (-0.5 * 1.72918486422 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_29 AS DOUBLE) - -0.102371931466) * (CAST("ADS_sca_2_OUT".scaler_29 AS DOUBLE) - -0.102371931466)) / 0.897006471637) + (-0.5 * 1.39587388135 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_30 AS DOUBLE) - -0.998400849415) * (CAST("ADS_sca_2_OUT".scaler_30 AS DOUBLE) - -0.998400849415)) / 0.642747588264) + (-0.5 * 0.760181567689 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_31 AS DOUBLE) - -0.957027320355) * (CAST("ADS_sca_2_OUT".scaler_31 AS DOUBLE) - -0.957027320355)) / 0.340379026411) + (-0.5 * -1.60717031959 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_32 AS DOUBLE) - -0.583041369752) * (CAST("ADS_sca_2_OUT".scaler_32 AS DOUBLE) - -0.583041369752)) / 0.0319032502393) + (-0.5 * -18.8853887705 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_33 AS DOUBLE) - -0.0528331981319) * (CAST("ADS_sca_2_OUT".scaler_33 AS DOUBLE) - -0.0528331981319)) / 1e-09) + (-0.5 * -18.8853887705 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_34 AS DOUBLE) - 0.0) * (CAST("ADS_sca_2_OUT".scaler_34 AS DOUBLE) - 0.0)) / 1e-09) + (-0.5 * 1.43717120992 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_35 AS DOUBLE) - 0.311796349554) * (CAST("ADS_sca_2_OUT".scaler_35 AS DOUBLE) - 0.311796349554)) / 0.669847063228) + (-0.5 * -0.355785744967 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_36 AS DOUBLE) - 1.13959156051) * (CAST("ADS_sca_2_OUT".scaler_36 AS DOUBLE) - 1.13959156051)) / 0.11150756851) + (-0.5 * 0.8555135897 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_37 AS DOUBLE) - 0.603364447763) * (CAST("ADS_sca_2_OUT".scaler_37 AS DOUBLE) - 0.603364447763)) / 0.374425107233) + (-0.5 * 1.18376596445 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_38 AS DOUBLE) - 0.287551477197) * (CAST("ADS_sca_2_OUT".scaler_38 AS DOUBLE) - 0.287551477197)) / 0.519903998897) + (-0.5 * 1.52040763155 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_39 AS DOUBLE) - 0.246819318173) * (CAST("ADS_sca_2_OUT".scaler_39 AS DOUBLE) - 0.246819318173)) / 0.727988931516) + (-0.5 * 1.67958695841 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_40 AS DOUBLE) - -0.00462296372104) * (CAST("ADS_sca_2_OUT".scaler_40 AS DOUBLE) - -0.00462296372104)) / 0.853602109246) + (-0.5 * -18.8853887705 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_41 AS DOUBLE) - 0.0) * (CAST("ADS_sca_2_OUT".scaler_41 AS DOUBLE) - 0.0)) / 1e-09) + (-0.5 * -18.8853887705 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_42 AS DOUBLE) - -0.0651902856676) * (CAST("ADS_sca_2_OUT".scaler_42 AS DOUBLE) - -0.0651902856676)) / 1e-09) + (-0.5 * 0.832369164936 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_43 AS DOUBLE) - 0.103429010289) * (CAST("ADS_sca_2_OUT".scaler_43 AS DOUBLE) - 0.103429010289)) / 0.3658587674) + (-0.5 * -0.465240403987 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_44 AS DOUBLE) - 1.19382921047) * (CAST("ADS_sca_2_OUT".scaler_44 AS DOUBLE) - 1.19382921047)) / 0.0999467764286) + (-0.5 * 1.23621378218 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_45 AS DOUBLE) - 0.550324855335) * (CAST("ADS_sca_2_OUT".scaler_45 AS DOUBLE) - 0.550324855335)) / 0.547899565082) + (-0.5 * 1.52204593163 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_46 AS DOUBLE) - -0.321056369395) * (CAST("ADS_sca_2_OUT".scaler_46 AS DOUBLE) - -0.321056369395)) / 0.729182573349) + (-0.5 * 1.40584190788 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_47 AS DOUBLE) - 0.336597215509) * (CAST("ADS_sca_2_OUT".scaler_47 AS DOUBLE) - 0.336597215509)) / 0.649186551837) + (-0.5 * 1.77461561101 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_48 AS DOUBLE) - 1.36179197872) * (CAST("ADS_sca_2_OUT".scaler_48 AS DOUBLE) - 1.36179197872)) / 0.938698013935) + (-0.5 * 3.96127045924 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_49 AS DOUBLE) - 0.709039622064) * (CAST("ADS_sca_2_OUT".scaler_49 AS DOUBLE) - 0.709039622064)) / 8.35945633121) + (-0.5 * -18.8853887705 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_50 AS DOUBLE) - -0.0396300945423) * (CAST("ADS_sca_2_OUT".scaler_50 AS DOUBLE) - -0.0396300945423)) / 1e-09) + (-0.5 * -0.376040059936 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_51 AS DOUBLE) - -0.277985879289) * (CAST("ADS_sca_2_OUT".scaler_51 AS DOUBLE) - -0.277985879289)) / 0.109271777734) + (-0.5 * 0.681284763106 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_52 AS DOUBLE) - 0.503885941605) * (CAST("ADS_sca_2_OUT".scaler_52 AS DOUBLE) - 0.503885941605)) / 0.314556268938) + (-0.5 * 0.766944459188 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_53 AS DOUBLE) - 0.600184401682) * (CAST("ADS_sca_2_OUT".scaler_53 AS DOUBLE) - 0.600184401682)) / 0.342688774319) + (-0.5 * 1.31816540021 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_54 AS DOUBLE) - -0.757494691527) * (CAST("ADS_sca_2_OUT".scaler_54 AS DOUBLE) - -0.757494691527)) / 0.594691993056) + (-0.5 * 1.05790852173 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_55 AS DOUBLE) - 0.423492755133) * (CAST("ADS_sca_2_OUT".scaler_55 AS DOUBLE) - 0.423492755133)) / 0.458420430839) + (-0.5 * 1.56804060816 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_56 AS DOUBLE) - 1.4456827783) * (CAST("ADS_sca_2_OUT".scaler_56 AS DOUBLE) - 1.4456827783)) / 0.763504348964) + (-0.5 * 2.58427183483 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_57 AS DOUBLE) - 0.321803571784) * (CAST("ADS_sca_2_OUT".scaler_57 AS DOUBLE) - 0.321803571784)) / 2.10938148284) + (-0.5 * -18.8853887705 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_58 AS DOUBLE) - -0.0263889906985) * (CAST("ADS_sca_2_OUT".scaler_58 AS DOUBLE) - -0.0263889906985)) / 1e-09) + (-0.5 * -18.8853887705 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_59 AS DOUBLE) - -0.295203392506) * (CAST("ADS_sca_2_OUT".scaler_59 AS DOUBLE) - -0.295203392506)) / 1e-09) + (-0.5 * -0.409641755056 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_60 AS DOUBLE) - -0.794201379248) * (CAST("ADS_sca_2_OUT".scaler_60 AS DOUBLE) - -0.794201379248)) / 0.105661063556) + (-0.5 * 1.07060883795 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_61 AS DOUBLE) - -0.293700452372) * (CAST("ADS_sca_2_OUT".scaler_61 AS DOUBLE) - -0.293700452372)) / 0.464279643445) + (-0.5 * -0.702089311346 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_62 AS DOUBLE) - 0.668554102331) * (CAST("ADS_sca_2_OUT".scaler_62 AS DOUBLE) - 0.668554102331)) / 0.0788690515007) + (-0.5 * 0.482708998051 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_63 AS DOUBLE) - 1.06873136131) * (CAST("ADS_sca_2_OUT".scaler_63 AS DOUBLE) - 1.06873136131)) / 0.257903945316) + (-0.5 * 1.73022424004 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_64 AS DOUBLE) - 0.598157756271) * (CAST("ADS_sca_2_OUT".scaler_64 AS DOUBLE) - 0.598157756271)) / 0.897939283164) + (-0.5 * -0.619369656406 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_65 AS DOUBLE) - -0.150186261821) * (CAST("ADS_sca_2_OUT".scaler_65 AS DOUBLE) - -0.150186261821)) / 0.0856705011873) AS "Score_6", CAST(NULL AS DOUBLE) AS "LogProba_7", CAST(NULL AS DOUBLE) AS "Proba_7", -2.32867046347 + (-0.5 * -18.8853887705 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_2 AS DOUBLE) - 0.0) * (CAST("ADS_sca_2_OUT".scaler_2 AS DOUBLE) - 0.0)) / 1e-09) + (-0.5 * 1.67199415908 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_3 AS DOUBLE) - -0.123367288262) * (CAST("ADS_sca_2_OUT".scaler_3 AS DOUBLE) - -0.123367288262)) / 0.847145422904) + (-0.5 * 1.38266361954 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_4 AS DOUBLE) - -0.0539571025742) * (CAST("ADS_sca_2_OUT".scaler_4 AS DOUBLE) - -0.0539571025742)) / 0.634312561464) + (-0.5 * 1.27904404073 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_5 AS DOUBLE) - 0.240968449255) * (CAST("ADS_sca_2_OUT".scaler_5 AS DOUBLE) - 0.240968449255)) / 0.571876039251) + (-0.5 * 1.14125205377 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_6 AS DOUBLE) - 0.520498567068) * (CAST("ADS_sca_2_OUT".scaler_6 AS DOUBLE) - 0.520498567068)) / 0.498264104285) + (-0.5 * 1.7306390489 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_7 AS DOUBLE) - 0.954321746205) * (CAST("ADS_sca_2_OUT".scaler_7 AS DOUBLE) - 0.954321746205)) / 0.898311833594) + (-0.5 * 2.97248188435 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_8 AS DOUBLE) - 1.20437254694) * (CAST("ADS_sca_2_OUT".scaler_8 AS DOUBLE) - 1.20437254694)) / 3.10994430584) + (-0.5 * 3.69184732371 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_9 AS DOUBLE) - 0.839416703538) * (CAST("ADS_sca_2_OUT".scaler_9 AS DOUBLE) - 0.839416703538)) / 6.38511983364) + (-0.5 * -18.8853887705 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_10 AS DOUBLE) - -0.0610349238754) * (CAST("ADS_sca_2_OUT".scaler_10 AS DOUBLE) - -0.0610349238754)) / 1e-09) + (-0.5 * 1.26754970415 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_11 AS DOUBLE) - -0.291834826179) * (CAST("ADS_sca_2_OUT".scaler_11 AS DOUBLE) - -0.291834826179)) / 0.565340337315) + (-0.5 * 1.21204855911 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_12 AS DOUBLE) - 0.0437477741695) * (CAST("ADS_sca_2_OUT".scaler_12 AS DOUBLE) - 0.0437477741695)) / 0.534818144174) + (-0.5 * 1.55086274989 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_13 AS DOUBLE) - -0.0460293443804) * (CAST("ADS_sca_2_OUT".scaler_13 AS DOUBLE) - -0.0460293443804)) / 0.750500984199) + (-0.5 * 1.25568966176 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_14 AS DOUBLE) - 0.180407774221) * (CAST("ADS_sca_2_OUT".scaler_14 AS DOUBLE) - 0.180407774221)) / 0.558674980784) + (-0.5 * 1.1344886704 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_15 AS DOUBLE) - 0.727704317164) * (CAST("ADS_sca_2_OUT".scaler_15 AS DOUBLE) - 0.727704317164)) / 0.494905523616) + (-0.5 * 2.73587773586 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_16 AS DOUBLE) - 1.025700341) * (CAST("ADS_sca_2_OUT".scaler_16 AS DOUBLE) - 1.025700341)) / 2.45469046416) + (-0.5 * 3.47085133343 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_17 AS DOUBLE) - 0.596257144885) * (CAST("ADS_sca_2_OUT".scaler_17 AS DOUBLE) - 0.596257144885)) / 5.11907760229) + (-0.5 * -18.8853887705 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_18 AS DOUBLE) - -0.0457389353746) * (CAST("ADS_sca_2_OUT".scaler_18 AS DOUBLE) - -0.0457389353746)) / 1e-09) + (-0.5 * 0.384533176902 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_19 AS DOUBLE) - -0.5110617387) * (CAST("ADS_sca_2_OUT".scaler_19 AS DOUBLE) - -0.5110617387)) / 0.233787220943) + (-0.5 * 1.83897979403 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_20 AS DOUBLE) - -0.842076562595) * (CAST("ADS_sca_2_OUT".scaler_20 AS DOUBLE) - -0.842076562595)) / 1.00110333585) + (-0.5 * 0.788066254678 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_21 AS DOUBLE) - -0.793979965007) * (CAST("ADS_sca_2_OUT".scaler_21 AS DOUBLE) - -0.793979965007)) / 0.350003959491) + (-0.5 * 1.70386732055 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_22 AS DOUBLE) - -0.0540082431646) * (CAST("ADS_sca_2_OUT".scaler_22 AS DOUBLE) - -0.0540082431646)) / 0.874581541013) + (-0.5 * 1.2409131692 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_23 AS DOUBLE) - 0.555436262107) * (CAST("ADS_sca_2_OUT".scaler_23 AS DOUBLE) - 0.555436262107)) / 0.550480416647) + (-0.5 * 2.39268009723 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_24 AS DOUBLE) - 0.489462053518) * (CAST("ADS_sca_2_OUT".scaler_24 AS DOUBLE) - 0.489462053518)) / 1.74159790988) + (-0.5 * 2.58043126714 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_25 AS DOUBLE) - 0.180839446407) * (CAST("ADS_sca_2_OUT".scaler_25 AS DOUBLE) - 0.180839446407)) / 2.10129579721) + (-0.5 * -18.8853887705 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_26 AS DOUBLE) - -0.0263889906985) * (CAST("ADS_sca_2_OUT".scaler_26 AS DOUBLE) - -0.0263889906985)) / 1e-09) + (-0.5 * 0.502837682378 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_27 AS DOUBLE) - -0.563929496265) * (CAST("ADS_sca_2_OUT".scaler_27 AS DOUBLE) - -0.563929496265)) / 0.26314781143) + (-0.5 * 1.32287628877 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_28 AS DOUBLE) - -0.730298458535) * (CAST("ADS_sca_2_OUT".scaler_28 AS DOUBLE) - -0.730298458535)) / 0.597500129979) + (-0.5 * 1.59227610465 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_29 AS DOUBLE) - -0.440852405301) * (CAST("ADS_sca_2_OUT".scaler_29 AS DOUBLE) - -0.440852405301)) / 0.782234304057) + (-0.5 * 1.1803474769 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_30 AS DOUBLE) - 0.314360184455) * (CAST("ADS_sca_2_OUT".scaler_30 AS DOUBLE) - 0.314360184455)) / 0.518129747905) + (-0.5 * 1.16989282606 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_31 AS DOUBLE) - 0.822831361057) * (CAST("ADS_sca_2_OUT".scaler_31 AS DOUBLE) - 0.822831361057)) / 0.512741099597) + (-0.5 * 2.39896177984 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_32 AS DOUBLE) - 0.794543179892) * (CAST("ADS_sca_2_OUT".scaler_32 AS DOUBLE) - 0.794543179892)) / 1.75257250857) + (-0.5 * -18.8853887705 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_33 AS DOUBLE) - -0.0528331981319) * (CAST("ADS_sca_2_OUT".scaler_33 AS DOUBLE) - -0.0528331981319)) / 1e-09) + (-0.5 * -18.8853887705 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_34 AS DOUBLE) - 0.0) * (CAST("ADS_sca_2_OUT".scaler_34 AS DOUBLE) - 0.0)) / 1e-09) + (-0.5 * 1.28113178303 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_35 AS DOUBLE) - -0.256612870857) * (CAST("ADS_sca_2_OUT".scaler_35 AS DOUBLE) - -0.256612870857)) / 0.573071216228) + (-0.5 * 1.59534638138 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_36 AS DOUBLE) - 0.192454123421) * (CAST("ADS_sca_2_OUT".scaler_36 AS DOUBLE) - 0.192454123421)) / 0.784639670516) + (-0.5 * 1.16042169532 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_37 AS DOUBLE) - 0.693121924699) * (CAST("ADS_sca_2_OUT".scaler_37 AS DOUBLE) - 0.693121924699)) / 0.507907786208) + (-0.5 * 0.164647790721 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_38 AS DOUBLE) - 0.728003635044) * (CAST("ADS_sca_2_OUT".scaler_38 AS DOUBLE) - 0.728003635044)) / 0.187640144452) + (-0.5 * 1.42037792286 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_39 AS DOUBLE) - 0.425322996017) * (CAST("ADS_sca_2_OUT".scaler_39 AS DOUBLE) - 0.425322996017)) / 0.658692055984) + (-0.5 * 1.71581463161 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_40 AS DOUBLE) - 0.384244426747) * (CAST("ADS_sca_2_OUT".scaler_40 AS DOUBLE) - 0.384244426747)) / 0.885093106163) + (-0.5 * -18.8853887705 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_41 AS DOUBLE) - 0.0) * (CAST("ADS_sca_2_OUT".scaler_41 AS DOUBLE) - 0.0)) / 1e-09) + (-0.5 * -18.8853887705 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_42 AS DOUBLE) - -0.0651902856676) * (CAST("ADS_sca_2_OUT".scaler_42 AS DOUBLE) - -0.0651902856676)) / 1e-09) + (-0.5 * 1.27082606172 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_43 AS DOUBLE) - -0.205107607027) * (CAST("ADS_sca_2_OUT".scaler_43 AS DOUBLE) - -0.205107607027)) / 0.567195632053) + (-0.5 * 1.35060705824 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_44 AS DOUBLE) - -0.226248040508) * (CAST("ADS_sca_2_OUT".scaler_44 AS DOUBLE) - -0.226248040508)) / 0.61430114422) + (-0.5 * 1.21217061974 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_45 AS DOUBLE) - 0.653394117715) * (CAST("ADS_sca_2_OUT".scaler_45 AS DOUBLE) - 0.653394117715)) / 0.534883428402) + (-0.5 * 1.30807270333 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_46 AS DOUBLE) - 0.51819260408) * (CAST("ADS_sca_2_OUT".scaler_46 AS DOUBLE) - 0.51819260408)) / 0.588720133804) + (-0.5 * 1.48877430417 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_47 AS DOUBLE) - -0.708070680577) * (CAST("ADS_sca_2_OUT".scaler_47 AS DOUBLE) - -0.708070680577)) / 0.705320646215) + (-0.5 * -0.781346467425 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_48 AS DOUBLE) - -0.649652507424) * (CAST("ADS_sca_2_OUT".scaler_48 AS DOUBLE) - -0.649652507424)) / 0.0728594137393) + (-0.5 * -18.8853887705 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_49 AS DOUBLE) - -0.0939680434916) * (CAST("ADS_sca_2_OUT".scaler_49 AS DOUBLE) - -0.0939680434916)) / 1e-09) + (-0.5 * -18.8853887705 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_50 AS DOUBLE) - -0.0396300945423) * (CAST("ADS_sca_2_OUT".scaler_50 AS DOUBLE) - -0.0396300945423)) / 1e-09) + (-0.5 * -0.584634023947 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_51 AS DOUBLE) - -0.345090078945) * (CAST("ADS_sca_2_OUT".scaler_51 AS DOUBLE) - -0.345090078945)) / 0.0886986073597) + (-0.5 * 1.28241598202 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_52 AS DOUBLE) - -0.770302747801) * (CAST("ADS_sca_2_OUT".scaler_52 AS DOUBLE) - -0.770302747801)) / 0.573807626454) + (-0.5 * 1.35096915058 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_53 AS DOUBLE) - 0.475016240199) * (CAST("ADS_sca_2_OUT".scaler_53 AS DOUBLE) - 0.475016240199)) / 0.614523618238) + (-0.5 * 1.76775607215 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_54 AS DOUBLE) - -0.633549427924) * (CAST("ADS_sca_2_OUT".scaler_54 AS DOUBLE) - -0.633549427924)) / 0.932281012428) + (-0.5 * -1.86862294178 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_55 AS DOUBLE) - -1.41168709508) * (CAST("ADS_sca_2_OUT".scaler_55 AS DOUBLE) - -1.41168709508)) / 0.0245633445018) + (-0.5 * -18.8853887705 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_56 AS DOUBLE) - -0.754917374396) * (CAST("ADS_sca_2_OUT".scaler_56 AS DOUBLE) - -0.754917374396)) / 1e-09) + (-0.5 * -18.8853887705 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_57 AS DOUBLE) - -0.213704402962) * (CAST("ADS_sca_2_OUT".scaler_57 AS DOUBLE) - -0.213704402962)) / 1e-09) + (-0.5 * -18.8853887705 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_58 AS DOUBLE) - -0.0263889906985) * (CAST("ADS_sca_2_OUT".scaler_58 AS DOUBLE) - -0.0263889906985)) / 1e-09) + (-0.5 * 1.86255566974 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_59 AS DOUBLE) - -0.119316471084) * (CAST("ADS_sca_2_OUT".scaler_59 AS DOUBLE) - -0.119316471084)) / 1.02498564061) + (-0.5 * 1.79217021952 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_60 AS DOUBLE) - 0.117796838705) * (CAST("ADS_sca_2_OUT".scaler_60 AS DOUBLE) - 0.117796838705)) / 0.955321976753) + (-0.5 * 1.7206729833 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_61 AS DOUBLE) - -0.133748650748) * (CAST("ADS_sca_2_OUT".scaler_61 AS DOUBLE) - -0.133748650748)) / 0.889403662379) + (-0.5 * 1.01274027759 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_62 AS DOUBLE) - -1.92715409641) * (CAST("ADS_sca_2_OUT".scaler_62 AS DOUBLE) - -1.92715409641)) / 0.438175050919) + (-0.5 * -5.96558502518 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_63 AS DOUBLE) - -1.14132300793) * (CAST("ADS_sca_2_OUT".scaler_63 AS DOUBLE) - -1.14132300793)) / 0.000408318891682) + (-0.5 * -18.8853887705 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_64 AS DOUBLE) - -0.505536556786) * (CAST("ADS_sca_2_OUT".scaler_64 AS DOUBLE) - -0.505536556786)) / 1e-09) + (-0.5 * -18.8853887705 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_65 AS DOUBLE) - -0.201665973115) * (CAST("ADS_sca_2_OUT".scaler_65 AS DOUBLE) - -0.201665973115)) / 1e-09) AS "Score_7", CAST(NULL AS DOUBLE) AS "LogProba_8", CAST(NULL AS DOUBLE) AS "Proba_8", -2.36503810764 + (-0.5 * -18.8853887705 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_2 AS DOUBLE) - 0.0) * (CAST("ADS_sca_2_OUT".scaler_2 AS DOUBLE) - 0.0)) / 1e-09) + (-0.5 * 0.730326393847 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_3 AS DOUBLE) - -0.165750920173) * (CAST("ADS_sca_2_OUT".scaler_3 AS DOUBLE) - -0.165750920173)) / 0.330367148234) + (-0.5 * 1.57618380496 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_4 AS DOUBLE) - -0.0425660766945) * (CAST("ADS_sca_2_OUT".scaler_4 AS DOUBLE) - -0.0425660766945)) / 0.769747098609) + (-0.5 * 1.36321230517 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_5 AS DOUBLE) - -0.071425829849) * (CAST("ADS_sca_2_OUT".scaler_5 AS DOUBLE) - -0.071425829849)) / 0.622093571389) + (-0.5 * 1.58633328319 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_6 AS DOUBLE) - 0.150746767252) * (CAST("ADS_sca_2_OUT".scaler_6 AS DOUBLE) - 0.150746767252)) / 0.777599411057) + (-0.5 * 1.41497947765 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_7 AS DOUBLE) - 0.110982194181) * (CAST("ADS_sca_2_OUT".scaler_7 AS DOUBLE) - 0.110982194181)) / 0.655145723966) + (-0.5 * -0.351981728571 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_8 AS DOUBLE) - -0.249169362281) * (CAST("ADS_sca_2_OUT".scaler_8 AS DOUBLE) - -0.249169362281)) / 0.11193255294) + (-0.5 * -18.8853887705 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_9 AS DOUBLE) - -0.125071214148) * (CAST("ADS_sca_2_OUT".scaler_9 AS DOUBLE) - -0.125071214148)) / 1e-09) + (-0.5 * 3.31774175692 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_10 AS DOUBLE) - 0.182596147261) * (CAST("ADS_sca_2_OUT".scaler_10 AS DOUBLE) - 0.182596147261)) / 4.3923513139) + (-0.5 * 1.57996385658 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_11 AS DOUBLE) - -0.0254170514245) * (CAST("ADS_sca_2_OUT".scaler_11 AS DOUBLE) - -0.0254170514245)) / 0.772662288691) + (-0.5 * 1.32524513627 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_12 AS DOUBLE) - 0.354922836863) * (CAST("ADS_sca_2_OUT".scaler_12 AS DOUBLE) - 0.354922836863)) / 0.598917194412) + (-0.5 * 1.8813167653 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_13 AS DOUBLE) - -0.0568837138455) * (CAST("ADS_sca_2_OUT".scaler_13 AS DOUBLE) - -0.0568837138455)) / 1.04439701412) + (-0.5 * 1.7904384828 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_14 AS DOUBLE) - -0.217700468063) * (CAST("ADS_sca_2_OUT".scaler_14 AS DOUBLE) - -0.217700468063)) / 0.953669042242) + (-0.5 * 1.26333857201 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_15 AS DOUBLE) - 0.569474164069) * (CAST("ADS_sca_2_OUT".scaler_15 AS DOUBLE) - 0.569474164069)) / 0.562964620188) + (-0.5 * 1.57329883422 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_16 AS DOUBLE) - 0.166167462144) * (CAST("ADS_sca_2_OUT".scaler_16 AS DOUBLE) - 0.166167462144)) / 0.767529601) + (-0.5 * -18.8853887705 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_17 AS DOUBLE) - -0.133504722703) * (CAST("ADS_sca_2_OUT".scaler_17 AS DOUBLE) - -0.133504722703)) / 1e-09) + (-0.5 * 3.0989577721 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_18 AS DOUBLE) - 0.116549583473) * (CAST("ADS_sca_2_OUT".scaler_18 AS DOUBLE) - 0.116549583473)) / 3.52923348987) + (-0.5 * 1.85149933817 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_19 AS DOUBLE) - 0.0874037544509) * (CAST("ADS_sca_2_OUT".scaler_19 AS DOUBLE) - 0.0874037544509)) / 1.01371547765) + (-0.5 * 1.33536906469 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_20 AS DOUBLE) - 0.277716680865) * (CAST("ADS_sca_2_OUT".scaler_20 AS DOUBLE) - 0.277716680865)) / 0.605011385745) + (-0.5 * 1.74569017089 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_21 AS DOUBLE) - 0.101111543577) * (CAST("ADS_sca_2_OUT".scaler_21 AS DOUBLE) - 0.101111543577)) / 0.911934697107) + (-0.5 * 1.51870377644 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_22 AS DOUBLE) - 0.0986061871787) * (CAST("ADS_sca_2_OUT".scaler_22 AS DOUBLE) - 0.0986061871787)) / 0.726749599979) + (-0.5 * 0.826447683092 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_23 AS DOUBLE) - 0.658037683853) * (CAST("ADS_sca_2_OUT".scaler_23 AS DOUBLE) - 0.658037683853)) / 0.363698742936) + (-0.5 * 1.36091008906 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_24 AS DOUBLE) - 0.130557056959) * (CAST("ADS_sca_2_OUT".scaler_24 AS DOUBLE) - 0.130557056959)) / 0.620663024892) + (-0.5 * -18.8853887705 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_25 AS DOUBLE) - -0.122742661638) * (CAST("ADS_sca_2_OUT".scaler_25 AS DOUBLE) - -0.122742661638)) / 1e-09) + (-0.5 * -18.8853887705 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_26 AS DOUBLE) - -0.0263889906985) * (CAST("ADS_sca_2_OUT".scaler_26 AS DOUBLE) - -0.0263889906985)) / 1e-09) + (-0.5 * 1.019957649 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_27 AS DOUBLE) - -0.403253454196) * (CAST("ADS_sca_2_OUT".scaler_27 AS DOUBLE) - -0.403253454196)) / 0.441348962875) + (-0.5 * 1.48543712823 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_28 AS DOUBLE) - -0.124445018704) * (CAST("ADS_sca_2_OUT".scaler_28 AS DOUBLE) - -0.124445018704)) / 0.702970790252) + (-0.5 * 0.65527262757 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_29 AS DOUBLE) - 0.734566288964) * (CAST("ADS_sca_2_OUT".scaler_29 AS DOUBLE) - 0.734566288964)) / 0.306479491167) + (-0.5 * 0.511782800878 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_30 AS DOUBLE) - 0.57268872503) * (CAST("ADS_sca_2_OUT".scaler_30 AS DOUBLE) - 0.57268872503)) / 0.265512259153) + (-0.5 * 1.60262168763 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_31 AS DOUBLE) - -0.0797319186173) * (CAST("ADS_sca_2_OUT".scaler_31 AS DOUBLE) - -0.0797319186173)) / 0.790368980389) + (-0.5 * -0.616424827537 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_32 AS DOUBLE) - -0.498158409267) * (CAST("ADS_sca_2_OUT".scaler_32 AS DOUBLE) - -0.498158409267)) / 0.0859231579854) + (-0.5 * -18.8853887705 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_33 AS DOUBLE) - -0.0528331981319) * (CAST("ADS_sca_2_OUT".scaler_33 AS DOUBLE) - -0.0528331981319)) / 1e-09) + (-0.5 * -18.8853887705 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_34 AS DOUBLE) - 0.0) * (CAST("ADS_sca_2_OUT".scaler_34 AS DOUBLE) - 0.0)) / 1e-09) + (-0.5 * -0.0748070052785 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_35 AS DOUBLE) - -0.540373998457) * (CAST("ADS_sca_2_OUT".scaler_35 AS DOUBLE) - -0.540373998457)) / 0.147683461149) + (-0.5 * 1.39356250738 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_36 AS DOUBLE) - -0.134652734208) * (CAST("ADS_sca_2_OUT".scaler_36 AS DOUBLE) - -0.134652734208)) / 0.641263673821) + (-0.5 * 0.212232545311 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_37 AS DOUBLE) - 0.804221723126) * (CAST("ADS_sca_2_OUT".scaler_37 AS DOUBLE) - 0.804221723126)) / 0.196784802365) + (-0.5 * 1.10450567754 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_38 AS DOUBLE) - 0.432490826524) * (CAST("ADS_sca_2_OUT".scaler_38 AS DOUBLE) - 0.432490826524)) / 0.48028702316) + (-0.5 * 1.4478836218 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_39 AS DOUBLE) - -0.742803434559) * (CAST("ADS_sca_2_OUT".scaler_39 AS DOUBLE) - -0.742803434559)) / 0.677061312883) + (-0.5 * -2.18055270158 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_40 AS DOUBLE) - -0.782869852212) * (CAST("ADS_sca_2_OUT".scaler_40 AS DOUBLE) - -0.782869852212)) / 0.017981177404) + (-0.5 * -18.8853887705 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_41 AS DOUBLE) - 0.0) * (CAST("ADS_sca_2_OUT".scaler_41 AS DOUBLE) - 0.0)) / 1e-09) + (-0.5 * -18.8853887705 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_42 AS DOUBLE) - -0.0651902856676) * (CAST("ADS_sca_2_OUT".scaler_42 AS DOUBLE) - -0.0651902856676)) / 1e-09) + (-0.5 * 0.943623081545 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_43 AS DOUBLE) - -0.158951076834) * (CAST("ADS_sca_2_OUT".scaler_43 AS DOUBLE) - -0.158951076834)) / 0.408912539825) + (-0.5 * 1.38930568674 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_44 AS DOUBLE) - 0.562807925648) * (CAST("ADS_sca_2_OUT".scaler_44 AS DOUBLE) - 0.562807925648)) / 0.638539731158) + (-0.5 * 1.26986007235 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_45 AS DOUBLE) - 0.238569469272) * (CAST("ADS_sca_2_OUT".scaler_45 AS DOUBLE) - 0.238569469272)) / 0.566647991651) + (-0.5 * 1.34880059892 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_46 AS DOUBLE) - 0.251997479864) * (CAST("ADS_sca_2_OUT".scaler_46 AS DOUBLE) - 0.251997479864)) / 0.613192435916) + (-0.5 * 1.88917164443 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_47 AS DOUBLE) - 0.0221003500324) * (CAST("ADS_sca_2_OUT".scaler_47 AS DOUBLE) - 0.0221003500324)) / 1.05263293015) + (-0.5 * 0.527092543752 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_48 AS DOUBLE) - -0.497092038103) * (CAST("ADS_sca_2_OUT".scaler_48 AS DOUBLE) - -0.497092038103)) / 0.269608459449) + (-0.5 * -18.8853887705 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_49 AS DOUBLE) - -0.0939680434916) * (CAST("ADS_sca_2_OUT".scaler_49 AS DOUBLE) - -0.0939680434916)) / 1e-09) + (-0.5 * -18.8853887705 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_50 AS DOUBLE) - -0.0396300945423) * (CAST("ADS_sca_2_OUT".scaler_50 AS DOUBLE) - -0.0396300945423)) / 1e-09) + (-0.5 * 1.80793131679 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_51 AS DOUBLE) - 0.123367060896) * (CAST("ADS_sca_2_OUT".scaler_51 AS DOUBLE) - 0.123367060896)) / 0.970498182016) + (-0.5 * 1.39105355625 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_52 AS DOUBLE) - 0.611529771046) * (CAST("ADS_sca_2_OUT".scaler_52 AS DOUBLE) - 0.611529771046)) / 0.63965679124) + (-0.5 * 1.58497697635 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_53 AS DOUBLE) - -0.257014774738) * (CAST("ADS_sca_2_OUT".scaler_53 AS DOUBLE) - -0.257014774738)) / 0.776545462555) + (-0.5 * 1.84385910067 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_54 AS DOUBLE) - -0.173620191989) * (CAST("ADS_sca_2_OUT".scaler_54 AS DOUBLE) - -0.173620191989)) / 1.00599996236) + (-0.5 * 1.65910247119 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_55 AS DOUBLE) - 0.111905776692) * (CAST("ADS_sca_2_OUT".scaler_55 AS DOUBLE) - 0.111905776692)) / 0.836294382904) + (-0.5 * 0.940412719244 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_56 AS DOUBLE) - -0.313807505525) * (CAST("ADS_sca_2_OUT".scaler_56 AS DOUBLE) - -0.313807505525)) / 0.407601887383) + (-0.5 * -18.8853887705 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_57 AS DOUBLE) - -0.213704402962) * (CAST("ADS_sca_2_OUT".scaler_57 AS DOUBLE) - -0.213704402962)) / 1e-09) + (-0.5 * -18.8853887705 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_58 AS DOUBLE) - -0.0263889906985) * (CAST("ADS_sca_2_OUT".scaler_58 AS DOUBLE) - -0.0263889906985)) / 1e-09) + (-0.5 * 0.428528496151 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_59 AS DOUBLE) - -0.137675038639) * (CAST("ADS_sca_2_OUT".scaler_59 AS DOUBLE) - -0.137675038639)) / 0.244302377163) + (-0.5 * 1.47574048277 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_60 AS DOUBLE) - -0.103906441466) * (CAST("ADS_sca_2_OUT".scaler_60 AS DOUBLE) - -0.103906441466)) / 0.696187273555) + (-0.5 * 1.23446973318 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_61 AS DOUBLE) - 0.161142293389) * (CAST("ADS_sca_2_OUT".scaler_61 AS DOUBLE) - 0.161142293389)) / 0.546944834184) + (-0.5 * 1.08297364414 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_62 AS DOUBLE) - 0.238111465279) * (CAST("ADS_sca_2_OUT".scaler_62 AS DOUBLE) - 0.238111465279)) / 0.470056009482) + (-0.5 * 1.63365853893 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_63 AS DOUBLE) - -0.0375432242445) * (CAST("ADS_sca_2_OUT".scaler_63 AS DOUBLE) - -0.0375432242445)) / 0.81528418972) + (-0.5 * 1.15415011811 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_64 AS DOUBLE) - -0.245360634801) * (CAST("ADS_sca_2_OUT".scaler_64 AS DOUBLE) - -0.245360634801)) / 0.504732371153) + (-0.5 * -2.98813375746 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_65 AS DOUBLE) - -0.19393039745) * (CAST("ADS_sca_2_OUT".scaler_65 AS DOUBLE) - -0.19393039745)) / 0.00801844453737) AS "Score_8", CAST(NULL AS DOUBLE) AS "LogProba_9", CAST(NULL AS DOUBLE) AS "Proba_9", -2.2798802993 + (-0.5 * -18.8853887705 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_2 AS DOUBLE) - 0.0) * (CAST("ADS_sca_2_OUT".scaler_2 AS DOUBLE) - 0.0)) / 1e-09) + (-0.5 * 0.655513135548 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_3 AS DOUBLE) - -0.156370237054) * (CAST("ADS_sca_2_OUT".scaler_3 AS DOUBLE) - -0.156370237054)) / 0.306553210795) + (-0.5 * 1.5022635011 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_4 AS DOUBLE) - 0.100507132243) * (CAST("ADS_sca_2_OUT".scaler_4 AS DOUBLE) - 0.100507132243)) / 0.714899314338) + (-0.5 * 1.88205225872 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_5 AS DOUBLE) - -0.0038695648724) * (CAST("ADS_sca_2_OUT".scaler_5 AS DOUBLE) - -0.0038695648724)) / 1.0451654438) + (-0.5 * 1.54303410362 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_6 AS DOUBLE) - -0.141952893188) * (CAST("ADS_sca_2_OUT".scaler_6 AS DOUBLE) - -0.141952893188)) / 0.744648515808) + (-0.5 * 1.72852403648 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_7 AS DOUBLE) - 0.0492223447165) * (CAST("ADS_sca_2_OUT".scaler_7 AS DOUBLE) - 0.0492223447165)) / 0.896413900696) + (-0.5 * 2.06470248274 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_8 AS DOUBLE) - 0.0626237781532) * (CAST("ADS_sca_2_OUT".scaler_8 AS DOUBLE) - 0.0626237781532)) / 1.25461081426) + (-0.5 * 2.13667559774 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_9 AS DOUBLE) - -0.00470818993725) * (CAST("ADS_sca_2_OUT".scaler_9 AS DOUBLE) - -0.00470818993725)) / 1.3482379684) + (-0.5 * -18.8853887705 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_10 AS DOUBLE) - -0.0610349238754) * (CAST("ADS_sca_2_OUT".scaler_10 AS DOUBLE) - -0.0610349238754)) / 1e-09) + (-0.5 * 1.65445915925 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_11 AS DOUBLE) - 0.165702277547) * (CAST("ADS_sca_2_OUT".scaler_11 AS DOUBLE) - 0.165702277547)) / 0.832420208675) + (-0.5 * 1.29260661103 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_12 AS DOUBLE) - 0.418260832976) * (CAST("ADS_sca_2_OUT".scaler_12 AS DOUBLE) - 0.418260832976)) / 0.579684983216) + (-0.5 * 1.99397726556 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_13 AS DOUBLE) - -0.569495036303) * (CAST("ADS_sca_2_OUT".scaler_13 AS DOUBLE) - -0.569495036303)) / 1.16894332435) + (-0.5 * 1.57070656004 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_14 AS DOUBLE) - 0.0388069164957) * (CAST("ADS_sca_2_OUT".scaler_14 AS DOUBLE) - 0.0388069164957)) / 0.765542530456) + (-0.5 * 1.11533656913 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_15 AS DOUBLE) - 0.541565145979) * (CAST("ADS_sca_2_OUT".scaler_15 AS DOUBLE) - 0.541565145979)) / 0.485517232631) + (-0.5 * 2.31027819036 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_16 AS DOUBLE) - 0.21302593789) * (CAST("ADS_sca_2_OUT".scaler_16 AS DOUBLE) - 0.21302593789)) / 1.6038405936) + (-0.5 * 1.85286528875 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_17 AS DOUBLE) - 0.00549753779032) * (CAST("ADS_sca_2_OUT".scaler_17 AS DOUBLE) - 0.00549753779032)) / 1.01510110903) + (-0.5 * -18.8853887705 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_18 AS DOUBLE) - -0.0457389353746) * (CAST("ADS_sca_2_OUT".scaler_18 AS DOUBLE) - -0.0457389353746)) / 1e-09) + (-0.5 * 1.90992394629 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_19 AS DOUBLE) - 0.325537292347) * (CAST("ADS_sca_2_OUT".scaler_19 AS DOUBLE) - 0.325537292347)) / 1.07470572495) + (-0.5 * 0.818420873523 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_20 AS DOUBLE) - 0.477769676003) * (CAST("ADS_sca_2_OUT".scaler_20 AS DOUBLE) - 0.477769676003)) / 0.360791087595) + (-0.5 * 1.72257350546 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_21 AS DOUBLE) - -0.221306572079) * (CAST("ADS_sca_2_OUT".scaler_21 AS DOUBLE) - -0.221306572079)) / 0.891095601017) + (-0.5 * 1.30646194045 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_22 AS DOUBLE) - 0.267578294694) * (CAST("ADS_sca_2_OUT".scaler_22 AS DOUBLE) - 0.267578294694)) / 0.587772608591) + (-0.5 * 0.210166304836 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_23 AS DOUBLE) - 1.01029872765) * (CAST("ADS_sca_2_OUT".scaler_23 AS DOUBLE) - 1.01029872765)) / 0.196378617424) + (-0.5 * 2.00167649367 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_24 AS DOUBLE) - 0.375113461845) * (CAST("ADS_sca_2_OUT".scaler_24 AS DOUBLE) - 0.375113461845)) / 1.17797802111) + (-0.5 * 1.28179784584 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_25 AS DOUBLE) - -0.0215486256232) * (CAST("ADS_sca_2_OUT".scaler_25 AS DOUBLE) - -0.0215486256232)) / 0.5734530448) + (-0.5 * -18.8853887705 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_26 AS DOUBLE) - -0.0263889906985) * (CAST("ADS_sca_2_OUT".scaler_26 AS DOUBLE) - -0.0263889906985)) / 1e-09) + (-0.5 * 1.22212337753 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_27 AS DOUBLE) - -0.156578749955) * (CAST("ADS_sca_2_OUT".scaler_27 AS DOUBLE) - -0.156578749955)) / 0.540233573792) + (-0.5 * 1.41720983754 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_28 AS DOUBLE) - 0.183912022026) * (CAST("ADS_sca_2_OUT".scaler_28 AS DOUBLE) - 0.183912022026)) / 0.65660856543) + (-0.5 * 0.902103509318 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_29 AS DOUBLE) - 0.574372019578) * (CAST("ADS_sca_2_OUT".scaler_29 AS DOUBLE) - 0.574372019578)) / 0.392282295381) + (-0.5 * 0.493526665076 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_30 AS DOUBLE) - 0.560952402491) * (CAST("ADS_sca_2_OUT".scaler_30 AS DOUBLE) - 0.560952402491)) / 0.26070900909) + (-0.5 * 0.586615630509 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_31 AS DOUBLE) - 1.10954425696) * (CAST("ADS_sca_2_OUT".scaler_31 AS DOUBLE) - 1.10954425696)) / 0.286143617274) + (-0.5 * 1.47964534564 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_32 AS DOUBLE) - 0.384715204628) * (CAST("ADS_sca_2_OUT".scaler_32 AS DOUBLE) - 0.384715204628)) / 0.698911104022) + (-0.5 * -18.8853887705 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_33 AS DOUBLE) - -0.0528331981319) * (CAST("ADS_sca_2_OUT".scaler_33 AS DOUBLE) - -0.0528331981319)) / 1e-09) + (-0.5 * -18.8853887705 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_34 AS DOUBLE) - 0.0) * (CAST("ADS_sca_2_OUT".scaler_34 AS DOUBLE) - 0.0)) / 1e-09) + (-0.5 * -1.64287459944 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_35 AS DOUBLE) - -0.616037906876) * (CAST("ADS_sca_2_OUT".scaler_35 AS DOUBLE) - -0.616037906876)) / 0.0307842628548) + (-0.5 * 1.03758348346 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_36 AS DOUBLE) - -0.75623448117) * (CAST("ADS_sca_2_OUT".scaler_36 AS DOUBLE) - -0.75623448117)) / 0.449197068157) + (-0.5 * 1.37632750499 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_37 AS DOUBLE) - -0.679896134508) * (CAST("ADS_sca_2_OUT".scaler_37 AS DOUBLE) - -0.679896134508)) / 0.630306190235) + (-0.5 * 1.5343111729 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_38 AS DOUBLE) - -0.941030382936) * (CAST("ADS_sca_2_OUT".scaler_38 AS DOUBLE) - -0.941030382936)) / 0.73818124618) + (-0.5 * 0.857109928393 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_39 AS DOUBLE) - 0.519197550835) * (CAST("ADS_sca_2_OUT".scaler_39 AS DOUBLE) - 0.519197550835)) / 0.375023293847) + (-0.5 * 1.82555347034 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_40 AS DOUBLE) - 0.549215008402) * (CAST("ADS_sca_2_OUT".scaler_40 AS DOUBLE) - 0.549215008402)) / 0.98775202847) + (-0.5 * -18.8853887705 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_41 AS DOUBLE) - 0.0) * (CAST("ADS_sca_2_OUT".scaler_41 AS DOUBLE) - 0.0)) / 1e-09) + (-0.5 * -18.8853887705 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_42 AS DOUBLE) - -0.0651902856676) * (CAST("ADS_sca_2_OUT".scaler_42 AS DOUBLE) - -0.0651902856676)) / 1e-09) + (-0.5 * -0.326575259263 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_43 AS DOUBLE) - -0.463920133466) * (CAST("ADS_sca_2_OUT".scaler_43 AS DOUBLE) - -0.463920133466)) / 0.114812797403) + (-0.5 * -1.02300132766 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_44 AS DOUBLE) - -0.961036948467) * (CAST("ADS_sca_2_OUT".scaler_44 AS DOUBLE) - -0.961036948467)) / 0.0572184778131) + (-0.5 * -0.59784631699 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_45 AS DOUBLE) - -1.03132519322) * (CAST("ADS_sca_2_OUT".scaler_45 AS DOUBLE) - -1.03132519322)) / 0.0875344032057) + (-0.5 * 1.06000065055 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_46 AS DOUBLE) - -0.849081260182) * (CAST("ADS_sca_2_OUT".scaler_46 AS DOUBLE) - -0.849081260182)) / 0.459380509389) + (-0.5 * 1.31234759514 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_47 AS DOUBLE) - 0.299660992925) * (CAST("ADS_sca_2_OUT".scaler_47 AS DOUBLE) - 0.299660992925)) / 0.591242235699) + (-0.5 * 1.85052309376 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_48 AS DOUBLE) - 0.53219540656) * (CAST("ADS_sca_2_OUT".scaler_48 AS DOUBLE) - 0.53219540656)) / 1.01272632648) + (-0.5 * 1.81090699571 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_49 AS DOUBLE) - -0.0123159930018) * (CAST("ADS_sca_2_OUT".scaler_49 AS DOUBLE) - -0.0123159930018)) / 0.97339037398) + (-0.5 * -18.8853887705 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_50 AS DOUBLE) - -0.0396300945423) * (CAST("ADS_sca_2_OUT".scaler_50 AS DOUBLE) - -0.0396300945423)) / 1e-09) + (-0.5 * 1.81403896975 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_51 AS DOUBLE) - 0.0187605429852) * (CAST("ADS_sca_2_OUT".scaler_51 AS DOUBLE) - 0.0187605429852)) / 0.976443786475) + (-0.5 * 1.8526884594 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_52 AS DOUBLE) - -0.211494624117) * (CAST("ADS_sca_2_OUT".scaler_52 AS DOUBLE) - -0.211494624117)) / 1.01492162523) + (-0.5 * 1.55221455872 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_53 AS DOUBLE) - -0.847737605639) * (CAST("ADS_sca_2_OUT".scaler_53 AS DOUBLE) - -0.847737605639)) / 0.751516204095) + (-0.5 * 1.64382044097 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_54 AS DOUBLE) - -0.675649037222) * (CAST("ADS_sca_2_OUT".scaler_54 AS DOUBLE) - -0.675649037222)) / 0.823611265598) + (-0.5 * 1.49619722145 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_55 AS DOUBLE) - 0.325923130238) * (CAST("ADS_sca_2_OUT".scaler_55 AS DOUBLE) - 0.325923130238)) / 0.710575662675) + (-0.5 * 1.90080532615 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_56 AS DOUBLE) - 0.262641157427) * (CAST("ADS_sca_2_OUT".scaler_56 AS DOUBLE) - 0.262641157427)) / 1.06495043667) + (-0.5 * 0.613641253678 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_57 AS DOUBLE) - -0.114224899542) * (CAST("ADS_sca_2_OUT".scaler_57 AS DOUBLE) - -0.114224899542)) / 0.293982272015) + (-0.5 * -18.8853887705 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_58 AS DOUBLE) - -0.0263889906985) * (CAST("ADS_sca_2_OUT".scaler_58 AS DOUBLE) - -0.0263889906985)) / 1e-09) + (-0.5 * -0.163992579375 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_59 AS DOUBLE) - -0.196219410753) * (CAST("ADS_sca_2_OUT".scaler_59 AS DOUBLE) - -0.196219410753)) / 0.135082490585) + (-0.5 * 1.40726559651 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_60 AS DOUBLE) - 0.0432791155067) * (CAST("ADS_sca_2_OUT".scaler_60 AS DOUBLE) - 0.0432791155067)) / 0.65011144958) + (-0.5 * 1.90587706447 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_61 AS DOUBLE) - -0.020785135639) * (CAST("ADS_sca_2_OUT".scaler_61 AS DOUBLE) - -0.020785135639)) / 1.0703653064) + (-0.5 * 1.49664817244 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_62 AS DOUBLE) - 0.266959101735) * (CAST("ADS_sca_2_OUT".scaler_62 AS DOUBLE) - 0.266959101735)) / 0.710896169736) + (-0.5 * 1.62087957246 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_63 AS DOUBLE) - 0.372578853574) * (CAST("ADS_sca_2_OUT".scaler_63 AS DOUBLE) - 0.372578853574)) / 0.804931986503) + (-0.5 * 1.56855465843 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_64 AS DOUBLE) - -0.0111839956592) * (CAST("ADS_sca_2_OUT".scaler_64 AS DOUBLE) - -0.0111839956592)) / 0.76389692948) + (-0.5 * -1.65188759597 - (0.5 * (CAST("ADS_sca_2_OUT".scaler_65 AS DOUBLE) - -0.169697522661) * (CAST("ADS_sca_2_OUT".scaler_65 AS DOUBLE) - -0.169697522661)) / 0.0305080510185) AS "Score_9" 
FROM "ADS_sca_2_OUT"), 
orig_cte AS 
(SELECT "RawScores"."KEY" AS "KEY", "RawScores"."Score_0" AS "Score_0", "RawScores"."Score_1" AS "Score_1", "RawScores"."Score_2" AS "Score_2", "RawScores"."Score_3" AS "Score_3", "RawScores"."Score_4" AS "Score_4", "RawScores"."Score_5" AS "Score_5", "RawScores"."Score_6" AS "Score_6", "RawScores"."Score_7" AS "Score_7", "RawScores"."Score_8" AS "Score_8", "RawScores"."Score_9" AS "Score_9", "RawScores"."Proba_0" AS "Proba_0", "RawScores"."Proba_1" AS "Proba_1", "RawScores"."Proba_2" AS "Proba_2", "RawScores"."Proba_3" AS "Proba_3", "RawScores"."Proba_4" AS "Proba_4", "RawScores"."Proba_5" AS "Proba_5", "RawScores"."Proba_6" AS "Proba_6", "RawScores"."Proba_7" AS "Proba_7", "RawScores"."Proba_8" AS "Proba_8", "RawScores"."Proba_9" AS "Proba_9", "RawScores"."LogProba_0" AS "LogProba_0", "RawScores"."LogProba_1" AS "LogProba_1", "RawScores"."LogProba_2" AS "LogProba_2", "RawScores"."LogProba_3" AS "LogProba_3", "RawScores"."LogProba_4" AS "LogProba_4", "RawScores"."LogProba_5" AS "LogProba_5", "RawScores"."LogProba_6" AS "LogProba_6", "RawScores"."LogProba_7" AS "LogProba_7", "RawScores"."LogProba_8" AS "LogProba_8", "RawScores"."LogProba_9" AS "LogProba_9", NULL AS "Decision", CAST(NULL AS DOUBLE) AS "DecisionProba" 
FROM "RawScores"), 
score_class_union AS 
(SELECT scu."KEY_u" AS "KEY_u", scu.class AS class, scu."LogProba" AS "LogProba", scu."Proba" AS "Proba", scu."Score" AS "Score" 
FROM (SELECT orig_cte."KEY" AS "KEY_u", 0 AS class, orig_cte."LogProba_0" AS "LogProba", orig_cte."Proba_0" AS "Proba", orig_cte."Score_0" AS "Score" 
FROM orig_cte UNION ALL SELECT orig_cte."KEY" AS "KEY_u", 1 AS class, orig_cte."LogProba_1" AS "LogProba", orig_cte."Proba_1" AS "Proba", orig_cte."Score_1" AS "Score" 
FROM orig_cte UNION ALL SELECT orig_cte."KEY" AS "KEY_u", 2 AS class, orig_cte."LogProba_2" AS "LogProba", orig_cte."Proba_2" AS "Proba", orig_cte."Score_2" AS "Score" 
FROM orig_cte UNION ALL SELECT orig_cte."KEY" AS "KEY_u", 3 AS class, orig_cte."LogProba_3" AS "LogProba", orig_cte."Proba_3" AS "Proba", orig_cte."Score_3" AS "Score" 
FROM orig_cte UNION ALL SELECT orig_cte."KEY" AS "KEY_u", 4 AS class, orig_cte."LogProba_4" AS "LogProba", orig_cte."Proba_4" AS "Proba", orig_cte."Score_4" AS "Score" 
FROM orig_cte UNION ALL SELECT orig_cte."KEY" AS "KEY_u", 5 AS class, orig_cte."LogProba_5" AS "LogProba", orig_cte."Proba_5" AS "Proba", orig_cte."Score_5" AS "Score" 
FROM orig_cte UNION ALL SELECT orig_cte."KEY" AS "KEY_u", 6 AS class, orig_cte."LogProba_6" AS "LogProba", orig_cte."Proba_6" AS "Proba", orig_cte."Score_6" AS "Score" 
FROM orig_cte UNION ALL SELECT orig_cte."KEY" AS "KEY_u", 7 AS class, orig_cte."LogProba_7" AS "LogProba", orig_cte."Proba_7" AS "Proba", orig_cte."Score_7" AS "Score" 
FROM orig_cte UNION ALL SELECT orig_cte."KEY" AS "KEY_u", 8 AS class, orig_cte."LogProba_8" AS "LogProba", orig_cte."Proba_8" AS "Proba", orig_cte."Score_8" AS "Score" 
FROM orig_cte UNION ALL SELECT orig_cte."KEY" AS "KEY_u", 9 AS class, orig_cte."LogProba_9" AS "LogProba", orig_cte."Proba_9" AS "Proba", orig_cte."Score_9" AS "Score" 
FROM orig_cte) AS scu), 
score_max AS 
(SELECT orig_cte."KEY" AS "KEY", orig_cte."Score_0" AS "Score_0", orig_cte."Score_1" AS "Score_1", orig_cte."Score_2" AS "Score_2", orig_cte."Score_3" AS "Score_3", orig_cte."Score_4" AS "Score_4", orig_cte."Score_5" AS "Score_5", orig_cte."Score_6" AS "Score_6", orig_cte."Score_7" AS "Score_7", orig_cte."Score_8" AS "Score_8", orig_cte."Score_9" AS "Score_9", orig_cte."Proba_0" AS "Proba_0", orig_cte."Proba_1" AS "Proba_1", orig_cte."Proba_2" AS "Proba_2", orig_cte."Proba_3" AS "Proba_3", orig_cte."Proba_4" AS "Proba_4", orig_cte."Proba_5" AS "Proba_5", orig_cte."Proba_6" AS "Proba_6", orig_cte."Proba_7" AS "Proba_7", orig_cte."Proba_8" AS "Proba_8", orig_cte."Proba_9" AS "Proba_9", orig_cte."LogProba_0" AS "LogProba_0", orig_cte."LogProba_1" AS "LogProba_1", orig_cte."LogProba_2" AS "LogProba_2", orig_cte."LogProba_3" AS "LogProba_3", orig_cte."LogProba_4" AS "LogProba_4", orig_cte."LogProba_5" AS "LogProba_5", orig_cte."LogProba_6" AS "LogProba_6", orig_cte."LogProba_7" AS "LogProba_7", orig_cte."LogProba_8" AS "LogProba_8", orig_cte."LogProba_9" AS "LogProba_9", orig_cte."Decision" AS "Decision", orig_cte."DecisionProba" AS "DecisionProba", max_select."KEY_m" AS "KEY_m", max_select."max_Score" AS "max_Score" 
FROM orig_cte LEFT OUTER JOIN (SELECT score_class_union."KEY_u" AS "KEY_m", max(score_class_union."Score") AS "max_Score" 
FROM score_class_union GROUP BY score_class_union."KEY_u") AS max_select ON orig_cte."KEY" = max_select."KEY_m"), 
score_soft_max_deltas AS 
(SELECT score_max."KEY" AS "KEY", score_max."Score_0" AS "Score_0", score_max."Score_1" AS "Score_1", score_max."Score_2" AS "Score_2", score_max."Score_3" AS "Score_3", score_max."Score_4" AS "Score_4", score_max."Score_5" AS "Score_5", score_max."Score_6" AS "Score_6", score_max."Score_7" AS "Score_7", score_max."Score_8" AS "Score_8", score_max."Score_9" AS "Score_9", score_max."Proba_0" AS "Proba_0", score_max."Proba_1" AS "Proba_1", score_max."Proba_2" AS "Proba_2", score_max."Proba_3" AS "Proba_3", score_max."Proba_4" AS "Proba_4", score_max."Proba_5" AS "Proba_5", score_max."Proba_6" AS "Proba_6", score_max."Proba_7" AS "Proba_7", score_max."Proba_8" AS "Proba_8", score_max."Proba_9" AS "Proba_9", score_max."LogProba_0" AS "LogProba_0", score_max."LogProba_1" AS "LogProba_1", score_max."LogProba_2" AS "LogProba_2", score_max."LogProba_3" AS "LogProba_3", score_max."LogProba_4" AS "LogProba_4", score_max."LogProba_5" AS "LogProba_5", score_max."LogProba_6" AS "LogProba_6", score_max."LogProba_7" AS "LogProba_7", score_max."LogProba_8" AS "LogProba_8", score_max."LogProba_9" AS "LogProba_9", score_max."Decision" AS "Decision", score_max."DecisionProba" AS "DecisionProba", score_max."KEY_m" AS "KEY_m", score_max."max_Score" AS "max_Score", exp(score_max."Score_0" - score_max."max_Score") AS "exp_delta_Score_0", exp(score_max."Score_1" - score_max."max_Score") AS "exp_delta_Score_1", exp(score_max."Score_2" - score_max."max_Score") AS "exp_delta_Score_2", exp(score_max."Score_3" - score_max."max_Score") AS "exp_delta_Score_3", exp(score_max."Score_4" - score_max."max_Score") AS "exp_delta_Score_4", exp(score_max."Score_5" - score_max."max_Score") AS "exp_delta_Score_5", exp(score_max."Score_6" - score_max."max_Score") AS "exp_delta_Score_6", exp(score_max."Score_7" - score_max."max_Score") AS "exp_delta_Score_7", exp(score_max."Score_8" - score_max."max_Score") AS "exp_delta_Score_8", exp(score_max."Score_9" - score_max."max_Score") AS "exp_delta_Score_9" 
FROM score_max), 
score_class_union_soft AS 
(SELECT soft_scu."KEY" AS "KEY", soft_scu.class AS class, soft_scu."exp_delta_Score" AS "exp_delta_Score" 
FROM (SELECT score_soft_max_deltas."KEY" AS "KEY", 0 AS class, score_soft_max_deltas."exp_delta_Score_0" AS "exp_delta_Score" 
FROM score_soft_max_deltas UNION ALL SELECT score_soft_max_deltas."KEY" AS "KEY", 1 AS class, score_soft_max_deltas."exp_delta_Score_1" AS "exp_delta_Score" 
FROM score_soft_max_deltas UNION ALL SELECT score_soft_max_deltas."KEY" AS "KEY", 2 AS class, score_soft_max_deltas."exp_delta_Score_2" AS "exp_delta_Score" 
FROM score_soft_max_deltas UNION ALL SELECT score_soft_max_deltas."KEY" AS "KEY", 3 AS class, score_soft_max_deltas."exp_delta_Score_3" AS "exp_delta_Score" 
FROM score_soft_max_deltas UNION ALL SELECT score_soft_max_deltas."KEY" AS "KEY", 4 AS class, score_soft_max_deltas."exp_delta_Score_4" AS "exp_delta_Score" 
FROM score_soft_max_deltas UNION ALL SELECT score_soft_max_deltas."KEY" AS "KEY", 5 AS class, score_soft_max_deltas."exp_delta_Score_5" AS "exp_delta_Score" 
FROM score_soft_max_deltas UNION ALL SELECT score_soft_max_deltas."KEY" AS "KEY", 6 AS class, score_soft_max_deltas."exp_delta_Score_6" AS "exp_delta_Score" 
FROM score_soft_max_deltas UNION ALL SELECT score_soft_max_deltas."KEY" AS "KEY", 7 AS class, score_soft_max_deltas."exp_delta_Score_7" AS "exp_delta_Score" 
FROM score_soft_max_deltas UNION ALL SELECT score_soft_max_deltas."KEY" AS "KEY", 8 AS class, score_soft_max_deltas."exp_delta_Score_8" AS "exp_delta_Score" 
FROM score_soft_max_deltas UNION ALL SELECT score_soft_max_deltas."KEY" AS "KEY", 9 AS class, score_soft_max_deltas."exp_delta_Score_9" AS "exp_delta_Score" 
FROM score_soft_max_deltas) AS soft_scu), 
score_soft_max AS 
(SELECT score_soft_max_deltas."KEY" AS "KEY", score_soft_max_deltas."Score_0" AS "Score_0", score_soft_max_deltas."Score_1" AS "Score_1", score_soft_max_deltas."Score_2" AS "Score_2", score_soft_max_deltas."Score_3" AS "Score_3", score_soft_max_deltas."Score_4" AS "Score_4", score_soft_max_deltas."Score_5" AS "Score_5", score_soft_max_deltas."Score_6" AS "Score_6", score_soft_max_deltas."Score_7" AS "Score_7", score_soft_max_deltas."Score_8" AS "Score_8", score_soft_max_deltas."Score_9" AS "Score_9", score_soft_max_deltas."Proba_0" AS "Proba_0", score_soft_max_deltas."Proba_1" AS "Proba_1", score_soft_max_deltas."Proba_2" AS "Proba_2", score_soft_max_deltas."Proba_3" AS "Proba_3", score_soft_max_deltas."Proba_4" AS "Proba_4", score_soft_max_deltas."Proba_5" AS "Proba_5", score_soft_max_deltas."Proba_6" AS "Proba_6", score_soft_max_deltas."Proba_7" AS "Proba_7", score_soft_max_deltas."Proba_8" AS "Proba_8", score_soft_max_deltas."Proba_9" AS "Proba_9", score_soft_max_deltas."LogProba_0" AS "LogProba_0", score_soft_max_deltas."LogProba_1" AS "LogProba_1", score_soft_max_deltas."LogProba_2" AS "LogProba_2", score_soft_max_deltas."LogProba_3" AS "LogProba_3", score_soft_max_deltas."LogProba_4" AS "LogProba_4", score_soft_max_deltas."LogProba_5" AS "LogProba_5", score_soft_max_deltas."LogProba_6" AS "LogProba_6", score_soft_max_deltas."LogProba_7" AS "LogProba_7", score_soft_max_deltas."LogProba_8" AS "LogProba_8", score_soft_max_deltas."LogProba_9" AS "LogProba_9", score_soft_max_deltas."Decision" AS "Decision", score_soft_max_deltas."DecisionProba" AS "DecisionProba", score_soft_max_deltas."KEY_m" AS "KEY_m", score_soft_max_deltas."max_Score" AS "max_Score", score_soft_max_deltas."exp_delta_Score_0" AS "exp_delta_Score_0", score_soft_max_deltas."exp_delta_Score_1" AS "exp_delta_Score_1", score_soft_max_deltas."exp_delta_Score_2" AS "exp_delta_Score_2", score_soft_max_deltas."exp_delta_Score_3" AS "exp_delta_Score_3", score_soft_max_deltas."exp_delta_Score_4" AS "exp_delta_Score_4", score_soft_max_deltas."exp_delta_Score_5" AS "exp_delta_Score_5", score_soft_max_deltas."exp_delta_Score_6" AS "exp_delta_Score_6", score_soft_max_deltas."exp_delta_Score_7" AS "exp_delta_Score_7", score_soft_max_deltas."exp_delta_Score_8" AS "exp_delta_Score_8", score_soft_max_deltas."exp_delta_Score_9" AS "exp_delta_Score_9", sum_exp_t."KEY_sum" AS "KEY_sum", sum_exp_t."sum_ExpDeltaScore" AS "sum_ExpDeltaScore" 
FROM score_soft_max_deltas LEFT OUTER JOIN (SELECT score_class_union_soft."KEY" AS "KEY_sum", sum(score_class_union_soft."exp_delta_Score") AS "sum_ExpDeltaScore" 
FROM score_class_union_soft GROUP BY score_class_union_soft."KEY") AS sum_exp_t ON score_soft_max_deltas."KEY" = sum_exp_t."KEY_sum"), 
union_with_max AS 
(SELECT score_class_union."KEY_u" AS "KEY_u", score_class_union.class AS class, score_class_union."LogProba" AS "LogProba", score_class_union."Proba" AS "Proba", score_class_union."Score" AS "Score", score_soft_max."KEY" AS "KEY", score_soft_max."Score_0" AS "Score_0", score_soft_max."Score_1" AS "Score_1", score_soft_max."Score_2" AS "Score_2", score_soft_max."Score_3" AS "Score_3", score_soft_max."Score_4" AS "Score_4", score_soft_max."Score_5" AS "Score_5", score_soft_max."Score_6" AS "Score_6", score_soft_max."Score_7" AS "Score_7", score_soft_max."Score_8" AS "Score_8", score_soft_max."Score_9" AS "Score_9", score_soft_max."Proba_0" AS "Proba_0", score_soft_max."Proba_1" AS "Proba_1", score_soft_max."Proba_2" AS "Proba_2", score_soft_max."Proba_3" AS "Proba_3", score_soft_max."Proba_4" AS "Proba_4", score_soft_max."Proba_5" AS "Proba_5", score_soft_max."Proba_6" AS "Proba_6", score_soft_max."Proba_7" AS "Proba_7", score_soft_max."Proba_8" AS "Proba_8", score_soft_max."Proba_9" AS "Proba_9", score_soft_max."LogProba_0" AS "LogProba_0", score_soft_max."LogProba_1" AS "LogProba_1", score_soft_max."LogProba_2" AS "LogProba_2", score_soft_max."LogProba_3" AS "LogProba_3", score_soft_max."LogProba_4" AS "LogProba_4", score_soft_max."LogProba_5" AS "LogProba_5", score_soft_max."LogProba_6" AS "LogProba_6", score_soft_max."LogProba_7" AS "LogProba_7", score_soft_max."LogProba_8" AS "LogProba_8", score_soft_max."LogProba_9" AS "LogProba_9", score_soft_max."Decision" AS "Decision", score_soft_max."DecisionProba" AS "DecisionProba", score_soft_max."KEY_m" AS "KEY_m", score_soft_max."max_Score" AS "max_Score", score_soft_max."exp_delta_Score_0" AS "exp_delta_Score_0", score_soft_max."exp_delta_Score_1" AS "exp_delta_Score_1", score_soft_max."exp_delta_Score_2" AS "exp_delta_Score_2", score_soft_max."exp_delta_Score_3" AS "exp_delta_Score_3", score_soft_max."exp_delta_Score_4" AS "exp_delta_Score_4", score_soft_max."exp_delta_Score_5" AS "exp_delta_Score_5", score_soft_max."exp_delta_Score_6" AS "exp_delta_Score_6", score_soft_max."exp_delta_Score_7" AS "exp_delta_Score_7", score_soft_max."exp_delta_Score_8" AS "exp_delta_Score_8", score_soft_max."exp_delta_Score_9" AS "exp_delta_Score_9", score_soft_max."KEY_sum" AS "KEY_sum", score_soft_max."sum_ExpDeltaScore" AS "sum_ExpDeltaScore" 
FROM score_class_union LEFT OUTER JOIN score_soft_max ON score_class_union."KEY_u" = score_soft_max."KEY"), 
arg_max_cte AS 
(SELECT score_soft_max."KEY" AS "KEY", score_soft_max."Score_0" AS "Score_0", score_soft_max."Score_1" AS "Score_1", score_soft_max."Score_2" AS "Score_2", score_soft_max."Score_3" AS "Score_3", score_soft_max."Score_4" AS "Score_4", score_soft_max."Score_5" AS "Score_5", score_soft_max."Score_6" AS "Score_6", score_soft_max."Score_7" AS "Score_7", score_soft_max."Score_8" AS "Score_8", score_soft_max."Score_9" AS "Score_9", score_soft_max."Proba_0" AS "Proba_0", score_soft_max."Proba_1" AS "Proba_1", score_soft_max."Proba_2" AS "Proba_2", score_soft_max."Proba_3" AS "Proba_3", score_soft_max."Proba_4" AS "Proba_4", score_soft_max."Proba_5" AS "Proba_5", score_soft_max."Proba_6" AS "Proba_6", score_soft_max."Proba_7" AS "Proba_7", score_soft_max."Proba_8" AS "Proba_8", score_soft_max."Proba_9" AS "Proba_9", score_soft_max."LogProba_0" AS "LogProba_0", score_soft_max."LogProba_1" AS "LogProba_1", score_soft_max."LogProba_2" AS "LogProba_2", score_soft_max."LogProba_3" AS "LogProba_3", score_soft_max."LogProba_4" AS "LogProba_4", score_soft_max."LogProba_5" AS "LogProba_5", score_soft_max."LogProba_6" AS "LogProba_6", score_soft_max."LogProba_7" AS "LogProba_7", score_soft_max."LogProba_8" AS "LogProba_8", score_soft_max."LogProba_9" AS "LogProba_9", score_soft_max."Decision" AS "Decision", score_soft_max."DecisionProba" AS "DecisionProba", score_soft_max."KEY_m" AS "KEY_m", score_soft_max."max_Score" AS "max_Score", score_soft_max."exp_delta_Score_0" AS "exp_delta_Score_0", score_soft_max."exp_delta_Score_1" AS "exp_delta_Score_1", score_soft_max."exp_delta_Score_2" AS "exp_delta_Score_2", score_soft_max."exp_delta_Score_3" AS "exp_delta_Score_3", score_soft_max."exp_delta_Score_4" AS "exp_delta_Score_4", score_soft_max."exp_delta_Score_5" AS "exp_delta_Score_5", score_soft_max."exp_delta_Score_6" AS "exp_delta_Score_6", score_soft_max."exp_delta_Score_7" AS "exp_delta_Score_7", score_soft_max."exp_delta_Score_8" AS "exp_delta_Score_8", score_soft_max."exp_delta_Score_9" AS "exp_delta_Score_9", score_soft_max."KEY_sum" AS "KEY_sum", score_soft_max."sum_ExpDeltaScore" AS "sum_ExpDeltaScore", "arg_max_t_Score"."KEY_Score" AS "KEY_Score", "arg_max_t_Score"."arg_max_Score" AS "arg_max_Score", soft_max_comp."KEY_softmax" AS "KEY_softmax", soft_max_comp."SoftProba_0" AS "SoftProba_0", soft_max_comp."SoftProba_1" AS "SoftProba_1", soft_max_comp."SoftProba_2" AS "SoftProba_2", soft_max_comp."SoftProba_3" AS "SoftProba_3", soft_max_comp."SoftProba_4" AS "SoftProba_4", soft_max_comp."SoftProba_5" AS "SoftProba_5", soft_max_comp."SoftProba_6" AS "SoftProba_6", soft_max_comp."SoftProba_7" AS "SoftProba_7", soft_max_comp."SoftProba_8" AS "SoftProba_8", soft_max_comp."SoftProba_9" AS "SoftProba_9" 
FROM score_soft_max LEFT OUTER JOIN (SELECT union_with_max."KEY" AS "KEY_Score", min(union_with_max.class) AS "arg_max_Score" 
FROM union_with_max 
WHERE union_with_max."max_Score" <= union_with_max."Score" GROUP BY union_with_max."KEY") AS "arg_max_t_Score" ON score_soft_max."KEY" = "arg_max_t_Score"."KEY_Score" LEFT OUTER JOIN (SELECT score_soft_max."KEY" AS "KEY_softmax", score_soft_max."exp_delta_Score_0" / score_soft_max."sum_ExpDeltaScore" AS "SoftProba_0", score_soft_max."exp_delta_Score_1" / score_soft_max."sum_ExpDeltaScore" AS "SoftProba_1", score_soft_max."exp_delta_Score_2" / score_soft_max."sum_ExpDeltaScore" AS "SoftProba_2", score_soft_max."exp_delta_Score_3" / score_soft_max."sum_ExpDeltaScore" AS "SoftProba_3", score_soft_max."exp_delta_Score_4" / score_soft_max."sum_ExpDeltaScore" AS "SoftProba_4", score_soft_max."exp_delta_Score_5" / score_soft_max."sum_ExpDeltaScore" AS "SoftProba_5", score_soft_max."exp_delta_Score_6" / score_soft_max."sum_ExpDeltaScore" AS "SoftProba_6", score_soft_max."exp_delta_Score_7" / score_soft_max."sum_ExpDeltaScore" AS "SoftProba_7", score_soft_max."exp_delta_Score_8" / score_soft_max."sum_ExpDeltaScore" AS "SoftProba_8", score_soft_max."exp_delta_Score_9" / score_soft_max."sum_ExpDeltaScore" AS "SoftProba_9" 
FROM score_soft_max) AS soft_max_comp ON soft_max_comp."KEY_softmax" = "arg_max_t_Score"."KEY_Score")
 SELECT arg_max_cte."KEY" AS "KEY", CAST(NULL AS DOUBLE) AS "Score_0", CAST(NULL AS DOUBLE) AS "Score_1", CAST(NULL AS DOUBLE) AS "Score_2", CAST(NULL AS DOUBLE) AS "Score_3", CAST(NULL AS DOUBLE) AS "Score_4", CAST(NULL AS DOUBLE) AS "Score_5", CAST(NULL AS DOUBLE) AS "Score_6", CAST(NULL AS DOUBLE) AS "Score_7", CAST(NULL AS DOUBLE) AS "Score_8", CAST(NULL AS DOUBLE) AS "Score_9", arg_max_cte."SoftProba_0" AS "Proba_0", arg_max_cte."SoftProba_1" AS "Proba_1", arg_max_cte."SoftProba_2" AS "Proba_2", arg_max_cte."SoftProba_3" AS "Proba_3", arg_max_cte."SoftProba_4" AS "Proba_4", arg_max_cte."SoftProba_5" AS "Proba_5", arg_max_cte."SoftProba_6" AS "Proba_6", arg_max_cte."SoftProba_7" AS "Proba_7", arg_max_cte."SoftProba_8" AS "Proba_8", arg_max_cte."SoftProba_9" AS "Proba_9", CASE WHEN (arg_max_cte."SoftProba_0" IS NULL OR arg_max_cte."SoftProba_0" > 0.0) THEN ln(arg_max_cte."SoftProba_0") ELSE -1.79769313486231e+308 END AS "LogProba_0", CASE WHEN (arg_max_cte."SoftProba_1" IS NULL OR arg_max_cte."SoftProba_1" > 0.0) THEN ln(arg_max_cte."SoftProba_1") ELSE -1.79769313486231e+308 END AS "LogProba_1", CASE WHEN (arg_max_cte."SoftProba_2" IS NULL OR arg_max_cte."SoftProba_2" > 0.0) THEN ln(arg_max_cte."SoftProba_2") ELSE -1.79769313486231e+308 END AS "LogProba_2", CASE WHEN (arg_max_cte."SoftProba_3" IS NULL OR arg_max_cte."SoftProba_3" > 0.0) THEN ln(arg_max_cte."SoftProba_3") ELSE -1.79769313486231e+308 END AS "LogProba_3", CASE WHEN (arg_max_cte."SoftProba_4" IS NULL OR arg_max_cte."SoftProba_4" > 0.0) THEN ln(arg_max_cte."SoftProba_4") ELSE -1.79769313486231e+308 END AS "LogProba_4", CASE WHEN (arg_max_cte."SoftProba_5" IS NULL OR arg_max_cte."SoftProba_5" > 0.0) THEN ln(arg_max_cte."SoftProba_5") ELSE -1.79769313486231e+308 END AS "LogProba_5", CASE WHEN (arg_max_cte."SoftProba_6" IS NULL OR arg_max_cte."SoftProba_6" > 0.0) THEN ln(arg_max_cte."SoftProba_6") ELSE -1.79769313486231e+308 END AS "LogProba_6", CASE WHEN (arg_max_cte."SoftProba_7" IS NULL OR arg_max_cte."SoftProba_7" > 0.0) THEN ln(arg_max_cte."SoftProba_7") ELSE -1.79769313486231e+308 END AS "LogProba_7", CASE WHEN (arg_max_cte."SoftProba_8" IS NULL OR arg_max_cte."SoftProba_8" > 0.0) THEN ln(arg_max_cte."SoftProba_8") ELSE -1.79769313486231e+308 END AS "LogProba_8", CASE WHEN (arg_max_cte."SoftProba_9" IS NULL OR arg_max_cte."SoftProba_9" > 0.0) THEN ln(arg_max_cte."SoftProba_9") ELSE -1.79769313486231e+308 END AS "LogProba_9", arg_max_cte."arg_max_Score" AS "Decision", CASE WHEN (arg_max_cte."SoftProba_0" <= CASE WHEN (arg_max_cte."SoftProba_1" <= CASE WHEN (arg_max_cte."SoftProba_2" <= CASE WHEN (arg_max_cte."SoftProba_3" <= CASE WHEN (arg_max_cte."SoftProba_4" <= CASE WHEN (arg_max_cte."SoftProba_5" <= CASE WHEN (arg_max_cte."SoftProba_6" <= CASE WHEN (arg_max_cte."SoftProba_7" <= CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END) THEN CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END ELSE arg_max_cte."SoftProba_7" END) THEN CASE WHEN (arg_max_cte."SoftProba_7" <= CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END) THEN CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END ELSE arg_max_cte."SoftProba_7" END ELSE arg_max_cte."SoftProba_6" END) THEN CASE WHEN (arg_max_cte."SoftProba_6" <= CASE WHEN (arg_max_cte."SoftProba_7" <= CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END) THEN CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END ELSE arg_max_cte."SoftProba_7" END) THEN CASE WHEN (arg_max_cte."SoftProba_7" <= CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END) THEN CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END ELSE arg_max_cte."SoftProba_7" END ELSE arg_max_cte."SoftProba_6" END ELSE arg_max_cte."SoftProba_5" END) THEN CASE WHEN (arg_max_cte."SoftProba_5" <= CASE WHEN (arg_max_cte."SoftProba_6" <= CASE WHEN (arg_max_cte."SoftProba_7" <= CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END) THEN CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END ELSE arg_max_cte."SoftProba_7" END) THEN CASE WHEN (arg_max_cte."SoftProba_7" <= CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END) THEN CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END ELSE arg_max_cte."SoftProba_7" END ELSE arg_max_cte."SoftProba_6" END) THEN CASE WHEN (arg_max_cte."SoftProba_6" <= CASE WHEN (arg_max_cte."SoftProba_7" <= CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END) THEN CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END ELSE arg_max_cte."SoftProba_7" END) THEN CASE WHEN (arg_max_cte."SoftProba_7" <= CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END) THEN CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END ELSE arg_max_cte."SoftProba_7" END ELSE arg_max_cte."SoftProba_6" END ELSE arg_max_cte."SoftProba_5" END ELSE arg_max_cte."SoftProba_4" END) THEN CASE WHEN (arg_max_cte."SoftProba_4" <= CASE WHEN (arg_max_cte."SoftProba_5" <= CASE WHEN (arg_max_cte."SoftProba_6" <= CASE WHEN (arg_max_cte."SoftProba_7" <= CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END) THEN CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END ELSE arg_max_cte."SoftProba_7" END) THEN CASE WHEN (arg_max_cte."SoftProba_7" <= CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END) THEN CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END ELSE arg_max_cte."SoftProba_7" END ELSE arg_max_cte."SoftProba_6" END) THEN CASE WHEN (arg_max_cte."SoftProba_6" <= CASE WHEN (arg_max_cte."SoftProba_7" <= CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END) THEN CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END ELSE arg_max_cte."SoftProba_7" END) THEN CASE WHEN (arg_max_cte."SoftProba_7" <= CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END) THEN CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END ELSE arg_max_cte."SoftProba_7" END ELSE arg_max_cte."SoftProba_6" END ELSE arg_max_cte."SoftProba_5" END) THEN CASE WHEN (arg_max_cte."SoftProba_5" <= CASE WHEN (arg_max_cte."SoftProba_6" <= CASE WHEN (arg_max_cte."SoftProba_7" <= CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END) THEN CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END ELSE arg_max_cte."SoftProba_7" END) THEN CASE WHEN (arg_max_cte."SoftProba_7" <= CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END) THEN CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END ELSE arg_max_cte."SoftProba_7" END ELSE arg_max_cte."SoftProba_6" END) THEN CASE WHEN (arg_max_cte."SoftProba_6" <= CASE WHEN (arg_max_cte."SoftProba_7" <= CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END) THEN CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END ELSE arg_max_cte."SoftProba_7" END) THEN CASE WHEN (arg_max_cte."SoftProba_7" <= CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END) THEN CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END ELSE arg_max_cte."SoftProba_7" END ELSE arg_max_cte."SoftProba_6" END ELSE arg_max_cte."SoftProba_5" END ELSE arg_max_cte."SoftProba_4" END ELSE arg_max_cte."SoftProba_3" END) THEN CASE WHEN (arg_max_cte."SoftProba_3" <= CASE WHEN (arg_max_cte."SoftProba_4" <= CASE WHEN (arg_max_cte."SoftProba_5" <= CASE WHEN (arg_max_cte."SoftProba_6" <= CASE WHEN (arg_max_cte."SoftProba_7" <= CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END) THEN CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END ELSE arg_max_cte."SoftProba_7" END) THEN CASE WHEN (arg_max_cte."SoftProba_7" <= CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END) THEN CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END ELSE arg_max_cte."SoftProba_7" END ELSE arg_max_cte."SoftProba_6" END) THEN CASE WHEN (arg_max_cte."SoftProba_6" <= CASE WHEN (arg_max_cte."SoftProba_7" <= CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END) THEN CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END ELSE arg_max_cte."SoftProba_7" END) THEN CASE WHEN (arg_max_cte."SoftProba_7" <= CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END) THEN CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END ELSE arg_max_cte."SoftProba_7" END ELSE arg_max_cte."SoftProba_6" END ELSE arg_max_cte."SoftProba_5" END) THEN CASE WHEN (arg_max_cte."SoftProba_5" <= CASE WHEN (arg_max_cte."SoftProba_6" <= CASE WHEN (arg_max_cte."SoftProba_7" <= CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END) THEN CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END ELSE arg_max_cte."SoftProba_7" END) THEN CASE WHEN (arg_max_cte."SoftProba_7" <= CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END) THEN CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END ELSE arg_max_cte."SoftProba_7" END ELSE arg_max_cte."SoftProba_6" END) THEN CASE WHEN (arg_max_cte."SoftProba_6" <= CASE WHEN (arg_max_cte."SoftProba_7" <= CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END) THEN CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END ELSE arg_max_cte."SoftProba_7" END) THEN CASE WHEN (arg_max_cte."SoftProba_7" <= CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END) THEN CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END ELSE arg_max_cte."SoftProba_7" END ELSE arg_max_cte."SoftProba_6" END ELSE arg_max_cte."SoftProba_5" END ELSE arg_max_cte."SoftProba_4" END) THEN CASE WHEN (arg_max_cte."SoftProba_4" <= CASE WHEN (arg_max_cte."SoftProba_5" <= CASE WHEN (arg_max_cte."SoftProba_6" <= CASE WHEN (arg_max_cte."SoftProba_7" <= CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END) THEN CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END ELSE arg_max_cte."SoftProba_7" END) THEN CASE WHEN (arg_max_cte."SoftProba_7" <= CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END) THEN CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END ELSE arg_max_cte."SoftProba_7" END ELSE arg_max_cte."SoftProba_6" END) THEN CASE WHEN (arg_max_cte."SoftProba_6" <= CASE WHEN (arg_max_cte."SoftProba_7" <= CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END) THEN CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END ELSE arg_max_cte."SoftProba_7" END) THEN CASE WHEN (arg_max_cte."SoftProba_7" <= CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END) THEN CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END ELSE arg_max_cte."SoftProba_7" END ELSE arg_max_cte."SoftProba_6" END ELSE arg_max_cte."SoftProba_5" END) THEN CASE WHEN (arg_max_cte."SoftProba_5" <= CASE WHEN (arg_max_cte."SoftProba_6" <= CASE WHEN (arg_max_cte."SoftProba_7" <= CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END) THEN CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END ELSE arg_max_cte."SoftProba_7" END) THEN CASE WHEN (arg_max_cte."SoftProba_7" <= CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END) THEN CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END ELSE arg_max_cte."SoftProba_7" END ELSE arg_max_cte."SoftProba_6" END) THEN CASE WHEN (arg_max_cte."SoftProba_6" <= CASE WHEN (arg_max_cte."SoftProba_7" <= CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END) THEN CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END ELSE arg_max_cte."SoftProba_7" END) THEN CASE WHEN (arg_max_cte."SoftProba_7" <= CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END) THEN CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END ELSE arg_max_cte."SoftProba_7" END ELSE arg_max_cte."SoftProba_6" END ELSE arg_max_cte."SoftProba_5" END ELSE arg_max_cte."SoftProba_4" END ELSE arg_max_cte."SoftProba_3" END ELSE arg_max_cte."SoftProba_2" END) THEN CASE WHEN (arg_max_cte."SoftProba_2" <= CASE WHEN (arg_max_cte."SoftProba_3" <= CASE WHEN (arg_max_cte."SoftProba_4" <= CASE WHEN (arg_max_cte."SoftProba_5" <= CASE WHEN (arg_max_cte."SoftProba_6" <= CASE WHEN (arg_max_cte."SoftProba_7" <= CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END) THEN CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END ELSE arg_max_cte."SoftProba_7" END) THEN CASE WHEN (arg_max_cte."SoftProba_7" <= CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END) THEN CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END ELSE arg_max_cte."SoftProba_7" END ELSE arg_max_cte."SoftProba_6" END) THEN CASE WHEN (arg_max_cte."SoftProba_6" <= CASE WHEN (arg_max_cte."SoftProba_7" <= CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END) THEN CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END ELSE arg_max_cte."SoftProba_7" END) THEN CASE WHEN (arg_max_cte."SoftProba_7" <= CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END) THEN CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END ELSE arg_max_cte."SoftProba_7" END ELSE arg_max_cte."SoftProba_6" END ELSE arg_max_cte."SoftProba_5" END) THEN CASE WHEN (arg_max_cte."SoftProba_5" <= CASE WHEN (arg_max_cte."SoftProba_6" <= CASE WHEN (arg_max_cte."SoftProba_7" <= CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END) THEN CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END ELSE arg_max_cte."SoftProba_7" END) THEN CASE WHEN (arg_max_cte."SoftProba_7" <= CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END) THEN CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END ELSE arg_max_cte."SoftProba_7" END ELSE arg_max_cte."SoftProba_6" END) THEN CASE WHEN (arg_max_cte."SoftProba_6" <= CASE WHEN (arg_max_cte."SoftProba_7" <= CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END) THEN CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END ELSE arg_max_cte."SoftProba_7" END) THEN CASE WHEN (arg_max_cte."SoftProba_7" <= CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END) THEN CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END ELSE arg_max_cte."SoftProba_7" END ELSE arg_max_cte."SoftProba_6" END ELSE arg_max_cte."SoftProba_5" END ELSE arg_max_cte."SoftProba_4" END) THEN CASE WHEN (arg_max_cte."SoftProba_4" <= CASE WHEN (arg_max_cte."SoftProba_5" <= CASE WHEN (arg_max_cte."SoftProba_6" <= CASE WHEN (arg_max_cte."SoftProba_7" <= CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END) THEN CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END ELSE arg_max_cte."SoftProba_7" END) THEN CASE WHEN (arg_max_cte."SoftProba_7" <= CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END) THEN CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END ELSE arg_max_cte."SoftProba_7" END ELSE arg_max_cte."SoftProba_6" END) THEN CASE WHEN (arg_max_cte."SoftProba_6" <= CASE WHEN (arg_max_cte."SoftProba_7" <= CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END) THEN CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END ELSE arg_max_cte."SoftProba_7" END) THEN CASE WHEN (arg_max_cte."SoftProba_7" <= CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END) THEN CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END ELSE arg_max_cte."SoftProba_7" END ELSE arg_max_cte."SoftProba_6" END ELSE arg_max_cte."SoftProba_5" END) THEN CASE WHEN (arg_max_cte."SoftProba_5" <= CASE WHEN (arg_max_cte."SoftProba_6" <= CASE WHEN (arg_max_cte."SoftProba_7" <= CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END) THEN CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END ELSE arg_max_cte."SoftProba_7" END) THEN CASE WHEN (arg_max_cte."SoftProba_7" <= CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END) THEN CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END ELSE arg_max_cte."SoftProba_7" END ELSE arg_max_cte."SoftProba_6" END) THEN CASE WHEN (arg_max_cte."SoftProba_6" <= CASE WHEN (arg_max_cte."SoftProba_7" <= CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END) THEN CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END ELSE arg_max_cte."SoftProba_7" END) THEN CASE WHEN (arg_max_cte."SoftProba_7" <= CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END) THEN CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END ELSE arg_max_cte."SoftProba_7" END ELSE arg_max_cte."SoftProba_6" END ELSE arg_max_cte."SoftProba_5" END ELSE arg_max_cte."SoftProba_4" END ELSE arg_max_cte."SoftProba_3" END) THEN CASE WHEN (arg_max_cte."SoftProba_3" <= CASE WHEN (arg_max_cte."SoftProba_4" <= CASE WHEN (arg_max_cte."SoftProba_5" <= CASE WHEN (arg_max_cte."SoftProba_6" <= CASE WHEN (arg_max_cte."SoftProba_7" <= CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END) THEN CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END ELSE arg_max_cte."SoftProba_7" END) THEN CASE WHEN (arg_max_cte."SoftProba_7" <= CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END) THEN CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END ELSE arg_max_cte."SoftProba_7" END ELSE arg_max_cte."SoftProba_6" END) THEN CASE WHEN (arg_max_cte."SoftProba_6" <= CASE WHEN (arg_max_cte."SoftProba_7" <= CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END) THEN CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END ELSE arg_max_cte."SoftProba_7" END) THEN CASE WHEN (arg_max_cte."SoftProba_7" <= CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END) THEN CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END ELSE arg_max_cte."SoftProba_7" END ELSE arg_max_cte."SoftProba_6" END ELSE arg_max_cte."SoftProba_5" END) THEN CASE WHEN (arg_max_cte."SoftProba_5" <= CASE WHEN (arg_max_cte."SoftProba_6" <= CASE WHEN (arg_max_cte."SoftProba_7" <= CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END) THEN CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END ELSE arg_max_cte."SoftProba_7" END) THEN CASE WHEN (arg_max_cte."SoftProba_7" <= CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END) THEN CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END ELSE arg_max_cte."SoftProba_7" END ELSE arg_max_cte."SoftProba_6" END) THEN CASE WHEN (arg_max_cte."SoftProba_6" <= CASE WHEN (arg_max_cte."SoftProba_7" <= CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END) THEN CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END ELSE arg_max_cte."SoftProba_7" END) THEN CASE WHEN (arg_max_cte."SoftProba_7" <= CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END) THEN CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END ELSE arg_max_cte."SoftProba_7" END ELSE arg_max_cte."SoftProba_6" END ELSE arg_max_cte."SoftProba_5" END ELSE arg_max_cte."SoftProba_4" END) THEN CASE WHEN (arg_max_cte."SoftProba_4" <= CASE WHEN (arg_max_cte."SoftProba_5" <= CASE WHEN (arg_max_cte."SoftProba_6" <= CASE WHEN (arg_max_cte."SoftProba_7" <= CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END) THEN CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END ELSE arg_max_cte."SoftProba_7" END) THEN CASE WHEN (arg_max_cte."SoftProba_7" <= CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END) THEN CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END ELSE arg_max_cte."SoftProba_7" END ELSE arg_max_cte."SoftProba_6" END) THEN CASE WHEN (arg_max_cte."SoftProba_6" <= CASE WHEN (arg_max_cte."SoftProba_7" <= CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END) THEN CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END ELSE arg_max_cte."SoftProba_7" END) THEN CASE WHEN (arg_max_cte."SoftProba_7" <= CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END) THEN CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END ELSE arg_max_cte."SoftProba_7" END ELSE arg_max_cte."SoftProba_6" END ELSE arg_max_cte."SoftProba_5" END) THEN CASE WHEN (arg_max_cte."SoftProba_5" <= CASE WHEN (arg_max_cte."SoftProba_6" <= CASE WHEN (arg_max_cte."SoftProba_7" <= CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END) THEN CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END ELSE arg_max_cte."SoftProba_7" END) THEN CASE WHEN (arg_max_cte."SoftProba_7" <= CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END) THEN CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END ELSE arg_max_cte."SoftProba_7" END ELSE arg_max_cte."SoftProba_6" END) THEN CASE WHEN (arg_max_cte."SoftProba_6" <= CASE WHEN (arg_max_cte."SoftProba_7" <= CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END) THEN CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END ELSE arg_max_cte."SoftProba_7" END) THEN CASE WHEN (arg_max_cte."SoftProba_7" <= CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END) THEN CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END ELSE arg_max_cte."SoftProba_7" END ELSE arg_max_cte."SoftProba_6" END ELSE arg_max_cte."SoftProba_5" END ELSE arg_max_cte."SoftProba_4" END ELSE arg_max_cte."SoftProba_3" END ELSE arg_max_cte."SoftProba_2" END ELSE arg_max_cte."SoftProba_1" END) THEN CASE WHEN (arg_max_cte."SoftProba_1" <= CASE WHEN (arg_max_cte."SoftProba_2" <= CASE WHEN (arg_max_cte."SoftProba_3" <= CASE WHEN (arg_max_cte."SoftProba_4" <= CASE WHEN (arg_max_cte."SoftProba_5" <= CASE WHEN (arg_max_cte."SoftProba_6" <= CASE WHEN (arg_max_cte."SoftProba_7" <= CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END) THEN CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END ELSE arg_max_cte."SoftProba_7" END) THEN CASE WHEN (arg_max_cte."SoftProba_7" <= CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END) THEN CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END ELSE arg_max_cte."SoftProba_7" END ELSE arg_max_cte."SoftProba_6" END) THEN CASE WHEN (arg_max_cte."SoftProba_6" <= CASE WHEN (arg_max_cte."SoftProba_7" <= CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END) THEN CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END ELSE arg_max_cte."SoftProba_7" END) THEN CASE WHEN (arg_max_cte."SoftProba_7" <= CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END) THEN CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END ELSE arg_max_cte."SoftProba_7" END ELSE arg_max_cte."SoftProba_6" END ELSE arg_max_cte."SoftProba_5" END) THEN CASE WHEN (arg_max_cte."SoftProba_5" <= CASE WHEN (arg_max_cte."SoftProba_6" <= CASE WHEN (arg_max_cte."SoftProba_7" <= CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END) THEN CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END ELSE arg_max_cte."SoftProba_7" END) THEN CASE WHEN (arg_max_cte."SoftProba_7" <= CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END) THEN CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END ELSE arg_max_cte."SoftProba_7" END ELSE arg_max_cte."SoftProba_6" END) THEN CASE WHEN (arg_max_cte."SoftProba_6" <= CASE WHEN (arg_max_cte."SoftProba_7" <= CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END) THEN CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END ELSE arg_max_cte."SoftProba_7" END) THEN CASE WHEN (arg_max_cte."SoftProba_7" <= CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END) THEN CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END ELSE arg_max_cte."SoftProba_7" END ELSE arg_max_cte."SoftProba_6" END ELSE arg_max_cte."SoftProba_5" END ELSE arg_max_cte."SoftProba_4" END) THEN CASE WHEN (arg_max_cte."SoftProba_4" <= CASE WHEN (arg_max_cte."SoftProba_5" <= CASE WHEN (arg_max_cte."SoftProba_6" <= CASE WHEN (arg_max_cte."SoftProba_7" <= CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END) THEN CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END ELSE arg_max_cte."SoftProba_7" END) THEN CASE WHEN (arg_max_cte."SoftProba_7" <= CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END) THEN CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END ELSE arg_max_cte."SoftProba_7" END ELSE arg_max_cte."SoftProba_6" END) THEN CASE WHEN (arg_max_cte."SoftProba_6" <= CASE WHEN (arg_max_cte."SoftProba_7" <= CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END) THEN CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END ELSE arg_max_cte."SoftProba_7" END) THEN CASE WHEN (arg_max_cte."SoftProba_7" <= CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END) THEN CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END ELSE arg_max_cte."SoftProba_7" END ELSE arg_max_cte."SoftProba_6" END ELSE arg_max_cte."SoftProba_5" END) THEN CASE WHEN (arg_max_cte."SoftProba_5" <= CASE WHEN (arg_max_cte."SoftProba_6" <= CASE WHEN (arg_max_cte."SoftProba_7" <= CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END) THEN CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END ELSE arg_max_cte."SoftProba_7" END) THEN CASE WHEN (arg_max_cte."SoftProba_7" <= CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END) THEN CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END ELSE arg_max_cte."SoftProba_7" END ELSE arg_max_cte."SoftProba_6" END) THEN CASE WHEN (arg_max_cte."SoftProba_6" <= CASE WHEN (arg_max_cte."SoftProba_7" <= CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END) THEN CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END ELSE arg_max_cte."SoftProba_7" END) THEN CASE WHEN (arg_max_cte."SoftProba_7" <= CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END) THEN CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END ELSE arg_max_cte."SoftProba_7" END ELSE arg_max_cte."SoftProba_6" END ELSE arg_max_cte."SoftProba_5" END ELSE arg_max_cte."SoftProba_4" END ELSE arg_max_cte."SoftProba_3" END) THEN CASE WHEN (arg_max_cte."SoftProba_3" <= CASE WHEN (arg_max_cte."SoftProba_4" <= CASE WHEN (arg_max_cte."SoftProba_5" <= CASE WHEN (arg_max_cte."SoftProba_6" <= CASE WHEN (arg_max_cte."SoftProba_7" <= CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END) THEN CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END ELSE arg_max_cte."SoftProba_7" END) THEN CASE WHEN (arg_max_cte."SoftProba_7" <= CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END) THEN CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END ELSE arg_max_cte."SoftProba_7" END ELSE arg_max_cte."SoftProba_6" END) THEN CASE WHEN (arg_max_cte."SoftProba_6" <= CASE WHEN (arg_max_cte."SoftProba_7" <= CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END) THEN CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END ELSE arg_max_cte."SoftProba_7" END) THEN CASE WHEN (arg_max_cte."SoftProba_7" <= CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END) THEN CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END ELSE arg_max_cte."SoftProba_7" END ELSE arg_max_cte."SoftProba_6" END ELSE arg_max_cte."SoftProba_5" END) THEN CASE WHEN (arg_max_cte."SoftProba_5" <= CASE WHEN (arg_max_cte."SoftProba_6" <= CASE WHEN (arg_max_cte."SoftProba_7" <= CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END) THEN CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END ELSE arg_max_cte."SoftProba_7" END) THEN CASE WHEN (arg_max_cte."SoftProba_7" <= CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END) THEN CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END ELSE arg_max_cte."SoftProba_7" END ELSE arg_max_cte."SoftProba_6" END) THEN CASE WHEN (arg_max_cte."SoftProba_6" <= CASE WHEN (arg_max_cte."SoftProba_7" <= CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END) THEN CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END ELSE arg_max_cte."SoftProba_7" END) THEN CASE WHEN (arg_max_cte."SoftProba_7" <= CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END) THEN CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END ELSE arg_max_cte."SoftProba_7" END ELSE arg_max_cte."SoftProba_6" END ELSE arg_max_cte."SoftProba_5" END ELSE arg_max_cte."SoftProba_4" END) THEN CASE WHEN (arg_max_cte."SoftProba_4" <= CASE WHEN (arg_max_cte."SoftProba_5" <= CASE WHEN (arg_max_cte."SoftProba_6" <= CASE WHEN (arg_max_cte."SoftProba_7" <= CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END) THEN CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END ELSE arg_max_cte."SoftProba_7" END) THEN CASE WHEN (arg_max_cte."SoftProba_7" <= CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END) THEN CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END ELSE arg_max_cte."SoftProba_7" END ELSE arg_max_cte."SoftProba_6" END) THEN CASE WHEN (arg_max_cte."SoftProba_6" <= CASE WHEN (arg_max_cte."SoftProba_7" <= CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END) THEN CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END ELSE arg_max_cte."SoftProba_7" END) THEN CASE WHEN (arg_max_cte."SoftProba_7" <= CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END) THEN CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END ELSE arg_max_cte."SoftProba_7" END ELSE arg_max_cte."SoftProba_6" END ELSE arg_max_cte."SoftProba_5" END) THEN CASE WHEN (arg_max_cte."SoftProba_5" <= CASE WHEN (arg_max_cte."SoftProba_6" <= CASE WHEN (arg_max_cte."SoftProba_7" <= CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END) THEN CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END ELSE arg_max_cte."SoftProba_7" END) THEN CASE WHEN (arg_max_cte."SoftProba_7" <= CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END) THEN CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END ELSE arg_max_cte."SoftProba_7" END ELSE arg_max_cte."SoftProba_6" END) THEN CASE WHEN (arg_max_cte."SoftProba_6" <= CASE WHEN (arg_max_cte."SoftProba_7" <= CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END) THEN CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END ELSE arg_max_cte."SoftProba_7" END) THEN CASE WHEN (arg_max_cte."SoftProba_7" <= CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END) THEN CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END ELSE arg_max_cte."SoftProba_7" END ELSE arg_max_cte."SoftProba_6" END ELSE arg_max_cte."SoftProba_5" END ELSE arg_max_cte."SoftProba_4" END ELSE arg_max_cte."SoftProba_3" END ELSE arg_max_cte."SoftProba_2" END) THEN CASE WHEN (arg_max_cte."SoftProba_2" <= CASE WHEN (arg_max_cte."SoftProba_3" <= CASE WHEN (arg_max_cte."SoftProba_4" <= CASE WHEN (arg_max_cte."SoftProba_5" <= CASE WHEN (arg_max_cte."SoftProba_6" <= CASE WHEN (arg_max_cte."SoftProba_7" <= CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END) THEN CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END ELSE arg_max_cte."SoftProba_7" END) THEN CASE WHEN (arg_max_cte."SoftProba_7" <= CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END) THEN CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END ELSE arg_max_cte."SoftProba_7" END ELSE arg_max_cte."SoftProba_6" END) THEN CASE WHEN (arg_max_cte."SoftProba_6" <= CASE WHEN (arg_max_cte."SoftProba_7" <= CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END) THEN CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END ELSE arg_max_cte."SoftProba_7" END) THEN CASE WHEN (arg_max_cte."SoftProba_7" <= CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END) THEN CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END ELSE arg_max_cte."SoftProba_7" END ELSE arg_max_cte."SoftProba_6" END ELSE arg_max_cte."SoftProba_5" END) THEN CASE WHEN (arg_max_cte."SoftProba_5" <= CASE WHEN (arg_max_cte."SoftProba_6" <= CASE WHEN (arg_max_cte."SoftProba_7" <= CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END) THEN CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END ELSE arg_max_cte."SoftProba_7" END) THEN CASE WHEN (arg_max_cte."SoftProba_7" <= CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END) THEN CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END ELSE arg_max_cte."SoftProba_7" END ELSE arg_max_cte."SoftProba_6" END) THEN CASE WHEN (arg_max_cte."SoftProba_6" <= CASE WHEN (arg_max_cte."SoftProba_7" <= CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END) THEN CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END ELSE arg_max_cte."SoftProba_7" END) THEN CASE WHEN (arg_max_cte."SoftProba_7" <= CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END) THEN CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END ELSE arg_max_cte."SoftProba_7" END ELSE arg_max_cte."SoftProba_6" END ELSE arg_max_cte."SoftProba_5" END ELSE arg_max_cte."SoftProba_4" END) THEN CASE WHEN (arg_max_cte."SoftProba_4" <= CASE WHEN (arg_max_cte."SoftProba_5" <= CASE WHEN (arg_max_cte."SoftProba_6" <= CASE WHEN (arg_max_cte."SoftProba_7" <= CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END) THEN CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END ELSE arg_max_cte."SoftProba_7" END) THEN CASE WHEN (arg_max_cte."SoftProba_7" <= CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END) THEN CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END ELSE arg_max_cte."SoftProba_7" END ELSE arg_max_cte."SoftProba_6" END) THEN CASE WHEN (arg_max_cte."SoftProba_6" <= CASE WHEN (arg_max_cte."SoftProba_7" <= CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END) THEN CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END ELSE arg_max_cte."SoftProba_7" END) THEN CASE WHEN (arg_max_cte."SoftProba_7" <= CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END) THEN CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END ELSE arg_max_cte."SoftProba_7" END ELSE arg_max_cte."SoftProba_6" END ELSE arg_max_cte."SoftProba_5" END) THEN CASE WHEN (arg_max_cte."SoftProba_5" <= CASE WHEN (arg_max_cte."SoftProba_6" <= CASE WHEN (arg_max_cte."SoftProba_7" <= CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END) THEN CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END ELSE arg_max_cte."SoftProba_7" END) THEN CASE WHEN (arg_max_cte."SoftProba_7" <= CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END) THEN CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END ELSE arg_max_cte."SoftProba_7" END ELSE arg_max_cte."SoftProba_6" END) THEN CASE WHEN (arg_max_cte."SoftProba_6" <= CASE WHEN (arg_max_cte."SoftProba_7" <= CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END) THEN CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END ELSE arg_max_cte."SoftProba_7" END) THEN CASE WHEN (arg_max_cte."SoftProba_7" <= CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END) THEN CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END ELSE arg_max_cte."SoftProba_7" END ELSE arg_max_cte."SoftProba_6" END ELSE arg_max_cte."SoftProba_5" END ELSE arg_max_cte."SoftProba_4" END ELSE arg_max_cte."SoftProba_3" END) THEN CASE WHEN (arg_max_cte."SoftProba_3" <= CASE WHEN (arg_max_cte."SoftProba_4" <= CASE WHEN (arg_max_cte."SoftProba_5" <= CASE WHEN (arg_max_cte."SoftProba_6" <= CASE WHEN (arg_max_cte."SoftProba_7" <= CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END) THEN CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END ELSE arg_max_cte."SoftProba_7" END) THEN CASE WHEN (arg_max_cte."SoftProba_7" <= CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END) THEN CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END ELSE arg_max_cte."SoftProba_7" END ELSE arg_max_cte."SoftProba_6" END) THEN CASE WHEN (arg_max_cte."SoftProba_6" <= CASE WHEN (arg_max_cte."SoftProba_7" <= CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END) THEN CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END ELSE arg_max_cte."SoftProba_7" END) THEN CASE WHEN (arg_max_cte."SoftProba_7" <= CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END) THEN CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END ELSE arg_max_cte."SoftProba_7" END ELSE arg_max_cte."SoftProba_6" END ELSE arg_max_cte."SoftProba_5" END) THEN CASE WHEN (arg_max_cte."SoftProba_5" <= CASE WHEN (arg_max_cte."SoftProba_6" <= CASE WHEN (arg_max_cte."SoftProba_7" <= CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END) THEN CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END ELSE arg_max_cte."SoftProba_7" END) THEN CASE WHEN (arg_max_cte."SoftProba_7" <= CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END) THEN CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END ELSE arg_max_cte."SoftProba_7" END ELSE arg_max_cte."SoftProba_6" END) THEN CASE WHEN (arg_max_cte."SoftProba_6" <= CASE WHEN (arg_max_cte."SoftProba_7" <= CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END) THEN CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END ELSE arg_max_cte."SoftProba_7" END) THEN CASE WHEN (arg_max_cte."SoftProba_7" <= CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END) THEN CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END ELSE arg_max_cte."SoftProba_7" END ELSE arg_max_cte."SoftProba_6" END ELSE arg_max_cte."SoftProba_5" END ELSE arg_max_cte."SoftProba_4" END) THEN CASE WHEN (arg_max_cte."SoftProba_4" <= CASE WHEN (arg_max_cte."SoftProba_5" <= CASE WHEN (arg_max_cte."SoftProba_6" <= CASE WHEN (arg_max_cte."SoftProba_7" <= CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END) THEN CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END ELSE arg_max_cte."SoftProba_7" END) THEN CASE WHEN (arg_max_cte."SoftProba_7" <= CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END) THEN CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END ELSE arg_max_cte."SoftProba_7" END ELSE arg_max_cte."SoftProba_6" END) THEN CASE WHEN (arg_max_cte."SoftProba_6" <= CASE WHEN (arg_max_cte."SoftProba_7" <= CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END) THEN CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END ELSE arg_max_cte."SoftProba_7" END) THEN CASE WHEN (arg_max_cte."SoftProba_7" <= CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END) THEN CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END ELSE arg_max_cte."SoftProba_7" END ELSE arg_max_cte."SoftProba_6" END ELSE arg_max_cte."SoftProba_5" END) THEN CASE WHEN (arg_max_cte."SoftProba_5" <= CASE WHEN (arg_max_cte."SoftProba_6" <= CASE WHEN (arg_max_cte."SoftProba_7" <= CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END) THEN CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END ELSE arg_max_cte."SoftProba_7" END) THEN CASE WHEN (arg_max_cte."SoftProba_7" <= CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END) THEN CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END ELSE arg_max_cte."SoftProba_7" END ELSE arg_max_cte."SoftProba_6" END) THEN CASE WHEN (arg_max_cte."SoftProba_6" <= CASE WHEN (arg_max_cte."SoftProba_7" <= CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END) THEN CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END ELSE arg_max_cte."SoftProba_7" END) THEN CASE WHEN (arg_max_cte."SoftProba_7" <= CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END) THEN CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END ELSE arg_max_cte."SoftProba_7" END ELSE arg_max_cte."SoftProba_6" END ELSE arg_max_cte."SoftProba_5" END ELSE arg_max_cte."SoftProba_4" END ELSE arg_max_cte."SoftProba_3" END ELSE arg_max_cte."SoftProba_2" END ELSE arg_max_cte."SoftProba_1" END ELSE arg_max_cte."SoftProba_0" END AS "DecisionProba" 
FROM arg_max_cte