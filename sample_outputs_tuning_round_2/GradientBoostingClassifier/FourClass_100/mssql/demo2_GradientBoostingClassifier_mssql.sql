-- This SQL code was generated by sklearn2sql (development version).
-- Copyright 2017

WITH [DT_node_lookup] AS 
(SELECT [ADS].[KEY] AS [KEY], CASE WHEN ([ADS].[Feature_34] <= 1.7162034511566162) THEN CASE WHEN ([ADS].[Feature_64] <= -0.2918909788131714) THEN CASE WHEN ([ADS].[Feature_2] <= 2.080256700515747) THEN 3 ELSE 4 END ELSE CASE WHEN ([ADS].[Feature_47] <= 9.671092987060547) THEN 6 ELSE 7 END END ELSE CASE WHEN ([ADS].[Feature_8] <= 1.6664855480194092) THEN CASE WHEN ([ADS].[Feature_17] <= -1.6835830211639404) THEN 10 ELSE 11 END ELSE CASE WHEN ([ADS].[Feature_1] <= 3.8354077339172363) THEN 13 ELSE 14 END END END AS node_id_2 
FROM [FourClass_100] AS [ADS]), 
[DT_node_data] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Estimator] AS [Estimator] 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 165 AS count, 3 AS depth, 2 AS parent_id, 0.46107751562816157 AS [Estimator] UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 79 AS count, 3 AS depth, 2 AS parent_id, -0.7443260670614605 AS [Estimator] UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 281 AS count, 3 AS depth, 5 AS parent_id, -0.6555573735597808 AS [Estimator] UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS count, 3 AS depth, 5 AS parent_id, 2.2123765139266465 AS [Estimator] UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 63 AS count, 3 AS depth, 9 AS parent_id, 2.1231899908651504 AS [Estimator] UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 117 AS count, 3 AS depth, 9 AS parent_id, 0.40806454737482406 AS [Estimator] UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 75 AS count, 3 AS depth, 12 AS parent_id, -0.7307787471027517 AS [Estimator] UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 15 AS count, 3 AS depth, 12 AS parent_id, 1.1421382371886835 AS [Estimator]) AS [Values]), 
[DT_Output] AS 
(SELECT [DT_node_lookup].[KEY] AS [KEY], [DT_node_lookup].node_id_2 AS node_id_2, [DT_node_data].node_id AS node_id, [DT_node_data].feature AS feature, [DT_node_data].threshold AS threshold, [DT_node_data].count AS count, [DT_node_data].depth AS depth, [DT_node_data].parent_id AS parent_id, [DT_node_data].[Estimator] AS [Estimator] 
FROM [DT_node_lookup] LEFT OUTER JOIN [DT_node_data] ON [DT_node_lookup].node_id_2 = [DT_node_data].node_id), 
[GB_Tree_0_0] AS 
(SELECT [DT_Output].[KEY] AS [KEY], [DT_Output].[Estimator] AS [Score_0], 0.0 AS [Score_1], 0.0 AS [Score_2], 0.0 AS [Score_3] 
FROM [DT_Output]), 
[DT_node_lookup_1] AS 
(SELECT [ADS].[KEY] AS [KEY], CASE WHEN ([ADS].[Feature_31] <= 0.8691813349723816) THEN CASE WHEN ([ADS].[Feature_27] <= -1.4473822116851807) THEN CASE WHEN ([ADS].[Feature_66] <= -11.497817993164062) THEN 3 ELSE 4 END ELSE CASE WHEN ([ADS].[Feature_68] <= 0.8490797281265259) THEN 6 ELSE 7 END END ELSE CASE WHEN ([ADS].[Feature_40] <= -0.9215991497039795) THEN CASE WHEN ([ADS].[Feature_50] <= -1.5645629167556763) THEN 10 ELSE 11 END ELSE CASE WHEN ([ADS].[Feature_42] <= -3.490713119506836) THEN 13 ELSE 14 END END END AS node_id_2 
FROM [FourClass_100] AS [ADS]), 
[DT_node_data_1] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Estimator] AS [Estimator] 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 3 AS depth, 2 AS parent_id, 2.9532638756882417 AS [Estimator] UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 216 AS count, 3 AS depth, 2 AS parent_id, -0.7587905045017961 AS [Estimator] UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 171 AS count, 3 AS depth, 5 AS parent_id, 0.4054586601391233 AS [Estimator] UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 115 AS count, 3 AS depth, 5 AS parent_id, -0.5462878559034006 AS [Estimator] UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 42 AS count, 3 AS depth, 9 AS parent_id, 0.04907252439938137 AS [Estimator] UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 93 AS count, 3 AS depth, 9 AS parent_id, 1.5310668175018134 AS [Estimator] UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 48 AS count, 3 AS depth, 12 AS parent_id, 1.0029450607607033 AS [Estimator] UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 113 AS count, 3 AS depth, 12 AS parent_id, -0.39525289783151035 AS [Estimator]) AS [Values]), 
[DT_Output_1] AS 
(SELECT [DT_node_lookup_1].[KEY] AS [KEY], [DT_node_lookup_1].node_id_2 AS node_id_2, [DT_node_data_1].node_id AS node_id, [DT_node_data_1].feature AS feature, [DT_node_data_1].threshold AS threshold, [DT_node_data_1].count AS count, [DT_node_data_1].depth AS depth, [DT_node_data_1].parent_id AS parent_id, [DT_node_data_1].[Estimator] AS [Estimator] 
FROM [DT_node_lookup_1] LEFT OUTER JOIN [DT_node_data_1] ON [DT_node_lookup_1].node_id_2 = [DT_node_data_1].node_id), 
[GB_Tree_0_1] AS 
(SELECT [DT_Output_1].[KEY] AS [KEY], 0.0 AS [Score_0], [DT_Output_1].[Estimator] AS [Score_1], 0.0 AS [Score_2], 0.0 AS [Score_3] 
FROM [DT_Output_1]), 
[DT_node_lookup_2] AS 
(SELECT [ADS].[KEY] AS [KEY], CASE WHEN ([ADS].[Feature_38] <= 0.9612303972244263) THEN CASE WHEN ([ADS].[Feature_68] <= -0.6618915796279907) THEN CASE WHEN ([ADS].[Feature_86] <= -2.480441093444824) THEN 3 ELSE 4 END ELSE CASE WHEN ([ADS].[Feature_15] <= -3.7531204223632812) THEN 6 ELSE 7 END END ELSE CASE WHEN ([ADS].[Feature_61] <= -5.153140068054199) THEN CASE WHEN ([ADS].[Feature_34] <= 1.1970605850219727) THEN 10 ELSE 11 END ELSE CASE WHEN ([ADS].[Feature_24] <= 0.9210751056671143) THEN 13 ELSE 14 END END END AS node_id_2 
FROM [FourClass_100] AS [ADS]), 
[DT_node_data_2] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Estimator] AS [Estimator] 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 44 AS count, 3 AS depth, 2 AS parent_id, 0.003685484316843566 AS [Estimator] UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 188 AS count, 3 AS depth, 2 AS parent_id, -0.7631277610058678 AS [Estimator] UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 43 AS count, 3 AS depth, 5 AS parent_id, 1.3855015074440942 AS [Estimator] UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 208 AS count, 3 AS depth, 5 AS parent_id, -0.23503738436607802 AS [Estimator] UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 28 AS count, 3 AS depth, 9 AS parent_id, 2.8177302204822334 AS [Estimator] UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 12 AS count, 3 AS depth, 9 AS parent_id, -0.3317171633459929 AS [Estimator] UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 151 AS count, 3 AS depth, 12 AS parent_id, -0.20711713759014258 AS [Estimator] UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 126 AS count, 3 AS depth, 12 AS parent_id, 0.7396564224708246 AS [Estimator]) AS [Values]), 
[DT_Output_2] AS 
(SELECT [DT_node_lookup_2].[KEY] AS [KEY], [DT_node_lookup_2].node_id_2 AS node_id_2, [DT_node_data_2].node_id AS node_id, [DT_node_data_2].feature AS feature, [DT_node_data_2].threshold AS threshold, [DT_node_data_2].count AS count, [DT_node_data_2].depth AS depth, [DT_node_data_2].parent_id AS parent_id, [DT_node_data_2].[Estimator] AS [Estimator] 
FROM [DT_node_lookup_2] LEFT OUTER JOIN [DT_node_data_2] ON [DT_node_lookup_2].node_id_2 = [DT_node_data_2].node_id), 
[GB_Tree_0_2] AS 
(SELECT [DT_Output_2].[KEY] AS [KEY], 0.0 AS [Score_0], 0.0 AS [Score_1], [DT_Output_2].[Estimator] AS [Score_2], 0.0 AS [Score_3] 
FROM [DT_Output_2]), 
[DT_node_lookup_3] AS 
(SELECT [ADS].[KEY] AS [KEY], CASE WHEN ([ADS].[Feature_84] <= -1.0748263597488403) THEN CASE WHEN ([ADS].[Feature_25] <= -0.3994830250740051) THEN CASE WHEN ([ADS].[Feature_50] <= -0.3304194211959839) THEN 3 ELSE 4 END ELSE CASE WHEN ([ADS].[Feature_45] <= 0.4183658957481384) THEN 6 ELSE 7 END END ELSE CASE WHEN ([ADS].[Feature_2] <= -6.197441101074219) THEN CASE WHEN ([ADS].[Feature_68] <= -0.9030638933181763) THEN 10 ELSE 11 END ELSE CASE WHEN ([ADS].[Feature_64] <= -1.6537715196609497) THEN 13 ELSE 14 END END END AS node_id_2 
FROM [FourClass_100] AS [ADS]), 
[DT_node_data_3] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Estimator] AS [Estimator] 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 75 AS count, 3 AS depth, 2 AS parent_id, 1.8342147290629693 AS [Estimator] UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 68 AS count, 3 AS depth, 2 AS parent_id, 0.4102780402420064 AS [Estimator] UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 101 AS count, 3 AS depth, 5 AS parent_id, -0.48392751303649234 AS [Estimator] UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 63 AS count, 3 AS depth, 5 AS parent_id, 0.6397464523670704 AS [Estimator] UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 11 AS count, 3 AS depth, 9 AS parent_id, -1.0005168152052903 AS [Estimator] UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 22 AS count, 3 AS depth, 9 AS parent_id, 1.8807321958458105 AS [Estimator] UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 172 AS count, 3 AS depth, 12 AS parent_id, -0.7876573638432443 AS [Estimator] UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 288 AS count, 3 AS depth, 12 AS parent_id, -0.1562045849424564 AS [Estimator]) AS [Values]), 
[DT_Output_3] AS 
(SELECT [DT_node_lookup_3].[KEY] AS [KEY], [DT_node_lookup_3].node_id_2 AS node_id_2, [DT_node_data_3].node_id AS node_id, [DT_node_data_3].feature AS feature, [DT_node_data_3].threshold AS threshold, [DT_node_data_3].count AS count, [DT_node_data_3].depth AS depth, [DT_node_data_3].parent_id AS parent_id, [DT_node_data_3].[Estimator] AS [Estimator] 
FROM [DT_node_lookup_3] LEFT OUTER JOIN [DT_node_data_3] ON [DT_node_lookup_3].node_id_2 = [DT_node_data_3].node_id), 
[GB_Tree_0_3] AS 
(SELECT [DT_Output_3].[KEY] AS [KEY], 0.0 AS [Score_0], 0.0 AS [Score_1], 0.0 AS [Score_2], [DT_Output_3].[Estimator] AS [Score_3] 
FROM [DT_Output_3]), 
[DT_node_lookup_4] AS 
(SELECT [ADS].[KEY] AS [KEY], CASE WHEN ([ADS].[Feature_34] <= 1.2457512617111206) THEN CASE WHEN ([ADS].[Feature_15] <= 0.7957099676132202) THEN CASE WHEN ([ADS].[Feature_93] <= -18.11518669128418) THEN 3 ELSE 4 END ELSE CASE WHEN ([ADS].[Feature_64] <= -0.7042281031608582) THEN 6 ELSE 7 END END ELSE CASE WHEN ([ADS].[Feature_8] <= 1.6664855480194092) THEN CASE WHEN ([ADS].[Feature_17] <= -3.779191017150879) THEN 10 ELSE 11 END ELSE CASE WHEN ([ADS].[Feature_37] <= -0.9537284970283508) THEN 13 ELSE 14 END END END AS node_id_2 
FROM [FourClass_100] AS [ADS]), 
[DT_node_data_4] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Estimator] AS [Estimator] 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 32 AS count, 3 AS depth, 2 AS parent_id, 0.3812246598361148 AS [Estimator] UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 244 AS count, 3 AS depth, 2 AS parent_id, -0.7175941930737698 AS [Estimator] UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 97 AS count, 3 AS depth, 5 AS parent_id, 0.557880662497955 AS [Estimator] UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 120 AS count, 3 AS depth, 5 AS parent_id, -0.36207098364994006 AS [Estimator] UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 38 AS count, 3 AS depth, 9 AS parent_id, 2.0392795748568457 AS [Estimator] UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 171 AS count, 3 AS depth, 9 AS parent_id, 0.4992444844850455 AS [Estimator] UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 19 AS count, 3 AS depth, 12 AS parent_id, 0.9220060395544859 AS [Estimator] UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 79 AS count, 3 AS depth, 12 AS parent_id, -0.7248927195132079 AS [Estimator]) AS [Values]), 
[DT_Output_4] AS 
(SELECT [DT_node_lookup_4].[KEY] AS [KEY], [DT_node_lookup_4].node_id_2 AS node_id_2, [DT_node_data_4].node_id AS node_id, [DT_node_data_4].feature AS feature, [DT_node_data_4].threshold AS threshold, [DT_node_data_4].count AS count, [DT_node_data_4].depth AS depth, [DT_node_data_4].parent_id AS parent_id, [DT_node_data_4].[Estimator] AS [Estimator] 
FROM [DT_node_lookup_4] LEFT OUTER JOIN [DT_node_data_4] ON [DT_node_lookup_4].node_id_2 = [DT_node_data_4].node_id), 
[GB_Tree_1_0] AS 
(SELECT [DT_Output_4].[KEY] AS [KEY], [DT_Output_4].[Estimator] AS [Score_0], 0.0 AS [Score_1], 0.0 AS [Score_2], 0.0 AS [Score_3] 
FROM [DT_Output_4]), 
[DT_node_lookup_5] AS 
(SELECT [ADS].[KEY] AS [KEY], CASE WHEN ([ADS].[Feature_31] <= 0.8691813349723816) THEN CASE WHEN ([ADS].[Feature_27] <= -1.4473822116851807) THEN CASE WHEN ([ADS].[Feature_66] <= -11.497817993164062) THEN 3 ELSE 4 END ELSE CASE WHEN ([ADS].[Feature_68] <= 0.8490797281265259) THEN 6 ELSE 7 END END ELSE CASE WHEN ([ADS].[Feature_40] <= -0.9215991497039795) THEN CASE WHEN ([ADS].[Feature_50] <= -1.5645629167556763) THEN 10 ELSE 11 END ELSE CASE WHEN ([ADS].[Feature_42] <= -3.490713119506836) THEN 13 ELSE 14 END END END AS node_id_2 
FROM [FourClass_100] AS [ADS]), 
[DT_node_data_5] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Estimator] AS [Estimator] 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 3 AS depth, 2 AS parent_id, 2.3152678795227244 AS [Estimator] UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 216 AS count, 3 AS depth, 2 AS parent_id, -0.7301631283671322 AS [Estimator] UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 171 AS count, 3 AS depth, 5 AS parent_id, 0.3646724360178618 AS [Estimator] UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 115 AS count, 3 AS depth, 5 AS parent_id, -0.5113243808027986 AS [Estimator] UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 42 AS count, 3 AS depth, 9 AS parent_id, 0.053076447138524684 AS [Estimator] UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 93 AS count, 3 AS depth, 9 AS parent_id, 1.2994674794737449 AS [Estimator] UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 48 AS count, 3 AS depth, 12 AS parent_id, 0.8757170132842581 AS [Estimator] UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 113 AS count, 3 AS depth, 12 AS parent_id, -0.3712030236292033 AS [Estimator]) AS [Values]), 
[DT_Output_5] AS 
(SELECT [DT_node_lookup_5].[KEY] AS [KEY], [DT_node_lookup_5].node_id_2 AS node_id_2, [DT_node_data_5].node_id AS node_id, [DT_node_data_5].feature AS feature, [DT_node_data_5].threshold AS threshold, [DT_node_data_5].count AS count, [DT_node_data_5].depth AS depth, [DT_node_data_5].parent_id AS parent_id, [DT_node_data_5].[Estimator] AS [Estimator] 
FROM [DT_node_lookup_5] LEFT OUTER JOIN [DT_node_data_5] ON [DT_node_lookup_5].node_id_2 = [DT_node_data_5].node_id), 
[GB_Tree_1_1] AS 
(SELECT [DT_Output_5].[KEY] AS [KEY], 0.0 AS [Score_0], [DT_Output_5].[Estimator] AS [Score_1], 0.0 AS [Score_2], 0.0 AS [Score_3] 
FROM [DT_Output_5]), 
[DT_node_lookup_6] AS 
(SELECT [ADS].[KEY] AS [KEY], CASE WHEN ([ADS].[Feature_15] <= 0.27006494998931885) THEN CASE WHEN ([ADS].[Feature_61] <= 1.94813871383667) THEN CASE WHEN ([ADS].[Feature_86] <= -5.2298407554626465) THEN 3 ELSE 4 END ELSE CASE WHEN ([ADS].[Feature_46] <= -6.418115615844727) THEN 6 ELSE 7 END END ELSE CASE WHEN ([ADS].[Feature_64] <= 1.6210978031158447) THEN CASE WHEN ([ADS].[Feature_66] <= 1.6385966539382935) THEN 10 ELSE 11 END ELSE CASE WHEN ([ADS].[Feature_87] <= -1.9906110763549805) THEN 13 ELSE 14 END END END AS node_id_2 
FROM [FourClass_100] AS [ADS]), 
[DT_node_data_6] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Estimator] AS [Estimator] 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 33 AS count, 3 AS depth, 2 AS parent_id, 1.8993228749483437 AS [Estimator] UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 257 AS count, 3 AS depth, 2 AS parent_id, 0.44045379545816926 AS [Estimator] UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 6 AS count, 3 AS depth, 5 AS parent_id, 2.330360107660911 AS [Estimator] UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 118 AS count, 3 AS depth, 5 AS parent_id, -0.551311903741078 AS [Estimator] UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 176 AS count, 3 AS depth, 9 AS parent_id, -0.8097690073051855 AS [Estimator] UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 74 AS count, 3 AS depth, 9 AS parent_id, -0.06815281724204676 AS [Estimator] UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 41 AS count, 3 AS depth, 12 AS parent_id, 1.111443660640517 AS [Estimator] UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 95 AS count, 3 AS depth, 12 AS parent_id, -0.2789135087965411 AS [Estimator]) AS [Values]), 
[DT_Output_6] AS 
(SELECT [DT_node_lookup_6].[KEY] AS [KEY], [DT_node_lookup_6].node_id_2 AS node_id_2, [DT_node_data_6].node_id AS node_id, [DT_node_data_6].feature AS feature, [DT_node_data_6].threshold AS threshold, [DT_node_data_6].count AS count, [DT_node_data_6].depth AS depth, [DT_node_data_6].parent_id AS parent_id, [DT_node_data_6].[Estimator] AS [Estimator] 
FROM [DT_node_lookup_6] LEFT OUTER JOIN [DT_node_data_6] ON [DT_node_lookup_6].node_id_2 = [DT_node_data_6].node_id), 
[GB_Tree_1_2] AS 
(SELECT [DT_Output_6].[KEY] AS [KEY], 0.0 AS [Score_0], 0.0 AS [Score_1], [DT_Output_6].[Estimator] AS [Score_2], 0.0 AS [Score_3] 
FROM [DT_Output_6]), 
[DT_node_lookup_7] AS 
(SELECT [ADS].[KEY] AS [KEY], CASE WHEN ([ADS].[Feature_84] <= -1.8281559944152832) THEN CASE WHEN ([ADS].[Feature_25] <= -0.3994830250740051) THEN CASE WHEN ([ADS].[Feature_50] <= -3.4547672271728516) THEN 3 ELSE 4 END ELSE CASE WHEN ([ADS].[Feature_52] <= -2.4911656379699707) THEN 6 ELSE 7 END END ELSE CASE WHEN ([ADS].[Feature_43] <= -1.0244340896606445) THEN CASE WHEN ([ADS].[Feature_64] <= -1.3009295463562012) THEN 10 ELSE 11 END ELSE CASE WHEN ([ADS].[Feature_2] <= -6.654583930969238) THEN 13 ELSE 14 END END END AS node_id_2 
FROM [FourClass_100] AS [ADS]), 
[DT_node_data_7] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Estimator] AS [Estimator] 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 38 AS count, 3 AS depth, 2 AS parent_id, 1.966206522044408 AS [Estimator] UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 81 AS count, 3 AS depth, 2 AS parent_id, 0.7149726986881452 AS [Estimator] UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 37 AS count, 3 AS depth, 5 AS parent_id, 1.0351817055022439 AS [Estimator] UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 102 AS count, 3 AS depth, 5 AS parent_id, -0.4056692636981687 AS [Estimator] UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 87 AS count, 3 AS depth, 9 AS parent_id, -0.5134586390244552 AS [Estimator] UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 148 AS count, 3 AS depth, 9 AS parent_id, 0.47529367364584185 AS [Estimator] UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 13 AS count, 3 AS depth, 12 AS parent_id, 1.0132153673773838 AS [Estimator] UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 294 AS count, 3 AS depth, 12 AS parent_id, -0.6026715497241031 AS [Estimator]) AS [Values]), 
[DT_Output_7] AS 
(SELECT [DT_node_lookup_7].[KEY] AS [KEY], [DT_node_lookup_7].node_id_2 AS node_id_2, [DT_node_data_7].node_id AS node_id, [DT_node_data_7].feature AS feature, [DT_node_data_7].threshold AS threshold, [DT_node_data_7].count AS count, [DT_node_data_7].depth AS depth, [DT_node_data_7].parent_id AS parent_id, [DT_node_data_7].[Estimator] AS [Estimator] 
FROM [DT_node_lookup_7] LEFT OUTER JOIN [DT_node_data_7] ON [DT_node_lookup_7].node_id_2 = [DT_node_data_7].node_id), 
[GB_Tree_1_3] AS 
(SELECT [DT_Output_7].[KEY] AS [KEY], 0.0 AS [Score_0], 0.0 AS [Score_1], 0.0 AS [Score_2], [DT_Output_7].[Estimator] AS [Score_3] 
FROM [DT_Output_7]), 
[DT_node_lookup_8] AS 
(SELECT [ADS].[KEY] AS [KEY], CASE WHEN ([ADS].[Feature_17] <= -1.6641823053359985) THEN CASE WHEN ([ADS].[Feature_34] <= 2.1938605308532715) THEN CASE WHEN ([ADS].[Feature_25] <= -0.6809426546096802) THEN 3 ELSE 4 END ELSE CASE WHEN ([ADS].[Feature_48] <= 2.5313568115234375) THEN 6 ELSE 7 END END ELSE CASE WHEN ([ADS].[Feature_51] <= 2.065941572189331) THEN CASE WHEN ([ADS].[Feature_2] <= 0.7435014247894287) THEN 10 ELSE 11 END ELSE CASE WHEN ([ADS].[Feature_52] <= -1.0333642959594727) THEN 13 ELSE 14 END END END AS node_id_2 
FROM [FourClass_100] AS [ADS]), 
[DT_node_data_8] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Estimator] AS [Estimator] 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 82 AS count, 3 AS depth, 2 AS parent_id, -0.6770059565741455 AS [Estimator] UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 90 AS count, 3 AS depth, 2 AS parent_id, 0.7124065219241152 AS [Estimator] UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 65 AS count, 3 AS depth, 5 AS parent_id, 1.6576552956417707 AS [Estimator] UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 16 AS count, 3 AS depth, 5 AS parent_id, -0.5283979442431551 AS [Estimator] UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 229 AS count, 3 AS depth, 9 AS parent_id, -0.19151924805927348 AS [Estimator] UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 177 AS count, 3 AS depth, 9 AS parent_id, -0.8174353943401923 AS [Estimator] UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 65 AS count, 3 AS depth, 12 AS parent_id, -0.43715568985985254 AS [Estimator] UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 76 AS count, 3 AS depth, 12 AS parent_id, 0.980729835979138 AS [Estimator]) AS [Values]), 
[DT_Output_8] AS 
(SELECT [DT_node_lookup_8].[KEY] AS [KEY], [DT_node_lookup_8].node_id_2 AS node_id_2, [DT_node_data_8].node_id AS node_id, [DT_node_data_8].feature AS feature, [DT_node_data_8].threshold AS threshold, [DT_node_data_8].count AS count, [DT_node_data_8].depth AS depth, [DT_node_data_8].parent_id AS parent_id, [DT_node_data_8].[Estimator] AS [Estimator] 
FROM [DT_node_lookup_8] LEFT OUTER JOIN [DT_node_data_8] ON [DT_node_lookup_8].node_id_2 = [DT_node_data_8].node_id), 
[GB_Tree_2_0] AS 
(SELECT [DT_Output_8].[KEY] AS [KEY], [DT_Output_8].[Estimator] AS [Score_0], 0.0 AS [Score_1], 0.0 AS [Score_2], 0.0 AS [Score_3] 
FROM [DT_Output_8]), 
[DT_node_lookup_9] AS 
(SELECT [ADS].[KEY] AS [KEY], CASE WHEN ([ADS].[Feature_31] <= 0.8691813349723816) THEN CASE WHEN ([ADS].[Feature_27] <= -1.4473822116851807) THEN CASE WHEN ([ADS].[Feature_66] <= -11.497817993164062) THEN 3 ELSE 4 END ELSE CASE WHEN ([ADS].[Feature_64] <= -2.3590664863586426) THEN 6 ELSE 7 END END ELSE CASE WHEN ([ADS].[Feature_40] <= -0.9215991497039795) THEN CASE WHEN ([ADS].[Feature_68] <= -2.2367544174194336) THEN 10 ELSE 11 END ELSE CASE WHEN ([ADS].[Feature_42] <= -3.490713119506836) THEN 13 ELSE 14 END END END AS node_id_2 
FROM [FourClass_100] AS [ADS]), 
[DT_node_data_9] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Estimator] AS [Estimator] 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 3 AS depth, 2 AS parent_id, 1.9249621951850155 AS [Estimator] UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 216 AS count, 3 AS depth, 2 AS parent_id, -0.7019322299569851 AS [Estimator] UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 81 AS count, 3 AS depth, 5 AS parent_id, 0.6765093803516228 AS [Estimator] UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 205 AS count, 3 AS depth, 5 AS parent_id, -0.23414876109444827 AS [Estimator] UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 50 AS count, 3 AS depth, 9 AS parent_id, 1.5405902716546398 AS [Estimator] UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 85 AS count, 3 AS depth, 9 AS parent_id, 0.3966645394496718 AS [Estimator] UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 48 AS count, 3 AS depth, 12 AS parent_id, 0.7692075261402554 AS [Estimator] UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 113 AS count, 3 AS depth, 12 AS parent_id, -0.3472998657501609 AS [Estimator]) AS [Values]), 
[DT_Output_9] AS 
(SELECT [DT_node_lookup_9].[KEY] AS [KEY], [DT_node_lookup_9].node_id_2 AS node_id_2, [DT_node_data_9].node_id AS node_id, [DT_node_data_9].feature AS feature, [DT_node_data_9].threshold AS threshold, [DT_node_data_9].count AS count, [DT_node_data_9].depth AS depth, [DT_node_data_9].parent_id AS parent_id, [DT_node_data_9].[Estimator] AS [Estimator] 
FROM [DT_node_lookup_9] LEFT OUTER JOIN [DT_node_data_9] ON [DT_node_lookup_9].node_id_2 = [DT_node_data_9].node_id), 
[GB_Tree_2_1] AS 
(SELECT [DT_Output_9].[KEY] AS [KEY], 0.0 AS [Score_0], [DT_Output_9].[Estimator] AS [Score_1], 0.0 AS [Score_2], 0.0 AS [Score_3] 
FROM [DT_Output_9]), 
[DT_node_lookup_10] AS 
(SELECT [ADS].[KEY] AS [KEY], CASE WHEN ([ADS].[Feature_38] <= 0.9612303972244263) THEN CASE WHEN ([ADS].[Feature_21] <= 2.8612523078918457) THEN CASE WHEN ([ADS].[Feature_92] <= 5.960014343261719) THEN 3 ELSE 4 END ELSE CASE WHEN ([ADS].[Feature_15] <= 0.2579179108142853) THEN 6 ELSE 7 END END ELSE CASE WHEN ([ADS].[Feature_34] <= -3.586716651916504) THEN CASE WHEN ([ADS].[Feature_57] <= 6.163938522338867) THEN 10 ELSE 11 END ELSE CASE WHEN ([ADS].[Feature_66] <= 1.9051023721694946) THEN 13 ELSE 14 END END END AS node_id_2 
FROM [FourClass_100] AS [ADS]), 
[DT_node_data_10] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Estimator] AS [Estimator] 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 337 AS count, 3 AS depth, 2 AS parent_id, -0.5265909546795908 AS [Estimator] UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 28 AS count, 3 AS depth, 2 AS parent_id, 0.7236942527731726 AS [Estimator] UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 66 AS count, 3 AS depth, 5 AS parent_id, 0.855482072690872 AS [Estimator] UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 52 AS count, 3 AS depth, 5 AS parent_id, -0.4907022795891865 AS [Estimator] UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 63 AS count, 3 AS depth, 9 AS parent_id, 1.576336635545126 AS [Estimator] UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 9 AS count, 3 AS depth, 9 AS parent_id, -1.0053300270122332 AS [Estimator] UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 168 AS count, 3 AS depth, 12 AS parent_id, -0.25188534077016084 AS [Estimator] UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 77 AS count, 3 AS depth, 12 AS parent_id, 0.8603305235614394 AS [Estimator]) AS [Values]), 
[DT_Output_10] AS 
(SELECT [DT_node_lookup_10].[KEY] AS [KEY], [DT_node_lookup_10].node_id_2 AS node_id_2, [DT_node_data_10].node_id AS node_id, [DT_node_data_10].feature AS feature, [DT_node_data_10].threshold AS threshold, [DT_node_data_10].count AS count, [DT_node_data_10].depth AS depth, [DT_node_data_10].parent_id AS parent_id, [DT_node_data_10].[Estimator] AS [Estimator] 
FROM [DT_node_lookup_10] LEFT OUTER JOIN [DT_node_data_10] ON [DT_node_lookup_10].node_id_2 = [DT_node_data_10].node_id), 
[GB_Tree_2_2] AS 
(SELECT [DT_Output_10].[KEY] AS [KEY], 0.0 AS [Score_0], 0.0 AS [Score_1], [DT_Output_10].[Estimator] AS [Score_2], 0.0 AS [Score_3] 
FROM [DT_Output_10]), 
[DT_node_lookup_11] AS 
(SELECT [ADS].[KEY] AS [KEY], CASE WHEN ([ADS].[Feature_84] <= -1.0748263597488403) THEN CASE WHEN ([ADS].[Feature_25] <= -4.630313873291016) THEN CASE WHEN ([ADS].[Feature_83] <= -0.35780423879623413) THEN 3 ELSE 4 END ELSE CASE WHEN ([ADS].[Feature_66] <= 0.6457959413528442) THEN 6 ELSE 7 END END ELSE CASE WHEN ([ADS].[Feature_8] <= -1.4620766639709473) THEN CASE WHEN ([ADS].[Feature_50] <= -6.588512420654297) THEN 10 ELSE 11 END ELSE CASE WHEN ([ADS].[Feature_2] <= -6.197441101074219) THEN 13 ELSE 14 END END END AS node_id_2 
FROM [FourClass_100] AS [ADS]), 
[DT_node_data_11] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Estimator] AS [Estimator] 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 8 AS count, 3 AS depth, 2 AS parent_id, -0.13330856995697912 AS [Estimator] UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 32 AS count, 3 AS depth, 2 AS parent_id, 2.0731038886012056 AS [Estimator] UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 145 AS count, 3 AS depth, 5 AS parent_id, 0.6411820251796839 AS [Estimator] UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 122 AS count, 3 AS depth, 5 AS parent_id, -0.2963804972205661 AS [Estimator] UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 6 AS count, 3 AS depth, 9 AS parent_id, 0.9950514245863555 AS [Estimator] UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 171 AS count, 3 AS depth, 9 AS parent_id, -0.7580821903334131 AS [Estimator] UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 24 AS count, 3 AS depth, 12 AS parent_id, 1.4048970058560026 AS [Estimator] UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 292 AS count, 3 AS depth, 12 AS parent_id, -0.16687109746048226 AS [Estimator]) AS [Values]), 
[DT_Output_11] AS 
(SELECT [DT_node_lookup_11].[KEY] AS [KEY], [DT_node_lookup_11].node_id_2 AS node_id_2, [DT_node_data_11].node_id AS node_id, [DT_node_data_11].feature AS feature, [DT_node_data_11].threshold AS threshold, [DT_node_data_11].count AS count, [DT_node_data_11].depth AS depth, [DT_node_data_11].parent_id AS parent_id, [DT_node_data_11].[Estimator] AS [Estimator] 
FROM [DT_node_lookup_11] LEFT OUTER JOIN [DT_node_data_11] ON [DT_node_lookup_11].node_id_2 = [DT_node_data_11].node_id), 
[GB_Tree_2_3] AS 
(SELECT [DT_Output_11].[KEY] AS [KEY], 0.0 AS [Score_0], 0.0 AS [Score_1], 0.0 AS [Score_2], [DT_Output_11].[Estimator] AS [Score_3] 
FROM [DT_Output_11]), 
[DT_node_lookup_12] AS 
(SELECT [ADS].[KEY] AS [KEY], CASE WHEN ([ADS].[Feature_90] <= 23.269041061401367) THEN CASE WHEN ([ADS].[Feature_34] <= 1.7162034511566162) THEN CASE WHEN ([ADS].[Feature_15] <= 1.149219274520874) THEN 3 ELSE 4 END ELSE CASE WHEN ([ADS].[Feature_47] <= 0.7145777940750122) THEN 6 ELSE 7 END END ELSE CASE WHEN ([ADS].[Feature_31] <= -3.3047897815704346) THEN CASE WHEN ([ADS].[Feature_17] <= -4.192943572998047) THEN 10 ELSE 11 END ELSE CASE WHEN ([ADS].[Feature_10] <= 1.482093095779419) THEN 13 ELSE 14 END END END AS node_id_2 
FROM [FourClass_100] AS [ADS]), 
[DT_node_data_12] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Estimator] AS [Estimator] 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 307 AS count, 3 AS depth, 2 AS parent_id, -0.5653299229275933 AS [Estimator] UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 201 AS count, 3 AS depth, 2 AS parent_id, 0.08547927287124965 AS [Estimator] UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 136 AS count, 3 AS depth, 5 AS parent_id, -0.21281038164828014 AS [Estimator] UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 119 AS count, 3 AS depth, 5 AS parent_id, 0.839364101335811 AS [Estimator] UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS count, 3 AS depth, 9 AS parent_id, 2.1684313986143335 AS [Estimator] UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 13 AS count, 3 AS depth, 9 AS parent_id, -0.6470687737710429 AS [Estimator] UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 18 AS count, 3 AS depth, 12 AS parent_id, 2.530614845001046 AS [Estimator] UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 12 AS parent_id, -1.0321075790511762 AS [Estimator]) AS [Values]), 
[DT_Output_12] AS 
(SELECT [DT_node_lookup_12].[KEY] AS [KEY], [DT_node_lookup_12].node_id_2 AS node_id_2, [DT_node_data_12].node_id AS node_id, [DT_node_data_12].feature AS feature, [DT_node_data_12].threshold AS threshold, [DT_node_data_12].count AS count, [DT_node_data_12].depth AS depth, [DT_node_data_12].parent_id AS parent_id, [DT_node_data_12].[Estimator] AS [Estimator] 
FROM [DT_node_lookup_12] LEFT OUTER JOIN [DT_node_data_12] ON [DT_node_lookup_12].node_id_2 = [DT_node_data_12].node_id), 
[GB_Tree_3_0] AS 
(SELECT [DT_Output_12].[KEY] AS [KEY], [DT_Output_12].[Estimator] AS [Score_0], 0.0 AS [Score_1], 0.0 AS [Score_2], 0.0 AS [Score_3] 
FROM [DT_Output_12]), 
[DT_node_lookup_13] AS 
(SELECT [ADS].[KEY] AS [KEY], CASE WHEN ([ADS].[Feature_43] <= 1.409960389137268) THEN CASE WHEN ([ADS].[Feature_64] <= -1.0314191579818726) THEN CASE WHEN ([ADS].[Feature_27] <= 7.660648822784424) THEN 3 ELSE 4 END ELSE CASE WHEN ([ADS].[Feature_40] <= -9.921607971191406) THEN 6 ELSE 7 END END ELSE CASE WHEN ([ADS].[Feature_55] <= 1.8188964128494263) THEN CASE WHEN ([ADS].[Feature_62] <= 3.288621187210083) THEN 10 ELSE 11 END ELSE CASE WHEN ([ADS].[Feature_14] <= -1.4927418231964111) THEN 13 ELSE 14 END END END AS node_id_2 
FROM [FourClass_100] AS [ADS]), 
[DT_node_data_13] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Estimator] AS [Estimator] 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 193 AS count, 3 AS depth, 2 AS parent_id, 0.08054611479944439 AS [Estimator] UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 7 AS count, 3 AS depth, 2 AS parent_id, 2.4925522631381094 AS [Estimator] UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 3 AS depth, 5 AS parent_id, 2.4375436565146478 AS [Estimator] UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 300 AS count, 3 AS depth, 5 AS parent_id, -0.5627588113813426 AS [Estimator] UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 173 AS count, 3 AS depth, 9 AS parent_id, 0.9707633383263335 AS [Estimator] UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 43 AS count, 3 AS depth, 9 AS parent_id, -0.4565063743856572 AS [Estimator] UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS count, 3 AS depth, 12 AS parent_id, 1.9550644306374572 AS [Estimator] UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 76 AS count, 3 AS depth, 12 AS parent_id, -0.6220196794745383 AS [Estimator]) AS [Values]), 
[DT_Output_13] AS 
(SELECT [DT_node_lookup_13].[KEY] AS [KEY], [DT_node_lookup_13].node_id_2 AS node_id_2, [DT_node_data_13].node_id AS node_id, [DT_node_data_13].feature AS feature, [DT_node_data_13].threshold AS threshold, [DT_node_data_13].count AS count, [DT_node_data_13].depth AS depth, [DT_node_data_13].parent_id AS parent_id, [DT_node_data_13].[Estimator] AS [Estimator] 
FROM [DT_node_lookup_13] LEFT OUTER JOIN [DT_node_data_13] ON [DT_node_lookup_13].node_id_2 = [DT_node_data_13].node_id), 
[GB_Tree_3_1] AS 
(SELECT [DT_Output_13].[KEY] AS [KEY], 0.0 AS [Score_0], [DT_Output_13].[Estimator] AS [Score_1], 0.0 AS [Score_2], 0.0 AS [Score_3] 
FROM [DT_Output_13]), 
[DT_node_lookup_14] AS 
(SELECT [ADS].[KEY] AS [KEY], CASE WHEN ([ADS].[Feature_64] <= 3.4220011234283447) THEN CASE WHEN ([ADS].[Feature_38] <= 3.5349035263061523) THEN CASE WHEN ([ADS].[Feature_52] <= -6.096066474914551) THEN 3 ELSE 4 END ELSE CASE WHEN ([ADS].[Feature_15] <= 3.500455856323242) THEN 6 ELSE 7 END END ELSE CASE WHEN ([ADS].[Feature_31] <= -2.0226516723632812) THEN CASE WHEN ([ADS].[Feature_9] <= -0.3913906514644623) THEN 10 ELSE 11 END ELSE CASE WHEN ([ADS].[Feature_53] <= 0.8465214967727661) THEN 13 ELSE 14 END END END AS node_id_2 
FROM [FourClass_100] AS [ADS]), 
[DT_node_data_14] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Estimator] AS [Estimator] 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 39 AS count, 3 AS depth, 2 AS parent_id, 0.7900642439273013 AS [Estimator] UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 486 AS count, 3 AS depth, 2 AS parent_id, -0.391896286481112 AS [Estimator] UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 93 AS count, 3 AS depth, 5 AS parent_id, 0.8516978679448161 AS [Estimator] UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 25 AS count, 3 AS depth, 5 AS parent_id, -0.8412500487771803 AS [Estimator] UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 27 AS count, 3 AS depth, 9 AS parent_id, 0.5234067298943462 AS [Estimator] UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 34 AS count, 3 AS depth, 9 AS parent_id, 1.9985869904667624 AS [Estimator] UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 51 AS count, 3 AS depth, 12 AS parent_id, -0.5988230125475793 AS [Estimator] UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 45 AS count, 3 AS depth, 12 AS parent_id, 0.7563430026586779 AS [Estimator]) AS [Values]), 
[DT_Output_14] AS 
(SELECT [DT_node_lookup_14].[KEY] AS [KEY], [DT_node_lookup_14].node_id_2 AS node_id_2, [DT_node_data_14].node_id AS node_id, [DT_node_data_14].feature AS feature, [DT_node_data_14].threshold AS threshold, [DT_node_data_14].count AS count, [DT_node_data_14].depth AS depth, [DT_node_data_14].parent_id AS parent_id, [DT_node_data_14].[Estimator] AS [Estimator] 
FROM [DT_node_lookup_14] LEFT OUTER JOIN [DT_node_data_14] ON [DT_node_lookup_14].node_id_2 = [DT_node_data_14].node_id), 
[GB_Tree_3_2] AS 
(SELECT [DT_Output_14].[KEY] AS [KEY], 0.0 AS [Score_0], 0.0 AS [Score_1], [DT_Output_14].[Estimator] AS [Score_2], 0.0 AS [Score_3] 
FROM [DT_Output_14]), 
[DT_node_lookup_15] AS 
(SELECT [ADS].[KEY] AS [KEY], CASE WHEN ([ADS].[Feature_68] <= -1.4168505668640137) THEN CASE WHEN ([ADS].[Feature_24] <= -8.897951126098633) THEN CASE WHEN ([ADS].[Feature_94] <= -0.3441201150417328) THEN 3 ELSE 4 END ELSE CASE WHEN ([ADS].[Feature_50] <= -5.64012336730957) THEN 6 ELSE 7 END END ELSE CASE WHEN ([ADS].[Feature_38] <= -3.7920165061950684) THEN CASE WHEN ([ADS].[Feature_85] <= 0.615092396736145) THEN 10 ELSE 11 END ELSE CASE WHEN ([ADS].[Feature_17] <= 6.499017715454102) THEN 13 ELSE 14 END END END AS node_id_2 
FROM [FourClass_100] AS [ADS]), 
[DT_node_data_15] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Estimator] AS [Estimator] 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 3 AS depth, 2 AS parent_id, -0.9849503926859623 AS [Estimator] UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 8 AS count, 3 AS depth, 2 AS parent_id, 2.3735479234669996 AS [Estimator] UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 29 AS count, 3 AS depth, 5 AS parent_id, 0.5404302244664866 AS [Estimator] UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 295 AS count, 3 AS depth, 5 AS parent_id, -0.5557168918623728 AS [Estimator] UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 44 AS count, 3 AS depth, 9 AS parent_id, 1.7427365314368388 AS [Estimator] UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 36 AS count, 3 AS depth, 9 AS parent_id, 0.4885625727147515 AS [Estimator] UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 359 AS count, 3 AS depth, 12 AS parent_id, -0.024004213189144176 AS [Estimator] UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 26 AS count, 3 AS depth, 12 AS parent_id, 1.3764788816634295 AS [Estimator]) AS [Values]), 
[DT_Output_15] AS 
(SELECT [DT_node_lookup_15].[KEY] AS [KEY], [DT_node_lookup_15].node_id_2 AS node_id_2, [DT_node_data_15].node_id AS node_id, [DT_node_data_15].feature AS feature, [DT_node_data_15].threshold AS threshold, [DT_node_data_15].count AS count, [DT_node_data_15].depth AS depth, [DT_node_data_15].parent_id AS parent_id, [DT_node_data_15].[Estimator] AS [Estimator] 
FROM [DT_node_lookup_15] LEFT OUTER JOIN [DT_node_data_15] ON [DT_node_lookup_15].node_id_2 = [DT_node_data_15].node_id), 
[GB_Tree_3_3] AS 
(SELECT [DT_Output_15].[KEY] AS [KEY], 0.0 AS [Score_0], 0.0 AS [Score_1], 0.0 AS [Score_2], [DT_Output_15].[Estimator] AS [Score_3] 
FROM [DT_Output_15]), 
[DT_node_lookup_16] AS 
(SELECT [ADS].[KEY] AS [KEY], CASE WHEN ([ADS].[Feature_17] <= -1.6641823053359985) THEN CASE WHEN ([ADS].[Feature_34] <= 3.506000518798828) THEN CASE WHEN ([ADS].[Feature_25] <= -1.292710781097412) THEN 3 ELSE 4 END ELSE CASE WHEN ([ADS].[Feature_48] <= 1.1445343494415283) THEN 6 ELSE 7 END END ELSE CASE WHEN ([ADS].[Feature_51] <= 2.065941572189331) THEN CASE WHEN ([ADS].[Feature_90] <= 23.269041061401367) THEN 10 ELSE 11 END ELSE CASE WHEN ([ADS].[Feature_90] <= -3.278873920440674) THEN 13 ELSE 14 END END END AS node_id_2 
FROM [FourClass_100] AS [ADS]), 
[DT_node_data_16] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Estimator] AS [Estimator] 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 87 AS count, 3 AS depth, 2 AS parent_id, -0.5252381572090826 AS [Estimator] UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 117 AS count, 3 AS depth, 2 AS parent_id, 0.6285426589686317 AS [Estimator] UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 38 AS count, 3 AS depth, 5 AS parent_id, 1.6043898028711945 AS [Estimator] UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 11 AS count, 3 AS depth, 5 AS parent_id, -0.009508804821949466 AS [Estimator] UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 390 AS count, 3 AS depth, 9 AS parent_id, -0.493205869478129 AS [Estimator] UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 16 AS count, 3 AS depth, 9 AS parent_id, 0.9363810992109954 AS [Estimator] UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 75 AS count, 3 AS depth, 12 AS parent_id, -0.308980486661334 AS [Estimator] UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 66 AS count, 3 AS depth, 12 AS parent_id, 0.998412579505588 AS [Estimator]) AS [Values]), 
[DT_Output_16] AS 
(SELECT [DT_node_lookup_16].[KEY] AS [KEY], [DT_node_lookup_16].node_id_2 AS node_id_2, [DT_node_data_16].node_id AS node_id, [DT_node_data_16].feature AS feature, [DT_node_data_16].threshold AS threshold, [DT_node_data_16].count AS count, [DT_node_data_16].depth AS depth, [DT_node_data_16].parent_id AS parent_id, [DT_node_data_16].[Estimator] AS [Estimator] 
FROM [DT_node_lookup_16] LEFT OUTER JOIN [DT_node_data_16] ON [DT_node_lookup_16].node_id_2 = [DT_node_data_16].node_id), 
[GB_Tree_4_0] AS 
(SELECT [DT_Output_16].[KEY] AS [KEY], [DT_Output_16].[Estimator] AS [Score_0], 0.0 AS [Score_1], 0.0 AS [Score_2], 0.0 AS [Score_3] 
FROM [DT_Output_16]), 
[DT_node_lookup_17] AS 
(SELECT [ADS].[KEY] AS [KEY], CASE WHEN ([ADS].[Feature_31] <= 0.8691813349723816) THEN CASE WHEN ([ADS].[Feature_2] <= 1.2432126998901367) THEN CASE WHEN ([ADS].[Feature_19] <= -2.2971088886260986) THEN 3 ELSE 4 END ELSE CASE WHEN ([ADS].[Feature_42] <= 1.6553479433059692) THEN 6 ELSE 7 END END ELSE CASE WHEN ([ADS].[Feature_50] <= -0.9303579926490784) THEN CASE WHEN ([ADS].[Feature_70] <= 0.8291162252426147) THEN 10 ELSE 11 END ELSE CASE WHEN ([ADS].[Feature_43] <= 1.7241685390472412) THEN 13 ELSE 14 END END END AS node_id_2 
FROM [FourClass_100] AS [ADS]), 
[DT_node_data_17] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Estimator] AS [Estimator] 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS count, 3 AS depth, 2 AS parent_id, 1.9776430019901166 AS [Estimator] UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 322 AS count, 3 AS depth, 2 AS parent_id, -0.5180021690330411 AS [Estimator] UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 115 AS count, 3 AS depth, 5 AS parent_id, 0.6421682241852277 AS [Estimator] UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 62 AS count, 3 AS depth, 5 AS parent_id, -0.7090772737003405 AS [Estimator] UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 86 AS count, 3 AS depth, 9 AS parent_id, -0.44690126575049605 AS [Estimator] UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 26 AS count, 3 AS depth, 9 AS parent_id, 0.7515371334634852 AS [Estimator] UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 117 AS count, 3 AS depth, 12 AS parent_id, 0.2872727657602635 AS [Estimator] UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 67 AS count, 3 AS depth, 12 AS parent_id, 1.213467702862671 AS [Estimator]) AS [Values]), 
[DT_Output_17] AS 
(SELECT [DT_node_lookup_17].[KEY] AS [KEY], [DT_node_lookup_17].node_id_2 AS node_id_2, [DT_node_data_17].node_id AS node_id, [DT_node_data_17].feature AS feature, [DT_node_data_17].threshold AS threshold, [DT_node_data_17].count AS count, [DT_node_data_17].depth AS depth, [DT_node_data_17].parent_id AS parent_id, [DT_node_data_17].[Estimator] AS [Estimator] 
FROM [DT_node_lookup_17] LEFT OUTER JOIN [DT_node_data_17] ON [DT_node_lookup_17].node_id_2 = [DT_node_data_17].node_id), 
[GB_Tree_4_1] AS 
(SELECT [DT_Output_17].[KEY] AS [KEY], 0.0 AS [Score_0], [DT_Output_17].[Estimator] AS [Score_1], 0.0 AS [Score_2], 0.0 AS [Score_3] 
FROM [DT_Output_17]), 
[DT_node_lookup_18] AS 
(SELECT [ADS].[KEY] AS [KEY], CASE WHEN ([ADS].[Feature_61] <= 1.94813871383667) THEN CASE WHEN ([ADS].[Feature_15] <= 0.27006494998931885) THEN CASE WHEN ([ADS].[Feature_86] <= -5.2298407554626465) THEN 3 ELSE 4 END ELSE CASE WHEN ([ADS].[Feature_42] <= 7.726360321044922) THEN 6 ELSE 7 END END ELSE CASE WHEN ([ADS].[Feature_91] <= -8.405571937561035) THEN CASE WHEN ([ADS].[Feature_43] <= 0.03846225142478943) THEN 10 ELSE 11 END ELSE CASE WHEN ([ADS].[Feature_96] <= -1.3830008506774902) THEN 13 ELSE 14 END END END AS node_id_2 
FROM [FourClass_100] AS [ADS]), 
[DT_node_data_18] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Estimator] AS [Estimator] 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 33 AS count, 3 AS depth, 2 AS parent_id, 1.5326667904820934 AS [Estimator] UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 257 AS count, 3 AS depth, 2 AS parent_id, 0.36789748176682185 AS [Estimator] UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 264 AS count, 3 AS depth, 5 AS parent_id, -0.2742075579328963 AS [Estimator] UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 12 AS count, 3 AS depth, 5 AS parent_id, 1.436475060457357 AS [Estimator] UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 7 AS count, 3 AS depth, 9 AS parent_id, 2.5266312047579413 AS [Estimator] UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS count, 3 AS depth, 9 AS parent_id, -0.9564232810535973 AS [Estimator] UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 15 AS count, 3 AS depth, 12 AS parent_id, 0.6168330267796639 AS [Estimator] UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 208 AS count, 3 AS depth, 12 AS parent_id, -0.6574706417987013 AS [Estimator]) AS [Values]), 
[DT_Output_18] AS 
(SELECT [DT_node_lookup_18].[KEY] AS [KEY], [DT_node_lookup_18].node_id_2 AS node_id_2, [DT_node_data_18].node_id AS node_id, [DT_node_data_18].feature AS feature, [DT_node_data_18].threshold AS threshold, [DT_node_data_18].count AS count, [DT_node_data_18].depth AS depth, [DT_node_data_18].parent_id AS parent_id, [DT_node_data_18].[Estimator] AS [Estimator] 
FROM [DT_node_lookup_18] LEFT OUTER JOIN [DT_node_data_18] ON [DT_node_lookup_18].node_id_2 = [DT_node_data_18].node_id), 
[GB_Tree_4_2] AS 
(SELECT [DT_Output_18].[KEY] AS [KEY], 0.0 AS [Score_0], 0.0 AS [Score_1], [DT_Output_18].[Estimator] AS [Score_2], 0.0 AS [Score_3] 
FROM [DT_Output_18]), 
[DT_node_lookup_19] AS 
(SELECT [ADS].[KEY] AS [KEY], CASE WHEN ([ADS].[Feature_84] <= -1.8281559944152832) THEN CASE WHEN ([ADS].[Feature_25] <= -0.3994830250740051) THEN CASE WHEN ([ADS].[Feature_24] <= -1.5325963497161865) THEN 3 ELSE 4 END ELSE CASE WHEN ([ADS].[Feature_52] <= -2.3108506202697754) THEN 6 ELSE 7 END END ELSE CASE WHEN ([ADS].[Feature_43] <= -1.0244340896606445) THEN CASE WHEN ([ADS].[Feature_1] <= -6.9398908615112305) THEN 10 ELSE 11 END ELSE CASE WHEN ([ADS].[Feature_63] <= 1.4017131328582764) THEN 13 ELSE 14 END END END AS node_id_2 
FROM [FourClass_100] AS [ADS]), 
[DT_node_data_19] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Estimator] AS [Estimator] 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 64 AS count, 3 AS depth, 2 AS parent_id, 1.3487334826738 AS [Estimator] UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 55 AS count, 3 AS depth, 2 AS parent_id, 0.32198631276883843 AS [Estimator] UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 40 AS count, 3 AS depth, 5 AS parent_id, 0.7882581731811455 AS [Estimator] UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 99 AS count, 3 AS depth, 5 AS parent_id, -0.40179822308616214 AS [Estimator] UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 11 AS count, 3 AS depth, 9 AS parent_id, 2.114264090883053 AS [Estimator] UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 224 AS count, 3 AS depth, 9 AS parent_id, 0.013483495686363365 AS [Estimator] UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 281 AS count, 3 AS depth, 12 AS parent_id, -0.5856371012393505 AS [Estimator] UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 26 AS count, 3 AS depth, 12 AS parent_id, 0.5424341777563836 AS [Estimator]) AS [Values]), 
[DT_Output_19] AS 
(SELECT [DT_node_lookup_19].[KEY] AS [KEY], [DT_node_lookup_19].node_id_2 AS node_id_2, [DT_node_data_19].node_id AS node_id, [DT_node_data_19].feature AS feature, [DT_node_data_19].threshold AS threshold, [DT_node_data_19].count AS count, [DT_node_data_19].depth AS depth, [DT_node_data_19].parent_id AS parent_id, [DT_node_data_19].[Estimator] AS [Estimator] 
FROM [DT_node_lookup_19] LEFT OUTER JOIN [DT_node_data_19] ON [DT_node_lookup_19].node_id_2 = [DT_node_data_19].node_id), 
[GB_Tree_4_3] AS 
(SELECT [DT_Output_19].[KEY] AS [KEY], 0.0 AS [Score_0], 0.0 AS [Score_1], 0.0 AS [Score_2], [DT_Output_19].[Estimator] AS [Score_3] 
FROM [DT_Output_19]), 
[DT_node_lookup_20] AS 
(SELECT [ADS].[KEY] AS [KEY], CASE WHEN ([ADS].[Feature_34] <= -1.8280695676803589) THEN CASE WHEN ([ADS].[Feature_56] <= -2.898538112640381) THEN CASE WHEN ([ADS].[Feature_57] <= -1.7538964748382568) THEN 3 ELSE 4 END ELSE CASE WHEN ([ADS].[Feature_72] <= -1.552283525466919) THEN 6 ELSE 7 END END ELSE CASE WHEN ([ADS].[Feature_8] <= -3.421581745147705) THEN CASE WHEN ([ADS].[Feature_48] <= -1.0257000923156738) THEN 10 ELSE 11 END ELSE CASE WHEN ([ADS].[Feature_40] <= -0.8684566020965576) THEN 13 ELSE 14 END END END AS node_id_2 
FROM [FourClass_100] AS [ADS]), 
[DT_node_data_20] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Estimator] AS [Estimator] 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 12 AS count, 3 AS depth, 2 AS parent_id, 2.0372609210809207 AS [Estimator] UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 45 AS count, 3 AS depth, 2 AS parent_id, -0.20930506337257582 AS [Estimator] UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS count, 3 AS depth, 5 AS parent_id, 1.3602625073138455 AS [Estimator] UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 204 AS count, 3 AS depth, 5 AS parent_id, -0.7405578972536723 AS [Estimator] UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 55 AS count, 3 AS depth, 9 AS parent_id, 1.6318239376192958 AS [Estimator] UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 64 AS count, 3 AS depth, 9 AS parent_id, 0.14158615873080022 AS [Estimator] UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 195 AS count, 3 AS depth, 12 AS parent_id, -0.4031031714045873 AS [Estimator] UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 220 AS count, 3 AS depth, 12 AS parent_id, 0.30769064277827685 AS [Estimator]) AS [Values]), 
[DT_Output_20] AS 
(SELECT [DT_node_lookup_20].[KEY] AS [KEY], [DT_node_lookup_20].node_id_2 AS node_id_2, [DT_node_data_20].node_id AS node_id, [DT_node_data_20].feature AS feature, [DT_node_data_20].threshold AS threshold, [DT_node_data_20].count AS count, [DT_node_data_20].depth AS depth, [DT_node_data_20].parent_id AS parent_id, [DT_node_data_20].[Estimator] AS [Estimator] 
FROM [DT_node_lookup_20] LEFT OUTER JOIN [DT_node_data_20] ON [DT_node_lookup_20].node_id_2 = [DT_node_data_20].node_id), 
[GB_Tree_5_0] AS 
(SELECT [DT_Output_20].[KEY] AS [KEY], [DT_Output_20].[Estimator] AS [Score_0], 0.0 AS [Score_1], 0.0 AS [Score_2], 0.0 AS [Score_3] 
FROM [DT_Output_20]), 
[DT_node_lookup_21] AS 
(SELECT [ADS].[KEY] AS [KEY], CASE WHEN ([ADS].[Feature_40] <= 0.9660218954086304) THEN CASE WHEN ([ADS].[Feature_24] <= 4.820867538452148) THEN CASE WHEN ([ADS].[Feature_2] <= 0.19582626223564148) THEN 3 ELSE 4 END ELSE CASE WHEN ([ADS].[Feature_87] <= -3.7778384685516357) THEN 6 ELSE 7 END END ELSE CASE WHEN ([ADS].[Feature_21] <= 8.88388442993164) THEN CASE WHEN ([ADS].[Feature_85] <= -7.182527542114258) THEN 10 ELSE 11 END ELSE CASE WHEN ([ADS].[Feature_84] <= -5.513004302978516) THEN 13 ELSE 14 END END END AS node_id_2 
FROM [FourClass_100] AS [ADS]), 
[DT_node_data_21] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Estimator] AS [Estimator] 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 206 AS count, 3 AS depth, 2 AS parent_id, -0.3190682898852337 AS [Estimator] UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 214 AS count, 3 AS depth, 2 AS parent_id, 0.43693940407887427 AS [Estimator] UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 10 AS count, 3 AS depth, 5 AS parent_id, -0.9855354148684932 AS [Estimator] UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 57 AS count, 3 AS depth, 5 AS parent_id, 1.33997954450313 AS [Estimator] UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 14 AS count, 3 AS depth, 9 AS parent_id, 1.0445362633482163 AS [Estimator] UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 294 AS count, 3 AS depth, 9 AS parent_id, -0.4916853881753024 AS [Estimator] UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 12 AS parent_id, -0.9039319757511836 AS [Estimator] UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS count, 3 AS depth, 12 AS parent_id, 2.8929051748938277 AS [Estimator]) AS [Values]), 
[DT_Output_21] AS 
(SELECT [DT_node_lookup_21].[KEY] AS [KEY], [DT_node_lookup_21].node_id_2 AS node_id_2, [DT_node_data_21].node_id AS node_id, [DT_node_data_21].feature AS feature, [DT_node_data_21].threshold AS threshold, [DT_node_data_21].count AS count, [DT_node_data_21].depth AS depth, [DT_node_data_21].parent_id AS parent_id, [DT_node_data_21].[Estimator] AS [Estimator] 
FROM [DT_node_lookup_21] LEFT OUTER JOIN [DT_node_data_21] ON [DT_node_lookup_21].node_id_2 = [DT_node_data_21].node_id), 
[GB_Tree_5_1] AS 
(SELECT [DT_Output_21].[KEY] AS [KEY], 0.0 AS [Score_0], [DT_Output_21].[Estimator] AS [Score_1], 0.0 AS [Score_2], 0.0 AS [Score_3] 
FROM [DT_Output_21]), 
[DT_node_lookup_22] AS 
(SELECT [ADS].[KEY] AS [KEY], CASE WHEN ([ADS].[Feature_86] <= -6.294239044189453) THEN CASE WHEN ([ADS].[Feature_66] <= -1.4083844423294067) THEN CASE WHEN ([ADS].[Feature_6] <= 1.5803332328796387) THEN 3 ELSE 4 END ELSE CASE WHEN ([ADS].[Feature_88] <= -1.1359390020370483) THEN 6 ELSE 7 END END ELSE CASE WHEN ([ADS].[Feature_38] <= -3.5714943408966064) THEN CASE WHEN ([ADS].[Feature_8] <= 9.685890197753906) THEN 10 ELSE 11 END ELSE CASE WHEN ([ADS].[Feature_87] <= -3.1638598442077637) THEN 13 ELSE 14 END END END AS node_id_2 
FROM [FourClass_100] AS [ADS]), 
[DT_node_data_22] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Estimator] AS [Estimator] 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 14 AS count, 3 AS depth, 2 AS parent_id, -1.0004168770700648 AS [Estimator] UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 2 AS parent_id, 2.2400971150850815 AS [Estimator] UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS count, 3 AS depth, 5 AS parent_id, -1.0260859566073985 AS [Estimator] UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 29 AS count, 3 AS depth, 5 AS parent_id, 1.904241618173877 AS [Estimator] UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 124 AS count, 3 AS depth, 9 AS parent_id, -0.8596206446580111 AS [Estimator] UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 3 AS depth, 9 AS parent_id, 2.352714915864813 AS [Estimator] UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 118 AS count, 3 AS depth, 12 AS parent_id, 0.731641662910432 AS [Estimator] UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 508 AS count, 3 AS depth, 12 AS parent_id, -0.0961746035918945 AS [Estimator]) AS [Values]), 
[DT_Output_22] AS 
(SELECT [DT_node_lookup_22].[KEY] AS [KEY], [DT_node_lookup_22].node_id_2 AS node_id_2, [DT_node_data_22].node_id AS node_id, [DT_node_data_22].feature AS feature, [DT_node_data_22].threshold AS threshold, [DT_node_data_22].count AS count, [DT_node_data_22].depth AS depth, [DT_node_data_22].parent_id AS parent_id, [DT_node_data_22].[Estimator] AS [Estimator] 
FROM [DT_node_lookup_22] LEFT OUTER JOIN [DT_node_data_22] ON [DT_node_lookup_22].node_id_2 = [DT_node_data_22].node_id), 
[GB_Tree_5_2] AS 
(SELECT [DT_Output_22].[KEY] AS [KEY], 0.0 AS [Score_0], 0.0 AS [Score_1], [DT_Output_22].[Estimator] AS [Score_2], 0.0 AS [Score_3] 
FROM [DT_Output_22]), 
[DT_node_lookup_23] AS 
(SELECT [ADS].[KEY] AS [KEY], CASE WHEN ([ADS].[Feature_68] <= -1.4168505668640137) THEN CASE WHEN ([ADS].[Feature_24] <= -8.897951126098633) THEN CASE WHEN ([ADS].[Feature_94] <= -0.3441201150417328) THEN 3 ELSE 4 END ELSE CASE WHEN ([ADS].[Feature_43] <= -4.763238906860352) THEN 6 ELSE 7 END END ELSE CASE WHEN ([ADS].[Feature_38] <= -3.7920165061950684) THEN CASE WHEN ([ADS].[Feature_85] <= 4.899930953979492) THEN 10 ELSE 11 END ELSE CASE WHEN ([ADS].[Feature_64] <= -1.8772863149642944) THEN 13 ELSE 14 END END END AS node_id_2 
FROM [FourClass_100] AS [ADS]), 
[DT_node_data_23] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Estimator] AS [Estimator] 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 3 AS depth, 2 AS parent_id, -0.9465776500320069 AS [Estimator] UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 8 AS count, 3 AS depth, 2 AS parent_id, 1.905671495085038 AS [Estimator] UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 33 AS count, 3 AS depth, 5 AS parent_id, 0.4814806585011914 AS [Estimator] UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 291 AS count, 3 AS depth, 5 AS parent_id, -0.533933536244217 AS [Estimator] UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 68 AS count, 3 AS depth, 9 AS parent_id, 1.2152491250085964 AS [Estimator] UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 12 AS count, 3 AS depth, 9 AS parent_id, -0.38568107301934484 AS [Estimator] UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 128 AS count, 3 AS depth, 12 AS parent_id, -0.4189215040149469 AS [Estimator] UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 257 AS count, 3 AS depth, 12 AS parent_id, 0.3029546761708406 AS [Estimator]) AS [Values]), 
[DT_Output_23] AS 
(SELECT [DT_node_lookup_23].[KEY] AS [KEY], [DT_node_lookup_23].node_id_2 AS node_id_2, [DT_node_data_23].node_id AS node_id, [DT_node_data_23].feature AS feature, [DT_node_data_23].threshold AS threshold, [DT_node_data_23].count AS count, [DT_node_data_23].depth AS depth, [DT_node_data_23].parent_id AS parent_id, [DT_node_data_23].[Estimator] AS [Estimator] 
FROM [DT_node_lookup_23] LEFT OUTER JOIN [DT_node_data_23] ON [DT_node_lookup_23].node_id_2 = [DT_node_data_23].node_id), 
[GB_Tree_5_3] AS 
(SELECT [DT_Output_23].[KEY] AS [KEY], 0.0 AS [Score_0], 0.0 AS [Score_1], 0.0 AS [Score_2], [DT_Output_23].[Estimator] AS [Score_3] 
FROM [DT_Output_23]), 
[DT_node_lookup_24] AS 
(SELECT [ADS].[KEY] AS [KEY], CASE WHEN ([ADS].[Feature_17] <= -1.6641823053359985) THEN CASE WHEN ([ADS].[Feature_8] <= 1.6694024801254272) THEN CASE WHEN ([ADS].[Feature_34] <= 2.0196714401245117) THEN 3 ELSE 4 END ELSE CASE WHEN ([ADS].[Feature_95] <= 3.9019241333007812) THEN 6 ELSE 7 END END ELSE CASE WHEN ([ADS].[Feature_27] <= 1.7910997867584229) THEN CASE WHEN ([ADS].[Feature_15] <= 0.24177399277687073) THEN 10 ELSE 11 END ELSE CASE WHEN ([ADS].[Feature_87] <= 8.368165969848633) THEN 13 ELSE 14 END END END AS node_id_2 
FROM [FourClass_100] AS [ADS]), 
[DT_node_data_24] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Estimator] AS [Estimator] 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 101 AS count, 3 AS depth, 2 AS parent_id, 0.3236848108182636 AS [Estimator] UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 57 AS count, 3 AS depth, 2 AS parent_id, 1.23367084063227 AS [Estimator] UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 82 AS count, 3 AS depth, 5 AS parent_id, -0.5113088675754031 AS [Estimator] UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 13 AS count, 3 AS depth, 5 AS parent_id, 1.237935653410687 AS [Estimator] UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 202 AS count, 3 AS depth, 9 AS parent_id, -0.39992918999254845 AS [Estimator] UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 193 AS count, 3 AS depth, 9 AS parent_id, 0.335075114320529 AS [Estimator] UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 150 AS count, 3 AS depth, 12 AS parent_id, -0.7868613127590514 AS [Estimator] UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 3 AS depth, 12 AS parent_id, 2.6368007421441124 AS [Estimator]) AS [Values]), 
[DT_Output_24] AS 
(SELECT [DT_node_lookup_24].[KEY] AS [KEY], [DT_node_lookup_24].node_id_2 AS node_id_2, [DT_node_data_24].node_id AS node_id, [DT_node_data_24].feature AS feature, [DT_node_data_24].threshold AS threshold, [DT_node_data_24].count AS count, [DT_node_data_24].depth AS depth, [DT_node_data_24].parent_id AS parent_id, [DT_node_data_24].[Estimator] AS [Estimator] 
FROM [DT_node_lookup_24] LEFT OUTER JOIN [DT_node_data_24] ON [DT_node_lookup_24].node_id_2 = [DT_node_data_24].node_id), 
[GB_Tree_6_0] AS 
(SELECT [DT_Output_24].[KEY] AS [KEY], [DT_Output_24].[Estimator] AS [Score_0], 0.0 AS [Score_1], 0.0 AS [Score_2], 0.0 AS [Score_3] 
FROM [DT_Output_24]), 
[DT_node_lookup_25] AS 
(SELECT [ADS].[KEY] AS [KEY], CASE WHEN ([ADS].[Feature_31] <= 0.8691813349723816) THEN CASE WHEN ([ADS].[Feature_74] <= -8.98991584777832) THEN CASE WHEN ([ADS].[Feature_12] <= 0.8910470008850098) THEN 3 ELSE 4 END ELSE CASE WHEN ([ADS].[Feature_27] <= -0.5472254157066345) THEN 6 ELSE 7 END END ELSE CASE WHEN ([ADS].[Feature_40] <= -5.502964973449707) THEN CASE WHEN ([ADS].[Feature_50] <= -4.221663475036621) THEN 10 ELSE 11 END ELSE CASE WHEN ([ADS].[Feature_55] <= 1.8456840515136719) THEN 13 ELSE 14 END END END AS node_id_2 
FROM [FourClass_100] AS [ADS]), 
[DT_node_data_25] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Estimator] AS [Estimator] 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 3 AS depth, 2 AS parent_id, 2.3881650905470315 AS [Estimator] UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 3 AS depth, 2 AS parent_id, 3.3385155320468454 AS [Estimator] UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 253 AS count, 3 AS depth, 5 AS parent_id, -0.5841360242902354 AS [Estimator] UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 247 AS count, 3 AS depth, 5 AS parent_id, 0.05242262994519202 AS [Estimator] UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 8 AS count, 3 AS depth, 9 AS parent_id, -0.5315865147514149 AS [Estimator] UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 27 AS count, 3 AS depth, 9 AS parent_id, 1.6402901710879831 AS [Estimator] UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 178 AS count, 3 AS depth, 12 AS parent_id, 0.4442892295622008 AS [Estimator] UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 83 AS count, 3 AS depth, 12 AS parent_id, -0.4097527174262549 AS [Estimator]) AS [Values]), 
[DT_Output_25] AS 
(SELECT [DT_node_lookup_25].[KEY] AS [KEY], [DT_node_lookup_25].node_id_2 AS node_id_2, [DT_node_data_25].node_id AS node_id, [DT_node_data_25].feature AS feature, [DT_node_data_25].threshold AS threshold, [DT_node_data_25].count AS count, [DT_node_data_25].depth AS depth, [DT_node_data_25].parent_id AS parent_id, [DT_node_data_25].[Estimator] AS [Estimator] 
FROM [DT_node_lookup_25] LEFT OUTER JOIN [DT_node_data_25] ON [DT_node_lookup_25].node_id_2 = [DT_node_data_25].node_id), 
[GB_Tree_6_1] AS 
(SELECT [DT_Output_25].[KEY] AS [KEY], 0.0 AS [Score_0], [DT_Output_25].[Estimator] AS [Score_1], 0.0 AS [Score_2], 0.0 AS [Score_3] 
FROM [DT_Output_25]), 
[DT_node_lookup_26] AS 
(SELECT [ADS].[KEY] AS [KEY], CASE WHEN ([ADS].[Feature_61] <= 1.94813871383667) THEN CASE WHEN ([ADS].[Feature_15] <= 0.27006494998931885) THEN CASE WHEN ([ADS].[Feature_48] <= 0.40319329500198364) THEN 3 ELSE 4 END ELSE CASE WHEN ([ADS].[Feature_42] <= 7.726360321044922) THEN 6 ELSE 7 END END ELSE CASE WHEN ([ADS].[Feature_91] <= -8.405571937561035) THEN CASE WHEN ([ADS].[Feature_43] <= 0.03846225142478943) THEN 10 ELSE 11 END ELSE CASE WHEN ([ADS].[Feature_87] <= 8.172243118286133) THEN 13 ELSE 14 END END END AS node_id_2 
FROM [FourClass_100] AS [ADS]), 
[DT_node_data_26] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Estimator] AS [Estimator] 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 163 AS count, 3 AS depth, 2 AS parent_id, 0.11080658342050136 AS [Estimator] UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 127 AS count, 3 AS depth, 2 AS parent_id, 0.8759831940461106 AS [Estimator] UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 264 AS count, 3 AS depth, 5 AS parent_id, -0.2492045281667601 AS [Estimator] UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 12 AS count, 3 AS depth, 5 AS parent_id, 1.2447574211682664 AS [Estimator] UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 7 AS count, 3 AS depth, 9 AS parent_id, 2.022451748982918 AS [Estimator] UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS count, 3 AS depth, 9 AS parent_id, -0.9257788974275334 AS [Estimator] UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 208 AS count, 3 AS depth, 12 AS parent_id, -0.6281491686958314 AS [Estimator] UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 15 AS count, 3 AS depth, 12 AS parent_id, 0.630559178088036 AS [Estimator]) AS [Values]), 
[DT_Output_26] AS 
(SELECT [DT_node_lookup_26].[KEY] AS [KEY], [DT_node_lookup_26].node_id_2 AS node_id_2, [DT_node_data_26].node_id AS node_id, [DT_node_data_26].feature AS feature, [DT_node_data_26].threshold AS threshold, [DT_node_data_26].count AS count, [DT_node_data_26].depth AS depth, [DT_node_data_26].parent_id AS parent_id, [DT_node_data_26].[Estimator] AS [Estimator] 
FROM [DT_node_lookup_26] LEFT OUTER JOIN [DT_node_data_26] ON [DT_node_lookup_26].node_id_2 = [DT_node_data_26].node_id), 
[GB_Tree_6_2] AS 
(SELECT [DT_Output_26].[KEY] AS [KEY], 0.0 AS [Score_0], 0.0 AS [Score_1], [DT_Output_26].[Estimator] AS [Score_2], 0.0 AS [Score_3] 
FROM [DT_Output_26]), 
[DT_node_lookup_27] AS 
(SELECT [ADS].[KEY] AS [KEY], CASE WHEN ([ADS].[Feature_84] <= -1.8281559944152832) THEN CASE WHEN ([ADS].[Feature_25] <= -0.3994830250740051) THEN CASE WHEN ([ADS].[Feature_90] <= 13.796354293823242) THEN 3 ELSE 4 END ELSE CASE WHEN ([ADS].[Feature_58] <= 0.3203463554382324) THEN 6 ELSE 7 END END ELSE CASE WHEN ([ADS].[Feature_43] <= -1.0244340896606445) THEN CASE WHEN ([ADS].[Feature_1] <= -6.9398908615112305) THEN 10 ELSE 11 END ELSE CASE WHEN ([ADS].[Feature_78] <= 2.043837547302246) THEN 13 ELSE 14 END END END AS node_id_2 
FROM [FourClass_100] AS [ADS]), 
[DT_node_data_27] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Estimator] AS [Estimator] 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 96 AS count, 3 AS depth, 2 AS parent_id, 1.0141174797685344 AS [Estimator] UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 23 AS count, 3 AS depth, 2 AS parent_id, -0.25020565709949205 AS [Estimator] UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 96 AS count, 3 AS depth, 5 AS parent_id, -0.40470704220840314 AS [Estimator] UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 43 AS count, 3 AS depth, 5 AS parent_id, 0.7722052483603264 AS [Estimator] UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 11 AS count, 3 AS depth, 9 AS parent_id, 1.7704960794082616 AS [Estimator] UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 224 AS count, 3 AS depth, 9 AS parent_id, 0.009374346716175585 AS [Estimator] UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 305 AS count, 3 AS depth, 12 AS parent_id, -0.478985463919559 AS [Estimator] UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 3 AS depth, 12 AS parent_id, 2.9692825606231983 AS [Estimator]) AS [Values]), 
[DT_Output_27] AS 
(SELECT [DT_node_lookup_27].[KEY] AS [KEY], [DT_node_lookup_27].node_id_2 AS node_id_2, [DT_node_data_27].node_id AS node_id, [DT_node_data_27].feature AS feature, [DT_node_data_27].threshold AS threshold, [DT_node_data_27].count AS count, [DT_node_data_27].depth AS depth, [DT_node_data_27].parent_id AS parent_id, [DT_node_data_27].[Estimator] AS [Estimator] 
FROM [DT_node_lookup_27] LEFT OUTER JOIN [DT_node_data_27] ON [DT_node_lookup_27].node_id_2 = [DT_node_data_27].node_id), 
[GB_Tree_6_3] AS 
(SELECT [DT_Output_27].[KEY] AS [KEY], 0.0 AS [Score_0], 0.0 AS [Score_1], 0.0 AS [Score_2], [DT_Output_27].[Estimator] AS [Score_3] 
FROM [DT_Output_27]), 
[DT_node_lookup_28] AS 
(SELECT [ADS].[KEY] AS [KEY], CASE WHEN ([ADS].[Feature_8] <= -1.4788397550582886) THEN CASE WHEN ([ADS].[Feature_52] <= -1.0332460403442383) THEN CASE WHEN ([ADS].[Feature_62] <= 4.859019756317139) THEN 3 ELSE 4 END ELSE CASE WHEN ([ADS].[Feature_42] <= -1.028087854385376) THEN 6 ELSE 7 END END ELSE CASE WHEN ([ADS].[Feature_56] <= -1.108477234840393) THEN CASE WHEN ([ADS].[Feature_68] <= 2.3654236793518066) THEN 10 ELSE 11 END ELSE CASE WHEN ([ADS].[Feature_24] <= -4.205480575561523) THEN 13 ELSE 14 END END END AS node_id_2 
FROM [FourClass_100] AS [ADS]), 
[DT_node_data_28] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Estimator] AS [Estimator] 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 104 AS count, 3 AS depth, 2 AS parent_id, -0.4362681568355227 AS [Estimator] UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 21 AS count, 3 AS depth, 2 AS parent_id, 0.9092783322600541 AS [Estimator] UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 74 AS count, 3 AS depth, 5 AS parent_id, 0.1114709064166543 AS [Estimator] UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 91 AS count, 3 AS depth, 5 AS parent_id, 1.1407575122194225 AS [Estimator] UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 121 AS count, 3 AS depth, 9 AS parent_id, 0.5232500622085413 AS [Estimator] UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 52 AS count, 3 AS depth, 9 AS parent_id, -0.5662534356225766 AS [Estimator] UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 50 AS count, 3 AS depth, 12 AS parent_id, 0.348677961881484 AS [Estimator] UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 287 AS count, 3 AS depth, 12 AS parent_id, -0.6134501908660651 AS [Estimator]) AS [Values]), 
[DT_Output_28] AS 
(SELECT [DT_node_lookup_28].[KEY] AS [KEY], [DT_node_lookup_28].node_id_2 AS node_id_2, [DT_node_data_28].node_id AS node_id, [DT_node_data_28].feature AS feature, [DT_node_data_28].threshold AS threshold, [DT_node_data_28].count AS count, [DT_node_data_28].depth AS depth, [DT_node_data_28].parent_id AS parent_id, [DT_node_data_28].[Estimator] AS [Estimator] 
FROM [DT_node_lookup_28] LEFT OUTER JOIN [DT_node_data_28] ON [DT_node_lookup_28].node_id_2 = [DT_node_data_28].node_id), 
[GB_Tree_7_0] AS 
(SELECT [DT_Output_28].[KEY] AS [KEY], [DT_Output_28].[Estimator] AS [Score_0], 0.0 AS [Score_1], 0.0 AS [Score_2], 0.0 AS [Score_3] 
FROM [DT_Output_28]), 
[DT_node_lookup_29] AS 
(SELECT [ADS].[KEY] AS [KEY], CASE WHEN ([ADS].[Feature_64] <= -1.0288598537445068) THEN CASE WHEN ([ADS].[Feature_13] <= 0.6647941470146179) THEN CASE WHEN ([ADS].[Feature_42] <= -4.898281097412109) THEN 3 ELSE 4 END ELSE CASE WHEN ([ADS].[Feature_27] <= -1.5438852310180664) THEN 6 ELSE 7 END END ELSE CASE WHEN ([ADS].[Feature_43] <= 1.717225432395935) THEN CASE WHEN ([ADS].[Feature_74] <= -8.870262145996094) THEN 10 ELSE 11 END ELSE CASE WHEN ([ADS].[Feature_60] <= -1.0804405212402344) THEN 13 ELSE 14 END END END AS node_id_2 
FROM [FourClass_100] AS [ADS]), 
[DT_node_data_29] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Estimator] AS [Estimator] 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 24 AS count, 3 AS depth, 2 AS parent_id, 1.2281559757866702 AS [Estimator] UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 152 AS count, 3 AS depth, 2 AS parent_id, -0.308910901085278 AS [Estimator] UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 63 AS count, 3 AS depth, 5 AS parent_id, -0.09284486053356182 AS [Estimator] UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 99 AS count, 3 AS depth, 5 AS parent_id, 1.0933246219943948 AS [Estimator] UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS count, 3 AS depth, 9 AS parent_id, 1.8798743133870015 AS [Estimator] UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 314 AS count, 3 AS depth, 9 AS parent_id, -0.5141002647113027 AS [Estimator] UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 15 AS count, 3 AS depth, 12 AS parent_id, 1.521720664441315 AS [Estimator] UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 128 AS count, 3 AS depth, 12 AS parent_id, 0.06330658628211205 AS [Estimator]) AS [Values]), 
[DT_Output_29] AS 
(SELECT [DT_node_lookup_29].[KEY] AS [KEY], [DT_node_lookup_29].node_id_2 AS node_id_2, [DT_node_data_29].node_id AS node_id, [DT_node_data_29].feature AS feature, [DT_node_data_29].threshold AS threshold, [DT_node_data_29].count AS count, [DT_node_data_29].depth AS depth, [DT_node_data_29].parent_id AS parent_id, [DT_node_data_29].[Estimator] AS [Estimator] 
FROM [DT_node_lookup_29] LEFT OUTER JOIN [DT_node_data_29] ON [DT_node_lookup_29].node_id_2 = [DT_node_data_29].node_id), 
[GB_Tree_7_1] AS 
(SELECT [DT_Output_29].[KEY] AS [KEY], 0.0 AS [Score_0], [DT_Output_29].[Estimator] AS [Score_1], 0.0 AS [Score_2], 0.0 AS [Score_3] 
FROM [DT_Output_29]), 
[DT_node_lookup_30] AS 
(SELECT [ADS].[KEY] AS [KEY], CASE WHEN ([ADS].[Feature_38] <= 3.53334379196167) THEN CASE WHEN ([ADS].[Feature_64] <= 3.4220011234283447) THEN CASE WHEN ([ADS].[Feature_52] <= -6.096066474914551) THEN 3 ELSE 4 END ELSE CASE WHEN ([ADS].[Feature_53] <= 2.6961936950683594) THEN 6 ELSE 7 END END ELSE CASE WHEN ([ADS].[Feature_34] <= -4.651756763458252) THEN CASE WHEN ([ADS].[Feature_32] <= -1.4433796405792236) THEN 10 ELSE 11 END ELSE CASE WHEN ([ADS].[Feature_40] <= -3.8494510650634766) THEN 13 ELSE 14 END END END AS node_id_2 
FROM [FourClass_100] AS [ADS]), 
[DT_node_data_30] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Estimator] AS [Estimator] 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 39 AS count, 3 AS depth, 2 AS parent_id, 0.6632549116769263 AS [Estimator] UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 486 AS count, 3 AS depth, 2 AS parent_id, -0.3558795054572591 AS [Estimator] UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 81 AS count, 3 AS depth, 5 AS parent_id, -0.03567211242163405 AS [Estimator] UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 47 AS count, 3 AS depth, 5 AS parent_id, 1.1584666645501018 AS [Estimator] UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 3 AS depth, 9 AS parent_id, -0.9852934749723309 AS [Estimator] UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 23 AS count, 3 AS depth, 9 AS parent_id, 1.7663261209653378 AS [Estimator] UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 23 AS count, 3 AS depth, 12 AS parent_id, 1.2145488680060543 AS [Estimator] UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 98 AS count, 3 AS depth, 12 AS parent_id, -0.004161478985287084 AS [Estimator]) AS [Values]), 
[DT_Output_30] AS 
(SELECT [DT_node_lookup_30].[KEY] AS [KEY], [DT_node_lookup_30].node_id_2 AS node_id_2, [DT_node_data_30].node_id AS node_id, [DT_node_data_30].feature AS feature, [DT_node_data_30].threshold AS threshold, [DT_node_data_30].count AS count, [DT_node_data_30].depth AS depth, [DT_node_data_30].parent_id AS parent_id, [DT_node_data_30].[Estimator] AS [Estimator] 
FROM [DT_node_lookup_30] LEFT OUTER JOIN [DT_node_data_30] ON [DT_node_lookup_30].node_id_2 = [DT_node_data_30].node_id), 
[GB_Tree_7_2] AS 
(SELECT [DT_Output_30].[KEY] AS [KEY], 0.0 AS [Score_0], 0.0 AS [Score_1], [DT_Output_30].[Estimator] AS [Score_2], 0.0 AS [Score_3] 
FROM [DT_Output_30]), 
[DT_node_lookup_31] AS 
(SELECT [ADS].[KEY] AS [KEY], CASE WHEN ([ADS].[Feature_68] <= -1.4168505668640137) THEN CASE WHEN ([ADS].[Feature_24] <= -8.897951126098633) THEN CASE WHEN ([ADS].[Feature_94] <= -0.3441201150417328) THEN 3 ELSE 4 END ELSE CASE WHEN ([ADS].[Feature_50] <= -5.64012336730957) THEN 6 ELSE 7 END END ELSE CASE WHEN ([ADS].[Feature_38] <= -3.7920165061950684) THEN CASE WHEN ([ADS].[Feature_91] <= -1.3189632892608643) THEN 10 ELSE 11 END ELSE CASE WHEN ([ADS].[Feature_17] <= 6.538946151733398) THEN 13 ELSE 14 END END END AS node_id_2 
FROM [FourClass_100] AS [ADS]), 
[DT_node_data_31] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Estimator] AS [Estimator] 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 3 AS depth, 2 AS parent_id, -0.9198534405432452 AS [Estimator] UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 8 AS count, 3 AS depth, 2 AS parent_id, 1.6794713956110274 AS [Estimator] UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 29 AS count, 3 AS depth, 5 AS parent_id, 0.5371248444645416 AS [Estimator] UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 295 AS count, 3 AS depth, 5 AS parent_id, -0.5059556650144438 AS [Estimator] UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 36 AS count, 3 AS depth, 9 AS parent_id, 1.4439566584291743 AS [Estimator] UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 44 AS count, 3 AS depth, 9 AS parent_id, 0.41921564388845695 AS [Estimator] UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 361 AS count, 3 AS depth, 12 AS parent_id, -0.01733218983525817 AS [Estimator] UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 24 AS count, 3 AS depth, 12 AS parent_id, 1.2276527159460997 AS [Estimator]) AS [Values]), 
[DT_Output_31] AS 
(SELECT [DT_node_lookup_31].[KEY] AS [KEY], [DT_node_lookup_31].node_id_2 AS node_id_2, [DT_node_data_31].node_id AS node_id, [DT_node_data_31].feature AS feature, [DT_node_data_31].threshold AS threshold, [DT_node_data_31].count AS count, [DT_node_data_31].depth AS depth, [DT_node_data_31].parent_id AS parent_id, [DT_node_data_31].[Estimator] AS [Estimator] 
FROM [DT_node_lookup_31] LEFT OUTER JOIN [DT_node_data_31] ON [DT_node_lookup_31].node_id_2 = [DT_node_data_31].node_id), 
[GB_Tree_7_3] AS 
(SELECT [DT_Output_31].[KEY] AS [KEY], 0.0 AS [Score_0], 0.0 AS [Score_1], 0.0 AS [Score_2], [DT_Output_31].[Estimator] AS [Score_3] 
FROM [DT_Output_31]), 
[DT_node_lookup_32] AS 
(SELECT [ADS].[KEY] AS [KEY], CASE WHEN ([ADS].[Feature_34] <= -1.8280695676803589) THEN CASE WHEN ([ADS].[Feature_56] <= -2.898538112640381) THEN CASE WHEN ([ADS].[Feature_57] <= -1.7538964748382568) THEN 3 ELSE 4 END ELSE CASE WHEN ([ADS].[Feature_72] <= -1.552283525466919) THEN 6 ELSE 7 END END ELSE CASE WHEN ([ADS].[Feature_8] <= -3.421581745147705) THEN CASE WHEN ([ADS].[Feature_48] <= -1.0257000923156738) THEN 10 ELSE 11 END ELSE CASE WHEN ([ADS].[Feature_40] <= -0.8684566020965576) THEN 13 ELSE 14 END END END AS node_id_2 
FROM [FourClass_100] AS [ADS]), 
[DT_node_data_32] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Estimator] AS [Estimator] 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 12 AS count, 3 AS depth, 2 AS parent_id, 1.6286073286337621 AS [Estimator] UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 45 AS count, 3 AS depth, 2 AS parent_id, -0.19481618619803087 AS [Estimator] UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS count, 3 AS depth, 5 AS parent_id, 1.2201397770433582 AS [Estimator] UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 204 AS count, 3 AS depth, 5 AS parent_id, -0.7006058321900406 AS [Estimator] UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 55 AS count, 3 AS depth, 9 AS parent_id, 1.3251004748683666 AS [Estimator] UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 64 AS count, 3 AS depth, 9 AS parent_id, 0.10781312241633065 AS [Estimator] UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 195 AS count, 3 AS depth, 12 AS parent_id, -0.36547504903552075 AS [Estimator] UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 220 AS count, 3 AS depth, 12 AS parent_id, 0.27252938872370147 AS [Estimator]) AS [Values]), 
[DT_Output_32] AS 
(SELECT [DT_node_lookup_32].[KEY] AS [KEY], [DT_node_lookup_32].node_id_2 AS node_id_2, [DT_node_data_32].node_id AS node_id, [DT_node_data_32].feature AS feature, [DT_node_data_32].threshold AS threshold, [DT_node_data_32].count AS count, [DT_node_data_32].depth AS depth, [DT_node_data_32].parent_id AS parent_id, [DT_node_data_32].[Estimator] AS [Estimator] 
FROM [DT_node_lookup_32] LEFT OUTER JOIN [DT_node_data_32] ON [DT_node_lookup_32].node_id_2 = [DT_node_data_32].node_id), 
[GB_Tree_8_0] AS 
(SELECT [DT_Output_32].[KEY] AS [KEY], [DT_Output_32].[Estimator] AS [Score_0], 0.0 AS [Score_1], 0.0 AS [Score_2], 0.0 AS [Score_3] 
FROM [DT_Output_32]), 
[DT_node_lookup_33] AS 
(SELECT [ADS].[KEY] AS [KEY], CASE WHEN ([ADS].[Feature_43] <= 1.409960389137268) THEN CASE WHEN ([ADS].[Feature_64] <= -1.0314191579818726) THEN CASE WHEN ([ADS].[Feature_27] <= 2.691628932952881) THEN 3 ELSE 4 END ELSE CASE WHEN ([ADS].[Feature_24] <= 4.04573917388916) THEN 6 ELSE 7 END END ELSE CASE WHEN ([ADS].[Feature_92] <= 1.76417875289917) THEN CASE WHEN ([ADS].[Feature_47] <= -1.218541145324707) THEN 10 ELSE 11 END ELSE CASE WHEN ([ADS].[Feature_13] <= 2.54156494140625) THEN 13 ELSE 14 END END END AS node_id_2 
FROM [FourClass_100] AS [ADS]), 
[DT_node_data_33] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Estimator] AS [Estimator] 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 156 AS count, 3 AS depth, 2 AS parent_id, -0.0962617518129227 AS [Estimator] UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 44 AS count, 3 AS depth, 2 AS parent_id, 0.89416143097221 AS [Estimator] UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 257 AS count, 3 AS depth, 5 AS parent_id, -0.6046192582782774 AS [Estimator] UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 46 AS count, 3 AS depth, 5 AS parent_id, 0.2861013143086525 AS [Estimator] UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 65 AS count, 3 AS depth, 9 AS parent_id, 1.1922305541784224 AS [Estimator] UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 134 AS count, 3 AS depth, 9 AS parent_id, 0.25263785933042215 AS [Estimator] UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 71 AS count, 3 AS depth, 12 AS parent_id, -0.7084940598595475 AS [Estimator] UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 27 AS count, 3 AS depth, 12 AS parent_id, 0.6361653545047415 AS [Estimator]) AS [Values]), 
[DT_Output_33] AS 
(SELECT [DT_node_lookup_33].[KEY] AS [KEY], [DT_node_lookup_33].node_id_2 AS node_id_2, [DT_node_data_33].node_id AS node_id, [DT_node_data_33].feature AS feature, [DT_node_data_33].threshold AS threshold, [DT_node_data_33].count AS count, [DT_node_data_33].depth AS depth, [DT_node_data_33].parent_id AS parent_id, [DT_node_data_33].[Estimator] AS [Estimator] 
FROM [DT_node_lookup_33] LEFT OUTER JOIN [DT_node_data_33] ON [DT_node_lookup_33].node_id_2 = [DT_node_data_33].node_id), 
[GB_Tree_8_1] AS 
(SELECT [DT_Output_33].[KEY] AS [KEY], 0.0 AS [Score_0], [DT_Output_33].[Estimator] AS [Score_1], 0.0 AS [Score_2], 0.0 AS [Score_3] 
FROM [DT_Output_33]), 
[DT_node_lookup_34] AS 
(SELECT [ADS].[KEY] AS [KEY], CASE WHEN ([ADS].[Feature_66] <= 0.5855575799942017) THEN CASE WHEN ([ADS].[Feature_51] <= -3.1527018547058105) THEN CASE WHEN ([ADS].[Feature_56] <= 1.5149550437927246) THEN 3 ELSE 4 END ELSE CASE WHEN ([ADS].[Feature_90] <= -38.44288635253906) THEN 6 ELSE 7 END END ELSE CASE WHEN ([ADS].[Feature_86] <= -4.026129722595215) THEN CASE WHEN ([ADS].[Feature_99] <= -2.2319118976593018) THEN 10 ELSE 11 END ELSE CASE WHEN ([ADS].[Feature_13] <= 0.5673550367355347) THEN 13 ELSE 14 END END END AS node_id_2 
FROM [FourClass_100] AS [ADS]), 
[DT_node_data_34] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Estimator] AS [Estimator] 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 83 AS count, 3 AS depth, 2 AS parent_id, -0.1548304653525664 AS [Estimator] UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 36 AS count, 3 AS depth, 2 AS parent_id, 1.0383051334155586 AS [Estimator] UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 3 AS depth, 5 AS parent_id, 2.2255114984347912 AS [Estimator] UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 336 AS count, 3 AS depth, 5 AS parent_id, -0.4154214678001794 AS [Estimator] UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 19 AS count, 3 AS depth, 9 AS parent_id, -0.009628430019345092 AS [Estimator] UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 33 AS count, 3 AS depth, 9 AS parent_id, 1.7169636475016297 AS [Estimator] UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 145 AS count, 3 AS depth, 12 AS parent_id, 0.547215990906968 AS [Estimator] UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 145 AS count, 3 AS depth, 12 AS parent_id, -0.3661988329368942 AS [Estimator]) AS [Values]), 
[DT_Output_34] AS 
(SELECT [DT_node_lookup_34].[KEY] AS [KEY], [DT_node_lookup_34].node_id_2 AS node_id_2, [DT_node_data_34].node_id AS node_id, [DT_node_data_34].feature AS feature, [DT_node_data_34].threshold AS threshold, [DT_node_data_34].count AS count, [DT_node_data_34].depth AS depth, [DT_node_data_34].parent_id AS parent_id, [DT_node_data_34].[Estimator] AS [Estimator] 
FROM [DT_node_lookup_34] LEFT OUTER JOIN [DT_node_data_34] ON [DT_node_lookup_34].node_id_2 = [DT_node_data_34].node_id), 
[GB_Tree_8_2] AS 
(SELECT [DT_Output_34].[KEY] AS [KEY], 0.0 AS [Score_0], 0.0 AS [Score_1], [DT_Output_34].[Estimator] AS [Score_2], 0.0 AS [Score_3] 
FROM [DT_Output_34]), 
[DT_node_lookup_35] AS 
(SELECT [ADS].[KEY] AS [KEY], CASE WHEN ([ADS].[Feature_84] <= -1.8281559944152832) THEN CASE WHEN ([ADS].[Feature_93] <= 6.850869178771973) THEN CASE WHEN ([ADS].[Feature_57] <= 6.7833709716796875) THEN 3 ELSE 4 END ELSE CASE WHEN ([ADS].[Feature_14] <= -0.8424398899078369) THEN 6 ELSE 7 END END ELSE CASE WHEN ([ADS].[Feature_13] <= -0.37313807010650635) THEN CASE WHEN ([ADS].[Feature_67] <= -1.1223492622375488) THEN 10 ELSE 11 END ELSE CASE WHEN ([ADS].[Feature_64] <= 1.0290322303771973) THEN 13 ELSE 14 END END END AS node_id_2 
FROM [FourClass_100] AS [ADS]), 
[DT_node_data_35] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Estimator] AS [Estimator] 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 154 AS count, 3 AS depth, 2 AS parent_id, -0.11337514175171624 AS [Estimator] UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 12 AS count, 3 AS depth, 2 AS parent_id, 1.6418849443330463 AS [Estimator] UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 18 AS count, 3 AS depth, 5 AS parent_id, -0.6216158955421022 AS [Estimator] UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 74 AS count, 3 AS depth, 5 AS parent_id, 1.1584294123299848 AS [Estimator] UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 36 AS count, 3 AS depth, 9 AS parent_id, 0.3896823512450519 AS [Estimator] UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 199 AS count, 3 AS depth, 9 AS parent_id, -0.6562439781948509 AS [Estimator] UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 201 AS count, 3 AS depth, 12 AS parent_id, -0.24240426972820187 AS [Estimator] UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 106 AS count, 3 AS depth, 12 AS parent_id, 0.5349775076754046 AS [Estimator]) AS [Values]), 
[DT_Output_35] AS 
(SELECT [DT_node_lookup_35].[KEY] AS [KEY], [DT_node_lookup_35].node_id_2 AS node_id_2, [DT_node_data_35].node_id AS node_id, [DT_node_data_35].feature AS feature, [DT_node_data_35].threshold AS threshold, [DT_node_data_35].count AS count, [DT_node_data_35].depth AS depth, [DT_node_data_35].parent_id AS parent_id, [DT_node_data_35].[Estimator] AS [Estimator] 
FROM [DT_node_lookup_35] LEFT OUTER JOIN [DT_node_data_35] ON [DT_node_lookup_35].node_id_2 = [DT_node_data_35].node_id), 
[GB_Tree_8_3] AS 
(SELECT [DT_Output_35].[KEY] AS [KEY], 0.0 AS [Score_0], 0.0 AS [Score_1], 0.0 AS [Score_2], [DT_Output_35].[Estimator] AS [Score_3] 
FROM [DT_Output_35]), 
[DT_node_lookup_36] AS 
(SELECT [ADS].[KEY] AS [KEY], CASE WHEN ([ADS].[Feature_68] <= -1.8016636371612549) THEN CASE WHEN ([ADS].[Feature_47] <= -2.9662954807281494) THEN CASE WHEN ([ADS].[Feature_65] <= 1.6007452011108398) THEN 3 ELSE 4 END ELSE CASE WHEN ([ADS].[Feature_53] <= 0.7609652876853943) THEN 6 ELSE 7 END END ELSE CASE WHEN ([ADS].[Feature_64] <= -3.1246554851531982) THEN CASE WHEN ([ADS].[Feature_39] <= -0.8778992891311646) THEN 10 ELSE 11 END ELSE CASE WHEN ([ADS].[Feature_47] <= 9.56212043762207) THEN 13 ELSE 14 END END END AS node_id_2 
FROM [FourClass_100] AS [ADS]), 
[DT_node_data_36] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Estimator] AS [Estimator] 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 60 AS count, 3 AS depth, 2 AS parent_id, -0.7092328585742997 AS [Estimator] UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 3 AS depth, 2 AS parent_id, 2.0464262981640404 AS [Estimator] UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 132 AS count, 3 AS depth, 5 AS parent_id, 0.8937940285938196 AS [Estimator] UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 106 AS count, 3 AS depth, 5 AS parent_id, -0.00453213295143653 AS [Estimator] UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 49 AS count, 3 AS depth, 9 AS parent_id, -0.45936615876490855 AS [Estimator] UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 70 AS count, 3 AS depth, 9 AS parent_id, 0.8409212957881131 AS [Estimator] UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 377 AS count, 3 AS depth, 12 AS parent_id, -0.45323632456187557 AS [Estimator] UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS count, 3 AS depth, 12 AS parent_id, 2.237265309753806 AS [Estimator]) AS [Values]), 
[DT_Output_36] AS 
(SELECT [DT_node_lookup_36].[KEY] AS [KEY], [DT_node_lookup_36].node_id_2 AS node_id_2, [DT_node_data_36].node_id AS node_id, [DT_node_data_36].feature AS feature, [DT_node_data_36].threshold AS threshold, [DT_node_data_36].count AS count, [DT_node_data_36].depth AS depth, [DT_node_data_36].parent_id AS parent_id, [DT_node_data_36].[Estimator] AS [Estimator] 
FROM [DT_node_lookup_36] LEFT OUTER JOIN [DT_node_data_36] ON [DT_node_lookup_36].node_id_2 = [DT_node_data_36].node_id), 
[GB_Tree_9_0] AS 
(SELECT [DT_Output_36].[KEY] AS [KEY], [DT_Output_36].[Estimator] AS [Score_0], 0.0 AS [Score_1], 0.0 AS [Score_2], 0.0 AS [Score_3] 
FROM [DT_Output_36]), 
[DT_node_lookup_37] AS 
(SELECT [ADS].[KEY] AS [KEY], CASE WHEN ([ADS].[Feature_40] <= 0.9660218954086304) THEN CASE WHEN ([ADS].[Feature_56] <= -1.8525891304016113) THEN CASE WHEN ([ADS].[Feature_59] <= 1.419520378112793) THEN 3 ELSE 4 END ELSE CASE WHEN ([ADS].[Feature_52] <= 2.0727405548095703) THEN 6 ELSE 7 END END ELSE CASE WHEN ([ADS].[Feature_92] <= -1.9186772108078003) THEN CASE WHEN ([ADS].[Feature_60] <= -1.8348275423049927) THEN 10 ELSE 11 END ELSE CASE WHEN ([ADS].[Feature_81] <= -1.6723676919937134) THEN 13 ELSE 14 END END END AS node_id_2 
FROM [FourClass_100] AS [ADS]), 
[DT_node_data_37] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Estimator] AS [Estimator] 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 130 AS count, 3 AS depth, 2 AS parent_id, -0.471889445631755 AS [Estimator] UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 13 AS count, 3 AS depth, 2 AS parent_id, 1.326772454774941 AS [Estimator] UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 250 AS count, 3 AS depth, 5 AS parent_id, 0.14492050001664705 AS [Estimator] UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 94 AS count, 3 AS depth, 5 AS parent_id, 0.9086669496374197 AS [Estimator] UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS count, 3 AS depth, 9 AS parent_id, 2.358500582174962 AS [Estimator] UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 105 AS count, 3 AS depth, 9 AS parent_id, -0.02154224797894598 AS [Estimator] UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS count, 3 AS depth, 12 AS parent_id, 1.4547032255433998 AS [Estimator] UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 199 AS count, 3 AS depth, 12 AS parent_id, -0.6415553759477545 AS [Estimator]) AS [Values]), 
[DT_Output_37] AS 
(SELECT [DT_node_lookup_37].[KEY] AS [KEY], [DT_node_lookup_37].node_id_2 AS node_id_2, [DT_node_data_37].node_id AS node_id, [DT_node_data_37].feature AS feature, [DT_node_data_37].threshold AS threshold, [DT_node_data_37].count AS count, [DT_node_data_37].depth AS depth, [DT_node_data_37].parent_id AS parent_id, [DT_node_data_37].[Estimator] AS [Estimator] 
FROM [DT_node_lookup_37] LEFT OUTER JOIN [DT_node_data_37] ON [DT_node_lookup_37].node_id_2 = [DT_node_data_37].node_id), 
[GB_Tree_9_1] AS 
(SELECT [DT_Output_37].[KEY] AS [KEY], 0.0 AS [Score_0], [DT_Output_37].[Estimator] AS [Score_1], 0.0 AS [Score_2], 0.0 AS [Score_3] 
FROM [DT_Output_37]), 
[DT_node_lookup_38] AS 
(SELECT [ADS].[KEY] AS [KEY], CASE WHEN ([ADS].[Feature_64] <= -0.05070287734270096) THEN CASE WHEN ([ADS].[Feature_15] <= -3.00559139251709) THEN CASE WHEN ([ADS].[Feature_86] <= -0.4483591914176941) THEN 3 ELSE 4 END ELSE CASE WHEN ([ADS].[Feature_38] <= 3.4219565391540527) THEN 6 ELSE 7 END END ELSE CASE WHEN ([ADS].[Feature_87] <= -2.0301127433776855) THEN CASE WHEN ([ADS].[Feature_51] <= -0.10742463171482086) THEN 10 ELSE 11 END ELSE CASE WHEN ([ADS].[Feature_24] <= 0.9210751056671143) THEN 13 ELSE 14 END END END AS node_id_2 
FROM [FourClass_100] AS [ADS]), 
[DT_node_data_38] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Estimator] AS [Estimator] 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 40 AS count, 3 AS depth, 2 AS parent_id, 0.900054286943627 AS [Estimator] UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 57 AS count, 3 AS depth, 2 AS parent_id, -0.29048211274417224 AS [Estimator] UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 254 AS count, 3 AS depth, 5 AS parent_id, -0.5896211685191636 AS [Estimator] UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 62 AS count, 3 AS depth, 5 AS parent_id, 0.2127724770105171 AS [Estimator] UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 61 AS count, 3 AS depth, 9 AS parent_id, 1.3708815748732015 AS [Estimator] UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 42 AS count, 3 AS depth, 9 AS parent_id, 0.06424232726759085 AS [Estimator] UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 171 AS count, 3 AS depth, 12 AS parent_id, -0.317686041925255 AS [Estimator] UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 113 AS count, 3 AS depth, 12 AS parent_id, 0.41207228784095934 AS [Estimator]) AS [Values]), 
[DT_Output_38] AS 
(SELECT [DT_node_lookup_38].[KEY] AS [KEY], [DT_node_lookup_38].node_id_2 AS node_id_2, [DT_node_data_38].node_id AS node_id, [DT_node_data_38].feature AS feature, [DT_node_data_38].threshold AS threshold, [DT_node_data_38].count AS count, [DT_node_data_38].depth AS depth, [DT_node_data_38].parent_id AS parent_id, [DT_node_data_38].[Estimator] AS [Estimator] 
FROM [DT_node_lookup_38] LEFT OUTER JOIN [DT_node_data_38] ON [DT_node_lookup_38].node_id_2 = [DT_node_data_38].node_id), 
[GB_Tree_9_2] AS 
(SELECT [DT_Output_38].[KEY] AS [KEY], 0.0 AS [Score_0], 0.0 AS [Score_1], [DT_Output_38].[Estimator] AS [Score_2], 0.0 AS [Score_3] 
FROM [DT_Output_38]), 
[DT_node_lookup_39] AS 
(SELECT [ADS].[KEY] AS [KEY], CASE WHEN ([ADS].[Feature_9] <= 2.049044132232666) THEN CASE WHEN ([ADS].[Feature_25] <= -1.928680181503296) THEN CASE WHEN ([ADS].[Feature_38] <= -0.6269804239273071) THEN 3 ELSE 4 END ELSE CASE WHEN ([ADS].[Feature_14] <= -0.3597392141819) THEN 6 ELSE 7 END END ELSE CASE WHEN ([ADS].[Feature_46] <= -1.1472220420837402) THEN CASE WHEN ([ADS].[Feature_33] <= 1.8081482648849487) THEN 10 ELSE 11 END ELSE CASE WHEN ([ADS].[Feature_92] <= -8.715021133422852) THEN 13 ELSE 14 END END END AS node_id_2 
FROM [FourClass_100] AS [ADS]), 
[DT_node_data_39] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Estimator] AS [Estimator] 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 76 AS count, 3 AS depth, 2 AS parent_id, 1.1335245958747624 AS [Estimator] UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 105 AS count, 3 AS depth, 2 AS parent_id, 0.16342890854921438 AS [Estimator] UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 136 AS count, 3 AS depth, 5 AS parent_id, -0.58408416828482 AS [Estimator] UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 242 AS count, 3 AS depth, 5 AS parent_id, 0.20015678235149892 AS [Estimator] UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 98 AS count, 3 AS depth, 9 AS parent_id, -0.13208846055926876 AS [Estimator] UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS count, 3 AS depth, 9 AS parent_id, 2.505984835417142 AS [Estimator] UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 3 AS depth, 12 AS parent_id, 1.9038332168376224 AS [Estimator] UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 137 AS count, 3 AS depth, 12 AS parent_id, -0.7302183680078292 AS [Estimator]) AS [Values]), 
[DT_Output_39] AS 
(SELECT [DT_node_lookup_39].[KEY] AS [KEY], [DT_node_lookup_39].node_id_2 AS node_id_2, [DT_node_data_39].node_id AS node_id, [DT_node_data_39].feature AS feature, [DT_node_data_39].threshold AS threshold, [DT_node_data_39].count AS count, [DT_node_data_39].depth AS depth, [DT_node_data_39].parent_id AS parent_id, [DT_node_data_39].[Estimator] AS [Estimator] 
FROM [DT_node_lookup_39] LEFT OUTER JOIN [DT_node_data_39] ON [DT_node_lookup_39].node_id_2 = [DT_node_data_39].node_id), 
[GB_Tree_9_3] AS 
(SELECT [DT_Output_39].[KEY] AS [KEY], 0.0 AS [Score_0], 0.0 AS [Score_1], 0.0 AS [Score_2], [DT_Output_39].[Estimator] AS [Score_3] 
FROM [DT_Output_39]), 
[DT_node_lookup_40] AS 
(SELECT [ADS].[KEY] AS [KEY], CASE WHEN ([ADS].[Feature_17] <= -1.1568864583969116) THEN CASE WHEN ([ADS].[Feature_34] <= 3.506000518798828) THEN CASE WHEN ([ADS].[Feature_36] <= -5.321624755859375) THEN 3 ELSE 4 END ELSE CASE WHEN ([ADS].[Feature_74] <= 0.5357763171195984) THEN 6 ELSE 7 END END ELSE CASE WHEN ([ADS].[Feature_9] <= 2.049044132232666) THEN CASE WHEN ([ADS].[Feature_34] <= 5.871199607849121) THEN 10 ELSE 11 END ELSE CASE WHEN ([ADS].[Feature_87] <= -0.9973253011703491) THEN 13 ELSE 14 END END END AS node_id_2 
FROM [FourClass_100] AS [ADS]), 
[DT_node_data_40] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Estimator] AS [Estimator] 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 21 AS count, 3 AS depth, 2 AS parent_id, 1.3347988258708763 AS [Estimator] UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 217 AS count, 3 AS depth, 2 AS parent_id, -0.01100395179177347 AS [Estimator] UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 34 AS count, 3 AS depth, 5 AS parent_id, 1.2740234932261019 AS [Estimator] UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 19 AS count, 3 AS depth, 5 AS parent_id, 0.25705062768486686 AS [Estimator] UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 322 AS count, 3 AS depth, 9 AS parent_id, -0.5039745248683379 AS [Estimator] UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 28 AS count, 3 AS depth, 9 AS parent_id, 0.42894429113359067 AS [Estimator] UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 67 AS count, 3 AS depth, 12 AS parent_id, -0.4581286491732694 AS [Estimator] UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 92 AS count, 3 AS depth, 12 AS parent_id, 0.6346944707935224 AS [Estimator]) AS [Values]), 
[DT_Output_40] AS 
(SELECT [DT_node_lookup_40].[KEY] AS [KEY], [DT_node_lookup_40].node_id_2 AS node_id_2, [DT_node_data_40].node_id AS node_id, [DT_node_data_40].feature AS feature, [DT_node_data_40].threshold AS threshold, [DT_node_data_40].count AS count, [DT_node_data_40].depth AS depth, [DT_node_data_40].parent_id AS parent_id, [DT_node_data_40].[Estimator] AS [Estimator] 
FROM [DT_node_lookup_40] LEFT OUTER JOIN [DT_node_data_40] ON [DT_node_lookup_40].node_id_2 = [DT_node_data_40].node_id), 
[GB_Tree_10_0] AS 
(SELECT [DT_Output_40].[KEY] AS [KEY], [DT_Output_40].[Estimator] AS [Score_0], 0.0 AS [Score_1], 0.0 AS [Score_2], 0.0 AS [Score_3] 
FROM [DT_Output_40]), 
[DT_node_lookup_41] AS 
(SELECT [ADS].[KEY] AS [KEY], CASE WHEN ([ADS].[Feature_31] <= 0.8691813349723816) THEN CASE WHEN ([ADS].[Feature_2] <= 1.2432126998901367) THEN CASE WHEN ([ADS].[Feature_66] <= -8.811446189880371) THEN 3 ELSE 4 END ELSE CASE WHEN ([ADS].[Feature_42] <= 1.6553479433059692) THEN 6 ELSE 7 END END ELSE CASE WHEN ([ADS].[Feature_86] <= 1.9820897579193115) THEN CASE WHEN ([ADS].[Feature_87] <= 4.585669040679932) THEN 10 ELSE 11 END ELSE CASE WHEN ([ADS].[Feature_36] <= -3.4085183143615723) THEN 13 ELSE 14 END END END AS node_id_2 
FROM [FourClass_100] AS [ADS]), 
[DT_node_data_41] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Estimator] AS [Estimator] 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 9 AS count, 3 AS depth, 2 AS parent_id, 1.2381000813094691 AS [Estimator] UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 318 AS count, 3 AS depth, 2 AS parent_id, -0.4726194365229574 AS [Estimator] UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 115 AS count, 3 AS depth, 5 AS parent_id, 0.554607228678325 AS [Estimator] UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 62 AS count, 3 AS depth, 5 AS parent_id, -0.6547427399312454 AS [Estimator] UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 154 AS count, 3 AS depth, 9 AS parent_id, -0.2507005852853268 AS [Estimator] UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 38 AS count, 3 AS depth, 9 AS parent_id, 1.0726324836701577 AS [Estimator] UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 22 AS count, 3 AS depth, 12 AS parent_id, -0.3440569802248558 AS [Estimator] UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 82 AS count, 3 AS depth, 12 AS parent_id, 0.9450789603803782 AS [Estimator]) AS [Values]), 
[DT_Output_41] AS 
(SELECT [DT_node_lookup_41].[KEY] AS [KEY], [DT_node_lookup_41].node_id_2 AS node_id_2, [DT_node_data_41].node_id AS node_id, [DT_node_data_41].feature AS feature, [DT_node_data_41].threshold AS threshold, [DT_node_data_41].count AS count, [DT_node_data_41].depth AS depth, [DT_node_data_41].parent_id AS parent_id, [DT_node_data_41].[Estimator] AS [Estimator] 
FROM [DT_node_lookup_41] LEFT OUTER JOIN [DT_node_data_41] ON [DT_node_lookup_41].node_id_2 = [DT_node_data_41].node_id), 
[GB_Tree_10_1] AS 
(SELECT [DT_Output_41].[KEY] AS [KEY], 0.0 AS [Score_0], [DT_Output_41].[Estimator] AS [Score_1], 0.0 AS [Score_2], 0.0 AS [Score_3] 
FROM [DT_Output_41]), 
[DT_node_lookup_42] AS 
(SELECT [ADS].[KEY] AS [KEY], CASE WHEN ([ADS].[Feature_61] <= 1.94813871383667) THEN CASE WHEN ([ADS].[Feature_38] <= -3.5714943408966064) THEN CASE WHEN ([ADS].[Feature_86] <= -6.811575889587402) THEN 3 ELSE 4 END ELSE CASE WHEN ([ADS].[Feature_15] <= -0.4788416922092438) THEN 6 ELSE 7 END END ELSE CASE WHEN ([ADS].[Feature_91] <= -8.405571937561035) THEN CASE WHEN ([ADS].[Feature_43] <= 0.03846225142478943) THEN 10 ELSE 11 END ELSE CASE WHEN ([ADS].[Feature_49] <= -2.1444525718688965) THEN 13 ELSE 14 END END END AS node_id_2 
FROM [FourClass_100] AS [ADS]), 
[DT_node_data_42] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Estimator] AS [Estimator] 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS count, 3 AS depth, 2 AS parent_id, 1.1566848628747148 AS [Estimator] UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 92 AS count, 3 AS depth, 2 AS parent_id, -0.7015516729218791 AS [Estimator] UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 209 AS count, 3 AS depth, 5 AS parent_id, 0.5792577519854865 AS [Estimator] UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 260 AS count, 3 AS depth, 5 AS parent_id, -0.015535015450154082 AS [Estimator] UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 7 AS count, 3 AS depth, 9 AS parent_id, 1.6096917210533799 AS [Estimator] UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS count, 3 AS depth, 9 AS parent_id, -0.8979944050705264 AS [Estimator] UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS count, 3 AS depth, 12 AS parent_id, 1.4410139378755198 AS [Estimator] UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 218 AS count, 3 AS depth, 12 AS parent_id, -0.5510340445571192 AS [Estimator]) AS [Values]), 
[DT_Output_42] AS 
(SELECT [DT_node_lookup_42].[KEY] AS [KEY], [DT_node_lookup_42].node_id_2 AS node_id_2, [DT_node_data_42].node_id AS node_id, [DT_node_data_42].feature AS feature, [DT_node_data_42].threshold AS threshold, [DT_node_data_42].count AS count, [DT_node_data_42].depth AS depth, [DT_node_data_42].parent_id AS parent_id, [DT_node_data_42].[Estimator] AS [Estimator] 
FROM [DT_node_lookup_42] LEFT OUTER JOIN [DT_node_data_42] ON [DT_node_lookup_42].node_id_2 = [DT_node_data_42].node_id), 
[GB_Tree_10_2] AS 
(SELECT [DT_Output_42].[KEY] AS [KEY], 0.0 AS [Score_0], 0.0 AS [Score_1], [DT_Output_42].[Estimator] AS [Score_2], 0.0 AS [Score_3] 
FROM [DT_Output_42]), 
[DT_node_lookup_43] AS 
(SELECT [ADS].[KEY] AS [KEY], CASE WHEN ([ADS].[Feature_68] <= -1.4168505668640137) THEN CASE WHEN ([ADS].[Feature_86] <= -5.408907890319824) THEN CASE WHEN ([ADS].[Feature_17] <= 1.363714337348938) THEN 3 ELSE 4 END ELSE CASE WHEN ([ADS].[Feature_26] <= -9.523338317871094) THEN 6 ELSE 7 END END ELSE CASE WHEN ([ADS].[Feature_84] <= -0.7171556949615479) THEN CASE WHEN ([ADS].[Feature_16] <= -1.8138242959976196) THEN 10 ELSE 11 END ELSE CASE WHEN ([ADS].[Feature_2] <= -6.6858062744140625) THEN 13 ELSE 14 END END END AS node_id_2 
FROM [FourClass_100] AS [ADS]), 
[DT_node_data_43] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Estimator] AS [Estimator] 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 8 AS count, 3 AS depth, 2 AS parent_id, 1.8321782072195645 AS [Estimator] UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 18 AS count, 3 AS depth, 2 AS parent_id, 0.03704826463158615 AS [Estimator] UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 3 AS depth, 5 AS parent_id, 1.8083689172953126 AS [Estimator] UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 306 AS count, 3 AS depth, 5 AS parent_id, -0.4339771708406301 AS [Estimator] UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 58 AS count, 3 AS depth, 9 AS parent_id, 1.1479037977744648 AS [Estimator] UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 126 AS count, 3 AS depth, 9 AS parent_id, 0.21733501197253438 AS [Estimator] UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 15 AS count, 3 AS depth, 12 AS parent_id, 1.3936294733546457 AS [Estimator] UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 266 AS count, 3 AS depth, 12 AS parent_id, -0.16181269882597557 AS [Estimator]) AS [Values]), 
[DT_Output_43] AS 
(SELECT [DT_node_lookup_43].[KEY] AS [KEY], [DT_node_lookup_43].node_id_2 AS node_id_2, [DT_node_data_43].node_id AS node_id, [DT_node_data_43].feature AS feature, [DT_node_data_43].threshold AS threshold, [DT_node_data_43].count AS count, [DT_node_data_43].depth AS depth, [DT_node_data_43].parent_id AS parent_id, [DT_node_data_43].[Estimator] AS [Estimator] 
FROM [DT_node_lookup_43] LEFT OUTER JOIN [DT_node_data_43] ON [DT_node_lookup_43].node_id_2 = [DT_node_data_43].node_id), 
[GB_Tree_10_3] AS 
(SELECT [DT_Output_43].[KEY] AS [KEY], 0.0 AS [Score_0], 0.0 AS [Score_1], 0.0 AS [Score_2], [DT_Output_43].[Estimator] AS [Score_3] 
FROM [DT_Output_43]), 
[DT_node_lookup_44] AS 
(SELECT [ADS].[KEY] AS [KEY], CASE WHEN ([ADS].[Feature_17] <= -1.1568864583969116) THEN CASE WHEN ([ADS].[Feature_24] <= 1.7217328548431396) THEN CASE WHEN ([ADS].[Feature_74] <= -0.46433374285697937) THEN 3 ELSE 4 END ELSE CASE WHEN ([ADS].[Feature_8] <= -1.9535155296325684) THEN 6 ELSE 7 END END ELSE CASE WHEN ([ADS].[Feature_2] <= 0.7435014247894287) THEN CASE WHEN ([ADS].[Feature_86] <= -0.3987501263618469) THEN 10 ELSE 11 END ELSE CASE WHEN ([ADS].[Feature_47] <= 9.337397575378418) THEN 13 ELSE 14 END END END AS node_id_2 
FROM [FourClass_100] AS [ADS]), 
[DT_node_data_44] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Estimator] AS [Estimator] 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 92 AS count, 3 AS depth, 2 AS parent_id, 0.9704732229865253 AS [Estimator] UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 99 AS count, 3 AS depth, 2 AS parent_id, 0.0487589585059932 AS [Estimator] UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 25 AS count, 3 AS depth, 5 AS parent_id, 0.6202103314236485 AS [Estimator] UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 75 AS count, 3 AS depth, 5 AS parent_id, -0.6012055881018028 AS [Estimator] UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 150 AS count, 3 AS depth, 9 AS parent_id, -0.34429166259307387 AS [Estimator] UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 135 AS count, 3 AS depth, 9 AS parent_id, 0.44206661922635565 AS [Estimator] UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 219 AS count, 3 AS depth, 12 AS parent_id, -0.6179757871612773 AS [Estimator] UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS count, 3 AS depth, 12 AS parent_id, 1.3859205941992032 AS [Estimator]) AS [Values]), 
[DT_Output_44] AS 
(SELECT [DT_node_lookup_44].[KEY] AS [KEY], [DT_node_lookup_44].node_id_2 AS node_id_2, [DT_node_data_44].node_id AS node_id, [DT_node_data_44].feature AS feature, [DT_node_data_44].threshold AS threshold, [DT_node_data_44].count AS count, [DT_node_data_44].depth AS depth, [DT_node_data_44].parent_id AS parent_id, [DT_node_data_44].[Estimator] AS [Estimator] 
FROM [DT_node_lookup_44] LEFT OUTER JOIN [DT_node_data_44] ON [DT_node_lookup_44].node_id_2 = [DT_node_data_44].node_id), 
[GB_Tree_11_0] AS 
(SELECT [DT_Output_44].[KEY] AS [KEY], [DT_Output_44].[Estimator] AS [Score_0], 0.0 AS [Score_1], 0.0 AS [Score_2], 0.0 AS [Score_3] 
FROM [DT_Output_44]), 
[DT_node_lookup_45] AS 
(SELECT [ADS].[KEY] AS [KEY], CASE WHEN ([ADS].[Feature_55] <= 2.2732362747192383) THEN CASE WHEN ([ADS].[Feature_64] <= -1.7947351932525635) THEN CASE WHEN ([ADS].[Feature_23] <= -0.16440452635288239) THEN 3 ELSE 4 END ELSE CASE WHEN ([ADS].[Feature_40] <= -1.0883963108062744) THEN 6 ELSE 7 END END ELSE CASE WHEN ([ADS].[Feature_48] <= -2.401850938796997) THEN CASE WHEN ([ADS].[Feature_23] <= 1.2314183712005615) THEN 10 ELSE 11 END ELSE CASE WHEN ([ADS].[Feature_21] <= -5.706751823425293) THEN 13 ELSE 14 END END END AS node_id_2 
FROM [FourClass_100] AS [ADS]), 
[DT_node_data_45] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Estimator] AS [Estimator] 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 72 AS count, 3 AS depth, 2 AS parent_id, 1.0097905891595336 AS [Estimator] UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 102 AS count, 3 AS depth, 2 AS parent_id, 0.17504746260029155 AS [Estimator] UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 165 AS count, 3 AS depth, 5 AS parent_id, 0.28456855384235563 AS [Estimator] UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 220 AS count, 3 AS depth, 5 AS parent_id, -0.3631165113802592 AS [Estimator] UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 72 AS count, 3 AS depth, 9 AS parent_id, -0.13124544800478327 AS [Estimator] UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 8 AS count, 3 AS depth, 9 AS parent_id, 1.8712663514616126 AS [Estimator] UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 15 AS count, 3 AS depth, 12 AS parent_id, 0.47102673586406896 AS [Estimator] UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 146 AS count, 3 AS depth, 12 AS parent_id, -0.7603806763287421 AS [Estimator]) AS [Values]), 
[DT_Output_45] AS 
(SELECT [DT_node_lookup_45].[KEY] AS [KEY], [DT_node_lookup_45].node_id_2 AS node_id_2, [DT_node_data_45].node_id AS node_id, [DT_node_data_45].feature AS feature, [DT_node_data_45].threshold AS threshold, [DT_node_data_45].count AS count, [DT_node_data_45].depth AS depth, [DT_node_data_45].parent_id AS parent_id, [DT_node_data_45].[Estimator] AS [Estimator] 
FROM [DT_node_lookup_45] LEFT OUTER JOIN [DT_node_data_45] ON [DT_node_lookup_45].node_id_2 = [DT_node_data_45].node_id), 
[GB_Tree_11_1] AS 
(SELECT [DT_Output_45].[KEY] AS [KEY], 0.0 AS [Score_0], [DT_Output_45].[Estimator] AS [Score_1], 0.0 AS [Score_2], 0.0 AS [Score_3] 
FROM [DT_Output_45]), 
[DT_node_lookup_46] AS 
(SELECT [ADS].[KEY] AS [KEY], CASE WHEN ([ADS].[Feature_66] <= -0.45524707436561584) THEN CASE WHEN ([ADS].[Feature_87] <= 9.528886795043945) THEN CASE WHEN ([ADS].[Feature_76] <= -2.4822869300842285) THEN 3 ELSE 4 END ELSE CASE WHEN ([ADS].[Feature_87] <= 11.132509231567383) THEN 6 ELSE 7 END END ELSE CASE WHEN ([ADS].[Feature_13] <= 0.5673550367355347) THEN CASE WHEN ([ADS].[Feature_71] <= 1.0779786109924316) THEN 10 ELSE 11 END ELSE CASE WHEN ([ADS].[Feature_86] <= -6.711178779602051) THEN 13 ELSE 14 END END END AS node_id_2 
FROM [FourClass_100] AS [ADS]), 
[DT_node_data_46] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Estimator] AS [Estimator] 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 3 AS depth, 2 AS parent_id, 2.3368689008632737 AS [Estimator] UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 363 AS count, 3 AS depth, 2 AS parent_id, -0.31609788228090147 AS [Estimator] UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 3 AS depth, 5 AS parent_id, 2.3739164905452546 AS [Estimator] UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 5 AS parent_id, 1.7528958315121934 AS [Estimator] UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 137 AS count, 3 AS depth, 9 AS parent_id, 0.8761410573012312 AS [Estimator] UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 81 AS count, 3 AS depth, 9 AS parent_id, -0.07198877736646336 AS [Estimator] UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 8 AS count, 3 AS depth, 12 AS parent_id, 1.7170153000664914 AS [Estimator] UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 204 AS count, 3 AS depth, 12 AS parent_id, -0.29111431113329883 AS [Estimator]) AS [Values]), 
[DT_Output_46] AS 
(SELECT [DT_node_lookup_46].[KEY] AS [KEY], [DT_node_lookup_46].node_id_2 AS node_id_2, [DT_node_data_46].node_id AS node_id, [DT_node_data_46].feature AS feature, [DT_node_data_46].threshold AS threshold, [DT_node_data_46].count AS count, [DT_node_data_46].depth AS depth, [DT_node_data_46].parent_id AS parent_id, [DT_node_data_46].[Estimator] AS [Estimator] 
FROM [DT_node_lookup_46] LEFT OUTER JOIN [DT_node_data_46] ON [DT_node_lookup_46].node_id_2 = [DT_node_data_46].node_id), 
[GB_Tree_11_2] AS 
(SELECT [DT_Output_46].[KEY] AS [KEY], 0.0 AS [Score_0], 0.0 AS [Score_1], [DT_Output_46].[Estimator] AS [Score_2], 0.0 AS [Score_3] 
FROM [DT_Output_46]), 
[DT_node_lookup_47] AS 
(SELECT [ADS].[KEY] AS [KEY], CASE WHEN ([ADS].[Feature_38] <= 0.9559833407402039) THEN CASE WHEN ([ADS].[Feature_84] <= -5.5581793785095215) THEN CASE WHEN ([ADS].[Feature_45] <= -0.9907315969467163) THEN 3 ELSE 4 END ELSE CASE WHEN ([ADS].[Feature_8] <= -1.4552171230316162) THEN 6 ELSE 7 END END ELSE CASE WHEN ([ADS].[Feature_27] <= 3.753037214279175) THEN CASE WHEN ([ADS].[Feature_91] <= 8.390254020690918) THEN 10 ELSE 11 END ELSE CASE WHEN ([ADS].[Feature_93] <= 8.080963134765625) THEN 13 ELSE 14 END END END AS node_id_2 
FROM [FourClass_100] AS [ADS]), 
[DT_node_data_47] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Estimator] AS [Estimator] 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 7 AS count, 3 AS depth, 2 AS parent_id, -0.5653724084311252 AS [Estimator] UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 40 AS count, 3 AS depth, 2 AS parent_id, 1.2313554875447086 AS [Estimator] UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 149 AS count, 3 AS depth, 5 AS parent_id, -0.42041827078845617 AS [Estimator] UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 286 AS count, 3 AS depth, 5 AS parent_id, 0.30589333014540326 AS [Estimator] UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 263 AS count, 3 AS depth, 9 AS parent_id, -0.49782431096721474 AS [Estimator] UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS count, 3 AS depth, 9 AS parent_id, 1.6965023809048247 AS [Estimator] UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 40 AS count, 3 AS depth, 12 AS parent_id, 0.02429099506527964 AS [Estimator] UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 10 AS count, 3 AS depth, 12 AS parent_id, 1.8383030058233873 AS [Estimator]) AS [Values]), 
[DT_Output_47] AS 
(SELECT [DT_node_lookup_47].[KEY] AS [KEY], [DT_node_lookup_47].node_id_2 AS node_id_2, [DT_node_data_47].node_id AS node_id, [DT_node_data_47].feature AS feature, [DT_node_data_47].threshold AS threshold, [DT_node_data_47].count AS count, [DT_node_data_47].depth AS depth, [DT_node_data_47].parent_id AS parent_id, [DT_node_data_47].[Estimator] AS [Estimator] 
FROM [DT_node_lookup_47] LEFT OUTER JOIN [DT_node_data_47] ON [DT_node_lookup_47].node_id_2 = [DT_node_data_47].node_id), 
[GB_Tree_11_3] AS 
(SELECT [DT_Output_47].[KEY] AS [KEY], 0.0 AS [Score_0], 0.0 AS [Score_1], 0.0 AS [Score_2], [DT_Output_47].[Estimator] AS [Score_3] 
FROM [DT_Output_47]), 
[DT_node_lookup_48] AS 
(SELECT [ADS].[KEY] AS [KEY], CASE WHEN ([ADS].[Feature_34] <= -1.8280695676803589) THEN CASE WHEN ([ADS].[Feature_56] <= 0.5833497047424316) THEN CASE WHEN ([ADS].[Feature_68] <= -8.213031768798828) THEN 3 ELSE 4 END ELSE CASE WHEN ([ADS].[Feature_4] <= 2.2799856662750244) THEN 6 ELSE 7 END END ELSE CASE WHEN ([ADS].[Feature_8] <= 1.6596870422363281) THEN CASE WHEN ([ADS].[Feature_85] <= -0.8142966032028198) THEN 10 ELSE 11 END ELSE CASE WHEN ([ADS].[Feature_83] <= 2.1822476387023926) THEN 13 ELSE 14 END END END AS node_id_2 
FROM [FourClass_100] AS [ADS]), 
[DT_node_data_48] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Estimator] AS [Estimator] 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 6 AS count, 3 AS depth, 2 AS parent_id, 1.6758406855175043 AS [Estimator] UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 130 AS count, 3 AS depth, 2 AS parent_id, -0.1627316043893669 AS [Estimator] UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 129 AS count, 3 AS depth, 5 AS parent_id, -0.8657630098179194 AS [Estimator] UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 5 AS parent_id, 2.516392668156763 AS [Estimator] UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 148 AS count, 3 AS depth, 9 AS parent_id, -0.08007994787483562 AS [Estimator] UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 198 AS count, 3 AS depth, 9 AS parent_id, 0.6309418038337693 AS [Estimator] UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 184 AS count, 3 AS depth, 12 AS parent_id, -0.35268500762889565 AS [Estimator] UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS count, 3 AS depth, 12 AS parent_id, 2.310151652988916 AS [Estimator]) AS [Values]), 
[DT_Output_48] AS 
(SELECT [DT_node_lookup_48].[KEY] AS [KEY], [DT_node_lookup_48].node_id_2 AS node_id_2, [DT_node_data_48].node_id AS node_id, [DT_node_data_48].feature AS feature, [DT_node_data_48].threshold AS threshold, [DT_node_data_48].count AS count, [DT_node_data_48].depth AS depth, [DT_node_data_48].parent_id AS parent_id, [DT_node_data_48].[Estimator] AS [Estimator] 
FROM [DT_node_lookup_48] LEFT OUTER JOIN [DT_node_data_48] ON [DT_node_lookup_48].node_id_2 = [DT_node_data_48].node_id), 
[GB_Tree_12_0] AS 
(SELECT [DT_Output_48].[KEY] AS [KEY], [DT_Output_48].[Estimator] AS [Score_0], 0.0 AS [Score_1], 0.0 AS [Score_2], 0.0 AS [Score_3] 
FROM [DT_Output_48]), 
[DT_node_lookup_49] AS 
(SELECT [ADS].[KEY] AS [KEY], CASE WHEN ([ADS].[Feature_86] <= -3.5094876289367676) THEN CASE WHEN ([ADS].[Feature_25] <= -5.205615997314453) THEN CASE WHEN ([ADS].[Feature_31] <= -1.6663631200790405) THEN 3 ELSE 4 END ELSE CASE WHEN ([ADS].[Feature_36] <= 11.287904739379883) THEN 6 ELSE 7 END END ELSE CASE WHEN ([ADS].[Feature_50] <= 1.2128393650054932) THEN CASE WHEN ([ADS].[Feature_97] <= 1.7203712463378906) THEN 10 ELSE 11 END ELSE CASE WHEN ([ADS].[Feature_92] <= -0.15939928591251373) THEN 13 ELSE 14 END END END AS node_id_2 
FROM [FourClass_100] AS [ADS]), 
[DT_node_data_49] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Estimator] AS [Estimator] 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 7 AS count, 3 AS depth, 2 AS parent_id, -0.23714172255089955 AS [Estimator] UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 6 AS count, 3 AS depth, 2 AS parent_id, 1.7631893069918325 AS [Estimator] UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 138 AS count, 3 AS depth, 5 AS parent_id, -0.7232011862166337 AS [Estimator] UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 5 AS parent_id, 2.748866000082605 AS [Estimator] UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 384 AS count, 3 AS depth, 9 AS parent_id, -0.17528700372138684 AS [Estimator] UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 19 AS count, 3 AS depth, 9 AS parent_id, 1.3590096854548896 AS [Estimator] UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 142 AS count, 3 AS depth, 12 AS parent_id, 0.6854416241768289 AS [Estimator] UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 103 AS count, 3 AS depth, 12 AS parent_id, -0.05970163715957093 AS [Estimator]) AS [Values]), 
[DT_Output_49] AS 
(SELECT [DT_node_lookup_49].[KEY] AS [KEY], [DT_node_lookup_49].node_id_2 AS node_id_2, [DT_node_data_49].node_id AS node_id, [DT_node_data_49].feature AS feature, [DT_node_data_49].threshold AS threshold, [DT_node_data_49].count AS count, [DT_node_data_49].depth AS depth, [DT_node_data_49].parent_id AS parent_id, [DT_node_data_49].[Estimator] AS [Estimator] 
FROM [DT_node_lookup_49] LEFT OUTER JOIN [DT_node_data_49] ON [DT_node_lookup_49].node_id_2 = [DT_node_data_49].node_id), 
[GB_Tree_12_1] AS 
(SELECT [DT_Output_49].[KEY] AS [KEY], 0.0 AS [Score_0], [DT_Output_49].[Estimator] AS [Score_1], 0.0 AS [Score_2], 0.0 AS [Score_3] 
FROM [DT_Output_49]), 
[DT_node_lookup_50] AS 
(SELECT [ADS].[KEY] AS [KEY], CASE WHEN ([ADS].[Feature_61] <= -0.09108863025903702) THEN CASE WHEN ([ADS].[Feature_42] <= 3.315660238265991) THEN CASE WHEN ([ADS].[Feature_86] <= -5.494081497192383) THEN 3 ELSE 4 END ELSE CASE WHEN ([ADS].[Feature_34] <= 1.821950912475586) THEN 6 ELSE 7 END END ELSE CASE WHEN ([ADS].[Feature_29] <= -5.652687072753906) THEN CASE WHEN ([ADS].[Feature_54] <= 2.0980725288391113) THEN 10 ELSE 11 END ELSE CASE WHEN ([ADS].[Feature_45] <= -2.0416431427001953) THEN 13 ELSE 14 END END END AS node_id_2 
FROM [FourClass_100] AS [ADS]), 
[DT_node_data_50] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Estimator] AS [Estimator] 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 30 AS count, 3 AS depth, 2 AS parent_id, 1.0101691117358398 AS [Estimator] UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 320 AS count, 3 AS depth, 2 AS parent_id, -0.07823618272840241 AS [Estimator] UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 48 AS count, 3 AS depth, 5 AS parent_id, 1.3855606886346266 AS [Estimator] UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 25 AS count, 3 AS depth, 5 AS parent_id, -0.3528566374502665 AS [Estimator] UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 21 AS count, 3 AS depth, 9 AS parent_id, 1.2251951451112302 AS [Estimator] UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 9 AS count, 3 AS depth, 9 AS parent_id, -0.9418146859528295 AS [Estimator] UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS count, 3 AS depth, 12 AS parent_id, 1.4522061097027417 AS [Estimator] UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 342 AS count, 3 AS depth, 12 AS parent_id, -0.37427058479488023 AS [Estimator]) AS [Values]), 
[DT_Output_50] AS 
(SELECT [DT_node_lookup_50].[KEY] AS [KEY], [DT_node_lookup_50].node_id_2 AS node_id_2, [DT_node_data_50].node_id AS node_id, [DT_node_data_50].feature AS feature, [DT_node_data_50].threshold AS threshold, [DT_node_data_50].count AS count, [DT_node_data_50].depth AS depth, [DT_node_data_50].parent_id AS parent_id, [DT_node_data_50].[Estimator] AS [Estimator] 
FROM [DT_node_lookup_50] LEFT OUTER JOIN [DT_node_data_50] ON [DT_node_lookup_50].node_id_2 = [DT_node_data_50].node_id), 
[GB_Tree_12_2] AS 
(SELECT [DT_Output_50].[KEY] AS [KEY], 0.0 AS [Score_0], 0.0 AS [Score_1], [DT_Output_50].[Estimator] AS [Score_2], 0.0 AS [Score_3] 
FROM [DT_Output_50]), 
[DT_node_lookup_51] AS 
(SELECT [ADS].[KEY] AS [KEY], CASE WHEN ([ADS].[Feature_68] <= -1.4168505668640137) THEN CASE WHEN ([ADS].[Feature_43] <= -4.763238906860352) THEN CASE WHEN ([ADS].[Feature_74] <= 5.841965675354004) THEN 3 ELSE 4 END ELSE CASE WHEN ([ADS].[Feature_50] <= -5.64012336730957) THEN 6 ELSE 7 END END ELSE CASE WHEN ([ADS].[Feature_99] <= -0.11296220123767853) THEN CASE WHEN ([ADS].[Feature_50] <= -0.3095889091491699) THEN 10 ELSE 11 END ELSE CASE WHEN ([ADS].[Feature_17] <= 1.4348077774047852) THEN 13 ELSE 14 END END END AS node_id_2 
FROM [FourClass_100] AS [ADS]), 
[DT_node_data_51] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Estimator] AS [Estimator] 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 29 AS count, 3 AS depth, 2 AS parent_id, 0.1450435250404214 AS [Estimator] UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS count, 3 AS depth, 2 AS parent_id, 2.280705673685834 AS [Estimator] UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 32 AS count, 3 AS depth, 5 AS parent_id, 0.5074820241926122 AS [Estimator] UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 269 AS count, 3 AS depth, 5 AS parent_id, -0.5350551392712266 AS [Estimator] UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 133 AS count, 3 AS depth, 9 AS parent_id, 0.7449871151490713 AS [Estimator] UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 119 AS count, 3 AS depth, 9 AS parent_id, 0.07619592240004966 AS [Estimator] UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 139 AS count, 3 AS depth, 12 AS parent_id, -0.475259827988634 AS [Estimator] UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 74 AS count, 3 AS depth, 12 AS parent_id, 0.3789644079066355 AS [Estimator]) AS [Values]), 
[DT_Output_51] AS 
(SELECT [DT_node_lookup_51].[KEY] AS [KEY], [DT_node_lookup_51].node_id_2 AS node_id_2, [DT_node_data_51].node_id AS node_id, [DT_node_data_51].feature AS feature, [DT_node_data_51].threshold AS threshold, [DT_node_data_51].count AS count, [DT_node_data_51].depth AS depth, [DT_node_data_51].parent_id AS parent_id, [DT_node_data_51].[Estimator] AS [Estimator] 
FROM [DT_node_lookup_51] LEFT OUTER JOIN [DT_node_data_51] ON [DT_node_lookup_51].node_id_2 = [DT_node_data_51].node_id), 
[GB_Tree_12_3] AS 
(SELECT [DT_Output_51].[KEY] AS [KEY], 0.0 AS [Score_0], 0.0 AS [Score_1], 0.0 AS [Score_2], [DT_Output_51].[Estimator] AS [Score_3] 
FROM [DT_Output_51]), 
[DT_node_lookup_52] AS 
(SELECT [ADS].[KEY] AS [KEY], CASE WHEN ([ADS].[Feature_68] <= -1.8016636371612549) THEN CASE WHEN ([ADS].[Feature_95] <= 5.302607536315918) THEN CASE WHEN ([ADS].[Feature_53] <= 0.7389004230499268) THEN 3 ELSE 4 END ELSE CASE WHEN ([ADS].[Feature_17] <= 1.464594841003418) THEN 6 ELSE 7 END END ELSE CASE WHEN ([ADS].[Feature_64] <= -3.1246554851531982) THEN CASE WHEN ([ADS].[Feature_39] <= -0.8778992891311646) THEN 10 ELSE 11 END ELSE CASE WHEN ([ADS].[Feature_47] <= 9.56212043762207) THEN 13 ELSE 14 END END END AS node_id_2 
FROM [FourClass_100] AS [ADS]), 
[DT_node_data_52] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Estimator] AS [Estimator] 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 152 AS count, 3 AS depth, 2 AS parent_id, 0.48397281785321766 AS [Estimator] UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 127 AS count, 3 AS depth, 2 AS parent_id, -0.2930863742197603 AS [Estimator] UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 17 AS count, 3 AS depth, 5 AS parent_id, 1.61617691051322 AS [Estimator] UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS count, 3 AS depth, 5 AS parent_id, -0.07788812952897944 AS [Estimator] UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 49 AS count, 3 AS depth, 9 AS parent_id, -0.40764303647102107 AS [Estimator] UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 70 AS count, 3 AS depth, 9 AS parent_id, 0.7372047411517713 AS [Estimator] UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 377 AS count, 3 AS depth, 12 AS parent_id, -0.4149374675095408 AS [Estimator] UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS count, 3 AS depth, 12 AS parent_id, 1.7625943683591714 AS [Estimator]) AS [Values]), 
[DT_Output_52] AS 
(SELECT [DT_node_lookup_52].[KEY] AS [KEY], [DT_node_lookup_52].node_id_2 AS node_id_2, [DT_node_data_52].node_id AS node_id, [DT_node_data_52].feature AS feature, [DT_node_data_52].threshold AS threshold, [DT_node_data_52].count AS count, [DT_node_data_52].depth AS depth, [DT_node_data_52].parent_id AS parent_id, [DT_node_data_52].[Estimator] AS [Estimator] 
FROM [DT_node_lookup_52] LEFT OUTER JOIN [DT_node_data_52] ON [DT_node_lookup_52].node_id_2 = [DT_node_data_52].node_id), 
[GB_Tree_13_0] AS 
(SELECT [DT_Output_52].[KEY] AS [KEY], [DT_Output_52].[Estimator] AS [Score_0], 0.0 AS [Score_1], 0.0 AS [Score_2], 0.0 AS [Score_3] 
FROM [DT_Output_52]), 
[DT_node_lookup_53] AS 
(SELECT [ADS].[KEY] AS [KEY], CASE WHEN ([ADS].[Feature_43] <= 1.409960389137268) THEN CASE WHEN ([ADS].[Feature_42] <= -7.183197021484375) THEN CASE WHEN ([ADS].[Feature_93] <= 8.704306602478027) THEN 3 ELSE 4 END ELSE CASE WHEN ([ADS].[Feature_68] <= -2.4986729621887207) THEN 6 ELSE 7 END END ELSE CASE WHEN ([ADS].[Feature_55] <= 1.8188964128494263) THEN CASE WHEN ([ADS].[Feature_62] <= 3.288621187210083) THEN 10 ELSE 11 END ELSE CASE WHEN ([ADS].[Feature_14] <= -1.4927418231964111) THEN 13 ELSE 14 END END END AS node_id_2 
FROM [FourClass_100] AS [ADS]), 
[DT_node_data_53] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Estimator] AS [Estimator] 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 13 AS count, 3 AS depth, 2 AS parent_id, 1.8356363961352766 AS [Estimator] UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 10 AS count, 3 AS depth, 2 AS parent_id, -0.5205673374045147 AS [Estimator] UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 139 AS count, 3 AS depth, 5 AS parent_id, 0.22125220228451348 AS [Estimator] UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 341 AS count, 3 AS depth, 5 AS parent_id, -0.4561226456576156 AS [Estimator] UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 173 AS count, 3 AS depth, 9 AS parent_id, 0.6404203433772104 AS [Estimator] UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 43 AS count, 3 AS depth, 9 AS parent_id, -0.4468290806441748 AS [Estimator] UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS count, 3 AS depth, 12 AS parent_id, 1.4459156126946606 AS [Estimator] UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 76 AS count, 3 AS depth, 12 AS parent_id, -0.559653684313971 AS [Estimator]) AS [Values]), 
[DT_Output_53] AS 
(SELECT [DT_node_lookup_53].[KEY] AS [KEY], [DT_node_lookup_53].node_id_2 AS node_id_2, [DT_node_data_53].node_id AS node_id, [DT_node_data_53].feature AS feature, [DT_node_data_53].threshold AS threshold, [DT_node_data_53].count AS count, [DT_node_data_53].depth AS depth, [DT_node_data_53].parent_id AS parent_id, [DT_node_data_53].[Estimator] AS [Estimator] 
FROM [DT_node_lookup_53] LEFT OUTER JOIN [DT_node_data_53] ON [DT_node_lookup_53].node_id_2 = [DT_node_data_53].node_id), 
[GB_Tree_13_1] AS 
(SELECT [DT_Output_53].[KEY] AS [KEY], 0.0 AS [Score_0], [DT_Output_53].[Estimator] AS [Score_1], 0.0 AS [Score_2], 0.0 AS [Score_3] 
FROM [DT_Output_53]), 
[DT_node_lookup_54] AS 
(SELECT [ADS].[KEY] AS [KEY], CASE WHEN ([ADS].[Feature_64] <= 3.749783992767334) THEN CASE WHEN ([ADS].[Feature_38] <= 3.5349035263061523) THEN CASE WHEN ([ADS].[Feature_21] <= 3.208110809326172) THEN 3 ELSE 4 END ELSE CASE WHEN ([ADS].[Feature_15] <= 3.500455856323242) THEN 6 ELSE 7 END END ELSE CASE WHEN ([ADS].[Feature_9] <= -0.04604019597172737) THEN CASE WHEN ([ADS].[Feature_24] <= 2.401115894317627) THEN 10 ELSE 11 END ELSE CASE WHEN ([ADS].[Feature_23] <= 0.43357133865356445) THEN 13 ELSE 14 END END END AS node_id_2 
FROM [FourClass_100] AS [ADS]), 
[DT_node_data_54] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Estimator] AS [Estimator] 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 406 AS count, 3 AS depth, 2 AS parent_id, -0.3763302564985492 AS [Estimator] UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 128 AS count, 3 AS depth, 2 AS parent_id, 0.22178923898900293 AS [Estimator] UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 98 AS count, 3 AS depth, 5 AS parent_id, 0.5732210025706347 AS [Estimator] UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 26 AS count, 3 AS depth, 5 AS parent_id, -0.8114073022895463 AS [Estimator] UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 57 AS count, 3 AS depth, 9 AS parent_id, -0.5062726549662904 AS [Estimator] UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 16 AS count, 3 AS depth, 9 AS parent_id, 1.0156596358053924 AS [Estimator] UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 41 AS count, 3 AS depth, 12 AS parent_id, 0.4451981329066882 AS [Estimator] UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 28 AS count, 3 AS depth, 12 AS parent_id, 1.4704014015026012 AS [Estimator]) AS [Values]), 
[DT_Output_54] AS 
(SELECT [DT_node_lookup_54].[KEY] AS [KEY], [DT_node_lookup_54].node_id_2 AS node_id_2, [DT_node_data_54].node_id AS node_id, [DT_node_data_54].feature AS feature, [DT_node_data_54].threshold AS threshold, [DT_node_data_54].count AS count, [DT_node_data_54].depth AS depth, [DT_node_data_54].parent_id AS parent_id, [DT_node_data_54].[Estimator] AS [Estimator] 
FROM [DT_node_lookup_54] LEFT OUTER JOIN [DT_node_data_54] ON [DT_node_lookup_54].node_id_2 = [DT_node_data_54].node_id), 
[GB_Tree_13_2] AS 
(SELECT [DT_Output_54].[KEY] AS [KEY], 0.0 AS [Score_0], 0.0 AS [Score_1], [DT_Output_54].[Estimator] AS [Score_2], 0.0 AS [Score_3] 
FROM [DT_Output_54]), 
[DT_node_lookup_55] AS 
(SELECT [ADS].[KEY] AS [KEY], CASE WHEN ([ADS].[Feature_9] <= 2.049044132232666) THEN CASE WHEN ([ADS].[Feature_64] <= -1.3026608228683472) THEN CASE WHEN ([ADS].[Feature_50] <= -7.724681377410889) THEN 3 ELSE 4 END ELSE CASE WHEN ([ADS].[Feature_25] <= -1.9267786741256714) THEN 6 ELSE 7 END END ELSE CASE WHEN ([ADS].[Feature_83] <= 0.6787642240524292) THEN CASE WHEN ([ADS].[Feature_57] <= -10.534873962402344) THEN 10 ELSE 11 END ELSE CASE WHEN ([ADS].[Feature_46] <= -0.0050030723214149475) THEN 13 ELSE 14 END END END AS node_id_2 
FROM [FourClass_100] AS [ADS]), 
[DT_node_data_55] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Estimator] AS [Estimator] 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS count, 3 AS depth, 2 AS parent_id, 2.0613866858940137 AS [Estimator] UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 225 AS count, 3 AS depth, 2 AS parent_id, -0.32929058890980845 AS [Estimator] UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 114 AS count, 3 AS depth, 5 AS parent_id, 0.7732225033243991 AS [Estimator] UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 215 AS count, 3 AS depth, 5 AS parent_id, 0.14657454985608687 AS [Estimator] UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 3 AS depth, 9 AS parent_id, 1.637444693608551 AS [Estimator] UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 175 AS count, 3 AS depth, 9 AS parent_id, -0.592446286870421 AS [Estimator] UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 33 AS count, 3 AS depth, 12 AS parent_id, 0.7583675170776372 AS [Estimator] UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 31 AS count, 3 AS depth, 12 AS parent_id, -0.6589752814877626 AS [Estimator]) AS [Values]), 
[DT_Output_55] AS 
(SELECT [DT_node_lookup_55].[KEY] AS [KEY], [DT_node_lookup_55].node_id_2 AS node_id_2, [DT_node_data_55].node_id AS node_id, [DT_node_data_55].feature AS feature, [DT_node_data_55].threshold AS threshold, [DT_node_data_55].count AS count, [DT_node_data_55].depth AS depth, [DT_node_data_55].parent_id AS parent_id, [DT_node_data_55].[Estimator] AS [Estimator] 
FROM [DT_node_lookup_55] LEFT OUTER JOIN [DT_node_data_55] ON [DT_node_lookup_55].node_id_2 = [DT_node_data_55].node_id), 
[GB_Tree_13_3] AS 
(SELECT [DT_Output_55].[KEY] AS [KEY], 0.0 AS [Score_0], 0.0 AS [Score_1], 0.0 AS [Score_2], [DT_Output_55].[Estimator] AS [Score_3] 
FROM [DT_Output_55]), 
[DT_node_lookup_56] AS 
(SELECT [ADS].[KEY] AS [KEY], CASE WHEN ([ADS].[Feature_34] <= -1.8280695676803589) THEN CASE WHEN ([ADS].[Feature_58] <= 1.9037690162658691) THEN CASE WHEN ([ADS].[Feature_56] <= 0.5703438520431519) THEN 3 ELSE 4 END ELSE CASE WHEN ([ADS].[Feature_3] <= 0.23002128303050995) THEN 6 ELSE 7 END END ELSE CASE WHEN ([ADS].[Feature_48] <= -0.5620304346084595) THEN CASE WHEN ([ADS].[Feature_8] <= -3.459871292114258) THEN 10 ELSE 11 END ELSE CASE WHEN ([ADS].[Feature_27] <= -1.2434628009796143) THEN 13 ELSE 14 END END END AS node_id_2 
FROM [FourClass_100] AS [ADS]), 
[DT_node_data_56] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Estimator] AS [Estimator] 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 131 AS count, 3 AS depth, 2 AS parent_id, -0.13347914681253598 AS [Estimator] UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 129 AS count, 3 AS depth, 2 AS parent_id, -0.8072950099097401 AS [Estimator] UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS count, 3 AS depth, 5 AS parent_id, 1.9885563950903755 AS [Estimator] UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 3 AS depth, 5 AS parent_id, -0.8985242702292654 AS [Estimator] UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 60 AS count, 3 AS depth, 9 AS parent_id, 1.0284485317500704 AS [Estimator] UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 213 AS count, 3 AS depth, 9 AS parent_id, 0.16421069878837405 AS [Estimator] UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 119 AS count, 3 AS depth, 12 AS parent_id, 0.17756466774230886 AS [Estimator] UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 142 AS count, 3 AS depth, 12 AS parent_id, -0.4363512082863713 AS [Estimator]) AS [Values]), 
[DT_Output_56] AS 
(SELECT [DT_node_lookup_56].[KEY] AS [KEY], [DT_node_lookup_56].node_id_2 AS node_id_2, [DT_node_data_56].node_id AS node_id, [DT_node_data_56].feature AS feature, [DT_node_data_56].threshold AS threshold, [DT_node_data_56].count AS count, [DT_node_data_56].depth AS depth, [DT_node_data_56].parent_id AS parent_id, [DT_node_data_56].[Estimator] AS [Estimator] 
FROM [DT_node_lookup_56] LEFT OUTER JOIN [DT_node_data_56] ON [DT_node_lookup_56].node_id_2 = [DT_node_data_56].node_id), 
[GB_Tree_14_0] AS 
(SELECT [DT_Output_56].[KEY] AS [KEY], [DT_Output_56].[Estimator] AS [Score_0], 0.0 AS [Score_1], 0.0 AS [Score_2], 0.0 AS [Score_3] 
FROM [DT_Output_56]), 
[DT_node_lookup_57] AS 
(SELECT [ADS].[KEY] AS [KEY], CASE WHEN ([ADS].[Feature_40] <= 0.9660218954086304) THEN CASE WHEN ([ADS].[Feature_24] <= 4.820867538452148) THEN CASE WHEN ([ADS].[Feature_2] <= 0.19582626223564148) THEN 3 ELSE 4 END ELSE CASE WHEN ([ADS].[Feature_82] <= -0.743676483631134) THEN 6 ELSE 7 END END ELSE CASE WHEN ([ADS].[Feature_21] <= 8.88388442993164) THEN CASE WHEN ([ADS].[Feature_85] <= -7.182527542114258) THEN 10 ELSE 11 END ELSE CASE WHEN ([ADS].[Feature_60] <= 0.6103723645210266) THEN 13 ELSE 14 END END END AS node_id_2 
FROM [FourClass_100] AS [ADS]), 
[DT_node_data_57] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Estimator] AS [Estimator] 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 206 AS count, 3 AS depth, 2 AS parent_id, -0.2795649081263597 AS [Estimator] UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 214 AS count, 3 AS depth, 2 AS parent_id, 0.3200011995840001 AS [Estimator] UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 14 AS count, 3 AS depth, 5 AS parent_id, 1.7431343943329929 AS [Estimator] UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 53 AS count, 3 AS depth, 5 AS parent_id, 0.4851731927286181 AS [Estimator] UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 14 AS count, 3 AS depth, 9 AS parent_id, 0.767259353198737 AS [Estimator] UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 294 AS count, 3 AS depth, 9 AS parent_id, -0.4163753054129728 AS [Estimator] UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS count, 3 AS depth, 12 AS parent_id, 2.0453601800851 AS [Estimator] UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 12 AS parent_id, -0.8604893514500916 AS [Estimator]) AS [Values]), 
[DT_Output_57] AS 
(SELECT [DT_node_lookup_57].[KEY] AS [KEY], [DT_node_lookup_57].node_id_2 AS node_id_2, [DT_node_data_57].node_id AS node_id, [DT_node_data_57].feature AS feature, [DT_node_data_57].threshold AS threshold, [DT_node_data_57].count AS count, [DT_node_data_57].depth AS depth, [DT_node_data_57].parent_id AS parent_id, [DT_node_data_57].[Estimator] AS [Estimator] 
FROM [DT_node_lookup_57] LEFT OUTER JOIN [DT_node_data_57] ON [DT_node_lookup_57].node_id_2 = [DT_node_data_57].node_id), 
[GB_Tree_14_1] AS 
(SELECT [DT_Output_57].[KEY] AS [KEY], 0.0 AS [Score_0], [DT_Output_57].[Estimator] AS [Score_1], 0.0 AS [Score_2], 0.0 AS [Score_3] 
FROM [DT_Output_57]), 
[DT_node_lookup_58] AS 
(SELECT [ADS].[KEY] AS [KEY], CASE WHEN ([ADS].[Feature_66] <= 0.5855575799942017) THEN CASE WHEN ([ADS].[Feature_51] <= -0.17724822461605072) THEN CASE WHEN ([ADS].[Feature_34] <= -4.250898361206055) THEN 3 ELSE 4 END ELSE CASE WHEN ([ADS].[Feature_76] <= 1.7287160158157349) THEN 6 ELSE 7 END END ELSE CASE WHEN ([ADS].[Feature_86] <= -4.026129722595215) THEN CASE WHEN ([ADS].[Feature_99] <= -2.2319118976593018) THEN 10 ELSE 11 END ELSE CASE WHEN ([ADS].[Feature_87] <= -3.3031415939331055) THEN 13 ELSE 14 END END END AS node_id_2 
FROM [FourClass_100] AS [ADS]), 
[DT_node_data_58] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Estimator] AS [Estimator] 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 36 AS count, 3 AS depth, 2 AS parent_id, 0.9437954657353945 AS [Estimator] UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 209 AS count, 3 AS depth, 2 AS parent_id, -0.14217130142789133 AS [Estimator] UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 205 AS count, 3 AS depth, 5 AS parent_id, -0.5627758952459745 AS [Estimator] UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 8 AS count, 3 AS depth, 5 AS parent_id, 1.281399109702587 AS [Estimator] UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 19 AS count, 3 AS depth, 9 AS parent_id, -0.06309055786251355 AS [Estimator] UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 33 AS count, 3 AS depth, 9 AS parent_id, 1.3167558844360165 AS [Estimator] UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 62 AS count, 3 AS depth, 12 AS parent_id, 0.7227640274763236 AS [Estimator] UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 228 AS count, 3 AS depth, 12 AS parent_id, -0.11259454081680689 AS [Estimator]) AS [Values]), 
[DT_Output_58] AS 
(SELECT [DT_node_lookup_58].[KEY] AS [KEY], [DT_node_lookup_58].node_id_2 AS node_id_2, [DT_node_data_58].node_id AS node_id, [DT_node_data_58].feature AS feature, [DT_node_data_58].threshold AS threshold, [DT_node_data_58].count AS count, [DT_node_data_58].depth AS depth, [DT_node_data_58].parent_id AS parent_id, [DT_node_data_58].[Estimator] AS [Estimator] 
FROM [DT_node_lookup_58] LEFT OUTER JOIN [DT_node_data_58] ON [DT_node_lookup_58].node_id_2 = [DT_node_data_58].node_id), 
[GB_Tree_14_2] AS 
(SELECT [DT_Output_58].[KEY] AS [KEY], 0.0 AS [Score_0], 0.0 AS [Score_1], [DT_Output_58].[Estimator] AS [Score_2], 0.0 AS [Score_3] 
FROM [DT_Output_58]), 
[DT_node_lookup_59] AS 
(SELECT [ADS].[KEY] AS [KEY], CASE WHEN ([ADS].[Feature_84] <= -0.294437438249588) THEN CASE WHEN ([ADS].[Feature_38] <= 2.3661251068115234) THEN CASE WHEN ([ADS].[Feature_25] <= -0.09044432640075684) THEN 3 ELSE 4 END ELSE CASE WHEN ([ADS].[Feature_92] <= 7.076930046081543) THEN 6 ELSE 7 END END ELSE CASE WHEN ([ADS].[Feature_37] <= -2.5698142051696777) THEN CASE WHEN ([ADS].[Feature_22] <= 0.40296661853790283) THEN 10 ELSE 11 END ELSE CASE WHEN ([ADS].[Feature_15] <= 3.568692922592163) THEN 13 ELSE 14 END END END AS node_id_2 
FROM [FourClass_100] AS [ADS]), 
[DT_node_data_59] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Estimator] AS [Estimator] 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 130 AS count, 3 AS depth, 2 AS parent_id, 0.6857322192428285 AS [Estimator] UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 123 AS count, 3 AS depth, 2 AS parent_id, 0.04588489284452138 AS [Estimator] UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 89 AS count, 3 AS depth, 5 AS parent_id, -0.4844678943260322 AS [Estimator] UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 3 AS depth, 5 AS parent_id, 1.5361568513182178 AS [Estimator] UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 3 AS depth, 9 AS parent_id, 2.3423369494352775 AS [Estimator] UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 9 AS parent_id, 1.8521998136642286 AS [Estimator] UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 360 AS count, 3 AS depth, 12 AS parent_id, -0.36907336965671655 AS [Estimator] UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 92 AS count, 3 AS depth, 12 AS parent_id, 0.3116157000374199 AS [Estimator]) AS [Values]), 
[DT_Output_59] AS 
(SELECT [DT_node_lookup_59].[KEY] AS [KEY], [DT_node_lookup_59].node_id_2 AS node_id_2, [DT_node_data_59].node_id AS node_id, [DT_node_data_59].feature AS feature, [DT_node_data_59].threshold AS threshold, [DT_node_data_59].count AS count, [DT_node_data_59].depth AS depth, [DT_node_data_59].parent_id AS parent_id, [DT_node_data_59].[Estimator] AS [Estimator] 
FROM [DT_node_lookup_59] LEFT OUTER JOIN [DT_node_data_59] ON [DT_node_lookup_59].node_id_2 = [DT_node_data_59].node_id), 
[GB_Tree_14_3] AS 
(SELECT [DT_Output_59].[KEY] AS [KEY], 0.0 AS [Score_0], 0.0 AS [Score_1], 0.0 AS [Score_2], [DT_Output_59].[Estimator] AS [Score_3] 
FROM [DT_Output_59]), 
[DT_node_lookup_60] AS 
(SELECT [ADS].[KEY] AS [KEY], CASE WHEN ([ADS].[Feature_17] <= -1.1568864583969116) THEN CASE WHEN ([ADS].[Feature_24] <= -1.1189162731170654) THEN CASE WHEN ([ADS].[Feature_25] <= -4.12280797958374) THEN 3 ELSE 4 END ELSE CASE WHEN ([ADS].[Feature_8] <= -1.3530898094177246) THEN 6 ELSE 7 END END ELSE CASE WHEN ([ADS].[Feature_9] <= 2.049044132232666) THEN CASE WHEN ([ADS].[Feature_99] <= -9.541610717773438) THEN 10 ELSE 11 END ELSE CASE WHEN ([ADS].[Feature_52] <= -0.24808809161186218) THEN 13 ELSE 14 END END END AS node_id_2 
FROM [FourClass_100] AS [ADS]), 
[DT_node_data_60] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Estimator] AS [Estimator] 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 22 AS count, 3 AS depth, 2 AS parent_id, -0.6947021658332985 AS [Estimator] UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 89 AS count, 3 AS depth, 2 AS parent_id, 0.8945261191276268 AS [Estimator] UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 63 AS count, 3 AS depth, 5 AS parent_id, 0.5380689433522015 AS [Estimator] UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 117 AS count, 3 AS depth, 5 AS parent_id, -0.39710305517048944 AS [Estimator] UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS count, 3 AS depth, 9 AS parent_id, 1.695640556299738 AS [Estimator] UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 346 AS count, 3 AS depth, 9 AS parent_id, -0.4019001512127763 AS [Estimator] UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 82 AS count, 3 AS depth, 12 AS parent_id, -0.2806190044359822 AS [Estimator] UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 77 AS count, 3 AS depth, 12 AS parent_id, 0.6372947916478918 AS [Estimator]) AS [Values]), 
[DT_Output_60] AS 
(SELECT [DT_node_lookup_60].[KEY] AS [KEY], [DT_node_lookup_60].node_id_2 AS node_id_2, [DT_node_data_60].node_id AS node_id, [DT_node_data_60].feature AS feature, [DT_node_data_60].threshold AS threshold, [DT_node_data_60].count AS count, [DT_node_data_60].depth AS depth, [DT_node_data_60].parent_id AS parent_id, [DT_node_data_60].[Estimator] AS [Estimator] 
FROM [DT_node_lookup_60] LEFT OUTER JOIN [DT_node_data_60] ON [DT_node_lookup_60].node_id_2 = [DT_node_data_60].node_id), 
[GB_Tree_15_0] AS 
(SELECT [DT_Output_60].[KEY] AS [KEY], [DT_Output_60].[Estimator] AS [Score_0], 0.0 AS [Score_1], 0.0 AS [Score_2], 0.0 AS [Score_3] 
FROM [DT_Output_60]), 
[DT_node_lookup_61] AS 
(SELECT [ADS].[KEY] AS [KEY], CASE WHEN ([ADS].[Feature_27] <= -3.2798891067504883) THEN CASE WHEN ([ADS].[Feature_48] <= -7.682879447937012) THEN CASE WHEN ([ADS].[Feature_84] <= 0.08662447333335876) THEN 3 ELSE 4 END ELSE CASE WHEN ([ADS].[Feature_10] <= 2.66686749458313) THEN 6 ELSE 7 END END ELSE CASE WHEN ([ADS].[Feature_31] <= -3.4720935821533203) THEN CASE WHEN ([ADS].[Feature_74] <= -7.067905426025391) THEN 10 ELSE 11 END ELSE CASE WHEN ([ADS].[Feature_13] <= 1.9429881572723389) THEN 13 ELSE 14 END END END AS node_id_2 
FROM [FourClass_100] AS [ADS]), 
[DT_node_data_61] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Estimator] AS [Estimator] 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS count, 3 AS depth, 2 AS parent_id, -0.9327179842712061 AS [Estimator] UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS count, 3 AS depth, 2 AS parent_id, 2.0450198902680254 AS [Estimator] UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 157 AS count, 3 AS depth, 5 AS parent_id, -0.611533690971075 AS [Estimator] UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 3 AS depth, 5 AS parent_id, 1.5349324558769242 AS [Estimator] UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 6 AS count, 3 AS depth, 9 AS parent_id, 1.2231811685925271 AS [Estimator] UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 126 AS count, 3 AS depth, 9 AS parent_id, -0.5217887811932325 AS [Estimator] UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 327 AS count, 3 AS depth, 12 AS parent_id, 0.007320299755118072 AS [Estimator] UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 174 AS count, 3 AS depth, 12 AS parent_id, 0.5755551008590234 AS [Estimator]) AS [Values]), 
[DT_Output_61] AS 
(SELECT [DT_node_lookup_61].[KEY] AS [KEY], [DT_node_lookup_61].node_id_2 AS node_id_2, [DT_node_data_61].node_id AS node_id, [DT_node_data_61].feature AS feature, [DT_node_data_61].threshold AS threshold, [DT_node_data_61].count AS count, [DT_node_data_61].depth AS depth, [DT_node_data_61].parent_id AS parent_id, [DT_node_data_61].[Estimator] AS [Estimator] 
FROM [DT_node_lookup_61] LEFT OUTER JOIN [DT_node_data_61] ON [DT_node_lookup_61].node_id_2 = [DT_node_data_61].node_id), 
[GB_Tree_15_1] AS 
(SELECT [DT_Output_61].[KEY] AS [KEY], 0.0 AS [Score_0], [DT_Output_61].[Estimator] AS [Score_1], 0.0 AS [Score_2], 0.0 AS [Score_3] 
FROM [DT_Output_61]), 
[DT_node_lookup_62] AS 
(SELECT [ADS].[KEY] AS [KEY], CASE WHEN ([ADS].[Feature_38] <= -3.5714943408966064) THEN CASE WHEN ([ADS].[Feature_86] <= -6.819062232971191) THEN CASE WHEN ([ADS].[Feature_88] <= 1.0002250671386719) THEN 3 ELSE 4 END ELSE CASE WHEN ([ADS].[Feature_8] <= 9.685890197753906) THEN 6 ELSE 7 END END ELSE CASE WHEN ([ADS].[Feature_66] <= 2.9764814376831055) THEN CASE WHEN ([ADS].[Feature_51] <= -3.27597713470459) THEN 10 ELSE 11 END ELSE CASE WHEN ([ADS].[Feature_71] <= 0.8841341733932495) THEN 13 ELSE 14 END END END AS node_id_2 
FROM [FourClass_100] AS [ADS]), 
[DT_node_data_62] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Estimator] AS [Estimator] 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS count, 3 AS depth, 2 AS parent_id, 1.3627532297525666 AS [Estimator] UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 3 AS depth, 2 AS parent_id, -0.9398775229049989 AS [Estimator] UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 128 AS count, 3 AS depth, 5 AS parent_id, -0.752786694111468 AS [Estimator] UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 3 AS depth, 5 AS parent_id, 1.603582021379038 AS [Estimator] UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 131 AS count, 3 AS depth, 9 AS parent_id, 0.4031063341623361 AS [Estimator] UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 390 AS count, 3 AS depth, 9 AS parent_id, -0.2032967326478098 AS [Estimator] UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 86 AS count, 3 AS depth, 12 AS parent_id, 0.9004179345398606 AS [Estimator] UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 56 AS count, 3 AS depth, 12 AS parent_id, -0.15846287608131487 AS [Estimator]) AS [Values]), 
[DT_Output_62] AS 
(SELECT [DT_node_lookup_62].[KEY] AS [KEY], [DT_node_lookup_62].node_id_2 AS node_id_2, [DT_node_data_62].node_id AS node_id, [DT_node_data_62].feature AS feature, [DT_node_data_62].threshold AS threshold, [DT_node_data_62].count AS count, [DT_node_data_62].depth AS depth, [DT_node_data_62].parent_id AS parent_id, [DT_node_data_62].[Estimator] AS [Estimator] 
FROM [DT_node_lookup_62] LEFT OUTER JOIN [DT_node_data_62] ON [DT_node_lookup_62].node_id_2 = [DT_node_data_62].node_id), 
[GB_Tree_15_2] AS 
(SELECT [DT_Output_62].[KEY] AS [KEY], 0.0 AS [Score_0], 0.0 AS [Score_1], [DT_Output_62].[Estimator] AS [Score_2], 0.0 AS [Score_3] 
FROM [DT_Output_62]), 
[DT_node_lookup_63] AS 
(SELECT [ADS].[KEY] AS [KEY], CASE WHEN ([ADS].[Feature_43] <= -1.14353609085083) THEN CASE WHEN ([ADS].[Feature_64] <= 2.548539161682129) THEN CASE WHEN ([ADS].[Feature_31] <= 0.2913937270641327) THEN 3 ELSE 4 END ELSE CASE WHEN ([ADS].[Feature_51] <= -3.845238447189331) THEN 6 ELSE 7 END END ELSE CASE WHEN ([ADS].[Feature_25] <= -1.9292914867401123) THEN CASE WHEN ([ADS].[Feature_38] <= 0.2946261167526245) THEN 10 ELSE 11 END ELSE CASE WHEN ([ADS].[Feature_63] <= 1.622912883758545) THEN 13 ELSE 14 END END END AS node_id_2 
FROM [FourClass_100] AS [ADS]), 
[DT_node_data_63] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Estimator] AS [Estimator] 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 136 AS count, 3 AS depth, 2 AS parent_id, 0.29293111933925625 AS [Estimator] UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 87 AS count, 3 AS depth, 2 AS parent_id, -0.48057586035801114 AS [Estimator] UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 21 AS count, 3 AS depth, 5 AS parent_id, -0.3060330601367557 AS [Estimator] UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 73 AS count, 3 AS depth, 5 AS parent_id, 0.9268258740180613 AS [Estimator] UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 76 AS count, 3 AS depth, 9 AS parent_id, 0.6723546147909949 AS [Estimator] UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 71 AS count, 3 AS depth, 9 AS parent_id, -0.3352751109704091 AS [Estimator] UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 316 AS count, 3 AS depth, 12 AS parent_id, -0.48337341178598114 AS [Estimator] UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 20 AS count, 3 AS depth, 12 AS parent_id, 0.7010265210495501 AS [Estimator]) AS [Values]), 
[DT_Output_63] AS 
(SELECT [DT_node_lookup_63].[KEY] AS [KEY], [DT_node_lookup_63].node_id_2 AS node_id_2, [DT_node_data_63].node_id AS node_id, [DT_node_data_63].feature AS feature, [DT_node_data_63].threshold AS threshold, [DT_node_data_63].count AS count, [DT_node_data_63].depth AS depth, [DT_node_data_63].parent_id AS parent_id, [DT_node_data_63].[Estimator] AS [Estimator] 
FROM [DT_node_lookup_63] LEFT OUTER JOIN [DT_node_data_63] ON [DT_node_lookup_63].node_id_2 = [DT_node_data_63].node_id), 
[GB_Tree_15_3] AS 
(SELECT [DT_Output_63].[KEY] AS [KEY], 0.0 AS [Score_0], 0.0 AS [Score_1], 0.0 AS [Score_2], [DT_Output_63].[Estimator] AS [Score_3] 
FROM [DT_Output_63]), 
[DT_node_lookup_64] AS 
(SELECT [ADS].[KEY] AS [KEY], CASE WHEN ([ADS].[Feature_9] <= 10.976364135742188) THEN CASE WHEN ([ADS].[Feature_53] <= 2.673455238342285) THEN CASE WHEN ([ADS].[Feature_64] <= -2.6196532249450684) THEN 3 ELSE 4 END ELSE CASE WHEN ([ADS].[Feature_31] <= 3.882441997528076) THEN 6 ELSE 7 END END ELSE CASE WHEN ([ADS].[Feature_0] <= 1.4812676906585693) THEN CASE WHEN ([ADS].[Feature_52] <= -1.0829713344573975) THEN 10 ELSE 11 END ELSE 12 END END AS node_id_2 
FROM [FourClass_100] AS [ADS]), 
[DT_node_data_64] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Estimator] AS [Estimator] 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 148 AS count, 3 AS depth, 2 AS parent_id, 0.5067456947109241 AS [Estimator] UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 417 AS count, 3 AS depth, 2 AS parent_id, -0.058240292115547994 AS [Estimator] UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 191 AS count, 3 AS depth, 5 AS parent_id, -0.5867584778144863 AS [Estimator] UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 36 AS count, 3 AS depth, 5 AS parent_id, 0.4309944728161483 AS [Estimator] UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 3 AS depth, 9 AS parent_id, 2.1951122393990734 AS [Estimator] UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS count, 3 AS depth, 9 AS parent_id, 1.4092601761424564 AS [Estimator] UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 2 AS depth, 8 AS parent_id, -0.8897247415452345 AS [Estimator]) AS [Values]), 
[DT_Output_64] AS 
(SELECT [DT_node_lookup_64].[KEY] AS [KEY], [DT_node_lookup_64].node_id_2 AS node_id_2, [DT_node_data_64].node_id AS node_id, [DT_node_data_64].feature AS feature, [DT_node_data_64].threshold AS threshold, [DT_node_data_64].count AS count, [DT_node_data_64].depth AS depth, [DT_node_data_64].parent_id AS parent_id, [DT_node_data_64].[Estimator] AS [Estimator] 
FROM [DT_node_lookup_64] LEFT OUTER JOIN [DT_node_data_64] ON [DT_node_lookup_64].node_id_2 = [DT_node_data_64].node_id), 
[GB_Tree_16_0] AS 
(SELECT [DT_Output_64].[KEY] AS [KEY], [DT_Output_64].[Estimator] AS [Score_0], 0.0 AS [Score_1], 0.0 AS [Score_2], 0.0 AS [Score_3] 
FROM [DT_Output_64]), 
[DT_node_lookup_65] AS 
(SELECT [ADS].[KEY] AS [KEY], CASE WHEN ([ADS].[Feature_85] <= -3.815580368041992) THEN CASE WHEN ([ADS].[Feature_87] <= 1.8047268390655518) THEN CASE WHEN ([ADS].[Feature_13] <= 2.100191593170166) THEN 3 ELSE 4 END ELSE CASE WHEN ([ADS].[Feature_47] <= 0.6246328353881836) THEN 6 ELSE 7 END END ELSE CASE WHEN ([ADS].[Feature_66] <= -8.910640716552734) THEN CASE WHEN ([ADS].[Feature_8] <= -0.7316411733627319) THEN 10 ELSE 11 END ELSE CASE WHEN ([ADS].[Feature_99] <= 0.2602470815181732) THEN 13 ELSE 14 END END END AS node_id_2 
FROM [FourClass_100] AS [ADS]), 
[DT_node_data_65] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Estimator] AS [Estimator] 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 70 AS count, 3 AS depth, 2 AS parent_id, -0.3227910492789155 AS [Estimator] UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 31 AS count, 3 AS depth, 2 AS parent_id, 0.7083290367201663 AS [Estimator] UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 28 AS count, 3 AS depth, 5 AS parent_id, 1.5003417612095116 AS [Estimator] UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 19 AS count, 3 AS depth, 5 AS parent_id, 0.07304698851995446 AS [Estimator] UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS count, 3 AS depth, 9 AS parent_id, -0.21284229573709912 AS [Estimator] UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 9 AS count, 3 AS depth, 9 AS parent_id, 1.6379827464540198 AS [Estimator] UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 376 AS count, 3 AS depth, 12 AS parent_id, -0.3476818214626239 AS [Estimator] UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 262 AS count, 3 AS depth, 12 AS parent_id, 0.1415675923466009 AS [Estimator]) AS [Values]), 
[DT_Output_65] AS 
(SELECT [DT_node_lookup_65].[KEY] AS [KEY], [DT_node_lookup_65].node_id_2 AS node_id_2, [DT_node_data_65].node_id AS node_id, [DT_node_data_65].feature AS feature, [DT_node_data_65].threshold AS threshold, [DT_node_data_65].count AS count, [DT_node_data_65].depth AS depth, [DT_node_data_65].parent_id AS parent_id, [DT_node_data_65].[Estimator] AS [Estimator] 
FROM [DT_node_lookup_65] LEFT OUTER JOIN [DT_node_data_65] ON [DT_node_lookup_65].node_id_2 = [DT_node_data_65].node_id), 
[GB_Tree_16_1] AS 
(SELECT [DT_Output_65].[KEY] AS [KEY], 0.0 AS [Score_0], [DT_Output_65].[Estimator] AS [Score_1], 0.0 AS [Score_2], 0.0 AS [Score_3] 
FROM [DT_Output_65]), 
[DT_node_lookup_66] AS 
(SELECT [ADS].[KEY] AS [KEY], CASE WHEN ([ADS].[Feature_15] <= 0.27006494998931885) THEN CASE WHEN ([ADS].[Feature_47] <= 0.37456440925598145) THEN CASE WHEN ([ADS].[Feature_17] <= -3.3690476417541504) THEN 3 ELSE 4 END ELSE CASE WHEN ([ADS].[Feature_42] <= -2.9009811878204346) THEN 6 ELSE 7 END END ELSE CASE WHEN ([ADS].[Feature_71] <= 0.8914835453033447) THEN CASE WHEN ([ADS].[Feature_50] <= 1.2528138160705566) THEN 10 ELSE 11 END ELSE CASE WHEN ([ADS].[Feature_7] <= -3.3459525108337402) THEN 13 ELSE 14 END END END AS node_id_2 
FROM [FourClass_100] AS [ADS]), 
[DT_node_data_66] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Estimator] AS [Estimator] 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 39 AS count, 3 AS depth, 2 AS parent_id, -0.445594576895226 AS [Estimator] UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 173 AS count, 3 AS depth, 2 AS parent_id, 0.6345515300129522 AS [Estimator] UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 55 AS count, 3 AS depth, 5 AS parent_id, -0.8649751634381134 AS [Estimator] UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 147 AS count, 3 AS depth, 5 AS parent_id, 0.06862647369123663 AS [Estimator] UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 143 AS count, 3 AS depth, 9 AS parent_id, 0.2739012775654635 AS [Estimator] UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 93 AS count, 3 AS depth, 9 AS parent_id, -0.5282495760489381 AS [Estimator] UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 12 AS parent_id, 3.327835262089673 AS [Estimator] UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 149 AS count, 3 AS depth, 12 AS parent_id, -0.6366048188872853 AS [Estimator]) AS [Values]), 
[DT_Output_66] AS 
(SELECT [DT_node_lookup_66].[KEY] AS [KEY], [DT_node_lookup_66].node_id_2 AS node_id_2, [DT_node_data_66].node_id AS node_id, [DT_node_data_66].feature AS feature, [DT_node_data_66].threshold AS threshold, [DT_node_data_66].count AS count, [DT_node_data_66].depth AS depth, [DT_node_data_66].parent_id AS parent_id, [DT_node_data_66].[Estimator] AS [Estimator] 
FROM [DT_node_lookup_66] LEFT OUTER JOIN [DT_node_data_66] ON [DT_node_lookup_66].node_id_2 = [DT_node_data_66].node_id), 
[GB_Tree_16_2] AS 
(SELECT [DT_Output_66].[KEY] AS [KEY], 0.0 AS [Score_0], 0.0 AS [Score_1], [DT_Output_66].[Estimator] AS [Score_2], 0.0 AS [Score_3] 
FROM [DT_Output_66]), 
[DT_node_lookup_67] AS 
(SELECT [ADS].[KEY] AS [KEY], CASE WHEN ([ADS].[Feature_9] <= 2.049044132232666) THEN CASE WHEN ([ADS].[Feature_50] <= -0.7911702394485474) THEN CASE WHEN ([ADS].[Feature_71] <= -2.927886486053467) THEN 3 ELSE 4 END ELSE CASE WHEN ([ADS].[Feature_64] <= 1.9692811965942383) THEN 6 ELSE 7 END END ELSE CASE WHEN ([ADS].[Feature_67] <= -0.6519979238510132) THEN CASE WHEN ([ADS].[Feature_43] <= -2.425501823425293) THEN 10 ELSE 11 END ELSE CASE WHEN ([ADS].[Feature_74] <= 4.747869491577148) THEN 13 ELSE 14 END END END AS node_id_2 
FROM [FourClass_100] AS [ADS]), 
[DT_node_data_67] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Estimator] AS [Estimator] 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 60 AS count, 3 AS depth, 2 AS parent_id, -0.3199864452558128 AS [Estimator] UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 183 AS count, 3 AS depth, 2 AS parent_id, 0.6578366778070804 AS [Estimator] UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 225 AS count, 3 AS depth, 5 AS parent_id, -0.3714105200891781 AS [Estimator] UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 91 AS count, 3 AS depth, 5 AS parent_id, 0.3149417988187094 AS [Estimator] UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 17 AS count, 3 AS depth, 9 AS parent_id, 0.922843958052169 AS [Estimator] UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 43 AS count, 3 AS depth, 9 AS parent_id, -0.2389792892175503 AS [Estimator] UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 162 AS count, 3 AS depth, 12 AS parent_id, -0.6421938280445083 AS [Estimator] UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 19 AS count, 3 AS depth, 12 AS parent_id, 0.49088475077927907 AS [Estimator]) AS [Values]), 
[DT_Output_67] AS 
(SELECT [DT_node_lookup_67].[KEY] AS [KEY], [DT_node_lookup_67].node_id_2 AS node_id_2, [DT_node_data_67].node_id AS node_id, [DT_node_data_67].feature AS feature, [DT_node_data_67].threshold AS threshold, [DT_node_data_67].count AS count, [DT_node_data_67].depth AS depth, [DT_node_data_67].parent_id AS parent_id, [DT_node_data_67].[Estimator] AS [Estimator] 
FROM [DT_node_lookup_67] LEFT OUTER JOIN [DT_node_data_67] ON [DT_node_lookup_67].node_id_2 = [DT_node_data_67].node_id), 
[GB_Tree_16_3] AS 
(SELECT [DT_Output_67].[KEY] AS [KEY], 0.0 AS [Score_0], 0.0 AS [Score_1], 0.0 AS [Score_2], [DT_Output_67].[Estimator] AS [Score_3] 
FROM [DT_Output_67]), 
[DT_node_lookup_68] AS 
(SELECT [ADS].[KEY] AS [KEY], CASE WHEN ([ADS].[Feature_68] <= -1.8016636371612549) THEN CASE WHEN ([ADS].[Feature_51] <= 3.5826151371002197) THEN CASE WHEN ([ADS].[Feature_53] <= 0.7609652876853943) THEN 3 ELSE 4 END ELSE CASE WHEN ([ADS].[Feature_60] <= 1.017548680305481) THEN 6 ELSE 7 END END ELSE CASE WHEN ([ADS].[Feature_55] <= 6.0278801918029785) THEN CASE WHEN ([ADS].[Feature_39] <= 3.8467259407043457) THEN 10 ELSE 11 END ELSE CASE WHEN ([ADS].[Feature_72] <= 0.9827132225036621) THEN 13 ELSE 14 END END END AS node_id_2 
FROM [FourClass_100] AS [ADS]), 
[DT_node_data_68] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Estimator] AS [Estimator] 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 132 AS count, 3 AS depth, 2 AS parent_id, 0.3642436374045875 AS [Estimator] UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 107 AS count, 3 AS depth, 2 AS parent_id, -0.4239515052973639 AS [Estimator] UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 51 AS count, 3 AS depth, 5 AS parent_id, 1.0461702930944814 AS [Estimator] UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 10 AS count, 3 AS depth, 5 AS parent_id, -0.595068199716709 AS [Estimator] UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 396 AS count, 3 AS depth, 9 AS parent_id, -0.38952715001148963 AS [Estimator] UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 76 AS count, 3 AS depth, 9 AS parent_id, 0.37828580580694804 AS [Estimator] UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 22 AS count, 3 AS depth, 12 AS parent_id, 1.2468628627601923 AS [Estimator] UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 6 AS count, 3 AS depth, 12 AS parent_id, -0.9475142922179226 AS [Estimator]) AS [Values]), 
[DT_Output_68] AS 
(SELECT [DT_node_lookup_68].[KEY] AS [KEY], [DT_node_lookup_68].node_id_2 AS node_id_2, [DT_node_data_68].node_id AS node_id, [DT_node_data_68].feature AS feature, [DT_node_data_68].threshold AS threshold, [DT_node_data_68].count AS count, [DT_node_data_68].depth AS depth, [DT_node_data_68].parent_id AS parent_id, [DT_node_data_68].[Estimator] AS [Estimator] 
FROM [DT_node_lookup_68] LEFT OUTER JOIN [DT_node_data_68] ON [DT_node_lookup_68].node_id_2 = [DT_node_data_68].node_id), 
[GB_Tree_17_0] AS 
(SELECT [DT_Output_68].[KEY] AS [KEY], [DT_Output_68].[Estimator] AS [Score_0], 0.0 AS [Score_1], 0.0 AS [Score_2], 0.0 AS [Score_3] 
FROM [DT_Output_68]), 
[DT_node_lookup_69] AS 
(SELECT [ADS].[KEY] AS [KEY], CASE WHEN ([ADS].[Feature_31] <= 0.8691813349723816) THEN CASE WHEN ([ADS].[Feature_27] <= -1.4473822116851807) THEN CASE WHEN ([ADS].[Feature_80] <= 2.637782096862793) THEN 3 ELSE 4 END ELSE CASE WHEN ([ADS].[Feature_68] <= 0.8490797281265259) THEN 6 ELSE 7 END END ELSE CASE WHEN ([ADS].[Feature_40] <= -5.502964973449707) THEN CASE WHEN ([ADS].[Feature_50] <= -1.9827642440795898) THEN 10 ELSE 11 END ELSE CASE WHEN ([ADS].[Feature_95] <= 1.824265480041504) THEN 13 ELSE 14 END END END AS node_id_2 
FROM [FourClass_100] AS [ADS]), 
[DT_node_data_69] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Estimator] AS [Estimator] 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 217 AS count, 3 AS depth, 2 AS parent_id, -0.5648187669731305 AS [Estimator] UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 2 AS parent_id, 4.143153256950907 AS [Estimator] UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 171 AS count, 3 AS depth, 5 AS parent_id, 0.28753514102809224 AS [Estimator] UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 115 AS count, 3 AS depth, 5 AS parent_id, -0.3962872199249897 AS [Estimator] UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 12 AS count, 3 AS depth, 9 AS parent_id, -0.1296723603468986 AS [Estimator] UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 23 AS count, 3 AS depth, 9 AS parent_id, 1.3021737569127017 AS [Estimator] UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 199 AS count, 3 AS depth, 12 AS parent_id, 0.29371402070939834 AS [Estimator] UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 62 AS count, 3 AS depth, 12 AS parent_id, -0.4717180980740752 AS [Estimator]) AS [Values]), 
[DT_Output_69] AS 
(SELECT [DT_node_lookup_69].[KEY] AS [KEY], [DT_node_lookup_69].node_id_2 AS node_id_2, [DT_node_data_69].node_id AS node_id, [DT_node_data_69].feature AS feature, [DT_node_data_69].threshold AS threshold, [DT_node_data_69].count AS count, [DT_node_data_69].depth AS depth, [DT_node_data_69].parent_id AS parent_id, [DT_node_data_69].[Estimator] AS [Estimator] 
FROM [DT_node_lookup_69] LEFT OUTER JOIN [DT_node_data_69] ON [DT_node_lookup_69].node_id_2 = [DT_node_data_69].node_id), 
[GB_Tree_17_1] AS 
(SELECT [DT_Output_69].[KEY] AS [KEY], 0.0 AS [Score_0], [DT_Output_69].[Estimator] AS [Score_1], 0.0 AS [Score_2], 0.0 AS [Score_3] 
FROM [DT_Output_69]), 
[DT_node_lookup_70] AS 
(SELECT [ADS].[KEY] AS [KEY], CASE WHEN ([ADS].[Feature_61] <= 1.94813871383667) THEN CASE WHEN ([ADS].[Feature_48] <= -1.9892933368682861) THEN CASE WHEN ([ADS].[Feature_38] <= 2.2471799850463867) THEN 3 ELSE 4 END ELSE CASE WHEN ([ADS].[Feature_38] <= -3.573488712310791) THEN 6 ELSE 7 END END ELSE CASE WHEN ([ADS].[Feature_91] <= -8.405571937561035) THEN CASE WHEN ([ADS].[Feature_43] <= 0.03846225142478943) THEN 10 ELSE 11 END ELSE CASE WHEN ([ADS].[Feature_96] <= -1.3830008506774902) THEN 13 ELSE 14 END END END AS node_id_2 
FROM [FourClass_100] AS [ADS]), 
[DT_node_data_70] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Estimator] AS [Estimator] 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 160 AS count, 3 AS depth, 2 AS parent_id, -0.44375820742960054 AS [Estimator] UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 55 AS count, 3 AS depth, 2 AS parent_id, 0.34382283621208815 AS [Estimator] UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 64 AS count, 3 AS depth, 5 AS parent_id, -0.4101636782758941 AS [Estimator] UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 287 AS count, 3 AS depth, 5 AS parent_id, 0.42822521253625645 AS [Estimator] UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 7 AS count, 3 AS depth, 9 AS parent_id, 1.3731660446749059 AS [Estimator] UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS count, 3 AS depth, 9 AS parent_id, -0.8575010325932445 AS [Estimator] UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 15 AS count, 3 AS depth, 12 AS parent_id, 0.651542574780182 AS [Estimator] UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 208 AS count, 3 AS depth, 12 AS parent_id, -0.5478437312277397 AS [Estimator]) AS [Values]), 
[DT_Output_70] AS 
(SELECT [DT_node_lookup_70].[KEY] AS [KEY], [DT_node_lookup_70].node_id_2 AS node_id_2, [DT_node_data_70].node_id AS node_id, [DT_node_data_70].feature AS feature, [DT_node_data_70].threshold AS threshold, [DT_node_data_70].count AS count, [DT_node_data_70].depth AS depth, [DT_node_data_70].parent_id AS parent_id, [DT_node_data_70].[Estimator] AS [Estimator] 
FROM [DT_node_lookup_70] LEFT OUTER JOIN [DT_node_data_70] ON [DT_node_lookup_70].node_id_2 = [DT_node_data_70].node_id), 
[GB_Tree_17_2] AS 
(SELECT [DT_Output_70].[KEY] AS [KEY], 0.0 AS [Score_0], 0.0 AS [Score_1], [DT_Output_70].[Estimator] AS [Score_2], 0.0 AS [Score_3] 
FROM [DT_Output_70]), 
[DT_node_lookup_71] AS 
(SELECT [ADS].[KEY] AS [KEY], CASE WHEN ([ADS].[Feature_15] <= -2.9483907222747803) THEN CASE WHEN ([ADS].[Feature_42] <= -4.16982364654541) THEN CASE WHEN ([ADS].[Feature_50] <= -1.0654698610305786) THEN 3 ELSE 4 END ELSE CASE WHEN ([ADS].[Feature_91] <= -9.301385879516602) THEN 6 ELSE 7 END END ELSE CASE WHEN ([ADS].[Feature_84] <= -2.973052740097046) THEN CASE WHEN ([ADS].[Feature_54] <= -3.2507479190826416) THEN 10 ELSE 11 END ELSE CASE WHEN ([ADS].[Feature_43] <= -0.7613006830215454) THEN 13 ELSE 14 END END END AS node_id_2 
FROM [FourClass_100] AS [ADS]), 
[DT_node_data_71] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Estimator] AS [Estimator] 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 12 AS count, 3 AS depth, 2 AS parent_id, 1.1312124967609 AS [Estimator] UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 14 AS count, 3 AS depth, 2 AS parent_id, -0.5760904188268443 AS [Estimator] UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 3 AS depth, 5 AS parent_id, 1.5729078967977455 AS [Estimator] UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 164 AS count, 3 AS depth, 5 AS parent_id, -0.6035414020575127 AS [Estimator] UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 34 AS count, 3 AS depth, 9 AS parent_id, 1.1269728988770735 AS [Estimator] UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 104 AS count, 3 AS depth, 9 AS parent_id, 0.21650295496496338 AS [Estimator] UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 206 AS count, 3 AS depth, 12 AS parent_id, 0.2714132460207931 AS [Estimator] UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 263 AS count, 3 AS depth, 12 AS parent_id, -0.299878843763464 AS [Estimator]) AS [Values]), 
[DT_Output_71] AS 
(SELECT [DT_node_lookup_71].[KEY] AS [KEY], [DT_node_lookup_71].node_id_2 AS node_id_2, [DT_node_data_71].node_id AS node_id, [DT_node_data_71].feature AS feature, [DT_node_data_71].threshold AS threshold, [DT_node_data_71].count AS count, [DT_node_data_71].depth AS depth, [DT_node_data_71].parent_id AS parent_id, [DT_node_data_71].[Estimator] AS [Estimator] 
FROM [DT_node_lookup_71] LEFT OUTER JOIN [DT_node_data_71] ON [DT_node_lookup_71].node_id_2 = [DT_node_data_71].node_id), 
[GB_Tree_17_3] AS 
(SELECT [DT_Output_71].[KEY] AS [KEY], 0.0 AS [Score_0], 0.0 AS [Score_1], 0.0 AS [Score_2], [DT_Output_71].[Estimator] AS [Score_3] 
FROM [DT_Output_71]), 
[DT_node_lookup_72] AS 
(SELECT [ADS].[KEY] AS [KEY], CASE WHEN ([ADS].[Feature_8] <= 1.6596870422363281) THEN CASE WHEN ([ADS].[Feature_34] <= 0.78056800365448) THEN CASE WHEN ([ADS].[Feature_58] <= 1.9100033044815063) THEN 3 ELSE 4 END ELSE CASE WHEN ([ADS].[Feature_85] <= -0.17767968773841858) THEN 6 ELSE 7 END END ELSE CASE WHEN ([ADS].[Feature_24] <= -0.7672981023788452) THEN CASE WHEN ([ADS].[Feature_40] <= 1.707134485244751) THEN 10 ELSE 11 END ELSE CASE WHEN ([ADS].[Feature_0] <= 2.264908790588379) THEN 13 ELSE 14 END END END AS node_id_2 
FROM [FourClass_100] AS [ADS]), 
[DT_node_data_72] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Estimator] AS [Estimator] 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 295 AS count, 3 AS depth, 2 AS parent_id, -0.18444688273070534 AS [Estimator] UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 8 AS count, 3 AS depth, 2 AS parent_id, 1.3507980802649406 AS [Estimator] UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 105 AS count, 3 AS depth, 5 AS parent_id, -0.02423600037087344 AS [Estimator] UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 120 AS count, 3 AS depth, 5 AS parent_id, 0.7012860855304895 AS [Estimator] UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 85 AS count, 3 AS depth, 9 AS parent_id, -0.3369935801867997 AS [Estimator] UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 32 AS count, 3 AS depth, 9 AS parent_id, 0.9968402543613066 AS [Estimator] UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 154 AS count, 3 AS depth, 12 AS parent_id, -0.7467778412364413 AS [Estimator] UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 12 AS parent_id, 2.176929376765173 AS [Estimator]) AS [Values]), 
[DT_Output_72] AS 
(SELECT [DT_node_lookup_72].[KEY] AS [KEY], [DT_node_lookup_72].node_id_2 AS node_id_2, [DT_node_data_72].node_id AS node_id, [DT_node_data_72].feature AS feature, [DT_node_data_72].threshold AS threshold, [DT_node_data_72].count AS count, [DT_node_data_72].depth AS depth, [DT_node_data_72].parent_id AS parent_id, [DT_node_data_72].[Estimator] AS [Estimator] 
FROM [DT_node_lookup_72] LEFT OUTER JOIN [DT_node_data_72] ON [DT_node_lookup_72].node_id_2 = [DT_node_data_72].node_id), 
[GB_Tree_18_0] AS 
(SELECT [DT_Output_72].[KEY] AS [KEY], [DT_Output_72].[Estimator] AS [Score_0], 0.0 AS [Score_1], 0.0 AS [Score_2], 0.0 AS [Score_3] 
FROM [DT_Output_72]), 
[DT_node_lookup_73] AS 
(SELECT [ADS].[KEY] AS [KEY], CASE WHEN ([ADS].[Feature_55] <= 2.2732362747192383) THEN CASE WHEN ([ADS].[Feature_64] <= -1.7947351932525635) THEN CASE WHEN ([ADS].[Feature_23] <= -0.16440452635288239) THEN 3 ELSE 4 END ELSE CASE WHEN ([ADS].[Feature_52] <= -0.8883824348449707) THEN 6 ELSE 7 END END ELSE CASE WHEN ([ADS].[Feature_48] <= -2.775186538696289) THEN CASE WHEN ([ADS].[Feature_39] <= -2.4181246757507324) THEN 10 ELSE 11 END ELSE CASE WHEN ([ADS].[Feature_17] <= -8.47762393951416) THEN 13 ELSE 14 END END END AS node_id_2 
FROM [FourClass_100] AS [ADS]), 
[DT_node_data_73] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Estimator] AS [Estimator] 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 72 AS count, 3 AS depth, 2 AS parent_id, 0.835423916012993 AS [Estimator] UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 102 AS count, 3 AS depth, 2 AS parent_id, 0.13534561365048348 AS [Estimator] UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 155 AS count, 3 AS depth, 5 AS parent_id, -0.40434244606133923 AS [Estimator] UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 230 AS count, 3 AS depth, 5 AS parent_id, 0.17514743696241292 AS [Estimator] UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 24 AS count, 3 AS depth, 9 AS parent_id, -0.8289557800082185 AS [Estimator] UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 48 AS count, 3 AS depth, 9 AS parent_id, 0.5864952373524525 AS [Estimator] UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 3 AS depth, 12 AS parent_id, 1.5141304499479904 AS [Estimator] UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 167 AS count, 3 AS depth, 12 AS parent_id, -0.614439187183732 AS [Estimator]) AS [Values]), 
[DT_Output_73] AS 
(SELECT [DT_node_lookup_73].[KEY] AS [KEY], [DT_node_lookup_73].node_id_2 AS node_id_2, [DT_node_data_73].node_id AS node_id, [DT_node_data_73].feature AS feature, [DT_node_data_73].threshold AS threshold, [DT_node_data_73].count AS count, [DT_node_data_73].depth AS depth, [DT_node_data_73].parent_id AS parent_id, [DT_node_data_73].[Estimator] AS [Estimator] 
FROM [DT_node_lookup_73] LEFT OUTER JOIN [DT_node_data_73] ON [DT_node_lookup_73].node_id_2 = [DT_node_data_73].node_id), 
[GB_Tree_18_1] AS 
(SELECT [DT_Output_73].[KEY] AS [KEY], 0.0 AS [Score_0], [DT_Output_73].[Estimator] AS [Score_1], 0.0 AS [Score_2], 0.0 AS [Score_3] 
FROM [DT_Output_73]), 
[DT_node_lookup_74] AS 
(SELECT [ADS].[KEY] AS [KEY], CASE WHEN ([ADS].[Feature_64] <= -0.05070287734270096) THEN CASE WHEN ([ADS].[Feature_32] <= 0.26663240790367126) THEN CASE WHEN ([ADS].[Feature_90] <= -38.269004821777344) THEN 3 ELSE 4 END ELSE CASE WHEN ([ADS].[Feature_16] <= 6.190595626831055) THEN 6 ELSE 7 END END ELSE CASE WHEN ([ADS].[Feature_87] <= -2.0301127433776855) THEN CASE WHEN ([ADS].[Feature_51] <= -0.10742463171482086) THEN 10 ELSE 11 END ELSE CASE WHEN ([ADS].[Feature_4] <= 2.2970824241638184) THEN 13 ELSE 14 END END END AS node_id_2 
FROM [FourClass_100] AS [ADS]), 
[DT_node_data_74] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Estimator] AS [Estimator] 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 3 AS depth, 2 AS parent_id, 1.8940422779985653 AS [Estimator] UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 250 AS count, 3 AS depth, 2 AS parent_id, -0.4349914593504208 AS [Estimator] UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 151 AS count, 3 AS depth, 5 AS parent_id, -0.07038470107604829 AS [Estimator] UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 10 AS count, 3 AS depth, 5 AS parent_id, 1.8812047172660844 AS [Estimator] UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 61 AS count, 3 AS depth, 9 AS parent_id, 1.0483717764268206 AS [Estimator] UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 42 AS count, 3 AS depth, 9 AS parent_id, 0.002517283835120034 AS [Estimator] UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 280 AS count, 3 AS depth, 12 AS parent_id, -0.05524724101578758 AS [Estimator] UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS count, 3 AS depth, 12 AS parent_id, 2.0152692359743662 AS [Estimator]) AS [Values]), 
[DT_Output_74] AS 
(SELECT [DT_node_lookup_74].[KEY] AS [KEY], [DT_node_lookup_74].node_id_2 AS node_id_2, [DT_node_data_74].node_id AS node_id, [DT_node_data_74].feature AS feature, [DT_node_data_74].threshold AS threshold, [DT_node_data_74].count AS count, [DT_node_data_74].depth AS depth, [DT_node_data_74].parent_id AS parent_id, [DT_node_data_74].[Estimator] AS [Estimator] 
FROM [DT_node_lookup_74] LEFT OUTER JOIN [DT_node_data_74] ON [DT_node_lookup_74].node_id_2 = [DT_node_data_74].node_id), 
[GB_Tree_18_2] AS 
(SELECT [DT_Output_74].[KEY] AS [KEY], 0.0 AS [Score_0], 0.0 AS [Score_1], [DT_Output_74].[Estimator] AS [Score_2], 0.0 AS [Score_3] 
FROM [DT_Output_74]), 
[DT_node_lookup_75] AS 
(SELECT [ADS].[KEY] AS [KEY], CASE WHEN ([ADS].[Feature_38] <= 0.9559833407402039) THEN CASE WHEN ([ADS].[Feature_63] <= 1.473060131072998) THEN CASE WHEN ([ADS].[Feature_39] <= -6.443779468536377) THEN 3 ELSE 4 END ELSE CASE WHEN ([ADS].[Feature_90] <= -6.5131611824035645) THEN 6 ELSE 7 END END ELSE CASE WHEN ([ADS].[Feature_91] <= 8.390254020690918) THEN CASE WHEN ([ADS].[Feature_27] <= 3.753037214279175) THEN 10 ELSE 11 END ELSE CASE WHEN ([ADS].[Feature_5] <= 1.5570940971374512) THEN 13 ELSE 14 END END END AS node_id_2 
FROM [FourClass_100] AS [ADS]), 
[DT_node_data_75] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Estimator] AS [Estimator] 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 25 AS count, 3 AS depth, 2 AS parent_id, 1.0751396369998014 AS [Estimator] UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 416 AS count, 3 AS depth, 2 AS parent_id, -0.008227764649629606 AS [Estimator] UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 17 AS count, 3 AS depth, 5 AS parent_id, 1.492390760264098 AS [Estimator] UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 24 AS count, 3 AS depth, 5 AS parent_id, 0.4450821452616934 AS [Estimator] UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 263 AS count, 3 AS depth, 9 AS parent_id, -0.44890299636027636 AS [Estimator] UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 49 AS count, 3 AS depth, 9 AS parent_id, 0.39266954813478633 AS [Estimator] UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS count, 3 AS depth, 12 AS parent_id, 1.6336508445909383 AS [Estimator] UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 12 AS parent_id, -0.8640833385551587 AS [Estimator]) AS [Values]), 
[DT_Output_75] AS 
(SELECT [DT_node_lookup_75].[KEY] AS [KEY], [DT_node_lookup_75].node_id_2 AS node_id_2, [DT_node_data_75].node_id AS node_id, [DT_node_data_75].feature AS feature, [DT_node_data_75].threshold AS threshold, [DT_node_data_75].count AS count, [DT_node_data_75].depth AS depth, [DT_node_data_75].parent_id AS parent_id, [DT_node_data_75].[Estimator] AS [Estimator] 
FROM [DT_node_lookup_75] LEFT OUTER JOIN [DT_node_data_75] ON [DT_node_lookup_75].node_id_2 = [DT_node_data_75].node_id), 
[GB_Tree_18_3] AS 
(SELECT [DT_Output_75].[KEY] AS [KEY], 0.0 AS [Score_0], 0.0 AS [Score_1], 0.0 AS [Score_2], [DT_Output_75].[Estimator] AS [Score_3] 
FROM [DT_Output_75]), 
[DT_node_lookup_76] AS 
(SELECT [ADS].[KEY] AS [KEY], CASE WHEN ([ADS].[Feature_41] <= -2.436868667602539) THEN CASE WHEN ([ADS].[Feature_66] <= 4.049775123596191) THEN CASE WHEN ([ADS].[Feature_30] <= 0.12778440117835999) THEN 3 ELSE 4 END ELSE CASE WHEN ([ADS].[Feature_69] <= 0.9313573241233826) THEN 6 ELSE 7 END END ELSE CASE WHEN ([ADS].[Feature_8] <= -1.4788397550582886) THEN CASE WHEN ([ADS].[Feature_52] <= -1.0332460403442383) THEN 10 ELSE 11 END ELSE CASE WHEN ([ADS].[Feature_56] <= -1.8107624053955078) THEN 13 ELSE 14 END END END AS node_id_2 
FROM [FourClass_100] AS [ADS]), 
[DT_node_data_76] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Estimator] AS [Estimator] 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 3 AS depth, 2 AS parent_id, 1.4395972150078347 AS [Estimator] UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 3 AS depth, 2 AS parent_id, 2.3846869582114403 AS [Estimator] UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 3 AS depth, 5 AS parent_id, -0.8651452452017985 AS [Estimator] UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 5 AS parent_id, 0.9844315393353894 AS [Estimator] UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 124 AS count, 3 AS depth, 9 AS parent_id, -0.21786130908103382 AS [Estimator] UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 162 AS count, 3 AS depth, 9 AS parent_id, 0.502409657809115 AS [Estimator] UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 145 AS count, 3 AS depth, 12 AS parent_id, 0.22485777087497474 AS [Estimator] UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 360 AS count, 3 AS depth, 12 AS parent_id, -0.37691459104185737 AS [Estimator]) AS [Values]), 
[DT_Output_76] AS 
(SELECT [DT_node_lookup_76].[KEY] AS [KEY], [DT_node_lookup_76].node_id_2 AS node_id_2, [DT_node_data_76].node_id AS node_id, [DT_node_data_76].feature AS feature, [DT_node_data_76].threshold AS threshold, [DT_node_data_76].count AS count, [DT_node_data_76].depth AS depth, [DT_node_data_76].parent_id AS parent_id, [DT_node_data_76].[Estimator] AS [Estimator] 
FROM [DT_node_lookup_76] LEFT OUTER JOIN [DT_node_data_76] ON [DT_node_lookup_76].node_id_2 = [DT_node_data_76].node_id), 
[GB_Tree_19_0] AS 
(SELECT [DT_Output_76].[KEY] AS [KEY], [DT_Output_76].[Estimator] AS [Score_0], 0.0 AS [Score_1], 0.0 AS [Score_2], 0.0 AS [Score_3] 
FROM [DT_Output_76]), 
[DT_node_lookup_77] AS 
(SELECT [ADS].[KEY] AS [KEY], CASE WHEN ([ADS].[Feature_24] <= 4.180177688598633) THEN CASE WHEN ([ADS].[Feature_18] <= 2.1741795539855957) THEN CASE WHEN ([ADS].[Feature_99] <= -0.744516909122467) THEN 3 ELSE 4 END ELSE CASE WHEN ([ADS].[Feature_18] <= 2.6794872283935547) THEN 6 ELSE 7 END END ELSE CASE WHEN ([ADS].[Feature_82] <= -0.8343662023544312) THEN CASE WHEN ([ADS].[Feature_81] <= 0.84233158826828) THEN 10 ELSE 11 END ELSE CASE WHEN ([ADS].[Feature_31] <= 4.875267028808594) THEN 13 ELSE 14 END END END AS node_id_2 
FROM [FourClass_100] AS [ADS]), 
[DT_node_data_77] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Estimator] AS [Estimator] 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 316 AS count, 3 AS depth, 2 AS parent_id, -0.3741205373087794 AS [Estimator] UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 353 AS count, 3 AS depth, 2 AS parent_id, 0.10684205219817575 AS [Estimator] UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 6 AS count, 3 AS depth, 5 AS parent_id, 1.7740177806572994 AS [Estimator] UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 5 AS parent_id, -0.8520806400131303 AS [Estimator] UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 16 AS count, 3 AS depth, 9 AS parent_id, 1.5652711439509934 AS [Estimator] UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 7 AS count, 3 AS depth, 9 AS parent_id, 0.07557430128984145 AS [Estimator] UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 86 AS count, 3 AS depth, 12 AS parent_id, -0.02473131050354073 AS [Estimator] UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 15 AS count, 3 AS depth, 12 AS parent_id, 1.1318477622909406 AS [Estimator]) AS [Values]), 
[DT_Output_77] AS 
(SELECT [DT_node_lookup_77].[KEY] AS [KEY], [DT_node_lookup_77].node_id_2 AS node_id_2, [DT_node_data_77].node_id AS node_id, [DT_node_data_77].feature AS feature, [DT_node_data_77].threshold AS threshold, [DT_node_data_77].count AS count, [DT_node_data_77].depth AS depth, [DT_node_data_77].parent_id AS parent_id, [DT_node_data_77].[Estimator] AS [Estimator] 
FROM [DT_node_lookup_77] LEFT OUTER JOIN [DT_node_data_77] ON [DT_node_lookup_77].node_id_2 = [DT_node_data_77].node_id), 
[GB_Tree_19_1] AS 
(SELECT [DT_Output_77].[KEY] AS [KEY], 0.0 AS [Score_0], [DT_Output_77].[Estimator] AS [Score_1], 0.0 AS [Score_2], 0.0 AS [Score_3] 
FROM [DT_Output_77]), 
[DT_node_lookup_78] AS 
(SELECT [ADS].[KEY] AS [KEY], CASE WHEN ([ADS].[Feature_35] <= -2.522634983062744) THEN CASE WHEN ([ADS].[Feature_59] <= -1.158057451248169) THEN 2 ELSE CASE WHEN ([ADS].[Feature_98] <= 0.7862934470176697) THEN 4 ELSE 5 END END ELSE CASE WHEN ([ADS].[Feature_66] <= -0.45524707436561584) THEN CASE WHEN ([ADS].[Feature_87] <= 9.528886795043945) THEN 8 ELSE 9 END ELSE CASE WHEN ([ADS].[Feature_13] <= 0.5673550367355347) THEN 11 ELSE 12 END END END AS node_id_2 
FROM [FourClass_100] AS [ADS]), 
[DT_node_data_78] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Estimator] AS [Estimator] 
FROM (SELECT 2 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 2 AS depth, 1 AS parent_id, 1.5490366014388242 AS [Estimator] UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 3 AS depth, 3 AS parent_id, 1.902394986810959 AS [Estimator] UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 3 AS parent_id, 2.186125297044589 AS [Estimator] UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 363 AS count, 3 AS depth, 7 AS parent_id, -0.2755096557800744 AS [Estimator] UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS count, 3 AS depth, 7 AS parent_id, 1.7207898969922262 AS [Estimator] UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 217 AS count, 3 AS depth, 10 AS parent_id, 0.43289761863182696 AS [Estimator] UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 212 AS count, 3 AS depth, 10 AS parent_id, -0.16319233935231722 AS [Estimator]) AS [Values]), 
[DT_Output_78] AS 
(SELECT [DT_node_lookup_78].[KEY] AS [KEY], [DT_node_lookup_78].node_id_2 AS node_id_2, [DT_node_data_78].node_id AS node_id, [DT_node_data_78].feature AS feature, [DT_node_data_78].threshold AS threshold, [DT_node_data_78].count AS count, [DT_node_data_78].depth AS depth, [DT_node_data_78].parent_id AS parent_id, [DT_node_data_78].[Estimator] AS [Estimator] 
FROM [DT_node_lookup_78] LEFT OUTER JOIN [DT_node_data_78] ON [DT_node_lookup_78].node_id_2 = [DT_node_data_78].node_id), 
[GB_Tree_19_2] AS 
(SELECT [DT_Output_78].[KEY] AS [KEY], 0.0 AS [Score_0], 0.0 AS [Score_1], [DT_Output_78].[Estimator] AS [Score_2], 0.0 AS [Score_3] 
FROM [DT_Output_78]), 
[DT_node_lookup_79] AS 
(SELECT [ADS].[KEY] AS [KEY], CASE WHEN ([ADS].[Feature_23] <= 1.3578312397003174) THEN CASE WHEN ([ADS].[Feature_29] <= -0.674304187297821) THEN CASE WHEN ([ADS].[Feature_2] <= -4.398062705993652) THEN 3 ELSE 4 END ELSE CASE WHEN ([ADS].[Feature_50] <= -0.162187397480011) THEN 6 ELSE 7 END END ELSE CASE WHEN ([ADS].[Feature_76] <= 0.11759939044713974) THEN CASE WHEN ([ADS].[Feature_72] <= 1.4789719581604004) THEN 10 ELSE 11 END ELSE CASE WHEN ([ADS].[Feature_7] <= -0.4487047791481018) THEN 13 ELSE 14 END END END AS node_id_2 
FROM [FourClass_100] AS [ADS]), 
[DT_node_data_79] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Estimator] AS [Estimator] 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 32 AS count, 3 AS depth, 2 AS parent_id, 1.069788667848615 AS [Estimator] UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 295 AS count, 3 AS depth, 2 AS parent_id, 0.0556338540539864 AS [Estimator] UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 198 AS count, 3 AS depth, 5 AS parent_id, 0.020201099743553035 AS [Estimator] UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 205 AS count, 3 AS depth, 5 AS parent_id, -0.5933165500887493 AS [Estimator] UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 39 AS count, 3 AS depth, 9 AS parent_id, -0.2833200081109539 AS [Estimator] UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 3 AS depth, 9 AS parent_id, 2.151733676393531 AS [Estimator] UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 8 AS count, 3 AS depth, 12 AS parent_id, 0.14400138973324875 AS [Estimator] UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 20 AS count, 3 AS depth, 12 AS parent_id, 1.6916963016120623 AS [Estimator]) AS [Values]), 
[DT_Output_79] AS 
(SELECT [DT_node_lookup_79].[KEY] AS [KEY], [DT_node_lookup_79].node_id_2 AS node_id_2, [DT_node_data_79].node_id AS node_id, [DT_node_data_79].feature AS feature, [DT_node_data_79].threshold AS threshold, [DT_node_data_79].count AS count, [DT_node_data_79].depth AS depth, [DT_node_data_79].parent_id AS parent_id, [DT_node_data_79].[Estimator] AS [Estimator] 
FROM [DT_node_lookup_79] LEFT OUTER JOIN [DT_node_data_79] ON [DT_node_lookup_79].node_id_2 = [DT_node_data_79].node_id), 
[GB_Tree_19_3] AS 
(SELECT [DT_Output_79].[KEY] AS [KEY], 0.0 AS [Score_0], 0.0 AS [Score_1], 0.0 AS [Score_2], [DT_Output_79].[Estimator] AS [Score_3] 
FROM [DT_Output_79]), 
[DT_node_lookup_80] AS 
(SELECT [ADS].[KEY] AS [KEY], CASE WHEN ([ADS].[Feature_17] <= -1.1568864583969116) THEN CASE WHEN ([ADS].[Feature_13] <= 0.4343408942222595) THEN CASE WHEN ([ADS].[Feature_64] <= 0.4740883708000183) THEN 3 ELSE 4 END ELSE CASE WHEN ([ADS].[Feature_36] <= -5.321624755859375) THEN 6 ELSE 7 END END ELSE CASE WHEN ([ADS].[Feature_2] <= 0.7435014247894287) THEN CASE WHEN ([ADS].[Feature_86] <= -0.3987501263618469) THEN 10 ELSE 11 END ELSE CASE WHEN ([ADS].[Feature_13] <= -3.568941116333008) THEN 13 ELSE 14 END END END AS node_id_2 
FROM [FourClass_100] AS [ADS]), 
[DT_node_data_80] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Estimator] AS [Estimator] 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 78 AS count, 3 AS depth, 2 AS parent_id, 0.8734575939544675 AS [Estimator] UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 54 AS count, 3 AS depth, 2 AS parent_id, -0.07068250806494002 AS [Estimator] UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 15 AS count, 3 AS depth, 5 AS parent_id, 1.0699276525774324 AS [Estimator] UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 144 AS count, 3 AS depth, 5 AS parent_id, -0.22705564282516638 AS [Estimator] UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 150 AS count, 3 AS depth, 9 AS parent_id, -0.2891374574223922 AS [Estimator] UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 135 AS count, 3 AS depth, 9 AS parent_id, 0.3839004744570991 AS [Estimator] UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 41 AS count, 3 AS depth, 12 AS parent_id, 0.24937610358091805 AS [Estimator] UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 183 AS count, 3 AS depth, 12 AS parent_id, -0.6894829613652029 AS [Estimator]) AS [Values]), 
[DT_Output_80] AS 
(SELECT [DT_node_lookup_80].[KEY] AS [KEY], [DT_node_lookup_80].node_id_2 AS node_id_2, [DT_node_data_80].node_id AS node_id, [DT_node_data_80].feature AS feature, [DT_node_data_80].threshold AS threshold, [DT_node_data_80].count AS count, [DT_node_data_80].depth AS depth, [DT_node_data_80].parent_id AS parent_id, [DT_node_data_80].[Estimator] AS [Estimator] 
FROM [DT_node_lookup_80] LEFT OUTER JOIN [DT_node_data_80] ON [DT_node_lookup_80].node_id_2 = [DT_node_data_80].node_id), 
[GB_Tree_20_0] AS 
(SELECT [DT_Output_80].[KEY] AS [KEY], [DT_Output_80].[Estimator] AS [Score_0], 0.0 AS [Score_1], 0.0 AS [Score_2], 0.0 AS [Score_3] 
FROM [DT_Output_80]), 
[DT_node_lookup_81] AS 
(SELECT [ADS].[KEY] AS [KEY], CASE WHEN ([ADS].[Feature_86] <= -3.5094876289367676) THEN CASE WHEN ([ADS].[Feature_25] <= -5.205615997314453) THEN CASE WHEN ([ADS].[Feature_49] <= -0.09195427596569061) THEN 3 ELSE 4 END ELSE CASE WHEN ([ADS].[Feature_42] <= -8.200888633728027) THEN 6 ELSE 7 END END ELSE CASE WHEN ([ADS].[Feature_56] <= -3.757167339324951) THEN CASE WHEN ([ADS].[Feature_25] <= 8.638753890991211) THEN 10 ELSE 11 END ELSE CASE WHEN ([ADS].[Feature_52] <= -0.8883824348449707) THEN 13 ELSE 14 END END END AS node_id_2 
FROM [FourClass_100] AS [ADS]), 
[DT_node_data_81] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Estimator] AS [Estimator] 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 6 AS count, 3 AS depth, 2 AS parent_id, 1.5013385153269851 AS [Estimator] UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 7 AS count, 3 AS depth, 2 AS parent_id, -0.20905544610072213 AS [Estimator] UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 5 AS parent_id, 2.7121238361694364 AS [Estimator] UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 138 AS count, 3 AS depth, 5 AS parent_id, -0.6706494518243116 AS [Estimator] UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 93 AS count, 3 AS depth, 9 AS parent_id, -0.6194791192222326 AS [Estimator] UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 3 AS depth, 9 AS parent_id, 1.8843467343701699 AS [Estimator] UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 242 AS count, 3 AS depth, 12 AS parent_id, -0.09823593325337178 AS [Estimator] UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 310 AS count, 3 AS depth, 12 AS parent_id, 0.3782908523560494 AS [Estimator]) AS [Values]), 
[DT_Output_81] AS 
(SELECT [DT_node_lookup_81].[KEY] AS [KEY], [DT_node_lookup_81].node_id_2 AS node_id_2, [DT_node_data_81].node_id AS node_id, [DT_node_data_81].feature AS feature, [DT_node_data_81].threshold AS threshold, [DT_node_data_81].count AS count, [DT_node_data_81].depth AS depth, [DT_node_data_81].parent_id AS parent_id, [DT_node_data_81].[Estimator] AS [Estimator] 
FROM [DT_node_lookup_81] LEFT OUTER JOIN [DT_node_data_81] ON [DT_node_lookup_81].node_id_2 = [DT_node_data_81].node_id), 
[GB_Tree_20_1] AS 
(SELECT [DT_Output_81].[KEY] AS [KEY], 0.0 AS [Score_0], [DT_Output_81].[Estimator] AS [Score_1], 0.0 AS [Score_2], 0.0 AS [Score_3] 
FROM [DT_Output_81]), 
[DT_node_lookup_82] AS 
(SELECT [ADS].[KEY] AS [KEY], CASE WHEN ([ADS].[Feature_9] <= -3.3388733863830566) THEN CASE WHEN ([ADS].[Feature_95] <= 2.7739334106445312) THEN CASE WHEN ([ADS].[Feature_38] <= 5.937066555023193) THEN 3 ELSE 4 END ELSE CASE WHEN ([ADS].[Feature_23] <= 0.3890533149242401) THEN 6 ELSE 7 END END ELSE CASE WHEN ([ADS].[Feature_64] <= -0.05070287734270096) THEN CASE WHEN ([ADS].[Feature_66] <= 5.7158002853393555) THEN 10 ELSE 11 END ELSE CASE WHEN ([ADS].[Feature_92] <= -0.5363057255744934) THEN 13 ELSE 14 END END END AS node_id_2 
FROM [FourClass_100] AS [ADS]), 
[DT_node_data_82] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Estimator] AS [Estimator] 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 140 AS count, 3 AS depth, 2 AS parent_id, -0.714368002942336 AS [Estimator] UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS count, 3 AS depth, 2 AS parent_id, 1.3722204928288846 AS [Estimator] UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 25 AS count, 3 AS depth, 5 AS parent_id, 0.9905706614040384 AS [Estimator] UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 20 AS count, 3 AS depth, 5 AS parent_id, -0.9217323350094864 AS [Estimator] UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 291 AS count, 3 AS depth, 9 AS parent_id, -0.22315314231375855 AS [Estimator] UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 22 AS count, 3 AS depth, 9 AS parent_id, 0.7756781475104264 AS [Estimator] UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 148 AS count, 3 AS depth, 12 AS parent_id, -0.040727999859669906 AS [Estimator] UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 150 AS count, 3 AS depth, 12 AS parent_id, 0.6368610821543264 AS [Estimator]) AS [Values]), 
[DT_Output_82] AS 
(SELECT [DT_node_lookup_82].[KEY] AS [KEY], [DT_node_lookup_82].node_id_2 AS node_id_2, [DT_node_data_82].node_id AS node_id, [DT_node_data_82].feature AS feature, [DT_node_data_82].threshold AS threshold, [DT_node_data_82].count AS count, [DT_node_data_82].depth AS depth, [DT_node_data_82].parent_id AS parent_id, [DT_node_data_82].[Estimator] AS [Estimator] 
FROM [DT_node_lookup_82] LEFT OUTER JOIN [DT_node_data_82] ON [DT_node_lookup_82].node_id_2 = [DT_node_data_82].node_id), 
[GB_Tree_20_2] AS 
(SELECT [DT_Output_82].[KEY] AS [KEY], 0.0 AS [Score_0], 0.0 AS [Score_1], [DT_Output_82].[Estimator] AS [Score_2], 0.0 AS [Score_3] 
FROM [DT_Output_82]), 
[DT_node_lookup_83] AS 
(SELECT [ADS].[KEY] AS [KEY], CASE WHEN ([ADS].[Feature_84] <= -5.666316986083984) THEN CASE WHEN ([ADS].[Feature_38] <= 2.423567295074463) THEN CASE WHEN ([ADS].[Feature_91] <= 2.235710382461548) THEN 3 ELSE 4 END ELSE CASE WHEN ([ADS].[Feature_20] <= -2.26693058013916) THEN 6 ELSE 7 END END ELSE CASE WHEN ([ADS].[Feature_8] <= -1.4552171230316162) THEN CASE WHEN ([ADS].[Feature_61] <= 6.60349178314209) THEN 10 ELSE 11 END ELSE CASE WHEN ([ADS].[Feature_17] <= 6.499017715454102) THEN 13 ELSE 14 END END END AS node_id_2 
FROM [FourClass_100] AS [ADS]), 
[DT_node_data_83] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Estimator] AS [Estimator] 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 36 AS count, 3 AS depth, 2 AS parent_id, 0.5406334876483654 AS [Estimator] UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 16 AS count, 3 AS depth, 2 AS parent_id, 1.4325224702732149 AS [Estimator] UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 5 AS parent_id, 1.20703641415832 AS [Estimator] UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 19 AS count, 3 AS depth, 5 AS parent_id, -0.9330520321598844 AS [Estimator] UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 246 AS count, 3 AS depth, 9 AS parent_id, -0.4726580541215474 AS [Estimator] UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 12 AS count, 3 AS depth, 9 AS parent_id, 0.8789587079395164 AS [Estimator] UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 444 AS count, 3 AS depth, 12 AS parent_id, 0.02667927321844165 AS [Estimator] UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 26 AS count, 3 AS depth, 12 AS parent_id, 1.0086225028427676 AS [Estimator]) AS [Values]), 
[DT_Output_83] AS 
(SELECT [DT_node_lookup_83].[KEY] AS [KEY], [DT_node_lookup_83].node_id_2 AS node_id_2, [DT_node_data_83].node_id AS node_id, [DT_node_data_83].feature AS feature, [DT_node_data_83].threshold AS threshold, [DT_node_data_83].count AS count, [DT_node_data_83].depth AS depth, [DT_node_data_83].parent_id AS parent_id, [DT_node_data_83].[Estimator] AS [Estimator] 
FROM [DT_node_lookup_83] LEFT OUTER JOIN [DT_node_data_83] ON [DT_node_lookup_83].node_id_2 = [DT_node_data_83].node_id), 
[GB_Tree_20_3] AS 
(SELECT [DT_Output_83].[KEY] AS [KEY], 0.0 AS [Score_0], 0.0 AS [Score_1], 0.0 AS [Score_2], [DT_Output_83].[Estimator] AS [Score_3] 
FROM [DT_Output_83]), 
[DT_node_lookup_84] AS 
(SELECT [ADS].[KEY] AS [KEY], CASE WHEN ([ADS].[Feature_47] <= 0.7431588768959045) THEN CASE WHEN ([ADS].[Feature_24] <= -0.2746593952178955) THEN CASE WHEN ([ADS].[Feature_74] <= -3.554975986480713) THEN 3 ELSE 4 END ELSE CASE WHEN ([ADS].[Feature_46] <= 3.6159939765930176) THEN 6 ELSE 7 END END ELSE CASE WHEN ([ADS].[Feature_25] <= 3.2139782905578613) THEN CASE WHEN ([ADS].[Feature_9] <= 3.4645025730133057) THEN 10 ELSE 11 END ELSE CASE WHEN ([ADS].[Feature_40] <= 1.5275768041610718) THEN 13 ELSE 14 END END END AS node_id_2 
FROM [FourClass_100] AS [ADS]), 
[DT_node_data_84] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Estimator] AS [Estimator] 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 34 AS count, 3 AS depth, 2 AS parent_id, 0.8400797767066791 AS [Estimator] UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 177 AS count, 3 AS depth, 2 AS parent_id, -0.08333955168253958 AS [Estimator] UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 200 AS count, 3 AS depth, 5 AS parent_id, -0.5906828466447139 AS [Estimator] UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 29 AS count, 3 AS depth, 5 AS parent_id, 0.29484918124530035 AS [Estimator] UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 230 AS count, 3 AS depth, 9 AS parent_id, -0.14577125587310133 AS [Estimator] UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 49 AS count, 3 AS depth, 9 AS parent_id, 0.7425078805146748 AS [Estimator] UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 44 AS count, 3 AS depth, 12 AS parent_id, 0.12269405202577727 AS [Estimator] UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 37 AS count, 3 AS depth, 12 AS parent_id, 1.1461923494685502 AS [Estimator]) AS [Values]), 
[DT_Output_84] AS 
(SELECT [DT_node_lookup_84].[KEY] AS [KEY], [DT_node_lookup_84].node_id_2 AS node_id_2, [DT_node_data_84].node_id AS node_id, [DT_node_data_84].feature AS feature, [DT_node_data_84].threshold AS threshold, [DT_node_data_84].count AS count, [DT_node_data_84].depth AS depth, [DT_node_data_84].parent_id AS parent_id, [DT_node_data_84].[Estimator] AS [Estimator] 
FROM [DT_node_lookup_84] LEFT OUTER JOIN [DT_node_data_84] ON [DT_node_lookup_84].node_id_2 = [DT_node_data_84].node_id), 
[GB_Tree_21_0] AS 
(SELECT [DT_Output_84].[KEY] AS [KEY], [DT_Output_84].[Estimator] AS [Score_0], 0.0 AS [Score_1], 0.0 AS [Score_2], 0.0 AS [Score_3] 
FROM [DT_Output_84]), 
[DT_node_lookup_85] AS 
(SELECT [ADS].[KEY] AS [KEY], CASE WHEN ([ADS].[Feature_55] <= 2.2732362747192383) THEN CASE WHEN ([ADS].[Feature_23] <= -0.16440452635288239) THEN CASE WHEN ([ADS].[Feature_64] <= -0.4476744532585144) THEN 3 ELSE 4 END ELSE CASE WHEN ([ADS].[Feature_97] <= 1.4040699005126953) THEN 6 ELSE 7 END END ELSE CASE WHEN ([ADS].[Feature_48] <= -2.401850938796997) THEN CASE WHEN ([ADS].[Feature_23] <= 1.2314183712005615) THEN 10 ELSE 11 END ELSE CASE WHEN ([ADS].[Feature_21] <= -5.706751823425293) THEN 13 ELSE 14 END END END AS node_id_2 
FROM [FourClass_100] AS [ADS]), 
[DT_node_data_85] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Estimator] AS [Estimator] 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 101 AS count, 3 AS depth, 2 AS parent_id, 0.7510625009767161 AS [Estimator] UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 121 AS count, 3 AS depth, 2 AS parent_id, -0.007543891669913363 AS [Estimator] UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 305 AS count, 3 AS depth, 5 AS parent_id, -0.1832880251080858 AS [Estimator] UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 32 AS count, 3 AS depth, 5 AS parent_id, 0.7207816996309744 AS [Estimator] UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 72 AS count, 3 AS depth, 9 AS parent_id, -0.10328321925100989 AS [Estimator] UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 8 AS count, 3 AS depth, 9 AS parent_id, 1.3816370802395355 AS [Estimator] UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 15 AS count, 3 AS depth, 12 AS parent_id, 0.4038708449703478 AS [Estimator] UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 146 AS count, 3 AS depth, 12 AS parent_id, -0.6928222253292575 AS [Estimator]) AS [Values]), 
[DT_Output_85] AS 
(SELECT [DT_node_lookup_85].[KEY] AS [KEY], [DT_node_lookup_85].node_id_2 AS node_id_2, [DT_node_data_85].node_id AS node_id, [DT_node_data_85].feature AS feature, [DT_node_data_85].threshold AS threshold, [DT_node_data_85].count AS count, [DT_node_data_85].depth AS depth, [DT_node_data_85].parent_id AS parent_id, [DT_node_data_85].[Estimator] AS [Estimator] 
FROM [DT_node_lookup_85] LEFT OUTER JOIN [DT_node_data_85] ON [DT_node_lookup_85].node_id_2 = [DT_node_data_85].node_id), 
[GB_Tree_21_1] AS 
(SELECT [DT_Output_85].[KEY] AS [KEY], 0.0 AS [Score_0], [DT_Output_85].[Estimator] AS [Score_1], 0.0 AS [Score_2], 0.0 AS [Score_3] 
FROM [DT_Output_85]), 
[DT_node_lookup_86] AS 
(SELECT [ADS].[KEY] AS [KEY], CASE WHEN ([ADS].[Feature_15] <= 0.27006494998931885) THEN CASE WHEN ([ADS].[Feature_47] <= 0.37456440925598145) THEN CASE WHEN ([ADS].[Feature_77] <= -0.2445780485868454) THEN 3 ELSE 4 END ELSE CASE WHEN ([ADS].[Feature_76] <= 1.9488545656204224) THEN 6 ELSE 7 END END ELSE CASE WHEN ([ADS].[Feature_40] <= -3.79097843170166) THEN CASE WHEN ([ADS].[Feature_9] <= 0.9059728980064392) THEN 10 ELSE 11 END ELSE CASE WHEN ([ADS].[Feature_61] <= -5.888384819030762) THEN 13 ELSE 14 END END END AS node_id_2 
FROM [FourClass_100] AS [ADS]), 
[DT_node_data_86] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Estimator] AS [Estimator] 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 85 AS count, 3 AS depth, 2 AS parent_id, 0.7803338970120826 AS [Estimator] UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 127 AS count, 3 AS depth, 2 AS parent_id, 0.14537259749357834 AS [Estimator] UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 197 AS count, 3 AS depth, 5 AS parent_id, -0.1923458502940558 AS [Estimator] UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS count, 3 AS depth, 5 AS parent_id, 1.503983226939394 AS [Estimator] UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 49 AS count, 3 AS depth, 9 AS parent_id, -0.36203076466459555 AS [Estimator] UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 23 AS count, 3 AS depth, 9 AS parent_id, 1.3542772664337315 AS [Estimator] UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 32 AS count, 3 AS depth, 12 AS parent_id, 0.39912948684963273 AS [Estimator] UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 282 AS count, 3 AS depth, 12 AS parent_id, -0.44232219165167685 AS [Estimator]) AS [Values]), 
[DT_Output_86] AS 
(SELECT [DT_node_lookup_86].[KEY] AS [KEY], [DT_node_lookup_86].node_id_2 AS node_id_2, [DT_node_data_86].node_id AS node_id, [DT_node_data_86].feature AS feature, [DT_node_data_86].threshold AS threshold, [DT_node_data_86].count AS count, [DT_node_data_86].depth AS depth, [DT_node_data_86].parent_id AS parent_id, [DT_node_data_86].[Estimator] AS [Estimator] 
FROM [DT_node_lookup_86] LEFT OUTER JOIN [DT_node_data_86] ON [DT_node_lookup_86].node_id_2 = [DT_node_data_86].node_id), 
[GB_Tree_21_2] AS 
(SELECT [DT_Output_86].[KEY] AS [KEY], 0.0 AS [Score_0], 0.0 AS [Score_1], [DT_Output_86].[Estimator] AS [Score_2], 0.0 AS [Score_3] 
FROM [DT_Output_86]), 
[DT_node_lookup_87] AS 
(SELECT [ADS].[KEY] AS [KEY], CASE WHEN ([ADS].[Feature_43] <= -1.14353609085083) THEN CASE WHEN ([ADS].[Feature_68] <= 0.010905608534812927) THEN CASE WHEN ([ADS].[Feature_62] <= 5.80445671081543) THEN 3 ELSE 4 END ELSE CASE WHEN ([ADS].[Feature_40] <= -2.0027503967285156) THEN 6 ELSE 7 END END ELSE CASE WHEN ([ADS].[Feature_84] <= -3.983920097351074) THEN CASE WHEN ([ADS].[Feature_44] <= -0.5602487325668335) THEN 10 ELSE 11 END ELSE CASE WHEN ([ADS].[Feature_23] <= 1.4382567405700684) THEN 13 ELSE 14 END END END AS node_id_2 
FROM [FourClass_100] AS [ADS]), 
[DT_node_data_87] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Estimator] AS [Estimator] 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 141 AS count, 3 AS depth, 2 AS parent_id, -0.2258988206900801 AS [Estimator] UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 11 AS count, 3 AS depth, 2 AS parent_id, 0.9526331609715549 AS [Estimator] UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 52 AS count, 3 AS depth, 5 AS parent_id, -0.241257994844284 AS [Estimator] UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 113 AS count, 3 AS depth, 5 AS parent_id, 0.7311027572310477 AS [Estimator] UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 27 AS count, 3 AS depth, 9 AS parent_id, 1.020359603759316 AS [Estimator] UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 55 AS count, 3 AS depth, 9 AS parent_id, -0.03467099481539004 AS [Estimator] UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 364 AS count, 3 AS depth, 12 AS parent_id, -0.3843555237787649 AS [Estimator] UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 37 AS count, 3 AS depth, 12 AS parent_id, 0.4521281675956003 AS [Estimator]) AS [Values]), 
[DT_Output_87] AS 
(SELECT [DT_node_lookup_87].[KEY] AS [KEY], [DT_node_lookup_87].node_id_2 AS node_id_2, [DT_node_data_87].node_id AS node_id, [DT_node_data_87].feature AS feature, [DT_node_data_87].threshold AS threshold, [DT_node_data_87].count AS count, [DT_node_data_87].depth AS depth, [DT_node_data_87].parent_id AS parent_id, [DT_node_data_87].[Estimator] AS [Estimator] 
FROM [DT_node_lookup_87] LEFT OUTER JOIN [DT_node_data_87] ON [DT_node_lookup_87].node_id_2 = [DT_node_data_87].node_id), 
[GB_Tree_21_3] AS 
(SELECT [DT_Output_87].[KEY] AS [KEY], 0.0 AS [Score_0], 0.0 AS [Score_1], 0.0 AS [Score_2], [DT_Output_87].[Estimator] AS [Score_3] 
FROM [DT_Output_87]), 
[DT_node_lookup_88] AS 
(SELECT [ADS].[KEY] AS [KEY], CASE WHEN ([ADS].[Feature_34] <= -1.8280695676803589) THEN CASE WHEN ([ADS].[Feature_58] <= 1.9037690162658691) THEN CASE WHEN ([ADS].[Feature_13] <= 8.009349822998047) THEN 3 ELSE 4 END ELSE CASE WHEN ([ADS].[Feature_47] <= 3.483304977416992) THEN 6 ELSE 7 END END ELSE CASE WHEN ([ADS].[Feature_48] <= -1.0471844673156738) THEN CASE WHEN ([ADS].[Feature_8] <= -3.459871292114258) THEN 10 ELSE 11 END ELSE CASE WHEN ([ADS].[Feature_27] <= -1.2434628009796143) THEN 13 ELSE 14 END END END AS node_id_2 
FROM [FourClass_100] AS [ADS]), 
[DT_node_data_88] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Estimator] AS [Estimator] 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 255 AS count, 3 AS depth, 2 AS parent_id, -0.4281588459524267 AS [Estimator] UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS count, 3 AS depth, 2 AS parent_id, 1.1152028966905831 AS [Estimator] UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS count, 3 AS depth, 5 AS parent_id, 1.5441861516222963 AS [Estimator] UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 3 AS depth, 5 AS parent_id, -0.8608019478279165 AS [Estimator] UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 54 AS count, 3 AS depth, 9 AS parent_id, 0.9186967995350026 AS [Estimator] UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 201 AS count, 3 AS depth, 9 AS parent_id, 0.15533917202075995 AS [Estimator] UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 127 AS count, 3 AS depth, 12 AS parent_id, 0.21423328633570166 AS [Estimator] UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 152 AS count, 3 AS depth, 12 AS parent_id, -0.40861938059859865 AS [Estimator]) AS [Values]), 
[DT_Output_88] AS 
(SELECT [DT_node_lookup_88].[KEY] AS [KEY], [DT_node_lookup_88].node_id_2 AS node_id_2, [DT_node_data_88].node_id AS node_id, [DT_node_data_88].feature AS feature, [DT_node_data_88].threshold AS threshold, [DT_node_data_88].count AS count, [DT_node_data_88].depth AS depth, [DT_node_data_88].parent_id AS parent_id, [DT_node_data_88].[Estimator] AS [Estimator] 
FROM [DT_node_lookup_88] LEFT OUTER JOIN [DT_node_data_88] ON [DT_node_lookup_88].node_id_2 = [DT_node_data_88].node_id), 
[GB_Tree_22_0] AS 
(SELECT [DT_Output_88].[KEY] AS [KEY], [DT_Output_88].[Estimator] AS [Score_0], 0.0 AS [Score_1], 0.0 AS [Score_2], 0.0 AS [Score_3] 
FROM [DT_Output_88]), 
[DT_node_lookup_89] AS 
(SELECT [ADS].[KEY] AS [KEY], CASE WHEN ([ADS].[Feature_85] <= -2.313469409942627) THEN CASE WHEN ([ADS].[Feature_29] <= -0.2513980269432068) THEN CASE WHEN ([ADS].[Feature_52] <= -0.8609903454780579) THEN 3 ELSE 4 END ELSE CASE WHEN ([ADS].[Feature_56] <= -1.5888595581054688) THEN 6 ELSE 7 END END ELSE CASE WHEN ([ADS].[Feature_71] <= -1.4946237802505493) THEN CASE WHEN ([ADS].[Feature_27] <= 2.123425245285034) THEN 10 ELSE 11 END ELSE CASE WHEN ([ADS].[Feature_74] <= 5.616637229919434) THEN 13 ELSE 14 END END END AS node_id_2 
FROM [FourClass_100] AS [ADS]), 
[DT_node_data_89] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Estimator] AS [Estimator] 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 54 AS count, 3 AS depth, 2 AS parent_id, -0.721815465869932 AS [Estimator] UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 56 AS count, 3 AS depth, 2 AS parent_id, 0.24287034160109552 AS [Estimator] UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 34 AS count, 3 AS depth, 5 AS parent_id, -0.2095623333748572 AS [Estimator] UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 85 AS count, 3 AS depth, 5 AS parent_id, 0.8433366875356886 AS [Estimator] UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 164 AS count, 3 AS depth, 9 AS parent_id, -0.1366349392597195 AS [Estimator] UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 54 AS count, 3 AS depth, 9 AS parent_id, 0.8641447151042991 AS [Estimator] UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 313 AS count, 3 AS depth, 12 AS parent_id, -0.4007161388168262 AS [Estimator] UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 40 AS count, 3 AS depth, 12 AS parent_id, 0.35549807725999955 AS [Estimator]) AS [Values]), 
[DT_Output_89] AS 
(SELECT [DT_node_lookup_89].[KEY] AS [KEY], [DT_node_lookup_89].node_id_2 AS node_id_2, [DT_node_data_89].node_id AS node_id, [DT_node_data_89].feature AS feature, [DT_node_data_89].threshold AS threshold, [DT_node_data_89].count AS count, [DT_node_data_89].depth AS depth, [DT_node_data_89].parent_id AS parent_id, [DT_node_data_89].[Estimator] AS [Estimator] 
FROM [DT_node_lookup_89] LEFT OUTER JOIN [DT_node_data_89] ON [DT_node_lookup_89].node_id_2 = [DT_node_data_89].node_id), 
[GB_Tree_22_1] AS 
(SELECT [DT_Output_89].[KEY] AS [KEY], 0.0 AS [Score_0], [DT_Output_89].[Estimator] AS [Score_1], 0.0 AS [Score_2], 0.0 AS [Score_3] 
FROM [DT_Output_89]), 
[DT_node_lookup_90] AS 
(SELECT [ADS].[KEY] AS [KEY], CASE WHEN ([ADS].[Feature_74] <= 5.485088348388672) THEN CASE WHEN ([ADS].[Feature_61] <= 2.902503728866577) THEN CASE WHEN ([ADS].[Feature_38] <= 3.2417545318603516) THEN 3 ELSE 4 END ELSE CASE WHEN ([ADS].[Feature_91] <= -8.405571937561035) THEN 6 ELSE 7 END END ELSE CASE WHEN ([ADS].[Feature_35] <= -1.9600201845169067) THEN CASE WHEN ([ADS].[Feature_57] <= 4.80239200592041) THEN 10 ELSE 11 END ELSE CASE WHEN ([ADS].[Feature_34] <= 7.021705627441406) THEN 13 ELSE 14 END END END AS node_id_2 
FROM [FourClass_100] AS [ADS]), 
[DT_node_data_90] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Estimator] AS [Estimator] 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 441 AS count, 3 AS depth, 2 AS parent_id, 0.05638643037898057 AS [Estimator] UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 103 AS count, 3 AS depth, 2 AS parent_id, 0.5764913805239058 AS [Estimator] UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 9 AS count, 3 AS depth, 5 AS parent_id, 0.9434797541581106 AS [Estimator] UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 160 AS count, 3 AS depth, 5 AS parent_id, -0.4988011811711514 AS [Estimator] UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 9 AS parent_id, 1.2962608429054703 AS [Estimator] UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 9 AS parent_id, 1.6929011635866305 AS [Estimator] UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 80 AS count, 3 AS depth, 12 AS parent_id, -0.7437355532927711 AS [Estimator] UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS count, 3 AS depth, 12 AS parent_id, 1.0101874824252608 AS [Estimator]) AS [Values]), 
[DT_Output_90] AS 
(SELECT [DT_node_lookup_90].[KEY] AS [KEY], [DT_node_lookup_90].node_id_2 AS node_id_2, [DT_node_data_90].node_id AS node_id, [DT_node_data_90].feature AS feature, [DT_node_data_90].threshold AS threshold, [DT_node_data_90].count AS count, [DT_node_data_90].depth AS depth, [DT_node_data_90].parent_id AS parent_id, [DT_node_data_90].[Estimator] AS [Estimator] 
FROM [DT_node_lookup_90] LEFT OUTER JOIN [DT_node_data_90] ON [DT_node_lookup_90].node_id_2 = [DT_node_data_90].node_id), 
[GB_Tree_22_2] AS 
(SELECT [DT_Output_90].[KEY] AS [KEY], 0.0 AS [Score_0], 0.0 AS [Score_1], [DT_Output_90].[Estimator] AS [Score_2], 0.0 AS [Score_3] 
FROM [DT_Output_90]), 
[DT_node_lookup_91] AS 
(SELECT [ADS].[KEY] AS [KEY], CASE WHEN ([ADS].[Feature_15] <= -2.9483907222747803) THEN CASE WHEN ([ADS].[Feature_42] <= -4.16982364654541) THEN CASE WHEN ([ADS].[Feature_50] <= -1.0654698610305786) THEN 3 ELSE 4 END ELSE CASE WHEN ([ADS].[Feature_91] <= -9.301385879516602) THEN 6 ELSE 7 END END ELSE CASE WHEN ([ADS].[Feature_29] <= -0.4258729815483093) THEN CASE WHEN ([ADS].[Feature_43] <= -4.269558906555176) THEN 10 ELSE 11 END ELSE CASE WHEN ([ADS].[Feature_23] <= 1.317326545715332) THEN 13 ELSE 14 END END END AS node_id_2 
FROM [FourClass_100] AS [ADS]), 
[DT_node_data_91] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Estimator] AS [Estimator] 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 12 AS count, 3 AS depth, 2 AS parent_id, 1.0161546198269624 AS [Estimator] UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 14 AS count, 3 AS depth, 2 AS parent_id, -0.5547806617248601 AS [Estimator] UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 3 AS depth, 5 AS parent_id, 1.338523004171741 AS [Estimator] UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 164 AS count, 3 AS depth, 5 AS parent_id, -0.5665198549680346 AS [Estimator] UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 41 AS count, 3 AS depth, 9 AS parent_id, 1.0230164791146705 AS [Estimator] UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 238 AS count, 3 AS depth, 9 AS parent_id, 0.15498969159338777 AS [Estimator] UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 296 AS count, 3 AS depth, 12 AS parent_id, -0.2475442393507425 AS [Estimator] UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 32 AS count, 3 AS depth, 12 AS parent_id, 0.9255089202345689 AS [Estimator]) AS [Values]), 
[DT_Output_91] AS 
(SELECT [DT_node_lookup_91].[KEY] AS [KEY], [DT_node_lookup_91].node_id_2 AS node_id_2, [DT_node_data_91].node_id AS node_id, [DT_node_data_91].feature AS feature, [DT_node_data_91].threshold AS threshold, [DT_node_data_91].count AS count, [DT_node_data_91].depth AS depth, [DT_node_data_91].parent_id AS parent_id, [DT_node_data_91].[Estimator] AS [Estimator] 
FROM [DT_node_lookup_91] LEFT OUTER JOIN [DT_node_data_91] ON [DT_node_lookup_91].node_id_2 = [DT_node_data_91].node_id), 
[GB_Tree_22_3] AS 
(SELECT [DT_Output_91].[KEY] AS [KEY], 0.0 AS [Score_0], 0.0 AS [Score_1], 0.0 AS [Score_2], [DT_Output_91].[Estimator] AS [Score_3] 
FROM [DT_Output_91]), 
[DT_node_lookup_92] AS 
(SELECT [ADS].[KEY] AS [KEY], CASE WHEN ([ADS].[Feature_68] <= -1.8016636371612549) THEN CASE WHEN ([ADS].[Feature_95] <= 5.302607536315918) THEN CASE WHEN ([ADS].[Feature_38] <= -4.933995246887207) THEN 3 ELSE 4 END ELSE CASE WHEN ([ADS].[Feature_98] <= 1.3249574899673462) THEN 6 ELSE 7 END END ELSE CASE WHEN ([ADS].[Feature_55] <= 6.0278801918029785) THEN CASE WHEN ([ADS].[Feature_39] <= 3.8467259407043457) THEN 10 ELSE 11 END ELSE CASE WHEN ([ADS].[Feature_31] <= -2.833394765853882) THEN 13 ELSE 14 END END END AS node_id_2 
FROM [FourClass_100] AS [ADS]), 
[DT_node_data_92] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Estimator] AS [Estimator] 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 21 AS count, 3 AS depth, 2 AS parent_id, 1.0217630440278551 AS [Estimator] UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 258 AS count, 3 AS depth, 2 AS parent_id, 0.03629247997699028 AS [Estimator] UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 19 AS count, 3 AS depth, 5 AS parent_id, 1.2463749859228523 AS [Estimator] UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 3 AS depth, 5 AS parent_id, -0.9388713143067041 AS [Estimator] UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 396 AS count, 3 AS depth, 9 AS parent_id, -0.35688656334526747 AS [Estimator] UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 76 AS count, 3 AS depth, 9 AS parent_id, 0.33533108210215545 AS [Estimator] UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 9 AS count, 3 AS depth, 12 AS parent_id, 1.53562154712294 AS [Estimator] UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 19 AS count, 3 AS depth, 12 AS parent_id, 0.25905282796285795 AS [Estimator]) AS [Values]), 
[DT_Output_92] AS 
(SELECT [DT_node_lookup_92].[KEY] AS [KEY], [DT_node_lookup_92].node_id_2 AS node_id_2, [DT_node_data_92].node_id AS node_id, [DT_node_data_92].feature AS feature, [DT_node_data_92].threshold AS threshold, [DT_node_data_92].count AS count, [DT_node_data_92].depth AS depth, [DT_node_data_92].parent_id AS parent_id, [DT_node_data_92].[Estimator] AS [Estimator] 
FROM [DT_node_lookup_92] LEFT OUTER JOIN [DT_node_data_92] ON [DT_node_lookup_92].node_id_2 = [DT_node_data_92].node_id), 
[GB_Tree_23_0] AS 
(SELECT [DT_Output_92].[KEY] AS [KEY], [DT_Output_92].[Estimator] AS [Score_0], 0.0 AS [Score_1], 0.0 AS [Score_2], 0.0 AS [Score_3] 
FROM [DT_Output_92]), 
[DT_node_lookup_93] AS 
(SELECT [ADS].[KEY] AS [KEY], CASE WHEN ([ADS].[Feature_92] <= 3.6603341102600098) THEN CASE WHEN ([ADS].[Feature_99] <= -1.285008192062378) THEN CASE WHEN ([ADS].[Feature_52] <= -0.8373876214027405) THEN 3 ELSE 4 END ELSE CASE WHEN ([ADS].[Feature_86] <= 0.8154760599136353) THEN 6 ELSE 7 END END ELSE CASE WHEN ([ADS].[Feature_40] <= -8.147250175476074) THEN CASE WHEN ([ADS].[Feature_45] <= -0.7947195768356323) THEN 10 ELSE 11 END ELSE CASE WHEN ([ADS].[Feature_22] <= -2.373701333999634) THEN 13 ELSE 14 END END END AS node_id_2 
FROM [FourClass_100] AS [ADS]), 
[DT_node_data_93] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Estimator] AS [Estimator] 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 136 AS count, 3 AS depth, 2 AS parent_id, -0.5801959825294263 AS [Estimator] UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 164 AS count, 3 AS depth, 2 AS parent_id, 0.09623501692119325 AS [Estimator] UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 197 AS count, 3 AS depth, 5 AS parent_id, -0.006302638526393486 AS [Estimator] UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 169 AS count, 3 AS depth, 5 AS parent_id, 0.5565704334988179 AS [Estimator] UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 9 AS parent_id, 1.4641928398853725 AS [Estimator] UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 9 AS parent_id, 1.522844041675897 AS [Estimator] UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 3 AS depth, 12 AS parent_id, 1.4380498403298891 AS [Estimator] UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 130 AS count, 3 AS depth, 12 AS parent_id, -0.5785147332911915 AS [Estimator]) AS [Values]), 
[DT_Output_93] AS 
(SELECT [DT_node_lookup_93].[KEY] AS [KEY], [DT_node_lookup_93].node_id_2 AS node_id_2, [DT_node_data_93].node_id AS node_id, [DT_node_data_93].feature AS feature, [DT_node_data_93].threshold AS threshold, [DT_node_data_93].count AS count, [DT_node_data_93].depth AS depth, [DT_node_data_93].parent_id AS parent_id, [DT_node_data_93].[Estimator] AS [Estimator] 
FROM [DT_node_lookup_93] LEFT OUTER JOIN [DT_node_data_93] ON [DT_node_lookup_93].node_id_2 = [DT_node_data_93].node_id), 
[GB_Tree_23_1] AS 
(SELECT [DT_Output_93].[KEY] AS [KEY], 0.0 AS [Score_0], [DT_Output_93].[Estimator] AS [Score_1], 0.0 AS [Score_2], 0.0 AS [Score_3] 
FROM [DT_Output_93]), 
[DT_node_lookup_94] AS 
(SELECT [ADS].[KEY] AS [KEY], CASE WHEN ([ADS].[Feature_64] <= 4.102987766265869) THEN CASE WHEN ([ADS].[Feature_71] <= 1.0855355262756348) THEN CASE WHEN ([ADS].[Feature_66] <= 5.4070024490356445) THEN 3 ELSE 4 END ELSE CASE WHEN ([ADS].[Feature_25] <= 8.05192756652832) THEN 6 ELSE 7 END END ELSE CASE WHEN ([ADS].[Feature_9] <= -0.04604019597172737) THEN CASE WHEN ([ADS].[Feature_24] <= 3.032895565032959) THEN 10 ELSE 11 END ELSE CASE WHEN ([ADS].[Feature_31] <= -1.182591199874878) THEN 13 ELSE 14 END END END AS node_id_2 
FROM [FourClass_100] AS [ADS]), 
[DT_node_data_94] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Estimator] AS [Estimator] 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 367 AS count, 3 AS depth, 2 AS parent_id, -0.013990091852322525 AS [Estimator] UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 36 AS count, 3 AS depth, 2 AS parent_id, 0.8386133268033926 AS [Estimator] UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 262 AS count, 3 AS depth, 5 AS parent_id, -0.40528418202591604 AS [Estimator] UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 7 AS count, 3 AS depth, 5 AS parent_id, 1.3267167135863773 AS [Estimator] UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 53 AS count, 3 AS depth, 9 AS parent_id, -0.49405786140502933 AS [Estimator] UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 13 AS count, 3 AS depth, 9 AS parent_id, 1.0740848120583266 AS [Estimator] UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 27 AS count, 3 AS depth, 12 AS parent_id, 1.2208262539134644 AS [Estimator] UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 35 AS count, 3 AS depth, 12 AS parent_id, 0.2858099279333212 AS [Estimator]) AS [Values]), 
[DT_Output_94] AS 
(SELECT [DT_node_lookup_94].[KEY] AS [KEY], [DT_node_lookup_94].node_id_2 AS node_id_2, [DT_node_data_94].node_id AS node_id, [DT_node_data_94].feature AS feature, [DT_node_data_94].threshold AS threshold, [DT_node_data_94].count AS count, [DT_node_data_94].depth AS depth, [DT_node_data_94].parent_id AS parent_id, [DT_node_data_94].[Estimator] AS [Estimator] 
FROM [DT_node_lookup_94] LEFT OUTER JOIN [DT_node_data_94] ON [DT_node_lookup_94].node_id_2 = [DT_node_data_94].node_id), 
[GB_Tree_23_2] AS 
(SELECT [DT_Output_94].[KEY] AS [KEY], 0.0 AS [Score_0], 0.0 AS [Score_1], [DT_Output_94].[Estimator] AS [Score_2], 0.0 AS [Score_3] 
FROM [DT_Output_94]), 
[DT_node_lookup_95] AS 
(SELECT [ADS].[KEY] AS [KEY], CASE WHEN ([ADS].[Feature_68] <= -1.4168505668640137) THEN CASE WHEN ([ADS].[Feature_86] <= -5.408907890319824) THEN CASE WHEN ([ADS].[Feature_91] <= -3.5039591789245605) THEN 3 ELSE 4 END ELSE CASE WHEN ([ADS].[Feature_32] <= -2.309772491455078) THEN 6 ELSE 7 END END ELSE CASE WHEN ([ADS].[Feature_99] <= -0.11296220123767853) THEN CASE WHEN ([ADS].[Feature_76] <= 1.6919770240783691) THEN 10 ELSE 11 END ELSE CASE WHEN ([ADS].[Feature_17] <= 6.499017715454102) THEN 13 ELSE 14 END END END AS node_id_2 
FROM [FourClass_100] AS [ADS]), 
[DT_node_data_95] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Estimator] AS [Estimator] 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 8 AS count, 3 AS depth, 2 AS parent_id, -0.8667964009508674 AS [Estimator] UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 18 AS count, 3 AS depth, 2 AS parent_id, 1.0298692675428713 AS [Estimator] UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 3 AS depth, 5 AS parent_id, 1.6699408176287756 AS [Estimator] UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 307 AS count, 3 AS depth, 5 AS parent_id, -0.3516752954092626 AS [Estimator] UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 240 AS count, 3 AS depth, 9 AS parent_id, 0.26182921935095177 AS [Estimator] UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 12 AS count, 3 AS depth, 9 AS parent_id, 1.408872766723086 AS [Estimator] UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 201 AS count, 3 AS depth, 12 AS parent_id, -0.23760314508197455 AS [Estimator] UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 12 AS count, 3 AS depth, 12 AS parent_id, 1.0439683803412103 AS [Estimator]) AS [Values]), 
[DT_Output_95] AS 
(SELECT [DT_node_lookup_95].[KEY] AS [KEY], [DT_node_lookup_95].node_id_2 AS node_id_2, [DT_node_data_95].node_id AS node_id, [DT_node_data_95].feature AS feature, [DT_node_data_95].threshold AS threshold, [DT_node_data_95].count AS count, [DT_node_data_95].depth AS depth, [DT_node_data_95].parent_id AS parent_id, [DT_node_data_95].[Estimator] AS [Estimator] 
FROM [DT_node_lookup_95] LEFT OUTER JOIN [DT_node_data_95] ON [DT_node_lookup_95].node_id_2 = [DT_node_data_95].node_id), 
[GB_Tree_23_3] AS 
(SELECT [DT_Output_95].[KEY] AS [KEY], 0.0 AS [Score_0], 0.0 AS [Score_1], 0.0 AS [Score_2], [DT_Output_95].[Estimator] AS [Score_3] 
FROM [DT_Output_95]), 
[DT_node_lookup_96] AS 
(SELECT [ADS].[KEY] AS [KEY], CASE WHEN ([ADS].[Feature_25] <= -4.162811756134033) THEN CASE WHEN ([ADS].[Feature_12] <= 2.465752601623535) THEN CASE WHEN ([ADS].[Feature_71] <= 9.061615943908691) THEN 3 ELSE 4 END ELSE CASE WHEN ([ADS].[Feature_26] <= -2.0530636310577393) THEN 6 ELSE 7 END END ELSE CASE WHEN ([ADS].[Feature_17] <= -0.11026465892791748) THEN CASE WHEN ([ADS].[Feature_24] <= -1.1189162731170654) THEN 10 ELSE 11 END ELSE CASE WHEN ([ADS].[Feature_51] <= 2.065941572189331) THEN 13 ELSE 14 END END END AS node_id_2 
FROM [FourClass_100] AS [ADS]), 
[DT_node_data_96] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Estimator] AS [Estimator] 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 110 AS count, 3 AS depth, 2 AS parent_id, -0.7262300915323383 AS [Estimator] UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 3 AS depth, 2 AS parent_id, 1.4931072512894654 AS [Estimator] UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 5 AS parent_id, 1.6102068225232644 AS [Estimator] UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 5 AS parent_id, 2.214813163419126 AS [Estimator] UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 109 AS count, 3 AS depth, 9 AS parent_id, 0.6081352266478708 AS [Estimator] UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 185 AS count, 3 AS depth, 9 AS parent_id, 0.0773956366774554 AS [Estimator] UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 292 AS count, 3 AS depth, 12 AS parent_id, -0.35083269056565647 AS [Estimator] UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 100 AS count, 3 AS depth, 12 AS parent_id, 0.37258063179453266 AS [Estimator]) AS [Values]), 
[DT_Output_96] AS 
(SELECT [DT_node_lookup_96].[KEY] AS [KEY], [DT_node_lookup_96].node_id_2 AS node_id_2, [DT_node_data_96].node_id AS node_id, [DT_node_data_96].feature AS feature, [DT_node_data_96].threshold AS threshold, [DT_node_data_96].count AS count, [DT_node_data_96].depth AS depth, [DT_node_data_96].parent_id AS parent_id, [DT_node_data_96].[Estimator] AS [Estimator] 
FROM [DT_node_lookup_96] LEFT OUTER JOIN [DT_node_data_96] ON [DT_node_lookup_96].node_id_2 = [DT_node_data_96].node_id), 
[GB_Tree_24_0] AS 
(SELECT [DT_Output_96].[KEY] AS [KEY], [DT_Output_96].[Estimator] AS [Score_0], 0.0 AS [Score_1], 0.0 AS [Score_2], 0.0 AS [Score_3] 
FROM [DT_Output_96]), 
[DT_node_lookup_97] AS 
(SELECT [ADS].[KEY] AS [KEY], CASE WHEN ([ADS].[Feature_27] <= -4.661823749542236) THEN CASE WHEN ([ADS].[Feature_48] <= -7.682879447937012) THEN CASE WHEN ([ADS].[Feature_43] <= 1.0558172464370728) THEN 3 ELSE 4 END ELSE CASE WHEN ([ADS].[Feature_62] <= 8.759749412536621) THEN 6 ELSE 7 END END ELSE CASE WHEN ([ADS].[Feature_24] <= 4.180177688598633) THEN CASE WHEN ([ADS].[Feature_18] <= 2.1741795539855957) THEN 10 ELSE 11 END ELSE CASE WHEN ([ADS].[Feature_82] <= -0.8343662023544312) THEN 13 ELSE 14 END END END AS node_id_2 
FROM [FourClass_100] AS [ADS]), 
[DT_node_data_97] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Estimator] AS [Estimator] 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 3 AS depth, 2 AS parent_id, -0.8946395448588905 AS [Estimator] UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 3 AS depth, 2 AS parent_id, 1.7006777820774994 AS [Estimator] UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 98 AS count, 3 AS depth, 5 AS parent_id, -0.8018632225650214 AS [Estimator] UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 5 AS parent_id, 1.5245731097160335 AS [Estimator] UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 584 AS count, 3 AS depth, 9 AS parent_id, -0.04355771566973336 AS [Estimator] UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 7 AS count, 3 AS depth, 9 AS parent_id, 1.4149170584871273 AS [Estimator] UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 20 AS count, 3 AS depth, 12 AS parent_id, 1.1850281809288068 AS [Estimator] UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 85 AS count, 3 AS depth, 12 AS parent_id, 0.28890592038298485 AS [Estimator]) AS [Values]), 
[DT_Output_97] AS 
(SELECT [DT_node_lookup_97].[KEY] AS [KEY], [DT_node_lookup_97].node_id_2 AS node_id_2, [DT_node_data_97].node_id AS node_id, [DT_node_data_97].feature AS feature, [DT_node_data_97].threshold AS threshold, [DT_node_data_97].count AS count, [DT_node_data_97].depth AS depth, [DT_node_data_97].parent_id AS parent_id, [DT_node_data_97].[Estimator] AS [Estimator] 
FROM [DT_node_lookup_97] LEFT OUTER JOIN [DT_node_data_97] ON [DT_node_lookup_97].node_id_2 = [DT_node_data_97].node_id), 
[GB_Tree_24_1] AS 
(SELECT [DT_Output_97].[KEY] AS [KEY], 0.0 AS [Score_0], [DT_Output_97].[Estimator] AS [Score_1], 0.0 AS [Score_2], 0.0 AS [Score_3] 
FROM [DT_Output_97]), 
[DT_node_lookup_98] AS 
(SELECT [ADS].[KEY] AS [KEY], CASE WHEN ([ADS].[Feature_38] <= -3.5714943408966064) THEN CASE WHEN ([ADS].[Feature_86] <= -7.410419464111328) THEN CASE WHEN ([ADS].[Feature_84] <= 0.18111763894557953) THEN 3 ELSE 4 END ELSE CASE WHEN ([ADS].[Feature_8] <= 9.685890197753906) THEN 6 ELSE 7 END END ELSE CASE WHEN ([ADS].[Feature_61] <= -0.09108863025903702) THEN CASE WHEN ([ADS].[Feature_48] <= -2.0118606090545654) THEN 10 ELSE 11 END ELSE CASE WHEN ([ADS].[Feature_56] <= 2.9546589851379395) THEN 13 ELSE 14 END END END AS node_id_2 
FROM [FourClass_100] AS [ADS]), 
[DT_node_data_98] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Estimator] AS [Estimator] 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS count, 3 AS depth, 2 AS parent_id, 1.2152808754649171 AS [Estimator] UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 2 AS parent_id, -0.8602728052553889 AS [Estimator] UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 130 AS count, 3 AS depth, 5 AS parent_id, -0.6778193854248377 AS [Estimator] UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 3 AS depth, 5 AS parent_id, 1.2552645405724618 AS [Estimator] UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 142 AS count, 3 AS depth, 9 AS parent_id, -0.12915112734890538 AS [Estimator] UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 203 AS count, 3 AS depth, 9 AS parent_id, 0.4817553808311004 AS [Estimator] UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 236 AS count, 3 AS depth, 12 AS parent_id, -0.3334301100967845 AS [Estimator] UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 82 AS count, 3 AS depth, 12 AS parent_id, 0.3079227298719516 AS [Estimator]) AS [Values]), 
[DT_Output_98] AS 
(SELECT [DT_node_lookup_98].[KEY] AS [KEY], [DT_node_lookup_98].node_id_2 AS node_id_2, [DT_node_data_98].node_id AS node_id, [DT_node_data_98].feature AS feature, [DT_node_data_98].threshold AS threshold, [DT_node_data_98].count AS count, [DT_node_data_98].depth AS depth, [DT_node_data_98].parent_id AS parent_id, [DT_node_data_98].[Estimator] AS [Estimator] 
FROM [DT_node_lookup_98] LEFT OUTER JOIN [DT_node_data_98] ON [DT_node_lookup_98].node_id_2 = [DT_node_data_98].node_id), 
[GB_Tree_24_2] AS 
(SELECT [DT_Output_98].[KEY] AS [KEY], 0.0 AS [Score_0], 0.0 AS [Score_1], [DT_Output_98].[Estimator] AS [Score_2], 0.0 AS [Score_3] 
FROM [DT_Output_98]), 
[DT_node_lookup_99] AS 
(SELECT [ADS].[KEY] AS [KEY], CASE WHEN ([ADS].[Feature_38] <= 0.9559833407402039) THEN CASE WHEN ([ADS].[Feature_63] <= 1.473060131072998) THEN CASE WHEN ([ADS].[Feature_39] <= -6.443779468536377) THEN 3 ELSE 4 END ELSE CASE WHEN ([ADS].[Feature_90] <= -6.5131611824035645) THEN 6 ELSE 7 END END ELSE CASE WHEN ([ADS].[Feature_50] <= -4.997264385223389) THEN CASE WHEN ([ADS].[Feature_24] <= -3.159062385559082) THEN 10 ELSE 11 END ELSE CASE WHEN ([ADS].[Feature_91] <= 8.390254020690918) THEN 13 ELSE 14 END END END AS node_id_2 
FROM [FourClass_100] AS [ADS]), 
[DT_node_data_99] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Estimator] AS [Estimator] 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 25 AS count, 3 AS depth, 2 AS parent_id, 0.9300011489676842 AS [Estimator] UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 416 AS count, 3 AS depth, 2 AS parent_id, -0.012078663905541765 AS [Estimator] UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 17 AS count, 3 AS depth, 5 AS parent_id, 1.3426949765622416 AS [Estimator] UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 24 AS count, 3 AS depth, 5 AS parent_id, 0.3845697011000395 AS [Estimator] UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 8 AS count, 3 AS depth, 9 AS parent_id, 1.568811285903864 AS [Estimator] UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 21 AS count, 3 AS depth, 9 AS parent_id, 0.04257045796002531 AS [Estimator] UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 284 AS count, 3 AS depth, 12 AS parent_id, -0.3825607660632373 AS [Estimator] UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS count, 3 AS depth, 12 AS parent_id, 1.1930969855283295 AS [Estimator]) AS [Values]), 
[DT_Output_99] AS 
(SELECT [DT_node_lookup_99].[KEY] AS [KEY], [DT_node_lookup_99].node_id_2 AS node_id_2, [DT_node_data_99].node_id AS node_id, [DT_node_data_99].feature AS feature, [DT_node_data_99].threshold AS threshold, [DT_node_data_99].count AS count, [DT_node_data_99].depth AS depth, [DT_node_data_99].parent_id AS parent_id, [DT_node_data_99].[Estimator] AS [Estimator] 
FROM [DT_node_lookup_99] LEFT OUTER JOIN [DT_node_data_99] ON [DT_node_lookup_99].node_id_2 = [DT_node_data_99].node_id), 
[GB_Tree_24_3] AS 
(SELECT [DT_Output_99].[KEY] AS [KEY], 0.0 AS [Score_0], 0.0 AS [Score_1], 0.0 AS [Score_2], [DT_Output_99].[Estimator] AS [Score_3] 
FROM [DT_Output_99]), 
[DT_node_lookup_100] AS 
(SELECT [ADS].[KEY] AS [KEY], CASE WHEN ([ADS].[Feature_2] <= 0.03812577947974205) THEN CASE WHEN ([ADS].[Feature_64] <= -0.567909836769104) THEN CASE WHEN ([ADS].[Feature_64] <= -0.9012460708618164) THEN 3 ELSE 4 END ELSE CASE WHEN ([ADS].[Feature_8] <= -8.913280487060547) THEN 6 ELSE 7 END END ELSE CASE WHEN ([ADS].[Feature_95] <= 2.91953706741333) THEN CASE WHEN ([ADS].[Feature_41] <= -2.03037166595459) THEN 10 ELSE 11 END ELSE CASE WHEN ([ADS].[Feature_17] <= -2.3874473571777344) THEN 13 ELSE 14 END END END AS node_id_2 
FROM [FourClass_100] AS [ADS]), 
[DT_node_data_100] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Estimator] AS [Estimator] 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 176 AS count, 3 AS depth, 2 AS parent_id, 0.36902969871400637 AS [Estimator] UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 10 AS count, 3 AS depth, 2 AS parent_id, 1.5455035328548352 AS [Estimator] UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS count, 3 AS depth, 5 AS parent_id, 1.6646184437104459 AS [Estimator] UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 214 AS count, 3 AS depth, 5 AS parent_id, -0.2053658683024591 AS [Estimator] UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 8 AS count, 3 AS depth, 9 AS parent_id, 1.095297680800071 AS [Estimator] UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 321 AS count, 3 AS depth, 9 AS parent_id, -0.3785536474474733 AS [Estimator] UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 24 AS count, 3 AS depth, 12 AS parent_id, 1.0275474432720673 AS [Estimator] UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 42 AS count, 3 AS depth, 12 AS parent_id, -0.22850800941165728 AS [Estimator]) AS [Values]), 
[DT_Output_100] AS 
(SELECT [DT_node_lookup_100].[KEY] AS [KEY], [DT_node_lookup_100].node_id_2 AS node_id_2, [DT_node_data_100].node_id AS node_id, [DT_node_data_100].feature AS feature, [DT_node_data_100].threshold AS threshold, [DT_node_data_100].count AS count, [DT_node_data_100].depth AS depth, [DT_node_data_100].parent_id AS parent_id, [DT_node_data_100].[Estimator] AS [Estimator] 
FROM [DT_node_lookup_100] LEFT OUTER JOIN [DT_node_data_100] ON [DT_node_lookup_100].node_id_2 = [DT_node_data_100].node_id), 
[GB_Tree_25_0] AS 
(SELECT [DT_Output_100].[KEY] AS [KEY], [DT_Output_100].[Estimator] AS [Score_0], 0.0 AS [Score_1], 0.0 AS [Score_2], 0.0 AS [Score_3] 
FROM [DT_Output_100]), 
[DT_node_lookup_101] AS 
(SELECT [ADS].[KEY] AS [KEY], CASE WHEN ([ADS].[Feature_31] <= -2.747117519378662) THEN CASE WHEN ([ADS].[Feature_52] <= -8.677623748779297) THEN CASE WHEN ([ADS].[Feature_86] <= -4.705487251281738) THEN 3 ELSE 4 END ELSE CASE WHEN ([ADS].[Feature_15] <= -4.593738555908203) THEN 6 ELSE 7 END END ELSE CASE WHEN ([ADS].[Feature_20] <= 1.745971918106079) THEN CASE WHEN ([ADS].[Feature_8] <= 7.568456649780273) THEN 10 ELSE 11 END ELSE CASE WHEN ([ADS].[Feature_5] <= 0.03423710912466049) THEN 13 ELSE 14 END END END AS node_id_2 
FROM [FourClass_100] AS [ADS]), 
[DT_node_data_101] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Estimator] AS [Estimator] 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 3 AS depth, 2 AS parent_id, -0.7992395198141827 AS [Estimator] UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS count, 3 AS depth, 2 AS parent_id, 1.8178087309960818 AS [Estimator] UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 29 AS count, 3 AS depth, 5 AS parent_id, 0.5024464950487357 AS [Estimator] UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 197 AS count, 3 AS depth, 5 AS parent_id, -0.530927685665634 AS [Estimator] UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 526 AS count, 3 AS depth, 9 AS parent_id, 0.020216073152391434 AS [Estimator] UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 17 AS count, 3 AS depth, 9 AS parent_id, 0.9906992366886581 AS [Estimator] UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 12 AS count, 3 AS depth, 12 AS parent_id, 0.3480615860705648 AS [Estimator] UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 12 AS count, 3 AS depth, 12 AS parent_id, 1.4386540067340243 AS [Estimator]) AS [Values]), 
[DT_Output_101] AS 
(SELECT [DT_node_lookup_101].[KEY] AS [KEY], [DT_node_lookup_101].node_id_2 AS node_id_2, [DT_node_data_101].node_id AS node_id, [DT_node_data_101].feature AS feature, [DT_node_data_101].threshold AS threshold, [DT_node_data_101].count AS count, [DT_node_data_101].depth AS depth, [DT_node_data_101].parent_id AS parent_id, [DT_node_data_101].[Estimator] AS [Estimator] 
FROM [DT_node_lookup_101] LEFT OUTER JOIN [DT_node_data_101] ON [DT_node_lookup_101].node_id_2 = [DT_node_data_101].node_id), 
[GB_Tree_25_1] AS 
(SELECT [DT_Output_101].[KEY] AS [KEY], 0.0 AS [Score_0], [DT_Output_101].[Estimator] AS [Score_1], 0.0 AS [Score_2], 0.0 AS [Score_3] 
FROM [DT_Output_101]), 
[DT_node_lookup_102] AS 
(SELECT [ADS].[KEY] AS [KEY], CASE WHEN ([ADS].[Feature_15] <= 0.27006494998931885) THEN CASE WHEN ([ADS].[Feature_39] <= 4.4229631423950195) THEN CASE WHEN ([ADS].[Feature_21] <= 2.871817111968994) THEN 3 ELSE 4 END ELSE CASE WHEN ([ADS].[Feature_76] <= -1.8607124090194702) THEN 6 ELSE 7 END END ELSE CASE WHEN ([ADS].[Feature_43] <= -6.083803653717041) THEN CASE WHEN ([ADS].[Feature_54] <= -0.34998515248298645) THEN 10 ELSE 11 END ELSE CASE WHEN ([ADS].[Feature_35] <= -0.894688606262207) THEN 13 ELSE 14 END END END AS node_id_2 
FROM [FourClass_100] AS [ADS]), 
[DT_node_data_102] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Estimator] AS [Estimator] 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 273 AS count, 3 AS depth, 2 AS parent_id, 0.08707828260655659 AS [Estimator] UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 86 AS count, 3 AS depth, 2 AS parent_id, 0.6860877789311149 AS [Estimator] UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 3 AS depth, 5 AS parent_id, 1.7110194136727752 AS [Estimator] UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 52 AS count, 3 AS depth, 5 AS parent_id, -0.7670283842806135 AS [Estimator] UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 9 AS count, 3 AS depth, 9 AS parent_id, 1.4572109287109027 AS [Estimator] UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 17 AS count, 3 AS depth, 9 AS parent_id, -0.13571864759754498 AS [Estimator] UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 59 AS count, 3 AS depth, 12 AS parent_id, 0.29899352530144785 AS [Estimator] UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 301 AS count, 3 AS depth, 12 AS parent_id, -0.39248162999211134 AS [Estimator]) AS [Values]), 
[DT_Output_102] AS 
(SELECT [DT_node_lookup_102].[KEY] AS [KEY], [DT_node_lookup_102].node_id_2 AS node_id_2, [DT_node_data_102].node_id AS node_id, [DT_node_data_102].feature AS feature, [DT_node_data_102].threshold AS threshold, [DT_node_data_102].count AS count, [DT_node_data_102].depth AS depth, [DT_node_data_102].parent_id AS parent_id, [DT_node_data_102].[Estimator] AS [Estimator] 
FROM [DT_node_lookup_102] LEFT OUTER JOIN [DT_node_data_102] ON [DT_node_lookup_102].node_id_2 = [DT_node_data_102].node_id), 
[GB_Tree_25_2] AS 
(SELECT [DT_Output_102].[KEY] AS [KEY], 0.0 AS [Score_0], 0.0 AS [Score_1], [DT_Output_102].[Estimator] AS [Score_2], 0.0 AS [Score_3] 
FROM [DT_Output_102]), 
[DT_node_lookup_103] AS 
(SELECT [ADS].[KEY] AS [KEY], CASE WHEN ([ADS].[Feature_67] <= -2.591644287109375) THEN CASE WHEN ([ADS].[Feature_64] <= -3.425919771194458) THEN 2 ELSE CASE WHEN ([ADS].[Feature_78] <= 0.44320833683013916) THEN 4 ELSE 5 END END ELSE CASE WHEN ([ADS].[Feature_15] <= 7.815037727355957) THEN CASE WHEN ([ADS].[Feature_99] <= 2.3517870903015137) THEN 8 ELSE 9 END ELSE CASE WHEN ([ADS].[Feature_74] <= -0.8652825355529785) THEN 11 ELSE 12 END END END AS node_id_2 
FROM [FourClass_100] AS [ADS]), 
[DT_node_data_103] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Estimator] AS [Estimator] 
FROM (SELECT 2 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 2 AS depth, 1 AS parent_id, 1.9419962214967679 AS [Estimator] UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 3 AS depth, 3 AS parent_id, 1.458764754537461 AS [Estimator] UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 3 AS parent_id, 1.1864900102961917 AS [Estimator] UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 575 AS count, 3 AS depth, 7 AS parent_id, 0.05396145692569492 AS [Estimator] UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 184 AS count, 3 AS depth, 7 AS parent_id, -0.4284620057737764 AS [Estimator] UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 12 AS count, 3 AS depth, 10 AS parent_id, -0.5588987431097999 AS [Estimator] UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 25 AS count, 3 AS depth, 10 AS parent_id, 1.0360840208611009 AS [Estimator]) AS [Values]), 
[DT_Output_103] AS 
(SELECT [DT_node_lookup_103].[KEY] AS [KEY], [DT_node_lookup_103].node_id_2 AS node_id_2, [DT_node_data_103].node_id AS node_id, [DT_node_data_103].feature AS feature, [DT_node_data_103].threshold AS threshold, [DT_node_data_103].count AS count, [DT_node_data_103].depth AS depth, [DT_node_data_103].parent_id AS parent_id, [DT_node_data_103].[Estimator] AS [Estimator] 
FROM [DT_node_lookup_103] LEFT OUTER JOIN [DT_node_data_103] ON [DT_node_lookup_103].node_id_2 = [DT_node_data_103].node_id), 
[GB_Tree_25_3] AS 
(SELECT [DT_Output_103].[KEY] AS [KEY], 0.0 AS [Score_0], 0.0 AS [Score_1], 0.0 AS [Score_2], [DT_Output_103].[Estimator] AS [Score_3] 
FROM [DT_Output_103]), 
[DT_node_lookup_104] AS 
(SELECT [ADS].[KEY] AS [KEY], CASE WHEN ([ADS].[Feature_9] <= 10.976364135742188) THEN CASE WHEN ([ADS].[Feature_25] <= -4.162811756134033) THEN CASE WHEN ([ADS].[Feature_12] <= 2.465752601623535) THEN 3 ELSE 4 END ELSE CASE WHEN ([ADS].[Feature_47] <= 0.7431588768959045) THEN 6 ELSE 7 END END ELSE CASE WHEN ([ADS].[Feature_37] <= -0.2124858945608139) THEN CASE WHEN ([ADS].[Feature_15] <= 0.9969580173492432) THEN 10 ELSE 11 END ELSE 12 END END AS node_id_2 
FROM [FourClass_100] AS [ADS]), 
[DT_node_data_104] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Estimator] AS [Estimator] 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 110 AS count, 3 AS depth, 2 AS parent_id, -0.6967324746817106 AS [Estimator] UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 3 AS depth, 2 AS parent_id, 1.6846972364710977 AS [Estimator] UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 382 AS count, 3 AS depth, 5 AS parent_id, -0.138607771069493 AS [Estimator] UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 298 AS count, 3 AS depth, 5 AS parent_id, 0.2619819826881985 AS [Estimator] UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS count, 3 AS depth, 9 AS parent_id, 1.1454350682609817 AS [Estimator] UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 3 AS depth, 9 AS parent_id, 1.6046214697205798 AS [Estimator] UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 2 AS depth, 8 AS parent_id, -0.8322272733272437 AS [Estimator]) AS [Values]), 
[DT_Output_104] AS 
(SELECT [DT_node_lookup_104].[KEY] AS [KEY], [DT_node_lookup_104].node_id_2 AS node_id_2, [DT_node_data_104].node_id AS node_id, [DT_node_data_104].feature AS feature, [DT_node_data_104].threshold AS threshold, [DT_node_data_104].count AS count, [DT_node_data_104].depth AS depth, [DT_node_data_104].parent_id AS parent_id, [DT_node_data_104].[Estimator] AS [Estimator] 
FROM [DT_node_lookup_104] LEFT OUTER JOIN [DT_node_data_104] ON [DT_node_lookup_104].node_id_2 = [DT_node_data_104].node_id), 
[GB_Tree_26_0] AS 
(SELECT [DT_Output_104].[KEY] AS [KEY], [DT_Output_104].[Estimator] AS [Score_0], 0.0 AS [Score_1], 0.0 AS [Score_2], 0.0 AS [Score_3] 
FROM [DT_Output_104]), 
[DT_node_lookup_105] AS 
(SELECT [ADS].[KEY] AS [KEY], CASE WHEN ([ADS].[Feature_64] <= -1.0288598537445068) THEN CASE WHEN ([ADS].[Feature_42] <= -4.898281097412109) THEN CASE WHEN ([ADS].[Feature_2] <= -0.6547828912734985) THEN 3 ELSE 4 END ELSE CASE WHEN ([ADS].[Feature_13] <= 0.6647941470146179) THEN 6 ELSE 7 END END ELSE CASE WHEN ([ADS].[Feature_63] <= 2.1548142433166504) THEN CASE WHEN ([ADS].[Feature_74] <= -8.870262145996094) THEN 10 ELSE 11 END ELSE CASE WHEN ([ADS].[Feature_28] <= 1.8534419536590576) THEN 13 ELSE 14 END END END AS node_id_2 
FROM [FourClass_100] AS [ADS]), 
[DT_node_data_105] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Estimator] AS [Estimator] 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 14 AS count, 3 AS depth, 2 AS parent_id, -0.34780769259137456 AS [Estimator] UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 31 AS count, 3 AS depth, 2 AS parent_id, 1.0908890148552328 AS [Estimator] UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 152 AS count, 3 AS depth, 5 AS parent_id, -0.27531065313509684 AS [Estimator] UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 141 AS count, 3 AS depth, 5 AS parent_id, 0.39580497511401896 AS [Estimator] UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 6 AS count, 3 AS depth, 9 AS parent_id, 1.3137576832731144 AS [Estimator] UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 448 AS count, 3 AS depth, 9 AS parent_id, -0.2249581802641344 AS [Estimator] UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS count, 3 AS depth, 12 AS parent_id, 1.947058929549239 AS [Estimator] UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 3 AS depth, 12 AS parent_id, -0.8657289628553871 AS [Estimator]) AS [Values]), 
[DT_Output_105] AS 
(SELECT [DT_node_lookup_105].[KEY] AS [KEY], [DT_node_lookup_105].node_id_2 AS node_id_2, [DT_node_data_105].node_id AS node_id, [DT_node_data_105].feature AS feature, [DT_node_data_105].threshold AS threshold, [DT_node_data_105].count AS count, [DT_node_data_105].depth AS depth, [DT_node_data_105].parent_id AS parent_id, [DT_node_data_105].[Estimator] AS [Estimator] 
FROM [DT_node_lookup_105] LEFT OUTER JOIN [DT_node_data_105] ON [DT_node_lookup_105].node_id_2 = [DT_node_data_105].node_id), 
[GB_Tree_26_1] AS 
(SELECT [DT_Output_105].[KEY] AS [KEY], 0.0 AS [Score_0], [DT_Output_105].[Estimator] AS [Score_1], 0.0 AS [Score_2], 0.0 AS [Score_3] 
FROM [DT_Output_105]), 
[DT_node_lookup_106] AS 
(SELECT [ADS].[KEY] AS [KEY], CASE WHEN ([ADS].[Feature_66] <= 0.0550847128033638) THEN CASE WHEN ([ADS].[Feature_87] <= 9.528886795043945) THEN CASE WHEN ([ADS].[Feature_76] <= -2.4822869300842285) THEN 3 ELSE 4 END ELSE CASE WHEN ([ADS].[Feature_77] <= -0.7981784343719482) THEN 6 ELSE 7 END END ELSE CASE WHEN ([ADS].[Feature_13] <= -0.06421792507171631) THEN CASE WHEN ([ADS].[Feature_24] <= 1.5342411994934082) THEN 10 ELSE 11 END ELSE CASE WHEN ([ADS].[Feature_86] <= -6.677536964416504) THEN 13 ELSE 14 END END END AS node_id_2 
FROM [FourClass_100] AS [ADS]), 
[DT_node_data_106] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Estimator] AS [Estimator] 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 3 AS depth, 2 AS parent_id, 1.6831081502617808 AS [Estimator] UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 409 AS count, 3 AS depth, 2 AS parent_id, -0.22370415805028573 AS [Estimator] UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 5 AS parent_id, 1.9817353061513154 AS [Estimator] UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 3 AS depth, 5 AS parent_id, 1.3500738564970354 AS [Estimator] UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 93 AS count, 3 AS depth, 9 AS parent_id, 0.08446660195760554 AS [Estimator] UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 77 AS count, 3 AS depth, 9 AS parent_id, 0.8174240823160595 AS [Estimator] UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 9 AS count, 3 AS depth, 12 AS parent_id, 1.2470981794716054 AS [Estimator] UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 205 AS count, 3 AS depth, 12 AS parent_id, -0.19790787868754134 AS [Estimator]) AS [Values]), 
[DT_Output_106] AS 
(SELECT [DT_node_lookup_106].[KEY] AS [KEY], [DT_node_lookup_106].node_id_2 AS node_id_2, [DT_node_data_106].node_id AS node_id, [DT_node_data_106].feature AS feature, [DT_node_data_106].threshold AS threshold, [DT_node_data_106].count AS count, [DT_node_data_106].depth AS depth, [DT_node_data_106].parent_id AS parent_id, [DT_node_data_106].[Estimator] AS [Estimator] 
FROM [DT_node_lookup_106] LEFT OUTER JOIN [DT_node_data_106] ON [DT_node_lookup_106].node_id_2 = [DT_node_data_106].node_id), 
[GB_Tree_26_2] AS 
(SELECT [DT_Output_106].[KEY] AS [KEY], 0.0 AS [Score_0], 0.0 AS [Score_1], [DT_Output_106].[Estimator] AS [Score_2], 0.0 AS [Score_3] 
FROM [DT_Output_106]), 
[DT_node_lookup_107] AS 
(SELECT [ADS].[KEY] AS [KEY], CASE WHEN ([ADS].[Feature_84] <= -5.666316986083984) THEN CASE WHEN ([ADS].[Feature_38] <= 2.423567295074463) THEN CASE WHEN ([ADS].[Feature_91] <= 2.235710382461548) THEN 3 ELSE 4 END ELSE CASE WHEN ([ADS].[Feature_86] <= -4.798142433166504) THEN 6 ELSE 7 END END ELSE CASE WHEN ([ADS].[Feature_64] <= -1.3026608228683472) THEN CASE WHEN ([ADS].[Feature_57] <= 7.3821001052856445) THEN 10 ELSE 11 END ELSE CASE WHEN ([ADS].[Feature_9] <= 1.1289772987365723) THEN 13 ELSE 14 END END END AS node_id_2 
FROM [FourClass_100] AS [ADS]), 
[DT_node_data_107] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Estimator] AS [Estimator] 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 36 AS count, 3 AS depth, 2 AS parent_id, 0.473946216729604 AS [Estimator] UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 16 AS count, 3 AS depth, 2 AS parent_id, 1.2931261979353952 AS [Estimator] UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 5 AS parent_id, 1.1228090953725114 AS [Estimator] UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 19 AS count, 3 AS depth, 5 AS parent_id, -0.9065121089053368 AS [Estimator] UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 281 AS count, 3 AS depth, 9 AS parent_id, -0.41280881373509964 AS [Estimator] UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 10 AS count, 3 AS depth, 9 AS parent_id, 0.9613924995188664 AS [Estimator] UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 265 AS count, 3 AS depth, 12 AS parent_id, 0.2728821690639807 AS [Estimator] UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 172 AS count, 3 AS depth, 12 AS parent_id, -0.23576967337072782 AS [Estimator]) AS [Values]), 
[DT_Output_107] AS 
(SELECT [DT_node_lookup_107].[KEY] AS [KEY], [DT_node_lookup_107].node_id_2 AS node_id_2, [DT_node_data_107].node_id AS node_id, [DT_node_data_107].feature AS feature, [DT_node_data_107].threshold AS threshold, [DT_node_data_107].count AS count, [DT_node_data_107].depth AS depth, [DT_node_data_107].parent_id AS parent_id, [DT_node_data_107].[Estimator] AS [Estimator] 
FROM [DT_node_lookup_107] LEFT OUTER JOIN [DT_node_data_107] ON [DT_node_lookup_107].node_id_2 = [DT_node_data_107].node_id), 
[GB_Tree_26_3] AS 
(SELECT [DT_Output_107].[KEY] AS [KEY], 0.0 AS [Score_0], 0.0 AS [Score_1], 0.0 AS [Score_2], [DT_Output_107].[Estimator] AS [Score_3] 
FROM [DT_Output_107]), 
[DT_node_lookup_108] AS 
(SELECT [ADS].[KEY] AS [KEY], CASE WHEN ([ADS].[Feature_53] <= 2.125941753387451) THEN CASE WHEN ([ADS].[Feature_74] <= -3.5539331436157227) THEN CASE WHEN ([ADS].[Feature_2] <= -0.7828220725059509) THEN 3 ELSE 4 END ELSE CASE WHEN ([ADS].[Feature_27] <= -3.160187244415283) THEN 6 ELSE 7 END END ELSE CASE WHEN ([ADS].[Feature_86] <= 2.3852009773254395) THEN CASE WHEN ([ADS].[Feature_47] <= 9.420910835266113) THEN 10 ELSE 11 END ELSE CASE WHEN ([ADS].[Feature_40] <= 2.1129250526428223) THEN 13 ELSE 14 END END END AS node_id_2 
FROM [FourClass_100] AS [ADS]), 
[DT_node_data_108] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Estimator] AS [Estimator] 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 52 AS count, 3 AS depth, 2 AS parent_id, 0.894838770185698 AS [Estimator] UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 57 AS count, 3 AS depth, 2 AS parent_id, 0.08031295330555388 AS [Estimator] UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 96 AS count, 3 AS depth, 5 AS parent_id, 0.4351603443291382 AS [Estimator] UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 336 AS count, 3 AS depth, 5 AS parent_id, -0.15056235660499986 AS [Estimator] UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 179 AS count, 3 AS depth, 9 AS parent_id, -0.5785788371617074 AS [Estimator] UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS count, 3 AS depth, 9 AS parent_id, 1.0021189448659675 AS [Estimator] UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 56 AS count, 3 AS depth, 12 AS parent_id, -0.2644458050439971 AS [Estimator] UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 20 AS count, 3 AS depth, 12 AS parent_id, 0.9732056328218539 AS [Estimator]) AS [Values]), 
[DT_Output_108] AS 
(SELECT [DT_node_lookup_108].[KEY] AS [KEY], [DT_node_lookup_108].node_id_2 AS node_id_2, [DT_node_data_108].node_id AS node_id, [DT_node_data_108].feature AS feature, [DT_node_data_108].threshold AS threshold, [DT_node_data_108].count AS count, [DT_node_data_108].depth AS depth, [DT_node_data_108].parent_id AS parent_id, [DT_node_data_108].[Estimator] AS [Estimator] 
FROM [DT_node_lookup_108] LEFT OUTER JOIN [DT_node_data_108] ON [DT_node_lookup_108].node_id_2 = [DT_node_data_108].node_id), 
[GB_Tree_27_0] AS 
(SELECT [DT_Output_108].[KEY] AS [KEY], [DT_Output_108].[Estimator] AS [Score_0], 0.0 AS [Score_1], 0.0 AS [Score_2], 0.0 AS [Score_3] 
FROM [DT_Output_108]), 
[DT_node_lookup_109] AS 
(SELECT [ADS].[KEY] AS [KEY], CASE WHEN ([ADS].[Feature_40] <= 0.9660218954086304) THEN CASE WHEN ([ADS].[Feature_68] <= -4.368147373199463) THEN CASE WHEN ([ADS].[Feature_33] <= -0.6792641878128052) THEN 3 ELSE 4 END ELSE CASE WHEN ([ADS].[Feature_2] <= 0.7602798938751221) THEN 6 ELSE 7 END END ELSE CASE WHEN ([ADS].[Feature_21] <= 8.88388442993164) THEN CASE WHEN ([ADS].[Feature_29] <= 9.081330299377441) THEN 10 ELSE 11 END ELSE CASE WHEN ([ADS].[Feature_95] <= 0.5644422769546509) THEN 13 ELSE 14 END END END AS node_id_2 
FROM [FourClass_100] AS [ADS]), 
[DT_node_data_109] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Estimator] AS [Estimator] 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 12 AS count, 3 AS depth, 2 AS parent_id, -0.7166134562841269 AS [Estimator] UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 58 AS count, 3 AS depth, 2 AS parent_id, 0.8003707027663653 AS [Estimator] UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 231 AS count, 3 AS depth, 5 AS parent_id, -0.20810783902969332 AS [Estimator] UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 186 AS count, 3 AS depth, 5 AS parent_id, 0.2838394801216746 AS [Estimator] UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 306 AS count, 3 AS depth, 9 AS parent_id, -0.3143193757043769 AS [Estimator] UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 3 AS depth, 9 AS parent_id, 1.8326474970180298 AS [Estimator] UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS count, 3 AS depth, 12 AS parent_id, 1.5801480492732167 AS [Estimator] UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 12 AS parent_id, -0.8200434142146441 AS [Estimator]) AS [Values]), 
[DT_Output_109] AS 
(SELECT [DT_node_lookup_109].[KEY] AS [KEY], [DT_node_lookup_109].node_id_2 AS node_id_2, [DT_node_data_109].node_id AS node_id, [DT_node_data_109].feature AS feature, [DT_node_data_109].threshold AS threshold, [DT_node_data_109].count AS count, [DT_node_data_109].depth AS depth, [DT_node_data_109].parent_id AS parent_id, [DT_node_data_109].[Estimator] AS [Estimator] 
FROM [DT_node_lookup_109] LEFT OUTER JOIN [DT_node_data_109] ON [DT_node_lookup_109].node_id_2 = [DT_node_data_109].node_id), 
[GB_Tree_27_1] AS 
(SELECT [DT_Output_109].[KEY] AS [KEY], 0.0 AS [Score_0], [DT_Output_109].[Estimator] AS [Score_1], 0.0 AS [Score_2], 0.0 AS [Score_3] 
FROM [DT_Output_109]), 
[DT_node_lookup_110] AS 
(SELECT [ADS].[KEY] AS [KEY], CASE WHEN ([ADS].[Feature_4] <= 2.428699493408203) THEN CASE WHEN ([ADS].[Feature_52] <= -1.0312139987945557) THEN CASE WHEN ([ADS].[Feature_56] <= 3.7789955139160156) THEN 3 ELSE 4 END ELSE CASE WHEN ([ADS].[Feature_51] <= -5.934680461883545) THEN 6 ELSE 7 END END ELSE CASE WHEN ([ADS].[Feature_65] <= -0.018608927726745605) THEN 9 ELSE CASE WHEN ([ADS].[Feature_38] <= 3.182690143585205) THEN 11 ELSE 12 END END END AS node_id_2 
FROM [FourClass_100] AS [ADS]), 
[DT_node_data_110] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Estimator] AS [Estimator] 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 258 AS count, 3 AS depth, 2 AS parent_id, -0.002997821894175777 AS [Estimator] UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 76 AS count, 3 AS depth, 2 AS parent_id, 0.7000294577316852 AS [Estimator] UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 33 AS count, 3 AS depth, 5 AS parent_id, 0.7495978013873126 AS [Estimator] UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 430 AS count, 3 AS depth, 5 AS parent_id, -0.25580169545825204 AS [Estimator] UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 2 AS depth, 8 AS parent_id, 1.5099493967251636 AS [Estimator] UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 10 AS parent_id, 1.7217668306413956 AS [Estimator] UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 10 AS parent_id, 1.9245460182699747 AS [Estimator]) AS [Values]), 
[DT_Output_110] AS 
(SELECT [DT_node_lookup_110].[KEY] AS [KEY], [DT_node_lookup_110].node_id_2 AS node_id_2, [DT_node_data_110].node_id AS node_id, [DT_node_data_110].feature AS feature, [DT_node_data_110].threshold AS threshold, [DT_node_data_110].count AS count, [DT_node_data_110].depth AS depth, [DT_node_data_110].parent_id AS parent_id, [DT_node_data_110].[Estimator] AS [Estimator] 
FROM [DT_node_lookup_110] LEFT OUTER JOIN [DT_node_data_110] ON [DT_node_lookup_110].node_id_2 = [DT_node_data_110].node_id), 
[GB_Tree_27_2] AS 
(SELECT [DT_Output_110].[KEY] AS [KEY], 0.0 AS [Score_0], 0.0 AS [Score_1], [DT_Output_110].[Estimator] AS [Score_2], 0.0 AS [Score_3] 
FROM [DT_Output_110]), 
[DT_node_lookup_111] AS 
(SELECT [ADS].[KEY] AS [KEY], CASE WHEN ([ADS].[Feature_84] <= -0.294437438249588) THEN CASE WHEN ([ADS].[Feature_57] <= 6.7833709716796875) THEN CASE WHEN ([ADS].[Feature_38] <= 0.9725689888000488) THEN 3 ELSE 4 END ELSE CASE WHEN ([ADS].[Feature_42] <= 0.4139503240585327) THEN 6 ELSE 7 END END ELSE CASE WHEN ([ADS].[Feature_37] <= -2.5698142051696777) THEN CASE WHEN ([ADS].[Feature_62] <= 2.8286097049713135) THEN 10 ELSE 11 END ELSE CASE WHEN ([ADS].[Feature_91] <= -1.5389665365219116) THEN 13 ELSE 14 END END END AS node_id_2 
FROM [FourClass_100] AS [ADS]), 
[DT_node_data_111] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Estimator] AS [Estimator] 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 192 AS count, 3 AS depth, 2 AS parent_id, 0.3093887865465977 AS [Estimator] UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 130 AS count, 3 AS depth, 2 AS parent_id, -0.3007313515044306 AS [Estimator] UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 9 AS count, 3 AS depth, 5 AS parent_id, 0.184141388770883 AS [Estimator] UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 14 AS count, 3 AS depth, 5 AS parent_id, 1.3393988147531384 AS [Estimator] UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 3 AS depth, 9 AS parent_id, 1.8640799174004843 AS [Estimator] UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 9 AS parent_id, 1.3442604917421799 AS [Estimator] UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 227 AS count, 3 AS depth, 12 AS parent_id, 0.06711163350572191 AS [Estimator] UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 225 AS count, 3 AS depth, 12 AS parent_id, -0.4454991813945171 AS [Estimator]) AS [Values]), 
[DT_Output_111] AS 
(SELECT [DT_node_lookup_111].[KEY] AS [KEY], [DT_node_lookup_111].node_id_2 AS node_id_2, [DT_node_data_111].node_id AS node_id, [DT_node_data_111].feature AS feature, [DT_node_data_111].threshold AS threshold, [DT_node_data_111].count AS count, [DT_node_data_111].depth AS depth, [DT_node_data_111].parent_id AS parent_id, [DT_node_data_111].[Estimator] AS [Estimator] 
FROM [DT_node_lookup_111] LEFT OUTER JOIN [DT_node_data_111] ON [DT_node_lookup_111].node_id_2 = [DT_node_data_111].node_id), 
[GB_Tree_27_3] AS 
(SELECT [DT_Output_111].[KEY] AS [KEY], 0.0 AS [Score_0], 0.0 AS [Score_1], 0.0 AS [Score_2], [DT_Output_111].[Estimator] AS [Score_3] 
FROM [DT_Output_111]), 
[DT_node_lookup_112] AS 
(SELECT [ADS].[KEY] AS [KEY], CASE WHEN ([ADS].[Feature_34] <= -1.8280695676803589) THEN CASE WHEN ([ADS].[Feature_58] <= 1.9037690162658691) THEN CASE WHEN ([ADS].[Feature_41] <= 2.4969727993011475) THEN 3 ELSE 4 END ELSE CASE WHEN ([ADS].[Feature_45] <= 0.6815374493598938) THEN 6 ELSE 7 END END ELSE CASE WHEN ([ADS].[Feature_40] <= -0.8684566020965576) THEN CASE WHEN ([ADS].[Feature_66] <= -5.353759765625) THEN 10 ELSE 11 END ELSE CASE WHEN ([ADS].[Feature_85] <= -5.65022087097168) THEN 13 ELSE 14 END END END AS node_id_2 
FROM [FourClass_100] AS [ADS]), 
[DT_node_data_112] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Estimator] AS [Estimator] 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 259 AS count, 3 AS depth, 2 AS parent_id, -0.380723351273113 AS [Estimator] UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 2 AS parent_id, 1.8246384343532158 AS [Estimator] UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS count, 3 AS depth, 5 AS parent_id, 1.3339555815831547 AS [Estimator] UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 3 AS depth, 5 AS parent_id, -0.832485559942562 AS [Estimator] UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 17 AS count, 3 AS depth, 9 AS parent_id, 0.9143679529892239 AS [Estimator] UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 219 AS count, 3 AS depth, 9 AS parent_id, -0.25863485967255095 AS [Estimator] UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 25 AS count, 3 AS depth, 12 AS parent_id, -0.9445238528210914 AS [Estimator] UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 273 AS count, 3 AS depth, 12 AS parent_id, 0.3660363165332959 AS [Estimator]) AS [Values]), 
[DT_Output_112] AS 
(SELECT [DT_node_lookup_112].[KEY] AS [KEY], [DT_node_lookup_112].node_id_2 AS node_id_2, [DT_node_data_112].node_id AS node_id, [DT_node_data_112].feature AS feature, [DT_node_data_112].threshold AS threshold, [DT_node_data_112].count AS count, [DT_node_data_112].depth AS depth, [DT_node_data_112].parent_id AS parent_id, [DT_node_data_112].[Estimator] AS [Estimator] 
FROM [DT_node_lookup_112] LEFT OUTER JOIN [DT_node_data_112] ON [DT_node_lookup_112].node_id_2 = [DT_node_data_112].node_id), 
[GB_Tree_28_0] AS 
(SELECT [DT_Output_112].[KEY] AS [KEY], [DT_Output_112].[Estimator] AS [Score_0], 0.0 AS [Score_1], 0.0 AS [Score_2], 0.0 AS [Score_3] 
FROM [DT_Output_112]), 
[DT_node_lookup_113] AS 
(SELECT [ADS].[KEY] AS [KEY], CASE WHEN ([ADS].[Feature_56] <= -2.68786358833313) THEN CASE WHEN ([ADS].[Feature_59] <= 0.47204363346099854) THEN CASE WHEN ([ADS].[Feature_37] <= -1.5278053283691406) THEN 3 ELSE 4 END ELSE CASE WHEN ([ADS].[Feature_51] <= -5.514324188232422) THEN 6 ELSE 7 END END ELSE CASE WHEN ([ADS].[Feature_87] <= -4.215862274169922) THEN CASE WHEN ([ADS].[Feature_18] <= 1.0277771949768066) THEN 10 ELSE 11 END ELSE CASE WHEN ([ADS].[Feature_85] <= -2.313469409942627) THEN 13 ELSE 14 END END END AS node_id_2 
FROM [FourClass_100] AS [ADS]), 
[DT_node_data_113] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Estimator] AS [Estimator] 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 10 AS count, 3 AS depth, 2 AS parent_id, 0.6519064475879471 AS [Estimator] UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 106 AS count, 3 AS depth, 2 AS parent_id, -0.7870231407677545 AS [Estimator] UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 7 AS count, 3 AS depth, 5 AS parent_id, 1.4718226476708969 AS [Estimator] UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 48 AS count, 3 AS depth, 5 AS parent_id, -0.10690703515405849 AS [Estimator] UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 78 AS count, 3 AS depth, 9 AS parent_id, -0.7596928161184808 AS [Estimator] UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 12 AS count, 3 AS depth, 9 AS parent_id, 0.745836204010939 AS [Estimator] UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 150 AS count, 3 AS depth, 12 AS parent_id, 0.5034472422058319 AS [Estimator] UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 389 AS count, 3 AS depth, 12 AS parent_id, 0.018657392238718682 AS [Estimator]) AS [Values]), 
[DT_Output_113] AS 
(SELECT [DT_node_lookup_113].[KEY] AS [KEY], [DT_node_lookup_113].node_id_2 AS node_id_2, [DT_node_data_113].node_id AS node_id, [DT_node_data_113].feature AS feature, [DT_node_data_113].threshold AS threshold, [DT_node_data_113].count AS count, [DT_node_data_113].depth AS depth, [DT_node_data_113].parent_id AS parent_id, [DT_node_data_113].[Estimator] AS [Estimator] 
FROM [DT_node_lookup_113] LEFT OUTER JOIN [DT_node_data_113] ON [DT_node_lookup_113].node_id_2 = [DT_node_data_113].node_id), 
[GB_Tree_28_1] AS 
(SELECT [DT_Output_113].[KEY] AS [KEY], 0.0 AS [Score_0], [DT_Output_113].[Estimator] AS [Score_1], 0.0 AS [Score_2], 0.0 AS [Score_3] 
FROM [DT_Output_113]), 
[DT_node_lookup_114] AS 
(SELECT [ADS].[KEY] AS [KEY], CASE WHEN ([ADS].[Feature_15] <= 2.9468696117401123) THEN CASE WHEN ([ADS].[Feature_51] <= -1.8576246500015259) THEN CASE WHEN ([ADS].[Feature_87] <= -3.1638598442077637) THEN 3 ELSE 4 END ELSE CASE WHEN ([ADS].[Feature_52] <= -1.1522626876831055) THEN 6 ELSE 7 END END ELSE CASE WHEN ([ADS].[Feature_43] <= -10.569680213928223) THEN CASE WHEN ([ADS].[Feature_88] <= -0.5940366387367249) THEN 10 ELSE 11 END ELSE CASE WHEN ([ADS].[Feature_47] <= 4.970428466796875) THEN 13 ELSE 14 END END END AS node_id_2 
FROM [FourClass_100] AS [ADS]), 
[DT_node_data_114] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Estimator] AS [Estimator] 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 47 AS count, 3 AS depth, 2 AS parent_id, 0.876784718125346 AS [Estimator] UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 158 AS count, 3 AS depth, 2 AS parent_id, 0.14411566933828857 AS [Estimator] UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 152 AS count, 3 AS depth, 5 AS parent_id, 0.29720869875685496 AS [Estimator] UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 238 AS count, 3 AS depth, 5 AS parent_id, -0.3351742986446914 AS [Estimator] UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 9 AS parent_id, 1.7429312445777567 AS [Estimator] UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 3 AS depth, 9 AS parent_id, 1.2466330991976202 AS [Estimator] UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 171 AS count, 3 AS depth, 12 AS parent_id, -0.5344368602980334 AS [Estimator] UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 31 AS count, 3 AS depth, 12 AS parent_id, 0.42246254276116313 AS [Estimator]) AS [Values]), 
[DT_Output_114] AS 
(SELECT [DT_node_lookup_114].[KEY] AS [KEY], [DT_node_lookup_114].node_id_2 AS node_id_2, [DT_node_data_114].node_id AS node_id, [DT_node_data_114].feature AS feature, [DT_node_data_114].threshold AS threshold, [DT_node_data_114].count AS count, [DT_node_data_114].depth AS depth, [DT_node_data_114].parent_id AS parent_id, [DT_node_data_114].[Estimator] AS [Estimator] 
FROM [DT_node_lookup_114] LEFT OUTER JOIN [DT_node_data_114] ON [DT_node_lookup_114].node_id_2 = [DT_node_data_114].node_id), 
[GB_Tree_28_2] AS 
(SELECT [DT_Output_114].[KEY] AS [KEY], 0.0 AS [Score_0], 0.0 AS [Score_1], [DT_Output_114].[Estimator] AS [Score_2], 0.0 AS [Score_3] 
FROM [DT_Output_114]), 
[DT_node_lookup_115] AS 
(SELECT [ADS].[KEY] AS [KEY], CASE WHEN ([ADS].[Feature_43] <= -1.14353609085083) THEN CASE WHEN ([ADS].[Feature_64] <= 2.548539161682129) THEN CASE WHEN ([ADS].[Feature_15] <= 7.391242980957031) THEN 3 ELSE 4 END ELSE CASE WHEN ([ADS].[Feature_53] <= 5.351470947265625) THEN 6 ELSE 7 END END ELSE CASE WHEN ([ADS].[Feature_25] <= -1.9292914867401123) THEN CASE WHEN ([ADS].[Feature_84] <= -3.151350975036621) THEN 10 ELSE 11 END ELSE CASE WHEN ([ADS].[Feature_17] <= 7.689988136291504) THEN 13 ELSE 14 END END END AS node_id_2 
FROM [FourClass_100] AS [ADS]), 
[DT_node_data_115] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Estimator] AS [Estimator] 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 210 AS count, 3 AS depth, 2 AS parent_id, -0.07829607654380133 AS [Estimator] UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 13 AS count, 3 AS depth, 2 AS parent_id, 1.0056681088729535 AS [Estimator] UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 81 AS count, 3 AS depth, 5 AS parent_id, 0.6984161731067812 AS [Estimator] UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 13 AS count, 3 AS depth, 5 AS parent_id, -0.6984275013201997 AS [Estimator] UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 40 AS count, 3 AS depth, 9 AS parent_id, 0.7409011067375183 AS [Estimator] UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 107 AS count, 3 AS depth, 9 AS parent_id, -0.06471409351504008 AS [Estimator] UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 324 AS count, 3 AS depth, 12 AS parent_id, -0.390615647338571 AS [Estimator] UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 12 AS count, 3 AS depth, 12 AS parent_id, 0.8903290648084462 AS [Estimator]) AS [Values]), 
[DT_Output_115] AS 
(SELECT [DT_node_lookup_115].[KEY] AS [KEY], [DT_node_lookup_115].node_id_2 AS node_id_2, [DT_node_data_115].node_id AS node_id, [DT_node_data_115].feature AS feature, [DT_node_data_115].threshold AS threshold, [DT_node_data_115].count AS count, [DT_node_data_115].depth AS depth, [DT_node_data_115].parent_id AS parent_id, [DT_node_data_115].[Estimator] AS [Estimator] 
FROM [DT_node_lookup_115] LEFT OUTER JOIN [DT_node_data_115] ON [DT_node_lookup_115].node_id_2 = [DT_node_data_115].node_id), 
[GB_Tree_28_3] AS 
(SELECT [DT_Output_115].[KEY] AS [KEY], 0.0 AS [Score_0], 0.0 AS [Score_1], 0.0 AS [Score_2], [DT_Output_115].[Estimator] AS [Score_3] 
FROM [DT_Output_115]), 
[DT_node_lookup_116] AS 
(SELECT [ADS].[KEY] AS [KEY], CASE WHEN ([ADS].[Feature_34] <= 4.14598274230957) THEN CASE WHEN ([ADS].[Feature_9] <= 10.976364135742188) THEN CASE WHEN ([ADS].[Feature_56] <= -2.4987480640411377) THEN 3 ELSE 4 END ELSE CASE WHEN ([ADS].[Feature_21] <= 1.6928074359893799) THEN 6 ELSE 7 END END ELSE CASE WHEN ([ADS].[Feature_74] <= -0.9509391784667969) THEN CASE WHEN ([ADS].[Feature_66] <= 5.056210041046143) THEN 10 ELSE 11 END ELSE CASE WHEN ([ADS].[Feature_62] <= -9.434767723083496) THEN 13 ELSE 14 END END END AS node_id_2 
FROM [FourClass_100] AS [ADS]), 
[DT_node_data_116] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Estimator] AS [Estimator] 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 164 AS count, 3 AS depth, 2 AS parent_id, 0.252877323046271 AS [Estimator] UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 519 AS count, 3 AS depth, 2 AS parent_id, -0.22643147037493075 AS [Estimator] UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS count, 3 AS depth, 5 AS parent_id, 1.1379126715452414 AS [Estimator] UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 3 AS depth, 5 AS parent_id, 1.4957734036736259 AS [Estimator] UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 46 AS count, 3 AS depth, 9 AS parent_id, 1.0660430148292797 AS [Estimator] UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 11 AS count, 3 AS depth, 9 AS parent_id, -0.728104858534314 AS [Estimator] UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 3 AS depth, 12 AS parent_id, 1.4640640947586205 AS [Estimator] UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 51 AS count, 3 AS depth, 12 AS parent_id, -0.43335099990015474 AS [Estimator]) AS [Values]), 
[DT_Output_116] AS 
(SELECT [DT_node_lookup_116].[KEY] AS [KEY], [DT_node_lookup_116].node_id_2 AS node_id_2, [DT_node_data_116].node_id AS node_id, [DT_node_data_116].feature AS feature, [DT_node_data_116].threshold AS threshold, [DT_node_data_116].count AS count, [DT_node_data_116].depth AS depth, [DT_node_data_116].parent_id AS parent_id, [DT_node_data_116].[Estimator] AS [Estimator] 
FROM [DT_node_lookup_116] LEFT OUTER JOIN [DT_node_data_116] ON [DT_node_lookup_116].node_id_2 = [DT_node_data_116].node_id), 
[GB_Tree_29_0] AS 
(SELECT [DT_Output_116].[KEY] AS [KEY], [DT_Output_116].[Estimator] AS [Score_0], 0.0 AS [Score_1], 0.0 AS [Score_2], 0.0 AS [Score_3] 
FROM [DT_Output_116]), 
[DT_node_lookup_117] AS 
(SELECT [ADS].[KEY] AS [KEY], CASE WHEN ([ADS].[Feature_55] <= 2.2732362747192383) THEN CASE WHEN ([ADS].[Feature_23] <= -0.16440452635288239) THEN CASE WHEN ([ADS].[Feature_64] <= -0.4476744532585144) THEN 3 ELSE 4 END ELSE CASE WHEN ([ADS].[Feature_97] <= 1.4040699005126953) THEN 6 ELSE 7 END END ELSE CASE WHEN ([ADS].[Feature_44] <= 1.760925531387329) THEN CASE WHEN ([ADS].[Feature_87] <= 10.543880462646484) THEN 10 ELSE 11 END ELSE CASE WHEN ([ADS].[Feature_12] <= -0.39137837290763855) THEN 13 ELSE 14 END END END AS node_id_2 
FROM [FourClass_100] AS [ADS]), 
[DT_node_data_117] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Estimator] AS [Estimator] 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 101 AS count, 3 AS depth, 2 AS parent_id, 0.6374412759881607 AS [Estimator] UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 121 AS count, 3 AS depth, 2 AS parent_id, -0.00447444696674644 AS [Estimator] UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 305 AS count, 3 AS depth, 5 AS parent_id, -0.15911751767624213 AS [Estimator] UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 32 AS count, 3 AS depth, 5 AS parent_id, 0.5767757814182858 AS [Estimator] UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 236 AS count, 3 AS depth, 9 AS parent_id, -0.35334842898755303 AS [Estimator] UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 9 AS parent_id, 2.218278463697496 AS [Estimator] UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 12 AS parent_id, -0.8935004894692214 AS [Estimator] UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 3 AS depth, 12 AS parent_id, 1.6840604257938907 AS [Estimator]) AS [Values]), 
[DT_Output_117] AS 
(SELECT [DT_node_lookup_117].[KEY] AS [KEY], [DT_node_lookup_117].node_id_2 AS node_id_2, [DT_node_data_117].node_id AS node_id, [DT_node_data_117].feature AS feature, [DT_node_data_117].threshold AS threshold, [DT_node_data_117].count AS count, [DT_node_data_117].depth AS depth, [DT_node_data_117].parent_id AS parent_id, [DT_node_data_117].[Estimator] AS [Estimator] 
FROM [DT_node_lookup_117] LEFT OUTER JOIN [DT_node_data_117] ON [DT_node_lookup_117].node_id_2 = [DT_node_data_117].node_id), 
[GB_Tree_29_1] AS 
(SELECT [DT_Output_117].[KEY] AS [KEY], 0.0 AS [Score_0], [DT_Output_117].[Estimator] AS [Score_1], 0.0 AS [Score_2], 0.0 AS [Score_3] 
FROM [DT_Output_117]), 
[DT_node_lookup_118] AS 
(SELECT [ADS].[KEY] AS [KEY], CASE WHEN ([ADS].[Feature_64] <= 3.749783992767334) THEN CASE WHEN ([ADS].[Feature_39] <= 3.709141254425049) THEN CASE WHEN ([ADS].[Feature_86] <= -6.359503746032715) THEN 3 ELSE 4 END ELSE CASE WHEN ([ADS].[Feature_62] <= 7.140374660491943) THEN 6 ELSE 7 END END ELSE CASE WHEN ([ADS].[Feature_9] <= -0.04604019597172737) THEN CASE WHEN ([ADS].[Feature_24] <= 2.401115894317627) THEN 10 ELSE 11 END ELSE CASE WHEN ([ADS].[Feature_23] <= 0.43357133865356445) THEN 13 ELSE 14 END END END AS node_id_2 
FROM [FourClass_100] AS [ADS]), 
[DT_node_data_118] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Estimator] AS [Estimator] 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 22 AS count, 3 AS depth, 2 AS parent_id, 0.8769729122681474 AS [Estimator] UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 526 AS count, 3 AS depth, 2 AS parent_id, -0.045332195535421914 AS [Estimator] UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 107 AS count, 3 AS depth, 5 AS parent_id, -0.6558945008367605 AS [Estimator] UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 3 AS depth, 5 AS parent_id, 1.4342992135389514 AS [Estimator] UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 57 AS count, 3 AS depth, 9 AS parent_id, -0.42036406493261225 AS [Estimator] UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 16 AS count, 3 AS depth, 9 AS parent_id, 0.762328745792759 AS [Estimator] UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 41 AS count, 3 AS depth, 12 AS parent_id, 0.28822205225302 AS [Estimator] UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 28 AS count, 3 AS depth, 12 AS parent_id, 1.0554571885074664 AS [Estimator]) AS [Values]), 
[DT_Output_118] AS 
(SELECT [DT_node_lookup_118].[KEY] AS [KEY], [DT_node_lookup_118].node_id_2 AS node_id_2, [DT_node_data_118].node_id AS node_id, [DT_node_data_118].feature AS feature, [DT_node_data_118].threshold AS threshold, [DT_node_data_118].count AS count, [DT_node_data_118].depth AS depth, [DT_node_data_118].parent_id AS parent_id, [DT_node_data_118].[Estimator] AS [Estimator] 
FROM [DT_node_lookup_118] LEFT OUTER JOIN [DT_node_data_118] ON [DT_node_lookup_118].node_id_2 = [DT_node_data_118].node_id), 
[GB_Tree_29_2] AS 
(SELECT [DT_Output_118].[KEY] AS [KEY], 0.0 AS [Score_0], 0.0 AS [Score_1], [DT_Output_118].[Estimator] AS [Score_2], 0.0 AS [Score_3] 
FROM [DT_Output_118]), 
[DT_node_lookup_119] AS 
(SELECT [ADS].[KEY] AS [KEY], CASE WHEN ([ADS].[Feature_23] <= 1.3578312397003174) THEN CASE WHEN ([ADS].[Feature_71] <= 3.526611328125) THEN CASE WHEN ([ADS].[Feature_29] <= 0.003206884488463402) THEN 3 ELSE 4 END ELSE CASE WHEN ([ADS].[Feature_31] <= -3.6020455360412598) THEN 6 ELSE 7 END END ELSE CASE WHEN ([ADS].[Feature_76] <= 0.11759939044713974) THEN CASE WHEN ([ADS].[Feature_75] <= 1.2622926235198975) THEN 10 ELSE 11 END ELSE CASE WHEN ([ADS].[Feature_7] <= -0.29309558868408203) THEN 13 ELSE 14 END END END AS node_id_2 
FROM [FourClass_100] AS [ADS]), 
[DT_node_data_119] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Estimator] AS [Estimator] 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 324 AS count, 3 AS depth, 2 AS parent_id, 0.05514595614579162 AS [Estimator] UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 294 AS count, 3 AS depth, 2 AS parent_id, -0.36600378774888664 AS [Estimator] UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 15 AS count, 3 AS depth, 5 AS parent_id, 1.1673739900698417 AS [Estimator] UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 97 AS count, 3 AS depth, 5 AS parent_id, 0.20865908332582317 AS [Estimator] UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 37 AS count, 3 AS depth, 9 AS parent_id, -0.3359052820142705 AS [Estimator] UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS count, 3 AS depth, 9 AS parent_id, 1.3940030257578226 AS [Estimator] UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 9 AS count, 3 AS depth, 12 AS parent_id, 0.11029133050438594 AS [Estimator] UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 19 AS count, 3 AS depth, 12 AS parent_id, 1.3727354685055129 AS [Estimator]) AS [Values]), 
[DT_Output_119] AS 
(SELECT [DT_node_lookup_119].[KEY] AS [KEY], [DT_node_lookup_119].node_id_2 AS node_id_2, [DT_node_data_119].node_id AS node_id, [DT_node_data_119].feature AS feature, [DT_node_data_119].threshold AS threshold, [DT_node_data_119].count AS count, [DT_node_data_119].depth AS depth, [DT_node_data_119].parent_id AS parent_id, [DT_node_data_119].[Estimator] AS [Estimator] 
FROM [DT_node_lookup_119] LEFT OUTER JOIN [DT_node_data_119] ON [DT_node_lookup_119].node_id_2 = [DT_node_data_119].node_id), 
[GB_Tree_29_3] AS 
(SELECT [DT_Output_119].[KEY] AS [KEY], 0.0 AS [Score_0], 0.0 AS [Score_1], 0.0 AS [Score_2], [DT_Output_119].[Estimator] AS [Score_3] 
FROM [DT_Output_119]), 
[DT_node_lookup_120] AS 
(SELECT [ADS].[KEY] AS [KEY], CASE WHEN ([ADS].[Feature_47] <= -2.788712739944458) THEN CASE WHEN ([ADS].[Feature_7] <= -2.242816209793091) THEN CASE WHEN ([ADS].[Feature_14] <= -0.7018721699714661) THEN 3 ELSE 4 END ELSE CASE WHEN ([ADS].[Feature_1] <= 5.997015953063965) THEN 6 ELSE 7 END END ELSE CASE WHEN ([ADS].[Feature_68] <= -1.5029101371765137) THEN CASE WHEN ([ADS].[Feature_16] <= 2.150050163269043) THEN 10 ELSE 11 END ELSE CASE WHEN ([ADS].[Feature_39] <= 3.902266502380371) THEN 13 ELSE 14 END END END AS node_id_2 
FROM [FourClass_100] AS [ADS]), 
[DT_node_data_120] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Estimator] AS [Estimator] 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 2 AS parent_id, 0.9049589518528801 AS [Estimator] UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 3 AS depth, 2 AS parent_id, 1.8936699222921627 AS [Estimator] UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 159 AS count, 3 AS depth, 5 AS parent_id, -0.5755044807356229 AS [Estimator] UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 13 AS count, 3 AS depth, 5 AS parent_id, 0.573247189584228 AS [Estimator] UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 170 AS count, 3 AS depth, 9 AS parent_id, 0.10866953795930986 AS [Estimator] UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 79 AS count, 3 AS depth, 9 AS parent_id, 0.7158912038767911 AS [Estimator] UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 318 AS count, 3 AS depth, 12 AS parent_id, -0.2551362293919569 AS [Estimator] UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 58 AS count, 3 AS depth, 12 AS parent_id, 0.5231363802135508 AS [Estimator]) AS [Values]), 
[DT_Output_120] AS 
(SELECT [DT_node_lookup_120].[KEY] AS [KEY], [DT_node_lookup_120].node_id_2 AS node_id_2, [DT_node_data_120].node_id AS node_id, [DT_node_data_120].feature AS feature, [DT_node_data_120].threshold AS threshold, [DT_node_data_120].count AS count, [DT_node_data_120].depth AS depth, [DT_node_data_120].parent_id AS parent_id, [DT_node_data_120].[Estimator] AS [Estimator] 
FROM [DT_node_lookup_120] LEFT OUTER JOIN [DT_node_data_120] ON [DT_node_lookup_120].node_id_2 = [DT_node_data_120].node_id), 
[GB_Tree_30_0] AS 
(SELECT [DT_Output_120].[KEY] AS [KEY], [DT_Output_120].[Estimator] AS [Score_0], 0.0 AS [Score_1], 0.0 AS [Score_2], 0.0 AS [Score_3] 
FROM [DT_Output_120]), 
[DT_node_lookup_121] AS 
(SELECT [ADS].[KEY] AS [KEY], CASE WHEN ([ADS].[Feature_50] <= -1.5555498600006104) THEN CASE WHEN ([ADS].[Feature_68] <= -3.366490364074707) THEN CASE WHEN ([ADS].[Feature_58] <= -0.844261884689331) THEN 3 ELSE 4 END ELSE CASE WHEN ([ADS].[Feature_19] <= -2.413651943206787) THEN 6 ELSE 7 END END ELSE CASE WHEN ([ADS].[Feature_43] <= 1.5524107217788696) THEN CASE WHEN ([ADS].[Feature_25] <= -6.923053741455078) THEN 10 ELSE 11 END ELSE CASE WHEN ([ADS].[Feature_87] <= 5.882596015930176) THEN 13 ELSE 14 END END END AS node_id_2 
FROM [FourClass_100] AS [ADS]), 
[DT_node_data_121] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Estimator] AS [Estimator] 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 10 AS count, 3 AS depth, 2 AS parent_id, 1.2139467053123092 AS [Estimator] UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 54 AS count, 3 AS depth, 2 AS parent_id, -0.025780458594761135 AS [Estimator] UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 3 AS depth, 5 AS parent_id, 1.1972746414997524 AS [Estimator] UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 232 AS count, 3 AS depth, 5 AS parent_id, -0.43351115689693165 AS [Estimator] UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 14 AS count, 3 AS depth, 9 AS parent_id, 1.0211058327350044 AS [Estimator] UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 304 AS count, 3 AS depth, 9 AS parent_id, -0.12388431558125994 AS [Estimator] UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 159 AS count, 3 AS depth, 12 AS parent_id, 0.46789684475680254 AS [Estimator] UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 24 AS count, 3 AS depth, 12 AS parent_id, -0.5313248386745886 AS [Estimator]) AS [Values]), 
[DT_Output_121] AS 
(SELECT [DT_node_lookup_121].[KEY] AS [KEY], [DT_node_lookup_121].node_id_2 AS node_id_2, [DT_node_data_121].node_id AS node_id, [DT_node_data_121].feature AS feature, [DT_node_data_121].threshold AS threshold, [DT_node_data_121].count AS count, [DT_node_data_121].depth AS depth, [DT_node_data_121].parent_id AS parent_id, [DT_node_data_121].[Estimator] AS [Estimator] 
FROM [DT_node_lookup_121] LEFT OUTER JOIN [DT_node_data_121] ON [DT_node_lookup_121].node_id_2 = [DT_node_data_121].node_id), 
[GB_Tree_30_1] AS 
(SELECT [DT_Output_121].[KEY] AS [KEY], 0.0 AS [Score_0], [DT_Output_121].[Estimator] AS [Score_1], 0.0 AS [Score_2], 0.0 AS [Score_3] 
FROM [DT_Output_121]), 
[DT_node_lookup_122] AS 
(SELECT [ADS].[KEY] AS [KEY], CASE WHEN ([ADS].[Feature_2] <= -5.213035583496094) THEN CASE WHEN ([ADS].[Feature_91] <= -6.155241012573242) THEN CASE WHEN ([ADS].[Feature_52] <= -1.9751994609832764) THEN 3 ELSE 4 END ELSE CASE WHEN ([ADS].[Feature_29] <= -7.102976322174072) THEN 6 ELSE 7 END END ELSE CASE WHEN ([ADS].[Feature_66] <= -0.9999339580535889) THEN CASE WHEN ([ADS].[Feature_76] <= 2.0885238647460938) THEN 10 ELSE 11 END ELSE CASE WHEN ([ADS].[Feature_86] <= -4.105096340179443) THEN 13 ELSE 14 END END END AS node_id_2 
FROM [FourClass_100] AS [ADS]), 
[DT_node_data_122] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Estimator] AS [Estimator] 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 6 AS count, 3 AS depth, 2 AS parent_id, 1.1759563996398419 AS [Estimator] UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 11 AS count, 3 AS depth, 2 AS parent_id, -0.5967765732750497 AS [Estimator] UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 5 AS parent_id, 1.111127368446319 AS [Estimator] UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 67 AS count, 3 AS depth, 5 AS parent_id, -0.9058015788038298 AS [Estimator] UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 290 AS count, 3 AS depth, 9 AS parent_id, -0.2168900953466414 AS [Estimator] UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 3 AS depth, 9 AS parent_id, 1.7425746027490712 AS [Estimator] UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 68 AS count, 3 AS depth, 12 AS parent_id, 0.7195923977519219 AS [Estimator] UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 354 AS count, 3 AS depth, 12 AS parent_id, 0.08259217509827046 AS [Estimator]) AS [Values]), 
[DT_Output_122] AS 
(SELECT [DT_node_lookup_122].[KEY] AS [KEY], [DT_node_lookup_122].node_id_2 AS node_id_2, [DT_node_data_122].node_id AS node_id, [DT_node_data_122].feature AS feature, [DT_node_data_122].threshold AS threshold, [DT_node_data_122].count AS count, [DT_node_data_122].depth AS depth, [DT_node_data_122].parent_id AS parent_id, [DT_node_data_122].[Estimator] AS [Estimator] 
FROM [DT_node_lookup_122] LEFT OUTER JOIN [DT_node_data_122] ON [DT_node_lookup_122].node_id_2 = [DT_node_data_122].node_id), 
[GB_Tree_30_2] AS 
(SELECT [DT_Output_122].[KEY] AS [KEY], 0.0 AS [Score_0], 0.0 AS [Score_1], [DT_Output_122].[Estimator] AS [Score_2], 0.0 AS [Score_3] 
FROM [DT_Output_122]), 
[DT_node_lookup_123] AS 
(SELECT [ADS].[KEY] AS [KEY], CASE WHEN ([ADS].[Feature_43] <= -4.279580116271973) THEN CASE WHEN ([ADS].[Feature_86] <= -0.0923289880156517) THEN CASE WHEN ([ADS].[Feature_66] <= 5.361787796020508) THEN 3 ELSE 4 END ELSE CASE WHEN ([ADS].[Feature_94] <= 1.5466914176940918) THEN 6 ELSE 7 END END ELSE CASE WHEN ([ADS].[Feature_84] <= 3.4882559776306152) THEN CASE WHEN ([ADS].[Feature_54] <= 2.4212074279785156) THEN 10 ELSE 11 END ELSE CASE WHEN ([ADS].[Feature_72] <= -1.848706603050232) THEN 13 ELSE 14 END END END AS node_id_2 
FROM [FourClass_100] AS [ADS]), 
[DT_node_data_123] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Estimator] AS [Estimator] 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 64 AS count, 3 AS depth, 2 AS parent_id, 0.7865500625137569 AS [Estimator] UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 14 AS count, 3 AS depth, 2 AS parent_id, -0.5624256168550167 AS [Estimator] UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 34 AS count, 3 AS depth, 5 AS parent_id, -0.6423807298476538 AS [Estimator] UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 3 AS depth, 5 AS parent_id, 1.9298302897763009 AS [Estimator] UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 391 AS count, 3 AS depth, 9 AS parent_id, 0.1681567520092839 AS [Estimator] UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 143 AS count, 3 AS depth, 9 AS parent_id, -0.40187039003552877 AS [Estimator] UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 3 AS depth, 12 AS parent_id, 1.8219622992268847 AS [Estimator] UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 150 AS count, 3 AS depth, 12 AS parent_id, -0.5732388604164124 AS [Estimator]) AS [Values]), 
[DT_Output_123] AS 
(SELECT [DT_node_lookup_123].[KEY] AS [KEY], [DT_node_lookup_123].node_id_2 AS node_id_2, [DT_node_data_123].node_id AS node_id, [DT_node_data_123].feature AS feature, [DT_node_data_123].threshold AS threshold, [DT_node_data_123].count AS count, [DT_node_data_123].depth AS depth, [DT_node_data_123].parent_id AS parent_id, [DT_node_data_123].[Estimator] AS [Estimator] 
FROM [DT_node_lookup_123] LEFT OUTER JOIN [DT_node_data_123] ON [DT_node_lookup_123].node_id_2 = [DT_node_data_123].node_id), 
[GB_Tree_30_3] AS 
(SELECT [DT_Output_123].[KEY] AS [KEY], 0.0 AS [Score_0], 0.0 AS [Score_1], 0.0 AS [Score_2], [DT_Output_123].[Estimator] AS [Score_3] 
FROM [DT_Output_123]), 
[DT_node_lookup_124] AS 
(SELECT [ADS].[KEY] AS [KEY], CASE WHEN ([ADS].[Feature_41] <= -2.436868667602539) THEN CASE WHEN ([ADS].[Feature_80] <= 0.5684574246406555) THEN CASE WHEN ([ADS].[Feature_43] <= -0.20611169934272766) THEN 3 ELSE 4 END ELSE CASE WHEN ([ADS].[Feature_76] <= -0.3770594298839569) THEN 6 ELSE 7 END END ELSE CASE WHEN ([ADS].[Feature_52] <= -2.9607110023498535) THEN CASE WHEN ([ADS].[Feature_83] <= -2.035839557647705) THEN 10 ELSE 11 END ELSE CASE WHEN ([ADS].[Feature_8] <= -0.15134650468826294) THEN 13 ELSE 14 END END END AS node_id_2 
FROM [FourClass_100] AS [ADS]), 
[DT_node_data_124] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Estimator] AS [Estimator] 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 3 AS depth, 2 AS parent_id, 1.6421838860246443 AS [Estimator] UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 3 AS depth, 2 AS parent_id, 1.1230854289431658 AS [Estimator] UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 3 AS depth, 5 AS parent_id, -0.821881238482089 AS [Estimator] UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 5 AS parent_id, 0.8448270486330544 AS [Estimator] UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 3 AS depth, 9 AS parent_id, 1.6480857608623056 AS [Estimator] UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 203 AS count, 3 AS depth, 9 AS parent_id, -0.38617108291256486 AS [Estimator] UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 279 AS count, 3 AS depth, 12 AS parent_id, 0.3062725239432506 AS [Estimator] UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 306 AS count, 3 AS depth, 12 AS parent_id, -0.17464750884655092 AS [Estimator]) AS [Values]), 
[DT_Output_124] AS 
(SELECT [DT_node_lookup_124].[KEY] AS [KEY], [DT_node_lookup_124].node_id_2 AS node_id_2, [DT_node_data_124].node_id AS node_id, [DT_node_data_124].feature AS feature, [DT_node_data_124].threshold AS threshold, [DT_node_data_124].count AS count, [DT_node_data_124].depth AS depth, [DT_node_data_124].parent_id AS parent_id, [DT_node_data_124].[Estimator] AS [Estimator] 
FROM [DT_node_lookup_124] LEFT OUTER JOIN [DT_node_data_124] ON [DT_node_lookup_124].node_id_2 = [DT_node_data_124].node_id), 
[GB_Tree_31_0] AS 
(SELECT [DT_Output_124].[KEY] AS [KEY], [DT_Output_124].[Estimator] AS [Score_0], 0.0 AS [Score_1], 0.0 AS [Score_2], 0.0 AS [Score_3] 
FROM [DT_Output_124]), 
[DT_node_lookup_125] AS 
(SELECT [ADS].[KEY] AS [KEY], CASE WHEN ([ADS].[Feature_82] <= 1.3530263900756836) THEN CASE WHEN ([ADS].[Feature_99] <= -1.285008192062378) THEN CASE WHEN ([ADS].[Feature_55] <= -0.7907183170318604) THEN 3 ELSE 4 END ELSE CASE WHEN ([ADS].[Feature_48] <= -7.026301383972168) THEN 6 ELSE 7 END END ELSE CASE WHEN ([ADS].[Feature_73] <= -1.67318594455719) THEN CASE WHEN ([ADS].[Feature_4] <= 0.018660254776477814) THEN 10 ELSE 11 END ELSE CASE WHEN ([ADS].[Feature_36] <= 8.323905944824219) THEN 13 ELSE 14 END END END AS node_id_2 
FROM [FourClass_100] AS [ADS]), 
[DT_node_data_125] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Estimator] AS [Estimator] 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 128 AS count, 3 AS depth, 2 AS parent_id, 0.155162240903011 AS [Estimator] UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 190 AS count, 3 AS depth, 2 AS parent_id, -0.4474373648115671 AS [Estimator] UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 31 AS count, 3 AS depth, 5 AS parent_id, 0.9458820110243974 AS [Estimator] UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 374 AS count, 3 AS depth, 5 AS parent_id, 0.13698460373490054 AS [Estimator] UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 3 AS depth, 9 AS parent_id, 1.2268474206606825 AS [Estimator] UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 9 AS parent_id, -0.8484179724206414 AS [Estimator] UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 71 AS count, 3 AS depth, 12 AS parent_id, -0.6929131398594134 AS [Estimator] UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 3 AS depth, 12 AS parent_id, 1.2847699745999452 AS [Estimator]) AS [Values]), 
[DT_Output_125] AS 
(SELECT [DT_node_lookup_125].[KEY] AS [KEY], [DT_node_lookup_125].node_id_2 AS node_id_2, [DT_node_data_125].node_id AS node_id, [DT_node_data_125].feature AS feature, [DT_node_data_125].threshold AS threshold, [DT_node_data_125].count AS count, [DT_node_data_125].depth AS depth, [DT_node_data_125].parent_id AS parent_id, [DT_node_data_125].[Estimator] AS [Estimator] 
FROM [DT_node_lookup_125] LEFT OUTER JOIN [DT_node_data_125] ON [DT_node_lookup_125].node_id_2 = [DT_node_data_125].node_id), 
[GB_Tree_31_1] AS 
(SELECT [DT_Output_125].[KEY] AS [KEY], 0.0 AS [Score_0], [DT_Output_125].[Estimator] AS [Score_1], 0.0 AS [Score_2], 0.0 AS [Score_3] 
FROM [DT_Output_125]), 
[DT_node_lookup_126] AS 
(SELECT [ADS].[KEY] AS [KEY], CASE WHEN ([ADS].[Feature_4] <= 2.428699493408203) THEN CASE WHEN ([ADS].[Feature_35] <= -2.522634983062744) THEN CASE WHEN ([ADS].[Feature_64] <= 5.293534278869629) THEN 3 ELSE 4 END ELSE CASE WHEN ([ADS].[Feature_71] <= 1.0146251916885376) THEN 6 ELSE 7 END END ELSE CASE WHEN ([ADS].[Feature_48] <= 3.157468318939209) THEN CASE WHEN ([ADS].[Feature_90] <= -9.178244590759277) THEN 10 ELSE 11 END ELSE 12 END END AS node_id_2 
FROM [FourClass_100] AS [ADS]), 
[DT_node_data_126] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Estimator] AS [Estimator] 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 3 AS depth, 2 AS parent_id, 1.4595090649238274 AS [Estimator] UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 2 AS parent_id, 1.037303019020666 AS [Estimator] UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 483 AS count, 3 AS depth, 5 AS parent_id, 0.10976530411684236 AS [Estimator] UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 310 AS count, 3 AS depth, 5 AS parent_id, -0.2516479160495205 AS [Estimator] UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 9 AS parent_id, 1.5343713547837623 AS [Estimator] UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 9 AS parent_id, 1.6484931434406689 AS [Estimator] UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 2 AS depth, 8 AS parent_id, 1.3683881701677103 AS [Estimator]) AS [Values]), 
[DT_Output_126] AS 
(SELECT [DT_node_lookup_126].[KEY] AS [KEY], [DT_node_lookup_126].node_id_2 AS node_id_2, [DT_node_data_126].node_id AS node_id, [DT_node_data_126].feature AS feature, [DT_node_data_126].threshold AS threshold, [DT_node_data_126].count AS count, [DT_node_data_126].depth AS depth, [DT_node_data_126].parent_id AS parent_id, [DT_node_data_126].[Estimator] AS [Estimator] 
FROM [DT_node_lookup_126] LEFT OUTER JOIN [DT_node_data_126] ON [DT_node_lookup_126].node_id_2 = [DT_node_data_126].node_id), 
[GB_Tree_31_2] AS 
(SELECT [DT_Output_126].[KEY] AS [KEY], 0.0 AS [Score_0], 0.0 AS [Score_1], [DT_Output_126].[Estimator] AS [Score_2], 0.0 AS [Score_3] 
FROM [DT_Output_126]), 
[DT_node_lookup_127] AS 
(SELECT [ADS].[KEY] AS [KEY], CASE WHEN ([ADS].[Feature_9] <= 2.049044132232666) THEN CASE WHEN ([ADS].[Feature_50] <= -1.9284727573394775) THEN CASE WHEN ([ADS].[Feature_71] <= -1.1161456108093262) THEN 3 ELSE 4 END ELSE CASE WHEN ([ADS].[Feature_15] <= 7.815037727355957) THEN 6 ELSE 7 END END ELSE CASE WHEN ([ADS].[Feature_83] <= 0.6787642240524292) THEN CASE WHEN ([ADS].[Feature_57] <= -10.534873962402344) THEN 10 ELSE 11 END ELSE CASE WHEN ([ADS].[Feature_90] <= -12.33143138885498) THEN 13 ELSE 14 END END END AS node_id_2 
FROM [FourClass_100] AS [ADS]), 
[DT_node_data_127] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Estimator] AS [Estimator] 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 59 AS count, 3 AS depth, 2 AS parent_id, -0.24439981111602707 AS [Estimator] UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 114 AS count, 3 AS depth, 2 AS parent_id, 0.6576677178996769 AS [Estimator] UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 364 AS count, 3 AS depth, 5 AS parent_id, -0.1228025243352084 AS [Estimator] UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 22 AS count, 3 AS depth, 5 AS parent_id, 0.735603157473708 AS [Estimator] UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 3 AS depth, 9 AS parent_id, 1.4401455894972597 AS [Estimator] UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 175 AS count, 3 AS depth, 9 AS parent_id, -0.5108885348196646 AS [Estimator] UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 10 AS count, 3 AS depth, 12 AS parent_id, 1.2078041852528012 AS [Estimator] UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 54 AS count, 3 AS depth, 12 AS parent_id, -0.09406731466140547 AS [Estimator]) AS [Values]), 
[DT_Output_127] AS 
(SELECT [DT_node_lookup_127].[KEY] AS [KEY], [DT_node_lookup_127].node_id_2 AS node_id_2, [DT_node_data_127].node_id AS node_id, [DT_node_data_127].feature AS feature, [DT_node_data_127].threshold AS threshold, [DT_node_data_127].count AS count, [DT_node_data_127].depth AS depth, [DT_node_data_127].parent_id AS parent_id, [DT_node_data_127].[Estimator] AS [Estimator] 
FROM [DT_node_lookup_127] LEFT OUTER JOIN [DT_node_data_127] ON [DT_node_lookup_127].node_id_2 = [DT_node_data_127].node_id), 
[GB_Tree_31_3] AS 
(SELECT [DT_Output_127].[KEY] AS [KEY], 0.0 AS [Score_0], 0.0 AS [Score_1], 0.0 AS [Score_2], [DT_Output_127].[Estimator] AS [Score_3] 
FROM [DT_Output_127]), 
[Score_Union_CTE] AS 
(SELECT ensemble_score_union.[KEY] AS [KEY], ensemble_score_union.[Score_0] AS [Score_0], ensemble_score_union.[Score_1] AS [Score_1], ensemble_score_union.[Score_2] AS [Score_2], ensemble_score_union.[Score_3] AS [Score_3] 
FROM (SELECT [GB_Tree_0_0].[KEY] AS [KEY], [GB_Tree_0_0].[Score_0] AS [Score_0], [GB_Tree_0_0].[Score_1] AS [Score_1], [GB_Tree_0_0].[Score_2] AS [Score_2], [GB_Tree_0_0].[Score_3] AS [Score_3] 
FROM [GB_Tree_0_0] UNION ALL SELECT [GB_Tree_0_1].[KEY] AS [KEY], [GB_Tree_0_1].[Score_0] AS [Score_0], [GB_Tree_0_1].[Score_1] AS [Score_1], [GB_Tree_0_1].[Score_2] AS [Score_2], [GB_Tree_0_1].[Score_3] AS [Score_3] 
FROM [GB_Tree_0_1] UNION ALL SELECT [GB_Tree_0_2].[KEY] AS [KEY], [GB_Tree_0_2].[Score_0] AS [Score_0], [GB_Tree_0_2].[Score_1] AS [Score_1], [GB_Tree_0_2].[Score_2] AS [Score_2], [GB_Tree_0_2].[Score_3] AS [Score_3] 
FROM [GB_Tree_0_2] UNION ALL SELECT [GB_Tree_0_3].[KEY] AS [KEY], [GB_Tree_0_3].[Score_0] AS [Score_0], [GB_Tree_0_3].[Score_1] AS [Score_1], [GB_Tree_0_3].[Score_2] AS [Score_2], [GB_Tree_0_3].[Score_3] AS [Score_3] 
FROM [GB_Tree_0_3] UNION ALL SELECT [GB_Tree_1_0].[KEY] AS [KEY], [GB_Tree_1_0].[Score_0] AS [Score_0], [GB_Tree_1_0].[Score_1] AS [Score_1], [GB_Tree_1_0].[Score_2] AS [Score_2], [GB_Tree_1_0].[Score_3] AS [Score_3] 
FROM [GB_Tree_1_0] UNION ALL SELECT [GB_Tree_1_1].[KEY] AS [KEY], [GB_Tree_1_1].[Score_0] AS [Score_0], [GB_Tree_1_1].[Score_1] AS [Score_1], [GB_Tree_1_1].[Score_2] AS [Score_2], [GB_Tree_1_1].[Score_3] AS [Score_3] 
FROM [GB_Tree_1_1] UNION ALL SELECT [GB_Tree_1_2].[KEY] AS [KEY], [GB_Tree_1_2].[Score_0] AS [Score_0], [GB_Tree_1_2].[Score_1] AS [Score_1], [GB_Tree_1_2].[Score_2] AS [Score_2], [GB_Tree_1_2].[Score_3] AS [Score_3] 
FROM [GB_Tree_1_2] UNION ALL SELECT [GB_Tree_1_3].[KEY] AS [KEY], [GB_Tree_1_3].[Score_0] AS [Score_0], [GB_Tree_1_3].[Score_1] AS [Score_1], [GB_Tree_1_3].[Score_2] AS [Score_2], [GB_Tree_1_3].[Score_3] AS [Score_3] 
FROM [GB_Tree_1_3] UNION ALL SELECT [GB_Tree_2_0].[KEY] AS [KEY], [GB_Tree_2_0].[Score_0] AS [Score_0], [GB_Tree_2_0].[Score_1] AS [Score_1], [GB_Tree_2_0].[Score_2] AS [Score_2], [GB_Tree_2_0].[Score_3] AS [Score_3] 
FROM [GB_Tree_2_0] UNION ALL SELECT [GB_Tree_2_1].[KEY] AS [KEY], [GB_Tree_2_1].[Score_0] AS [Score_0], [GB_Tree_2_1].[Score_1] AS [Score_1], [GB_Tree_2_1].[Score_2] AS [Score_2], [GB_Tree_2_1].[Score_3] AS [Score_3] 
FROM [GB_Tree_2_1] UNION ALL SELECT [GB_Tree_2_2].[KEY] AS [KEY], [GB_Tree_2_2].[Score_0] AS [Score_0], [GB_Tree_2_2].[Score_1] AS [Score_1], [GB_Tree_2_2].[Score_2] AS [Score_2], [GB_Tree_2_2].[Score_3] AS [Score_3] 
FROM [GB_Tree_2_2] UNION ALL SELECT [GB_Tree_2_3].[KEY] AS [KEY], [GB_Tree_2_3].[Score_0] AS [Score_0], [GB_Tree_2_3].[Score_1] AS [Score_1], [GB_Tree_2_3].[Score_2] AS [Score_2], [GB_Tree_2_3].[Score_3] AS [Score_3] 
FROM [GB_Tree_2_3] UNION ALL SELECT [GB_Tree_3_0].[KEY] AS [KEY], [GB_Tree_3_0].[Score_0] AS [Score_0], [GB_Tree_3_0].[Score_1] AS [Score_1], [GB_Tree_3_0].[Score_2] AS [Score_2], [GB_Tree_3_0].[Score_3] AS [Score_3] 
FROM [GB_Tree_3_0] UNION ALL SELECT [GB_Tree_3_1].[KEY] AS [KEY], [GB_Tree_3_1].[Score_0] AS [Score_0], [GB_Tree_3_1].[Score_1] AS [Score_1], [GB_Tree_3_1].[Score_2] AS [Score_2], [GB_Tree_3_1].[Score_3] AS [Score_3] 
FROM [GB_Tree_3_1] UNION ALL SELECT [GB_Tree_3_2].[KEY] AS [KEY], [GB_Tree_3_2].[Score_0] AS [Score_0], [GB_Tree_3_2].[Score_1] AS [Score_1], [GB_Tree_3_2].[Score_2] AS [Score_2], [GB_Tree_3_2].[Score_3] AS [Score_3] 
FROM [GB_Tree_3_2] UNION ALL SELECT [GB_Tree_3_3].[KEY] AS [KEY], [GB_Tree_3_3].[Score_0] AS [Score_0], [GB_Tree_3_3].[Score_1] AS [Score_1], [GB_Tree_3_3].[Score_2] AS [Score_2], [GB_Tree_3_3].[Score_3] AS [Score_3] 
FROM [GB_Tree_3_3] UNION ALL SELECT [GB_Tree_4_0].[KEY] AS [KEY], [GB_Tree_4_0].[Score_0] AS [Score_0], [GB_Tree_4_0].[Score_1] AS [Score_1], [GB_Tree_4_0].[Score_2] AS [Score_2], [GB_Tree_4_0].[Score_3] AS [Score_3] 
FROM [GB_Tree_4_0] UNION ALL SELECT [GB_Tree_4_1].[KEY] AS [KEY], [GB_Tree_4_1].[Score_0] AS [Score_0], [GB_Tree_4_1].[Score_1] AS [Score_1], [GB_Tree_4_1].[Score_2] AS [Score_2], [GB_Tree_4_1].[Score_3] AS [Score_3] 
FROM [GB_Tree_4_1] UNION ALL SELECT [GB_Tree_4_2].[KEY] AS [KEY], [GB_Tree_4_2].[Score_0] AS [Score_0], [GB_Tree_4_2].[Score_1] AS [Score_1], [GB_Tree_4_2].[Score_2] AS [Score_2], [GB_Tree_4_2].[Score_3] AS [Score_3] 
FROM [GB_Tree_4_2] UNION ALL SELECT [GB_Tree_4_3].[KEY] AS [KEY], [GB_Tree_4_3].[Score_0] AS [Score_0], [GB_Tree_4_3].[Score_1] AS [Score_1], [GB_Tree_4_3].[Score_2] AS [Score_2], [GB_Tree_4_3].[Score_3] AS [Score_3] 
FROM [GB_Tree_4_3] UNION ALL SELECT [GB_Tree_5_0].[KEY] AS [KEY], [GB_Tree_5_0].[Score_0] AS [Score_0], [GB_Tree_5_0].[Score_1] AS [Score_1], [GB_Tree_5_0].[Score_2] AS [Score_2], [GB_Tree_5_0].[Score_3] AS [Score_3] 
FROM [GB_Tree_5_0] UNION ALL SELECT [GB_Tree_5_1].[KEY] AS [KEY], [GB_Tree_5_1].[Score_0] AS [Score_0], [GB_Tree_5_1].[Score_1] AS [Score_1], [GB_Tree_5_1].[Score_2] AS [Score_2], [GB_Tree_5_1].[Score_3] AS [Score_3] 
FROM [GB_Tree_5_1] UNION ALL SELECT [GB_Tree_5_2].[KEY] AS [KEY], [GB_Tree_5_2].[Score_0] AS [Score_0], [GB_Tree_5_2].[Score_1] AS [Score_1], [GB_Tree_5_2].[Score_2] AS [Score_2], [GB_Tree_5_2].[Score_3] AS [Score_3] 
FROM [GB_Tree_5_2] UNION ALL SELECT [GB_Tree_5_3].[KEY] AS [KEY], [GB_Tree_5_3].[Score_0] AS [Score_0], [GB_Tree_5_3].[Score_1] AS [Score_1], [GB_Tree_5_3].[Score_2] AS [Score_2], [GB_Tree_5_3].[Score_3] AS [Score_3] 
FROM [GB_Tree_5_3] UNION ALL SELECT [GB_Tree_6_0].[KEY] AS [KEY], [GB_Tree_6_0].[Score_0] AS [Score_0], [GB_Tree_6_0].[Score_1] AS [Score_1], [GB_Tree_6_0].[Score_2] AS [Score_2], [GB_Tree_6_0].[Score_3] AS [Score_3] 
FROM [GB_Tree_6_0] UNION ALL SELECT [GB_Tree_6_1].[KEY] AS [KEY], [GB_Tree_6_1].[Score_0] AS [Score_0], [GB_Tree_6_1].[Score_1] AS [Score_1], [GB_Tree_6_1].[Score_2] AS [Score_2], [GB_Tree_6_1].[Score_3] AS [Score_3] 
FROM [GB_Tree_6_1] UNION ALL SELECT [GB_Tree_6_2].[KEY] AS [KEY], [GB_Tree_6_2].[Score_0] AS [Score_0], [GB_Tree_6_2].[Score_1] AS [Score_1], [GB_Tree_6_2].[Score_2] AS [Score_2], [GB_Tree_6_2].[Score_3] AS [Score_3] 
FROM [GB_Tree_6_2] UNION ALL SELECT [GB_Tree_6_3].[KEY] AS [KEY], [GB_Tree_6_3].[Score_0] AS [Score_0], [GB_Tree_6_3].[Score_1] AS [Score_1], [GB_Tree_6_3].[Score_2] AS [Score_2], [GB_Tree_6_3].[Score_3] AS [Score_3] 
FROM [GB_Tree_6_3] UNION ALL SELECT [GB_Tree_7_0].[KEY] AS [KEY], [GB_Tree_7_0].[Score_0] AS [Score_0], [GB_Tree_7_0].[Score_1] AS [Score_1], [GB_Tree_7_0].[Score_2] AS [Score_2], [GB_Tree_7_0].[Score_3] AS [Score_3] 
FROM [GB_Tree_7_0] UNION ALL SELECT [GB_Tree_7_1].[KEY] AS [KEY], [GB_Tree_7_1].[Score_0] AS [Score_0], [GB_Tree_7_1].[Score_1] AS [Score_1], [GB_Tree_7_1].[Score_2] AS [Score_2], [GB_Tree_7_1].[Score_3] AS [Score_3] 
FROM [GB_Tree_7_1] UNION ALL SELECT [GB_Tree_7_2].[KEY] AS [KEY], [GB_Tree_7_2].[Score_0] AS [Score_0], [GB_Tree_7_2].[Score_1] AS [Score_1], [GB_Tree_7_2].[Score_2] AS [Score_2], [GB_Tree_7_2].[Score_3] AS [Score_3] 
FROM [GB_Tree_7_2] UNION ALL SELECT [GB_Tree_7_3].[KEY] AS [KEY], [GB_Tree_7_3].[Score_0] AS [Score_0], [GB_Tree_7_3].[Score_1] AS [Score_1], [GB_Tree_7_3].[Score_2] AS [Score_2], [GB_Tree_7_3].[Score_3] AS [Score_3] 
FROM [GB_Tree_7_3] UNION ALL SELECT [GB_Tree_8_0].[KEY] AS [KEY], [GB_Tree_8_0].[Score_0] AS [Score_0], [GB_Tree_8_0].[Score_1] AS [Score_1], [GB_Tree_8_0].[Score_2] AS [Score_2], [GB_Tree_8_0].[Score_3] AS [Score_3] 
FROM [GB_Tree_8_0] UNION ALL SELECT [GB_Tree_8_1].[KEY] AS [KEY], [GB_Tree_8_1].[Score_0] AS [Score_0], [GB_Tree_8_1].[Score_1] AS [Score_1], [GB_Tree_8_1].[Score_2] AS [Score_2], [GB_Tree_8_1].[Score_3] AS [Score_3] 
FROM [GB_Tree_8_1] UNION ALL SELECT [GB_Tree_8_2].[KEY] AS [KEY], [GB_Tree_8_2].[Score_0] AS [Score_0], [GB_Tree_8_2].[Score_1] AS [Score_1], [GB_Tree_8_2].[Score_2] AS [Score_2], [GB_Tree_8_2].[Score_3] AS [Score_3] 
FROM [GB_Tree_8_2] UNION ALL SELECT [GB_Tree_8_3].[KEY] AS [KEY], [GB_Tree_8_3].[Score_0] AS [Score_0], [GB_Tree_8_3].[Score_1] AS [Score_1], [GB_Tree_8_3].[Score_2] AS [Score_2], [GB_Tree_8_3].[Score_3] AS [Score_3] 
FROM [GB_Tree_8_3] UNION ALL SELECT [GB_Tree_9_0].[KEY] AS [KEY], [GB_Tree_9_0].[Score_0] AS [Score_0], [GB_Tree_9_0].[Score_1] AS [Score_1], [GB_Tree_9_0].[Score_2] AS [Score_2], [GB_Tree_9_0].[Score_3] AS [Score_3] 
FROM [GB_Tree_9_0] UNION ALL SELECT [GB_Tree_9_1].[KEY] AS [KEY], [GB_Tree_9_1].[Score_0] AS [Score_0], [GB_Tree_9_1].[Score_1] AS [Score_1], [GB_Tree_9_1].[Score_2] AS [Score_2], [GB_Tree_9_1].[Score_3] AS [Score_3] 
FROM [GB_Tree_9_1] UNION ALL SELECT [GB_Tree_9_2].[KEY] AS [KEY], [GB_Tree_9_2].[Score_0] AS [Score_0], [GB_Tree_9_2].[Score_1] AS [Score_1], [GB_Tree_9_2].[Score_2] AS [Score_2], [GB_Tree_9_2].[Score_3] AS [Score_3] 
FROM [GB_Tree_9_2] UNION ALL SELECT [GB_Tree_9_3].[KEY] AS [KEY], [GB_Tree_9_3].[Score_0] AS [Score_0], [GB_Tree_9_3].[Score_1] AS [Score_1], [GB_Tree_9_3].[Score_2] AS [Score_2], [GB_Tree_9_3].[Score_3] AS [Score_3] 
FROM [GB_Tree_9_3] UNION ALL SELECT [GB_Tree_10_0].[KEY] AS [KEY], [GB_Tree_10_0].[Score_0] AS [Score_0], [GB_Tree_10_0].[Score_1] AS [Score_1], [GB_Tree_10_0].[Score_2] AS [Score_2], [GB_Tree_10_0].[Score_3] AS [Score_3] 
FROM [GB_Tree_10_0] UNION ALL SELECT [GB_Tree_10_1].[KEY] AS [KEY], [GB_Tree_10_1].[Score_0] AS [Score_0], [GB_Tree_10_1].[Score_1] AS [Score_1], [GB_Tree_10_1].[Score_2] AS [Score_2], [GB_Tree_10_1].[Score_3] AS [Score_3] 
FROM [GB_Tree_10_1] UNION ALL SELECT [GB_Tree_10_2].[KEY] AS [KEY], [GB_Tree_10_2].[Score_0] AS [Score_0], [GB_Tree_10_2].[Score_1] AS [Score_1], [GB_Tree_10_2].[Score_2] AS [Score_2], [GB_Tree_10_2].[Score_3] AS [Score_3] 
FROM [GB_Tree_10_2] UNION ALL SELECT [GB_Tree_10_3].[KEY] AS [KEY], [GB_Tree_10_3].[Score_0] AS [Score_0], [GB_Tree_10_3].[Score_1] AS [Score_1], [GB_Tree_10_3].[Score_2] AS [Score_2], [GB_Tree_10_3].[Score_3] AS [Score_3] 
FROM [GB_Tree_10_3] UNION ALL SELECT [GB_Tree_11_0].[KEY] AS [KEY], [GB_Tree_11_0].[Score_0] AS [Score_0], [GB_Tree_11_0].[Score_1] AS [Score_1], [GB_Tree_11_0].[Score_2] AS [Score_2], [GB_Tree_11_0].[Score_3] AS [Score_3] 
FROM [GB_Tree_11_0] UNION ALL SELECT [GB_Tree_11_1].[KEY] AS [KEY], [GB_Tree_11_1].[Score_0] AS [Score_0], [GB_Tree_11_1].[Score_1] AS [Score_1], [GB_Tree_11_1].[Score_2] AS [Score_2], [GB_Tree_11_1].[Score_3] AS [Score_3] 
FROM [GB_Tree_11_1] UNION ALL SELECT [GB_Tree_11_2].[KEY] AS [KEY], [GB_Tree_11_2].[Score_0] AS [Score_0], [GB_Tree_11_2].[Score_1] AS [Score_1], [GB_Tree_11_2].[Score_2] AS [Score_2], [GB_Tree_11_2].[Score_3] AS [Score_3] 
FROM [GB_Tree_11_2] UNION ALL SELECT [GB_Tree_11_3].[KEY] AS [KEY], [GB_Tree_11_3].[Score_0] AS [Score_0], [GB_Tree_11_3].[Score_1] AS [Score_1], [GB_Tree_11_3].[Score_2] AS [Score_2], [GB_Tree_11_3].[Score_3] AS [Score_3] 
FROM [GB_Tree_11_3] UNION ALL SELECT [GB_Tree_12_0].[KEY] AS [KEY], [GB_Tree_12_0].[Score_0] AS [Score_0], [GB_Tree_12_0].[Score_1] AS [Score_1], [GB_Tree_12_0].[Score_2] AS [Score_2], [GB_Tree_12_0].[Score_3] AS [Score_3] 
FROM [GB_Tree_12_0] UNION ALL SELECT [GB_Tree_12_1].[KEY] AS [KEY], [GB_Tree_12_1].[Score_0] AS [Score_0], [GB_Tree_12_1].[Score_1] AS [Score_1], [GB_Tree_12_1].[Score_2] AS [Score_2], [GB_Tree_12_1].[Score_3] AS [Score_3] 
FROM [GB_Tree_12_1] UNION ALL SELECT [GB_Tree_12_2].[KEY] AS [KEY], [GB_Tree_12_2].[Score_0] AS [Score_0], [GB_Tree_12_2].[Score_1] AS [Score_1], [GB_Tree_12_2].[Score_2] AS [Score_2], [GB_Tree_12_2].[Score_3] AS [Score_3] 
FROM [GB_Tree_12_2] UNION ALL SELECT [GB_Tree_12_3].[KEY] AS [KEY], [GB_Tree_12_3].[Score_0] AS [Score_0], [GB_Tree_12_3].[Score_1] AS [Score_1], [GB_Tree_12_3].[Score_2] AS [Score_2], [GB_Tree_12_3].[Score_3] AS [Score_3] 
FROM [GB_Tree_12_3] UNION ALL SELECT [GB_Tree_13_0].[KEY] AS [KEY], [GB_Tree_13_0].[Score_0] AS [Score_0], [GB_Tree_13_0].[Score_1] AS [Score_1], [GB_Tree_13_0].[Score_2] AS [Score_2], [GB_Tree_13_0].[Score_3] AS [Score_3] 
FROM [GB_Tree_13_0] UNION ALL SELECT [GB_Tree_13_1].[KEY] AS [KEY], [GB_Tree_13_1].[Score_0] AS [Score_0], [GB_Tree_13_1].[Score_1] AS [Score_1], [GB_Tree_13_1].[Score_2] AS [Score_2], [GB_Tree_13_1].[Score_3] AS [Score_3] 
FROM [GB_Tree_13_1] UNION ALL SELECT [GB_Tree_13_2].[KEY] AS [KEY], [GB_Tree_13_2].[Score_0] AS [Score_0], [GB_Tree_13_2].[Score_1] AS [Score_1], [GB_Tree_13_2].[Score_2] AS [Score_2], [GB_Tree_13_2].[Score_3] AS [Score_3] 
FROM [GB_Tree_13_2] UNION ALL SELECT [GB_Tree_13_3].[KEY] AS [KEY], [GB_Tree_13_3].[Score_0] AS [Score_0], [GB_Tree_13_3].[Score_1] AS [Score_1], [GB_Tree_13_3].[Score_2] AS [Score_2], [GB_Tree_13_3].[Score_3] AS [Score_3] 
FROM [GB_Tree_13_3] UNION ALL SELECT [GB_Tree_14_0].[KEY] AS [KEY], [GB_Tree_14_0].[Score_0] AS [Score_0], [GB_Tree_14_0].[Score_1] AS [Score_1], [GB_Tree_14_0].[Score_2] AS [Score_2], [GB_Tree_14_0].[Score_3] AS [Score_3] 
FROM [GB_Tree_14_0] UNION ALL SELECT [GB_Tree_14_1].[KEY] AS [KEY], [GB_Tree_14_1].[Score_0] AS [Score_0], [GB_Tree_14_1].[Score_1] AS [Score_1], [GB_Tree_14_1].[Score_2] AS [Score_2], [GB_Tree_14_1].[Score_3] AS [Score_3] 
FROM [GB_Tree_14_1] UNION ALL SELECT [GB_Tree_14_2].[KEY] AS [KEY], [GB_Tree_14_2].[Score_0] AS [Score_0], [GB_Tree_14_2].[Score_1] AS [Score_1], [GB_Tree_14_2].[Score_2] AS [Score_2], [GB_Tree_14_2].[Score_3] AS [Score_3] 
FROM [GB_Tree_14_2] UNION ALL SELECT [GB_Tree_14_3].[KEY] AS [KEY], [GB_Tree_14_3].[Score_0] AS [Score_0], [GB_Tree_14_3].[Score_1] AS [Score_1], [GB_Tree_14_3].[Score_2] AS [Score_2], [GB_Tree_14_3].[Score_3] AS [Score_3] 
FROM [GB_Tree_14_3] UNION ALL SELECT [GB_Tree_15_0].[KEY] AS [KEY], [GB_Tree_15_0].[Score_0] AS [Score_0], [GB_Tree_15_0].[Score_1] AS [Score_1], [GB_Tree_15_0].[Score_2] AS [Score_2], [GB_Tree_15_0].[Score_3] AS [Score_3] 
FROM [GB_Tree_15_0] UNION ALL SELECT [GB_Tree_15_1].[KEY] AS [KEY], [GB_Tree_15_1].[Score_0] AS [Score_0], [GB_Tree_15_1].[Score_1] AS [Score_1], [GB_Tree_15_1].[Score_2] AS [Score_2], [GB_Tree_15_1].[Score_3] AS [Score_3] 
FROM [GB_Tree_15_1] UNION ALL SELECT [GB_Tree_15_2].[KEY] AS [KEY], [GB_Tree_15_2].[Score_0] AS [Score_0], [GB_Tree_15_2].[Score_1] AS [Score_1], [GB_Tree_15_2].[Score_2] AS [Score_2], [GB_Tree_15_2].[Score_3] AS [Score_3] 
FROM [GB_Tree_15_2] UNION ALL SELECT [GB_Tree_15_3].[KEY] AS [KEY], [GB_Tree_15_3].[Score_0] AS [Score_0], [GB_Tree_15_3].[Score_1] AS [Score_1], [GB_Tree_15_3].[Score_2] AS [Score_2], [GB_Tree_15_3].[Score_3] AS [Score_3] 
FROM [GB_Tree_15_3] UNION ALL SELECT [GB_Tree_16_0].[KEY] AS [KEY], [GB_Tree_16_0].[Score_0] AS [Score_0], [GB_Tree_16_0].[Score_1] AS [Score_1], [GB_Tree_16_0].[Score_2] AS [Score_2], [GB_Tree_16_0].[Score_3] AS [Score_3] 
FROM [GB_Tree_16_0] UNION ALL SELECT [GB_Tree_16_1].[KEY] AS [KEY], [GB_Tree_16_1].[Score_0] AS [Score_0], [GB_Tree_16_1].[Score_1] AS [Score_1], [GB_Tree_16_1].[Score_2] AS [Score_2], [GB_Tree_16_1].[Score_3] AS [Score_3] 
FROM [GB_Tree_16_1] UNION ALL SELECT [GB_Tree_16_2].[KEY] AS [KEY], [GB_Tree_16_2].[Score_0] AS [Score_0], [GB_Tree_16_2].[Score_1] AS [Score_1], [GB_Tree_16_2].[Score_2] AS [Score_2], [GB_Tree_16_2].[Score_3] AS [Score_3] 
FROM [GB_Tree_16_2] UNION ALL SELECT [GB_Tree_16_3].[KEY] AS [KEY], [GB_Tree_16_3].[Score_0] AS [Score_0], [GB_Tree_16_3].[Score_1] AS [Score_1], [GB_Tree_16_3].[Score_2] AS [Score_2], [GB_Tree_16_3].[Score_3] AS [Score_3] 
FROM [GB_Tree_16_3] UNION ALL SELECT [GB_Tree_17_0].[KEY] AS [KEY], [GB_Tree_17_0].[Score_0] AS [Score_0], [GB_Tree_17_0].[Score_1] AS [Score_1], [GB_Tree_17_0].[Score_2] AS [Score_2], [GB_Tree_17_0].[Score_3] AS [Score_3] 
FROM [GB_Tree_17_0] UNION ALL SELECT [GB_Tree_17_1].[KEY] AS [KEY], [GB_Tree_17_1].[Score_0] AS [Score_0], [GB_Tree_17_1].[Score_1] AS [Score_1], [GB_Tree_17_1].[Score_2] AS [Score_2], [GB_Tree_17_1].[Score_3] AS [Score_3] 
FROM [GB_Tree_17_1] UNION ALL SELECT [GB_Tree_17_2].[KEY] AS [KEY], [GB_Tree_17_2].[Score_0] AS [Score_0], [GB_Tree_17_2].[Score_1] AS [Score_1], [GB_Tree_17_2].[Score_2] AS [Score_2], [GB_Tree_17_2].[Score_3] AS [Score_3] 
FROM [GB_Tree_17_2] UNION ALL SELECT [GB_Tree_17_3].[KEY] AS [KEY], [GB_Tree_17_3].[Score_0] AS [Score_0], [GB_Tree_17_3].[Score_1] AS [Score_1], [GB_Tree_17_3].[Score_2] AS [Score_2], [GB_Tree_17_3].[Score_3] AS [Score_3] 
FROM [GB_Tree_17_3] UNION ALL SELECT [GB_Tree_18_0].[KEY] AS [KEY], [GB_Tree_18_0].[Score_0] AS [Score_0], [GB_Tree_18_0].[Score_1] AS [Score_1], [GB_Tree_18_0].[Score_2] AS [Score_2], [GB_Tree_18_0].[Score_3] AS [Score_3] 
FROM [GB_Tree_18_0] UNION ALL SELECT [GB_Tree_18_1].[KEY] AS [KEY], [GB_Tree_18_1].[Score_0] AS [Score_0], [GB_Tree_18_1].[Score_1] AS [Score_1], [GB_Tree_18_1].[Score_2] AS [Score_2], [GB_Tree_18_1].[Score_3] AS [Score_3] 
FROM [GB_Tree_18_1] UNION ALL SELECT [GB_Tree_18_2].[KEY] AS [KEY], [GB_Tree_18_2].[Score_0] AS [Score_0], [GB_Tree_18_2].[Score_1] AS [Score_1], [GB_Tree_18_2].[Score_2] AS [Score_2], [GB_Tree_18_2].[Score_3] AS [Score_3] 
FROM [GB_Tree_18_2] UNION ALL SELECT [GB_Tree_18_3].[KEY] AS [KEY], [GB_Tree_18_3].[Score_0] AS [Score_0], [GB_Tree_18_3].[Score_1] AS [Score_1], [GB_Tree_18_3].[Score_2] AS [Score_2], [GB_Tree_18_3].[Score_3] AS [Score_3] 
FROM [GB_Tree_18_3] UNION ALL SELECT [GB_Tree_19_0].[KEY] AS [KEY], [GB_Tree_19_0].[Score_0] AS [Score_0], [GB_Tree_19_0].[Score_1] AS [Score_1], [GB_Tree_19_0].[Score_2] AS [Score_2], [GB_Tree_19_0].[Score_3] AS [Score_3] 
FROM [GB_Tree_19_0] UNION ALL SELECT [GB_Tree_19_1].[KEY] AS [KEY], [GB_Tree_19_1].[Score_0] AS [Score_0], [GB_Tree_19_1].[Score_1] AS [Score_1], [GB_Tree_19_1].[Score_2] AS [Score_2], [GB_Tree_19_1].[Score_3] AS [Score_3] 
FROM [GB_Tree_19_1] UNION ALL SELECT [GB_Tree_19_2].[KEY] AS [KEY], [GB_Tree_19_2].[Score_0] AS [Score_0], [GB_Tree_19_2].[Score_1] AS [Score_1], [GB_Tree_19_2].[Score_2] AS [Score_2], [GB_Tree_19_2].[Score_3] AS [Score_3] 
FROM [GB_Tree_19_2] UNION ALL SELECT [GB_Tree_19_3].[KEY] AS [KEY], [GB_Tree_19_3].[Score_0] AS [Score_0], [GB_Tree_19_3].[Score_1] AS [Score_1], [GB_Tree_19_3].[Score_2] AS [Score_2], [GB_Tree_19_3].[Score_3] AS [Score_3] 
FROM [GB_Tree_19_3] UNION ALL SELECT [GB_Tree_20_0].[KEY] AS [KEY], [GB_Tree_20_0].[Score_0] AS [Score_0], [GB_Tree_20_0].[Score_1] AS [Score_1], [GB_Tree_20_0].[Score_2] AS [Score_2], [GB_Tree_20_0].[Score_3] AS [Score_3] 
FROM [GB_Tree_20_0] UNION ALL SELECT [GB_Tree_20_1].[KEY] AS [KEY], [GB_Tree_20_1].[Score_0] AS [Score_0], [GB_Tree_20_1].[Score_1] AS [Score_1], [GB_Tree_20_1].[Score_2] AS [Score_2], [GB_Tree_20_1].[Score_3] AS [Score_3] 
FROM [GB_Tree_20_1] UNION ALL SELECT [GB_Tree_20_2].[KEY] AS [KEY], [GB_Tree_20_2].[Score_0] AS [Score_0], [GB_Tree_20_2].[Score_1] AS [Score_1], [GB_Tree_20_2].[Score_2] AS [Score_2], [GB_Tree_20_2].[Score_3] AS [Score_3] 
FROM [GB_Tree_20_2] UNION ALL SELECT [GB_Tree_20_3].[KEY] AS [KEY], [GB_Tree_20_3].[Score_0] AS [Score_0], [GB_Tree_20_3].[Score_1] AS [Score_1], [GB_Tree_20_3].[Score_2] AS [Score_2], [GB_Tree_20_3].[Score_3] AS [Score_3] 
FROM [GB_Tree_20_3] UNION ALL SELECT [GB_Tree_21_0].[KEY] AS [KEY], [GB_Tree_21_0].[Score_0] AS [Score_0], [GB_Tree_21_0].[Score_1] AS [Score_1], [GB_Tree_21_0].[Score_2] AS [Score_2], [GB_Tree_21_0].[Score_3] AS [Score_3] 
FROM [GB_Tree_21_0] UNION ALL SELECT [GB_Tree_21_1].[KEY] AS [KEY], [GB_Tree_21_1].[Score_0] AS [Score_0], [GB_Tree_21_1].[Score_1] AS [Score_1], [GB_Tree_21_1].[Score_2] AS [Score_2], [GB_Tree_21_1].[Score_3] AS [Score_3] 
FROM [GB_Tree_21_1] UNION ALL SELECT [GB_Tree_21_2].[KEY] AS [KEY], [GB_Tree_21_2].[Score_0] AS [Score_0], [GB_Tree_21_2].[Score_1] AS [Score_1], [GB_Tree_21_2].[Score_2] AS [Score_2], [GB_Tree_21_2].[Score_3] AS [Score_3] 
FROM [GB_Tree_21_2] UNION ALL SELECT [GB_Tree_21_3].[KEY] AS [KEY], [GB_Tree_21_3].[Score_0] AS [Score_0], [GB_Tree_21_3].[Score_1] AS [Score_1], [GB_Tree_21_3].[Score_2] AS [Score_2], [GB_Tree_21_3].[Score_3] AS [Score_3] 
FROM [GB_Tree_21_3] UNION ALL SELECT [GB_Tree_22_0].[KEY] AS [KEY], [GB_Tree_22_0].[Score_0] AS [Score_0], [GB_Tree_22_0].[Score_1] AS [Score_1], [GB_Tree_22_0].[Score_2] AS [Score_2], [GB_Tree_22_0].[Score_3] AS [Score_3] 
FROM [GB_Tree_22_0] UNION ALL SELECT [GB_Tree_22_1].[KEY] AS [KEY], [GB_Tree_22_1].[Score_0] AS [Score_0], [GB_Tree_22_1].[Score_1] AS [Score_1], [GB_Tree_22_1].[Score_2] AS [Score_2], [GB_Tree_22_1].[Score_3] AS [Score_3] 
FROM [GB_Tree_22_1] UNION ALL SELECT [GB_Tree_22_2].[KEY] AS [KEY], [GB_Tree_22_2].[Score_0] AS [Score_0], [GB_Tree_22_2].[Score_1] AS [Score_1], [GB_Tree_22_2].[Score_2] AS [Score_2], [GB_Tree_22_2].[Score_3] AS [Score_3] 
FROM [GB_Tree_22_2] UNION ALL SELECT [GB_Tree_22_3].[KEY] AS [KEY], [GB_Tree_22_3].[Score_0] AS [Score_0], [GB_Tree_22_3].[Score_1] AS [Score_1], [GB_Tree_22_3].[Score_2] AS [Score_2], [GB_Tree_22_3].[Score_3] AS [Score_3] 
FROM [GB_Tree_22_3] UNION ALL SELECT [GB_Tree_23_0].[KEY] AS [KEY], [GB_Tree_23_0].[Score_0] AS [Score_0], [GB_Tree_23_0].[Score_1] AS [Score_1], [GB_Tree_23_0].[Score_2] AS [Score_2], [GB_Tree_23_0].[Score_3] AS [Score_3] 
FROM [GB_Tree_23_0] UNION ALL SELECT [GB_Tree_23_1].[KEY] AS [KEY], [GB_Tree_23_1].[Score_0] AS [Score_0], [GB_Tree_23_1].[Score_1] AS [Score_1], [GB_Tree_23_1].[Score_2] AS [Score_2], [GB_Tree_23_1].[Score_3] AS [Score_3] 
FROM [GB_Tree_23_1] UNION ALL SELECT [GB_Tree_23_2].[KEY] AS [KEY], [GB_Tree_23_2].[Score_0] AS [Score_0], [GB_Tree_23_2].[Score_1] AS [Score_1], [GB_Tree_23_2].[Score_2] AS [Score_2], [GB_Tree_23_2].[Score_3] AS [Score_3] 
FROM [GB_Tree_23_2] UNION ALL SELECT [GB_Tree_23_3].[KEY] AS [KEY], [GB_Tree_23_3].[Score_0] AS [Score_0], [GB_Tree_23_3].[Score_1] AS [Score_1], [GB_Tree_23_3].[Score_2] AS [Score_2], [GB_Tree_23_3].[Score_3] AS [Score_3] 
FROM [GB_Tree_23_3] UNION ALL SELECT [GB_Tree_24_0].[KEY] AS [KEY], [GB_Tree_24_0].[Score_0] AS [Score_0], [GB_Tree_24_0].[Score_1] AS [Score_1], [GB_Tree_24_0].[Score_2] AS [Score_2], [GB_Tree_24_0].[Score_3] AS [Score_3] 
FROM [GB_Tree_24_0] UNION ALL SELECT [GB_Tree_24_1].[KEY] AS [KEY], [GB_Tree_24_1].[Score_0] AS [Score_0], [GB_Tree_24_1].[Score_1] AS [Score_1], [GB_Tree_24_1].[Score_2] AS [Score_2], [GB_Tree_24_1].[Score_3] AS [Score_3] 
FROM [GB_Tree_24_1] UNION ALL SELECT [GB_Tree_24_2].[KEY] AS [KEY], [GB_Tree_24_2].[Score_0] AS [Score_0], [GB_Tree_24_2].[Score_1] AS [Score_1], [GB_Tree_24_2].[Score_2] AS [Score_2], [GB_Tree_24_2].[Score_3] AS [Score_3] 
FROM [GB_Tree_24_2] UNION ALL SELECT [GB_Tree_24_3].[KEY] AS [KEY], [GB_Tree_24_3].[Score_0] AS [Score_0], [GB_Tree_24_3].[Score_1] AS [Score_1], [GB_Tree_24_3].[Score_2] AS [Score_2], [GB_Tree_24_3].[Score_3] AS [Score_3] 
FROM [GB_Tree_24_3] UNION ALL SELECT [GB_Tree_25_0].[KEY] AS [KEY], [GB_Tree_25_0].[Score_0] AS [Score_0], [GB_Tree_25_0].[Score_1] AS [Score_1], [GB_Tree_25_0].[Score_2] AS [Score_2], [GB_Tree_25_0].[Score_3] AS [Score_3] 
FROM [GB_Tree_25_0] UNION ALL SELECT [GB_Tree_25_1].[KEY] AS [KEY], [GB_Tree_25_1].[Score_0] AS [Score_0], [GB_Tree_25_1].[Score_1] AS [Score_1], [GB_Tree_25_1].[Score_2] AS [Score_2], [GB_Tree_25_1].[Score_3] AS [Score_3] 
FROM [GB_Tree_25_1] UNION ALL SELECT [GB_Tree_25_2].[KEY] AS [KEY], [GB_Tree_25_2].[Score_0] AS [Score_0], [GB_Tree_25_2].[Score_1] AS [Score_1], [GB_Tree_25_2].[Score_2] AS [Score_2], [GB_Tree_25_2].[Score_3] AS [Score_3] 
FROM [GB_Tree_25_2] UNION ALL SELECT [GB_Tree_25_3].[KEY] AS [KEY], [GB_Tree_25_3].[Score_0] AS [Score_0], [GB_Tree_25_3].[Score_1] AS [Score_1], [GB_Tree_25_3].[Score_2] AS [Score_2], [GB_Tree_25_3].[Score_3] AS [Score_3] 
FROM [GB_Tree_25_3] UNION ALL SELECT [GB_Tree_26_0].[KEY] AS [KEY], [GB_Tree_26_0].[Score_0] AS [Score_0], [GB_Tree_26_0].[Score_1] AS [Score_1], [GB_Tree_26_0].[Score_2] AS [Score_2], [GB_Tree_26_0].[Score_3] AS [Score_3] 
FROM [GB_Tree_26_0] UNION ALL SELECT [GB_Tree_26_1].[KEY] AS [KEY], [GB_Tree_26_1].[Score_0] AS [Score_0], [GB_Tree_26_1].[Score_1] AS [Score_1], [GB_Tree_26_1].[Score_2] AS [Score_2], [GB_Tree_26_1].[Score_3] AS [Score_3] 
FROM [GB_Tree_26_1] UNION ALL SELECT [GB_Tree_26_2].[KEY] AS [KEY], [GB_Tree_26_2].[Score_0] AS [Score_0], [GB_Tree_26_2].[Score_1] AS [Score_1], [GB_Tree_26_2].[Score_2] AS [Score_2], [GB_Tree_26_2].[Score_3] AS [Score_3] 
FROM [GB_Tree_26_2] UNION ALL SELECT [GB_Tree_26_3].[KEY] AS [KEY], [GB_Tree_26_3].[Score_0] AS [Score_0], [GB_Tree_26_3].[Score_1] AS [Score_1], [GB_Tree_26_3].[Score_2] AS [Score_2], [GB_Tree_26_3].[Score_3] AS [Score_3] 
FROM [GB_Tree_26_3] UNION ALL SELECT [GB_Tree_27_0].[KEY] AS [KEY], [GB_Tree_27_0].[Score_0] AS [Score_0], [GB_Tree_27_0].[Score_1] AS [Score_1], [GB_Tree_27_0].[Score_2] AS [Score_2], [GB_Tree_27_0].[Score_3] AS [Score_3] 
FROM [GB_Tree_27_0] UNION ALL SELECT [GB_Tree_27_1].[KEY] AS [KEY], [GB_Tree_27_1].[Score_0] AS [Score_0], [GB_Tree_27_1].[Score_1] AS [Score_1], [GB_Tree_27_1].[Score_2] AS [Score_2], [GB_Tree_27_1].[Score_3] AS [Score_3] 
FROM [GB_Tree_27_1] UNION ALL SELECT [GB_Tree_27_2].[KEY] AS [KEY], [GB_Tree_27_2].[Score_0] AS [Score_0], [GB_Tree_27_2].[Score_1] AS [Score_1], [GB_Tree_27_2].[Score_2] AS [Score_2], [GB_Tree_27_2].[Score_3] AS [Score_3] 
FROM [GB_Tree_27_2] UNION ALL SELECT [GB_Tree_27_3].[KEY] AS [KEY], [GB_Tree_27_3].[Score_0] AS [Score_0], [GB_Tree_27_3].[Score_1] AS [Score_1], [GB_Tree_27_3].[Score_2] AS [Score_2], [GB_Tree_27_3].[Score_3] AS [Score_3] 
FROM [GB_Tree_27_3] UNION ALL SELECT [GB_Tree_28_0].[KEY] AS [KEY], [GB_Tree_28_0].[Score_0] AS [Score_0], [GB_Tree_28_0].[Score_1] AS [Score_1], [GB_Tree_28_0].[Score_2] AS [Score_2], [GB_Tree_28_0].[Score_3] AS [Score_3] 
FROM [GB_Tree_28_0] UNION ALL SELECT [GB_Tree_28_1].[KEY] AS [KEY], [GB_Tree_28_1].[Score_0] AS [Score_0], [GB_Tree_28_1].[Score_1] AS [Score_1], [GB_Tree_28_1].[Score_2] AS [Score_2], [GB_Tree_28_1].[Score_3] AS [Score_3] 
FROM [GB_Tree_28_1] UNION ALL SELECT [GB_Tree_28_2].[KEY] AS [KEY], [GB_Tree_28_2].[Score_0] AS [Score_0], [GB_Tree_28_2].[Score_1] AS [Score_1], [GB_Tree_28_2].[Score_2] AS [Score_2], [GB_Tree_28_2].[Score_3] AS [Score_3] 
FROM [GB_Tree_28_2] UNION ALL SELECT [GB_Tree_28_3].[KEY] AS [KEY], [GB_Tree_28_3].[Score_0] AS [Score_0], [GB_Tree_28_3].[Score_1] AS [Score_1], [GB_Tree_28_3].[Score_2] AS [Score_2], [GB_Tree_28_3].[Score_3] AS [Score_3] 
FROM [GB_Tree_28_3] UNION ALL SELECT [GB_Tree_29_0].[KEY] AS [KEY], [GB_Tree_29_0].[Score_0] AS [Score_0], [GB_Tree_29_0].[Score_1] AS [Score_1], [GB_Tree_29_0].[Score_2] AS [Score_2], [GB_Tree_29_0].[Score_3] AS [Score_3] 
FROM [GB_Tree_29_0] UNION ALL SELECT [GB_Tree_29_1].[KEY] AS [KEY], [GB_Tree_29_1].[Score_0] AS [Score_0], [GB_Tree_29_1].[Score_1] AS [Score_1], [GB_Tree_29_1].[Score_2] AS [Score_2], [GB_Tree_29_1].[Score_3] AS [Score_3] 
FROM [GB_Tree_29_1] UNION ALL SELECT [GB_Tree_29_2].[KEY] AS [KEY], [GB_Tree_29_2].[Score_0] AS [Score_0], [GB_Tree_29_2].[Score_1] AS [Score_1], [GB_Tree_29_2].[Score_2] AS [Score_2], [GB_Tree_29_2].[Score_3] AS [Score_3] 
FROM [GB_Tree_29_2] UNION ALL SELECT [GB_Tree_29_3].[KEY] AS [KEY], [GB_Tree_29_3].[Score_0] AS [Score_0], [GB_Tree_29_3].[Score_1] AS [Score_1], [GB_Tree_29_3].[Score_2] AS [Score_2], [GB_Tree_29_3].[Score_3] AS [Score_3] 
FROM [GB_Tree_29_3] UNION ALL SELECT [GB_Tree_30_0].[KEY] AS [KEY], [GB_Tree_30_0].[Score_0] AS [Score_0], [GB_Tree_30_0].[Score_1] AS [Score_1], [GB_Tree_30_0].[Score_2] AS [Score_2], [GB_Tree_30_0].[Score_3] AS [Score_3] 
FROM [GB_Tree_30_0] UNION ALL SELECT [GB_Tree_30_1].[KEY] AS [KEY], [GB_Tree_30_1].[Score_0] AS [Score_0], [GB_Tree_30_1].[Score_1] AS [Score_1], [GB_Tree_30_1].[Score_2] AS [Score_2], [GB_Tree_30_1].[Score_3] AS [Score_3] 
FROM [GB_Tree_30_1] UNION ALL SELECT [GB_Tree_30_2].[KEY] AS [KEY], [GB_Tree_30_2].[Score_0] AS [Score_0], [GB_Tree_30_2].[Score_1] AS [Score_1], [GB_Tree_30_2].[Score_2] AS [Score_2], [GB_Tree_30_2].[Score_3] AS [Score_3] 
FROM [GB_Tree_30_2] UNION ALL SELECT [GB_Tree_30_3].[KEY] AS [KEY], [GB_Tree_30_3].[Score_0] AS [Score_0], [GB_Tree_30_3].[Score_1] AS [Score_1], [GB_Tree_30_3].[Score_2] AS [Score_2], [GB_Tree_30_3].[Score_3] AS [Score_3] 
FROM [GB_Tree_30_3] UNION ALL SELECT [GB_Tree_31_0].[KEY] AS [KEY], [GB_Tree_31_0].[Score_0] AS [Score_0], [GB_Tree_31_0].[Score_1] AS [Score_1], [GB_Tree_31_0].[Score_2] AS [Score_2], [GB_Tree_31_0].[Score_3] AS [Score_3] 
FROM [GB_Tree_31_0] UNION ALL SELECT [GB_Tree_31_1].[KEY] AS [KEY], [GB_Tree_31_1].[Score_0] AS [Score_0], [GB_Tree_31_1].[Score_1] AS [Score_1], [GB_Tree_31_1].[Score_2] AS [Score_2], [GB_Tree_31_1].[Score_3] AS [Score_3] 
FROM [GB_Tree_31_1] UNION ALL SELECT [GB_Tree_31_2].[KEY] AS [KEY], [GB_Tree_31_2].[Score_0] AS [Score_0], [GB_Tree_31_2].[Score_1] AS [Score_1], [GB_Tree_31_2].[Score_2] AS [Score_2], [GB_Tree_31_2].[Score_3] AS [Score_3] 
FROM [GB_Tree_31_2] UNION ALL SELECT [GB_Tree_31_3].[KEY] AS [KEY], [GB_Tree_31_3].[Score_0] AS [Score_0], [GB_Tree_31_3].[Score_1] AS [Score_1], [GB_Tree_31_3].[Score_2] AS [Score_2], [GB_Tree_31_3].[Score_3] AS [Score_3] 
FROM [GB_Tree_31_3]) AS ensemble_score_union), 
[GradBoost_Sum_Scores] AS 
(SELECT [T].[KEY] AS [KEY], [T].[Score_0] AS [Score_0], [T].[Score_1] AS [Score_1], [T].[Score_2] AS [Score_2], [T].[Score_3] AS [Score_3] 
FROM (SELECT [Score_Union_CTE].[KEY] AS [KEY], sum([Score_Union_CTE].[Score_0]) AS [Score_0], sum([Score_Union_CTE].[Score_1]) AS [Score_1], sum([Score_Union_CTE].[Score_2]) AS [Score_2], sum([Score_Union_CTE].[Score_3]) AS [Score_3] 
FROM [Score_Union_CTE] GROUP BY [Score_Union_CTE].[KEY]) AS [T]), 
orig_cte AS 
(SELECT [GradBoost_Sum_Scores].[KEY] AS [KEY], 0.245 + 0.1 * [GradBoost_Sum_Scores].[Score_0] AS [Score_0], 0.24875 + 0.1 * [GradBoost_Sum_Scores].[Score_1] AS [Score_1], 0.2525 + 0.1 * [GradBoost_Sum_Scores].[Score_2] AS [Score_2], 0.25375 + 0.1 * [GradBoost_Sum_Scores].[Score_3] AS [Score_3], CAST(NULL AS FLOAT) AS [Proba_0], CAST(NULL AS FLOAT) AS [Proba_1], CAST(NULL AS FLOAT) AS [Proba_2], CAST(NULL AS FLOAT) AS [Proba_3], CAST(NULL AS FLOAT) AS [LogProba_0], CAST(NULL AS FLOAT) AS [LogProba_1], CAST(NULL AS FLOAT) AS [LogProba_2], CAST(NULL AS FLOAT) AS [LogProba_3], CAST(NULL AS INTEGER) AS [Decision], CAST(NULL AS FLOAT) AS [DecisionProba] 
FROM [GradBoost_Sum_Scores]), 
score_class_union AS 
(SELECT scu.[KEY_u] AS [KEY_u], scu.class AS class, scu.[LogProba] AS [LogProba], scu.[Proba] AS [Proba], scu.[Score] AS [Score] 
FROM (SELECT orig_cte.[KEY] AS [KEY_u], 0 AS class, orig_cte.[LogProba_0] AS [LogProba], orig_cte.[Proba_0] AS [Proba], orig_cte.[Score_0] AS [Score] 
FROM orig_cte UNION ALL SELECT orig_cte.[KEY] AS [KEY_u], 1 AS class, orig_cte.[LogProba_1] AS [LogProba], orig_cte.[Proba_1] AS [Proba], orig_cte.[Score_1] AS [Score] 
FROM orig_cte UNION ALL SELECT orig_cte.[KEY] AS [KEY_u], 2 AS class, orig_cte.[LogProba_2] AS [LogProba], orig_cte.[Proba_2] AS [Proba], orig_cte.[Score_2] AS [Score] 
FROM orig_cte UNION ALL SELECT orig_cte.[KEY] AS [KEY_u], 3 AS class, orig_cte.[LogProba_3] AS [LogProba], orig_cte.[Proba_3] AS [Proba], orig_cte.[Score_3] AS [Score] 
FROM orig_cte) AS scu), 
score_max AS 
(SELECT orig_cte.[KEY] AS [KEY], orig_cte.[Score_0] AS [Score_0], orig_cte.[Score_1] AS [Score_1], orig_cte.[Score_2] AS [Score_2], orig_cte.[Score_3] AS [Score_3], orig_cte.[Proba_0] AS [Proba_0], orig_cte.[Proba_1] AS [Proba_1], orig_cte.[Proba_2] AS [Proba_2], orig_cte.[Proba_3] AS [Proba_3], orig_cte.[LogProba_0] AS [LogProba_0], orig_cte.[LogProba_1] AS [LogProba_1], orig_cte.[LogProba_2] AS [LogProba_2], orig_cte.[LogProba_3] AS [LogProba_3], orig_cte.[Decision] AS [Decision], orig_cte.[DecisionProba] AS [DecisionProba], max_select.[KEY_m] AS [KEY_m], max_select.[max_Score] AS [max_Score] 
FROM orig_cte LEFT OUTER JOIN (SELECT score_class_union.[KEY_u] AS [KEY_m], max(score_class_union.[Score]) AS [max_Score] 
FROM score_class_union GROUP BY score_class_union.[KEY_u]) AS max_select ON orig_cte.[KEY] = max_select.[KEY_m]), 
score_soft_max_deltas AS 
(SELECT score_max.[KEY] AS [KEY], score_max.[Score_0] AS [Score_0], score_max.[Score_1] AS [Score_1], score_max.[Score_2] AS [Score_2], score_max.[Score_3] AS [Score_3], score_max.[Proba_0] AS [Proba_0], score_max.[Proba_1] AS [Proba_1], score_max.[Proba_2] AS [Proba_2], score_max.[Proba_3] AS [Proba_3], score_max.[LogProba_0] AS [LogProba_0], score_max.[LogProba_1] AS [LogProba_1], score_max.[LogProba_2] AS [LogProba_2], score_max.[LogProba_3] AS [LogProba_3], score_max.[Decision] AS [Decision], score_max.[DecisionProba] AS [DecisionProba], score_max.[KEY_m] AS [KEY_m], score_max.[max_Score] AS [max_Score], exp(score_max.[Score_0] - score_max.[max_Score]) AS [exp_delta_Score_0], exp(score_max.[Score_1] - score_max.[max_Score]) AS [exp_delta_Score_1], exp(score_max.[Score_2] - score_max.[max_Score]) AS [exp_delta_Score_2], exp(score_max.[Score_3] - score_max.[max_Score]) AS [exp_delta_Score_3] 
FROM score_max), 
score_class_union_soft AS 
(SELECT soft_scu.[KEY] AS [KEY], soft_scu.class AS class, soft_scu.[exp_delta_Score] AS [exp_delta_Score] 
FROM (SELECT score_soft_max_deltas.[KEY] AS [KEY], 0 AS class, score_soft_max_deltas.[exp_delta_Score_0] AS [exp_delta_Score] 
FROM score_soft_max_deltas UNION ALL SELECT score_soft_max_deltas.[KEY] AS [KEY], 1 AS class, score_soft_max_deltas.[exp_delta_Score_1] AS [exp_delta_Score] 
FROM score_soft_max_deltas UNION ALL SELECT score_soft_max_deltas.[KEY] AS [KEY], 2 AS class, score_soft_max_deltas.[exp_delta_Score_2] AS [exp_delta_Score] 
FROM score_soft_max_deltas UNION ALL SELECT score_soft_max_deltas.[KEY] AS [KEY], 3 AS class, score_soft_max_deltas.[exp_delta_Score_3] AS [exp_delta_Score] 
FROM score_soft_max_deltas) AS soft_scu), 
score_soft_max AS 
(SELECT score_soft_max_deltas.[KEY] AS [KEY], score_soft_max_deltas.[Score_0] AS [Score_0], score_soft_max_deltas.[Score_1] AS [Score_1], score_soft_max_deltas.[Score_2] AS [Score_2], score_soft_max_deltas.[Score_3] AS [Score_3], score_soft_max_deltas.[Proba_0] AS [Proba_0], score_soft_max_deltas.[Proba_1] AS [Proba_1], score_soft_max_deltas.[Proba_2] AS [Proba_2], score_soft_max_deltas.[Proba_3] AS [Proba_3], score_soft_max_deltas.[LogProba_0] AS [LogProba_0], score_soft_max_deltas.[LogProba_1] AS [LogProba_1], score_soft_max_deltas.[LogProba_2] AS [LogProba_2], score_soft_max_deltas.[LogProba_3] AS [LogProba_3], score_soft_max_deltas.[Decision] AS [Decision], score_soft_max_deltas.[DecisionProba] AS [DecisionProba], score_soft_max_deltas.[KEY_m] AS [KEY_m], score_soft_max_deltas.[max_Score] AS [max_Score], score_soft_max_deltas.[exp_delta_Score_0] AS [exp_delta_Score_0], score_soft_max_deltas.[exp_delta_Score_1] AS [exp_delta_Score_1], score_soft_max_deltas.[exp_delta_Score_2] AS [exp_delta_Score_2], score_soft_max_deltas.[exp_delta_Score_3] AS [exp_delta_Score_3], sum_exp_t.[KEY_sum] AS [KEY_sum], sum_exp_t.[sum_ExpDeltaScore] AS [sum_ExpDeltaScore] 
FROM score_soft_max_deltas LEFT OUTER JOIN (SELECT score_class_union_soft.[KEY] AS [KEY_sum], sum(score_class_union_soft.[exp_delta_Score]) AS [sum_ExpDeltaScore] 
FROM score_class_union_soft GROUP BY score_class_union_soft.[KEY]) AS sum_exp_t ON score_soft_max_deltas.[KEY] = sum_exp_t.[KEY_sum]), 
union_with_max AS 
(SELECT score_class_union.[KEY_u] AS [KEY_u], score_class_union.class AS class, score_class_union.[LogProba] AS [LogProba], score_class_union.[Proba] AS [Proba], score_class_union.[Score] AS [Score], score_soft_max.[KEY] AS [KEY], score_soft_max.[Score_0] AS [Score_0], score_soft_max.[Score_1] AS [Score_1], score_soft_max.[Score_2] AS [Score_2], score_soft_max.[Score_3] AS [Score_3], score_soft_max.[Proba_0] AS [Proba_0], score_soft_max.[Proba_1] AS [Proba_1], score_soft_max.[Proba_2] AS [Proba_2], score_soft_max.[Proba_3] AS [Proba_3], score_soft_max.[LogProba_0] AS [LogProba_0], score_soft_max.[LogProba_1] AS [LogProba_1], score_soft_max.[LogProba_2] AS [LogProba_2], score_soft_max.[LogProba_3] AS [LogProba_3], score_soft_max.[Decision] AS [Decision], score_soft_max.[DecisionProba] AS [DecisionProba], score_soft_max.[KEY_m] AS [KEY_m], score_soft_max.[max_Score] AS [max_Score], score_soft_max.[exp_delta_Score_0] AS [exp_delta_Score_0], score_soft_max.[exp_delta_Score_1] AS [exp_delta_Score_1], score_soft_max.[exp_delta_Score_2] AS [exp_delta_Score_2], score_soft_max.[exp_delta_Score_3] AS [exp_delta_Score_3], score_soft_max.[KEY_sum] AS [KEY_sum], score_soft_max.[sum_ExpDeltaScore] AS [sum_ExpDeltaScore] 
FROM score_class_union LEFT OUTER JOIN score_soft_max ON score_class_union.[KEY_u] = score_soft_max.[KEY]), 
arg_max_cte AS 
(SELECT score_soft_max.[KEY] AS [KEY], score_soft_max.[Score_0] AS [Score_0], score_soft_max.[Score_1] AS [Score_1], score_soft_max.[Score_2] AS [Score_2], score_soft_max.[Score_3] AS [Score_3], score_soft_max.[Proba_0] AS [Proba_0], score_soft_max.[Proba_1] AS [Proba_1], score_soft_max.[Proba_2] AS [Proba_2], score_soft_max.[Proba_3] AS [Proba_3], score_soft_max.[LogProba_0] AS [LogProba_0], score_soft_max.[LogProba_1] AS [LogProba_1], score_soft_max.[LogProba_2] AS [LogProba_2], score_soft_max.[LogProba_3] AS [LogProba_3], score_soft_max.[Decision] AS [Decision], score_soft_max.[DecisionProba] AS [DecisionProba], score_soft_max.[KEY_m] AS [KEY_m], score_soft_max.[max_Score] AS [max_Score], score_soft_max.[exp_delta_Score_0] AS [exp_delta_Score_0], score_soft_max.[exp_delta_Score_1] AS [exp_delta_Score_1], score_soft_max.[exp_delta_Score_2] AS [exp_delta_Score_2], score_soft_max.[exp_delta_Score_3] AS [exp_delta_Score_3], score_soft_max.[KEY_sum] AS [KEY_sum], score_soft_max.[sum_ExpDeltaScore] AS [sum_ExpDeltaScore], [arg_max_t_Score].[KEY_Score] AS [KEY_Score], [arg_max_t_Score].[arg_max_Score] AS [arg_max_Score], soft_max_comp.[KEY_softmax] AS [KEY_softmax], soft_max_comp.[SoftProba_0] AS [SoftProba_0], soft_max_comp.[SoftProba_1] AS [SoftProba_1], soft_max_comp.[SoftProba_2] AS [SoftProba_2], soft_max_comp.[SoftProba_3] AS [SoftProba_3] 
FROM score_soft_max LEFT OUTER JOIN (SELECT union_with_max.[KEY] AS [KEY_Score], min(union_with_max.class) AS [arg_max_Score] 
FROM union_with_max 
WHERE union_with_max.[max_Score] <= union_with_max.[Score] GROUP BY union_with_max.[KEY]) AS [arg_max_t_Score] ON score_soft_max.[KEY] = [arg_max_t_Score].[KEY_Score] LEFT OUTER JOIN (SELECT score_soft_max.[KEY] AS [KEY_softmax], score_soft_max.[exp_delta_Score_0] / score_soft_max.[sum_ExpDeltaScore] AS [SoftProba_0], score_soft_max.[exp_delta_Score_1] / score_soft_max.[sum_ExpDeltaScore] AS [SoftProba_1], score_soft_max.[exp_delta_Score_2] / score_soft_max.[sum_ExpDeltaScore] AS [SoftProba_2], score_soft_max.[exp_delta_Score_3] / score_soft_max.[sum_ExpDeltaScore] AS [SoftProba_3] 
FROM score_soft_max) AS soft_max_comp ON soft_max_comp.[KEY_softmax] = [arg_max_t_Score].[KEY_Score])
 SELECT arg_max_cte.[KEY] AS [KEY], arg_max_cte.[Score_0] AS [Score_0], arg_max_cte.[Score_1] AS [Score_1], arg_max_cte.[Score_2] AS [Score_2], arg_max_cte.[Score_3] AS [Score_3], arg_max_cte.[SoftProba_0] AS [Proba_0], arg_max_cte.[SoftProba_1] AS [Proba_1], arg_max_cte.[SoftProba_2] AS [Proba_2], arg_max_cte.[SoftProba_3] AS [Proba_3], CASE WHEN (arg_max_cte.[SoftProba_0] IS NULL OR arg_max_cte.[SoftProba_0] > 0.0) THEN log(arg_max_cte.[SoftProba_0]) ELSE -1.79769313486231e+308 END AS [LogProba_0], CASE WHEN (arg_max_cte.[SoftProba_1] IS NULL OR arg_max_cte.[SoftProba_1] > 0.0) THEN log(arg_max_cte.[SoftProba_1]) ELSE -1.79769313486231e+308 END AS [LogProba_1], CASE WHEN (arg_max_cte.[SoftProba_2] IS NULL OR arg_max_cte.[SoftProba_2] > 0.0) THEN log(arg_max_cte.[SoftProba_2]) ELSE -1.79769313486231e+308 END AS [LogProba_2], CASE WHEN (arg_max_cte.[SoftProba_3] IS NULL OR arg_max_cte.[SoftProba_3] > 0.0) THEN log(arg_max_cte.[SoftProba_3]) ELSE -1.79769313486231e+308 END AS [LogProba_3], arg_max_cte.[arg_max_Score] AS [Decision], CASE WHEN (arg_max_cte.[SoftProba_0] <= CASE WHEN (arg_max_cte.[SoftProba_1] <= CASE WHEN (arg_max_cte.[SoftProba_2] <= arg_max_cte.[SoftProba_3]) THEN arg_max_cte.[SoftProba_3] ELSE arg_max_cte.[SoftProba_2] END) THEN CASE WHEN (arg_max_cte.[SoftProba_2] <= arg_max_cte.[SoftProba_3]) THEN arg_max_cte.[SoftProba_3] ELSE arg_max_cte.[SoftProba_2] END ELSE arg_max_cte.[SoftProba_1] END) THEN CASE WHEN (arg_max_cte.[SoftProba_1] <= CASE WHEN (arg_max_cte.[SoftProba_2] <= arg_max_cte.[SoftProba_3]) THEN arg_max_cte.[SoftProba_3] ELSE arg_max_cte.[SoftProba_2] END) THEN CASE WHEN (arg_max_cte.[SoftProba_2] <= arg_max_cte.[SoftProba_3]) THEN arg_max_cte.[SoftProba_3] ELSE arg_max_cte.[SoftProba_2] END ELSE arg_max_cte.[SoftProba_1] END ELSE arg_max_cte.[SoftProba_0] END AS [DecisionProba] 
FROM arg_max_cte