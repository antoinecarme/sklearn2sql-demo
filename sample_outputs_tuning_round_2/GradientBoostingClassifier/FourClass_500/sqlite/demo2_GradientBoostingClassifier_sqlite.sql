-- This SQL code was generated by sklearn2sql (development version).
-- Copyright 2017

WITH "Score_Union_CTE_0" AS 
(WITH "DT_node_lookup" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_266" <= 3.12361216545105) THEN CASE WHEN ("ADS"."Feature_100" <= -8.839678764343262) THEN CASE WHEN ("ADS"."Feature_120" <= -0.6177715063095093) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_61" <= -2.344031810760498) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_396" <= 0.5520620346069336) THEN CASE WHEN ("ADS"."Feature_340" <= -0.11348188668489456) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_37" <= -0.07091943919658661) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "FourClass_500" AS "ADS"), 
"DT_node_data" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 13 AS count, 3 AS depth, 2 AS parent_id, -0.6862547931885723 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 26 AS count, 3 AS depth, 2 AS parent_id, 1.7939235535726534 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 7 AS count, 3 AS depth, 5 AS parent_id, 2.4582570393122674 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 530 AS count, 3 AS depth, 5 AS parent_id, -0.387931454309274 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 51 AS count, 3 AS depth, 9 AS parent_id, 2.006683950966385 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 66 AS count, 3 AS depth, 9 AS parent_id, 0.4082178484693168 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 48 AS count, 3 AS depth, 12 AS parent_id, 0.6830103357525207 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 59 AS count, 3 AS depth, 12 AS parent_id, -0.6547271023399126 AS "Estimator") AS "Values"), 
"DT_Output" AS 
(SELECT "DT_node_lookup"."KEY" AS "KEY", "DT_node_lookup".node_id_2 AS node_id_2, "DT_node_data".node_id AS node_id, "DT_node_data".feature AS feature, "DT_node_data".threshold AS threshold, "DT_node_data".count AS count, "DT_node_data".depth AS depth, "DT_node_data".parent_id AS parent_id, "DT_node_data"."Estimator" AS "Estimator" 
FROM "DT_node_lookup" LEFT OUTER JOIN "DT_node_data" ON "DT_node_lookup".node_id_2 = "DT_node_data".node_id), 
"GB_Tree_0_0" AS 
(SELECT "DT_Output"."KEY" AS "KEY", "DT_Output"."Estimator" AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3" 
FROM "DT_Output"), 
"DT_node_lookup_1" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_249" <= 2.8077621459960938) THEN CASE WHEN ("ADS"."Feature_477" <= 0.6162202954292297) THEN CASE WHEN ("ADS"."Feature_456" <= -3.836310386657715) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_0" <= -0.28602880239486694) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_378" <= -1.322815179824829) THEN CASE WHEN ("ADS"."Feature_2" <= 0.13047322630882263) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_141" <= -10.917760848999023) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "FourClass_500" AS "ADS"), 
"DT_node_data_1" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 59 AS count, 3 AS depth, 2 AS parent_id, -0.18477750022316775 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 162 AS count, 3 AS depth, 2 AS parent_id, 1.1183834168634679 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 82 AS count, 3 AS depth, 5 AS parent_id, 0.5556667916105184 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 165 AS count, 3 AS depth, 5 AS parent_id, -0.5409899361526588 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 14 AS count, 3 AS depth, 9 AS parent_id, -0.4307304116338052 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 15 AS count, 3 AS depth, 9 AS parent_id, 2.445409642672702 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 10 AS count, 3 AS depth, 12 AS parent_id, 1.3857568088858214 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 293 AS count, 3 AS depth, 12 AS parent_id, -0.5769608492957284 AS "Estimator") AS "Values"), 
"DT_Output_1" AS 
(SELECT "DT_node_lookup_1"."KEY" AS "KEY", "DT_node_lookup_1".node_id_2 AS node_id_2, "DT_node_data_1".node_id AS node_id, "DT_node_data_1".feature AS feature, "DT_node_data_1".threshold AS threshold, "DT_node_data_1".count AS count, "DT_node_data_1".depth AS depth, "DT_node_data_1".parent_id AS parent_id, "DT_node_data_1"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_1" LEFT OUTER JOIN "DT_node_data_1" ON "DT_node_lookup_1".node_id_2 = "DT_node_data_1".node_id), 
"GB_Tree_0_1" AS 
(SELECT "DT_Output_1"."KEY" AS "KEY", 0.0 AS "Score_0", "DT_Output_1"."Estimator" AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3" 
FROM "DT_Output_1"), 
"DT_node_lookup_2" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_268" <= 11.582284927368164) THEN CASE WHEN ("ADS"."Feature_497" <= -3.5153989791870117) THEN CASE WHEN ("ADS"."Feature_275" <= 0.6462042331695557) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_110" <= 1.1213914155960083) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_137" <= -0.794253408908844) THEN CASE WHEN ("ADS"."Feature_274" <= 0.4635823369026184) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_338" <= -7.356133460998535) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "FourClass_500" AS "ADS"), 
"DT_node_data_2" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 118 AS count, 3 AS depth, 2 AS parent_id, 0.915634412235921 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 113 AS count, 3 AS depth, 2 AS parent_id, -0.1489010507985261 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 466 AS count, 3 AS depth, 5 AS parent_id, -0.3572627156399112 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 76 AS count, 3 AS depth, 5 AS parent_id, 0.46875897052476523 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 3 AS depth, 9 AS parent_id, -1.0083721962145018 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 3 AS depth, 9 AS parent_id, -0.9901916200086168 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 3 AS depth, 12 AS parent_id, -0.9929657002533293 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 18 AS count, 3 AS depth, 12 AS parent_id, 2.9763304572652234 AS "Estimator") AS "Values"), 
"DT_Output_2" AS 
(SELECT "DT_node_lookup_2"."KEY" AS "KEY", "DT_node_lookup_2".node_id_2 AS node_id_2, "DT_node_data_2".node_id AS node_id, "DT_node_data_2".feature AS feature, "DT_node_data_2".threshold AS threshold, "DT_node_data_2".count AS count, "DT_node_data_2".depth AS depth, "DT_node_data_2".parent_id AS parent_id, "DT_node_data_2"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_2" LEFT OUTER JOIN "DT_node_data_2" ON "DT_node_lookup_2".node_id_2 = "DT_node_data_2".node_id), 
"GB_Tree_0_2" AS 
(SELECT "DT_Output_2"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", "DT_Output_2"."Estimator" AS "Score_2", 0.0 AS "Score_3" 
FROM "DT_Output_2"), 
"DT_node_lookup_3" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_142" <= 3.0376975536346436) THEN CASE WHEN ("ADS"."Feature_495" <= 9.207863807678223) THEN CASE WHEN ("ADS"."Feature_18" <= 4.620423793792725) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_389" <= -0.9473657608032227) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_367" <= 1.9736113548278809) THEN CASE WHEN ("ADS"."Feature_343" <= 5.637826919555664) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_88" <= -1.0967862606048584) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "FourClass_500" AS "ADS"), 
"DT_node_data_3" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 435 AS count, 3 AS depth, 2 AS parent_id, -0.4329067694111092 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 126 AS count, 3 AS depth, 2 AS parent_id, 0.32319272689298145 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 6 AS count, 3 AS depth, 5 AS parent_id, -1.0063105321380974 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 21 AS count, 3 AS depth, 5 AS parent_id, 2.1965123278903613 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 62 AS count, 3 AS depth, 9 AS parent_id, 0.4086468509479222 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 58 AS count, 3 AS depth, 9 AS parent_id, 1.8430304722501507 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 10 AS count, 3 AS depth, 12 AS parent_id, 2.1644564484488527 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 82 AS count, 3 AS depth, 12 AS parent_id, -0.36771476782333684 AS "Estimator") AS "Values"), 
"DT_Output_3" AS 
(SELECT "DT_node_lookup_3"."KEY" AS "KEY", "DT_node_lookup_3".node_id_2 AS node_id_2, "DT_node_data_3".node_id AS node_id, "DT_node_data_3".feature AS feature, "DT_node_data_3".threshold AS threshold, "DT_node_data_3".count AS count, "DT_node_data_3".depth AS depth, "DT_node_data_3".parent_id AS parent_id, "DT_node_data_3"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_3" LEFT OUTER JOIN "DT_node_data_3" ON "DT_node_lookup_3".node_id_2 = "DT_node_data_3".node_id), 
"GB_Tree_0_3" AS 
(SELECT "DT_Output_3"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", "DT_Output_3"."Estimator" AS "Score_3" 
FROM "DT_Output_3"), 
"DT_node_lookup_4" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_266" <= 3.12361216545105) THEN CASE WHEN ("ADS"."Feature_436" <= -4.360864639282227) THEN CASE WHEN ("ADS"."Feature_71" <= -4.004145622253418) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_233" <= 2.135545492172241) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_228" <= 0.6847747564315796) THEN CASE WHEN ("ADS"."Feature_338" <= -2.7087368965148926) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_125" <= 1.5090463161468506) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "FourClass_500" AS "ADS"), 
"DT_node_data_4" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 41 AS count, 3 AS depth, 2 AS parent_id, 1.5201400954123248 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 86 AS count, 3 AS depth, 2 AS parent_id, -0.21862082028035865 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 442 AS count, 3 AS depth, 5 AS parent_id, -0.45102850639932457 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 7 AS count, 3 AS depth, 5 AS parent_id, 1.93151952281528 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 48 AS count, 3 AS depth, 9 AS parent_id, 1.760913851682338 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 85 AS count, 3 AS depth, 9 AS parent_id, 0.42656748397703403 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 87 AS count, 3 AS depth, 12 AS parent_id, -0.280169033099207 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS count, 3 AS depth, 12 AS parent_id, 2.8349584077519747 AS "Estimator") AS "Values"), 
"DT_Output_4" AS 
(SELECT "DT_node_lookup_4"."KEY" AS "KEY", "DT_node_lookup_4".node_id_2 AS node_id_2, "DT_node_data_4".node_id AS node_id, "DT_node_data_4".feature AS feature, "DT_node_data_4".threshold AS threshold, "DT_node_data_4".count AS count, "DT_node_data_4".depth AS depth, "DT_node_data_4".parent_id AS parent_id, "DT_node_data_4"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_4" LEFT OUTER JOIN "DT_node_data_4" ON "DT_node_lookup_4".node_id_2 = "DT_node_data_4".node_id), 
"GB_Tree_1_0" AS 
(SELECT "DT_Output_4"."KEY" AS "KEY", "DT_Output_4"."Estimator" AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3" 
FROM "DT_Output_4"), 
"DT_node_lookup_5" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_495" <= -0.9832198619842529) THEN CASE WHEN ("ADS"."Feature_152" <= -12.978939056396484) THEN CASE WHEN ("ADS"."Feature_269" <= -0.17400795221328735) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_194" <= 1.9728326797485352) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_18" <= 4.616632461547852) THEN CASE WHEN ("ADS"."Feature_249" <= 2.8089818954467773) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_260" <= 1.277622938156128) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "FourClass_500" AS "ADS"), 
"DT_node_data_5" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 3 AS depth, 2 AS parent_id, 2.743941772741026 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 3 AS depth, 2 AS parent_id, 3.1164422514384906 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 333 AS count, 3 AS depth, 5 AS parent_id, -0.4324373788236649 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 11 AS count, 3 AS depth, 5 AS parent_id, 1.3972232720223225 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 206 AS count, 3 AS depth, 9 AS parent_id, 0.8494496999112703 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 139 AS count, 3 AS depth, 9 AS parent_id, -0.0584389764816125 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 96 AS count, 3 AS depth, 12 AS parent_id, -0.7402556842910717 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 11 AS count, 3 AS depth, 12 AS parent_id, 1.4835483802611447 AS "Estimator") AS "Values"), 
"DT_Output_5" AS 
(SELECT "DT_node_lookup_5"."KEY" AS "KEY", "DT_node_lookup_5".node_id_2 AS node_id_2, "DT_node_data_5".node_id AS node_id, "DT_node_data_5".feature AS feature, "DT_node_data_5".threshold AS threshold, "DT_node_data_5".count AS count, "DT_node_data_5".depth AS depth, "DT_node_data_5".parent_id AS parent_id, "DT_node_data_5"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_5" LEFT OUTER JOIN "DT_node_data_5" ON "DT_node_lookup_5".node_id_2 = "DT_node_data_5".node_id), 
"GB_Tree_1_1" AS 
(SELECT "DT_Output_5"."KEY" AS "KEY", 0.0 AS "Score_0", "DT_Output_5"."Estimator" AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3" 
FROM "DT_Output_5"), 
"DT_node_lookup_6" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_268" <= 11.582284927368164) THEN CASE WHEN ("ADS"."Feature_497" <= -3.5153989791870117) THEN CASE WHEN ("ADS"."Feature_275" <= 0.6462042331695557) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_464" <= 2.3244500160217285) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_137" <= -0.794253408908844) THEN CASE WHEN ("ADS"."Feature_129" <= -0.07351000607013702) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_338" <= -7.356133460998535) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "FourClass_500" AS "ADS"), 
"DT_node_data_6" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 118 AS count, 3 AS depth, 2 AS parent_id, 0.8007231459369641 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 113 AS count, 3 AS depth, 2 AS parent_id, -0.13944392294877217 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 534 AS count, 3 AS depth, 5 AS parent_id, -0.2580421418416156 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 8 AS count, 3 AS depth, 5 AS parent_id, 2.0634530733570497 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS count, 3 AS depth, 9 AS parent_id, -0.9635168508684521 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 9 AS parent_id, -0.9808844812826792 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 3 AS depth, 12 AS parent_id, -0.9639487806859675 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 18 AS count, 3 AS depth, 12 AS parent_id, 2.393553333746592 AS "Estimator") AS "Values"), 
"DT_Output_6" AS 
(SELECT "DT_node_lookup_6"."KEY" AS "KEY", "DT_node_lookup_6".node_id_2 AS node_id_2, "DT_node_data_6".node_id AS node_id, "DT_node_data_6".feature AS feature, "DT_node_data_6".threshold AS threshold, "DT_node_data_6".count AS count, "DT_node_data_6".depth AS depth, "DT_node_data_6".parent_id AS parent_id, "DT_node_data_6"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_6" LEFT OUTER JOIN "DT_node_data_6" ON "DT_node_lookup_6".node_id_2 = "DT_node_data_6".node_id), 
"GB_Tree_1_2" AS 
(SELECT "DT_Output_6"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", "DT_Output_6"."Estimator" AS "Score_2", 0.0 AS "Score_3" 
FROM "DT_Output_6"), 
"DT_node_lookup_7" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_142" <= 3.0376975536346436) THEN CASE WHEN ("ADS"."Feature_495" <= 9.207863807678223) THEN CASE WHEN ("ADS"."Feature_18" <= 4.620423793792725) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_228" <= 0.5678791999816895) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_4" <= -0.4045480489730835) THEN CASE WHEN ("ADS"."Feature_324" <= -8.265262603759766) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_178" <= 0.4596196413040161) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "FourClass_500" AS "ADS"), 
"DT_node_data_7" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 435 AS count, 3 AS depth, 2 AS parent_id, -0.4066132980072959 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 126 AS count, 3 AS depth, 2 AS parent_id, 0.2824628149236165 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 10 AS count, 3 AS depth, 5 AS parent_id, -0.27659673938639756 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 17 AS count, 3 AS depth, 5 AS parent_id, 2.142071955541135 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 6 AS count, 3 AS depth, 9 AS parent_id, 2.1309736111982636 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 62 AS count, 3 AS depth, 9 AS parent_id, -0.5002989323622926 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 102 AS count, 3 AS depth, 12 AS parent_id, 1.2766650498859857 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 42 AS count, 3 AS depth, 12 AS parent_id, -0.0856303665108453 AS "Estimator") AS "Values"), 
"DT_Output_7" AS 
(SELECT "DT_node_lookup_7"."KEY" AS "KEY", "DT_node_lookup_7".node_id_2 AS node_id_2, "DT_node_data_7".node_id AS node_id, "DT_node_data_7".feature AS feature, "DT_node_data_7".threshold AS threshold, "DT_node_data_7".count AS count, "DT_node_data_7".depth AS depth, "DT_node_data_7".parent_id AS parent_id, "DT_node_data_7"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_7" LEFT OUTER JOIN "DT_node_data_7" ON "DT_node_lookup_7".node_id_2 = "DT_node_data_7".node_id), 
"GB_Tree_1_3" AS 
(SELECT "DT_Output_7"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", "DT_Output_7"."Estimator" AS "Score_3" 
FROM "DT_Output_7")
 SELECT "Score_Union_CTE_esu_0"."KEY", "Score_Union_CTE_esu_0"."Score_0", "Score_Union_CTE_esu_0"."Score_1", "Score_Union_CTE_esu_0"."Score_2", "Score_Union_CTE_esu_0"."Score_3" 
FROM (SELECT "GB_Tree_0_0"."KEY" AS "KEY", "GB_Tree_0_0"."Score_0" AS "Score_0", "GB_Tree_0_0"."Score_1" AS "Score_1", "GB_Tree_0_0"."Score_2" AS "Score_2", "GB_Tree_0_0"."Score_3" AS "Score_3" 
FROM "GB_Tree_0_0" UNION ALL SELECT "GB_Tree_0_1"."KEY" AS "KEY", "GB_Tree_0_1"."Score_0" AS "Score_0", "GB_Tree_0_1"."Score_1" AS "Score_1", "GB_Tree_0_1"."Score_2" AS "Score_2", "GB_Tree_0_1"."Score_3" AS "Score_3" 
FROM "GB_Tree_0_1" UNION ALL SELECT "GB_Tree_0_2"."KEY" AS "KEY", "GB_Tree_0_2"."Score_0" AS "Score_0", "GB_Tree_0_2"."Score_1" AS "Score_1", "GB_Tree_0_2"."Score_2" AS "Score_2", "GB_Tree_0_2"."Score_3" AS "Score_3" 
FROM "GB_Tree_0_2" UNION ALL SELECT "GB_Tree_0_3"."KEY" AS "KEY", "GB_Tree_0_3"."Score_0" AS "Score_0", "GB_Tree_0_3"."Score_1" AS "Score_1", "GB_Tree_0_3"."Score_2" AS "Score_2", "GB_Tree_0_3"."Score_3" AS "Score_3" 
FROM "GB_Tree_0_3" UNION ALL SELECT "GB_Tree_1_0"."KEY" AS "KEY", "GB_Tree_1_0"."Score_0" AS "Score_0", "GB_Tree_1_0"."Score_1" AS "Score_1", "GB_Tree_1_0"."Score_2" AS "Score_2", "GB_Tree_1_0"."Score_3" AS "Score_3" 
FROM "GB_Tree_1_0" UNION ALL SELECT "GB_Tree_1_1"."KEY" AS "KEY", "GB_Tree_1_1"."Score_0" AS "Score_0", "GB_Tree_1_1"."Score_1" AS "Score_1", "GB_Tree_1_1"."Score_2" AS "Score_2", "GB_Tree_1_1"."Score_3" AS "Score_3" 
FROM "GB_Tree_1_1" UNION ALL SELECT "GB_Tree_1_2"."KEY" AS "KEY", "GB_Tree_1_2"."Score_0" AS "Score_0", "GB_Tree_1_2"."Score_1" AS "Score_1", "GB_Tree_1_2"."Score_2" AS "Score_2", "GB_Tree_1_2"."Score_3" AS "Score_3" 
FROM "GB_Tree_1_2" UNION ALL SELECT "GB_Tree_1_3"."KEY" AS "KEY", "GB_Tree_1_3"."Score_0" AS "Score_0", "GB_Tree_1_3"."Score_1" AS "Score_1", "GB_Tree_1_3"."Score_2" AS "Score_2", "GB_Tree_1_3"."Score_3" AS "Score_3" 
FROM "GB_Tree_1_3") AS "Score_Union_CTE_esu_0"), 
"Score_Union_CTE_1" AS 
(WITH "DT_node_lookup_8" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_266" <= 3.12361216545105) THEN CASE WHEN ("ADS"."Feature_100" <= -8.839678764343262) THEN CASE WHEN ("ADS"."Feature_134" <= 0.2653690278530121) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_61" <= -2.344031810760498) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_396" <= 3.2543604373931885) THEN CASE WHEN ("ADS"."Feature_218" <= -1.5144954919815063) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_8" <= -6.3673996925354) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "FourClass_500" AS "ADS"), 
"DT_node_data_8" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 24 AS count, 3 AS depth, 2 AS parent_id, 1.5992791107777553 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 15 AS count, 3 AS depth, 2 AS parent_id, -0.47186074569398473 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 7 AS count, 3 AS depth, 5 AS parent_id, 1.9330832833505067 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 530 AS count, 3 AS depth, 5 AS parent_id, -0.34600390354143934 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 65 AS count, 3 AS depth, 9 AS parent_id, -0.07232830810109908 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 90 AS count, 3 AS depth, 9 AS parent_id, 1.3207607689740146 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 9 AS count, 3 AS depth, 12 AS parent_id, 1.4980815298474706 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 60 AS count, 3 AS depth, 12 AS parent_id, -0.5939764963221078 AS "Estimator") AS "Values"), 
"DT_Output_8" AS 
(SELECT "DT_node_lookup_8"."KEY" AS "KEY", "DT_node_lookup_8".node_id_2 AS node_id_2, "DT_node_data_8".node_id AS node_id, "DT_node_data_8".feature AS feature, "DT_node_data_8".threshold AS threshold, "DT_node_data_8".count AS count, "DT_node_data_8".depth AS depth, "DT_node_data_8".parent_id AS parent_id, "DT_node_data_8"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_8" LEFT OUTER JOIN "DT_node_data_8" ON "DT_node_lookup_8".node_id_2 = "DT_node_data_8".node_id), 
"GB_Tree_2_0" AS 
(SELECT "DT_Output_8"."KEY" AS "KEY", "DT_Output_8"."Estimator" AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3" 
FROM "DT_Output_8"), 
"DT_node_lookup_9" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_249" <= 2.8077621459960938) THEN CASE WHEN ("ADS"."Feature_477" <= 0.6162202954292297) THEN CASE WHEN ("ADS"."Feature_385" <= -6.6919426918029785) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_0" <= -0.28602880239486694) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_378" <= -1.322815179824829) THEN CASE WHEN ("ADS"."Feature_2" <= 0.13047322630882263) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_246" <= -2.083925247192383) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "FourClass_500" AS "ADS"), 
"DT_node_data_9" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 31 AS count, 3 AS depth, 2 AS parent_id, -0.6535364305666892 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 190 AS count, 3 AS depth, 2 AS parent_id, 0.8584929542592915 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 82 AS count, 3 AS depth, 5 AS parent_id, 0.4702890585258638 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 165 AS count, 3 AS depth, 5 AS parent_id, -0.5161547394558753 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 14 AS count, 3 AS depth, 9 AS parent_id, -0.38512740903970527 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 15 AS count, 3 AS depth, 9 AS parent_id, 2.017366528758986 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS count, 3 AS depth, 12 AS parent_id, 2.166294426238667 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 298 AS count, 3 AS depth, 12 AS parent_id, -0.5153639489304058 AS "Estimator") AS "Values"), 
"DT_Output_9" AS 
(SELECT "DT_node_lookup_9"."KEY" AS "KEY", "DT_node_lookup_9".node_id_2 AS node_id_2, "DT_node_data_9".node_id AS node_id, "DT_node_data_9".feature AS feature, "DT_node_data_9".threshold AS threshold, "DT_node_data_9".count AS count, "DT_node_data_9".depth AS depth, "DT_node_data_9".parent_id AS parent_id, "DT_node_data_9"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_9" LEFT OUTER JOIN "DT_node_data_9" ON "DT_node_lookup_9".node_id_2 = "DT_node_data_9".node_id), 
"GB_Tree_2_1" AS 
(SELECT "DT_Output_9"."KEY" AS "KEY", 0.0 AS "Score_0", "DT_Output_9"."Estimator" AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3" 
FROM "DT_Output_9"), 
"DT_node_lookup_10" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_237" <= 11.945308685302734) THEN CASE WHEN ("ADS"."Feature_268" <= 7.020505905151367) THEN CASE WHEN ("ADS"."Feature_152" <= 1.0219647884368896) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_261" <= 0.9612783193588257) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_216" <= 7.600351333618164) THEN CASE WHEN ("ADS"."Feature_217" <= 9.160985946655273) THEN 10 ELSE 11 END ELSE 12 END END AS node_id_2 
FROM "FourClass_500" AS "ADS"), 
"DT_node_data_10" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 398 AS count, 3 AS depth, 2 AS parent_id, -0.3719651250133251 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 275 AS count, 3 AS depth, 2 AS parent_id, 0.2076094117372215 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 101 AS count, 3 AS depth, 5 AS parent_id, 0.31312961262053807 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 17 AS count, 3 AS depth, 5 AS parent_id, 2.2730937114835927 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 7 AS count, 3 AS depth, 9 AS parent_id, 2.974507916934354 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 9 AS parent_id, 2.098779904983615 AS "Estimator" UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 2 AS depth, 8 AS parent_id, -0.9937401610169184 AS "Estimator") AS "Values"), 
"DT_Output_10" AS 
(SELECT "DT_node_lookup_10"."KEY" AS "KEY", "DT_node_lookup_10".node_id_2 AS node_id_2, "DT_node_data_10".node_id AS node_id, "DT_node_data_10".feature AS feature, "DT_node_data_10".threshold AS threshold, "DT_node_data_10".count AS count, "DT_node_data_10".depth AS depth, "DT_node_data_10".parent_id AS parent_id, "DT_node_data_10"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_10" LEFT OUTER JOIN "DT_node_data_10" ON "DT_node_lookup_10".node_id_2 = "DT_node_data_10".node_id), 
"GB_Tree_2_2" AS 
(SELECT "DT_Output_10"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", "DT_Output_10"."Estimator" AS "Score_2", 0.0 AS "Score_3" 
FROM "DT_Output_10"), 
"DT_node_lookup_11" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_142" <= -1.9840805530548096) THEN CASE WHEN ("ADS"."Feature_331" <= -8.961824417114258) THEN CASE WHEN ("ADS"."Feature_351" <= -0.13671915233135223) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_18" <= 14.353025436401367) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_367" <= 1.9736113548278809) THEN CASE WHEN ("ADS"."Feature_252" <= 3.1533074378967285) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_193" <= 9.02374267578125) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "FourClass_500" AS "ADS"), 
"DT_node_data_11" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 10 AS count, 3 AS depth, 2 AS parent_id, -0.5390443915173863 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 9 AS count, 3 AS depth, 2 AS parent_id, 2.941825549223854 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 294 AS count, 3 AS depth, 5 AS parent_id, -0.49363263218467035 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS count, 3 AS depth, 5 AS parent_id, 2.6087609544101764 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 209 AS count, 3 AS depth, 9 AS parent_id, 0.8917358835680474 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 80 AS count, 3 AS depth, 9 AS parent_id, -0.2442773871367035 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 183 AS count, 3 AS depth, 12 AS parent_id, -0.3848867653929735 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 11 AS count, 3 AS depth, 12 AS parent_id, 1.7839127918299786 AS "Estimator") AS "Values"), 
"DT_Output_11" AS 
(SELECT "DT_node_lookup_11"."KEY" AS "KEY", "DT_node_lookup_11".node_id_2 AS node_id_2, "DT_node_data_11".node_id AS node_id, "DT_node_data_11".feature AS feature, "DT_node_data_11".threshold AS threshold, "DT_node_data_11".count AS count, "DT_node_data_11".depth AS depth, "DT_node_data_11".parent_id AS parent_id, "DT_node_data_11"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_11" LEFT OUTER JOIN "DT_node_data_11" ON "DT_node_lookup_11".node_id_2 = "DT_node_data_11".node_id), 
"GB_Tree_2_3" AS 
(SELECT "DT_Output_11"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", "DT_Output_11"."Estimator" AS "Score_3" 
FROM "DT_Output_11"), 
"DT_node_lookup_12" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_338" <= -1.7936967611312866) THEN CASE WHEN ("ADS"."Feature_249" <= -17.17985725402832) THEN CASE WHEN ("ADS"."Feature_282" <= 0.9039919376373291) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_65" <= -1.068335771560669) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_100" <= -8.839678764343262) THEN CASE WHEN ("ADS"."Feature_311" <= -0.002689620479941368) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_288" <= 8.605718612670898) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "FourClass_500" AS "ADS"), 
"DT_node_data_12" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 98 AS count, 3 AS depth, 2 AS parent_id, -0.5673050763068317 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 21 AS count, 3 AS depth, 2 AS parent_id, 0.8526407389846824 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 80 AS count, 3 AS depth, 5 AS parent_id, 0.10000407412841066 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 105 AS count, 3 AS depth, 5 AS parent_id, 1.1913185722432984 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 19 AS count, 3 AS depth, 9 AS parent_id, -0.012874134675321978 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 11 AS count, 3 AS depth, 9 AS parent_id, 2.082563218457756 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 439 AS count, 3 AS depth, 12 AS parent_id, -0.40943769163207955 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 27 AS count, 3 AS depth, 12 AS parent_id, 0.9357865487758258 AS "Estimator") AS "Values"), 
"DT_Output_12" AS 
(SELECT "DT_node_lookup_12"."KEY" AS "KEY", "DT_node_lookup_12".node_id_2 AS node_id_2, "DT_node_data_12".node_id AS node_id, "DT_node_data_12".feature AS feature, "DT_node_data_12".threshold AS threshold, "DT_node_data_12".count AS count, "DT_node_data_12".depth AS depth, "DT_node_data_12".parent_id AS parent_id, "DT_node_data_12"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_12" LEFT OUTER JOIN "DT_node_data_12" ON "DT_node_lookup_12".node_id_2 = "DT_node_data_12".node_id), 
"GB_Tree_3_0" AS 
(SELECT "DT_Output_12"."KEY" AS "KEY", "DT_Output_12"."Estimator" AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3" 
FROM "DT_Output_12"), 
"DT_node_lookup_13" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_456" <= 1.2209151983261108) THEN CASE WHEN ("ADS"."Feature_164" <= 1.8603899478912354) THEN CASE WHEN ("ADS"."Feature_191" <= 11.24403190612793) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_80" <= -0.301588237285614) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_208" <= 3.5968282222747803) THEN CASE WHEN ("ADS"."Feature_179" <= -4.356956481933594) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_131" <= -1.3226070404052734) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "FourClass_500" AS "ADS"), 
"DT_node_data_13" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 439 AS count, 3 AS depth, 2 AS parent_id, -0.3498093659760463 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 15 AS count, 3 AS depth, 2 AS parent_id, 1.3326014131489847 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS count, 3 AS depth, 5 AS parent_id, -0.9913966764866603 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 13 AS count, 3 AS depth, 5 AS parent_id, 2.214399753608894 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 62 AS count, 3 AS depth, 9 AS parent_id, 1.462482667257309 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 185 AS count, 3 AS depth, 9 AS parent_id, 0.2743798707342392 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 3 AS depth, 12 AS parent_id, 2.7613202930084872 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 78 AS count, 3 AS depth, 12 AS parent_id, -0.6703516578476714 AS "Estimator") AS "Values"), 
"DT_Output_13" AS 
(SELECT "DT_node_lookup_13"."KEY" AS "KEY", "DT_node_lookup_13".node_id_2 AS node_id_2, "DT_node_data_13".node_id AS node_id, "DT_node_data_13".feature AS feature, "DT_node_data_13".threshold AS threshold, "DT_node_data_13".count AS count, "DT_node_data_13".depth AS depth, "DT_node_data_13".parent_id AS parent_id, "DT_node_data_13"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_13" LEFT OUTER JOIN "DT_node_data_13" ON "DT_node_lookup_13".node_id_2 = "DT_node_data_13".node_id), 
"GB_Tree_3_1" AS 
(SELECT "DT_Output_13"."KEY" AS "KEY", 0.0 AS "Score_0", "DT_Output_13"."Estimator" AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3" 
FROM "DT_Output_13"), 
"DT_node_lookup_14" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_446" <= 0.7653599381446838) THEN CASE WHEN ("ADS"."Feature_268" <= 7.673882484436035) THEN CASE WHEN ("ADS"."Feature_402" <= 4.075753211975098) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_252" <= -1.268651008605957) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_116" <= -1.4130345582962036) THEN CASE WHEN ("ADS"."Feature_459" <= -0.2088218331336975) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_349" <= 2.477071762084961) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "FourClass_500" AS "ADS"), 
"DT_node_data_14" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 419 AS count, 3 AS depth, 2 AS parent_id, -0.12910965662371301 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 125 AS count, 3 AS depth, 2 AS parent_id, 0.629653348849828 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 28 AS count, 3 AS depth, 5 AS parent_id, -0.1682466928773064 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 38 AS count, 3 AS depth, 5 AS parent_id, 1.6836411439216235 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 10 AS count, 3 AS depth, 9 AS parent_id, -0.23243904767378737 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 7 AS count, 3 AS depth, 9 AS parent_id, 2.6469575493088486 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 171 AS count, 3 AS depth, 12 AS parent_id, -0.6615937956078313 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 3 AS depth, 12 AS parent_id, 2.9449156184587366 AS "Estimator") AS "Values"), 
"DT_Output_14" AS 
(SELECT "DT_node_lookup_14"."KEY" AS "KEY", "DT_node_lookup_14".node_id_2 AS node_id_2, "DT_node_data_14".node_id AS node_id, "DT_node_data_14".feature AS feature, "DT_node_data_14".threshold AS threshold, "DT_node_data_14".count AS count, "DT_node_data_14".depth AS depth, "DT_node_data_14".parent_id AS parent_id, "DT_node_data_14"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_14" LEFT OUTER JOIN "DT_node_data_14" ON "DT_node_lookup_14".node_id_2 = "DT_node_data_14".node_id), 
"GB_Tree_3_2" AS 
(SELECT "DT_Output_14"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", "DT_Output_14"."Estimator" AS "Score_2", 0.0 AS "Score_3" 
FROM "DT_Output_14"), 
"DT_node_lookup_15" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_142" <= 3.0376975536346436) THEN CASE WHEN ("ADS"."Feature_343" <= 55.24702835083008) THEN CASE WHEN ("ADS"."Feature_18" <= 3.6610941886901855) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_252" <= 2.316516160964966) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_4" <= -0.4045480489730835) THEN CASE WHEN ("ADS"."Feature_23" <= 0.10113783180713654) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_178" <= 0.4596196413040161) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "FourClass_500" AS "ADS"), 
"DT_node_data_15" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 393 AS count, 3 AS depth, 2 AS parent_id, -0.46872623942849767 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 160 AS count, 3 AS depth, 2 AS parent_id, 0.2937899081165745 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 21 AS count, 3 AS depth, 5 AS parent_id, 2.0105423798083213 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 14 AS count, 3 AS depth, 5 AS parent_id, -0.4307829922288897 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 40 AS count, 3 AS depth, 9 AS parent_id, -0.89241528626728 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 28 AS count, 3 AS depth, 9 AS parent_id, 0.6117942689360271 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 102 AS count, 3 AS depth, 12 AS parent_id, 1.061354725157871 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 42 AS count, 3 AS depth, 12 AS parent_id, -0.08927344171004324 AS "Estimator") AS "Values"), 
"DT_Output_15" AS 
(SELECT "DT_node_lookup_15"."KEY" AS "KEY", "DT_node_lookup_15".node_id_2 AS node_id_2, "DT_node_data_15".node_id AS node_id, "DT_node_data_15".feature AS feature, "DT_node_data_15".threshold AS threshold, "DT_node_data_15".count AS count, "DT_node_data_15".depth AS depth, "DT_node_data_15".parent_id AS parent_id, "DT_node_data_15"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_15" LEFT OUTER JOIN "DT_node_data_15" ON "DT_node_lookup_15".node_id_2 = "DT_node_data_15".node_id), 
"GB_Tree_3_3" AS 
(SELECT "DT_Output_15"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", "DT_Output_15"."Estimator" AS "Score_3" 
FROM "DT_Output_15")
 SELECT "Score_Union_CTE_esu_1"."KEY", "Score_Union_CTE_esu_1"."Score_0", "Score_Union_CTE_esu_1"."Score_1", "Score_Union_CTE_esu_1"."Score_2", "Score_Union_CTE_esu_1"."Score_3" 
FROM (SELECT "GB_Tree_2_0"."KEY" AS "KEY", "GB_Tree_2_0"."Score_0" AS "Score_0", "GB_Tree_2_0"."Score_1" AS "Score_1", "GB_Tree_2_0"."Score_2" AS "Score_2", "GB_Tree_2_0"."Score_3" AS "Score_3" 
FROM "GB_Tree_2_0" UNION ALL SELECT "GB_Tree_2_1"."KEY" AS "KEY", "GB_Tree_2_1"."Score_0" AS "Score_0", "GB_Tree_2_1"."Score_1" AS "Score_1", "GB_Tree_2_1"."Score_2" AS "Score_2", "GB_Tree_2_1"."Score_3" AS "Score_3" 
FROM "GB_Tree_2_1" UNION ALL SELECT "GB_Tree_2_2"."KEY" AS "KEY", "GB_Tree_2_2"."Score_0" AS "Score_0", "GB_Tree_2_2"."Score_1" AS "Score_1", "GB_Tree_2_2"."Score_2" AS "Score_2", "GB_Tree_2_2"."Score_3" AS "Score_3" 
FROM "GB_Tree_2_2" UNION ALL SELECT "GB_Tree_2_3"."KEY" AS "KEY", "GB_Tree_2_3"."Score_0" AS "Score_0", "GB_Tree_2_3"."Score_1" AS "Score_1", "GB_Tree_2_3"."Score_2" AS "Score_2", "GB_Tree_2_3"."Score_3" AS "Score_3" 
FROM "GB_Tree_2_3" UNION ALL SELECT "GB_Tree_3_0"."KEY" AS "KEY", "GB_Tree_3_0"."Score_0" AS "Score_0", "GB_Tree_3_0"."Score_1" AS "Score_1", "GB_Tree_3_0"."Score_2" AS "Score_2", "GB_Tree_3_0"."Score_3" AS "Score_3" 
FROM "GB_Tree_3_0" UNION ALL SELECT "GB_Tree_3_1"."KEY" AS "KEY", "GB_Tree_3_1"."Score_0" AS "Score_0", "GB_Tree_3_1"."Score_1" AS "Score_1", "GB_Tree_3_1"."Score_2" AS "Score_2", "GB_Tree_3_1"."Score_3" AS "Score_3" 
FROM "GB_Tree_3_1" UNION ALL SELECT "GB_Tree_3_2"."KEY" AS "KEY", "GB_Tree_3_2"."Score_0" AS "Score_0", "GB_Tree_3_2"."Score_1" AS "Score_1", "GB_Tree_3_2"."Score_2" AS "Score_2", "GB_Tree_3_2"."Score_3" AS "Score_3" 
FROM "GB_Tree_3_2" UNION ALL SELECT "GB_Tree_3_3"."KEY" AS "KEY", "GB_Tree_3_3"."Score_0" AS "Score_0", "GB_Tree_3_3"."Score_1" AS "Score_1", "GB_Tree_3_3"."Score_2" AS "Score_2", "GB_Tree_3_3"."Score_3" AS "Score_3" 
FROM "GB_Tree_3_3") AS "Score_Union_CTE_esu_1"), 
"Score_Union_CTE_2" AS 
(WITH "DT_node_lookup_16" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_266" <= 3.12361216545105) THEN CASE WHEN ("ADS"."Feature_119" <= 2.201097011566162) THEN CASE WHEN ("ADS"."Feature_148" <= -1.2132904529571533) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_232" <= 1.017587423324585) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_106" <= -5.906652450561523) THEN CASE WHEN ("ADS"."Feature_258" <= 1.3962228298187256) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_3" <= 5.266077041625977) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "FourClass_500" AS "ADS"), 
"DT_node_data_16" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 240 AS count, 3 AS depth, 2 AS parent_id, -0.5811051940643215 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 331 AS count, 3 AS depth, 2 AS parent_id, 0.014915305300096536 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS count, 3 AS depth, 5 AS parent_id, 2.70747433906368 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 5 AS parent_id, 2.1553418368463637 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 30 AS count, 3 AS depth, 9 AS parent_id, -0.998766271791717 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 3 AS depth, 9 AS parent_id, 2.0298231112116882 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 154 AS count, 3 AS depth, 12 AS parent_id, 0.8007324891104085 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 38 AS count, 3 AS depth, 12 AS parent_id, -0.4799403124139597 AS "Estimator") AS "Values"), 
"DT_Output_16" AS 
(SELECT "DT_node_lookup_16"."KEY" AS "KEY", "DT_node_lookup_16".node_id_2 AS node_id_2, "DT_node_data_16".node_id AS node_id, "DT_node_data_16".feature AS feature, "DT_node_data_16".threshold AS threshold, "DT_node_data_16".count AS count, "DT_node_data_16".depth AS depth, "DT_node_data_16".parent_id AS parent_id, "DT_node_data_16"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_16" LEFT OUTER JOIN "DT_node_data_16" ON "DT_node_lookup_16".node_id_2 = "DT_node_data_16".node_id), 
"GB_Tree_4_0" AS 
(SELECT "DT_Output_16"."KEY" AS "KEY", "DT_Output_16"."Estimator" AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3" 
FROM "DT_Output_16"), 
"DT_node_lookup_17" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_495" <= -0.9832198619842529) THEN CASE WHEN ("ADS"."Feature_169" <= 1.094802737236023) THEN CASE WHEN ("ADS"."Feature_367" <= 12.439401626586914) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_267" <= 3.796684741973877) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_259" <= 0.2033272683620453) THEN CASE WHEN ("ADS"."Feature_170" <= -1.7320566177368164) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_477" <= 2.223764657974243) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "FourClass_500" AS "ADS"), 
"DT_node_data_17" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 302 AS count, 3 AS depth, 2 AS parent_id, -0.47175534815823994 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 3 AS depth, 2 AS parent_id, 2.9037599505841722 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 34 AS count, 3 AS depth, 5 AS parent_id, -0.02843870872040117 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 9 AS count, 3 AS depth, 5 AS parent_id, 2.483832719098596 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 9 AS count, 3 AS depth, 9 AS parent_id, 2.1239706787443873 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 256 AS count, 3 AS depth, 9 AS parent_id, -0.1850976599967703 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 109 AS count, 3 AS depth, 12 AS parent_id, 1.0640825952442308 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 78 AS count, 3 AS depth, 12 AS parent_id, 0.09323537372514028 AS "Estimator") AS "Values"), 
"DT_Output_17" AS 
(SELECT "DT_node_lookup_17"."KEY" AS "KEY", "DT_node_lookup_17".node_id_2 AS node_id_2, "DT_node_data_17".node_id AS node_id, "DT_node_data_17".feature AS feature, "DT_node_data_17".threshold AS threshold, "DT_node_data_17".count AS count, "DT_node_data_17".depth AS depth, "DT_node_data_17".parent_id AS parent_id, "DT_node_data_17"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_17" LEFT OUTER JOIN "DT_node_data_17" ON "DT_node_lookup_17".node_id_2 = "DT_node_data_17".node_id), 
"GB_Tree_4_1" AS 
(SELECT "DT_Output_17"."KEY" AS "KEY", 0.0 AS "Score_0", "DT_Output_17"."Estimator" AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3" 
FROM "DT_Output_17"), 
"DT_node_lookup_18" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_193" <= 4.800265312194824) THEN CASE WHEN ("ADS"."Feature_377" <= 3.512223958969116) THEN CASE WHEN ("ADS"."Feature_129" <= 3.672024965286255) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_32" <= -1.9808961153030396) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_294" <= -0.9778278470039368) THEN CASE WHEN ("ADS"."Feature_445" <= -0.1674136221408844) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_122" <= 10.66497802734375) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "FourClass_500" AS "ADS"), 
"DT_node_data_18" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 327 AS count, 3 AS depth, 2 AS parent_id, 0.10283399863810558 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 113 AS count, 3 AS depth, 2 AS parent_id, 0.9421141299450322 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 7 AS count, 3 AS depth, 5 AS parent_id, 1.971072069841818 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 202 AS count, 3 AS depth, 5 AS parent_id, -0.38687456232734524 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 6 AS count, 3 AS depth, 9 AS parent_id, -0.956181944374039 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 9 AS count, 3 AS depth, 9 AS parent_id, 2.377251383051638 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 132 AS count, 3 AS depth, 12 AS parent_id, -0.8025036689179892 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS count, 3 AS depth, 12 AS parent_id, 1.9814791325283942 AS "Estimator") AS "Values"), 
"DT_Output_18" AS 
(SELECT "DT_node_lookup_18"."KEY" AS "KEY", "DT_node_lookup_18".node_id_2 AS node_id_2, "DT_node_data_18".node_id AS node_id, "DT_node_data_18".feature AS feature, "DT_node_data_18".threshold AS threshold, "DT_node_data_18".count AS count, "DT_node_data_18".depth AS depth, "DT_node_data_18".parent_id AS parent_id, "DT_node_data_18"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_18" LEFT OUTER JOIN "DT_node_data_18" ON "DT_node_lookup_18".node_id_2 = "DT_node_data_18".node_id), 
"GB_Tree_4_2" AS 
(SELECT "DT_Output_18"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", "DT_Output_18"."Estimator" AS "Score_2", 0.0 AS "Score_3" 
FROM "DT_Output_18"), 
"DT_node_lookup_19" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_497" <= 3.6597704887390137) THEN CASE WHEN ("ADS"."Feature_343" <= 6.319119453430176) THEN CASE WHEN ("ADS"."Feature_18" <= 5.519608497619629) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_179" <= -4.3109130859375) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_249" <= 31.900867462158203) THEN CASE WHEN ("ADS"."Feature_404" <= -2.248914957046509) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_394" <= 2.114757776260376) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "FourClass_500" AS "ADS"), 
"DT_node_data_19" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 280 AS count, 3 AS depth, 2 AS parent_id, -0.593921260362913 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 50 AS count, 3 AS depth, 2 AS parent_id, 0.42284996202781366 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 86 AS count, 3 AS depth, 5 AS parent_id, -0.5868596225506003 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 201 AS count, 3 AS depth, 5 AS parent_id, 0.4989929787585685 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 61 AS count, 3 AS depth, 9 AS parent_id, -0.45243275917549347 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 106 AS count, 3 AS depth, 9 AS parent_id, 0.7292216578489736 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 15 AS count, 3 AS depth, 12 AS parent_id, 2.3697655397763153 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 12 AS parent_id, -0.9402992066233719 AS "Estimator") AS "Values"), 
"DT_Output_19" AS 
(SELECT "DT_node_lookup_19"."KEY" AS "KEY", "DT_node_lookup_19".node_id_2 AS node_id_2, "DT_node_data_19".node_id AS node_id, "DT_node_data_19".feature AS feature, "DT_node_data_19".threshold AS threshold, "DT_node_data_19".count AS count, "DT_node_data_19".depth AS depth, "DT_node_data_19".parent_id AS parent_id, "DT_node_data_19"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_19" LEFT OUTER JOIN "DT_node_data_19" ON "DT_node_lookup_19".node_id_2 = "DT_node_data_19".node_id), 
"GB_Tree_4_3" AS 
(SELECT "DT_Output_19"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", "DT_Output_19"."Estimator" AS "Score_3" 
FROM "DT_Output_19"), 
"DT_node_lookup_20" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_268" <= 7.673882484436035) THEN CASE WHEN ("ADS"."Feature_106" <= 3.1021876335144043) THEN CASE WHEN ("ADS"."Feature_408" <= -1.6226248741149902) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_75" <= -0.8105179071426392) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_235" <= -1.888777256011963) THEN CASE WHEN ("ADS"."Feature_151" <= -0.19079701602458954) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_326" <= 2.4327993392944336) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "FourClass_500" AS "ADS"), 
"DT_node_data_20" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 195 AS count, 3 AS depth, 2 AS parent_id, 0.28994313952322964 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 306 AS count, 3 AS depth, 2 AS parent_id, -0.4208227956519038 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 43 AS count, 3 AS depth, 5 AS parent_id, 1.6121944407517148 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 163 AS count, 3 AS depth, 5 AS parent_id, 0.29007404273518317 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 9 AS parent_id, 2.1445590366027862 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 9 AS parent_id, 2.7418514394641798 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 90 AS count, 3 AS depth, 12 AS parent_id, -0.9629764424127922 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 12 AS parent_id, 2.0180097777464328 AS "Estimator") AS "Values"), 
"DT_Output_20" AS 
(SELECT "DT_node_lookup_20"."KEY" AS "KEY", "DT_node_lookup_20".node_id_2 AS node_id_2, "DT_node_data_20".node_id AS node_id, "DT_node_data_20".feature AS feature, "DT_node_data_20".threshold AS threshold, "DT_node_data_20".count AS count, "DT_node_data_20".depth AS depth, "DT_node_data_20".parent_id AS parent_id, "DT_node_data_20"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_20" LEFT OUTER JOIN "DT_node_data_20" ON "DT_node_lookup_20".node_id_2 = "DT_node_data_20".node_id), 
"GB_Tree_5_0" AS 
(SELECT "DT_Output_20"."KEY" AS "KEY", "DT_Output_20"."Estimator" AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3" 
FROM "DT_Output_20"), 
"DT_node_lookup_21" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_129" <= -7.146213531494141) THEN CASE WHEN ("ADS"."Feature_412" <= -4.457233428955078) THEN CASE WHEN ("ADS"."Feature_334" <= -1.3570020198822021) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_338" <= 7.148751258850098) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_249" <= -22.505756378173828) THEN CASE WHEN ("ADS"."Feature_137" <= 0.6874616742134094) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_264" <= 4.521263122558594) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "FourClass_500" AS "ADS"), 
"DT_node_data_21" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 3 AS depth, 2 AS parent_id, 2.506702935918765 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 18 AS count, 3 AS depth, 2 AS parent_id, -0.9645696323491588 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 49 AS count, 3 AS depth, 5 AS parent_id, 1.3881860133437842 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 8 AS count, 3 AS depth, 5 AS parent_id, -0.9949316123646059 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 157 AS count, 3 AS depth, 9 AS parent_id, 0.01516775197077207 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 55 AS count, 3 AS depth, 9 AS parent_id, 1.0714774595739867 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 423 AS count, 3 AS depth, 12 AS parent_id, -0.3908736439727492 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 88 AS count, 3 AS depth, 12 AS parent_id, 0.3901952230585735 AS "Estimator") AS "Values"), 
"DT_Output_21" AS 
(SELECT "DT_node_lookup_21"."KEY" AS "KEY", "DT_node_lookup_21".node_id_2 AS node_id_2, "DT_node_data_21".node_id AS node_id, "DT_node_data_21".feature AS feature, "DT_node_data_21".threshold AS threshold, "DT_node_data_21".count AS count, "DT_node_data_21".depth AS depth, "DT_node_data_21".parent_id AS parent_id, "DT_node_data_21"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_21" LEFT OUTER JOIN "DT_node_data_21" ON "DT_node_lookup_21".node_id_2 = "DT_node_data_21".node_id), 
"GB_Tree_5_1" AS 
(SELECT "DT_Output_21"."KEY" AS "KEY", 0.0 AS "Score_0", "DT_Output_21"."Estimator" AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3" 
FROM "DT_Output_21"), 
"DT_node_lookup_22" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_209" <= -2.7746243476867676) THEN CASE WHEN ("ADS"."Feature_152" <= -0.5319581031799316) THEN CASE WHEN ("ADS"."Feature_69" <= -1.6589996814727783) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_183" <= 3.083385944366455) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_338" <= 3.3230459690093994) THEN CASE WHEN ("ADS"."Feature_237" <= 12.065817832946777) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_377" <= -2.7604293823242188) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "FourClass_500" AS "ADS"), 
"DT_node_data_22" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS count, 3 AS depth, 2 AS parent_id, 2.6313780406609584 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 117 AS count, 3 AS depth, 2 AS parent_id, -0.26817194034984576 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 90 AS count, 3 AS depth, 5 AS parent_id, 1.2693543105601293 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 30 AS count, 3 AS depth, 5 AS parent_id, -0.47482703775453505 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 393 AS count, 3 AS depth, 9 AS parent_id, -0.379792114333813 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS count, 3 AS depth, 9 AS parent_id, 2.223069465682552 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 43 AS count, 3 AS depth, 12 AS parent_id, 1.274629789080222 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 117 AS count, 3 AS depth, 12 AS parent_id, -0.08737605400077231 AS "Estimator") AS "Values"), 
"DT_Output_22" AS 
(SELECT "DT_node_lookup_22"."KEY" AS "KEY", "DT_node_lookup_22".node_id_2 AS node_id_2, "DT_node_data_22".node_id AS node_id, "DT_node_data_22".feature AS feature, "DT_node_data_22".threshold AS threshold, "DT_node_data_22".count AS count, "DT_node_data_22".depth AS depth, "DT_node_data_22".parent_id AS parent_id, "DT_node_data_22"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_22" LEFT OUTER JOIN "DT_node_data_22" ON "DT_node_lookup_22".node_id_2 = "DT_node_data_22".node_id), 
"GB_Tree_5_2" AS 
(SELECT "DT_Output_22"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", "DT_Output_22"."Estimator" AS "Score_2", 0.0 AS "Score_3" 
FROM "DT_Output_22"), 
"DT_node_lookup_23" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_183" <= -11.473261833190918) THEN CASE WHEN ("ADS"."Feature_348" <= -0.09331661462783813) THEN CASE WHEN ("ADS"."Feature_359" <= -0.014895759522914886) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_458" <= 0.3293536901473999) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_221" <= -1.9479866027832031) THEN CASE WHEN ("ADS"."Feature_314" <= -0.2440831959247589) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_228" <= 2.137423515319824) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "FourClass_500" AS "ADS"), 
"DT_node_data_23" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS count, 3 AS depth, 2 AS parent_id, 2.0797759473218864 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 8 AS count, 3 AS depth, 2 AS parent_id, 2.737390705064973 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 11 AS count, 3 AS depth, 5 AS parent_id, -1.0139124920634457 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS count, 3 AS depth, 5 AS parent_id, 2.2351952532056187 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 6 AS count, 3 AS depth, 9 AS parent_id, -0.3471280723696288 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 14 AS count, 3 AS depth, 9 AS parent_id, 2.1278180420883235 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 492 AS count, 3 AS depth, 12 AS parent_id, -0.2744829350731533 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 259 AS count, 3 AS depth, 12 AS parent_id, 0.2728232238939687 AS "Estimator") AS "Values"), 
"DT_Output_23" AS 
(SELECT "DT_node_lookup_23"."KEY" AS "KEY", "DT_node_lookup_23".node_id_2 AS node_id_2, "DT_node_data_23".node_id AS node_id, "DT_node_data_23".feature AS feature, "DT_node_data_23".threshold AS threshold, "DT_node_data_23".count AS count, "DT_node_data_23".depth AS depth, "DT_node_data_23".parent_id AS parent_id, "DT_node_data_23"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_23" LEFT OUTER JOIN "DT_node_data_23" ON "DT_node_lookup_23".node_id_2 = "DT_node_data_23".node_id), 
"GB_Tree_5_3" AS 
(SELECT "DT_Output_23"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", "DT_Output_23"."Estimator" AS "Score_3" 
FROM "DT_Output_23")
 SELECT "Score_Union_CTE_esu_2"."KEY", "Score_Union_CTE_esu_2"."Score_0", "Score_Union_CTE_esu_2"."Score_1", "Score_Union_CTE_esu_2"."Score_2", "Score_Union_CTE_esu_2"."Score_3" 
FROM (SELECT "GB_Tree_4_0"."KEY" AS "KEY", "GB_Tree_4_0"."Score_0" AS "Score_0", "GB_Tree_4_0"."Score_1" AS "Score_1", "GB_Tree_4_0"."Score_2" AS "Score_2", "GB_Tree_4_0"."Score_3" AS "Score_3" 
FROM "GB_Tree_4_0" UNION ALL SELECT "GB_Tree_4_1"."KEY" AS "KEY", "GB_Tree_4_1"."Score_0" AS "Score_0", "GB_Tree_4_1"."Score_1" AS "Score_1", "GB_Tree_4_1"."Score_2" AS "Score_2", "GB_Tree_4_1"."Score_3" AS "Score_3" 
FROM "GB_Tree_4_1" UNION ALL SELECT "GB_Tree_4_2"."KEY" AS "KEY", "GB_Tree_4_2"."Score_0" AS "Score_0", "GB_Tree_4_2"."Score_1" AS "Score_1", "GB_Tree_4_2"."Score_2" AS "Score_2", "GB_Tree_4_2"."Score_3" AS "Score_3" 
FROM "GB_Tree_4_2" UNION ALL SELECT "GB_Tree_4_3"."KEY" AS "KEY", "GB_Tree_4_3"."Score_0" AS "Score_0", "GB_Tree_4_3"."Score_1" AS "Score_1", "GB_Tree_4_3"."Score_2" AS "Score_2", "GB_Tree_4_3"."Score_3" AS "Score_3" 
FROM "GB_Tree_4_3" UNION ALL SELECT "GB_Tree_5_0"."KEY" AS "KEY", "GB_Tree_5_0"."Score_0" AS "Score_0", "GB_Tree_5_0"."Score_1" AS "Score_1", "GB_Tree_5_0"."Score_2" AS "Score_2", "GB_Tree_5_0"."Score_3" AS "Score_3" 
FROM "GB_Tree_5_0" UNION ALL SELECT "GB_Tree_5_1"."KEY" AS "KEY", "GB_Tree_5_1"."Score_0" AS "Score_0", "GB_Tree_5_1"."Score_1" AS "Score_1", "GB_Tree_5_1"."Score_2" AS "Score_2", "GB_Tree_5_1"."Score_3" AS "Score_3" 
FROM "GB_Tree_5_1" UNION ALL SELECT "GB_Tree_5_2"."KEY" AS "KEY", "GB_Tree_5_2"."Score_0" AS "Score_0", "GB_Tree_5_2"."Score_1" AS "Score_1", "GB_Tree_5_2"."Score_2" AS "Score_2", "GB_Tree_5_2"."Score_3" AS "Score_3" 
FROM "GB_Tree_5_2" UNION ALL SELECT "GB_Tree_5_3"."KEY" AS "KEY", "GB_Tree_5_3"."Score_0" AS "Score_0", "GB_Tree_5_3"."Score_1" AS "Score_1", "GB_Tree_5_3"."Score_2" AS "Score_2", "GB_Tree_5_3"."Score_3" AS "Score_3" 
FROM "GB_Tree_5_3") AS "Score_Union_CTE_esu_2"), 
"Score_Union_CTE_3" AS 
(WITH "DT_node_lookup_24" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_436" <= -4.3499321937561035) THEN CASE WHEN ("ADS"."Feature_71" <= -4.004145622253418) THEN CASE WHEN ("ADS"."Feature_342" <= 0.23418474197387695) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_148" <= 8.246491432189941) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_266" <= 2.777139186859131) THEN CASE WHEN ("ADS"."Feature_363" <= 2.67464542388916) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_419" <= 1.7685515880584717) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "FourClass_500" AS "ADS"), 
"DT_node_data_24" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 28 AS count, 3 AS depth, 2 AS parent_id, 0.46432991242284094 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 31 AS count, 3 AS depth, 2 AS parent_id, 1.9066286624589655 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 115 AS count, 3 AS depth, 5 AS parent_id, -0.1580474905491047 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 6 AS count, 3 AS depth, 5 AS parent_id, 2.9206975128465658 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 434 AS count, 3 AS depth, 9 AS parent_id, -0.3860981533127071 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 3 AS depth, 9 AS parent_id, 2.809014824813825 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 176 AS count, 3 AS depth, 12 AS parent_id, 0.13859781127566467 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 7 AS count, 3 AS depth, 12 AS parent_id, 2.2979318673467586 AS "Estimator") AS "Values"), 
"DT_Output_24" AS 
(SELECT "DT_node_lookup_24"."KEY" AS "KEY", "DT_node_lookup_24".node_id_2 AS node_id_2, "DT_node_data_24".node_id AS node_id, "DT_node_data_24".feature AS feature, "DT_node_data_24".threshold AS threshold, "DT_node_data_24".count AS count, "DT_node_data_24".depth AS depth, "DT_node_data_24".parent_id AS parent_id, "DT_node_data_24"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_24" LEFT OUTER JOIN "DT_node_data_24" ON "DT_node_lookup_24".node_id_2 = "DT_node_data_24".node_id), 
"GB_Tree_6_0" AS 
(SELECT "DT_Output_24"."KEY" AS "KEY", "DT_Output_24"."Estimator" AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3" 
FROM "DT_Output_24"), 
"DT_node_lookup_25" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_135" <= -1.9373071193695068) THEN CASE WHEN ("ADS"."Feature_479" <= -2.1959104537963867) THEN CASE WHEN ("ADS"."Feature_299" <= 1.271104097366333) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_266" <= 13.903450012207031) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_208" <= 3.5956954956054688) THEN CASE WHEN ("ADS"."Feature_308" <= 3.555086135864258) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_170" <= -1.7157410383224487) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "FourClass_500" AS "ADS"), 
"DT_node_data_25" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 3 AS depth, 2 AS parent_id, 2.1792446756958834 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 2 AS parent_id, 3.3053874797779446 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 274 AS count, 3 AS depth, 5 AS parent_id, -0.44174131915917236 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 6 AS count, 3 AS depth, 5 AS parent_id, 1.9605491837702156 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 265 AS count, 3 AS depth, 9 AS parent_id, 0.15010704521821988 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 107 AS count, 3 AS depth, 9 AS parent_id, 0.9281404031970434 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS count, 3 AS depth, 12 AS parent_id, 2.3548731368079197 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 140 AS count, 3 AS depth, 12 AS parent_id, -0.48742783039912974 AS "Estimator") AS "Values"), 
"DT_Output_25" AS 
(SELECT "DT_node_lookup_25"."KEY" AS "KEY", "DT_node_lookup_25".node_id_2 AS node_id_2, "DT_node_data_25".node_id AS node_id, "DT_node_data_25".feature AS feature, "DT_node_data_25".threshold AS threshold, "DT_node_data_25".count AS count, "DT_node_data_25".depth AS depth, "DT_node_data_25".parent_id AS parent_id, "DT_node_data_25"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_25" LEFT OUTER JOIN "DT_node_data_25" ON "DT_node_lookup_25".node_id_2 = "DT_node_data_25".node_id), 
"GB_Tree_6_1" AS 
(SELECT "DT_Output_25"."KEY" AS "KEY", 0.0 AS "Score_0", "DT_Output_25"."Estimator" AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3" 
FROM "DT_Output_25"), 
"DT_node_lookup_26" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_446" <= 0.7653599381446838) THEN CASE WHEN ("ADS"."Feature_324" <= -6.589800834655762) THEN CASE WHEN ("ADS"."Feature_239" <= -0.8388060331344604) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_229" <= -7.582268714904785) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_116" <= -1.4130345582962036) THEN CASE WHEN ("ADS"."Feature_117" <= 0.4553406834602356) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_71" <= 13.853935241699219) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "FourClass_500" AS "ADS"), 
"DT_node_data_26" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 24 AS count, 3 AS depth, 2 AS parent_id, 1.7704713625245958 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 71 AS count, 3 AS depth, 2 AS parent_id, 0.33021377628552717 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 32 AS count, 3 AS depth, 5 AS parent_id, 1.2413125729676349 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 483 AS count, 3 AS depth, 5 AS parent_id, -0.0681482376698204 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 11 AS count, 3 AS depth, 9 AS parent_id, 1.6954755404236908 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 6 AS count, 3 AS depth, 9 AS parent_id, -0.9949035624691144 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 171 AS count, 3 AS depth, 12 AS parent_id, -0.6193806135612562 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 3 AS depth, 12 AS parent_id, 2.597416858679098 AS "Estimator") AS "Values"), 
"DT_Output_26" AS 
(SELECT "DT_node_lookup_26"."KEY" AS "KEY", "DT_node_lookup_26".node_id_2 AS node_id_2, "DT_node_data_26".node_id AS node_id, "DT_node_data_26".feature AS feature, "DT_node_data_26".threshold AS threshold, "DT_node_data_26".count AS count, "DT_node_data_26".depth AS depth, "DT_node_data_26".parent_id AS parent_id, "DT_node_data_26"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_26" LEFT OUTER JOIN "DT_node_data_26" ON "DT_node_lookup_26".node_id_2 = "DT_node_data_26".node_id), 
"GB_Tree_6_2" AS 
(SELECT "DT_Output_26"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", "DT_Output_26"."Estimator" AS "Score_2", 0.0 AS "Score_3" 
FROM "DT_Output_26"), 
"DT_node_lookup_27" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_142" <= 3.0376975536346436) THEN CASE WHEN ("ADS"."Feature_495" <= 9.207863807678223) THEN CASE WHEN ("ADS"."Feature_338" <= 3.7656681537628174) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_139" <= 0.20063233375549316) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_189" <= -7.090496063232422) THEN CASE WHEN ("ADS"."Feature_497" <= -2.3080272674560547) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_367" <= 1.8129539489746094) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "FourClass_500" AS "ADS"), 
"DT_node_data_27" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 415 AS count, 3 AS depth, 2 AS parent_id, -0.37969617935225947 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 146 AS count, 3 AS depth, 2 AS parent_id, 0.24948860925825986 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 15 AS count, 3 AS depth, 5 AS parent_id, 0.1434692897770502 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 12 AS count, 3 AS depth, 5 AS parent_id, 1.9394658867447858 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 15 AS count, 3 AS depth, 9 AS parent_id, 0.3516408545281031 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 17 AS count, 3 AS depth, 9 AS parent_id, 2.1555166482164716 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 97 AS count, 3 AS depth, 12 AS parent_id, 0.6061628902015278 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 83 AS count, 3 AS depth, 12 AS parent_id, -0.33022257834937807 AS "Estimator") AS "Values"), 
"DT_Output_27" AS 
(SELECT "DT_node_lookup_27"."KEY" AS "KEY", "DT_node_lookup_27".node_id_2 AS node_id_2, "DT_node_data_27".node_id AS node_id, "DT_node_data_27".feature AS feature, "DT_node_data_27".threshold AS threshold, "DT_node_data_27".count AS count, "DT_node_data_27".depth AS depth, "DT_node_data_27".parent_id AS parent_id, "DT_node_data_27"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_27" LEFT OUTER JOIN "DT_node_data_27" ON "DT_node_lookup_27".node_id_2 = "DT_node_data_27".node_id), 
"GB_Tree_6_3" AS 
(SELECT "DT_Output_27"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", "DT_Output_27"."Estimator" AS "Score_3" 
FROM "DT_Output_27"), 
"DT_node_lookup_28" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_191" <= 0.2452591508626938) THEN CASE WHEN ("ADS"."Feature_249" <= -13.757400512695312) THEN CASE WHEN ("ADS"."Feature_89" <= -1.60597562789917) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_338" <= -1.247493028640747) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_468" <= 2.233355760574341) THEN CASE WHEN ("ADS"."Feature_215" <= 8.6700439453125) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_42" <= 10.622998237609863) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "FourClass_500" AS "ADS"), 
"DT_node_data_28" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 7 AS count, 3 AS depth, 2 AS parent_id, 2.052010306531771 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 168 AS count, 3 AS depth, 2 AS parent_id, -0.31482044034708334 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 89 AS count, 3 AS depth, 5 AS parent_id, 1.05327245656682 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 137 AS count, 3 AS depth, 5 AS parent_id, 0.14709636761637154 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 365 AS count, 3 AS depth, 9 AS parent_id, -0.4038062922446151 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 29 AS count, 3 AS depth, 9 AS parent_id, 0.761803718816005 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS count, 3 AS depth, 12 AS parent_id, 2.146245144924587 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 12 AS parent_id, 1.6678237906599402 AS "Estimator") AS "Values"), 
"DT_Output_28" AS 
(SELECT "DT_node_lookup_28"."KEY" AS "KEY", "DT_node_lookup_28".node_id_2 AS node_id_2, "DT_node_data_28".node_id AS node_id, "DT_node_data_28".feature AS feature, "DT_node_data_28".threshold AS threshold, "DT_node_data_28".count AS count, "DT_node_data_28".depth AS depth, "DT_node_data_28".parent_id AS parent_id, "DT_node_data_28"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_28" LEFT OUTER JOIN "DT_node_data_28" ON "DT_node_lookup_28".node_id_2 = "DT_node_data_28".node_id), 
"GB_Tree_7_0" AS 
(SELECT "DT_Output_28"."KEY" AS "KEY", "DT_Output_28"."Estimator" AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3" 
FROM "DT_Output_28"), 
"DT_node_lookup_29" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_456" <= 0.9262018203735352) THEN CASE WHEN ("ADS"."Feature_391" <= -1.4893239736557007) THEN CASE WHEN ("ADS"."Feature_424" <= 0.039402324706315994) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_191" <= 11.24403190612793) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_0" <= -0.2894703447818756) THEN CASE WHEN ("ADS"."Feature_208" <= -1.5995781421661377) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_183" <= 5.184963226318359) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "FourClass_500" AS "ADS"), 
"DT_node_data_29" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 9 AS count, 3 AS depth, 2 AS parent_id, 2.4843095077082022 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 17 AS count, 3 AS depth, 2 AS parent_id, 0.03164046642921898 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 415 AS count, 3 AS depth, 5 AS parent_id, -0.35089952200618507 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 14 AS count, 3 AS depth, 5 AS parent_id, 1.225699172263784 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 49 AS count, 3 AS depth, 9 AS parent_id, 1.4515415183397333 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 72 AS count, 3 AS depth, 9 AS parent_id, 0.2379145051824885 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 194 AS count, 3 AS depth, 12 AS parent_id, -0.20330046415435668 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 30 AS count, 3 AS depth, 12 AS parent_id, 0.9955934340111675 AS "Estimator") AS "Values"), 
"DT_Output_29" AS 
(SELECT "DT_node_lookup_29"."KEY" AS "KEY", "DT_node_lookup_29".node_id_2 AS node_id_2, "DT_node_data_29".node_id AS node_id, "DT_node_data_29".feature AS feature, "DT_node_data_29".threshold AS threshold, "DT_node_data_29".count AS count, "DT_node_data_29".depth AS depth, "DT_node_data_29".parent_id AS parent_id, "DT_node_data_29"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_29" LEFT OUTER JOIN "DT_node_data_29" ON "DT_node_lookup_29".node_id_2 = "DT_node_data_29".node_id), 
"GB_Tree_7_1" AS 
(SELECT "DT_Output_29"."KEY" AS "KEY", 0.0 AS "Score_0", "DT_Output_29"."Estimator" AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3" 
FROM "DT_Output_29"), 
"DT_node_lookup_30" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_193" <= 4.800265312194824) THEN CASE WHEN ("ADS"."Feature_71" <= -1.1004588603973389) THEN CASE WHEN ("ADS"."Feature_395" <= 8.963262557983398) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_457" <= 6.510457992553711) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_294" <= -0.9778278470039368) THEN CASE WHEN ("ADS"."Feature_130" <= -0.6007296442985535) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_318" <= -2.459611415863037) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "FourClass_500" AS "ADS"), 
"DT_node_data_30" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 275 AS count, 3 AS depth, 2 AS parent_id, -0.2824175139799442 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 19 AS count, 3 AS depth, 2 AS parent_id, 1.2107377628060372 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 307 AS count, 3 AS depth, 5 AS parent_id, 0.18502010930570284 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 48 AS count, 3 AS depth, 5 AS parent_id, 1.2820163153295707 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 6 AS count, 3 AS depth, 9 AS parent_id, -0.9343048989897369 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 9 AS count, 3 AS depth, 9 AS parent_id, 1.891242098917943 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 3 AS depth, 12 AS parent_id, 2.6480709384647207 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 134 AS count, 3 AS depth, 12 AS parent_id, -0.7455804862014517 AS "Estimator") AS "Values"), 
"DT_Output_30" AS 
(SELECT "DT_node_lookup_30"."KEY" AS "KEY", "DT_node_lookup_30".node_id_2 AS node_id_2, "DT_node_data_30".node_id AS node_id, "DT_node_data_30".feature AS feature, "DT_node_data_30".threshold AS threshold, "DT_node_data_30".count AS count, "DT_node_data_30".depth AS depth, "DT_node_data_30".parent_id AS parent_id, "DT_node_data_30"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_30" LEFT OUTER JOIN "DT_node_data_30" ON "DT_node_lookup_30".node_id_2 = "DT_node_data_30".node_id), 
"GB_Tree_7_2" AS 
(SELECT "DT_Output_30"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", "DT_Output_30"."Estimator" AS "Score_2", 0.0 AS "Score_3" 
FROM "DT_Output_30"), 
"DT_node_lookup_31" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_497" <= 3.6597704887390137) THEN CASE WHEN ("ADS"."Feature_343" <= 7.543651580810547) THEN CASE WHEN ("ADS"."Feature_218" <= -14.287107467651367) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_179" <= -4.69523811340332) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_249" <= 31.900867462158203) THEN CASE WHEN ("ADS"."Feature_456" <= 6.6356964111328125) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_161" <= 1.4064594507217407) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "FourClass_500" AS "ADS"), 
"DT_node_data_31" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS count, 3 AS depth, 2 AS parent_id, 2.265019724547127 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 334 AS count, 3 AS depth, 2 AS parent_id, -0.4300460453829809 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 78 AS count, 3 AS depth, 5 AS parent_id, -0.6102368853312891 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 201 AS count, 3 AS depth, 5 AS parent_id, 0.44169200863376573 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 154 AS count, 3 AS depth, 9 AS parent_id, 0.11768943691537553 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 13 AS count, 3 AS depth, 9 AS parent_id, 1.8614524064607068 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 15 AS count, 3 AS depth, 12 AS parent_id, 1.9564931006726527 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 12 AS parent_id, -0.9200701816085292 AS "Estimator") AS "Values"), 
"DT_Output_31" AS 
(SELECT "DT_node_lookup_31"."KEY" AS "KEY", "DT_node_lookup_31".node_id_2 AS node_id_2, "DT_node_data_31".node_id AS node_id, "DT_node_data_31".feature AS feature, "DT_node_data_31".threshold AS threshold, "DT_node_data_31".count AS count, "DT_node_data_31".depth AS depth, "DT_node_data_31".parent_id AS parent_id, "DT_node_data_31"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_31" LEFT OUTER JOIN "DT_node_data_31" ON "DT_node_lookup_31".node_id_2 = "DT_node_data_31".node_id), 
"GB_Tree_7_3" AS 
(SELECT "DT_Output_31"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", "DT_Output_31"."Estimator" AS "Score_3" 
FROM "DT_Output_31")
 SELECT "Score_Union_CTE_esu_3"."KEY", "Score_Union_CTE_esu_3"."Score_0", "Score_Union_CTE_esu_3"."Score_1", "Score_Union_CTE_esu_3"."Score_2", "Score_Union_CTE_esu_3"."Score_3" 
FROM (SELECT "GB_Tree_6_0"."KEY" AS "KEY", "GB_Tree_6_0"."Score_0" AS "Score_0", "GB_Tree_6_0"."Score_1" AS "Score_1", "GB_Tree_6_0"."Score_2" AS "Score_2", "GB_Tree_6_0"."Score_3" AS "Score_3" 
FROM "GB_Tree_6_0" UNION ALL SELECT "GB_Tree_6_1"."KEY" AS "KEY", "GB_Tree_6_1"."Score_0" AS "Score_0", "GB_Tree_6_1"."Score_1" AS "Score_1", "GB_Tree_6_1"."Score_2" AS "Score_2", "GB_Tree_6_1"."Score_3" AS "Score_3" 
FROM "GB_Tree_6_1" UNION ALL SELECT "GB_Tree_6_2"."KEY" AS "KEY", "GB_Tree_6_2"."Score_0" AS "Score_0", "GB_Tree_6_2"."Score_1" AS "Score_1", "GB_Tree_6_2"."Score_2" AS "Score_2", "GB_Tree_6_2"."Score_3" AS "Score_3" 
FROM "GB_Tree_6_2" UNION ALL SELECT "GB_Tree_6_3"."KEY" AS "KEY", "GB_Tree_6_3"."Score_0" AS "Score_0", "GB_Tree_6_3"."Score_1" AS "Score_1", "GB_Tree_6_3"."Score_2" AS "Score_2", "GB_Tree_6_3"."Score_3" AS "Score_3" 
FROM "GB_Tree_6_3" UNION ALL SELECT "GB_Tree_7_0"."KEY" AS "KEY", "GB_Tree_7_0"."Score_0" AS "Score_0", "GB_Tree_7_0"."Score_1" AS "Score_1", "GB_Tree_7_0"."Score_2" AS "Score_2", "GB_Tree_7_0"."Score_3" AS "Score_3" 
FROM "GB_Tree_7_0" UNION ALL SELECT "GB_Tree_7_1"."KEY" AS "KEY", "GB_Tree_7_1"."Score_0" AS "Score_0", "GB_Tree_7_1"."Score_1" AS "Score_1", "GB_Tree_7_1"."Score_2" AS "Score_2", "GB_Tree_7_1"."Score_3" AS "Score_3" 
FROM "GB_Tree_7_1" UNION ALL SELECT "GB_Tree_7_2"."KEY" AS "KEY", "GB_Tree_7_2"."Score_0" AS "Score_0", "GB_Tree_7_2"."Score_1" AS "Score_1", "GB_Tree_7_2"."Score_2" AS "Score_2", "GB_Tree_7_2"."Score_3" AS "Score_3" 
FROM "GB_Tree_7_2" UNION ALL SELECT "GB_Tree_7_3"."KEY" AS "KEY", "GB_Tree_7_3"."Score_0" AS "Score_0", "GB_Tree_7_3"."Score_1" AS "Score_1", "GB_Tree_7_3"."Score_2" AS "Score_2", "GB_Tree_7_3"."Score_3" AS "Score_3" 
FROM "GB_Tree_7_3") AS "Score_Union_CTE_esu_3"), 
"Score_Union_CTE_4" AS 
(WITH "DT_node_lookup_32" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_106" <= 3.1021876335144043) THEN CASE WHEN ("ADS"."Feature_218" <= 10.797830581665039) THEN CASE WHEN ("ADS"."Feature_24" <= 1.8797483444213867) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_484" <= -0.3611575663089752) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_75" <= -0.8105179071426392) THEN CASE WHEN ("ADS"."Feature_222" <= -0.5600647926330566) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_370" <= 1.6631455421447754) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "FourClass_500" AS "ADS"), 
"DT_node_data_32" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 525 AS count, 3 AS depth, 2 AS parent_id, -0.2838733170905054 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 14 AS count, 3 AS depth, 2 AS parent_id, 1.3748366608261584 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 6 AS count, 3 AS depth, 5 AS parent_id, -0.9445908098396906 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 10 AS count, 3 AS depth, 5 AS parent_id, 2.342176065279479 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 14 AS count, 3 AS depth, 9 AS parent_id, -0.4207498784575162 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 37 AS count, 3 AS depth, 9 AS parent_id, 1.6288724248586763 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 183 AS count, 3 AS depth, 12 AS parent_id, -0.01755473544538845 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 11 AS count, 3 AS depth, 12 AS parent_id, 1.8863778910890794 AS "Estimator") AS "Values"), 
"DT_Output_32" AS 
(SELECT "DT_node_lookup_32"."KEY" AS "KEY", "DT_node_lookup_32".node_id_2 AS node_id_2, "DT_node_data_32".node_id AS node_id, "DT_node_data_32".feature AS feature, "DT_node_data_32".threshold AS threshold, "DT_node_data_32".count AS count, "DT_node_data_32".depth AS depth, "DT_node_data_32".parent_id AS parent_id, "DT_node_data_32"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_32" LEFT OUTER JOIN "DT_node_data_32" ON "DT_node_lookup_32".node_id_2 = "DT_node_data_32".node_id), 
"GB_Tree_8_0" AS 
(SELECT "DT_Output_32"."KEY" AS "KEY", "DT_Output_32"."Estimator" AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3" 
FROM "DT_Output_32"), 
"DT_node_lookup_33" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_164" <= 1.8603899478912354) THEN CASE WHEN ("ADS"."Feature_191" <= 12.260612487792969) THEN CASE WHEN ("ADS"."Feature_249" <= 3.450413703918457) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_480" <= 1.680117130279541) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_226" <= 0.46582546830177307) THEN CASE WHEN ("ADS"."Feature_291" <= -0.5838491916656494) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_60" <= 0.5692164897918701) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "FourClass_500" AS "ADS"), 
"DT_node_data_33" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 452 AS count, 3 AS depth, 2 AS parent_id, 0.10816155061285394 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 303 AS count, 3 AS depth, 2 AS parent_id, -0.4091024878609747 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 11 AS count, 3 AS depth, 5 AS parent_id, 2.1238121220625215 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 6 AS count, 3 AS depth, 5 AS parent_id, -0.3514389747982247 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 3 AS depth, 9 AS parent_id, -0.9386804229928173 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 14 AS count, 3 AS depth, 9 AS parent_id, 2.2327618905461115 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 9 AS count, 3 AS depth, 12 AS parent_id, -0.9598248135081467 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 3 AS depth, 12 AS parent_id, 1.7111550072705213 AS "Estimator") AS "Values"), 
"DT_Output_33" AS 
(SELECT "DT_node_lookup_33"."KEY" AS "KEY", "DT_node_lookup_33".node_id_2 AS node_id_2, "DT_node_data_33".node_id AS node_id, "DT_node_data_33".feature AS feature, "DT_node_data_33".threshold AS threshold, "DT_node_data_33".count AS count, "DT_node_data_33".depth AS depth, "DT_node_data_33".parent_id AS parent_id, "DT_node_data_33"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_33" LEFT OUTER JOIN "DT_node_data_33" ON "DT_node_lookup_33".node_id_2 = "DT_node_data_33".node_id), 
"GB_Tree_8_1" AS 
(SELECT "DT_Output_33"."KEY" AS "KEY", 0.0 AS "Score_0", "DT_Output_33"."Estimator" AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3" 
FROM "DT_Output_33"), 
"DT_node_lookup_34" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_264" <= 13.710893630981445) THEN CASE WHEN ("ADS"."Feature_377" <= -4.071240425109863) THEN CASE WHEN ("ADS"."Feature_478" <= -1.2524185180664062) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_209" <= -4.747091293334961) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_470" <= -0.14965112507343292) THEN CASE WHEN ("ADS"."Feature_314" <= -0.11169290542602539) THEN 10 ELSE 11 END ELSE 12 END END AS node_id_2 
FROM "FourClass_500" AS "ADS"), 
"DT_node_data_34" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 22 AS count, 3 AS depth, 2 AS parent_id, 1.5579065050799192 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 157 AS count, 3 AS depth, 2 AS parent_id, 0.20647992385646144 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 117 AS count, 3 AS depth, 5 AS parent_id, 0.41846783637139473 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 499 AS count, 3 AS depth, 5 AS parent_id, -0.2741690094168799 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 9 AS parent_id, 2.2295800622938082 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 3 AS depth, 9 AS parent_id, 2.3989230308152814 AS "Estimator" UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 2 AS depth, 8 AS parent_id, 2.904682286834639 AS "Estimator") AS "Values"), 
"DT_Output_34" AS 
(SELECT "DT_node_lookup_34"."KEY" AS "KEY", "DT_node_lookup_34".node_id_2 AS node_id_2, "DT_node_data_34".node_id AS node_id, "DT_node_data_34".feature AS feature, "DT_node_data_34".threshold AS threshold, "DT_node_data_34".count AS count, "DT_node_data_34".depth AS depth, "DT_node_data_34".parent_id AS parent_id, "DT_node_data_34"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_34" LEFT OUTER JOIN "DT_node_data_34" ON "DT_node_lookup_34".node_id_2 = "DT_node_data_34".node_id), 
"GB_Tree_8_2" AS 
(SELECT "DT_Output_34"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", "DT_Output_34"."Estimator" AS "Score_2", 0.0 AS "Score_3" 
FROM "DT_Output_34"), 
"DT_node_lookup_35" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_142" <= -2.537008762359619) THEN CASE WHEN ("ADS"."Feature_201" <= -1.1683917045593262) THEN CASE WHEN ("ADS"."Feature_208" <= 3.0081188678741455) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_18" <= 11.945491790771484) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_483" <= 2.0281519889831543) THEN CASE WHEN ("ADS"."Feature_497" <= 3.6014933586120605) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_252" <= -5.790290832519531) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "FourClass_500" AS "ADS"), 
"DT_node_data_35" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 21 AS count, 3 AS depth, 2 AS parent_id, 1.3758149560873623 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 11 AS count, 3 AS depth, 2 AS parent_id, -0.9692711876960081 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 245 AS count, 3 AS depth, 5 AS parent_id, -0.537923499805993 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 8 AS count, 3 AS depth, 5 AS parent_id, 1.353416865386605 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 237 AS count, 3 AS depth, 9 AS parent_id, -0.3075620145047762 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 82 AS count, 3 AS depth, 9 AS parent_id, 0.5366188049359019 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 41 AS count, 3 AS depth, 12 AS parent_id, 1.5745249102311132 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 155 AS count, 3 AS depth, 12 AS parent_id, 0.2879125685695459 AS "Estimator") AS "Values"), 
"DT_Output_35" AS 
(SELECT "DT_node_lookup_35"."KEY" AS "KEY", "DT_node_lookup_35".node_id_2 AS node_id_2, "DT_node_data_35".node_id AS node_id, "DT_node_data_35".feature AS feature, "DT_node_data_35".threshold AS threshold, "DT_node_data_35".count AS count, "DT_node_data_35".depth AS depth, "DT_node_data_35".parent_id AS parent_id, "DT_node_data_35"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_35" LEFT OUTER JOIN "DT_node_data_35" ON "DT_node_lookup_35".node_id_2 = "DT_node_data_35".node_id), 
"GB_Tree_8_3" AS 
(SELECT "DT_Output_35"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", "DT_Output_35"."Estimator" AS "Score_3" 
FROM "DT_Output_35"), 
"DT_node_lookup_36" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_436" <= -4.3499321937561035) THEN CASE WHEN ("ADS"."Feature_71" <= -4.004145622253418) THEN CASE WHEN ("ADS"."Feature_247" <= -6.350850582122803) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_148" <= 8.246491432189941) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_266" <= 2.777139186859131) THEN CASE WHEN ("ADS"."Feature_233" <= 2.135545492172241) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_338" <= 3.3089828491210938) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "FourClass_500" AS "ADS"), 
"DT_node_data_36" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 13 AS count, 3 AS depth, 2 AS parent_id, -0.20910639413407808 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 46 AS count, 3 AS depth, 2 AS parent_id, 1.354640772039005 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 115 AS count, 3 AS depth, 5 AS parent_id, -0.14030397860130098 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 6 AS count, 3 AS depth, 5 AS parent_id, 2.2842939775072546 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 430 AS count, 3 AS depth, 9 AS parent_id, -0.3694441785970416 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 7 AS count, 3 AS depth, 9 AS parent_id, 1.5924820266408652 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 136 AS count, 3 AS depth, 12 AS parent_id, 0.4464346914923423 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 47 AS count, 3 AS depth, 12 AS parent_id, -0.5791010438899068 AS "Estimator") AS "Values"), 
"DT_Output_36" AS 
(SELECT "DT_node_lookup_36"."KEY" AS "KEY", "DT_node_lookup_36".node_id_2 AS node_id_2, "DT_node_data_36".node_id AS node_id, "DT_node_data_36".feature AS feature, "DT_node_data_36".threshold AS threshold, "DT_node_data_36".count AS count, "DT_node_data_36".depth AS depth, "DT_node_data_36".parent_id AS parent_id, "DT_node_data_36"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_36" LEFT OUTER JOIN "DT_node_data_36" ON "DT_node_lookup_36".node_id_2 = "DT_node_data_36".node_id), 
"GB_Tree_9_0" AS 
(SELECT "DT_Output_36"."KEY" AS "KEY", "DT_Output_36"."Estimator" AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3" 
FROM "DT_Output_36"), 
"DT_node_lookup_37" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_495" <= -0.9832198619842529) THEN CASE WHEN ("ADS"."Feature_396" <= -11.611320495605469) THEN CASE WHEN ("ADS"."Feature_427" <= -3.6277337074279785) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_301" <= 14.024690628051758) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_259" <= 0.2033272683620453) THEN CASE WHEN ("ADS"."Feature_170" <= -1.7320566177368164) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_208" <= -6.581704616546631) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "FourClass_500" AS "ADS"), 
"DT_node_data_37" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 6 AS count, 3 AS depth, 2 AS parent_id, 2.427852864561591 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 3 AS depth, 2 AS parent_id, -0.9642762756505598 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 336 AS count, 3 AS depth, 5 AS parent_id, -0.3679948966458895 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 3 AS depth, 5 AS parent_id, 2.5479745149130646 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 9 AS count, 3 AS depth, 9 AS parent_id, 1.73977764168028 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 256 AS count, 3 AS depth, 9 AS parent_id, -0.15939835389252505 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 23 AS count, 3 AS depth, 12 AS parent_id, 1.5799364748315963 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 164 AS count, 3 AS depth, 12 AS parent_id, 0.40491302409358293 AS "Estimator") AS "Values"), 
"DT_Output_37" AS 
(SELECT "DT_node_lookup_37"."KEY" AS "KEY", "DT_node_lookup_37".node_id_2 AS node_id_2, "DT_node_data_37".node_id AS node_id, "DT_node_data_37".feature AS feature, "DT_node_data_37".threshold AS threshold, "DT_node_data_37".count AS count, "DT_node_data_37".depth AS depth, "DT_node_data_37".parent_id AS parent_id, "DT_node_data_37"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_37" LEFT OUTER JOIN "DT_node_data_37" ON "DT_node_lookup_37".node_id_2 = "DT_node_data_37".node_id), 
"GB_Tree_9_1" AS 
(SELECT "DT_Output_37"."KEY" AS "KEY", 0.0 AS "Score_0", "DT_Output_37"."Estimator" AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3" 
FROM "DT_Output_37"), 
"DT_node_lookup_38" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_196" <= -0.30257976055145264) THEN CASE WHEN ("ADS"."Feature_268" <= 12.031026840209961) THEN CASE WHEN ("ADS"."Feature_138" <= -1.420310378074646) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_444" <= 0.9205313920974731) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_245" <= -0.7983218431472778) THEN CASE WHEN ("ADS"."Feature_350" <= -0.09275883436203003) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_72" <= -6.617042541503906) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "FourClass_500" AS "ADS"), 
"DT_node_data_38" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 34 AS count, 3 AS depth, 2 AS parent_id, 0.8085253801280619 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 397 AS count, 3 AS depth, 2 AS parent_id, -0.36121750436855854 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 13 AS count, 3 AS depth, 5 AS parent_id, 1.5809960761011366 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 3 AS depth, 5 AS parent_id, -0.9923815989386229 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 37 AS count, 3 AS depth, 9 AS parent_id, 0.042642890943278944 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 46 AS count, 3 AS depth, 9 AS parent_id, 1.4099372261344794 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 34 AS count, 3 AS depth, 12 AS parent_id, 1.0977814317914611 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 237 AS count, 3 AS depth, 12 AS parent_id, -0.11067109254593221 AS "Estimator") AS "Values"), 
"DT_Output_38" AS 
(SELECT "DT_node_lookup_38"."KEY" AS "KEY", "DT_node_lookup_38".node_id_2 AS node_id_2, "DT_node_data_38".node_id AS node_id, "DT_node_data_38".feature AS feature, "DT_node_data_38".threshold AS threshold, "DT_node_data_38".count AS count, "DT_node_data_38".depth AS depth, "DT_node_data_38".parent_id AS parent_id, "DT_node_data_38"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_38" LEFT OUTER JOIN "DT_node_data_38" ON "DT_node_lookup_38".node_id_2 = "DT_node_data_38".node_id), 
"GB_Tree_9_2" AS 
(SELECT "DT_Output_38"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", "DT_Output_38"."Estimator" AS "Score_2", 0.0 AS "Score_3" 
FROM "DT_Output_38"), 
"DT_node_lookup_39" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_338" <= -1.7936967611312866) THEN CASE WHEN ("ADS"."Feature_404" <= 10.863452911376953) THEN CASE WHEN ("ADS"."Feature_210" <= 6.479885101318359) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_232" <= 1.1941465139389038) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_228" <= -1.131141185760498) THEN CASE WHEN ("ADS"."Feature_216" <= -10.690346717834473) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_18" <= 3.1486763954162598) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "FourClass_500" AS "ADS"), 
"DT_node_data_39" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 261 AS count, 3 AS depth, 2 AS parent_id, -0.5045027299817623 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 32 AS count, 3 AS depth, 2 AS parent_id, 0.625870366514833 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 8 AS count, 3 AS depth, 5 AS parent_id, 1.9572544601361632 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 3 AS depth, 5 AS parent_id, -0.9563204637469866 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 7 AS count, 3 AS depth, 9 AS parent_id, 1.7426124776084075 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 206 AS count, 3 AS depth, 9 AS parent_id, -0.3473444795335962 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 188 AS count, 3 AS depth, 12 AS parent_id, 0.17851434597795796 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 95 AS count, 3 AS depth, 12 AS parent_id, 1.0297284857993059 AS "Estimator") AS "Values"), 
"DT_Output_39" AS 
(SELECT "DT_node_lookup_39"."KEY" AS "KEY", "DT_node_lookup_39".node_id_2 AS node_id_2, "DT_node_data_39".node_id AS node_id, "DT_node_data_39".feature AS feature, "DT_node_data_39".threshold AS threshold, "DT_node_data_39".count AS count, "DT_node_data_39".depth AS depth, "DT_node_data_39".parent_id AS parent_id, "DT_node_data_39"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_39" LEFT OUTER JOIN "DT_node_data_39" ON "DT_node_lookup_39".node_id_2 = "DT_node_data_39".node_id), 
"GB_Tree_9_3" AS 
(SELECT "DT_Output_39"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", "DT_Output_39"."Estimator" AS "Score_3" 
FROM "DT_Output_39")
 SELECT "Score_Union_CTE_esu_4"."KEY", "Score_Union_CTE_esu_4"."Score_0", "Score_Union_CTE_esu_4"."Score_1", "Score_Union_CTE_esu_4"."Score_2", "Score_Union_CTE_esu_4"."Score_3" 
FROM (SELECT "GB_Tree_8_0"."KEY" AS "KEY", "GB_Tree_8_0"."Score_0" AS "Score_0", "GB_Tree_8_0"."Score_1" AS "Score_1", "GB_Tree_8_0"."Score_2" AS "Score_2", "GB_Tree_8_0"."Score_3" AS "Score_3" 
FROM "GB_Tree_8_0" UNION ALL SELECT "GB_Tree_8_1"."KEY" AS "KEY", "GB_Tree_8_1"."Score_0" AS "Score_0", "GB_Tree_8_1"."Score_1" AS "Score_1", "GB_Tree_8_1"."Score_2" AS "Score_2", "GB_Tree_8_1"."Score_3" AS "Score_3" 
FROM "GB_Tree_8_1" UNION ALL SELECT "GB_Tree_8_2"."KEY" AS "KEY", "GB_Tree_8_2"."Score_0" AS "Score_0", "GB_Tree_8_2"."Score_1" AS "Score_1", "GB_Tree_8_2"."Score_2" AS "Score_2", "GB_Tree_8_2"."Score_3" AS "Score_3" 
FROM "GB_Tree_8_2" UNION ALL SELECT "GB_Tree_8_3"."KEY" AS "KEY", "GB_Tree_8_3"."Score_0" AS "Score_0", "GB_Tree_8_3"."Score_1" AS "Score_1", "GB_Tree_8_3"."Score_2" AS "Score_2", "GB_Tree_8_3"."Score_3" AS "Score_3" 
FROM "GB_Tree_8_3" UNION ALL SELECT "GB_Tree_9_0"."KEY" AS "KEY", "GB_Tree_9_0"."Score_0" AS "Score_0", "GB_Tree_9_0"."Score_1" AS "Score_1", "GB_Tree_9_0"."Score_2" AS "Score_2", "GB_Tree_9_0"."Score_3" AS "Score_3" 
FROM "GB_Tree_9_0" UNION ALL SELECT "GB_Tree_9_1"."KEY" AS "KEY", "GB_Tree_9_1"."Score_0" AS "Score_0", "GB_Tree_9_1"."Score_1" AS "Score_1", "GB_Tree_9_1"."Score_2" AS "Score_2", "GB_Tree_9_1"."Score_3" AS "Score_3" 
FROM "GB_Tree_9_1" UNION ALL SELECT "GB_Tree_9_2"."KEY" AS "KEY", "GB_Tree_9_2"."Score_0" AS "Score_0", "GB_Tree_9_2"."Score_1" AS "Score_1", "GB_Tree_9_2"."Score_2" AS "Score_2", "GB_Tree_9_2"."Score_3" AS "Score_3" 
FROM "GB_Tree_9_2" UNION ALL SELECT "GB_Tree_9_3"."KEY" AS "KEY", "GB_Tree_9_3"."Score_0" AS "Score_0", "GB_Tree_9_3"."Score_1" AS "Score_1", "GB_Tree_9_3"."Score_2" AS "Score_2", "GB_Tree_9_3"."Score_3" AS "Score_3" 
FROM "GB_Tree_9_3") AS "Score_Union_CTE_esu_4"), 
"Score_Union_CTE_5" AS 
(WITH "DT_node_lookup_40" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_191" <= 3.7015044689178467) THEN CASE WHEN ("ADS"."Feature_467" <= 1.763312816619873) THEN CASE WHEN ("ADS"."Feature_148" <= 1.2627977132797241) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_125" <= 0.9367794990539551) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_25" <= 11.062110900878906) THEN CASE WHEN ("ADS"."Feature_396" <= -5.227508544921875) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_6" <= 0.180791437625885) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "FourClass_500" AS "ADS"), 
"DT_node_data_40" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 350 AS count, 3 AS depth, 2 AS parent_id, -0.1612438767002566 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 233 AS count, 3 AS depth, 2 AS parent_id, 0.40944937969936557 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 12 AS count, 3 AS depth, 5 AS parent_id, 1.9505572047491193 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 3 AS depth, 5 AS parent_id, -0.9664272891617817 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 38 AS count, 3 AS depth, 9 AS parent_id, 0.32570431473329703 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 161 AS count, 3 AS depth, 9 AS parent_id, -0.724474688849027 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 3 AS depth, 12 AS parent_id, 1.7301164485838443 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 12 AS parent_id, 2.3478587819416226 AS "Estimator") AS "Values"), 
"DT_Output_40" AS 
(SELECT "DT_node_lookup_40"."KEY" AS "KEY", "DT_node_lookup_40".node_id_2 AS node_id_2, "DT_node_data_40".node_id AS node_id, "DT_node_data_40".feature AS feature, "DT_node_data_40".threshold AS threshold, "DT_node_data_40".count AS count, "DT_node_data_40".depth AS depth, "DT_node_data_40".parent_id AS parent_id, "DT_node_data_40"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_40" LEFT OUTER JOIN "DT_node_data_40" ON "DT_node_lookup_40".node_id_2 = "DT_node_data_40".node_id), 
"GB_Tree_10_0" AS 
(SELECT "DT_Output_40"."KEY" AS "KEY", "DT_Output_40"."Estimator" AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3" 
FROM "DT_Output_40"), 
"DT_node_lookup_41" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_128" <= 0.5920843482017517) THEN CASE WHEN ("ADS"."Feature_228" <= 4.878637313842773) THEN CASE WHEN ("ADS"."Feature_164" <= 1.8971788883209229) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_38" <= -0.17741736769676208) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_264" <= 3.4844298362731934) THEN CASE WHEN ("ADS"."Feature_280" <= -0.010975688695907593) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_394" <= 1.0424010753631592) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "FourClass_500" AS "ADS"), 
"DT_node_data_41" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 474 AS count, 3 AS depth, 2 AS parent_id, -0.30880261148941984 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 13 AS count, 3 AS depth, 2 AS parent_id, 1.205581863591054 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 53 AS count, 3 AS depth, 5 AS parent_id, 0.9297819370428682 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 68 AS count, 3 AS depth, 5 AS parent_id, -0.1214578270147123 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 67 AS count, 3 AS depth, 9 AS parent_id, -0.6948167029562585 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 77 AS count, 3 AS depth, 9 AS parent_id, 0.5409428135720803 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 42 AS count, 3 AS depth, 12 AS parent_id, 1.5869274621141345 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 6 AS count, 3 AS depth, 12 AS parent_id, -1.0017125440928718 AS "Estimator") AS "Values"), 
"DT_Output_41" AS 
(SELECT "DT_node_lookup_41"."KEY" AS "KEY", "DT_node_lookup_41".node_id_2 AS node_id_2, "DT_node_data_41".node_id AS node_id, "DT_node_data_41".feature AS feature, "DT_node_data_41".threshold AS threshold, "DT_node_data_41".count AS count, "DT_node_data_41".depth AS depth, "DT_node_data_41".parent_id AS parent_id, "DT_node_data_41"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_41" LEFT OUTER JOIN "DT_node_data_41" ON "DT_node_lookup_41".node_id_2 = "DT_node_data_41".node_id), 
"GB_Tree_10_1" AS 
(SELECT "DT_Output_41"."KEY" AS "KEY", 0.0 AS "Score_0", "DT_Output_41"."Estimator" AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3" 
FROM "DT_Output_41"), 
"DT_node_lookup_42" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_237" <= 11.945308685302734) THEN CASE WHEN ("ADS"."Feature_396" <= 2.8372445106506348) THEN CASE WHEN ("ADS"."Feature_289" <= -2.933359146118164) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_173" <= 0.7823210954666138) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_216" <= 7.600351333618164) THEN CASE WHEN ("ADS"."Feature_414" <= -4.448866844177246) THEN 10 ELSE 11 END ELSE 12 END END AS node_id_2 
FROM "FourClass_500" AS "ADS"), 
"DT_node_data_42" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 169 AS count, 3 AS depth, 2 AS parent_id, 0.2245873358284585 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 359 AS count, 3 AS depth, 2 AS parent_id, -0.376342261972581 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 212 AS count, 3 AS depth, 5 AS parent_id, 0.06200625298966812 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 51 AS count, 3 AS depth, 5 AS parent_id, 1.1356760902072924 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS count, 3 AS depth, 9 AS parent_id, 2.0223802348037183 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS count, 3 AS depth, 9 AS parent_id, 1.6152864806409968 AS "Estimator" UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 2 AS depth, 8 AS parent_id, -0.9547022071776303 AS "Estimator") AS "Values"), 
"DT_Output_42" AS 
(SELECT "DT_node_lookup_42"."KEY" AS "KEY", "DT_node_lookup_42".node_id_2 AS node_id_2, "DT_node_data_42".node_id AS node_id, "DT_node_data_42".feature AS feature, "DT_node_data_42".threshold AS threshold, "DT_node_data_42".count AS count, "DT_node_data_42".depth AS depth, "DT_node_data_42".parent_id AS parent_id, "DT_node_data_42"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_42" LEFT OUTER JOIN "DT_node_data_42" ON "DT_node_lookup_42".node_id_2 = "DT_node_data_42".node_id), 
"GB_Tree_10_2" AS 
(SELECT "DT_Output_42"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", "DT_Output_42"."Estimator" AS "Score_2", 0.0 AS "Score_3" 
FROM "DT_Output_42"), 
"DT_node_lookup_43" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_183" <= -11.473261833190918) THEN CASE WHEN ("ADS"."Feature_348" <= -0.09331661462783813) THEN CASE WHEN ("ADS"."Feature_260" <= -0.3861735165119171) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_458" <= 0.3293536901473999) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_221" <= -1.9479866027832031) THEN CASE WHEN ("ADS"."Feature_252" <= 2.8360860347747803) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_153" <= 1.9521796703338623) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "FourClass_500" AS "ADS"), 
"DT_node_data_43" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS count, 3 AS depth, 2 AS parent_id, 2.327110044020445 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 9 AS count, 3 AS depth, 2 AS parent_id, 1.757890604224074 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 11 AS count, 3 AS depth, 5 AS parent_id, -0.970155029870978 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS count, 3 AS depth, 5 AS parent_id, 1.6863845474841677 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 14 AS count, 3 AS depth, 9 AS parent_id, 1.694742042487735 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 6 AS count, 3 AS depth, 9 AS parent_id, -0.3438841345250979 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 482 AS count, 3 AS depth, 12 AS parent_id, 0.09584504321109603 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 269 AS count, 3 AS depth, 12 AS parent_id, -0.40531805456560455 AS "Estimator") AS "Values"), 
"DT_Output_43" AS 
(SELECT "DT_node_lookup_43"."KEY" AS "KEY", "DT_node_lookup_43".node_id_2 AS node_id_2, "DT_node_data_43".node_id AS node_id, "DT_node_data_43".feature AS feature, "DT_node_data_43".threshold AS threshold, "DT_node_data_43".count AS count, "DT_node_data_43".depth AS depth, "DT_node_data_43".parent_id AS parent_id, "DT_node_data_43"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_43" LEFT OUTER JOIN "DT_node_data_43" ON "DT_node_lookup_43".node_id_2 = "DT_node_data_43".node_id), 
"GB_Tree_10_3" AS 
(SELECT "DT_Output_43"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", "DT_Output_43"."Estimator" AS "Score_3" 
FROM "DT_Output_43"), 
"DT_node_lookup_44" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_106" <= -5.438448905944824) THEN CASE WHEN ("ADS"."Feature_206" <= 2.0255837440490723) THEN CASE WHEN ("ADS"."Feature_470" <= -1.6832544803619385) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_361" <= 0.6559069752693176) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_300" <= 1.016282081604004) THEN CASE WHEN ("ADS"."Feature_402" <= -6.374691009521484) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_210" <= 3.9574124813079834) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "FourClass_500" AS "ADS"), 
"DT_node_data_44" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS count, 3 AS depth, 2 AS parent_id, 1.4726038853186774 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 132 AS count, 3 AS depth, 2 AS parent_id, -0.7784857487133433 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS count, 3 AS depth, 5 AS parent_id, 2.4847121923925646 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 5 AS parent_id, -0.902887000539096 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 81 AS count, 3 AS depth, 9 AS parent_id, 0.6631658097393386 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 468 AS count, 3 AS depth, 9 AS parent_id, -0.16235082979212823 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 80 AS count, 3 AS depth, 12 AS parent_id, 1.0230920858233779 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 29 AS count, 3 AS depth, 12 AS parent_id, -0.5118335818387275 AS "Estimator") AS "Values"), 
"DT_Output_44" AS 
(SELECT "DT_node_lookup_44"."KEY" AS "KEY", "DT_node_lookup_44".node_id_2 AS node_id_2, "DT_node_data_44".node_id AS node_id, "DT_node_data_44".feature AS feature, "DT_node_data_44".threshold AS threshold, "DT_node_data_44".count AS count, "DT_node_data_44".depth AS depth, "DT_node_data_44".parent_id AS parent_id, "DT_node_data_44"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_44" LEFT OUTER JOIN "DT_node_data_44" ON "DT_node_lookup_44".node_id_2 = "DT_node_data_44".node_id), 
"GB_Tree_11_0" AS 
(SELECT "DT_Output_44"."KEY" AS "KEY", "DT_Output_44"."Estimator" AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3" 
FROM "DT_Output_44"), 
"DT_node_lookup_45" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_129" <= -8.432989120483398) THEN CASE WHEN ("ADS"."Feature_412" <= -4.415275573730469) THEN CASE WHEN ("ADS"."Feature_39" <= 1.5153098106384277) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_338" <= 7.148751258850098) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_495" <= -0.9832198619842529) THEN CASE WHEN ("ADS"."Feature_491" <= -1.5057170391082764) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_237" <= 5.7618794441223145) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "FourClass_500" AS "ADS"), 
"DT_node_data_45" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 13 AS count, 3 AS depth, 2 AS parent_id, -0.9324917810201724 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 2 AS parent_id, 1.9719070980587308 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 29 AS count, 3 AS depth, 5 AS parent_id, 1.4742419945325544 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 7 AS count, 3 AS depth, 5 AS parent_id, -0.950977632211342 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 20 AS count, 3 AS depth, 9 AS parent_id, 0.8440015662823818 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 306 AS count, 3 AS depth, 9 AS parent_id, -0.43672797127067065 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 370 AS count, 3 AS depth, 12 AS parent_id, 0.027509177708971513 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 54 AS count, 3 AS depth, 12 AS parent_id, 0.879066996055723 AS "Estimator") AS "Values"), 
"DT_Output_45" AS 
(SELECT "DT_node_lookup_45"."KEY" AS "KEY", "DT_node_lookup_45".node_id_2 AS node_id_2, "DT_node_data_45".node_id AS node_id, "DT_node_data_45".feature AS feature, "DT_node_data_45".threshold AS threshold, "DT_node_data_45".count AS count, "DT_node_data_45".depth AS depth, "DT_node_data_45".parent_id AS parent_id, "DT_node_data_45"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_45" LEFT OUTER JOIN "DT_node_data_45" ON "DT_node_lookup_45".node_id_2 = "DT_node_data_45".node_id), 
"GB_Tree_11_1" AS 
(SELECT "DT_Output_45"."KEY" AS "KEY", 0.0 AS "Score_0", "DT_Output_45"."Estimator" AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3" 
FROM "DT_Output_45"), 
"DT_node_lookup_46" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_417" <= 13.800678253173828) THEN CASE WHEN ("ADS"."Feature_456" <= -3.638071060180664) THEN CASE WHEN ("ADS"."Feature_193" <= -7.615821838378906) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_152" <= 9.174335479736328) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_108" <= 0.12751048803329468) THEN CASE WHEN ("ADS"."Feature_202" <= 0.4395715892314911) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_19" <= -0.46696215867996216) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "FourClass_500" AS "ADS"), 
"DT_node_data_46" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 21 AS count, 3 AS depth, 2 AS parent_id, 1.4879596595912188 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 193 AS count, 3 AS depth, 2 AS parent_id, 0.19592069445905252 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 553 AS count, 3 AS depth, 5 AS parent_id, -0.21526643810310106 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 28 AS count, 3 AS depth, 5 AS parent_id, 0.9528338210749729 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 9 AS parent_id, 2.283890074033841 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 9 AS parent_id, 2.4467737705210246 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 12 AS parent_id, 2.1271942629028957 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 3 AS depth, 12 AS parent_id, 1.9963148821549925 AS "Estimator") AS "Values"), 
"DT_Output_46" AS 
(SELECT "DT_node_lookup_46"."KEY" AS "KEY", "DT_node_lookup_46".node_id_2 AS node_id_2, "DT_node_data_46".node_id AS node_id, "DT_node_data_46".feature AS feature, "DT_node_data_46".threshold AS threshold, "DT_node_data_46".count AS count, "DT_node_data_46".depth AS depth, "DT_node_data_46".parent_id AS parent_id, "DT_node_data_46"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_46" LEFT OUTER JOIN "DT_node_data_46" ON "DT_node_lookup_46".node_id_2 = "DT_node_data_46".node_id), 
"GB_Tree_11_2" AS 
(SELECT "DT_Output_46"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", "DT_Output_46"."Estimator" AS "Score_2", 0.0 AS "Score_3" 
FROM "DT_Output_46"), 
"DT_node_lookup_47" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_308" <= 3.541053295135498) THEN CASE WHEN ("ADS"."Feature_179" <= -3.916388511657715) THEN CASE WHEN ("ADS"."Feature_335" <= -1.0814660787582397) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_343" <= 7.548157691955566) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_278" <= -2.3004395961761475) THEN CASE WHEN ("ADS"."Feature_208" <= 6.631159782409668) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_298" <= -0.8787379860877991) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "FourClass_500" AS "ADS"), 
"DT_node_data_47" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 16 AS count, 3 AS depth, 2 AS parent_id, 1.0636751954680392 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 149 AS count, 3 AS depth, 2 AS parent_id, -0.5225664877950298 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 235 AS count, 3 AS depth, 5 AS parent_id, 0.013278949470032117 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 175 AS count, 3 AS depth, 5 AS parent_id, 0.684764905849547 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 3 AS depth, 9 AS parent_id, 1.907850224917068 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 9 AS parent_id, 2.865915435015968 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 41 AS count, 3 AS depth, 12 AS parent_id, 0.35762038562172455 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 181 AS count, 3 AS depth, 12 AS parent_id, -0.6092787353386878 AS "Estimator") AS "Values"), 
"DT_Output_47" AS 
(SELECT "DT_node_lookup_47"."KEY" AS "KEY", "DT_node_lookup_47".node_id_2 AS node_id_2, "DT_node_data_47".node_id AS node_id, "DT_node_data_47".feature AS feature, "DT_node_data_47".threshold AS threshold, "DT_node_data_47".count AS count, "DT_node_data_47".depth AS depth, "DT_node_data_47".parent_id AS parent_id, "DT_node_data_47"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_47" LEFT OUTER JOIN "DT_node_data_47" ON "DT_node_lookup_47".node_id_2 = "DT_node_data_47".node_id), 
"GB_Tree_11_3" AS 
(SELECT "DT_Output_47"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", "DT_Output_47"."Estimator" AS "Score_3" 
FROM "DT_Output_47")
 SELECT "Score_Union_CTE_esu_5"."KEY", "Score_Union_CTE_esu_5"."Score_0", "Score_Union_CTE_esu_5"."Score_1", "Score_Union_CTE_esu_5"."Score_2", "Score_Union_CTE_esu_5"."Score_3" 
FROM (SELECT "GB_Tree_10_0"."KEY" AS "KEY", "GB_Tree_10_0"."Score_0" AS "Score_0", "GB_Tree_10_0"."Score_1" AS "Score_1", "GB_Tree_10_0"."Score_2" AS "Score_2", "GB_Tree_10_0"."Score_3" AS "Score_3" 
FROM "GB_Tree_10_0" UNION ALL SELECT "GB_Tree_10_1"."KEY" AS "KEY", "GB_Tree_10_1"."Score_0" AS "Score_0", "GB_Tree_10_1"."Score_1" AS "Score_1", "GB_Tree_10_1"."Score_2" AS "Score_2", "GB_Tree_10_1"."Score_3" AS "Score_3" 
FROM "GB_Tree_10_1" UNION ALL SELECT "GB_Tree_10_2"."KEY" AS "KEY", "GB_Tree_10_2"."Score_0" AS "Score_0", "GB_Tree_10_2"."Score_1" AS "Score_1", "GB_Tree_10_2"."Score_2" AS "Score_2", "GB_Tree_10_2"."Score_3" AS "Score_3" 
FROM "GB_Tree_10_2" UNION ALL SELECT "GB_Tree_10_3"."KEY" AS "KEY", "GB_Tree_10_3"."Score_0" AS "Score_0", "GB_Tree_10_3"."Score_1" AS "Score_1", "GB_Tree_10_3"."Score_2" AS "Score_2", "GB_Tree_10_3"."Score_3" AS "Score_3" 
FROM "GB_Tree_10_3" UNION ALL SELECT "GB_Tree_11_0"."KEY" AS "KEY", "GB_Tree_11_0"."Score_0" AS "Score_0", "GB_Tree_11_0"."Score_1" AS "Score_1", "GB_Tree_11_0"."Score_2" AS "Score_2", "GB_Tree_11_0"."Score_3" AS "Score_3" 
FROM "GB_Tree_11_0" UNION ALL SELECT "GB_Tree_11_1"."KEY" AS "KEY", "GB_Tree_11_1"."Score_0" AS "Score_0", "GB_Tree_11_1"."Score_1" AS "Score_1", "GB_Tree_11_1"."Score_2" AS "Score_2", "GB_Tree_11_1"."Score_3" AS "Score_3" 
FROM "GB_Tree_11_1" UNION ALL SELECT "GB_Tree_11_2"."KEY" AS "KEY", "GB_Tree_11_2"."Score_0" AS "Score_0", "GB_Tree_11_2"."Score_1" AS "Score_1", "GB_Tree_11_2"."Score_2" AS "Score_2", "GB_Tree_11_2"."Score_3" AS "Score_3" 
FROM "GB_Tree_11_2" UNION ALL SELECT "GB_Tree_11_3"."KEY" AS "KEY", "GB_Tree_11_3"."Score_0" AS "Score_0", "GB_Tree_11_3"."Score_1" AS "Score_1", "GB_Tree_11_3"."Score_2" AS "Score_2", "GB_Tree_11_3"."Score_3" AS "Score_3" 
FROM "GB_Tree_11_3") AS "Score_Union_CTE_esu_5"), 
"Score_Union_CTE_6" AS 
(WITH "DT_node_lookup_48" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_268" <= 7.673882484436035) THEN CASE WHEN ("ADS"."Feature_106" <= 3.1021876335144043) THEN CASE WHEN ("ADS"."Feature_408" <= -2.8849329948425293) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_404" <= -0.11848503351211548) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_235" <= -1.888777256011963) THEN CASE WHEN ("ADS"."Feature_195" <= 0.021248579025268555) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_55" <= 2.19901967048645) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "FourClass_500" AS "ADS"), 
"DT_node_data_48" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 157 AS count, 3 AS depth, 2 AS parent_id, 0.31577065462108506 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 344 AS count, 3 AS depth, 2 AS parent_id, -0.3195732342255641 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 100 AS count, 3 AS depth, 5 AS parent_id, 0.8579784988221152 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 106 AS count, 3 AS depth, 5 AS parent_id, -0.006848364791064526 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 9 AS parent_id, 1.4634345256616175 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 9 AS parent_id, 1.8604661727052503 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 90 AS count, 3 AS depth, 12 AS parent_id, -0.9201577394186392 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 12 AS parent_id, 1.420903829641594 AS "Estimator") AS "Values"), 
"DT_Output_48" AS 
(SELECT "DT_node_lookup_48"."KEY" AS "KEY", "DT_node_lookup_48".node_id_2 AS node_id_2, "DT_node_data_48".node_id AS node_id, "DT_node_data_48".feature AS feature, "DT_node_data_48".threshold AS threshold, "DT_node_data_48".count AS count, "DT_node_data_48".depth AS depth, "DT_node_data_48".parent_id AS parent_id, "DT_node_data_48"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_48" LEFT OUTER JOIN "DT_node_data_48" ON "DT_node_lookup_48".node_id_2 = "DT_node_data_48".node_id), 
"GB_Tree_12_0" AS 
(SELECT "DT_Output_48"."KEY" AS "KEY", "DT_Output_48"."Estimator" AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3" 
FROM "DT_Output_48"), 
"DT_node_lookup_49" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_477" <= 0.6162202954292297) THEN CASE WHEN ("ADS"."Feature_249" <= 2.665482997894287) THEN CASE WHEN ("ADS"."Feature_338" <= 7.1328606605529785) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_378" <= -1.3073995113372803) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_397" <= -5.788854598999023) THEN CASE WHEN ("ADS"."Feature_392" <= 0.10869848728179932) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_66" <= -2.0742616653442383) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "FourClass_500" AS "ADS"), 
"DT_node_data_49" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 198 AS count, 3 AS depth, 2 AS parent_id, 0.5832814205746605 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 23 AS count, 3 AS depth, 2 AS parent_id, -0.8757274175451969 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 20 AS count, 3 AS depth, 5 AS parent_id, 1.0581257724684356 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 162 AS count, 3 AS depth, 5 AS parent_id, -0.3587232692864187 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 37 AS count, 3 AS depth, 9 AS parent_id, -0.023832015327824196 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 23 AS count, 3 AS depth, 9 AS parent_id, 1.401766268129141 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS count, 3 AS depth, 12 AS parent_id, 2.094330524480045 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 333 AS count, 3 AS depth, 12 AS parent_id, -0.431828318803898 AS "Estimator") AS "Values"), 
"DT_Output_49" AS 
(SELECT "DT_node_lookup_49"."KEY" AS "KEY", "DT_node_lookup_49".node_id_2 AS node_id_2, "DT_node_data_49".node_id AS node_id, "DT_node_data_49".feature AS feature, "DT_node_data_49".threshold AS threshold, "DT_node_data_49".count AS count, "DT_node_data_49".depth AS depth, "DT_node_data_49".parent_id AS parent_id, "DT_node_data_49"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_49" LEFT OUTER JOIN "DT_node_data_49" ON "DT_node_lookup_49".node_id_2 = "DT_node_data_49".node_id), 
"GB_Tree_12_1" AS 
(SELECT "DT_Output_49"."KEY" AS "KEY", 0.0 AS "Score_0", "DT_Output_49"."Estimator" AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3" 
FROM "DT_Output_49"), 
"DT_node_lookup_50" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_497" <= -8.476680755615234) THEN CASE WHEN ("ADS"."Feature_199" <= 0.6766723394393921) THEN CASE WHEN ("ADS"."Feature_298" <= 0.9211331605911255) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_75" <= 0.8319977521896362) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_110" <= 0.5109117031097412) THEN CASE WHEN ("ADS"."Feature_152" <= 9.330984115600586) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_196" <= 3.840332508087158) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "FourClass_500" AS "ADS"), 
"DT_node_data_50" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 36 AS count, 3 AS depth, 2 AS parent_id, -0.39752491814896496 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 9 AS count, 3 AS depth, 2 AS parent_id, 1.9806851584863623 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 16 AS count, 3 AS depth, 5 AS parent_id, 1.9938336616480152 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS count, 3 AS depth, 5 AS parent_id, -0.23392873904914588 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 468 AS count, 3 AS depth, 9 AS parent_id, -0.31015670535684986 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 25 AS count, 3 AS depth, 9 AS parent_id, 0.8152079435261482 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 186 AS count, 3 AS depth, 12 AS parent_id, 0.04795556930515267 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 55 AS count, 3 AS depth, 12 AS parent_id, 1.005141869046765 AS "Estimator") AS "Values"), 
"DT_Output_50" AS 
(SELECT "DT_node_lookup_50"."KEY" AS "KEY", "DT_node_lookup_50".node_id_2 AS node_id_2, "DT_node_data_50".node_id AS node_id, "DT_node_data_50".feature AS feature, "DT_node_data_50".threshold AS threshold, "DT_node_data_50".count AS count, "DT_node_data_50".depth AS depth, "DT_node_data_50".parent_id AS parent_id, "DT_node_data_50"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_50" LEFT OUTER JOIN "DT_node_data_50" ON "DT_node_lookup_50".node_id_2 = "DT_node_data_50".node_id), 
"GB_Tree_12_2" AS 
(SELECT "DT_Output_50"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", "DT_Output_50"."Estimator" AS "Score_2", 0.0 AS "Score_3" 
FROM "DT_Output_50"), 
"DT_node_lookup_51" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_367" <= 1.9587701559066772) THEN CASE WHEN ("ADS"."Feature_252" <= 3.1533074378967285) THEN CASE WHEN ("ADS"."Feature_142" <= -1.91197669506073) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_493" <= 1.0349165201187134) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_283" <= -10.674118041992188) THEN CASE WHEN ("ADS"."Feature_255" <= 0.8827420473098755) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_260" <= -2.086540460586548) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "FourClass_500" AS "ADS"), 
"DT_node_data_51" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 153 AS count, 3 AS depth, 2 AS parent_id, -0.10098781294600072 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 208 AS count, 3 AS depth, 2 AS parent_id, 0.632986624430244 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 117 AS count, 3 AS depth, 5 AS parent_id, -0.5810072228011205 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 21 AS count, 3 AS depth, 5 AS parent_id, 0.796736777427271 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 8 AS count, 3 AS depth, 9 AS parent_id, 1.9452098402704308 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 3 AS depth, 9 AS parent_id, -1.0125379771722787 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS count, 3 AS depth, 12 AS parent_id, 2.059126161317982 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 286 AS count, 3 AS depth, 12 AS parent_id, -0.4197469973396274 AS "Estimator") AS "Values"), 
"DT_Output_51" AS 
(SELECT "DT_node_lookup_51"."KEY" AS "KEY", "DT_node_lookup_51".node_id_2 AS node_id_2, "DT_node_data_51".node_id AS node_id, "DT_node_data_51".feature AS feature, "DT_node_data_51".threshold AS threshold, "DT_node_data_51".count AS count, "DT_node_data_51".depth AS depth, "DT_node_data_51".parent_id AS parent_id, "DT_node_data_51"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_51" LEFT OUTER JOIN "DT_node_data_51" ON "DT_node_lookup_51".node_id_2 = "DT_node_data_51".node_id), 
"GB_Tree_12_3" AS 
(SELECT "DT_Output_51"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", "DT_Output_51"."Estimator" AS "Score_3" 
FROM "DT_Output_51"), 
"DT_node_lookup_52" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_338" <= -1.7936967611312866) THEN CASE WHEN ("ADS"."Feature_268" <= 4.441470146179199) THEN CASE WHEN ("ADS"."Feature_369" <= 5.9921746253967285) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_176" <= 1.1755833625793457) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_162" <= 1.8935424089431763) THEN CASE WHEN ("ADS"."Feature_228" <= -10.928543090820312) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_97" <= -0.4712924361228943) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "FourClass_500" AS "ADS"), 
"DT_node_data_52" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 188 AS count, 3 AS depth, 2 AS parent_id, 0.6234036442626544 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 31 AS count, 3 AS depth, 2 AS parent_id, -0.6582431334647423 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 76 AS count, 3 AS depth, 5 AS parent_id, -0.7203527012770732 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 9 AS count, 3 AS depth, 5 AS parent_id, 1.4576609602841286 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 23 AS count, 3 AS depth, 9 AS parent_id, 0.8854327142783877 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 462 AS count, 3 AS depth, 9 AS parent_id, -0.3015695176608813 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS count, 3 AS depth, 12 AS parent_id, -0.9339673791987502 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 7 AS count, 3 AS depth, 12 AS parent_id, 2.1876392070071202 AS "Estimator") AS "Values"), 
"DT_Output_52" AS 
(SELECT "DT_node_lookup_52"."KEY" AS "KEY", "DT_node_lookup_52".node_id_2 AS node_id_2, "DT_node_data_52".node_id AS node_id, "DT_node_data_52".feature AS feature, "DT_node_data_52".threshold AS threshold, "DT_node_data_52".count AS count, "DT_node_data_52".depth AS depth, "DT_node_data_52".parent_id AS parent_id, "DT_node_data_52"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_52" LEFT OUTER JOIN "DT_node_data_52" ON "DT_node_lookup_52".node_id_2 = "DT_node_data_52".node_id), 
"GB_Tree_13_0" AS 
(SELECT "DT_Output_52"."KEY" AS "KEY", "DT_Output_52"."Estimator" AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3" 
FROM "DT_Output_52"), 
"DT_node_lookup_53" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_456" <= 0.9262018203735352) THEN CASE WHEN ("ADS"."Feature_297" <= -1.3401861190795898) THEN CASE WHEN ("ADS"."Feature_25" <= 7.852727890014648) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_391" <= -1.4861986637115479) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_279" <= 1.0814063549041748) THEN CASE WHEN ("ADS"."Feature_0" <= -0.2894703447818756) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_174" <= 1.5742738246917725) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "FourClass_500" AS "ADS"), 
"DT_node_data_53" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 181 AS count, 3 AS depth, 2 AS parent_id, -0.6576588837607501 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 11 AS count, 3 AS depth, 2 AS parent_id, 0.8226551148910405 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 15 AS count, 3 AS depth, 5 AS parent_id, 1.550012645173681 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 248 AS count, 3 AS depth, 5 AS parent_id, -0.04369725011957159 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 109 AS count, 3 AS depth, 9 AS parent_id, 0.7966995559062806 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 197 AS count, 3 AS depth, 9 AS parent_id, 0.07456703722950796 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 38 AS count, 3 AS depth, 12 AS parent_id, -0.9740598890545215 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 12 AS parent_id, 1.9982735400555356 AS "Estimator") AS "Values"), 
"DT_Output_53" AS 
(SELECT "DT_node_lookup_53"."KEY" AS "KEY", "DT_node_lookup_53".node_id_2 AS node_id_2, "DT_node_data_53".node_id AS node_id, "DT_node_data_53".feature AS feature, "DT_node_data_53".threshold AS threshold, "DT_node_data_53".count AS count, "DT_node_data_53".depth AS depth, "DT_node_data_53".parent_id AS parent_id, "DT_node_data_53"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_53" LEFT OUTER JOIN "DT_node_data_53" ON "DT_node_lookup_53".node_id_2 = "DT_node_data_53".node_id), 
"GB_Tree_13_1" AS 
(SELECT "DT_Output_53"."KEY" AS "KEY", 0.0 AS "Score_0", "DT_Output_53"."Estimator" AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3" 
FROM "DT_Output_53"), 
"DT_node_lookup_54" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_20" <= -14.837259292602539) THEN CASE WHEN ("ADS"."Feature_163" <= -0.359225869178772) THEN CASE WHEN ("ADS"."Feature_298" <= 0.3196153938770294) THEN 3 ELSE 4 END ELSE 5 END ELSE CASE WHEN ("ADS"."Feature_129" <= 7.633146286010742) THEN CASE WHEN ("ADS"."Feature_417" <= 13.800678253173828) THEN 8 ELSE 9 END ELSE CASE WHEN ("ADS"."Feature_377" <= -0.9576691389083862) THEN 11 ELSE 12 END END END AS node_id_2 
FROM "FourClass_500" AS "ADS"), 
"DT_node_data_54" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 3 AS depth, 2 AS parent_id, 1.9459056447889285 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 3 AS depth, 2 AS parent_id, 1.6606318293170754 AS "Estimator" UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 2 AS depth, 1 AS parent_id, 3.065240326478839 AS "Estimator" UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 703 AS count, 3 AS depth, 7 AS parent_id, -0.10475688458412478 AS "Estimator" UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS count, 3 AS depth, 7 AS parent_id, 1.824419719728784 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 39 AS count, 3 AS depth, 10 AS parent_id, 1.2629673722246881 AS "Estimator" UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 48 AS count, 3 AS depth, 10 AS parent_id, -0.20543487172020408 AS "Estimator") AS "Values"), 
"DT_Output_54" AS 
(SELECT "DT_node_lookup_54"."KEY" AS "KEY", "DT_node_lookup_54".node_id_2 AS node_id_2, "DT_node_data_54".node_id AS node_id, "DT_node_data_54".feature AS feature, "DT_node_data_54".threshold AS threshold, "DT_node_data_54".count AS count, "DT_node_data_54".depth AS depth, "DT_node_data_54".parent_id AS parent_id, "DT_node_data_54"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_54" LEFT OUTER JOIN "DT_node_data_54" ON "DT_node_lookup_54".node_id_2 = "DT_node_data_54".node_id), 
"GB_Tree_13_2" AS 
(SELECT "DT_Output_54"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", "DT_Output_54"."Estimator" AS "Score_2", 0.0 AS "Score_3" 
FROM "DT_Output_54"), 
"DT_node_lookup_55" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_480" <= -6.869264602661133) THEN CASE WHEN ("ADS"."Feature_232" <= -1.7339394092559814) THEN CASE WHEN ("ADS"."Feature_463" <= -0.12555676698684692) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_468" <= -1.775136947631836) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_142" <= 2.9503402709960938) THEN CASE WHEN ("ADS"."Feature_343" <= 55.24702835083008) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_472" <= -1.3719067573547363) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "FourClass_500" AS "ADS"), 
"DT_node_data_55" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 2 AS parent_id, 2.3736265301783295 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 2 AS parent_id, 2.3137974457288424 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 3 AS depth, 5 AS parent_id, 2.2340632623186374 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 90 AS count, 3 AS depth, 5 AS parent_id, -0.7839936337079821 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 487 AS count, 3 AS depth, 9 AS parent_id, -0.150165972456711 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 32 AS count, 3 AS depth, 9 AS parent_id, 0.9284114046445261 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 20 AS count, 3 AS depth, 12 AS parent_id, 1.3743365627198925 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 167 AS count, 3 AS depth, 12 AS parent_id, 0.3100261392225714 AS "Estimator") AS "Values"), 
"DT_Output_55" AS 
(SELECT "DT_node_lookup_55"."KEY" AS "KEY", "DT_node_lookup_55".node_id_2 AS node_id_2, "DT_node_data_55".node_id AS node_id, "DT_node_data_55".feature AS feature, "DT_node_data_55".threshold AS threshold, "DT_node_data_55".count AS count, "DT_node_data_55".depth AS depth, "DT_node_data_55".parent_id AS parent_id, "DT_node_data_55"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_55" LEFT OUTER JOIN "DT_node_data_55" ON "DT_node_lookup_55".node_id_2 = "DT_node_data_55".node_id), 
"GB_Tree_13_3" AS 
(SELECT "DT_Output_55"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", "DT_Output_55"."Estimator" AS "Score_3" 
FROM "DT_Output_55")
 SELECT "Score_Union_CTE_esu_6"."KEY", "Score_Union_CTE_esu_6"."Score_0", "Score_Union_CTE_esu_6"."Score_1", "Score_Union_CTE_esu_6"."Score_2", "Score_Union_CTE_esu_6"."Score_3" 
FROM (SELECT "GB_Tree_12_0"."KEY" AS "KEY", "GB_Tree_12_0"."Score_0" AS "Score_0", "GB_Tree_12_0"."Score_1" AS "Score_1", "GB_Tree_12_0"."Score_2" AS "Score_2", "GB_Tree_12_0"."Score_3" AS "Score_3" 
FROM "GB_Tree_12_0" UNION ALL SELECT "GB_Tree_12_1"."KEY" AS "KEY", "GB_Tree_12_1"."Score_0" AS "Score_0", "GB_Tree_12_1"."Score_1" AS "Score_1", "GB_Tree_12_1"."Score_2" AS "Score_2", "GB_Tree_12_1"."Score_3" AS "Score_3" 
FROM "GB_Tree_12_1" UNION ALL SELECT "GB_Tree_12_2"."KEY" AS "KEY", "GB_Tree_12_2"."Score_0" AS "Score_0", "GB_Tree_12_2"."Score_1" AS "Score_1", "GB_Tree_12_2"."Score_2" AS "Score_2", "GB_Tree_12_2"."Score_3" AS "Score_3" 
FROM "GB_Tree_12_2" UNION ALL SELECT "GB_Tree_12_3"."KEY" AS "KEY", "GB_Tree_12_3"."Score_0" AS "Score_0", "GB_Tree_12_3"."Score_1" AS "Score_1", "GB_Tree_12_3"."Score_2" AS "Score_2", "GB_Tree_12_3"."Score_3" AS "Score_3" 
FROM "GB_Tree_12_3" UNION ALL SELECT "GB_Tree_13_0"."KEY" AS "KEY", "GB_Tree_13_0"."Score_0" AS "Score_0", "GB_Tree_13_0"."Score_1" AS "Score_1", "GB_Tree_13_0"."Score_2" AS "Score_2", "GB_Tree_13_0"."Score_3" AS "Score_3" 
FROM "GB_Tree_13_0" UNION ALL SELECT "GB_Tree_13_1"."KEY" AS "KEY", "GB_Tree_13_1"."Score_0" AS "Score_0", "GB_Tree_13_1"."Score_1" AS "Score_1", "GB_Tree_13_1"."Score_2" AS "Score_2", "GB_Tree_13_1"."Score_3" AS "Score_3" 
FROM "GB_Tree_13_1" UNION ALL SELECT "GB_Tree_13_2"."KEY" AS "KEY", "GB_Tree_13_2"."Score_0" AS "Score_0", "GB_Tree_13_2"."Score_1" AS "Score_1", "GB_Tree_13_2"."Score_2" AS "Score_2", "GB_Tree_13_2"."Score_3" AS "Score_3" 
FROM "GB_Tree_13_2" UNION ALL SELECT "GB_Tree_13_3"."KEY" AS "KEY", "GB_Tree_13_3"."Score_0" AS "Score_0", "GB_Tree_13_3"."Score_1" AS "Score_1", "GB_Tree_13_3"."Score_2" AS "Score_2", "GB_Tree_13_3"."Score_3" AS "Score_3" 
FROM "GB_Tree_13_3") AS "Score_Union_CTE_esu_6"), 
"Score_Union_CTE_7" AS 
(WITH "DT_node_lookup_56" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_289" <= 2.683239698410034) THEN CASE WHEN ("ADS"."Feature_25" <= 3.4378576278686523) THEN CASE WHEN ("ADS"."Feature_408" <= -1.5880703926086426) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_87" <= -1.155261754989624) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_291" <= -1.4080345630645752) THEN CASE WHEN ("ADS"."Feature_375" <= -0.5907425880432129) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_402" <= -6.584256172180176) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "FourClass_500" AS "ADS"), 
"DT_node_data_56" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 147 AS count, 3 AS depth, 2 AS parent_id, 0.030261055382676497 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 258 AS count, 3 AS depth, 2 AS parent_id, -0.6199545347638498 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 18 AS count, 3 AS depth, 5 AS parent_id, 1.4698723981469057 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 133 AS count, 3 AS depth, 5 AS parent_id, 0.15426388518209244 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 3 AS depth, 9 AS parent_id, -0.9757094081325278 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 15 AS count, 3 AS depth, 9 AS parent_id, 1.8293361823784546 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 32 AS count, 3 AS depth, 12 AS parent_id, 1.0362074144297624 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 194 AS count, 3 AS depth, 12 AS parent_id, 0.014037132272987998 AS "Estimator") AS "Values"), 
"DT_Output_56" AS 
(SELECT "DT_node_lookup_56"."KEY" AS "KEY", "DT_node_lookup_56".node_id_2 AS node_id_2, "DT_node_data_56".node_id AS node_id, "DT_node_data_56".feature AS feature, "DT_node_data_56".threshold AS threshold, "DT_node_data_56".count AS count, "DT_node_data_56".depth AS depth, "DT_node_data_56".parent_id AS parent_id, "DT_node_data_56"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_56" LEFT OUTER JOIN "DT_node_data_56" ON "DT_node_lookup_56".node_id_2 = "DT_node_data_56".node_id), 
"GB_Tree_14_0" AS 
(SELECT "DT_Output_56"."KEY" AS "KEY", "DT_Output_56"."Estimator" AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3" 
FROM "DT_Output_56"), 
"DT_node_lookup_57" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_77" <= 1.3142023086547852) THEN CASE WHEN ("ADS"."Feature_367" <= 12.875642776489258) THEN CASE WHEN ("ADS"."Feature_477" <= 0.6162202954292297) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_176" <= 0.5990281105041504) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_496" <= -0.02820984646677971) THEN CASE WHEN ("ADS"."Feature_172" <= -0.7172092795372009) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_54" <= 1.4511804580688477) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "FourClass_500" AS "ADS"), 
"DT_node_data_57" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 368 AS count, 3 AS depth, 2 AS parent_id, 0.12049460123208958 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 342 AS count, 3 AS depth, 2 AS parent_id, -0.36849011712435487 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 9 AS count, 3 AS depth, 5 AS parent_id, 1.9792675162216533 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 3 AS depth, 5 AS parent_id, -1.0065111113833112 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 8 AS count, 3 AS depth, 9 AS parent_id, -0.045899859412456466 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 26 AS count, 3 AS depth, 9 AS parent_id, 1.710964457594688 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 40 AS count, 3 AS depth, 12 AS parent_id, -0.4068610889253283 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS count, 3 AS depth, 12 AS parent_id, 2.0182570935463273 AS "Estimator") AS "Values"), 
"DT_Output_57" AS 
(SELECT "DT_node_lookup_57"."KEY" AS "KEY", "DT_node_lookup_57".node_id_2 AS node_id_2, "DT_node_data_57".node_id AS node_id, "DT_node_data_57".feature AS feature, "DT_node_data_57".threshold AS threshold, "DT_node_data_57".count AS count, "DT_node_data_57".depth AS depth, "DT_node_data_57".parent_id AS parent_id, "DT_node_data_57"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_57" LEFT OUTER JOIN "DT_node_data_57" ON "DT_node_lookup_57".node_id_2 = "DT_node_data_57".node_id), 
"GB_Tree_14_1" AS 
(SELECT "DT_Output_57"."KEY" AS "KEY", 0.0 AS "Score_0", "DT_Output_57"."Estimator" AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3" 
FROM "DT_Output_57"), 
"DT_node_lookup_58" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_497" <= -3.5153989791870117) THEN CASE WHEN ("ADS"."Feature_158" <= 1.5272409915924072) THEN CASE WHEN ("ADS"."Feature_155" <= 0.948757529258728) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_278" <= 0.8482252359390259) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_412" <= 5.903281211853027) THEN CASE WHEN ("ADS"."Feature_289" <= -15.990592002868652) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_259" <= -0.3103540539741516) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "FourClass_500" AS "ADS"), 
"DT_node_data_58" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 189 AS count, 3 AS depth, 2 AS parent_id, 0.020157204519504403 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 36 AS count, 3 AS depth, 2 AS parent_id, 1.023025794611927 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 12 AS count, 3 AS depth, 5 AS parent_id, 1.9199347739271915 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 3 AS depth, 5 AS parent_id, -0.8909915392426456 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS count, 3 AS depth, 9 AS parent_id, 2.1266426461420767 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 467 AS count, 3 AS depth, 9 AS parent_id, -0.2708933087782102 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 30 AS count, 3 AS depth, 12 AS parent_id, 1.1902298818987584 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 59 AS count, 3 AS depth, 12 AS parent_id, -0.04872331349484224 AS "Estimator") AS "Values"), 
"DT_Output_58" AS 
(SELECT "DT_node_lookup_58"."KEY" AS "KEY", "DT_node_lookup_58".node_id_2 AS node_id_2, "DT_node_data_58".node_id AS node_id, "DT_node_data_58".feature AS feature, "DT_node_data_58".threshold AS threshold, "DT_node_data_58".count AS count, "DT_node_data_58".depth AS depth, "DT_node_data_58".parent_id AS parent_id, "DT_node_data_58"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_58" LEFT OUTER JOIN "DT_node_data_58" ON "DT_node_lookup_58".node_id_2 = "DT_node_data_58".node_id), 
"GB_Tree_14_2" AS 
(SELECT "DT_Output_58"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", "DT_Output_58"."Estimator" AS "Score_2", 0.0 AS "Score_3" 
FROM "DT_Output_58"), 
"DT_node_lookup_59" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_308" <= 4.593985080718994) THEN CASE WHEN ("ADS"."Feature_264" <= -1.5400607585906982) THEN CASE WHEN ("ADS"."Feature_480" <= 2.6134912967681885) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_25" <= 1.1342730522155762) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_147" <= -1.362708330154419) THEN CASE WHEN ("ADS"."Feature_243" <= 0.895569384098053) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_393" <= 1.8608849048614502) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "FourClass_500" AS "ADS"), 
"DT_node_data_59" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 171 AS count, 3 AS depth, 2 AS parent_id, 0.12058359530624094 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 90 AS count, 3 AS depth, 2 AS parent_id, 0.9574347056604272 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 206 AS count, 3 AS depth, 5 AS parent_id, 0.21176748571847348 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 149 AS count, 3 AS depth, 5 AS parent_id, -0.6420396929288016 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 8 AS count, 3 AS depth, 9 AS parent_id, 1.7392039710147784 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 6 AS count, 3 AS depth, 9 AS parent_id, -0.9535336507926697 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 166 AS count, 3 AS depth, 12 AS parent_id, -0.599999182036002 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS count, 3 AS depth, 12 AS parent_id, 1.7031288996057736 AS "Estimator") AS "Values"), 
"DT_Output_59" AS 
(SELECT "DT_node_lookup_59"."KEY" AS "KEY", "DT_node_lookup_59".node_id_2 AS node_id_2, "DT_node_data_59".node_id AS node_id, "DT_node_data_59".feature AS feature, "DT_node_data_59".threshold AS threshold, "DT_node_data_59".count AS count, "DT_node_data_59".depth AS depth, "DT_node_data_59".parent_id AS parent_id, "DT_node_data_59"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_59" LEFT OUTER JOIN "DT_node_data_59" ON "DT_node_lookup_59".node_id_2 = "DT_node_data_59".node_id), 
"GB_Tree_14_3" AS 
(SELECT "DT_Output_59"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", "DT_Output_59"."Estimator" AS "Score_3" 
FROM "DT_Output_59"), 
"DT_node_lookup_60" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_470" <= -0.5528146624565125) THEN CASE WHEN ("ADS"."Feature_329" <= -0.2071540355682373) THEN CASE WHEN ("ADS"."Feature_86" <= 0.18618975579738617) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_228" <= -5.08425235748291) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_434" <= 2.431018352508545) THEN CASE WHEN ("ADS"."Feature_55" <= -2.4865622520446777) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_28" <= 0.6916792392730713) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "FourClass_500" AS "ADS"), 
"DT_node_data_60" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 52 AS count, 3 AS depth, 2 AS parent_id, -0.7694375236416987 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 52 AS count, 3 AS depth, 2 AS parent_id, 0.2608134450896363 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 26 AS count, 3 AS depth, 5 AS parent_id, 1.5555331645023653 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 107 AS count, 3 AS depth, 5 AS parent_id, 0.39044527539502655 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS count, 3 AS depth, 9 AS parent_id, 2.1219108750992786 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 553 AS count, 3 AS depth, 9 AS parent_id, -0.20409502373134006 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS count, 3 AS depth, 12 AS parent_id, 2.5618631960211076 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 12 AS parent_id, -0.9513750497352079 AS "Estimator") AS "Values"), 
"DT_Output_60" AS 
(SELECT "DT_node_lookup_60"."KEY" AS "KEY", "DT_node_lookup_60".node_id_2 AS node_id_2, "DT_node_data_60".node_id AS node_id, "DT_node_data_60".feature AS feature, "DT_node_data_60".threshold AS threshold, "DT_node_data_60".count AS count, "DT_node_data_60".depth AS depth, "DT_node_data_60".parent_id AS parent_id, "DT_node_data_60"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_60" LEFT OUTER JOIN "DT_node_data_60" ON "DT_node_lookup_60".node_id_2 = "DT_node_data_60".node_id), 
"GB_Tree_15_0" AS 
(SELECT "DT_Output_60"."KEY" AS "KEY", "DT_Output_60"."Estimator" AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3" 
FROM "DT_Output_60"), 
"DT_node_lookup_61" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_42" <= 4.552486419677734) THEN CASE WHEN ("ADS"."Feature_456" <= 1.2209151983261108) THEN CASE WHEN ("ADS"."Feature_88" <= -1.4491331577301025) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_109" <= 4.93331241607666) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_164" <= 1.8912267684936523) THEN CASE WHEN ("ADS"."Feature_274" <= -2.250776767730713) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_66" <= -0.9153876304626465) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "FourClass_500" AS "ADS"), 
"DT_node_data_61" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 22 AS count, 3 AS depth, 2 AS parent_id, 0.992784647803224 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 351 AS count, 3 AS depth, 2 AS parent_id, -0.20976921658225925 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 221 AS count, 3 AS depth, 5 AS parent_id, 0.5510351964182272 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 53 AS count, 3 AS depth, 5 AS parent_id, -0.4807304953306492 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 3 AS depth, 9 AS parent_id, 2.228004991264757 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 143 AS count, 3 AS depth, 9 AS parent_id, -0.6148577422118715 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 3 AS depth, 12 AS parent_id, -0.8725264685257911 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 6 AS count, 3 AS depth, 12 AS parent_id, 1.5637281094390785 AS "Estimator") AS "Values"), 
"DT_Output_61" AS 
(SELECT "DT_node_lookup_61"."KEY" AS "KEY", "DT_node_lookup_61".node_id_2 AS node_id_2, "DT_node_data_61".node_id AS node_id, "DT_node_data_61".feature AS feature, "DT_node_data_61".threshold AS threshold, "DT_node_data_61".count AS count, "DT_node_data_61".depth AS depth, "DT_node_data_61".parent_id AS parent_id, "DT_node_data_61"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_61" LEFT OUTER JOIN "DT_node_data_61" ON "DT_node_lookup_61".node_id_2 = "DT_node_data_61".node_id), 
"GB_Tree_15_1" AS 
(SELECT "DT_Output_61"."KEY" AS "KEY", 0.0 AS "Score_0", "DT_Output_61"."Estimator" AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3" 
FROM "DT_Output_61"), 
"DT_node_lookup_62" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_271" <= 3.235647201538086) THEN CASE WHEN ("ADS"."Feature_497" <= -8.586446762084961) THEN CASE WHEN ("ADS"."Feature_25" <= -3.9930520057678223) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_483" <= -6.5534348487854) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_427" <= -6.348844528198242) THEN CASE WHEN ("ADS"."Feature_402" <= -5.598583698272705) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_3" <= 7.302115440368652) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "FourClass_500" AS "ADS"), 
"DT_node_data_62" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 18 AS count, 3 AS depth, 2 AS parent_id, 1.484774831169611 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 33 AS count, 3 AS depth, 2 AS parent_id, 0.10258817396147259 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 79 AS count, 3 AS depth, 5 AS parent_id, 0.37988075740302524 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 480 AS count, 3 AS depth, 5 AS parent_id, -0.28445907562415185 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS count, 3 AS depth, 9 AS parent_id, -0.9028083833943256 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 17 AS count, 3 AS depth, 9 AS parent_id, 1.7790204006075654 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 151 AS count, 3 AS depth, 12 AS parent_id, 0.020629905454555193 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 18 AS count, 3 AS depth, 12 AS parent_id, 1.3767037157612803 AS "Estimator") AS "Values"), 
"DT_Output_62" AS 
(SELECT "DT_node_lookup_62"."KEY" AS "KEY", "DT_node_lookup_62".node_id_2 AS node_id_2, "DT_node_data_62".node_id AS node_id, "DT_node_data_62".feature AS feature, "DT_node_data_62".threshold AS threshold, "DT_node_data_62".count AS count, "DT_node_data_62".depth AS depth, "DT_node_data_62".parent_id AS parent_id, "DT_node_data_62"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_62" LEFT OUTER JOIN "DT_node_data_62" ON "DT_node_lookup_62".node_id_2 = "DT_node_data_62".node_id), 
"GB_Tree_15_2" AS 
(SELECT "DT_Output_62"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", "DT_Output_62"."Estimator" AS "Score_2", 0.0 AS "Score_3" 
FROM "DT_Output_62"), 
"DT_node_lookup_63" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_183" <= -11.473261833190918) THEN CASE WHEN ("ADS"."Feature_348" <= -0.09331661462783813) THEN CASE WHEN ("ADS"."Feature_456" <= -2.123677968978882) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_458" <= 0.3293536901473999) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_252" <= -5.810490131378174) THEN CASE WHEN ("ADS"."Feature_338" <= 5.004520416259766) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_358" <= 2.041948080062866) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "FourClass_500" AS "ADS"), 
"DT_node_data_63" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS count, 3 AS depth, 2 AS parent_id, 1.3899029519436241 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 8 AS count, 3 AS depth, 2 AS parent_id, 1.7586548272209361 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 11 AS count, 3 AS depth, 5 AS parent_id, -0.9307950156157774 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS count, 3 AS depth, 5 AS parent_id, 1.404927299757742 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 111 AS count, 3 AS depth, 9 AS parent_id, 0.21047262407853548 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 16 AS count, 3 AS depth, 9 AS parent_id, 1.5693775875814373 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 628 AS count, 3 AS depth, 12 AS parent_id, -0.17590863925943365 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 16 AS count, 3 AS depth, 12 AS parent_id, 1.2513778689396349 AS "Estimator") AS "Values"), 
"DT_Output_63" AS 
(SELECT "DT_node_lookup_63"."KEY" AS "KEY", "DT_node_lookup_63".node_id_2 AS node_id_2, "DT_node_data_63".node_id AS node_id, "DT_node_data_63".feature AS feature, "DT_node_data_63".threshold AS threshold, "DT_node_data_63".count AS count, "DT_node_data_63".depth AS depth, "DT_node_data_63".parent_id AS parent_id, "DT_node_data_63"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_63" LEFT OUTER JOIN "DT_node_data_63" ON "DT_node_lookup_63".node_id_2 = "DT_node_data_63".node_id), 
"GB_Tree_15_3" AS 
(SELECT "DT_Output_63"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", "DT_Output_63"."Estimator" AS "Score_3" 
FROM "DT_Output_63")
 SELECT "Score_Union_CTE_esu_7"."KEY", "Score_Union_CTE_esu_7"."Score_0", "Score_Union_CTE_esu_7"."Score_1", "Score_Union_CTE_esu_7"."Score_2", "Score_Union_CTE_esu_7"."Score_3" 
FROM (SELECT "GB_Tree_14_0"."KEY" AS "KEY", "GB_Tree_14_0"."Score_0" AS "Score_0", "GB_Tree_14_0"."Score_1" AS "Score_1", "GB_Tree_14_0"."Score_2" AS "Score_2", "GB_Tree_14_0"."Score_3" AS "Score_3" 
FROM "GB_Tree_14_0" UNION ALL SELECT "GB_Tree_14_1"."KEY" AS "KEY", "GB_Tree_14_1"."Score_0" AS "Score_0", "GB_Tree_14_1"."Score_1" AS "Score_1", "GB_Tree_14_1"."Score_2" AS "Score_2", "GB_Tree_14_1"."Score_3" AS "Score_3" 
FROM "GB_Tree_14_1" UNION ALL SELECT "GB_Tree_14_2"."KEY" AS "KEY", "GB_Tree_14_2"."Score_0" AS "Score_0", "GB_Tree_14_2"."Score_1" AS "Score_1", "GB_Tree_14_2"."Score_2" AS "Score_2", "GB_Tree_14_2"."Score_3" AS "Score_3" 
FROM "GB_Tree_14_2" UNION ALL SELECT "GB_Tree_14_3"."KEY" AS "KEY", "GB_Tree_14_3"."Score_0" AS "Score_0", "GB_Tree_14_3"."Score_1" AS "Score_1", "GB_Tree_14_3"."Score_2" AS "Score_2", "GB_Tree_14_3"."Score_3" AS "Score_3" 
FROM "GB_Tree_14_3" UNION ALL SELECT "GB_Tree_15_0"."KEY" AS "KEY", "GB_Tree_15_0"."Score_0" AS "Score_0", "GB_Tree_15_0"."Score_1" AS "Score_1", "GB_Tree_15_0"."Score_2" AS "Score_2", "GB_Tree_15_0"."Score_3" AS "Score_3" 
FROM "GB_Tree_15_0" UNION ALL SELECT "GB_Tree_15_1"."KEY" AS "KEY", "GB_Tree_15_1"."Score_0" AS "Score_0", "GB_Tree_15_1"."Score_1" AS "Score_1", "GB_Tree_15_1"."Score_2" AS "Score_2", "GB_Tree_15_1"."Score_3" AS "Score_3" 
FROM "GB_Tree_15_1" UNION ALL SELECT "GB_Tree_15_2"."KEY" AS "KEY", "GB_Tree_15_2"."Score_0" AS "Score_0", "GB_Tree_15_2"."Score_1" AS "Score_1", "GB_Tree_15_2"."Score_2" AS "Score_2", "GB_Tree_15_2"."Score_3" AS "Score_3" 
FROM "GB_Tree_15_2" UNION ALL SELECT "GB_Tree_15_3"."KEY" AS "KEY", "GB_Tree_15_3"."Score_0" AS "Score_0", "GB_Tree_15_3"."Score_1" AS "Score_1", "GB_Tree_15_3"."Score_2" AS "Score_2", "GB_Tree_15_3"."Score_3" AS "Score_3" 
FROM "GB_Tree_15_3") AS "Score_Union_CTE_esu_7"), 
"Score_Union_CTE_8" AS 
(WITH "DT_node_lookup_64" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_148" <= -1.2121145725250244) THEN CASE WHEN ("ADS"."Feature_343" <= -72.80506134033203) THEN CASE WHEN ("ADS"."Feature_195" <= 0.20227870345115662) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_251" <= 1.4499094486236572) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_471" <= 1.0111124515533447) THEN CASE WHEN ("ADS"."Feature_18" <= 0.251171737909317) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_110" <= 1.8147680759429932) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "FourClass_500" AS "ADS"), 
"DT_node_data_64" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 3 AS depth, 2 AS parent_id, 1.5669737212272679 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 3 AS depth, 2 AS parent_id, 2.1428029551115153 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 309 AS count, 3 AS depth, 5 AS parent_id, -0.4165393332501453 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 24 AS count, 3 AS depth, 5 AS parent_id, 0.7455487800366951 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 192 AS count, 3 AS depth, 9 AS parent_id, -0.028833849452058788 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 200 AS count, 3 AS depth, 9 AS parent_id, 0.5531785478215608 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 68 AS count, 3 AS depth, 12 AS parent_id, -0.7543266902567752 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 3 AS depth, 12 AS parent_id, 2.063071971705992 AS "Estimator") AS "Values"), 
"DT_Output_64" AS 
(SELECT "DT_node_lookup_64"."KEY" AS "KEY", "DT_node_lookup_64".node_id_2 AS node_id_2, "DT_node_data_64".node_id AS node_id, "DT_node_data_64".feature AS feature, "DT_node_data_64".threshold AS threshold, "DT_node_data_64".count AS count, "DT_node_data_64".depth AS depth, "DT_node_data_64".parent_id AS parent_id, "DT_node_data_64"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_64" LEFT OUTER JOIN "DT_node_data_64" ON "DT_node_lookup_64".node_id_2 = "DT_node_data_64".node_id), 
"GB_Tree_16_0" AS 
(SELECT "DT_Output_64"."KEY" AS "KEY", "DT_Output_64"."Estimator" AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3" 
FROM "DT_Output_64"), 
"DT_node_lookup_65" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_448" <= -2.3602428436279297) THEN CASE WHEN ("ADS"."Feature_218" <= -2.6101486682891846) THEN CASE WHEN ("ADS"."Feature_28" <= 0.35544553399086) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_212" <= -0.8748109340667725) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_164" <= 1.8603899478912354) THEN CASE WHEN ("ADS"."Feature_191" <= 11.24403190612793) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_40" <= 0.1968371868133545) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "FourClass_500" AS "ADS"), 
"DT_node_data_65" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 2 AS parent_id, 1.5876361926217755 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 2 AS parent_id, 1.6114192166672676 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 5 AS parent_id, 2.050741804818662 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 3 AS depth, 5 AS parent_id, 1.8383878036047072 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 741 AS count, 3 AS depth, 9 AS parent_id, -0.09641375339809655 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 26 AS count, 3 AS depth, 9 AS parent_id, 0.9185902523320667 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 22 AS count, 3 AS depth, 12 AS parent_id, 1.206236060154349 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 6 AS count, 3 AS depth, 12 AS parent_id, -0.9337592130424824 AS "Estimator") AS "Values"), 
"DT_Output_65" AS 
(SELECT "DT_node_lookup_65"."KEY" AS "KEY", "DT_node_lookup_65".node_id_2 AS node_id_2, "DT_node_data_65".node_id AS node_id, "DT_node_data_65".feature AS feature, "DT_node_data_65".threshold AS threshold, "DT_node_data_65".count AS count, "DT_node_data_65".depth AS depth, "DT_node_data_65".parent_id AS parent_id, "DT_node_data_65"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_65" LEFT OUTER JOIN "DT_node_data_65" ON "DT_node_lookup_65".node_id_2 = "DT_node_data_65".node_id), 
"GB_Tree_16_1" AS 
(SELECT "DT_Output_65"."KEY" AS "KEY", 0.0 AS "Score_0", "DT_Output_65"."Estimator" AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3" 
FROM "DT_Output_65"), 
"DT_node_lookup_66" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_124" <= -2.171804428100586) THEN CASE WHEN ("ADS"."Feature_164" <= 0.6191427111625671) THEN CASE WHEN ("ADS"."Feature_115" <= -0.05898652970790863) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_304" <= -0.18700754642486572) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_456" <= -3.638071060180664) THEN CASE WHEN ("ADS"."Feature_59" <= -1.2894439697265625) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_35" <= 1.5998024940490723) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "FourClass_500" AS "ADS"), 
"DT_node_data_66" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 3 AS depth, 2 AS parent_id, 2.4485762132951816 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS count, 3 AS depth, 2 AS parent_id, 1.5656219028197202 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 5 AS parent_id, -0.914140090160185 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 5 AS parent_id, -0.8493764594196253 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 20 AS count, 3 AS depth, 9 AS parent_id, 1.3175101006201075 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 193 AS count, 3 AS depth, 9 AS parent_id, 0.17680163799821655 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 545 AS count, 3 AS depth, 12 AS parent_id, -0.21514025559332192 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 33 AS count, 3 AS depth, 12 AS parent_id, 0.8849987738598322 AS "Estimator") AS "Values"), 
"DT_Output_66" AS 
(SELECT "DT_node_lookup_66"."KEY" AS "KEY", "DT_node_lookup_66".node_id_2 AS node_id_2, "DT_node_data_66".node_id AS node_id, "DT_node_data_66".feature AS feature, "DT_node_data_66".threshold AS threshold, "DT_node_data_66".count AS count, "DT_node_data_66".depth AS depth, "DT_node_data_66".parent_id AS parent_id, "DT_node_data_66"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_66" LEFT OUTER JOIN "DT_node_data_66" ON "DT_node_lookup_66".node_id_2 = "DT_node_data_66".node_id), 
"GB_Tree_16_2" AS 
(SELECT "DT_Output_66"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", "DT_Output_66"."Estimator" AS "Score_2", 0.0 AS "Score_3" 
FROM "DT_Output_66"), 
"DT_node_lookup_67" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_288" <= 3.3122336864471436) THEN CASE WHEN ("ADS"."Feature_18" <= 3.1486763954162598) THEN CASE WHEN ("ADS"."Feature_343" <= 39.07012176513672) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_349" <= 0.34801745414733887) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_260" <= -2.2321949005126953) THEN CASE WHEN ("ADS"."Feature_139" <= -0.5001795887947083) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_461" <= 11.556659698486328) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "FourClass_500" AS "ADS"), 
"DT_node_data_67" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 313 AS count, 3 AS depth, 2 AS parent_id, -0.2717699072245823 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 67 AS count, 3 AS depth, 2 AS parent_id, 0.7432323118834674 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 124 AS count, 3 AS depth, 5 AS parent_id, 0.12893965454996517 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 69 AS count, 3 AS depth, 5 AS parent_id, 0.969406262582379 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 9 AS parent_id, 2.725331143985266 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 9 AS parent_id, 2.865574602162579 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 222 AS count, 3 AS depth, 12 AS parent_id, -0.40994160150938674 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 3 AS depth, 12 AS parent_id, 1.7797317176318415 AS "Estimator") AS "Values"), 
"DT_Output_67" AS 
(SELECT "DT_node_lookup_67"."KEY" AS "KEY", "DT_node_lookup_67".node_id_2 AS node_id_2, "DT_node_data_67".node_id AS node_id, "DT_node_data_67".feature AS feature, "DT_node_data_67".threshold AS threshold, "DT_node_data_67".count AS count, "DT_node_data_67".depth AS depth, "DT_node_data_67".parent_id AS parent_id, "DT_node_data_67"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_67" LEFT OUTER JOIN "DT_node_data_67" ON "DT_node_lookup_67".node_id_2 = "DT_node_data_67".node_id), 
"GB_Tree_16_3" AS 
(SELECT "DT_Output_67"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", "DT_Output_67"."Estimator" AS "Score_3" 
FROM "DT_Output_67"), 
"DT_node_lookup_68" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_100" <= 4.8956427574157715) THEN CASE WHEN ("ADS"."Feature_288" <= 3.1548192501068115) THEN CASE WHEN ("ADS"."Feature_228" <= -5.7497663497924805) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_377" <= -3.5701189041137695) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_374" <= 5.576936721801758) THEN CASE WHEN ("ADS"."Feature_387" <= -2.418145179748535) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_256" <= 0.01179058849811554) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "FourClass_500" AS "ADS"), 
"DT_node_data_68" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 75 AS count, 3 AS depth, 2 AS parent_id, 0.5180716195330232 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 374 AS count, 3 AS depth, 2 AS parent_id, -0.20602644066317366 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 49 AS count, 3 AS depth, 5 AS parent_id, -0.3165901264694333 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 130 AS count, 3 AS depth, 5 AS parent_id, 0.7137106965059348 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 3 AS depth, 9 AS parent_id, 2.1222789471201255 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 145 AS count, 3 AS depth, 9 AS parent_id, -0.7064322606508981 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 16 AS count, 3 AS depth, 12 AS parent_id, -0.227322655525923 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 9 AS count, 3 AS depth, 12 AS parent_id, 1.5034150722251325 AS "Estimator") AS "Values"), 
"DT_Output_68" AS 
(SELECT "DT_node_lookup_68"."KEY" AS "KEY", "DT_node_lookup_68".node_id_2 AS node_id_2, "DT_node_data_68".node_id AS node_id, "DT_node_data_68".feature AS feature, "DT_node_data_68".threshold AS threshold, "DT_node_data_68".count AS count, "DT_node_data_68".depth AS depth, "DT_node_data_68".parent_id AS parent_id, "DT_node_data_68"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_68" LEFT OUTER JOIN "DT_node_data_68" ON "DT_node_lookup_68".node_id_2 = "DT_node_data_68".node_id), 
"GB_Tree_17_0" AS 
(SELECT "DT_Output_68"."KEY" AS "KEY", "DT_Output_68"."Estimator" AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3" 
FROM "DT_Output_68"), 
"DT_node_lookup_69" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_135" <= -1.9373071193695068) THEN CASE WHEN ("ADS"."Feature_266" <= 13.903450012207031) THEN CASE WHEN ("ADS"."Feature_456" <= 5.505250930786133) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_429" <= 0.31107771396636963) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_208" <= 3.5956954956054688) THEN CASE WHEN ("ADS"."Feature_179" <= -4.40418815612793) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_364" <= -1.777662754058838) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "FourClass_500" AS "ADS"), 
"DT_node_data_69" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 232 AS count, 3 AS depth, 2 AS parent_id, -0.5094306480511693 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 46 AS count, 3 AS depth, 2 AS parent_id, 0.39429417152985463 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS count, 3 AS depth, 5 AS parent_id, 1.7250993321993204 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 5 AS parent_id, -0.9228541413139377 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 100 AS count, 3 AS depth, 9 AS parent_id, 0.769274273921891 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 272 AS count, 3 AS depth, 9 AS parent_id, 0.10637813705332183 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS count, 3 AS depth, 12 AS parent_id, 1.5008222018150923 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 139 AS count, 3 AS depth, 12 AS parent_id, -0.43620497082840504 AS "Estimator") AS "Values"), 
"DT_Output_69" AS 
(SELECT "DT_node_lookup_69"."KEY" AS "KEY", "DT_node_lookup_69".node_id_2 AS node_id_2, "DT_node_data_69".node_id AS node_id, "DT_node_data_69".feature AS feature, "DT_node_data_69".threshold AS threshold, "DT_node_data_69".count AS count, "DT_node_data_69".depth AS depth, "DT_node_data_69".parent_id AS parent_id, "DT_node_data_69"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_69" LEFT OUTER JOIN "DT_node_data_69" ON "DT_node_lookup_69".node_id_2 = "DT_node_data_69".node_id), 
"GB_Tree_17_1" AS 
(SELECT "DT_Output_69"."KEY" AS "KEY", 0.0 AS "Score_0", "DT_Output_69"."Estimator" AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3" 
FROM "DT_Output_69"), 
"DT_node_lookup_70" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_446" <= 0.7151069641113281) THEN CASE WHEN ("ADS"."Feature_338" <= 3.1622743606567383) THEN CASE WHEN ("ADS"."Feature_313" <= 1.809165358543396) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_480" <= -6.544022560119629) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_331" <= 10.22665786743164) THEN CASE WHEN ("ADS"."Feature_373" <= 2.812403678894043) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_477" <= 5.866781234741211) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "FourClass_500" AS "ADS"), 
"DT_node_data_70" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 402 AS count, 3 AS depth, 2 AS parent_id, -0.10785571774209438 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 14 AS count, 3 AS depth, 2 AS parent_id, 1.2691455776122171 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 23 AS count, 3 AS depth, 5 AS parent_id, 1.4751032169180869 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 162 AS count, 3 AS depth, 5 AS parent_id, 0.27724789711381553 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 186 AS count, 3 AS depth, 9 AS parent_id, -0.5006110141648417 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 3 AS depth, 9 AS parent_id, 2.0851521930212513 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 6 AS count, 3 AS depth, 12 AS parent_id, 1.90498631892748 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS count, 3 AS depth, 12 AS parent_id, -0.9275399234369309 AS "Estimator") AS "Values"), 
"DT_Output_70" AS 
(SELECT "DT_node_lookup_70"."KEY" AS "KEY", "DT_node_lookup_70".node_id_2 AS node_id_2, "DT_node_data_70".node_id AS node_id, "DT_node_data_70".feature AS feature, "DT_node_data_70".threshold AS threshold, "DT_node_data_70".count AS count, "DT_node_data_70".depth AS depth, "DT_node_data_70".parent_id AS parent_id, "DT_node_data_70"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_70" LEFT OUTER JOIN "DT_node_data_70" ON "DT_node_lookup_70".node_id_2 = "DT_node_data_70".node_id), 
"GB_Tree_17_2" AS 
(SELECT "DT_Output_70"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", "DT_Output_70"."Estimator" AS "Score_2", 0.0 AS "Score_3" 
FROM "DT_Output_70"), 
"DT_node_lookup_71" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_367" <= 0.5642774701118469) THEN CASE WHEN ("ADS"."Feature_18" <= 4.620423793792725) THEN CASE WHEN ("ADS"."Feature_343" <= 12.9340238571167) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_457" <= -3.0311336517333984) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_283" <= -10.674118041992188) THEN CASE WHEN ("ADS"."Feature_405" <= 1.251478910446167) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_302" <= -2.224836587905884) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "FourClass_500" AS "ADS"), 
"DT_node_data_71" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 226 AS count, 3 AS depth, 2 AS parent_id, -0.22700355496050556 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 98 AS count, 3 AS depth, 2 AS parent_id, 0.465441440078164 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 21 AS count, 3 AS depth, 5 AS parent_id, -0.4799975121144392 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 69 AS count, 3 AS depth, 5 AS parent_id, 1.0036719867473558 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 9 AS count, 3 AS depth, 9 AS parent_id, 1.5934465946096903 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 3 AS depth, 9 AS parent_id, -0.9975759780948931 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS count, 3 AS depth, 12 AS parent_id, 1.7187233838176381 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 369 AS count, 3 AS depth, 12 AS parent_id, -0.30226887719936957 AS "Estimator") AS "Values"), 
"DT_Output_71" AS 
(SELECT "DT_node_lookup_71"."KEY" AS "KEY", "DT_node_lookup_71".node_id_2 AS node_id_2, "DT_node_data_71".node_id AS node_id, "DT_node_data_71".feature AS feature, "DT_node_data_71".threshold AS threshold, "DT_node_data_71".count AS count, "DT_node_data_71".depth AS depth, "DT_node_data_71".parent_id AS parent_id, "DT_node_data_71"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_71" LEFT OUTER JOIN "DT_node_data_71" ON "DT_node_lookup_71".node_id_2 = "DT_node_data_71".node_id), 
"GB_Tree_17_3" AS 
(SELECT "DT_Output_71"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", "DT_Output_71"."Estimator" AS "Score_3" 
FROM "DT_Output_71")
 SELECT "Score_Union_CTE_esu_8"."KEY", "Score_Union_CTE_esu_8"."Score_0", "Score_Union_CTE_esu_8"."Score_1", "Score_Union_CTE_esu_8"."Score_2", "Score_Union_CTE_esu_8"."Score_3" 
FROM (SELECT "GB_Tree_16_0"."KEY" AS "KEY", "GB_Tree_16_0"."Score_0" AS "Score_0", "GB_Tree_16_0"."Score_1" AS "Score_1", "GB_Tree_16_0"."Score_2" AS "Score_2", "GB_Tree_16_0"."Score_3" AS "Score_3" 
FROM "GB_Tree_16_0" UNION ALL SELECT "GB_Tree_16_1"."KEY" AS "KEY", "GB_Tree_16_1"."Score_0" AS "Score_0", "GB_Tree_16_1"."Score_1" AS "Score_1", "GB_Tree_16_1"."Score_2" AS "Score_2", "GB_Tree_16_1"."Score_3" AS "Score_3" 
FROM "GB_Tree_16_1" UNION ALL SELECT "GB_Tree_16_2"."KEY" AS "KEY", "GB_Tree_16_2"."Score_0" AS "Score_0", "GB_Tree_16_2"."Score_1" AS "Score_1", "GB_Tree_16_2"."Score_2" AS "Score_2", "GB_Tree_16_2"."Score_3" AS "Score_3" 
FROM "GB_Tree_16_2" UNION ALL SELECT "GB_Tree_16_3"."KEY" AS "KEY", "GB_Tree_16_3"."Score_0" AS "Score_0", "GB_Tree_16_3"."Score_1" AS "Score_1", "GB_Tree_16_3"."Score_2" AS "Score_2", "GB_Tree_16_3"."Score_3" AS "Score_3" 
FROM "GB_Tree_16_3" UNION ALL SELECT "GB_Tree_17_0"."KEY" AS "KEY", "GB_Tree_17_0"."Score_0" AS "Score_0", "GB_Tree_17_0"."Score_1" AS "Score_1", "GB_Tree_17_0"."Score_2" AS "Score_2", "GB_Tree_17_0"."Score_3" AS "Score_3" 
FROM "GB_Tree_17_0" UNION ALL SELECT "GB_Tree_17_1"."KEY" AS "KEY", "GB_Tree_17_1"."Score_0" AS "Score_0", "GB_Tree_17_1"."Score_1" AS "Score_1", "GB_Tree_17_1"."Score_2" AS "Score_2", "GB_Tree_17_1"."Score_3" AS "Score_3" 
FROM "GB_Tree_17_1" UNION ALL SELECT "GB_Tree_17_2"."KEY" AS "KEY", "GB_Tree_17_2"."Score_0" AS "Score_0", "GB_Tree_17_2"."Score_1" AS "Score_1", "GB_Tree_17_2"."Score_2" AS "Score_2", "GB_Tree_17_2"."Score_3" AS "Score_3" 
FROM "GB_Tree_17_2" UNION ALL SELECT "GB_Tree_17_3"."KEY" AS "KEY", "GB_Tree_17_3"."Score_0" AS "Score_0", "GB_Tree_17_3"."Score_1" AS "Score_1", "GB_Tree_17_3"."Score_2" AS "Score_2", "GB_Tree_17_3"."Score_3" AS "Score_3" 
FROM "GB_Tree_17_3") AS "Score_Union_CTE_esu_8"), 
"Score_Union_CTE_9" AS 
(WITH "DT_node_lookup_72" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_106" <= -5.438448905944824) THEN CASE WHEN ("ADS"."Feature_342" <= -2.2330899238586426) THEN CASE WHEN ("ADS"."Feature_30" <= 0.21352821588516235) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_470" <= -1.4761550426483154) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_300" <= 1.016282081604004) THEN CASE WHEN ("ADS"."Feature_67" <= 0.9514331817626953) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_210" <= 3.9574124813079834) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "FourClass_500" AS "ADS"), 
"DT_node_data_72" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 3 AS depth, 2 AS parent_id, 1.7917430516282984 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 2 AS parent_id, 2.945845778327718 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 7 AS count, 3 AS depth, 5 AS parent_id, 1.1211495581165323 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 132 AS count, 3 AS depth, 5 AS parent_id, -0.7448288353386854 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 461 AS count, 3 AS depth, 9 AS parent_id, -0.1566226250431589 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 88 AS count, 3 AS depth, 9 AS parent_id, 0.585100155662933 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 80 AS count, 3 AS depth, 12 AS parent_id, 0.8662048447137921 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 29 AS count, 3 AS depth, 12 AS parent_id, -0.4628575039839236 AS "Estimator") AS "Values"), 
"DT_Output_72" AS 
(SELECT "DT_node_lookup_72"."KEY" AS "KEY", "DT_node_lookup_72".node_id_2 AS node_id_2, "DT_node_data_72".node_id AS node_id, "DT_node_data_72".feature AS feature, "DT_node_data_72".threshold AS threshold, "DT_node_data_72".count AS count, "DT_node_data_72".depth AS depth, "DT_node_data_72".parent_id AS parent_id, "DT_node_data_72"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_72" LEFT OUTER JOIN "DT_node_data_72" ON "DT_node_lookup_72".node_id_2 = "DT_node_data_72".node_id), 
"GB_Tree_18_0" AS 
(SELECT "DT_Output_72"."KEY" AS "KEY", "DT_Output_72"."Estimator" AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3" 
FROM "DT_Output_72"), 
"DT_node_lookup_73" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_495" <= -0.9832198619842529) THEN CASE WHEN ("ADS"."Feature_129" <= -8.461645126342773) THEN CASE WHEN ("ADS"."Feature_372" <= 0.36050039529800415) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_301" <= 14.024690628051758) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_381" <= 0.07307092845439911) THEN CASE WHEN ("ADS"."Feature_58" <= -1.7081456184387207) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_280" <= -5.592640399932861) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "FourClass_500" AS "ADS"), 
"DT_node_data_73" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 10 AS count, 3 AS depth, 2 AS parent_id, 1.5174364891355008 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 12 AS count, 3 AS depth, 2 AS parent_id, -0.25317893740338043 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 323 AS count, 3 AS depth, 5 AS parent_id, -0.3492610724249368 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 3 AS depth, 5 AS parent_id, 1.926031123236689 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 7 AS count, 3 AS depth, 9 AS parent_id, 1.550799300956517 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 232 AS count, 3 AS depth, 9 AS parent_id, -0.1815583104035548 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 29 AS count, 3 AS depth, 12 AS parent_id, -0.7409530988958434 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 184 AS count, 3 AS depth, 12 AS parent_id, 0.5876834756708653 AS "Estimator") AS "Values"), 
"DT_Output_73" AS 
(SELECT "DT_node_lookup_73"."KEY" AS "KEY", "DT_node_lookup_73".node_id_2 AS node_id_2, "DT_node_data_73".node_id AS node_id, "DT_node_data_73".feature AS feature, "DT_node_data_73".threshold AS threshold, "DT_node_data_73".count AS count, "DT_node_data_73".depth AS depth, "DT_node_data_73".parent_id AS parent_id, "DT_node_data_73"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_73" LEFT OUTER JOIN "DT_node_data_73" ON "DT_node_lookup_73".node_id_2 = "DT_node_data_73".node_id), 
"GB_Tree_18_1" AS 
(SELECT "DT_Output_73"."KEY" AS "KEY", 0.0 AS "Score_0", "DT_Output_73"."Estimator" AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3" 
FROM "DT_Output_73"), 
"DT_node_lookup_74" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_237" <= 11.945308685302734) THEN CASE WHEN ("ADS"."Feature_267" <= -5.352959632873535) THEN CASE WHEN ("ADS"."Feature_103" <= 1.3962510824203491) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_122" <= 10.155654907226562) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_384" <= 1.5498340129852295) THEN CASE WHEN ("ADS"."Feature_328" <= 0.7211571931838989) THEN 10 ELSE 11 END ELSE 12 END END AS node_id_2 
FROM "FourClass_500" AS "ADS"), 
"DT_node_data_74" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 109 AS count, 3 AS depth, 2 AS parent_id, 0.23231160155569525 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 12 AS count, 3 AS depth, 2 AS parent_id, 1.7085323775685322 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 645 AS count, 3 AS depth, 5 AS parent_id, -0.1471639785709201 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 25 AS count, 3 AS depth, 5 AS parent_id, 0.8907818313313799 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS count, 3 AS depth, 9 AS parent_id, 1.6578689134550428 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 3 AS depth, 9 AS parent_id, 1.2574218325815094 AS "Estimator" UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 2 AS depth, 8 AS parent_id, -0.9235247216190355 AS "Estimator") AS "Values"), 
"DT_Output_74" AS 
(SELECT "DT_node_lookup_74"."KEY" AS "KEY", "DT_node_lookup_74".node_id_2 AS node_id_2, "DT_node_data_74".node_id AS node_id, "DT_node_data_74".feature AS feature, "DT_node_data_74".threshold AS threshold, "DT_node_data_74".count AS count, "DT_node_data_74".depth AS depth, "DT_node_data_74".parent_id AS parent_id, "DT_node_data_74"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_74" LEFT OUTER JOIN "DT_node_data_74" ON "DT_node_lookup_74".node_id_2 = "DT_node_data_74".node_id), 
"GB_Tree_18_2" AS 
(SELECT "DT_Output_74"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", "DT_Output_74"."Estimator" AS "Score_2", 0.0 AS "Score_3" 
FROM "DT_Output_74"), 
"DT_node_lookup_75" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_497" <= 3.6597704887390137) THEN CASE WHEN ("ADS"."Feature_477" <= 3.325181245803833) THEN CASE WHEN ("ADS"."Feature_96" <= -2.167649269104004) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_299" <= -1.0744855403900146) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_249" <= 31.900867462158203) THEN CASE WHEN ("ADS"."Feature_456" <= 7.701550006866455) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_164" <= 1.7739734649658203) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "FourClass_500" AS "ADS"), 
"DT_node_data_75" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 6 AS count, 3 AS depth, 2 AS parent_id, 1.849795230795391 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 436 AS count, 3 AS depth, 2 AS parent_id, -0.29276380665842683 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 27 AS count, 3 AS depth, 5 AS parent_id, 1.10587690644302 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 148 AS count, 3 AS depth, 5 AS parent_id, 0.046214326683979026 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 159 AS count, 3 AS depth, 9 AS parent_id, 0.10498422653416606 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 8 AS count, 3 AS depth, 9 AS parent_id, 1.6933786371934165 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 15 AS count, 3 AS depth, 12 AS parent_id, 1.4812060233331161 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 12 AS parent_id, -0.8976421671028251 AS "Estimator") AS "Values"), 
"DT_Output_75" AS 
(SELECT "DT_node_lookup_75"."KEY" AS "KEY", "DT_node_lookup_75".node_id_2 AS node_id_2, "DT_node_data_75".node_id AS node_id, "DT_node_data_75".feature AS feature, "DT_node_data_75".threshold AS threshold, "DT_node_data_75".count AS count, "DT_node_data_75".depth AS depth, "DT_node_data_75".parent_id AS parent_id, "DT_node_data_75"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_75" LEFT OUTER JOIN "DT_node_data_75" ON "DT_node_lookup_75".node_id_2 = "DT_node_data_75".node_id), 
"GB_Tree_18_3" AS 
(SELECT "DT_Output_75"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", "DT_Output_75"."Estimator" AS "Score_3" 
FROM "DT_Output_75"), 
"DT_node_lookup_76" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_191" <= 3.7015044689178467) THEN CASE WHEN ("ADS"."Feature_495" <= -7.385134696960449) THEN CASE WHEN ("ADS"."Feature_67" <= -0.03318105265498161) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_215" <= 7.830905914306641) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_396" <= -5.227508544921875) THEN CASE WHEN ("ADS"."Feature_44" <= 0.642305314540863) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_408" <= -10.132623672485352) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "FourClass_500" AS "ADS"), 
"DT_node_data_76" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 27 AS count, 3 AS depth, 2 AS parent_id, 1.3413578538848876 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 31 AS count, 3 AS depth, 2 AS parent_id, 0.07947551773623432 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 490 AS count, 3 AS depth, 5 AS parent_id, -0.0578551625703973 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 49 AS count, 3 AS depth, 5 AS parent_id, 0.7644151010095974 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 25 AS count, 3 AS depth, 9 AS parent_id, -0.3154972943176219 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 14 AS count, 3 AS depth, 9 AS parent_id, 1.2353222618222652 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 10 AS count, 3 AS depth, 12 AS parent_id, 0.7855532751933573 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 154 AS count, 3 AS depth, 12 AS parent_id, -0.7370951186809955 AS "Estimator") AS "Values"), 
"DT_Output_76" AS 
(SELECT "DT_node_lookup_76"."KEY" AS "KEY", "DT_node_lookup_76".node_id_2 AS node_id_2, "DT_node_data_76".node_id AS node_id, "DT_node_data_76".feature AS feature, "DT_node_data_76".threshold AS threshold, "DT_node_data_76".count AS count, "DT_node_data_76".depth AS depth, "DT_node_data_76".parent_id AS parent_id, "DT_node_data_76"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_76" LEFT OUTER JOIN "DT_node_data_76" ON "DT_node_lookup_76".node_id_2 = "DT_node_data_76".node_id), 
"GB_Tree_19_0" AS 
(SELECT "DT_Output_76"."KEY" AS "KEY", "DT_Output_76"."Estimator" AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3" 
FROM "DT_Output_76"), 
"DT_node_lookup_77" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_264" <= 3.5859971046447754) THEN CASE WHEN ("ADS"."Feature_64" <= -10.545716285705566) THEN CASE WHEN ("ADS"."Feature_396" <= -4.817080497741699) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_217" <= 1.017073631286621) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_128" <= 0.5314027070999146) THEN CASE WHEN ("ADS"."Feature_124" <= 1.53240168094635) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_394" <= 1.0424010753631592) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "FourClass_500" AS "ADS"), 
"DT_node_data_77" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 8 AS count, 3 AS depth, 2 AS parent_id, -0.9276588646041233 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 20 AS count, 3 AS depth, 2 AS parent_id, 1.4520604021232846 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 330 AS count, 3 AS depth, 5 AS parent_id, 0.03588015446208677 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 235 AS count, 3 AS depth, 5 AS parent_id, -0.5185210194296739 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 146 AS count, 3 AS depth, 9 AS parent_id, -0.09622290491494553 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 8 AS count, 3 AS depth, 9 AS parent_id, 1.4382556974220415 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 46 AS count, 3 AS depth, 12 AS parent_id, 1.1776235214222697 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 7 AS count, 3 AS depth, 12 AS parent_id, -0.9547523003476233 AS "Estimator") AS "Values"), 
"DT_Output_77" AS 
(SELECT "DT_node_lookup_77"."KEY" AS "KEY", "DT_node_lookup_77".node_id_2 AS node_id_2, "DT_node_data_77".node_id AS node_id, "DT_node_data_77".feature AS feature, "DT_node_data_77".threshold AS threshold, "DT_node_data_77".count AS count, "DT_node_data_77".depth AS depth, "DT_node_data_77".parent_id AS parent_id, "DT_node_data_77"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_77" LEFT OUTER JOIN "DT_node_data_77" ON "DT_node_lookup_77".node_id_2 = "DT_node_data_77".node_id), 
"GB_Tree_19_1" AS 
(SELECT "DT_Output_77"."KEY" AS "KEY", 0.0 AS "Score_0", "DT_Output_77"."Estimator" AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3" 
FROM "DT_Output_77"), 
"DT_node_lookup_78" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_345" <= -0.5780743360519409) THEN CASE WHEN ("ADS"."Feature_18" <= -9.029045104980469) THEN CASE WHEN ("ADS"."Feature_401" <= -1.1048493385314941) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_237" <= 10.287540435791016) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_377" <= -1.1021769046783447) THEN CASE WHEN ("ADS"."Feature_129" <= 7.346599102020264) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_496" <= 2.0000977516174316) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "FourClass_500" AS "ADS"), 
"DT_node_data_78" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 2 AS parent_id, -1.0273516978069523 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 7 AS count, 3 AS depth, 2 AS parent_id, 1.6660861682804897 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 207 AS count, 3 AS depth, 5 AS parent_id, -0.4596424400122521 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 3 AS depth, 5 AS parent_id, 1.9888080967716268 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 193 AS count, 3 AS depth, 9 AS parent_id, 0.2501932366584491 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 30 AS count, 3 AS depth, 9 AS parent_id, 1.2802097330150901 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 354 AS count, 3 AS depth, 12 AS parent_id, -0.1348923200239776 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS count, 3 AS depth, 12 AS parent_id, 1.8185847388238463 AS "Estimator") AS "Values"), 
"DT_Output_78" AS 
(SELECT "DT_node_lookup_78"."KEY" AS "KEY", "DT_node_lookup_78".node_id_2 AS node_id_2, "DT_node_data_78".node_id AS node_id, "DT_node_data_78".feature AS feature, "DT_node_data_78".threshold AS threshold, "DT_node_data_78".count AS count, "DT_node_data_78".depth AS depth, "DT_node_data_78".parent_id AS parent_id, "DT_node_data_78"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_78" LEFT OUTER JOIN "DT_node_data_78" ON "DT_node_lookup_78".node_id_2 = "DT_node_data_78".node_id), 
"GB_Tree_19_2" AS 
(SELECT "DT_Output_78"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", "DT_Output_78"."Estimator" AS "Score_2", 0.0 AS "Score_3" 
FROM "DT_Output_78"), 
"DT_node_lookup_79" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_221" <= -1.9479866027832031) THEN CASE WHEN ("ADS"."Feature_429" <= 0.20803028345108032) THEN CASE WHEN ("ADS"."Feature_304" <= 0.8944720029830933) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_462" <= -0.1258264034986496) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_183" <= -11.473261833190918) THEN CASE WHEN ("ADS"."Feature_348" <= -0.09331661462783813) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_210" <= -3.6896719932556152) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "FourClass_500" AS "ADS"), 
"DT_node_data_79" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 8 AS count, 3 AS depth, 2 AS parent_id, 1.644301257581778 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 3 AS depth, 2 AS parent_id, 1.1724631108428238 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 7 AS count, 3 AS depth, 5 AS parent_id, -0.8961131944232386 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS count, 3 AS depth, 5 AS parent_id, 1.2646650498922036 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 13 AS count, 3 AS depth, 9 AS parent_id, 1.4363756035635002 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 15 AS count, 3 AS depth, 9 AS parent_id, 0.12021670881048094 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 189 AS count, 3 AS depth, 12 AS parent_id, -0.4392697698638095 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 562 AS count, 3 AS depth, 12 AS parent_id, 0.04970935345878044 AS "Estimator") AS "Values"), 
"DT_Output_79" AS 
(SELECT "DT_node_lookup_79"."KEY" AS "KEY", "DT_node_lookup_79".node_id_2 AS node_id_2, "DT_node_data_79".node_id AS node_id, "DT_node_data_79".feature AS feature, "DT_node_data_79".threshold AS threshold, "DT_node_data_79".count AS count, "DT_node_data_79".depth AS depth, "DT_node_data_79".parent_id AS parent_id, "DT_node_data_79"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_79" LEFT OUTER JOIN "DT_node_data_79" ON "DT_node_lookup_79".node_id_2 = "DT_node_data_79".node_id), 
"GB_Tree_19_3" AS 
(SELECT "DT_Output_79"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", "DT_Output_79"."Estimator" AS "Score_3" 
FROM "DT_Output_79")
 SELECT "Score_Union_CTE_esu_9"."KEY", "Score_Union_CTE_esu_9"."Score_0", "Score_Union_CTE_esu_9"."Score_1", "Score_Union_CTE_esu_9"."Score_2", "Score_Union_CTE_esu_9"."Score_3" 
FROM (SELECT "GB_Tree_18_0"."KEY" AS "KEY", "GB_Tree_18_0"."Score_0" AS "Score_0", "GB_Tree_18_0"."Score_1" AS "Score_1", "GB_Tree_18_0"."Score_2" AS "Score_2", "GB_Tree_18_0"."Score_3" AS "Score_3" 
FROM "GB_Tree_18_0" UNION ALL SELECT "GB_Tree_18_1"."KEY" AS "KEY", "GB_Tree_18_1"."Score_0" AS "Score_0", "GB_Tree_18_1"."Score_1" AS "Score_1", "GB_Tree_18_1"."Score_2" AS "Score_2", "GB_Tree_18_1"."Score_3" AS "Score_3" 
FROM "GB_Tree_18_1" UNION ALL SELECT "GB_Tree_18_2"."KEY" AS "KEY", "GB_Tree_18_2"."Score_0" AS "Score_0", "GB_Tree_18_2"."Score_1" AS "Score_1", "GB_Tree_18_2"."Score_2" AS "Score_2", "GB_Tree_18_2"."Score_3" AS "Score_3" 
FROM "GB_Tree_18_2" UNION ALL SELECT "GB_Tree_18_3"."KEY" AS "KEY", "GB_Tree_18_3"."Score_0" AS "Score_0", "GB_Tree_18_3"."Score_1" AS "Score_1", "GB_Tree_18_3"."Score_2" AS "Score_2", "GB_Tree_18_3"."Score_3" AS "Score_3" 
FROM "GB_Tree_18_3" UNION ALL SELECT "GB_Tree_19_0"."KEY" AS "KEY", "GB_Tree_19_0"."Score_0" AS "Score_0", "GB_Tree_19_0"."Score_1" AS "Score_1", "GB_Tree_19_0"."Score_2" AS "Score_2", "GB_Tree_19_0"."Score_3" AS "Score_3" 
FROM "GB_Tree_19_0" UNION ALL SELECT "GB_Tree_19_1"."KEY" AS "KEY", "GB_Tree_19_1"."Score_0" AS "Score_0", "GB_Tree_19_1"."Score_1" AS "Score_1", "GB_Tree_19_1"."Score_2" AS "Score_2", "GB_Tree_19_1"."Score_3" AS "Score_3" 
FROM "GB_Tree_19_1" UNION ALL SELECT "GB_Tree_19_2"."KEY" AS "KEY", "GB_Tree_19_2"."Score_0" AS "Score_0", "GB_Tree_19_2"."Score_1" AS "Score_1", "GB_Tree_19_2"."Score_2" AS "Score_2", "GB_Tree_19_2"."Score_3" AS "Score_3" 
FROM "GB_Tree_19_2" UNION ALL SELECT "GB_Tree_19_3"."KEY" AS "KEY", "GB_Tree_19_3"."Score_0" AS "Score_0", "GB_Tree_19_3"."Score_1" AS "Score_1", "GB_Tree_19_3"."Score_2" AS "Score_2", "GB_Tree_19_3"."Score_3" AS "Score_3" 
FROM "GB_Tree_19_3") AS "Score_Union_CTE_esu_9"), 
"Score_Union_CTE_10" AS 
(WITH "DT_node_lookup_80" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_268" <= 7.673882484436035) THEN CASE WHEN ("ADS"."Feature_106" <= 3.1021876335144043) THEN CASE WHEN ("ADS"."Feature_85" <= -0.41358494758605957) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_370" <= 1.6123504638671875) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_235" <= -1.888777256011963) THEN CASE WHEN ("ADS"."Feature_224" <= 0.6269372701644897) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_326" <= 2.4327993392944336) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "FourClass_500" AS "ADS"), 
"DT_node_data_80" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 177 AS count, 3 AS depth, 2 AS parent_id, 0.25880833008386955 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 324 AS count, 3 AS depth, 2 AS parent_id, -0.2879269659100053 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 193 AS count, 3 AS depth, 5 AS parent_id, 0.2679266092372217 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 13 AS count, 3 AS depth, 5 AS parent_id, 1.5137119377971797 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 9 AS parent_id, 1.4335700349369103 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 9 AS parent_id, 1.2882443277094222 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 90 AS count, 3 AS depth, 12 AS parent_id, -0.8831577270994014 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 12 AS parent_id, 1.1758372641541854 AS "Estimator") AS "Values"), 
"DT_Output_80" AS 
(SELECT "DT_node_lookup_80"."KEY" AS "KEY", "DT_node_lookup_80".node_id_2 AS node_id_2, "DT_node_data_80".node_id AS node_id, "DT_node_data_80".feature AS feature, "DT_node_data_80".threshold AS threshold, "DT_node_data_80".count AS count, "DT_node_data_80".depth AS depth, "DT_node_data_80".parent_id AS parent_id, "DT_node_data_80"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_80" LEFT OUTER JOIN "DT_node_data_80" ON "DT_node_lookup_80".node_id_2 = "DT_node_data_80".node_id), 
"GB_Tree_20_0" AS 
(SELECT "DT_Output_80"."KEY" AS "KEY", "DT_Output_80"."Estimator" AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3" 
FROM "DT_Output_80"), 
"DT_node_lookup_81" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_455" <= 1.9325780868530273) THEN CASE WHEN ("ADS"."Feature_77" <= 1.3142023086547852) THEN CASE WHEN ("ADS"."Feature_367" <= 12.875642776489258) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_340" <= -0.5114202499389648) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_465" <= -0.2773301601409912) THEN CASE WHEN ("ADS"."Feature_463" <= 1.4186830520629883) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_120" <= 1.3521714210510254) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "FourClass_500" AS "ADS"), 
"DT_node_data_81" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 690 AS count, 3 AS depth, 2 AS parent_id, -0.12810023798516101 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 12 AS count, 3 AS depth, 2 AS parent_id, 1.162740531635282 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 18 AS count, 3 AS depth, 5 AS parent_id, -0.9390062904066852 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 58 AS count, 3 AS depth, 5 AS parent_id, 0.8272520732035279 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 8 AS count, 3 AS depth, 9 AS parent_id, -0.9405840979855226 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 3 AS depth, 9 AS parent_id, 1.2158557689433889 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 11 AS count, 3 AS depth, 12 AS parent_id, 1.7483217444409052 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 12 AS parent_id, -0.8716560590476374 AS "Estimator") AS "Values"), 
"DT_Output_81" AS 
(SELECT "DT_node_lookup_81"."KEY" AS "KEY", "DT_node_lookup_81".node_id_2 AS node_id_2, "DT_node_data_81".node_id AS node_id, "DT_node_data_81".feature AS feature, "DT_node_data_81".threshold AS threshold, "DT_node_data_81".count AS count, "DT_node_data_81".depth AS depth, "DT_node_data_81".parent_id AS parent_id, "DT_node_data_81"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_81" LEFT OUTER JOIN "DT_node_data_81" ON "DT_node_lookup_81".node_id_2 = "DT_node_data_81".node_id), 
"GB_Tree_20_1" AS 
(SELECT "DT_Output_81"."KEY" AS "KEY", 0.0 AS "Score_0", "DT_Output_81"."Estimator" AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3" 
FROM "DT_Output_81"), 
"DT_node_lookup_82" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_488" <= -1.5199167728424072) THEN CASE WHEN ("ADS"."Feature_329" <= 0.25887995958328247) THEN CASE WHEN ("ADS"."Feature_2" <= -0.4235559105873108) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_245" <= 1.993105411529541) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_411" <= 1.6506679058074951) THEN CASE WHEN ("ADS"."Feature_209" <= -2.7746243476867676) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_124" <= 0.0013440247857943177) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "FourClass_500" AS "ADS"), 
"DT_node_data_82" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 13 AS count, 3 AS depth, 2 AS parent_id, 0.19236564868051204 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 20 AS count, 3 AS depth, 2 AS parent_id, 1.6579492032612564 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 16 AS count, 3 AS depth, 5 AS parent_id, -0.9300712072043584 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 5 AS parent_id, 1.3215186651975865 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 221 AS count, 3 AS depth, 9 AS parent_id, 0.22108235417107913 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 497 AS count, 3 AS depth, 9 AS parent_id, -0.23739979951691195 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 16 AS count, 3 AS depth, 12 AS parent_id, -0.20890571190383003 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 16 AS count, 3 AS depth, 12 AS parent_id, 1.5620821066307962 AS "Estimator") AS "Values"), 
"DT_Output_82" AS 
(SELECT "DT_node_lookup_82"."KEY" AS "KEY", "DT_node_lookup_82".node_id_2 AS node_id_2, "DT_node_data_82".node_id AS node_id, "DT_node_data_82".feature AS feature, "DT_node_data_82".threshold AS threshold, "DT_node_data_82".count AS count, "DT_node_data_82".depth AS depth, "DT_node_data_82".parent_id AS parent_id, "DT_node_data_82"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_82" LEFT OUTER JOIN "DT_node_data_82" ON "DT_node_lookup_82".node_id_2 = "DT_node_data_82".node_id), 
"GB_Tree_20_2" AS 
(SELECT "DT_Output_82"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", "DT_Output_82"."Estimator" AS "Score_2", 0.0 AS "Score_3" 
FROM "DT_Output_82"), 
"DT_node_lookup_83" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_308" <= 4.593985080718994) THEN CASE WHEN ("ADS"."Feature_264" <= -1.6253360509872437) THEN CASE WHEN ("ADS"."Feature_293" <= -0.7083150148391724) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_25" <= -0.01519040111452341) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_172" <= 1.833143711090088) THEN CASE WHEN ("ADS"."Feature_278" <= -2.3004395961761475) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_238" <= -0.35710057616233826) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "FourClass_500" AS "ADS"), 
"DT_node_data_83" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 61 AS count, 3 AS depth, 2 AS parent_id, -0.3528633730489261 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 197 AS count, 3 AS depth, 2 AS parent_id, 0.577865775469986 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 174 AS count, 3 AS depth, 5 AS parent_id, 0.2258148521142405 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 184 AS count, 3 AS depth, 5 AS parent_id, -0.4879292842015284 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 3 AS depth, 9 AS parent_id, 1.7882641291632193 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 172 AS count, 3 AS depth, 9 AS parent_id, -0.520135363269152 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 6 AS count, 3 AS depth, 12 AS parent_id, 1.756731388395742 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS count, 3 AS depth, 12 AS parent_id, -0.9331662042764549 AS "Estimator") AS "Values"), 
"DT_Output_83" AS 
(SELECT "DT_node_lookup_83"."KEY" AS "KEY", "DT_node_lookup_83".node_id_2 AS node_id_2, "DT_node_data_83".node_id AS node_id, "DT_node_data_83".feature AS feature, "DT_node_data_83".threshold AS threshold, "DT_node_data_83".count AS count, "DT_node_data_83".depth AS depth, "DT_node_data_83".parent_id AS parent_id, "DT_node_data_83"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_83" LEFT OUTER JOIN "DT_node_data_83" ON "DT_node_lookup_83".node_id_2 = "DT_node_data_83".node_id), 
"GB_Tree_20_3" AS 
(SELECT "DT_Output_83"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", "DT_Output_83"."Estimator" AS "Score_3" 
FROM "DT_Output_83"), 
"DT_node_lookup_84" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_266" <= 3.12361216545105) THEN CASE WHEN ("ADS"."Feature_361" <= -1.3568118810653687) THEN CASE WHEN ("ADS"."Feature_245" <= -0.0551612488925457) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_244" <= -2.327676296234131) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_396" <= 0.5520620346069336) THEN CASE WHEN ("ADS"."Feature_442" <= 2.8406822681427) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_144" <= 1.3515706062316895) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "FourClass_500" AS "ADS"), 
"DT_node_data_84" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 23 AS count, 3 AS depth, 2 AS parent_id, -0.2956169401717013 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 23 AS count, 3 AS depth, 2 AS parent_id, 1.2155148774781226 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 3 AS depth, 5 AS parent_id, 1.8149745818214515 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 527 AS count, 3 AS depth, 5 AS parent_id, -0.2362428300152865 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 85 AS count, 3 AS depth, 9 AS parent_id, 0.8151237811625044 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 32 AS count, 3 AS depth, 9 AS parent_id, -0.29677924713156745 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 97 AS count, 3 AS depth, 12 AS parent_id, -0.2710099814347781 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 10 AS count, 3 AS depth, 12 AS parent_id, 1.164249226851266 AS "Estimator") AS "Values"), 
"DT_Output_84" AS 
(SELECT "DT_node_lookup_84"."KEY" AS "KEY", "DT_node_lookup_84".node_id_2 AS node_id_2, "DT_node_data_84".node_id AS node_id, "DT_node_data_84".feature AS feature, "DT_node_data_84".threshold AS threshold, "DT_node_data_84".count AS count, "DT_node_data_84".depth AS depth, "DT_node_data_84".parent_id AS parent_id, "DT_node_data_84"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_84" LEFT OUTER JOIN "DT_node_data_84" ON "DT_node_lookup_84".node_id_2 = "DT_node_data_84".node_id), 
"GB_Tree_21_0" AS 
(SELECT "DT_Output_84"."KEY" AS "KEY", "DT_Output_84"."Estimator" AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3" 
FROM "DT_Output_84"), 
"DT_node_lookup_85" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_42" <= 4.552486419677734) THEN CASE WHEN ("ADS"."Feature_456" <= 1.2209151983261108) THEN CASE WHEN ("ADS"."Feature_273" <= 1.9101955890655518) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_11" <= 0.6983945369720459) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_164" <= 1.8912267684936523) THEN CASE WHEN ("ADS"."Feature_258" <= -1.9095062017440796) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_334" <= 1.0000139474868774) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "FourClass_500" AS "ADS"), 
"DT_node_data_85" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 362 AS count, 3 AS depth, 2 AS parent_id, -0.17017121583533762 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 11 AS count, 3 AS depth, 2 AS parent_id, 1.2896765364705398 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 205 AS count, 3 AS depth, 5 AS parent_id, 0.11119016887713778 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 69 AS count, 3 AS depth, 5 AS parent_id, 0.8734090226379351 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 3 AS depth, 9 AS parent_id, 1.7295950520166083 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 143 AS count, 3 AS depth, 9 AS parent_id, -0.5772368079868176 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 6 AS count, 3 AS depth, 12 AS parent_id, 1.3782465152415047 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 3 AS depth, 12 AS parent_id, -0.8753306878002025 AS "Estimator") AS "Values"), 
"DT_Output_85" AS 
(SELECT "DT_node_lookup_85"."KEY" AS "KEY", "DT_node_lookup_85".node_id_2 AS node_id_2, "DT_node_data_85".node_id AS node_id, "DT_node_data_85".feature AS feature, "DT_node_data_85".threshold AS threshold, "DT_node_data_85".count AS count, "DT_node_data_85".depth AS depth, "DT_node_data_85".parent_id AS parent_id, "DT_node_data_85"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_85" LEFT OUTER JOIN "DT_node_data_85" ON "DT_node_lookup_85".node_id_2 = "DT_node_data_85".node_id), 
"GB_Tree_21_1" AS 
(SELECT "DT_Output_85"."KEY" AS "KEY", 0.0 AS "Score_0", "DT_Output_85"."Estimator" AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3" 
FROM "DT_Output_85"), 
"DT_node_lookup_86" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_110" <= 1.1213914155960083) THEN CASE WHEN ("ADS"."Feature_497" <= -8.586446762084961) THEN CASE WHEN ("ADS"."Feature_199" <= 0.6766723394393921) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_411" <= 1.6506679058074951) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_321" <= 0.7285945415496826) THEN CASE WHEN ("ADS"."Feature_441" <= -0.730933427810669) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_349" <= -0.5325939059257507) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "FourClass_500" AS "ADS"), 
"DT_node_data_86" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 40 AS count, 3 AS depth, 2 AS parent_id, 0.1487216855021199 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 15 AS count, 3 AS depth, 2 AS parent_id, 1.4311255530151052 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 603 AS count, 3 AS depth, 5 AS parent_id, -0.18929953012607117 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 30 AS count, 3 AS depth, 5 AS parent_id, 0.7650223109580676 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 21 AS count, 3 AS depth, 9 AS parent_id, 0.991319166699337 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 64 AS count, 3 AS depth, 9 AS parent_id, -0.34916389270923476 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS count, 3 AS depth, 12 AS parent_id, -0.3404833136095534 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 22 AS count, 3 AS depth, 12 AS parent_id, 1.6103002720236506 AS "Estimator") AS "Values"), 
"DT_Output_86" AS 
(SELECT "DT_node_lookup_86"."KEY" AS "KEY", "DT_node_lookup_86".node_id_2 AS node_id_2, "DT_node_data_86".node_id AS node_id, "DT_node_data_86".feature AS feature, "DT_node_data_86".threshold AS threshold, "DT_node_data_86".count AS count, "DT_node_data_86".depth AS depth, "DT_node_data_86".parent_id AS parent_id, "DT_node_data_86"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_86" LEFT OUTER JOIN "DT_node_data_86" ON "DT_node_lookup_86".node_id_2 = "DT_node_data_86".node_id), 
"GB_Tree_21_2" AS 
(SELECT "DT_Output_86"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", "DT_Output_86"."Estimator" AS "Score_2", 0.0 AS "Score_3" 
FROM "DT_Output_86"), 
"DT_node_lookup_87" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_179" <= -4.30672025680542) THEN CASE WHEN ("ADS"."Feature_260" <= -2.1836819648742676) THEN CASE WHEN ("ADS"."Feature_183" <= 0.6387366056442261) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_190" <= 1.3241488933563232) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_343" <= 7.548157691955566) THEN CASE WHEN ("ADS"."Feature_18" <= 5.50998067855835) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_248" <= -0.8340256214141846) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "FourClass_500" AS "ADS"), 
"DT_node_data_87" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 3 AS depth, 2 AS parent_id, 1.6308019166102943 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 3 AS depth, 2 AS parent_id, 2.029681046554022 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 190 AS count, 3 AS depth, 5 AS parent_id, -0.5422433822677859 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 20 AS count, 3 AS depth, 5 AS parent_id, 0.6342291275121938 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 295 AS count, 3 AS depth, 9 AS parent_id, -0.27433328598196144 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 54 AS count, 3 AS depth, 9 AS parent_id, 0.579837585495388 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 57 AS count, 3 AS depth, 12 AS parent_id, -0.3210537100211161 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 180 AS count, 3 AS depth, 12 AS parent_id, 0.5729041886394205 AS "Estimator") AS "Values"), 
"DT_Output_87" AS 
(SELECT "DT_node_lookup_87"."KEY" AS "KEY", "DT_node_lookup_87".node_id_2 AS node_id_2, "DT_node_data_87".node_id AS node_id, "DT_node_data_87".feature AS feature, "DT_node_data_87".threshold AS threshold, "DT_node_data_87".count AS count, "DT_node_data_87".depth AS depth, "DT_node_data_87".parent_id AS parent_id, "DT_node_data_87"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_87" LEFT OUTER JOIN "DT_node_data_87" ON "DT_node_lookup_87".node_id_2 = "DT_node_data_87".node_id), 
"GB_Tree_21_3" AS 
(SELECT "DT_Output_87"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", "DT_Output_87"."Estimator" AS "Score_3" 
FROM "DT_Output_87")
 SELECT "Score_Union_CTE_esu_10"."KEY", "Score_Union_CTE_esu_10"."Score_0", "Score_Union_CTE_esu_10"."Score_1", "Score_Union_CTE_esu_10"."Score_2", "Score_Union_CTE_esu_10"."Score_3" 
FROM (SELECT "GB_Tree_20_0"."KEY" AS "KEY", "GB_Tree_20_0"."Score_0" AS "Score_0", "GB_Tree_20_0"."Score_1" AS "Score_1", "GB_Tree_20_0"."Score_2" AS "Score_2", "GB_Tree_20_0"."Score_3" AS "Score_3" 
FROM "GB_Tree_20_0" UNION ALL SELECT "GB_Tree_20_1"."KEY" AS "KEY", "GB_Tree_20_1"."Score_0" AS "Score_0", "GB_Tree_20_1"."Score_1" AS "Score_1", "GB_Tree_20_1"."Score_2" AS "Score_2", "GB_Tree_20_1"."Score_3" AS "Score_3" 
FROM "GB_Tree_20_1" UNION ALL SELECT "GB_Tree_20_2"."KEY" AS "KEY", "GB_Tree_20_2"."Score_0" AS "Score_0", "GB_Tree_20_2"."Score_1" AS "Score_1", "GB_Tree_20_2"."Score_2" AS "Score_2", "GB_Tree_20_2"."Score_3" AS "Score_3" 
FROM "GB_Tree_20_2" UNION ALL SELECT "GB_Tree_20_3"."KEY" AS "KEY", "GB_Tree_20_3"."Score_0" AS "Score_0", "GB_Tree_20_3"."Score_1" AS "Score_1", "GB_Tree_20_3"."Score_2" AS "Score_2", "GB_Tree_20_3"."Score_3" AS "Score_3" 
FROM "GB_Tree_20_3" UNION ALL SELECT "GB_Tree_21_0"."KEY" AS "KEY", "GB_Tree_21_0"."Score_0" AS "Score_0", "GB_Tree_21_0"."Score_1" AS "Score_1", "GB_Tree_21_0"."Score_2" AS "Score_2", "GB_Tree_21_0"."Score_3" AS "Score_3" 
FROM "GB_Tree_21_0" UNION ALL SELECT "GB_Tree_21_1"."KEY" AS "KEY", "GB_Tree_21_1"."Score_0" AS "Score_0", "GB_Tree_21_1"."Score_1" AS "Score_1", "GB_Tree_21_1"."Score_2" AS "Score_2", "GB_Tree_21_1"."Score_3" AS "Score_3" 
FROM "GB_Tree_21_1" UNION ALL SELECT "GB_Tree_21_2"."KEY" AS "KEY", "GB_Tree_21_2"."Score_0" AS "Score_0", "GB_Tree_21_2"."Score_1" AS "Score_1", "GB_Tree_21_2"."Score_2" AS "Score_2", "GB_Tree_21_2"."Score_3" AS "Score_3" 
FROM "GB_Tree_21_2" UNION ALL SELECT "GB_Tree_21_3"."KEY" AS "KEY", "GB_Tree_21_3"."Score_0" AS "Score_0", "GB_Tree_21_3"."Score_1" AS "Score_1", "GB_Tree_21_3"."Score_2" AS "Score_2", "GB_Tree_21_3"."Score_3" AS "Score_3" 
FROM "GB_Tree_21_3") AS "Score_Union_CTE_esu_10"), 
"Score_Union_CTE_11" AS 
(WITH "DT_node_lookup_88" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_289" <= 2.683239698410034) THEN CASE WHEN ("ADS"."Feature_25" <= 8.111688613891602) THEN CASE WHEN ("ADS"."Feature_374" <= -4.829329490661621) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_147" <= 0.028866644948720932) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_291" <= -1.4080345630645752) THEN CASE WHEN ("ADS"."Feature_375" <= -0.5907425880432129) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_402" <= -6.584256172180176) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "FourClass_500" AS "ADS"), 
"DT_node_data_88" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 100 AS count, 3 AS depth, 2 AS parent_id, -0.8423305506377482 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 417 AS count, 3 AS depth, 2 AS parent_id, -0.09324010533281014 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 15 AS count, 3 AS depth, 5 AS parent_id, -0.22629954852434667 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 24 AS count, 3 AS depth, 5 AS parent_id, 1.195819689791787 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 3 AS depth, 9 AS parent_id, -0.9054351615056806 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 15 AS count, 3 AS depth, 9 AS parent_id, 1.4626363490144763 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 32 AS count, 3 AS depth, 12 AS parent_id, 0.8878571891535441 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 194 AS count, 3 AS depth, 12 AS parent_id, 0.016953033714275288 AS "Estimator") AS "Values"), 
"DT_Output_88" AS 
(SELECT "DT_node_lookup_88"."KEY" AS "KEY", "DT_node_lookup_88".node_id_2 AS node_id_2, "DT_node_data_88".node_id AS node_id, "DT_node_data_88".feature AS feature, "DT_node_data_88".threshold AS threshold, "DT_node_data_88".count AS count, "DT_node_data_88".depth AS depth, "DT_node_data_88".parent_id AS parent_id, "DT_node_data_88"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_88" LEFT OUTER JOIN "DT_node_data_88" ON "DT_node_lookup_88".node_id_2 = "DT_node_data_88".node_id), 
"GB_Tree_22_0" AS 
(SELECT "DT_Output_88"."KEY" AS "KEY", "DT_Output_88"."Estimator" AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3" 
FROM "DT_Output_88"), 
"DT_node_lookup_89" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_477" <= 0.6162202954292297) THEN CASE WHEN ("ADS"."Feature_370" <= -0.405182421207428) THEN CASE WHEN ("ADS"."Feature_275" <= -2.5580999851226807) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_169" <= -1.4927279949188232) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_397" <= -5.788854598999023) THEN CASE WHEN ("ADS"."Feature_208" <= -8.148966789245605) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_308" <= 7.108426094055176) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "FourClass_500" AS "ADS"), 
"DT_node_data_89" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 51 AS count, 3 AS depth, 2 AS parent_id, -0.1686035553375456 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 86 AS count, 3 AS depth, 2 AS parent_id, 0.825164951138339 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 17 AS count, 3 AS depth, 5 AS parent_id, 1.0158784868524813 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 249 AS count, 3 AS depth, 5 AS parent_id, -0.11689363453758317 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 7 AS count, 3 AS depth, 9 AS parent_id, 1.6628011826985853 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 53 AS count, 3 AS depth, 9 AS parent_id, 0.22691830314071762 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 302 AS count, 3 AS depth, 12 AS parent_id, -0.4727908327174906 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 35 AS count, 3 AS depth, 12 AS parent_id, 0.5448290622891344 AS "Estimator") AS "Values"), 
"DT_Output_89" AS 
(SELECT "DT_node_lookup_89"."KEY" AS "KEY", "DT_node_lookup_89".node_id_2 AS node_id_2, "DT_node_data_89".node_id AS node_id, "DT_node_data_89".feature AS feature, "DT_node_data_89".threshold AS threshold, "DT_node_data_89".count AS count, "DT_node_data_89".depth AS depth, "DT_node_data_89".parent_id AS parent_id, "DT_node_data_89"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_89" LEFT OUTER JOIN "DT_node_data_89" ON "DT_node_lookup_89".node_id_2 = "DT_node_data_89".node_id), 
"GB_Tree_22_1" AS 
(SELECT "DT_Output_89"."KEY" AS "KEY", 0.0 AS "Score_0", "DT_Output_89"."Estimator" AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3" 
FROM "DT_Output_89"), 
"DT_node_lookup_90" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_196" <= -0.30257976055145264) THEN CASE WHEN ("ADS"."Feature_268" <= 12.031026840209961) THEN CASE WHEN ("ADS"."Feature_138" <= -1.420310378074646) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_33" <= 0.874915599822998) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_193" <= -1.8743395805358887) THEN CASE WHEN ("ADS"."Feature_69" <= -0.5629007816314697) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_72" <= -7.1370530128479) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "FourClass_500" AS "ADS"), 
"DT_node_data_90" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 34 AS count, 3 AS depth, 2 AS parent_id, 0.671703903808611 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 397 AS count, 3 AS depth, 2 AS parent_id, -0.3146687548166453 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 13 AS count, 3 AS depth, 5 AS parent_id, 1.2532435128092712 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 3 AS depth, 5 AS parent_id, -0.9253582844239117 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 29 AS count, 3 AS depth, 9 AS parent_id, 1.345700324375171 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 115 AS count, 3 AS depth, 9 AS parent_id, 0.27761492692309525 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 18 AS count, 3 AS depth, 12 AS parent_id, 1.065692163348387 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 192 AS count, 3 AS depth, 12 AS parent_id, -0.1866271943394452 AS "Estimator") AS "Values"), 
"DT_Output_90" AS 
(SELECT "DT_node_lookup_90"."KEY" AS "KEY", "DT_node_lookup_90".node_id_2 AS node_id_2, "DT_node_data_90".node_id AS node_id, "DT_node_data_90".feature AS feature, "DT_node_data_90".threshold AS threshold, "DT_node_data_90".count AS count, "DT_node_data_90".depth AS depth, "DT_node_data_90".parent_id AS parent_id, "DT_node_data_90"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_90" LEFT OUTER JOIN "DT_node_data_90" ON "DT_node_lookup_90".node_id_2 = "DT_node_data_90".node_id), 
"GB_Tree_22_2" AS 
(SELECT "DT_Output_90"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", "DT_Output_90"."Estimator" AS "Score_2", 0.0 AS "Score_3" 
FROM "DT_Output_90"), 
"DT_node_lookup_91" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_151" <= -2.5419111251831055) THEN CASE WHEN ("ADS"."Feature_309" <= 0.3794100880622864) THEN CASE WHEN ("ADS"."Feature_157" <= 1.0151903629302979) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_27" <= 0.4845145046710968) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_142" <= -2.537008762359619) THEN CASE WHEN ("ADS"."Feature_221" <= 2.342067241668701) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_404" <= -1.716580867767334) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "FourClass_500" AS "ADS"), 
"DT_node_data_91" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 2 AS parent_id, 1.2336120536358344 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 3 AS depth, 2 AS parent_id, 1.4880463011375733 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 5 AS parent_id, 1.9052861630980276 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 5 AS parent_id, 1.8183927994804698 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 279 AS count, 3 AS depth, 9 AS parent_id, -0.3489331603253148 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 3 AS depth, 9 AS parent_id, 1.9376692196923182 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 193 AS count, 3 AS depth, 12 AS parent_id, -0.22937298995736954 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 320 AS count, 3 AS depth, 12 AS parent_id, 0.314272820935333 AS "Estimator") AS "Values"), 
"DT_Output_91" AS 
(SELECT "DT_node_lookup_91"."KEY" AS "KEY", "DT_node_lookup_91".node_id_2 AS node_id_2, "DT_node_data_91".node_id AS node_id, "DT_node_data_91".feature AS feature, "DT_node_data_91".threshold AS threshold, "DT_node_data_91".count AS count, "DT_node_data_91".depth AS depth, "DT_node_data_91".parent_id AS parent_id, "DT_node_data_91"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_91" LEFT OUTER JOIN "DT_node_data_91" ON "DT_node_lookup_91".node_id_2 = "DT_node_data_91".node_id), 
"GB_Tree_22_3" AS 
(SELECT "DT_Output_91"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", "DT_Output_91"."Estimator" AS "Score_3" 
FROM "DT_Output_91"), 
"DT_node_lookup_92" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_148" <= -1.2121145725250244) THEN CASE WHEN ("ADS"."Feature_488" <= 2.088536262512207) THEN CASE WHEN ("ADS"."Feature_251" <= 1.4499094486236572) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_342" <= -0.5880078673362732) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_18" <= 0.2785458266735077) THEN CASE WHEN ("ADS"."Feature_486" <= 1.0283927917480469) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_210" <= -3.709218978881836) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "FourClass_500" AS "ADS"), 
"DT_node_data_92" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 310 AS count, 3 AS depth, 2 AS parent_id, -0.3875946706237667 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 24 AS count, 3 AS depth, 2 AS parent_id, 0.6483478422066307 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 5 AS parent_id, 1.2793763799647426 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 3 AS depth, 5 AS parent_id, 2.2536180847655927 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 202 AS count, 3 AS depth, 9 AS parent_id, -0.28917524873864553 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 30 AS count, 3 AS depth, 9 AS parent_id, 0.7471058274826624 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 58 AS count, 3 AS depth, 12 AS parent_id, 0.9701648357955419 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 173 AS count, 3 AS depth, 12 AS parent_id, 0.1675550144742849 AS "Estimator") AS "Values"), 
"DT_Output_92" AS 
(SELECT "DT_node_lookup_92"."KEY" AS "KEY", "DT_node_lookup_92".node_id_2 AS node_id_2, "DT_node_data_92".node_id AS node_id, "DT_node_data_92".feature AS feature, "DT_node_data_92".threshold AS threshold, "DT_node_data_92".count AS count, "DT_node_data_92".depth AS depth, "DT_node_data_92".parent_id AS parent_id, "DT_node_data_92"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_92" LEFT OUTER JOIN "DT_node_data_92" ON "DT_node_lookup_92".node_id_2 = "DT_node_data_92".node_id), 
"GB_Tree_23_0" AS 
(SELECT "DT_Output_92"."KEY" AS "KEY", "DT_Output_92"."Estimator" AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3" 
FROM "DT_Output_92"), 
"DT_node_lookup_93" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_128" <= -2.5693604946136475) THEN CASE WHEN ("ADS"."Feature_315" <= 0.27735817432403564) THEN CASE WHEN ("ADS"."Feature_268" <= 5.347232818603516) THEN 3 ELSE 4 END ELSE 5 END ELSE CASE WHEN ("ADS"."Feature_128" <= 0.5920843482017517) THEN CASE WHEN ("ADS"."Feature_182" <= 2.4851107597351074) THEN 8 ELSE 9 END ELSE CASE WHEN ("ADS"."Feature_264" <= 3.4844298362731934) THEN 11 ELSE 12 END END END AS node_id_2 
FROM "FourClass_500" AS "ADS"), 
"DT_node_data_93" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 2 AS parent_id, 1.637580777041568 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 2 AS parent_id, 1.8447800877435472 AS "Estimator" UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 2 AS depth, 1 AS parent_id, 2.969143852184953 AS "Estimator" UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 602 AS count, 3 AS depth, 7 AS parent_id, -0.13518733116645096 AS "Estimator" UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 3 AS depth, 7 AS parent_id, 2.3190377690558956 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 144 AS count, 3 AS depth, 10 AS parent_id, 0.012099138790945835 AS "Estimator" UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 48 AS count, 3 AS depth, 10 AS parent_id, 0.9281671768241332 AS "Estimator") AS "Values"), 
"DT_Output_93" AS 
(SELECT "DT_node_lookup_93"."KEY" AS "KEY", "DT_node_lookup_93".node_id_2 AS node_id_2, "DT_node_data_93".node_id AS node_id, "DT_node_data_93".feature AS feature, "DT_node_data_93".threshold AS threshold, "DT_node_data_93".count AS count, "DT_node_data_93".depth AS depth, "DT_node_data_93".parent_id AS parent_id, "DT_node_data_93"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_93" LEFT OUTER JOIN "DT_node_data_93" ON "DT_node_lookup_93".node_id_2 = "DT_node_data_93".node_id), 
"GB_Tree_23_1" AS 
(SELECT "DT_Output_93"."KEY" AS "KEY", 0.0 AS "Score_0", "DT_Output_93"."Estimator" AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3" 
FROM "DT_Output_93"), 
"DT_node_lookup_94" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_380" <= -1.5620522499084473) THEN CASE WHEN ("ADS"."Feature_387" <= -1.1461281776428223) THEN CASE WHEN ("ADS"."Feature_2" <= -0.716823935508728) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_347" <= -1.581850528717041) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_251" <= 1.9740674495697021) THEN CASE WHEN ("ADS"."Feature_497" <= -8.476680755615234) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_72" <= -4.011462211608887) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "FourClass_500" AS "ADS"), 
"DT_node_data_94" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS count, 3 AS depth, 2 AS parent_id, 1.4412014407947449 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS count, 3 AS depth, 2 AS parent_id, 2.1833970297245253 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 6 AS count, 3 AS depth, 5 AS parent_id, 1.6628641109142732 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 37 AS count, 3 AS depth, 5 AS parent_id, -0.06642005131738382 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 60 AS count, 3 AS depth, 9 AS parent_id, 0.5080592744105086 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 661 AS count, 3 AS depth, 9 AS parent_id, -0.14489208799844674 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 10 AS count, 3 AS depth, 12 AS parent_id, 1.7471001892639995 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 17 AS count, 3 AS depth, 12 AS parent_id, 0.03748333442872782 AS "Estimator") AS "Values"), 
"DT_Output_94" AS 
(SELECT "DT_node_lookup_94"."KEY" AS "KEY", "DT_node_lookup_94".node_id_2 AS node_id_2, "DT_node_data_94".node_id AS node_id, "DT_node_data_94".feature AS feature, "DT_node_data_94".threshold AS threshold, "DT_node_data_94".count AS count, "DT_node_data_94".depth AS depth, "DT_node_data_94".parent_id AS parent_id, "DT_node_data_94"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_94" LEFT OUTER JOIN "DT_node_data_94" ON "DT_node_lookup_94".node_id_2 = "DT_node_data_94".node_id), 
"GB_Tree_23_2" AS 
(SELECT "DT_Output_94"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", "DT_Output_94"."Estimator" AS "Score_2", 0.0 AS "Score_3" 
FROM "DT_Output_94"), 
"DT_node_lookup_95" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_338" <= -1.7936967611312866) THEN CASE WHEN ("ADS"."Feature_404" <= 10.863452911376953) THEN CASE WHEN ("ADS"."Feature_172" <= 1.7957571744918823) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_423" <= -0.6183444857597351) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_301" <= -7.248382568359375) THEN CASE WHEN ("ADS"."Feature_9" <= -0.5118652582168579) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_72" <= 0.4427966773509979) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "FourClass_500" AS "ADS"), 
"DT_node_data_95" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 284 AS count, 3 AS depth, 2 AS parent_id, -0.38587854913310987 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 9 AS count, 3 AS depth, 2 AS parent_id, 1.2172495154509797 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 3 AS depth, 5 AS parent_id, -0.8863874764985913 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 8 AS count, 3 AS depth, 5 AS parent_id, 1.5309193441520794 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 12 AS count, 3 AS depth, 9 AS parent_id, -0.1834932172066855 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 33 AS count, 3 AS depth, 9 AS parent_id, 1.2310081124913623 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 255 AS count, 3 AS depth, 12 AS parent_id, -0.22799983760616727 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 196 AS count, 3 AS depth, 12 AS parent_id, 0.36053256148941676 AS "Estimator") AS "Values"), 
"DT_Output_95" AS 
(SELECT "DT_node_lookup_95"."KEY" AS "KEY", "DT_node_lookup_95".node_id_2 AS node_id_2, "DT_node_data_95".node_id AS node_id, "DT_node_data_95".feature AS feature, "DT_node_data_95".threshold AS threshold, "DT_node_data_95".count AS count, "DT_node_data_95".depth AS depth, "DT_node_data_95".parent_id AS parent_id, "DT_node_data_95"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_95" LEFT OUTER JOIN "DT_node_data_95" ON "DT_node_lookup_95".node_id_2 = "DT_node_data_95".node_id), 
"GB_Tree_23_3" AS 
(SELECT "DT_Output_95"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", "DT_Output_95"."Estimator" AS "Score_3" 
FROM "DT_Output_95")
 SELECT "Score_Union_CTE_esu_11"."KEY", "Score_Union_CTE_esu_11"."Score_0", "Score_Union_CTE_esu_11"."Score_1", "Score_Union_CTE_esu_11"."Score_2", "Score_Union_CTE_esu_11"."Score_3" 
FROM (SELECT "GB_Tree_22_0"."KEY" AS "KEY", "GB_Tree_22_0"."Score_0" AS "Score_0", "GB_Tree_22_0"."Score_1" AS "Score_1", "GB_Tree_22_0"."Score_2" AS "Score_2", "GB_Tree_22_0"."Score_3" AS "Score_3" 
FROM "GB_Tree_22_0" UNION ALL SELECT "GB_Tree_22_1"."KEY" AS "KEY", "GB_Tree_22_1"."Score_0" AS "Score_0", "GB_Tree_22_1"."Score_1" AS "Score_1", "GB_Tree_22_1"."Score_2" AS "Score_2", "GB_Tree_22_1"."Score_3" AS "Score_3" 
FROM "GB_Tree_22_1" UNION ALL SELECT "GB_Tree_22_2"."KEY" AS "KEY", "GB_Tree_22_2"."Score_0" AS "Score_0", "GB_Tree_22_2"."Score_1" AS "Score_1", "GB_Tree_22_2"."Score_2" AS "Score_2", "GB_Tree_22_2"."Score_3" AS "Score_3" 
FROM "GB_Tree_22_2" UNION ALL SELECT "GB_Tree_22_3"."KEY" AS "KEY", "GB_Tree_22_3"."Score_0" AS "Score_0", "GB_Tree_22_3"."Score_1" AS "Score_1", "GB_Tree_22_3"."Score_2" AS "Score_2", "GB_Tree_22_3"."Score_3" AS "Score_3" 
FROM "GB_Tree_22_3" UNION ALL SELECT "GB_Tree_23_0"."KEY" AS "KEY", "GB_Tree_23_0"."Score_0" AS "Score_0", "GB_Tree_23_0"."Score_1" AS "Score_1", "GB_Tree_23_0"."Score_2" AS "Score_2", "GB_Tree_23_0"."Score_3" AS "Score_3" 
FROM "GB_Tree_23_0" UNION ALL SELECT "GB_Tree_23_1"."KEY" AS "KEY", "GB_Tree_23_1"."Score_0" AS "Score_0", "GB_Tree_23_1"."Score_1" AS "Score_1", "GB_Tree_23_1"."Score_2" AS "Score_2", "GB_Tree_23_1"."Score_3" AS "Score_3" 
FROM "GB_Tree_23_1" UNION ALL SELECT "GB_Tree_23_2"."KEY" AS "KEY", "GB_Tree_23_2"."Score_0" AS "Score_0", "GB_Tree_23_2"."Score_1" AS "Score_1", "GB_Tree_23_2"."Score_2" AS "Score_2", "GB_Tree_23_2"."Score_3" AS "Score_3" 
FROM "GB_Tree_23_2" UNION ALL SELECT "GB_Tree_23_3"."KEY" AS "KEY", "GB_Tree_23_3"."Score_0" AS "Score_0", "GB_Tree_23_3"."Score_1" AS "Score_1", "GB_Tree_23_3"."Score_2" AS "Score_2", "GB_Tree_23_3"."Score_3" AS "Score_3" 
FROM "GB_Tree_23_3") AS "Score_Union_CTE_esu_11"), 
"Score_Union_CTE_12" AS 
(WITH "DT_node_lookup_96" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_191" <= 0.14496786892414093) THEN CASE WHEN ("ADS"."Feature_89" <= -1.5416662693023682) THEN CASE WHEN ("ADS"."Feature_412" <= 6.026485443115234) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_414" <= -5.1700615882873535) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_288" <= 9.291326522827148) THEN CASE WHEN ("ADS"."Feature_65" <= 6.436654090881348) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_286" <= -0.1651272028684616) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "FourClass_500" AS "ADS"), 
"DT_node_data_96" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 18 AS count, 3 AS depth, 2 AS parent_id, 1.3058481445550758 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS count, 3 AS depth, 2 AS parent_id, -0.9136930305152585 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 91 AS count, 3 AS depth, 5 AS parent_id, -0.4648505337511833 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 282 AS count, 3 AS depth, 5 AS parent_id, 0.27025919078537075 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 346 AS count, 3 AS depth, 9 AS parent_id, -0.3735997396485163 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 45 AS count, 3 AS depth, 9 AS parent_id, 0.3985964176189368 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 6 AS count, 3 AS depth, 12 AS parent_id, -0.35204390884633907 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 8 AS count, 3 AS depth, 12 AS parent_id, 1.5063305979025434 AS "Estimator") AS "Values"), 
"DT_Output_96" AS 
(SELECT "DT_node_lookup_96"."KEY" AS "KEY", "DT_node_lookup_96".node_id_2 AS node_id_2, "DT_node_data_96".node_id AS node_id, "DT_node_data_96".feature AS feature, "DT_node_data_96".threshold AS threshold, "DT_node_data_96".count AS count, "DT_node_data_96".depth AS depth, "DT_node_data_96".parent_id AS parent_id, "DT_node_data_96"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_96" LEFT OUTER JOIN "DT_node_data_96" ON "DT_node_lookup_96".node_id_2 = "DT_node_data_96".node_id), 
"GB_Tree_24_0" AS 
(SELECT "DT_Output_96"."KEY" AS "KEY", "DT_Output_96"."Estimator" AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3" 
FROM "DT_Output_96"), 
"DT_node_lookup_97" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_448" <= -2.3602428436279297) THEN CASE WHEN ("ADS"."Feature_9" <= 0.7885363698005676) THEN CASE WHEN ("ADS"."Feature_436" <= -0.5076247453689575) THEN 3 ELSE 4 END ELSE 5 END ELSE CASE WHEN ("ADS"."Feature_77" <= 1.3142023086547852) THEN CASE WHEN ("ADS"."Feature_187" <= 8.506351470947266) THEN 8 ELSE 9 END ELSE CASE WHEN ("ADS"."Feature_496" <= -0.02820984646677971) THEN 11 ELSE 12 END END END AS node_id_2 
FROM "FourClass_500" AS "ADS"), 
"DT_node_data_97" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 3 AS depth, 2 AS parent_id, 1.4343401034870626 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 3 AS depth, 2 AS parent_id, 1.2673756829941765 AS "Estimator" UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 2 AS depth, 1 AS parent_id, 1.8975115955850679 AS "Estimator" UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 660 AS count, 3 AS depth, 7 AS parent_id, -0.13748001631173185 AS "Estimator" UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 57 AS count, 3 AS depth, 7 AS parent_id, 0.5433140950137607 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 34 AS count, 3 AS depth, 10 AS parent_id, 1.0486362162545233 AS "Estimator" UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 44 AS count, 3 AS depth, 10 AS parent_id, -0.13335980597090683 AS "Estimator") AS "Values"), 
"DT_Output_97" AS 
(SELECT "DT_node_lookup_97"."KEY" AS "KEY", "DT_node_lookup_97".node_id_2 AS node_id_2, "DT_node_data_97".node_id AS node_id, "DT_node_data_97".feature AS feature, "DT_node_data_97".threshold AS threshold, "DT_node_data_97".count AS count, "DT_node_data_97".depth AS depth, "DT_node_data_97".parent_id AS parent_id, "DT_node_data_97"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_97" LEFT OUTER JOIN "DT_node_data_97" ON "DT_node_lookup_97".node_id_2 = "DT_node_data_97".node_id), 
"GB_Tree_24_1" AS 
(SELECT "DT_Output_97"."KEY" AS "KEY", 0.0 AS "Score_0", "DT_Output_97"."Estimator" AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3" 
FROM "DT_Output_97"), 
"DT_node_lookup_98" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_237" <= 11.945308685302734) THEN CASE WHEN ("ADS"."Feature_152" <= -2.106673240661621) THEN CASE WHEN ("ADS"."Feature_499" <= 1.8280882835388184) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_209" <= -4.747091293334961) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_174" <= -1.942234992980957) THEN 9 ELSE CASE WHEN ("ADS"."Feature_93" <= -0.13941562175750732) THEN 11 ELSE 12 END END END AS node_id_2 
FROM "FourClass_500" AS "ADS"), 
"DT_node_data_98" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 288 AS count, 3 AS depth, 2 AS parent_id, -0.33402127337103904 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 6 AS count, 3 AS depth, 2 AS parent_id, 1.6989173420481454 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 92 AS count, 3 AS depth, 5 AS parent_id, 0.5983764789389083 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 405 AS count, 3 AS depth, 5 AS parent_id, 0.00021637115056289638 AS "Estimator" UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 2 AS depth, 8 AS parent_id, -0.8672752073014128 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 3 AS depth, 10 AS parent_id, 1.101379322198989 AS "Estimator" UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 6 AS count, 3 AS depth, 10 AS parent_id, 1.4171982209208611 AS "Estimator") AS "Values"), 
"DT_Output_98" AS 
(SELECT "DT_node_lookup_98"."KEY" AS "KEY", "DT_node_lookup_98".node_id_2 AS node_id_2, "DT_node_data_98".node_id AS node_id, "DT_node_data_98".feature AS feature, "DT_node_data_98".threshold AS threshold, "DT_node_data_98".count AS count, "DT_node_data_98".depth AS depth, "DT_node_data_98".parent_id AS parent_id, "DT_node_data_98"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_98" LEFT OUTER JOIN "DT_node_data_98" ON "DT_node_lookup_98".node_id_2 = "DT_node_data_98".node_id), 
"GB_Tree_24_2" AS 
(SELECT "DT_Output_98"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", "DT_Output_98"."Estimator" AS "Score_2", 0.0 AS "Score_3" 
FROM "DT_Output_98"), 
"DT_node_lookup_99" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_367" <= 2.1506032943725586) THEN CASE WHEN ("ADS"."Feature_252" <= 2.5081112384796143) THEN CASE WHEN ("ADS"."Feature_338" <= -1.8016631603240967) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_374" <= -13.65125846862793) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_320" <= 1.511625051498413) THEN CASE WHEN ("ADS"."Feature_259" <= -2.2031302452087402) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_178" <= 0.10214949399232864) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "FourClass_500" AS "ADS"), 
"DT_node_data_99" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 129 AS count, 3 AS depth, 2 AS parent_id, -0.11384585492033333 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 207 AS count, 3 AS depth, 2 AS parent_id, 0.5238414758988132 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 3 AS depth, 5 AS parent_id, 1.831625153510109 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 169 AS count, 3 AS depth, 5 AS parent_id, -0.3059183780290533 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS count, 3 AS depth, 9 AS parent_id, 1.460043449400414 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 265 AS count, 3 AS depth, 9 AS parent_id, -0.409941615760251 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 10 AS count, 3 AS depth, 12 AS parent_id, 1.6853522332789563 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 12 AS count, 3 AS depth, 12 AS parent_id, -0.5916928285141879 AS "Estimator") AS "Values"), 
"DT_Output_99" AS 
(SELECT "DT_node_lookup_99"."KEY" AS "KEY", "DT_node_lookup_99".node_id_2 AS node_id_2, "DT_node_data_99".node_id AS node_id, "DT_node_data_99".feature AS feature, "DT_node_data_99".threshold AS threshold, "DT_node_data_99".count AS count, "DT_node_data_99".depth AS depth, "DT_node_data_99".parent_id AS parent_id, "DT_node_data_99"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_99" LEFT OUTER JOIN "DT_node_data_99" ON "DT_node_lookup_99".node_id_2 = "DT_node_data_99".node_id), 
"GB_Tree_24_3" AS 
(SELECT "DT_Output_99"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", "DT_Output_99"."Estimator" AS "Score_3" 
FROM "DT_Output_99"), 
"DT_node_lookup_100" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_436" <= -4.3499321937561035) THEN CASE WHEN ("ADS"."Feature_474" <= -0.7155667543411255) THEN CASE WHEN ("ADS"."Feature_144" <= -0.9624770283699036) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_18" <= -0.4861402213573456) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_146" <= -2.3733723163604736) THEN CASE WHEN ("ADS"."Feature_123" <= 0.4763340353965759) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_249" <= 5.47565221786499) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "FourClass_500" AS "ADS"), 
"DT_node_data_100" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 6 AS count, 3 AS depth, 2 AS parent_id, 0.8506384418085942 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 36 AS count, 3 AS depth, 2 AS parent_id, -0.8736051099162683 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 62 AS count, 3 AS depth, 5 AS parent_id, -0.007086926369674237 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 76 AS count, 3 AS depth, 5 AS parent_id, 0.8870381363348785 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 3 AS depth, 9 AS parent_id, 2.292876265368897 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 3 AS depth, 9 AS parent_id, 1.3504770931775991 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 368 AS count, 3 AS depth, 12 AS parent_id, -0.33238849051676617 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 248 AS count, 3 AS depth, 12 AS parent_id, 0.11068745541809909 AS "Estimator") AS "Values"), 
"DT_Output_100" AS 
(SELECT "DT_node_lookup_100"."KEY" AS "KEY", "DT_node_lookup_100".node_id_2 AS node_id_2, "DT_node_data_100".node_id AS node_id, "DT_node_data_100".feature AS feature, "DT_node_data_100".threshold AS threshold, "DT_node_data_100".count AS count, "DT_node_data_100".depth AS depth, "DT_node_data_100".parent_id AS parent_id, "DT_node_data_100"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_100" LEFT OUTER JOIN "DT_node_data_100" ON "DT_node_lookup_100".node_id_2 = "DT_node_data_100".node_id), 
"GB_Tree_25_0" AS 
(SELECT "DT_Output_100"."KEY" AS "KEY", "DT_Output_100"."Estimator" AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3" 
FROM "DT_Output_100"), 
"DT_node_lookup_101" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_135" <= -1.9373071193695068) THEN CASE WHEN ("ADS"."Feature_479" <= -2.1959104537963867) THEN CASE WHEN ("ADS"."Feature_197" <= 7.303664207458496) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_215" <= -4.9801225662231445) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_208" <= 3.5956954956054688) THEN CASE WHEN ("ADS"."Feature_448" <= 0.3867673873901367) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_170" <= -1.7157410383224487) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "FourClass_500" AS "ADS"), 
"DT_node_data_101" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 3 AS depth, 2 AS parent_id, 1.7275768954070048 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 3 AS depth, 2 AS parent_id, 1.141865926395139 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 58 AS count, 3 AS depth, 5 AS parent_id, 0.2809586476725915 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 222 AS count, 3 AS depth, 5 AS parent_id, -0.47135506435291696 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 232 AS count, 3 AS depth, 9 AS parent_id, 0.44834241822123505 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 140 AS count, 3 AS depth, 9 AS parent_id, -0.10332436027487925 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS count, 3 AS depth, 12 AS parent_id, 1.377526404256039 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 140 AS count, 3 AS depth, 12 AS parent_id, -0.40113853102382907 AS "Estimator") AS "Values"), 
"DT_Output_101" AS 
(SELECT "DT_node_lookup_101"."KEY" AS "KEY", "DT_node_lookup_101".node_id_2 AS node_id_2, "DT_node_data_101".node_id AS node_id, "DT_node_data_101".feature AS feature, "DT_node_data_101".threshold AS threshold, "DT_node_data_101".count AS count, "DT_node_data_101".depth AS depth, "DT_node_data_101".parent_id AS parent_id, "DT_node_data_101"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_101" LEFT OUTER JOIN "DT_node_data_101" ON "DT_node_lookup_101".node_id_2 = "DT_node_data_101".node_id), 
"GB_Tree_25_1" AS 
(SELECT "DT_Output_101"."KEY" AS "KEY", 0.0 AS "Score_0", "DT_Output_101"."Estimator" AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3" 
FROM "DT_Output_101"), 
"DT_node_lookup_102" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_124" <= -2.0160017013549805) THEN CASE WHEN ("ADS"."Feature_167" <= 0.9572758674621582) THEN CASE WHEN ("ADS"."Feature_137" <= 0.17344486713409424) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_443" <= 0.04445737600326538) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_456" <= -3.638071060180664) THEN CASE WHEN ("ADS"."Feature_245" <= -0.8269062638282776) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_35" <= 1.5998024940490723) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "FourClass_500" AS "ADS"), 
"DT_node_data_102" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS count, 3 AS depth, 2 AS parent_id, 1.3186683488091864 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 3 AS depth, 2 AS parent_id, 1.8795907167610943 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 3 AS depth, 5 AS parent_id, -0.85766453530227 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 5 AS parent_id, -0.8169916797357805 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 41 AS count, 3 AS depth, 9 AS parent_id, 0.8813802947214456 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 171 AS count, 3 AS depth, 9 AS parent_id, 0.0791448878752183 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 544 AS count, 3 AS depth, 12 AS parent_id, -0.19000458883057317 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 33 AS count, 3 AS depth, 12 AS parent_id, 0.7060582506675871 AS "Estimator") AS "Values"), 
"DT_Output_102" AS 
(SELECT "DT_node_lookup_102"."KEY" AS "KEY", "DT_node_lookup_102".node_id_2 AS node_id_2, "DT_node_data_102".node_id AS node_id, "DT_node_data_102".feature AS feature, "DT_node_data_102".threshold AS threshold, "DT_node_data_102".count AS count, "DT_node_data_102".depth AS depth, "DT_node_data_102".parent_id AS parent_id, "DT_node_data_102"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_102" LEFT OUTER JOIN "DT_node_data_102" ON "DT_node_lookup_102".node_id_2 = "DT_node_data_102".node_id), 
"GB_Tree_25_2" AS 
(SELECT "DT_Output_102"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", "DT_Output_102"."Estimator" AS "Score_2", 0.0 AS "Score_3" 
FROM "DT_Output_102"), 
"DT_node_lookup_103" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_480" <= -6.869264602661133) THEN CASE WHEN ("ADS"."Feature_232" <= -1.7339394092559814) THEN CASE WHEN ("ADS"."Feature_286" <= 0.5823516249656677) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_468" <= -1.775136947631836) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_142" <= 3.0307250022888184) THEN CASE WHEN ("ADS"."Feature_308" <= 4.5561699867248535) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_400" <= 5.244524955749512) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "FourClass_500" AS "ADS"), 
"DT_node_data_103" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 2 AS parent_id, 1.4377995676705597 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 2 AS parent_id, 1.629783443038479 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 3 AS depth, 5 AS parent_id, 1.4757631917882168 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 90 AS count, 3 AS depth, 5 AS parent_id, -0.7347150819791456 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 412 AS count, 3 AS depth, 9 AS parent_id, 0.06756503014370077 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 110 AS count, 3 AS depth, 9 AS parent_id, -0.6475789542097932 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 146 AS count, 3 AS depth, 12 AS parent_id, 0.18831509198066454 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 38 AS count, 3 AS depth, 12 AS parent_id, 0.9451601868340386 AS "Estimator") AS "Values"), 
"DT_Output_103" AS 
(SELECT "DT_node_lookup_103"."KEY" AS "KEY", "DT_node_lookup_103".node_id_2 AS node_id_2, "DT_node_data_103".node_id AS node_id, "DT_node_data_103".feature AS feature, "DT_node_data_103".threshold AS threshold, "DT_node_data_103".count AS count, "DT_node_data_103".depth AS depth, "DT_node_data_103".parent_id AS parent_id, "DT_node_data_103"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_103" LEFT OUTER JOIN "DT_node_data_103" ON "DT_node_lookup_103".node_id_2 = "DT_node_data_103".node_id), 
"GB_Tree_25_3" AS 
(SELECT "DT_Output_103"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", "DT_Output_103"."Estimator" AS "Score_3" 
FROM "DT_Output_103")
 SELECT "Score_Union_CTE_esu_12"."KEY", "Score_Union_CTE_esu_12"."Score_0", "Score_Union_CTE_esu_12"."Score_1", "Score_Union_CTE_esu_12"."Score_2", "Score_Union_CTE_esu_12"."Score_3" 
FROM (SELECT "GB_Tree_24_0"."KEY" AS "KEY", "GB_Tree_24_0"."Score_0" AS "Score_0", "GB_Tree_24_0"."Score_1" AS "Score_1", "GB_Tree_24_0"."Score_2" AS "Score_2", "GB_Tree_24_0"."Score_3" AS "Score_3" 
FROM "GB_Tree_24_0" UNION ALL SELECT "GB_Tree_24_1"."KEY" AS "KEY", "GB_Tree_24_1"."Score_0" AS "Score_0", "GB_Tree_24_1"."Score_1" AS "Score_1", "GB_Tree_24_1"."Score_2" AS "Score_2", "GB_Tree_24_1"."Score_3" AS "Score_3" 
FROM "GB_Tree_24_1" UNION ALL SELECT "GB_Tree_24_2"."KEY" AS "KEY", "GB_Tree_24_2"."Score_0" AS "Score_0", "GB_Tree_24_2"."Score_1" AS "Score_1", "GB_Tree_24_2"."Score_2" AS "Score_2", "GB_Tree_24_2"."Score_3" AS "Score_3" 
FROM "GB_Tree_24_2" UNION ALL SELECT "GB_Tree_24_3"."KEY" AS "KEY", "GB_Tree_24_3"."Score_0" AS "Score_0", "GB_Tree_24_3"."Score_1" AS "Score_1", "GB_Tree_24_3"."Score_2" AS "Score_2", "GB_Tree_24_3"."Score_3" AS "Score_3" 
FROM "GB_Tree_24_3" UNION ALL SELECT "GB_Tree_25_0"."KEY" AS "KEY", "GB_Tree_25_0"."Score_0" AS "Score_0", "GB_Tree_25_0"."Score_1" AS "Score_1", "GB_Tree_25_0"."Score_2" AS "Score_2", "GB_Tree_25_0"."Score_3" AS "Score_3" 
FROM "GB_Tree_25_0" UNION ALL SELECT "GB_Tree_25_1"."KEY" AS "KEY", "GB_Tree_25_1"."Score_0" AS "Score_0", "GB_Tree_25_1"."Score_1" AS "Score_1", "GB_Tree_25_1"."Score_2" AS "Score_2", "GB_Tree_25_1"."Score_3" AS "Score_3" 
FROM "GB_Tree_25_1" UNION ALL SELECT "GB_Tree_25_2"."KEY" AS "KEY", "GB_Tree_25_2"."Score_0" AS "Score_0", "GB_Tree_25_2"."Score_1" AS "Score_1", "GB_Tree_25_2"."Score_2" AS "Score_2", "GB_Tree_25_2"."Score_3" AS "Score_3" 
FROM "GB_Tree_25_2" UNION ALL SELECT "GB_Tree_25_3"."KEY" AS "KEY", "GB_Tree_25_3"."Score_0" AS "Score_0", "GB_Tree_25_3"."Score_1" AS "Score_1", "GB_Tree_25_3"."Score_2" AS "Score_2", "GB_Tree_25_3"."Score_3" AS "Score_3" 
FROM "GB_Tree_25_3") AS "Score_Union_CTE_esu_12"), 
"Score_Union_CTE_13" AS 
(WITH "DT_node_lookup_104" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_444" <= -1.7194440364837646) THEN CASE WHEN ("ADS"."Feature_330" <= -0.09368827939033508) THEN CASE WHEN ("ADS"."Feature_407" <= -1.3221293687820435) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_249" <= -43.22897720336914) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_129" <= 2.024876594543457) THEN CASE WHEN ("ADS"."Feature_338" <= -4.491007328033447) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_215" <= 8.649635314941406) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "FourClass_500" AS "ADS"), 
"DT_node_data_104" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 2 AS parent_id, 1.3656450141933218 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 11 AS count, 3 AS depth, 2 AS parent_id, -0.8743474797062096 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS count, 3 AS depth, 5 AS parent_id, -0.8482965718638976 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 16 AS count, 3 AS depth, 5 AS parent_id, 1.4863466300203712 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 114 AS count, 3 AS depth, 9 AS parent_id, 0.24454164820643332 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 379 AS count, 3 AS depth, 9 AS parent_id, -0.3644692825756441 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 255 AS count, 3 AS depth, 12 AS parent_id, 0.10805490220303006 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 20 AS count, 3 AS depth, 12 AS parent_id, 1.2527043432261311 AS "Estimator") AS "Values"), 
"DT_Output_104" AS 
(SELECT "DT_node_lookup_104"."KEY" AS "KEY", "DT_node_lookup_104".node_id_2 AS node_id_2, "DT_node_data_104".node_id AS node_id, "DT_node_data_104".feature AS feature, "DT_node_data_104".threshold AS threshold, "DT_node_data_104".count AS count, "DT_node_data_104".depth AS depth, "DT_node_data_104".parent_id AS parent_id, "DT_node_data_104"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_104" LEFT OUTER JOIN "DT_node_data_104" ON "DT_node_lookup_104".node_id_2 = "DT_node_data_104".node_id), 
"GB_Tree_26_0" AS 
(SELECT "DT_Output_104"."KEY" AS "KEY", "DT_Output_104"."Estimator" AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3" 
FROM "DT_Output_104"), 
"DT_node_lookup_105" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_324" <= -5.2307891845703125) THEN CASE WHEN ("ADS"."Feature_364" <= 1.9264006614685059) THEN CASE WHEN ("ADS"."Feature_319" <= -2.3106682300567627) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_79" <= 1.3357795476913452) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_208" <= -7.603923797607422) THEN CASE WHEN ("ADS"."Feature_78" <= 0.5604691505432129) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_480" <= -11.406511306762695) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "FourClass_500" AS "ADS"), 
"DT_node_data_105" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 3 AS depth, 2 AS parent_id, 1.6992965929942196 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 169 AS count, 3 AS depth, 2 AS parent_id, -0.4794387415750694 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 3 AS depth, 5 AS parent_id, 1.2527443041422326 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 5 AS parent_id, 2.7812833415448748 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 44 AS count, 3 AS depth, 9 AS parent_id, 0.35285452656733773 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 16 AS count, 3 AS depth, 9 AS parent_id, 1.375506978335143 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 19 AS count, 3 AS depth, 12 AS parent_id, 0.9236913976720416 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 545 AS count, 3 AS depth, 12 AS parent_id, -0.029156051045457623 AS "Estimator") AS "Values"), 
"DT_Output_105" AS 
(SELECT "DT_node_lookup_105"."KEY" AS "KEY", "DT_node_lookup_105".node_id_2 AS node_id_2, "DT_node_data_105".node_id AS node_id, "DT_node_data_105".feature AS feature, "DT_node_data_105".threshold AS threshold, "DT_node_data_105".count AS count, "DT_node_data_105".depth AS depth, "DT_node_data_105".parent_id AS parent_id, "DT_node_data_105"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_105" LEFT OUTER JOIN "DT_node_data_105" ON "DT_node_lookup_105".node_id_2 = "DT_node_data_105".node_id), 
"GB_Tree_26_1" AS 
(SELECT "DT_Output_105"."KEY" AS "KEY", 0.0 AS "Score_0", "DT_Output_105"."Estimator" AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3" 
FROM "DT_Output_105"), 
"DT_node_lookup_106" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_345" <= -0.5780743360519409) THEN CASE WHEN ("ADS"."Feature_267" <= -8.467900276184082) THEN CASE WHEN ("ADS"."Feature_334" <= 0.21539553999900818) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_152" <= 9.249713897705078) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_377" <= -1.1021769046783447) THEN CASE WHEN ("ADS"."Feature_206" <= -0.48919886350631714) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_496" <= 2.0000977516174316) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "FourClass_500" AS "ADS"), 
"DT_node_data_106" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 9 AS count, 3 AS depth, 2 AS parent_id, 1.5444216425486748 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS count, 3 AS depth, 2 AS parent_id, -0.9515135903807455 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 198 AS count, 3 AS depth, 5 AS parent_id, -0.4870343065432449 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 7 AS count, 3 AS depth, 5 AS parent_id, 1.034981464143157 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 72 AS count, 3 AS depth, 9 AS parent_id, 0.8412891224359593 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 151 AS count, 3 AS depth, 9 AS parent_id, 0.09839909762953873 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 354 AS count, 3 AS depth, 12 AS parent_id, -0.11855621829901358 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS count, 3 AS depth, 12 AS parent_id, 1.5808525928314232 AS "Estimator") AS "Values"), 
"DT_Output_106" AS 
(SELECT "DT_node_lookup_106"."KEY" AS "KEY", "DT_node_lookup_106".node_id_2 AS node_id_2, "DT_node_data_106".node_id AS node_id, "DT_node_data_106".feature AS feature, "DT_node_data_106".threshold AS threshold, "DT_node_data_106".count AS count, "DT_node_data_106".depth AS depth, "DT_node_data_106".parent_id AS parent_id, "DT_node_data_106"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_106" LEFT OUTER JOIN "DT_node_data_106" ON "DT_node_lookup_106".node_id_2 = "DT_node_data_106".node_id), 
"GB_Tree_26_2" AS 
(SELECT "DT_Output_106"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", "DT_Output_106"."Estimator" AS "Score_2", 0.0 AS "Score_3" 
FROM "DT_Output_106"), 
"DT_node_lookup_107" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_497" <= 3.6597704887390137) THEN CASE WHEN ("ADS"."Feature_223" <= -2.5940821170806885) THEN CASE WHEN ("ADS"."Feature_260" <= -0.4995301365852356) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_483" <= 2.0281519889831543) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_281" <= -0.1933506429195404) THEN CASE WHEN ("ADS"."Feature_404" <= -2.070298433303833) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_27" <= 0.16982142627239227) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "FourClass_500" AS "ADS"), 
"DT_node_data_107" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 2 AS parent_id, 1.665351079562769 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 3 AS depth, 2 AS parent_id, 1.9375159733374114 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 381 AS count, 3 AS depth, 5 AS parent_id, -0.28318304838755426 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 233 AS count, 3 AS depth, 5 AS parent_id, 0.1459938645734034 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 26 AS count, 3 AS depth, 9 AS parent_id, -0.04952044806215916 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 50 AS count, 3 AS depth, 9 AS parent_id, 1.0310511715296653 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 54 AS count, 3 AS depth, 12 AS parent_id, 0.41865726196615627 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 53 AS count, 3 AS depth, 12 AS parent_id, -0.6906295233524178 AS "Estimator") AS "Values"), 
"DT_Output_107" AS 
(SELECT "DT_node_lookup_107"."KEY" AS "KEY", "DT_node_lookup_107".node_id_2 AS node_id_2, "DT_node_data_107".node_id AS node_id, "DT_node_data_107".feature AS feature, "DT_node_data_107".threshold AS threshold, "DT_node_data_107".count AS count, "DT_node_data_107".depth AS depth, "DT_node_data_107".parent_id AS parent_id, "DT_node_data_107"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_107" LEFT OUTER JOIN "DT_node_data_107" ON "DT_node_lookup_107".node_id_2 = "DT_node_data_107".node_id), 
"GB_Tree_26_3" AS 
(SELECT "DT_Output_107"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", "DT_Output_107"."Estimator" AS "Score_3" 
FROM "DT_Output_107"), 
"DT_node_lookup_108" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_100" <= 4.8956427574157715) THEN CASE WHEN ("ADS"."Feature_266" <= 3.12361216545105) THEN CASE WHEN ("ADS"."Feature_148" <= -1.2132904529571533) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_120" <= 0.292441189289093) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_224" <= -1.3518764972686768) THEN CASE WHEN ("ADS"."Feature_302" <= 0.061695560812950134) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_4" <= -2.8189265727996826) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "FourClass_500" AS "ADS"), 
"DT_node_data_108" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 193 AS count, 3 AS depth, 2 AS parent_id, -0.4064325612236137 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 268 AS count, 3 AS depth, 2 AS parent_id, 0.14509929133658475 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 100 AS count, 3 AS depth, 5 AS parent_id, 0.0963424360027173 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 67 AS count, 3 AS depth, 5 AS parent_id, 0.7960372909198833 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 7 AS count, 3 AS depth, 9 AS parent_id, 1.3922709871446974 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS count, 3 AS depth, 9 AS parent_id, -0.892281249860415 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 3 AS depth, 12 AS parent_id, 1.8105950176326835 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 158 AS count, 3 AS depth, 12 AS parent_id, -0.5916708302433076 AS "Estimator") AS "Values"), 
"DT_Output_108" AS 
(SELECT "DT_node_lookup_108"."KEY" AS "KEY", "DT_node_lookup_108".node_id_2 AS node_id_2, "DT_node_data_108".node_id AS node_id, "DT_node_data_108".feature AS feature, "DT_node_data_108".threshold AS threshold, "DT_node_data_108".count AS count, "DT_node_data_108".depth AS depth, "DT_node_data_108".parent_id AS parent_id, "DT_node_data_108"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_108" LEFT OUTER JOIN "DT_node_data_108" ON "DT_node_lookup_108".node_id_2 = "DT_node_data_108".node_id), 
"GB_Tree_27_0" AS 
(SELECT "DT_Output_108"."KEY" AS "KEY", "DT_Output_108"."Estimator" AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3" 
FROM "DT_Output_108"), 
"DT_node_lookup_109" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_42" <= 4.552486419677734) THEN CASE WHEN ("ADS"."Feature_456" <= 1.2209151983261108) THEN CASE WHEN ("ADS"."Feature_273" <= 1.9101955890655518) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_109" <= 4.93331241607666) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_164" <= 1.8912267684936523) THEN CASE WHEN ("ADS"."Feature_258" <= -1.9095062017440796) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_431" <= 0.31289413571357727) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "FourClass_500" AS "ADS"), 
"DT_node_data_109" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 362 AS count, 3 AS depth, 2 AS parent_id, -0.1543109847077024 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 11 AS count, 3 AS depth, 2 AS parent_id, 1.1126711095292174 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 221 AS count, 3 AS depth, 5 AS parent_id, 0.43496737364609317 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 53 AS count, 3 AS depth, 5 AS parent_id, -0.43629575256428227 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 3 AS depth, 9 AS parent_id, 1.5151392361465608 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 143 AS count, 3 AS depth, 9 AS parent_id, -0.5494456852886799 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 6 AS count, 3 AS depth, 12 AS parent_id, 1.27646531994358 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 3 AS depth, 12 AS parent_id, -0.85173834339783 AS "Estimator") AS "Values"), 
"DT_Output_109" AS 
(SELECT "DT_node_lookup_109"."KEY" AS "KEY", "DT_node_lookup_109".node_id_2 AS node_id_2, "DT_node_data_109".node_id AS node_id, "DT_node_data_109".feature AS feature, "DT_node_data_109".threshold AS threshold, "DT_node_data_109".count AS count, "DT_node_data_109".depth AS depth, "DT_node_data_109".parent_id AS parent_id, "DT_node_data_109"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_109" LEFT OUTER JOIN "DT_node_data_109" ON "DT_node_lookup_109".node_id_2 = "DT_node_data_109".node_id), 
"GB_Tree_27_1" AS 
(SELECT "DT_Output_109"."KEY" AS "KEY", 0.0 AS "Score_0", "DT_Output_109"."Estimator" AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3" 
FROM "DT_Output_109"), 
"DT_node_lookup_110" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_488" <= -1.5199167728424072) THEN CASE WHEN ("ADS"."Feature_329" <= 0.25887995958328247) THEN CASE WHEN ("ADS"."Feature_404" <= 0.24792397022247314) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_302" <= 1.7524622678756714) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_412" <= 5.903281211853027) THEN CASE WHEN ("ADS"."Feature_18" <= -6.451120376586914) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_72" <= -4.446750164031982) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "FourClass_500" AS "ADS"), 
"DT_node_data_110" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 16 AS count, 3 AS depth, 2 AS parent_id, 0.33446984309744276 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 17 AS count, 3 AS depth, 2 AS parent_id, 1.5191734917730244 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 16 AS count, 3 AS depth, 5 AS parent_id, -0.9055533527937671 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 5 AS parent_id, 1.2744462645104948 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 76 AS count, 3 AS depth, 9 AS parent_id, 0.43986611059820124 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 550 AS count, 3 AS depth, 9 AS parent_id, -0.21700897147523537 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 35 AS count, 3 AS depth, 12 AS parent_id, 0.9906609069287147 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 89 AS count, 3 AS depth, 12 AS parent_id, -0.005652033496852366 AS "Estimator") AS "Values"), 
"DT_Output_110" AS 
(SELECT "DT_node_lookup_110"."KEY" AS "KEY", "DT_node_lookup_110".node_id_2 AS node_id_2, "DT_node_data_110".node_id AS node_id, "DT_node_data_110".feature AS feature, "DT_node_data_110".threshold AS threshold, "DT_node_data_110".count AS count, "DT_node_data_110".depth AS depth, "DT_node_data_110".parent_id AS parent_id, "DT_node_data_110"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_110" LEFT OUTER JOIN "DT_node_data_110" ON "DT_node_lookup_110".node_id_2 = "DT_node_data_110".node_id), 
"GB_Tree_27_2" AS 
(SELECT "DT_Output_110"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", "DT_Output_110"."Estimator" AS "Score_2", 0.0 AS "Score_3" 
FROM "DT_Output_110"), 
"DT_node_lookup_111" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_221" <= -1.9479866027832031) THEN CASE WHEN ("ADS"."Feature_429" <= 0.20803028345108032) THEN CASE WHEN ("ADS"."Feature_237" <= 1.0903377532958984) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_462" <= -0.1258264034986496) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_228" <= 2.137423515319824) THEN CASE WHEN ("ADS"."Feature_493" <= 1.100996971130371) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_367" <= -3.7530674934387207) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "FourClass_500" AS "ADS"), 
"DT_node_data_111" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 6 AS count, 3 AS depth, 2 AS parent_id, 1.4492031081408427 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS count, 3 AS depth, 2 AS parent_id, 1.1498807645324072 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 7 AS count, 3 AS depth, 5 AS parent_id, -0.8570967029188833 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS count, 3 AS depth, 5 AS parent_id, 1.122882003680292 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 438 AS count, 3 AS depth, 9 AS parent_id, -0.28330800713975257 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 73 AS count, 3 AS depth, 9 AS parent_id, 0.40894647984996724 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 66 AS count, 3 AS depth, 12 AS parent_id, 0.6997434755213483 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 202 AS count, 3 AS depth, 12 AS parent_id, 0.008595480368704335 AS "Estimator") AS "Values"), 
"DT_Output_111" AS 
(SELECT "DT_node_lookup_111"."KEY" AS "KEY", "DT_node_lookup_111".node_id_2 AS node_id_2, "DT_node_data_111".node_id AS node_id, "DT_node_data_111".feature AS feature, "DT_node_data_111".threshold AS threshold, "DT_node_data_111".count AS count, "DT_node_data_111".depth AS depth, "DT_node_data_111".parent_id AS parent_id, "DT_node_data_111"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_111" LEFT OUTER JOIN "DT_node_data_111" ON "DT_node_lookup_111".node_id_2 = "DT_node_data_111".node_id), 
"GB_Tree_27_3" AS 
(SELECT "DT_Output_111"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", "DT_Output_111"."Estimator" AS "Score_3" 
FROM "DT_Output_111")
 SELECT "Score_Union_CTE_esu_13"."KEY", "Score_Union_CTE_esu_13"."Score_0", "Score_Union_CTE_esu_13"."Score_1", "Score_Union_CTE_esu_13"."Score_2", "Score_Union_CTE_esu_13"."Score_3" 
FROM (SELECT "GB_Tree_26_0"."KEY" AS "KEY", "GB_Tree_26_0"."Score_0" AS "Score_0", "GB_Tree_26_0"."Score_1" AS "Score_1", "GB_Tree_26_0"."Score_2" AS "Score_2", "GB_Tree_26_0"."Score_3" AS "Score_3" 
FROM "GB_Tree_26_0" UNION ALL SELECT "GB_Tree_26_1"."KEY" AS "KEY", "GB_Tree_26_1"."Score_0" AS "Score_0", "GB_Tree_26_1"."Score_1" AS "Score_1", "GB_Tree_26_1"."Score_2" AS "Score_2", "GB_Tree_26_1"."Score_3" AS "Score_3" 
FROM "GB_Tree_26_1" UNION ALL SELECT "GB_Tree_26_2"."KEY" AS "KEY", "GB_Tree_26_2"."Score_0" AS "Score_0", "GB_Tree_26_2"."Score_1" AS "Score_1", "GB_Tree_26_2"."Score_2" AS "Score_2", "GB_Tree_26_2"."Score_3" AS "Score_3" 
FROM "GB_Tree_26_2" UNION ALL SELECT "GB_Tree_26_3"."KEY" AS "KEY", "GB_Tree_26_3"."Score_0" AS "Score_0", "GB_Tree_26_3"."Score_1" AS "Score_1", "GB_Tree_26_3"."Score_2" AS "Score_2", "GB_Tree_26_3"."Score_3" AS "Score_3" 
FROM "GB_Tree_26_3" UNION ALL SELECT "GB_Tree_27_0"."KEY" AS "KEY", "GB_Tree_27_0"."Score_0" AS "Score_0", "GB_Tree_27_0"."Score_1" AS "Score_1", "GB_Tree_27_0"."Score_2" AS "Score_2", "GB_Tree_27_0"."Score_3" AS "Score_3" 
FROM "GB_Tree_27_0" UNION ALL SELECT "GB_Tree_27_1"."KEY" AS "KEY", "GB_Tree_27_1"."Score_0" AS "Score_0", "GB_Tree_27_1"."Score_1" AS "Score_1", "GB_Tree_27_1"."Score_2" AS "Score_2", "GB_Tree_27_1"."Score_3" AS "Score_3" 
FROM "GB_Tree_27_1" UNION ALL SELECT "GB_Tree_27_2"."KEY" AS "KEY", "GB_Tree_27_2"."Score_0" AS "Score_0", "GB_Tree_27_2"."Score_1" AS "Score_1", "GB_Tree_27_2"."Score_2" AS "Score_2", "GB_Tree_27_2"."Score_3" AS "Score_3" 
FROM "GB_Tree_27_2" UNION ALL SELECT "GB_Tree_27_3"."KEY" AS "KEY", "GB_Tree_27_3"."Score_0" AS "Score_0", "GB_Tree_27_3"."Score_1" AS "Score_1", "GB_Tree_27_3"."Score_2" AS "Score_2", "GB_Tree_27_3"."Score_3" AS "Score_3" 
FROM "GB_Tree_27_3") AS "Score_Union_CTE_esu_13"), 
"Score_Union_CTE_14" AS 
(WITH "DT_node_lookup_112" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_476" <= -1.9576969146728516) THEN CASE WHEN ("ADS"."Feature_78" <= 0.6354920864105225) THEN CASE WHEN ("ADS"."Feature_120" <= 1.2049314975738525) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_297" <= 2.1550216674804688) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_289" <= 2.683239698410034) THEN CASE WHEN ("ADS"."Feature_370" <= -2.3089780807495117) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_397" <= 2.663095474243164) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "FourClass_500" AS "ADS"), 
"DT_node_data_112" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 12 AS count, 3 AS depth, 2 AS parent_id, -0.5498041476665307 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS count, 3 AS depth, 2 AS parent_id, 1.4088915808318494 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 8 AS count, 3 AS depth, 5 AS parent_id, 1.6830216365658621 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 5 AS parent_id, -0.8514843160744646 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS count, 3 AS depth, 9 AS parent_id, 1.3925395575593458 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 531 AS count, 3 AS depth, 9 AS parent_id, -0.20447144662022854 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 136 AS count, 3 AS depth, 12 AS parent_id, -0.08271170780527805 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 103 AS count, 3 AS depth, 12 AS parent_id, 0.570217448502879 AS "Estimator") AS "Values"), 
"DT_Output_112" AS 
(SELECT "DT_node_lookup_112"."KEY" AS "KEY", "DT_node_lookup_112".node_id_2 AS node_id_2, "DT_node_data_112".node_id AS node_id, "DT_node_data_112".feature AS feature, "DT_node_data_112".threshold AS threshold, "DT_node_data_112".count AS count, "DT_node_data_112".depth AS depth, "DT_node_data_112".parent_id AS parent_id, "DT_node_data_112"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_112" LEFT OUTER JOIN "DT_node_data_112" ON "DT_node_lookup_112".node_id_2 = "DT_node_data_112".node_id), 
"GB_Tree_28_0" AS 
(SELECT "DT_Output_112"."KEY" AS "KEY", "DT_Output_112"."Estimator" AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3" 
FROM "DT_Output_112"), 
"DT_node_lookup_113" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_250" <= -1.1058577299118042) THEN CASE WHEN ("ADS"."Feature_18" <= -2.011629819869995) THEN CASE WHEN ("ADS"."Feature_125" <= 0.2743235230445862) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_487" <= 0.9657654762268066) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_191" <= 12.260612487792969) THEN CASE WHEN ("ADS"."Feature_381" <= -0.07114806771278381) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_240" <= 1.520827293395996) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "FourClass_500" AS "ADS"), 
"DT_node_data_113" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 17 AS count, 3 AS depth, 2 AS parent_id, 1.5305639268450848 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 16 AS count, 3 AS depth, 2 AS parent_id, 0.21794142811523393 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 70 AS count, 3 AS depth, 5 AS parent_id, -0.15538178562001956 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 10 AS count, 3 AS depth, 5 AS parent_id, 1.174832729813225 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 320 AS count, 3 AS depth, 9 AS parent_id, -0.34935181882883853 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 354 AS count, 3 AS depth, 9 AS parent_id, 0.08747444333693989 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 12 AS count, 3 AS depth, 12 AS parent_id, 1.3325014115350595 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 12 AS parent_id, -0.9620665348170172 AS "Estimator") AS "Values"), 
"DT_Output_113" AS 
(SELECT "DT_node_lookup_113"."KEY" AS "KEY", "DT_node_lookup_113".node_id_2 AS node_id_2, "DT_node_data_113".node_id AS node_id, "DT_node_data_113".feature AS feature, "DT_node_data_113".threshold AS threshold, "DT_node_data_113".count AS count, "DT_node_data_113".depth AS depth, "DT_node_data_113".parent_id AS parent_id, "DT_node_data_113"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_113" LEFT OUTER JOIN "DT_node_data_113" ON "DT_node_lookup_113".node_id_2 = "DT_node_data_113".node_id), 
"GB_Tree_28_1" AS 
(SELECT "DT_Output_113"."KEY" AS "KEY", 0.0 AS "Score_0", "DT_Output_113"."Estimator" AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3" 
FROM "DT_Output_113"), 
"DT_node_lookup_114" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_271" <= 3.235647201538086) THEN CASE WHEN ("ADS"."Feature_352" <= -1.4843168258666992) THEN CASE WHEN ("ADS"."Feature_88" <= -0.3458995223045349) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_3" <= -9.585835456848145) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_427" <= -6.348844528198242) THEN CASE WHEN ("ADS"."Feature_402" <= -5.598583698272705) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_189" <= 10.852361679077148) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "FourClass_500" AS "ADS"), 
"DT_node_data_114" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 15 AS count, 3 AS depth, 2 AS parent_id, -0.6762658537140348 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 26 AS count, 3 AS depth, 2 AS parent_id, 1.1164951607372622 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 19 AS count, 3 AS depth, 5 AS parent_id, 0.8520801290653244 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 550 AS count, 3 AS depth, 5 AS parent_id, -0.19382184916117315 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS count, 3 AS depth, 9 AS parent_id, -0.8726246445702444 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 17 AS count, 3 AS depth, 9 AS parent_id, 1.304186842531775 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 164 AS count, 3 AS depth, 12 AS parent_id, 0.08910416630983943 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS count, 3 AS depth, 12 AS parent_id, 1.7419426476937554 AS "Estimator") AS "Values"), 
"DT_Output_114" AS 
(SELECT "DT_node_lookup_114"."KEY" AS "KEY", "DT_node_lookup_114".node_id_2 AS node_id_2, "DT_node_data_114".node_id AS node_id, "DT_node_data_114".feature AS feature, "DT_node_data_114".threshold AS threshold, "DT_node_data_114".count AS count, "DT_node_data_114".depth AS depth, "DT_node_data_114".parent_id AS parent_id, "DT_node_data_114"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_114" LEFT OUTER JOIN "DT_node_data_114" ON "DT_node_lookup_114".node_id_2 = "DT_node_data_114".node_id), 
"GB_Tree_28_2" AS 
(SELECT "DT_Output_114"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", "DT_Output_114"."Estimator" AS "Score_2", 0.0 AS "Score_3" 
FROM "DT_Output_114"), 
"DT_node_lookup_115" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_179" <= -4.30672025680542) THEN CASE WHEN ("ADS"."Feature_260" <= -2.1836819648742676) THEN CASE WHEN ("ADS"."Feature_405" <= 0.690717875957489) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_119" <= -1.7889668941497803) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_343" <= -1.5203866958618164) THEN CASE WHEN ("ADS"."Feature_18" <= 4.087801456451416) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_333" <= 1.6935274600982666) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "FourClass_500" AS "ADS"), 
"DT_node_data_115" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 3 AS depth, 2 AS parent_id, 1.593828107778389 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 2 AS parent_id, 1.392549447234893 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 3 AS depth, 5 AS parent_id, 1.5391374159065339 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 207 AS count, 3 AS depth, 5 AS parent_id, -0.43416049883707863 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 217 AS count, 3 AS depth, 9 AS parent_id, -0.37556219855089473 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 65 AS count, 3 AS depth, 9 AS parent_id, 0.39019988201588296 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 172 AS count, 3 AS depth, 12 AS parent_id, 0.5585985682546885 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 132 AS count, 3 AS depth, 12 AS parent_id, -0.09846130483570802 AS "Estimator") AS "Values"), 
"DT_Output_115" AS 
(SELECT "DT_node_lookup_115"."KEY" AS "KEY", "DT_node_lookup_115".node_id_2 AS node_id_2, "DT_node_data_115".node_id AS node_id, "DT_node_data_115".feature AS feature, "DT_node_data_115".threshold AS threshold, "DT_node_data_115".count AS count, "DT_node_data_115".depth AS depth, "DT_node_data_115".parent_id AS parent_id, "DT_node_data_115"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_115" LEFT OUTER JOIN "DT_node_data_115" ON "DT_node_lookup_115".node_id_2 = "DT_node_data_115".node_id), 
"GB_Tree_28_3" AS 
(SELECT "DT_Output_115"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", "DT_Output_115"."Estimator" AS "Score_3" 
FROM "DT_Output_115"), 
"DT_node_lookup_116" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_106" <= -3.9089889526367188) THEN CASE WHEN ("ADS"."Feature_375" <= -2.103616714477539) THEN CASE WHEN ("ADS"."Feature_49" <= 0.5722283124923706) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_150" <= -2.0266642570495605) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_100" <= -8.762421607971191) THEN CASE WHEN ("ADS"."Feature_309" <= -0.8331210017204285) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_141" <= -14.99255084991455) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "FourClass_500" AS "ADS"), 
"DT_node_data_116" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 2 AS parent_id, 1.6500937610329298 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 2 AS parent_id, 2.0482889969489606 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS count, 3 AS depth, 5 AS parent_id, 1.1031025766713067 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 191 AS count, 3 AS depth, 5 AS parent_id, -0.4857009381154512 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 9 AS count, 3 AS depth, 9 AS parent_id, -0.8970175857977698 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 32 AS count, 3 AS depth, 9 AS parent_id, 1.0361311720522532 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS count, 3 AS depth, 12 AS parent_id, 1.7596467447857087 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 557 AS count, 3 AS depth, 12 AS parent_id, 0.013152222055081418 AS "Estimator") AS "Values"), 
"DT_Output_116" AS 
(SELECT "DT_node_lookup_116"."KEY" AS "KEY", "DT_node_lookup_116".node_id_2 AS node_id_2, "DT_node_data_116".node_id AS node_id, "DT_node_data_116".feature AS feature, "DT_node_data_116".threshold AS threshold, "DT_node_data_116".count AS count, "DT_node_data_116".depth AS depth, "DT_node_data_116".parent_id AS parent_id, "DT_node_data_116"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_116" LEFT OUTER JOIN "DT_node_data_116" ON "DT_node_lookup_116".node_id_2 = "DT_node_data_116".node_id), 
"GB_Tree_29_0" AS 
(SELECT "DT_Output_116"."KEY" AS "KEY", "DT_Output_116"."Estimator" AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3" 
FROM "DT_Output_116"), 
"DT_node_lookup_117" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_243" <= -13.245194435119629) THEN CASE WHEN ("ADS"."Feature_8" <= -0.6893180012702942) THEN CASE WHEN ("ADS"."Feature_378" <= -0.3087944984436035) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_162" <= -0.35160988569259644) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_495" <= -0.9832198619842529) THEN CASE WHEN ("ADS"."Feature_22" <= -2.0847010612487793) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_259" <= -0.30875852704048157) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "FourClass_500" AS "ADS"), 
"DT_node_data_117" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 2 AS parent_id, -0.8926128187297659 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 2 AS parent_id, -0.8189549151872174 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 3 AS depth, 5 AS parent_id, 1.2020733926099056 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS count, 3 AS depth, 5 AS parent_id, 1.6719559818399994 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 8 AS count, 3 AS depth, 9 AS parent_id, 1.192716540981615 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 334 AS count, 3 AS depth, 9 AS parent_id, -0.2850415235683268 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 176 AS count, 3 AS depth, 12 AS parent_id, -0.2076773096984959 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 274 AS count, 3 AS depth, 12 AS parent_id, 0.3028016385322344 AS "Estimator") AS "Values"), 
"DT_Output_117" AS 
(SELECT "DT_node_lookup_117"."KEY" AS "KEY", "DT_node_lookup_117".node_id_2 AS node_id_2, "DT_node_data_117".node_id AS node_id, "DT_node_data_117".feature AS feature, "DT_node_data_117".threshold AS threshold, "DT_node_data_117".count AS count, "DT_node_data_117".depth AS depth, "DT_node_data_117".parent_id AS parent_id, "DT_node_data_117"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_117" LEFT OUTER JOIN "DT_node_data_117" ON "DT_node_lookup_117".node_id_2 = "DT_node_data_117".node_id), 
"GB_Tree_29_1" AS 
(SELECT "DT_Output_117"."KEY" AS "KEY", 0.0 AS "Score_0", "DT_Output_117"."Estimator" AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3" 
FROM "DT_Output_117"), 
"DT_node_lookup_118" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_464" <= 2.3244500160217285) THEN CASE WHEN ("ADS"."Feature_322" <= -1.205433964729309) THEN CASE WHEN ("ADS"."Feature_151" <= 1.4701242446899414) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_324" <= -13.868971824645996) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_35" <= -0.09065788984298706) THEN CASE WHEN ("ADS"."Feature_171" <= 0.30223435163497925) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_122" <= 3.5378565788269043) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "FourClass_500" AS "ADS"), 
"DT_node_data_118" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 86 AS count, 3 AS depth, 2 AS parent_id, 0.2642915044009458 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 7 AS count, 3 AS depth, 2 AS parent_id, 1.7049769573564222 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS count, 3 AS depth, 5 AS parent_id, 1.601596756775116 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 691 AS count, 3 AS depth, 5 AS parent_id, -0.09727004326094409 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 3 AS depth, 9 AS parent_id, -0.8728417817138768 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 9 AS parent_id, -0.902563401253132 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS count, 3 AS depth, 12 AS parent_id, 1.2722983372268029 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 3 AS depth, 12 AS parent_id, 1.7040913345531377 AS "Estimator") AS "Values"), 
"DT_Output_118" AS 
(SELECT "DT_node_lookup_118"."KEY" AS "KEY", "DT_node_lookup_118".node_id_2 AS node_id_2, "DT_node_data_118".node_id AS node_id, "DT_node_data_118".feature AS feature, "DT_node_data_118".threshold AS threshold, "DT_node_data_118".count AS count, "DT_node_data_118".depth AS depth, "DT_node_data_118".parent_id AS parent_id, "DT_node_data_118"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_118" LEFT OUTER JOIN "DT_node_data_118" ON "DT_node_lookup_118".node_id_2 = "DT_node_data_118".node_id), 
"GB_Tree_29_2" AS 
(SELECT "DT_Output_118"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", "DT_Output_118"."Estimator" AS "Score_2", 0.0 AS "Score_3" 
FROM "DT_Output_118"), 
"DT_node_lookup_119" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_472" <= -0.8495067358016968) THEN CASE WHEN ("ADS"."Feature_264" <= -0.8346645832061768) THEN CASE WHEN ("ADS"."Feature_180" <= -0.4385167956352234) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_110" <= -1.0859506130218506) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_43" <= -11.68393325805664) THEN CASE WHEN ("ADS"."Feature_241" <= 0.05081922560930252) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_196" <= -14.7059326171875) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "FourClass_500" AS "ADS"), 
"DT_node_data_119" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 26 AS count, 3 AS depth, 2 AS parent_id, 1.295043758617535 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 52 AS count, 3 AS depth, 2 AS parent_id, 0.2797485372440745 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 9 AS count, 3 AS depth, 5 AS parent_id, 1.231589335795558 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 74 AS count, 3 AS depth, 5 AS parent_id, -0.3459931896342846 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 6 AS count, 3 AS depth, 9 AS parent_id, -0.3934151420677821 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 11 AS count, 3 AS depth, 9 AS parent_id, 1.3709189194191505 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 7 AS count, 3 AS depth, 12 AS parent_id, 1.4352394525126193 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 615 AS count, 3 AS depth, 12 AS parent_id, -0.15118631512460695 AS "Estimator") AS "Values"), 
"DT_Output_119" AS 
(SELECT "DT_node_lookup_119"."KEY" AS "KEY", "DT_node_lookup_119".node_id_2 AS node_id_2, "DT_node_data_119".node_id AS node_id, "DT_node_data_119".feature AS feature, "DT_node_data_119".threshold AS threshold, "DT_node_data_119".count AS count, "DT_node_data_119".depth AS depth, "DT_node_data_119".parent_id AS parent_id, "DT_node_data_119"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_119" LEFT OUTER JOIN "DT_node_data_119" ON "DT_node_lookup_119".node_id_2 = "DT_node_data_119".node_id), 
"GB_Tree_29_3" AS 
(SELECT "DT_Output_119"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", "DT_Output_119"."Estimator" AS "Score_3" 
FROM "DT_Output_119")
 SELECT "Score_Union_CTE_esu_14"."KEY", "Score_Union_CTE_esu_14"."Score_0", "Score_Union_CTE_esu_14"."Score_1", "Score_Union_CTE_esu_14"."Score_2", "Score_Union_CTE_esu_14"."Score_3" 
FROM (SELECT "GB_Tree_28_0"."KEY" AS "KEY", "GB_Tree_28_0"."Score_0" AS "Score_0", "GB_Tree_28_0"."Score_1" AS "Score_1", "GB_Tree_28_0"."Score_2" AS "Score_2", "GB_Tree_28_0"."Score_3" AS "Score_3" 
FROM "GB_Tree_28_0" UNION ALL SELECT "GB_Tree_28_1"."KEY" AS "KEY", "GB_Tree_28_1"."Score_0" AS "Score_0", "GB_Tree_28_1"."Score_1" AS "Score_1", "GB_Tree_28_1"."Score_2" AS "Score_2", "GB_Tree_28_1"."Score_3" AS "Score_3" 
FROM "GB_Tree_28_1" UNION ALL SELECT "GB_Tree_28_2"."KEY" AS "KEY", "GB_Tree_28_2"."Score_0" AS "Score_0", "GB_Tree_28_2"."Score_1" AS "Score_1", "GB_Tree_28_2"."Score_2" AS "Score_2", "GB_Tree_28_2"."Score_3" AS "Score_3" 
FROM "GB_Tree_28_2" UNION ALL SELECT "GB_Tree_28_3"."KEY" AS "KEY", "GB_Tree_28_3"."Score_0" AS "Score_0", "GB_Tree_28_3"."Score_1" AS "Score_1", "GB_Tree_28_3"."Score_2" AS "Score_2", "GB_Tree_28_3"."Score_3" AS "Score_3" 
FROM "GB_Tree_28_3" UNION ALL SELECT "GB_Tree_29_0"."KEY" AS "KEY", "GB_Tree_29_0"."Score_0" AS "Score_0", "GB_Tree_29_0"."Score_1" AS "Score_1", "GB_Tree_29_0"."Score_2" AS "Score_2", "GB_Tree_29_0"."Score_3" AS "Score_3" 
FROM "GB_Tree_29_0" UNION ALL SELECT "GB_Tree_29_1"."KEY" AS "KEY", "GB_Tree_29_1"."Score_0" AS "Score_0", "GB_Tree_29_1"."Score_1" AS "Score_1", "GB_Tree_29_1"."Score_2" AS "Score_2", "GB_Tree_29_1"."Score_3" AS "Score_3" 
FROM "GB_Tree_29_1" UNION ALL SELECT "GB_Tree_29_2"."KEY" AS "KEY", "GB_Tree_29_2"."Score_0" AS "Score_0", "GB_Tree_29_2"."Score_1" AS "Score_1", "GB_Tree_29_2"."Score_2" AS "Score_2", "GB_Tree_29_2"."Score_3" AS "Score_3" 
FROM "GB_Tree_29_2" UNION ALL SELECT "GB_Tree_29_3"."KEY" AS "KEY", "GB_Tree_29_3"."Score_0" AS "Score_0", "GB_Tree_29_3"."Score_1" AS "Score_1", "GB_Tree_29_3"."Score_2" AS "Score_2", "GB_Tree_29_3"."Score_3" AS "Score_3" 
FROM "GB_Tree_29_3") AS "Score_Union_CTE_esu_14"), 
"Score_Union_CTE_15" AS 
(WITH "DT_node_lookup_120" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_191" <= 0.14496786892414093) THEN CASE WHEN ("ADS"."Feature_89" <= -1.3966267108917236) THEN CASE WHEN ("ADS"."Feature_13" <= 0.12467612326145172) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_414" <= -5.1700615882873535) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_288" <= 9.291326522827148) THEN CASE WHEN ("ADS"."Feature_17" <= 2.3866002559661865) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_286" <= -0.1651272028684616) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "FourClass_500" AS "ADS"), 
"DT_node_data_120" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 17 AS count, 3 AS depth, 2 AS parent_id, 1.2011335147174595 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 9 AS count, 3 AS depth, 2 AS parent_id, -0.14216663770854449 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 91 AS count, 3 AS depth, 5 AS parent_id, -0.4344761911686947 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 278 AS count, 3 AS depth, 5 AS parent_id, 0.24038570452520477 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 388 AS count, 3 AS depth, 9 AS parent_id, -0.2748785286696358 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 3 AS depth, 9 AS parent_id, 1.5169204325857932 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 6 AS count, 3 AS depth, 12 AS parent_id, -0.2580545849693826 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 8 AS count, 3 AS depth, 12 AS parent_id, 1.3414674104425965 AS "Estimator") AS "Values"), 
"DT_Output_120" AS 
(SELECT "DT_node_lookup_120"."KEY" AS "KEY", "DT_node_lookup_120".node_id_2 AS node_id_2, "DT_node_data_120".node_id AS node_id, "DT_node_data_120".feature AS feature, "DT_node_data_120".threshold AS threshold, "DT_node_data_120".count AS count, "DT_node_data_120".depth AS depth, "DT_node_data_120".parent_id AS parent_id, "DT_node_data_120"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_120" LEFT OUTER JOIN "DT_node_data_120" ON "DT_node_lookup_120".node_id_2 = "DT_node_data_120".node_id), 
"GB_Tree_30_0" AS 
(SELECT "DT_Output_120"."KEY" AS "KEY", "DT_Output_120"."Estimator" AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3" 
FROM "DT_Output_120"), 
"DT_node_lookup_121" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_477" <= 0.6162202954292297) THEN CASE WHEN ("ADS"."Feature_280" <= -4.692844390869141) THEN CASE WHEN ("ADS"."Feature_286" <= 1.9708521366119385) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_275" <= -1.6318984031677246) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_397" <= -5.433395862579346) THEN CASE WHEN ("ADS"."Feature_385" <= 1.9308528900146484) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_66" <= -2.0742616653442383) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "FourClass_500" AS "ADS"), 
"DT_node_data_121" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 91 AS count, 3 AS depth, 2 AS parent_id, -0.4483260162725196 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 3 AS depth, 2 AS parent_id, 1.7432767483043283 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 111 AS count, 3 AS depth, 5 AS parent_id, -0.1230024774253355 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 198 AS count, 3 AS depth, 5 AS parent_id, 0.47202508319837705 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 38 AS count, 3 AS depth, 9 AS parent_id, 0.784262689590025 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 26 AS count, 3 AS depth, 9 AS parent_id, -0.362311265800165 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS count, 3 AS depth, 12 AS parent_id, 1.4093697817906574 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 329 AS count, 3 AS depth, 12 AS parent_id, -0.361427387142137 AS "Estimator") AS "Values"), 
"DT_Output_121" AS 
(SELECT "DT_node_lookup_121"."KEY" AS "KEY", "DT_node_lookup_121".node_id_2 AS node_id_2, "DT_node_data_121".node_id AS node_id, "DT_node_data_121".feature AS feature, "DT_node_data_121".threshold AS threshold, "DT_node_data_121".count AS count, "DT_node_data_121".depth AS depth, "DT_node_data_121".parent_id AS parent_id, "DT_node_data_121"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_121" LEFT OUTER JOIN "DT_node_data_121" ON "DT_node_lookup_121".node_id_2 = "DT_node_data_121".node_id), 
"GB_Tree_30_1" AS 
(SELECT "DT_Output_121"."KEY" AS "KEY", 0.0 AS "Score_0", "DT_Output_121"."Estimator" AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3" 
FROM "DT_Output_121"), 
"DT_node_lookup_122" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_446" <= 1.0399501323699951) THEN CASE WHEN ("ADS"."Feature_152" <= 0.9994755983352661) THEN CASE WHEN ("ADS"."Feature_196" <= -0.28339946269989014) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_244" <= 0.20094281435012817) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_306" <= 1.9216794967651367) THEN CASE WHEN ("ADS"."Feature_391" <= 2.0583581924438477) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_119" <= 0.9859613180160522) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "FourClass_500" AS "ADS"), 
"DT_node_data_122" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 241 AS count, 3 AS depth, 2 AS parent_id, -0.3482438911801368 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 170 AS count, 3 AS depth, 2 AS parent_id, 0.22172514578071648 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 172 AS count, 3 AS depth, 5 AS parent_id, 0.017901281505604983 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 89 AS count, 3 AS depth, 5 AS parent_id, 0.7450131525308038 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 122 AS count, 3 AS depth, 9 AS parent_id, -0.5838221832511784 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 3 AS depth, 9 AS parent_id, 1.42430698443357 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 3 AS depth, 12 AS parent_id, 1.7124205163564687 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 12 AS parent_id, -0.8309953085258931 AS "Estimator") AS "Values"), 
"DT_Output_122" AS 
(SELECT "DT_node_lookup_122"."KEY" AS "KEY", "DT_node_lookup_122".node_id_2 AS node_id_2, "DT_node_data_122".node_id AS node_id, "DT_node_data_122".feature AS feature, "DT_node_data_122".threshold AS threshold, "DT_node_data_122".count AS count, "DT_node_data_122".depth AS depth, "DT_node_data_122".parent_id AS parent_id, "DT_node_data_122"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_122" LEFT OUTER JOIN "DT_node_data_122" ON "DT_node_lookup_122".node_id_2 = "DT_node_data_122".node_id), 
"GB_Tree_30_2" AS 
(SELECT "DT_Output_122"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", "DT_Output_122"."Estimator" AS "Score_2", 0.0 AS "Score_3" 
FROM "DT_Output_122"), 
"DT_node_lookup_123" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_477" <= -3.9417285919189453) THEN CASE WHEN ("ADS"."Feature_183" <= -14.241937637329102) THEN CASE WHEN ("ADS"."Feature_380" <= 1.037259578704834) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_493" <= 0.7405662536621094) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_446" <= 1.0687451362609863) THEN CASE WHEN ("ADS"."Feature_436" <= 9.253480911254883) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_367" <= 1.420780062675476) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "FourClass_500" AS "ADS"), 
"DT_node_data_123" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS count, 3 AS depth, 2 AS parent_id, 1.1647373172544506 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 2 AS parent_id, 1.6344354817680544 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 139 AS count, 3 AS depth, 5 AS parent_id, -0.6313514707167542 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 32 AS count, 3 AS depth, 5 AS parent_id, 0.3152321695637009 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 507 AS count, 3 AS depth, 9 AS parent_id, -0.05781508718593372 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 20 AS count, 3 AS depth, 9 AS parent_id, 0.9977741262933528 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 61 AS count, 3 AS depth, 12 AS parent_id, 0.8734356365776444 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 36 AS count, 3 AS depth, 12 AS parent_id, -0.27863858538182085 AS "Estimator") AS "Values"), 
"DT_Output_123" AS 
(SELECT "DT_node_lookup_123"."KEY" AS "KEY", "DT_node_lookup_123".node_id_2 AS node_id_2, "DT_node_data_123".node_id AS node_id, "DT_node_data_123".feature AS feature, "DT_node_data_123".threshold AS threshold, "DT_node_data_123".count AS count, "DT_node_data_123".depth AS depth, "DT_node_data_123".parent_id AS parent_id, "DT_node_data_123"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_123" LEFT OUTER JOIN "DT_node_data_123" ON "DT_node_lookup_123".node_id_2 = "DT_node_data_123".node_id), 
"GB_Tree_30_3" AS 
(SELECT "DT_Output_123"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", "DT_Output_123"."Estimator" AS "Score_3" 
FROM "DT_Output_123"), 
"DT_node_lookup_124" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_426" <= -2.857603073120117) THEN CASE WHEN ("ADS"."Feature_381" <= -0.3920900821685791) THEN CASE WHEN ("ADS"."Feature_59" <= 0.30122971534729004) THEN 3 ELSE 4 END ELSE 5 END ELSE CASE WHEN ("ADS"."Feature_148" <= -1.2121145725250244) THEN CASE WHEN ("ADS"."Feature_495" <= -7.624478340148926) THEN 8 ELSE 9 END ELSE CASE WHEN ("ADS"."Feature_129" <= 1.3448735475540161) THEN 11 ELSE 12 END END END AS node_id_2 
FROM "FourClass_500" AS "ADS"), 
"DT_node_data_124" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 2 AS parent_id, 1.7125107851136439 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 2 AS parent_id, 1.7360048650411577 AS "Estimator" UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 2 AS depth, 1 AS parent_id, 1.5483331006705285 AS "Estimator" UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 24 AS count, 3 AS depth, 7 AS parent_id, 0.6592916641971838 AS "Estimator" UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 311 AS count, 3 AS depth, 7 AS parent_id, -0.344571504446817 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 273 AS count, 3 AS depth, 10 AS parent_id, -0.0874023488851834 AS "Estimator" UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 189 AS count, 3 AS depth, 10 AS parent_id, 0.39999382095440167 AS "Estimator") AS "Values"), 
"DT_Output_124" AS 
(SELECT "DT_node_lookup_124"."KEY" AS "KEY", "DT_node_lookup_124".node_id_2 AS node_id_2, "DT_node_data_124".node_id AS node_id, "DT_node_data_124".feature AS feature, "DT_node_data_124".threshold AS threshold, "DT_node_data_124".count AS count, "DT_node_data_124".depth AS depth, "DT_node_data_124".parent_id AS parent_id, "DT_node_data_124"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_124" LEFT OUTER JOIN "DT_node_data_124" ON "DT_node_lookup_124".node_id_2 = "DT_node_data_124".node_id), 
"GB_Tree_31_0" AS 
(SELECT "DT_Output_124"."KEY" AS "KEY", "DT_Output_124"."Estimator" AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3" 
FROM "DT_Output_124"), 
"DT_node_lookup_125" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_208" <= 6.564858913421631) THEN CASE WHEN ("ADS"."Feature_324" <= -5.2307891845703125) THEN CASE WHEN ("ADS"."Feature_220" <= -1.0703678131103516) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_93" <= 0.9112462997436523) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_306" <= 1.9099626541137695) THEN CASE WHEN ("ADS"."Feature_197" <= 11.310516357421875) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_174" <= -0.5592783093452454) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "FourClass_500" AS "ADS"), 
"DT_node_data_125" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 16 AS count, 3 AS depth, 2 AS parent_id, 0.7099099861143052 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 142 AS count, 3 AS depth, 2 AS parent_id, -0.46607589097151036 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 437 AS count, 3 AS depth, 5 AS parent_id, 0.25420234103356343 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 98 AS count, 3 AS depth, 5 AS parent_id, -0.3480653397737517 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 102 AS count, 3 AS depth, 9 AS parent_id, -0.6578110428567457 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 3 AS depth, 9 AS parent_id, 1.2764273830528945 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 12 AS parent_id, 1.550045565713126 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 12 AS parent_id, 1.625674180863838 AS "Estimator") AS "Values"), 
"DT_Output_125" AS 
(SELECT "DT_node_lookup_125"."KEY" AS "KEY", "DT_node_lookup_125".node_id_2 AS node_id_2, "DT_node_data_125".node_id AS node_id, "DT_node_data_125".feature AS feature, "DT_node_data_125".threshold AS threshold, "DT_node_data_125".count AS count, "DT_node_data_125".depth AS depth, "DT_node_data_125".parent_id AS parent_id, "DT_node_data_125"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_125" LEFT OUTER JOIN "DT_node_data_125" ON "DT_node_lookup_125".node_id_2 = "DT_node_data_125".node_id), 
"GB_Tree_31_1" AS 
(SELECT "DT_Output_125"."KEY" AS "KEY", 0.0 AS "Score_0", "DT_Output_125"."Estimator" AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3" 
FROM "DT_Output_125"), 
"DT_node_lookup_126" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_129" <= 3.690030813217163) THEN CASE WHEN ("ADS"."Feature_464" <= 2.265439510345459) THEN CASE WHEN ("ADS"."Feature_196" <= 3.1065261363983154) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_480" <= 5.708708763122559) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_104" <= -0.6678531765937805) THEN CASE WHEN ("ADS"."Feature_109" <= 0.7481574416160583) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_25" <= -5.1207475662231445) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "FourClass_500" AS "ADS"), 
"DT_node_data_126" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 441 AS count, 3 AS depth, 2 AS parent_id, -0.24955969178824622 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 148 AS count, 3 AS depth, 2 AS parent_id, 0.21125379510174713 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 7 AS count, 3 AS depth, 5 AS parent_id, 1.334308113657121 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 3 AS depth, 5 AS parent_id, -0.8591619259372413 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 29 AS count, 3 AS depth, 9 AS parent_id, 1.1881180955705868 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 28 AS count, 3 AS depth, 9 AS parent_id, 0.2491746420135993 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 25 AS count, 3 AS depth, 12 AS parent_id, 0.8472797917434127 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 120 AS count, 3 AS depth, 12 AS parent_id, -0.22952519229358753 AS "Estimator") AS "Values"), 
"DT_Output_126" AS 
(SELECT "DT_node_lookup_126"."KEY" AS "KEY", "DT_node_lookup_126".node_id_2 AS node_id_2, "DT_node_data_126".node_id AS node_id, "DT_node_data_126".feature AS feature, "DT_node_data_126".threshold AS threshold, "DT_node_data_126".count AS count, "DT_node_data_126".depth AS depth, "DT_node_data_126".parent_id AS parent_id, "DT_node_data_126"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_126" LEFT OUTER JOIN "DT_node_data_126" ON "DT_node_lookup_126".node_id_2 = "DT_node_data_126".node_id), 
"GB_Tree_31_2" AS 
(SELECT "DT_Output_126"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", "DT_Output_126"."Estimator" AS "Score_2", 0.0 AS "Score_3" 
FROM "DT_Output_126"), 
"DT_node_lookup_127" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_252" <= -5.810490131378174) THEN CASE WHEN ("ADS"."Feature_338" <= 4.761517524719238) THEN CASE WHEN ("ADS"."Feature_210" <= 8.762693405151367) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_205" <= 1.4934403896331787) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_193" <= 5.2818145751953125) THEN CASE WHEN ("ADS"."Feature_358" <= 2.041948080062866) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_65" <= 0.8332539796829224) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "FourClass_500" AS "ADS"), 
"DT_node_data_127" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 106 AS count, 3 AS depth, 2 AS parent_id, 0.03843507603492881 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 6 AS count, 3 AS depth, 2 AS parent_id, 1.5204912138963378 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 17 AS count, 3 AS depth, 5 AS parent_id, 1.2689208491727617 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 3 AS depth, 5 AS parent_id, -0.9133630355856107 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 538 AS count, 3 AS depth, 9 AS parent_id, -0.23071113338873772 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 16 AS count, 3 AS depth, 9 AS parent_id, 0.9808930821954693 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 72 AS count, 3 AS depth, 12 AS parent_id, 0.709669179874529 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 43 AS count, 3 AS depth, 12 AS parent_id, -0.3199900389035113 AS "Estimator") AS "Values"), 
"DT_Output_127" AS 
(SELECT "DT_node_lookup_127"."KEY" AS "KEY", "DT_node_lookup_127".node_id_2 AS node_id_2, "DT_node_data_127".node_id AS node_id, "DT_node_data_127".feature AS feature, "DT_node_data_127".threshold AS threshold, "DT_node_data_127".count AS count, "DT_node_data_127".depth AS depth, "DT_node_data_127".parent_id AS parent_id, "DT_node_data_127"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_127" LEFT OUTER JOIN "DT_node_data_127" ON "DT_node_lookup_127".node_id_2 = "DT_node_data_127".node_id), 
"GB_Tree_31_3" AS 
(SELECT "DT_Output_127"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", "DT_Output_127"."Estimator" AS "Score_3" 
FROM "DT_Output_127")
 SELECT "Score_Union_CTE_esu_15"."KEY", "Score_Union_CTE_esu_15"."Score_0", "Score_Union_CTE_esu_15"."Score_1", "Score_Union_CTE_esu_15"."Score_2", "Score_Union_CTE_esu_15"."Score_3" 
FROM (SELECT "GB_Tree_30_0"."KEY" AS "KEY", "GB_Tree_30_0"."Score_0" AS "Score_0", "GB_Tree_30_0"."Score_1" AS "Score_1", "GB_Tree_30_0"."Score_2" AS "Score_2", "GB_Tree_30_0"."Score_3" AS "Score_3" 
FROM "GB_Tree_30_0" UNION ALL SELECT "GB_Tree_30_1"."KEY" AS "KEY", "GB_Tree_30_1"."Score_0" AS "Score_0", "GB_Tree_30_1"."Score_1" AS "Score_1", "GB_Tree_30_1"."Score_2" AS "Score_2", "GB_Tree_30_1"."Score_3" AS "Score_3" 
FROM "GB_Tree_30_1" UNION ALL SELECT "GB_Tree_30_2"."KEY" AS "KEY", "GB_Tree_30_2"."Score_0" AS "Score_0", "GB_Tree_30_2"."Score_1" AS "Score_1", "GB_Tree_30_2"."Score_2" AS "Score_2", "GB_Tree_30_2"."Score_3" AS "Score_3" 
FROM "GB_Tree_30_2" UNION ALL SELECT "GB_Tree_30_3"."KEY" AS "KEY", "GB_Tree_30_3"."Score_0" AS "Score_0", "GB_Tree_30_3"."Score_1" AS "Score_1", "GB_Tree_30_3"."Score_2" AS "Score_2", "GB_Tree_30_3"."Score_3" AS "Score_3" 
FROM "GB_Tree_30_3" UNION ALL SELECT "GB_Tree_31_0"."KEY" AS "KEY", "GB_Tree_31_0"."Score_0" AS "Score_0", "GB_Tree_31_0"."Score_1" AS "Score_1", "GB_Tree_31_0"."Score_2" AS "Score_2", "GB_Tree_31_0"."Score_3" AS "Score_3" 
FROM "GB_Tree_31_0" UNION ALL SELECT "GB_Tree_31_1"."KEY" AS "KEY", "GB_Tree_31_1"."Score_0" AS "Score_0", "GB_Tree_31_1"."Score_1" AS "Score_1", "GB_Tree_31_1"."Score_2" AS "Score_2", "GB_Tree_31_1"."Score_3" AS "Score_3" 
FROM "GB_Tree_31_1" UNION ALL SELECT "GB_Tree_31_2"."KEY" AS "KEY", "GB_Tree_31_2"."Score_0" AS "Score_0", "GB_Tree_31_2"."Score_1" AS "Score_1", "GB_Tree_31_2"."Score_2" AS "Score_2", "GB_Tree_31_2"."Score_3" AS "Score_3" 
FROM "GB_Tree_31_2" UNION ALL SELECT "GB_Tree_31_3"."KEY" AS "KEY", "GB_Tree_31_3"."Score_0" AS "Score_0", "GB_Tree_31_3"."Score_1" AS "Score_1", "GB_Tree_31_3"."Score_2" AS "Score_2", "GB_Tree_31_3"."Score_3" AS "Score_3" 
FROM "GB_Tree_31_3") AS "Score_Union_CTE_esu_15"), 
"Score_Union_CTE" AS 
(SELECT "Score_Union_CTEbig_esu"."KEY" AS "KEY", "Score_Union_CTEbig_esu"."Score_0" AS "Score_0", "Score_Union_CTEbig_esu"."Score_1" AS "Score_1", "Score_Union_CTEbig_esu"."Score_2" AS "Score_2", "Score_Union_CTEbig_esu"."Score_3" AS "Score_3" 
FROM (SELECT "Score_Union_CTE_0"."KEY" AS "KEY", "Score_Union_CTE_0"."Score_0" AS "Score_0", "Score_Union_CTE_0"."Score_1" AS "Score_1", "Score_Union_CTE_0"."Score_2" AS "Score_2", "Score_Union_CTE_0"."Score_3" AS "Score_3" 
FROM "Score_Union_CTE_0" UNION ALL SELECT "Score_Union_CTE_1"."KEY" AS "KEY", "Score_Union_CTE_1"."Score_0" AS "Score_0", "Score_Union_CTE_1"."Score_1" AS "Score_1", "Score_Union_CTE_1"."Score_2" AS "Score_2", "Score_Union_CTE_1"."Score_3" AS "Score_3" 
FROM "Score_Union_CTE_1" UNION ALL SELECT "Score_Union_CTE_2"."KEY" AS "KEY", "Score_Union_CTE_2"."Score_0" AS "Score_0", "Score_Union_CTE_2"."Score_1" AS "Score_1", "Score_Union_CTE_2"."Score_2" AS "Score_2", "Score_Union_CTE_2"."Score_3" AS "Score_3" 
FROM "Score_Union_CTE_2" UNION ALL SELECT "Score_Union_CTE_3"."KEY" AS "KEY", "Score_Union_CTE_3"."Score_0" AS "Score_0", "Score_Union_CTE_3"."Score_1" AS "Score_1", "Score_Union_CTE_3"."Score_2" AS "Score_2", "Score_Union_CTE_3"."Score_3" AS "Score_3" 
FROM "Score_Union_CTE_3" UNION ALL SELECT "Score_Union_CTE_4"."KEY" AS "KEY", "Score_Union_CTE_4"."Score_0" AS "Score_0", "Score_Union_CTE_4"."Score_1" AS "Score_1", "Score_Union_CTE_4"."Score_2" AS "Score_2", "Score_Union_CTE_4"."Score_3" AS "Score_3" 
FROM "Score_Union_CTE_4" UNION ALL SELECT "Score_Union_CTE_5"."KEY" AS "KEY", "Score_Union_CTE_5"."Score_0" AS "Score_0", "Score_Union_CTE_5"."Score_1" AS "Score_1", "Score_Union_CTE_5"."Score_2" AS "Score_2", "Score_Union_CTE_5"."Score_3" AS "Score_3" 
FROM "Score_Union_CTE_5" UNION ALL SELECT "Score_Union_CTE_6"."KEY" AS "KEY", "Score_Union_CTE_6"."Score_0" AS "Score_0", "Score_Union_CTE_6"."Score_1" AS "Score_1", "Score_Union_CTE_6"."Score_2" AS "Score_2", "Score_Union_CTE_6"."Score_3" AS "Score_3" 
FROM "Score_Union_CTE_6" UNION ALL SELECT "Score_Union_CTE_7"."KEY" AS "KEY", "Score_Union_CTE_7"."Score_0" AS "Score_0", "Score_Union_CTE_7"."Score_1" AS "Score_1", "Score_Union_CTE_7"."Score_2" AS "Score_2", "Score_Union_CTE_7"."Score_3" AS "Score_3" 
FROM "Score_Union_CTE_7" UNION ALL SELECT "Score_Union_CTE_8"."KEY" AS "KEY", "Score_Union_CTE_8"."Score_0" AS "Score_0", "Score_Union_CTE_8"."Score_1" AS "Score_1", "Score_Union_CTE_8"."Score_2" AS "Score_2", "Score_Union_CTE_8"."Score_3" AS "Score_3" 
FROM "Score_Union_CTE_8" UNION ALL SELECT "Score_Union_CTE_9"."KEY" AS "KEY", "Score_Union_CTE_9"."Score_0" AS "Score_0", "Score_Union_CTE_9"."Score_1" AS "Score_1", "Score_Union_CTE_9"."Score_2" AS "Score_2", "Score_Union_CTE_9"."Score_3" AS "Score_3" 
FROM "Score_Union_CTE_9" UNION ALL SELECT "Score_Union_CTE_10"."KEY" AS "KEY", "Score_Union_CTE_10"."Score_0" AS "Score_0", "Score_Union_CTE_10"."Score_1" AS "Score_1", "Score_Union_CTE_10"."Score_2" AS "Score_2", "Score_Union_CTE_10"."Score_3" AS "Score_3" 
FROM "Score_Union_CTE_10" UNION ALL SELECT "Score_Union_CTE_11"."KEY" AS "KEY", "Score_Union_CTE_11"."Score_0" AS "Score_0", "Score_Union_CTE_11"."Score_1" AS "Score_1", "Score_Union_CTE_11"."Score_2" AS "Score_2", "Score_Union_CTE_11"."Score_3" AS "Score_3" 
FROM "Score_Union_CTE_11" UNION ALL SELECT "Score_Union_CTE_12"."KEY" AS "KEY", "Score_Union_CTE_12"."Score_0" AS "Score_0", "Score_Union_CTE_12"."Score_1" AS "Score_1", "Score_Union_CTE_12"."Score_2" AS "Score_2", "Score_Union_CTE_12"."Score_3" AS "Score_3" 
FROM "Score_Union_CTE_12" UNION ALL SELECT "Score_Union_CTE_13"."KEY" AS "KEY", "Score_Union_CTE_13"."Score_0" AS "Score_0", "Score_Union_CTE_13"."Score_1" AS "Score_1", "Score_Union_CTE_13"."Score_2" AS "Score_2", "Score_Union_CTE_13"."Score_3" AS "Score_3" 
FROM "Score_Union_CTE_13" UNION ALL SELECT "Score_Union_CTE_14"."KEY" AS "KEY", "Score_Union_CTE_14"."Score_0" AS "Score_0", "Score_Union_CTE_14"."Score_1" AS "Score_1", "Score_Union_CTE_14"."Score_2" AS "Score_2", "Score_Union_CTE_14"."Score_3" AS "Score_3" 
FROM "Score_Union_CTE_14" UNION ALL SELECT "Score_Union_CTE_15"."KEY" AS "KEY", "Score_Union_CTE_15"."Score_0" AS "Score_0", "Score_Union_CTE_15"."Score_1" AS "Score_1", "Score_Union_CTE_15"."Score_2" AS "Score_2", "Score_Union_CTE_15"."Score_3" AS "Score_3" 
FROM "Score_Union_CTE_15") AS "Score_Union_CTEbig_esu"), 
"GradBoost_Sum_Scores" AS 
(SELECT "T"."KEY" AS "KEY", "T"."Score_0" AS "Score_0", "T"."Score_1" AS "Score_1", "T"."Score_2" AS "Score_2", "T"."Score_3" AS "Score_3" 
FROM (SELECT "Score_Union_CTE"."KEY" AS "KEY", sum("Score_Union_CTE"."Score_0") AS "Score_0", sum("Score_Union_CTE"."Score_1") AS "Score_1", sum("Score_Union_CTE"."Score_2") AS "Score_2", sum("Score_Union_CTE"."Score_3") AS "Score_3" 
FROM "Score_Union_CTE" GROUP BY "Score_Union_CTE"."KEY") AS "T"), 
orig_cte AS 
(SELECT "GradBoost_Sum_Scores"."KEY" AS "KEY", 0.23875 + 0.1 * "GradBoost_Sum_Scores"."Score_0" AS "Score_0", 0.25125 + 0.1 * "GradBoost_Sum_Scores"."Score_1" AS "Score_1", 0.2525 + 0.1 * "GradBoost_Sum_Scores"."Score_2" AS "Score_2", 0.2575 + 0.1 * "GradBoost_Sum_Scores"."Score_3" AS "Score_3", CAST(NULL AS FLOAT) AS "Proba_0", CAST(NULL AS FLOAT) AS "Proba_1", CAST(NULL AS FLOAT) AS "Proba_2", CAST(NULL AS FLOAT) AS "Proba_3", CAST(NULL AS FLOAT) AS "LogProba_0", CAST(NULL AS FLOAT) AS "LogProba_1", CAST(NULL AS FLOAT) AS "LogProba_2", CAST(NULL AS FLOAT) AS "LogProba_3", CAST(NULL AS INTEGER) AS "Decision", CAST(NULL AS FLOAT) AS "DecisionProba" 
FROM "GradBoost_Sum_Scores"), 
score_class_union AS 
(SELECT scu."KEY_u" AS "KEY_u", scu.class AS class, scu."LogProba" AS "LogProba", scu."Proba" AS "Proba", scu."Score" AS "Score" 
FROM (SELECT orig_cte."KEY" AS "KEY_u", 0 AS class, orig_cte."LogProba_0" AS "LogProba", orig_cte."Proba_0" AS "Proba", orig_cte."Score_0" AS "Score" 
FROM orig_cte UNION ALL SELECT orig_cte."KEY" AS "KEY_u", 1 AS class, orig_cte."LogProba_1" AS "LogProba", orig_cte."Proba_1" AS "Proba", orig_cte."Score_1" AS "Score" 
FROM orig_cte UNION ALL SELECT orig_cte."KEY" AS "KEY_u", 2 AS class, orig_cte."LogProba_2" AS "LogProba", orig_cte."Proba_2" AS "Proba", orig_cte."Score_2" AS "Score" 
FROM orig_cte UNION ALL SELECT orig_cte."KEY" AS "KEY_u", 3 AS class, orig_cte."LogProba_3" AS "LogProba", orig_cte."Proba_3" AS "Proba", orig_cte."Score_3" AS "Score" 
FROM orig_cte) AS scu), 
score_max AS 
(SELECT orig_cte."KEY" AS "KEY", orig_cte."Score_0" AS "Score_0", orig_cte."Score_1" AS "Score_1", orig_cte."Score_2" AS "Score_2", orig_cte."Score_3" AS "Score_3", orig_cte."Proba_0" AS "Proba_0", orig_cte."Proba_1" AS "Proba_1", orig_cte."Proba_2" AS "Proba_2", orig_cte."Proba_3" AS "Proba_3", orig_cte."LogProba_0" AS "LogProba_0", orig_cte."LogProba_1" AS "LogProba_1", orig_cte."LogProba_2" AS "LogProba_2", orig_cte."LogProba_3" AS "LogProba_3", orig_cte."Decision" AS "Decision", orig_cte."DecisionProba" AS "DecisionProba", max_select."KEY_m" AS "KEY_m", max_select."max_Score" AS "max_Score" 
FROM orig_cte LEFT OUTER JOIN (SELECT score_class_union."KEY_u" AS "KEY_m", max(score_class_union."Score") AS "max_Score" 
FROM score_class_union GROUP BY score_class_union."KEY_u") AS max_select ON orig_cte."KEY" = max_select."KEY_m"), 
score_soft_max_deltas AS 
(SELECT score_max."KEY" AS "KEY", score_max."Score_0" AS "Score_0", score_max."Score_1" AS "Score_1", score_max."Score_2" AS "Score_2", score_max."Score_3" AS "Score_3", score_max."Proba_0" AS "Proba_0", score_max."Proba_1" AS "Proba_1", score_max."Proba_2" AS "Proba_2", score_max."Proba_3" AS "Proba_3", score_max."LogProba_0" AS "LogProba_0", score_max."LogProba_1" AS "LogProba_1", score_max."LogProba_2" AS "LogProba_2", score_max."LogProba_3" AS "LogProba_3", score_max."Decision" AS "Decision", score_max."DecisionProba" AS "DecisionProba", score_max."KEY_m" AS "KEY_m", score_max."max_Score" AS "max_Score", exp(score_max."Score_0" - score_max."max_Score") AS "exp_delta_Score_0", exp(score_max."Score_1" - score_max."max_Score") AS "exp_delta_Score_1", exp(score_max."Score_2" - score_max."max_Score") AS "exp_delta_Score_2", exp(score_max."Score_3" - score_max."max_Score") AS "exp_delta_Score_3" 
FROM score_max), 
score_class_union_soft AS 
(SELECT soft_scu."KEY" AS "KEY", soft_scu.class AS class, soft_scu."exp_delta_Score" AS "exp_delta_Score" 
FROM (SELECT score_soft_max_deltas."KEY" AS "KEY", 0 AS class, score_soft_max_deltas."exp_delta_Score_0" AS "exp_delta_Score" 
FROM score_soft_max_deltas UNION ALL SELECT score_soft_max_deltas."KEY" AS "KEY", 1 AS class, score_soft_max_deltas."exp_delta_Score_1" AS "exp_delta_Score" 
FROM score_soft_max_deltas UNION ALL SELECT score_soft_max_deltas."KEY" AS "KEY", 2 AS class, score_soft_max_deltas."exp_delta_Score_2" AS "exp_delta_Score" 
FROM score_soft_max_deltas UNION ALL SELECT score_soft_max_deltas."KEY" AS "KEY", 3 AS class, score_soft_max_deltas."exp_delta_Score_3" AS "exp_delta_Score" 
FROM score_soft_max_deltas) AS soft_scu), 
score_soft_max AS 
(SELECT score_soft_max_deltas."KEY" AS "KEY", score_soft_max_deltas."Score_0" AS "Score_0", score_soft_max_deltas."Score_1" AS "Score_1", score_soft_max_deltas."Score_2" AS "Score_2", score_soft_max_deltas."Score_3" AS "Score_3", score_soft_max_deltas."Proba_0" AS "Proba_0", score_soft_max_deltas."Proba_1" AS "Proba_1", score_soft_max_deltas."Proba_2" AS "Proba_2", score_soft_max_deltas."Proba_3" AS "Proba_3", score_soft_max_deltas."LogProba_0" AS "LogProba_0", score_soft_max_deltas."LogProba_1" AS "LogProba_1", score_soft_max_deltas."LogProba_2" AS "LogProba_2", score_soft_max_deltas."LogProba_3" AS "LogProba_3", score_soft_max_deltas."Decision" AS "Decision", score_soft_max_deltas."DecisionProba" AS "DecisionProba", score_soft_max_deltas."KEY_m" AS "KEY_m", score_soft_max_deltas."max_Score" AS "max_Score", score_soft_max_deltas."exp_delta_Score_0" AS "exp_delta_Score_0", score_soft_max_deltas."exp_delta_Score_1" AS "exp_delta_Score_1", score_soft_max_deltas."exp_delta_Score_2" AS "exp_delta_Score_2", score_soft_max_deltas."exp_delta_Score_3" AS "exp_delta_Score_3", sum_exp_t."KEY_sum" AS "KEY_sum", sum_exp_t."sum_ExpDeltaScore" AS "sum_ExpDeltaScore" 
FROM score_soft_max_deltas LEFT OUTER JOIN (SELECT score_class_union_soft."KEY" AS "KEY_sum", sum(score_class_union_soft."exp_delta_Score") AS "sum_ExpDeltaScore" 
FROM score_class_union_soft GROUP BY score_class_union_soft."KEY") AS sum_exp_t ON score_soft_max_deltas."KEY" = sum_exp_t."KEY_sum"), 
union_with_max AS 
(SELECT score_class_union."KEY_u" AS "KEY_u", score_class_union.class AS class, score_class_union."LogProba" AS "LogProba", score_class_union."Proba" AS "Proba", score_class_union."Score" AS "Score", score_soft_max."KEY" AS "KEY", score_soft_max."Score_0" AS "Score_0", score_soft_max."Score_1" AS "Score_1", score_soft_max."Score_2" AS "Score_2", score_soft_max."Score_3" AS "Score_3", score_soft_max."Proba_0" AS "Proba_0", score_soft_max."Proba_1" AS "Proba_1", score_soft_max."Proba_2" AS "Proba_2", score_soft_max."Proba_3" AS "Proba_3", score_soft_max."LogProba_0" AS "LogProba_0", score_soft_max."LogProba_1" AS "LogProba_1", score_soft_max."LogProba_2" AS "LogProba_2", score_soft_max."LogProba_3" AS "LogProba_3", score_soft_max."Decision" AS "Decision", score_soft_max."DecisionProba" AS "DecisionProba", score_soft_max."KEY_m" AS "KEY_m", score_soft_max."max_Score" AS "max_Score", score_soft_max."exp_delta_Score_0" AS "exp_delta_Score_0", score_soft_max."exp_delta_Score_1" AS "exp_delta_Score_1", score_soft_max."exp_delta_Score_2" AS "exp_delta_Score_2", score_soft_max."exp_delta_Score_3" AS "exp_delta_Score_3", score_soft_max."KEY_sum" AS "KEY_sum", score_soft_max."sum_ExpDeltaScore" AS "sum_ExpDeltaScore" 
FROM score_class_union LEFT OUTER JOIN score_soft_max ON score_class_union."KEY_u" = score_soft_max."KEY"), 
arg_max_cte AS 
(SELECT score_soft_max."KEY" AS "KEY", score_soft_max."Score_0" AS "Score_0", score_soft_max."Score_1" AS "Score_1", score_soft_max."Score_2" AS "Score_2", score_soft_max."Score_3" AS "Score_3", score_soft_max."Proba_0" AS "Proba_0", score_soft_max."Proba_1" AS "Proba_1", score_soft_max."Proba_2" AS "Proba_2", score_soft_max."Proba_3" AS "Proba_3", score_soft_max."LogProba_0" AS "LogProba_0", score_soft_max."LogProba_1" AS "LogProba_1", score_soft_max."LogProba_2" AS "LogProba_2", score_soft_max."LogProba_3" AS "LogProba_3", score_soft_max."Decision" AS "Decision", score_soft_max."DecisionProba" AS "DecisionProba", score_soft_max."KEY_m" AS "KEY_m", score_soft_max."max_Score" AS "max_Score", score_soft_max."exp_delta_Score_0" AS "exp_delta_Score_0", score_soft_max."exp_delta_Score_1" AS "exp_delta_Score_1", score_soft_max."exp_delta_Score_2" AS "exp_delta_Score_2", score_soft_max."exp_delta_Score_3" AS "exp_delta_Score_3", score_soft_max."KEY_sum" AS "KEY_sum", score_soft_max."sum_ExpDeltaScore" AS "sum_ExpDeltaScore", "arg_max_t_Score"."KEY_Score" AS "KEY_Score", "arg_max_t_Score"."arg_max_Score" AS "arg_max_Score", soft_max_comp."KEY_softmax" AS "KEY_softmax", soft_max_comp."SoftProba_0" AS "SoftProba_0", soft_max_comp."SoftProba_1" AS "SoftProba_1", soft_max_comp."SoftProba_2" AS "SoftProba_2", soft_max_comp."SoftProba_3" AS "SoftProba_3" 
FROM score_soft_max LEFT OUTER JOIN (SELECT union_with_max."KEY" AS "KEY_Score", min(union_with_max.class) AS "arg_max_Score" 
FROM union_with_max 
WHERE union_with_max."max_Score" <= union_with_max."Score" GROUP BY union_with_max."KEY") AS "arg_max_t_Score" ON score_soft_max."KEY" = "arg_max_t_Score"."KEY_Score" LEFT OUTER JOIN (SELECT score_soft_max."KEY" AS "KEY_softmax", score_soft_max."exp_delta_Score_0" / score_soft_max."sum_ExpDeltaScore" AS "SoftProba_0", score_soft_max."exp_delta_Score_1" / score_soft_max."sum_ExpDeltaScore" AS "SoftProba_1", score_soft_max."exp_delta_Score_2" / score_soft_max."sum_ExpDeltaScore" AS "SoftProba_2", score_soft_max."exp_delta_Score_3" / score_soft_max."sum_ExpDeltaScore" AS "SoftProba_3" 
FROM score_soft_max) AS soft_max_comp ON soft_max_comp."KEY_softmax" = "arg_max_t_Score"."KEY_Score")
 SELECT arg_max_cte."KEY" AS "KEY", arg_max_cte."Score_0" AS "Score_0", arg_max_cte."Score_1" AS "Score_1", arg_max_cte."Score_2" AS "Score_2", arg_max_cte."Score_3" AS "Score_3", arg_max_cte."SoftProba_0" AS "Proba_0", arg_max_cte."SoftProba_1" AS "Proba_1", arg_max_cte."SoftProba_2" AS "Proba_2", arg_max_cte."SoftProba_3" AS "Proba_3", CASE WHEN (arg_max_cte."SoftProba_0" IS NULL OR arg_max_cte."SoftProba_0" > 0.0) THEN ln(arg_max_cte."SoftProba_0") ELSE -1.79769313486231e+308 END AS "LogProba_0", CASE WHEN (arg_max_cte."SoftProba_1" IS NULL OR arg_max_cte."SoftProba_1" > 0.0) THEN ln(arg_max_cte."SoftProba_1") ELSE -1.79769313486231e+308 END AS "LogProba_1", CASE WHEN (arg_max_cte."SoftProba_2" IS NULL OR arg_max_cte."SoftProba_2" > 0.0) THEN ln(arg_max_cte."SoftProba_2") ELSE -1.79769313486231e+308 END AS "LogProba_2", CASE WHEN (arg_max_cte."SoftProba_3" IS NULL OR arg_max_cte."SoftProba_3" > 0.0) THEN ln(arg_max_cte."SoftProba_3") ELSE -1.79769313486231e+308 END AS "LogProba_3", arg_max_cte."arg_max_Score" AS "Decision", CASE WHEN (arg_max_cte."SoftProba_0" <= CASE WHEN (arg_max_cte."SoftProba_1" <= CASE WHEN (arg_max_cte."SoftProba_2" <= arg_max_cte."SoftProba_3") THEN arg_max_cte."SoftProba_3" ELSE arg_max_cte."SoftProba_2" END) THEN CASE WHEN (arg_max_cte."SoftProba_2" <= arg_max_cte."SoftProba_3") THEN arg_max_cte."SoftProba_3" ELSE arg_max_cte."SoftProba_2" END ELSE arg_max_cte."SoftProba_1" END) THEN CASE WHEN (arg_max_cte."SoftProba_1" <= CASE WHEN (arg_max_cte."SoftProba_2" <= arg_max_cte."SoftProba_3") THEN arg_max_cte."SoftProba_3" ELSE arg_max_cte."SoftProba_2" END) THEN CASE WHEN (arg_max_cte."SoftProba_2" <= arg_max_cte."SoftProba_3") THEN arg_max_cte."SoftProba_3" ELSE arg_max_cte."SoftProba_2" END ELSE arg_max_cte."SoftProba_1" END ELSE arg_max_cte."SoftProba_0" END AS "DecisionProba" 
FROM arg_max_cte