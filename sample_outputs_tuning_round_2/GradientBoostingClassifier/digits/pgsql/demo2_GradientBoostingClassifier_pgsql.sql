-- This SQL code was generated by sklearn2sql (development version).
-- Copyright 2017

WITH "Score_Union_CTE_0" AS 
(WITH "DT_node_lookup" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_36" <= 0.5) THEN CASE WHEN ("ADS"."Feature_28" <= 4.5) THEN CASE WHEN ("ADS"."Feature_21" <= 0.5) THEN 3 ELSE 4 END ELSE 5 END ELSE CASE WHEN ("ADS"."Feature_36" <= 3.5) THEN CASE WHEN ("ADS"."Feature_52" <= 14.5) THEN 8 ELSE 9 END ELSE 10 END END AS node_id_2 
FROM digits AS "ADS"), 
"DT_node_data" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 13 AS count, 3 AS depth, 2 AS parent_id, -0.22760757878940036 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 137 AS count, 3 AS depth, 2 AS parent_id, 8.742814665303309 AS "Estimator" UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 69 AS count, 2 AS depth, 1 AS parent_id, -0.9995597442672282 AS "Estimator" UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 64 AS count, 3 AS depth, 7 AS parent_id, -0.9995597442672278 AS "Estimator" UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 15 AS count, 3 AS depth, 7 AS parent_id, 1.6765410960559064 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1139 AS count, 2 AS depth, 6 AS parent_id, -0.9995597442672278 AS "Estimator") AS "Values"), 
"DT_Output" AS 
(SELECT "DT_node_lookup"."KEY" AS "KEY", "DT_node_lookup".node_id_2 AS node_id_2, "DT_node_data".node_id AS node_id, "DT_node_data".feature AS feature, "DT_node_data".threshold AS threshold, "DT_node_data".count AS count, "DT_node_data".depth AS depth, "DT_node_data".parent_id AS parent_id, "DT_node_data"."Estimator" AS "Estimator" 
FROM "DT_node_lookup" LEFT OUTER JOIN "DT_node_data" ON "DT_node_lookup".node_id_2 = "DT_node_data".node_id), 
"GB_Tree_0_0" AS 
(SELECT "DT_Output"."KEY" AS "KEY", "DT_Output"."Estimator" AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3", 0.0 AS "Score_4", 0.0 AS "Score_5", 0.0 AS "Score_6", 0.0 AS "Score_7", 0.0 AS "Score_8", 0.0 AS "Score_9" 
FROM "DT_Output"), 
"DT_node_lookup_1" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_19" <= 15.5) THEN CASE WHEN ("ADS"."Feature_10" <= 0.5) THEN CASE WHEN ("ADS"."Feature_20" <= 14.5) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_3" <= 1.5) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_46" <= 0.5) THEN CASE WHEN ("ADS"."Feature_30" <= 0.5) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_5" <= 12.0) THEN 13 ELSE 14 END END END AS node_id_2 
FROM digits AS "ADS"), 
"DT_node_data_1" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 46 AS count, 3 AS depth, 2 AS parent_id, -0.3517473553055952 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 38 AS count, 3 AS depth, 2 AS parent_id, 7.592268400034418 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 8 AS count, 3 AS depth, 5 AS parent_id, 2.709546670942461 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1144 AS count, 3 AS depth, 5 AS parent_id, -0.9384401149091173 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 116 AS count, 3 AS depth, 9 AS parent_id, 7.103330644934696 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 15 AS count, 3 AS depth, 9 AS parent_id, -0.3403475331968616 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 61 AS count, 3 AS depth, 12 AS parent_id, -0.9999219866864447 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 9 AS count, 3 AS depth, 12 AS parent_id, 4.496261140699073 AS "Estimator") AS "Values"), 
"DT_Output_1" AS 
(SELECT "DT_node_lookup_1"."KEY" AS "KEY", "DT_node_lookup_1".node_id_2 AS node_id_2, "DT_node_data_1".node_id AS node_id, "DT_node_data_1".feature AS feature, "DT_node_data_1".threshold AS threshold, "DT_node_data_1".count AS count, "DT_node_data_1".depth AS depth, "DT_node_data_1".parent_id AS parent_id, "DT_node_data_1"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_1" LEFT OUTER JOIN "DT_node_data_1" ON "DT_node_lookup_1".node_id_2 = "DT_node_data_1".node_id), 
"GB_Tree_0_1" AS 
(SELECT "DT_Output_1"."KEY" AS "KEY", 0.0 AS "Score_0", "DT_Output_1"."Estimator" AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3", 0.0 AS "Score_4", 0.0 AS "Score_5", 0.0 AS "Score_6", 0.0 AS "Score_7", 0.0 AS "Score_8", 0.0 AS "Score_9" 
FROM "DT_Output_1"), 
"DT_node_lookup_2" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_62" <= 2.5) THEN CASE WHEN ("ADS"."Feature_37" <= 2.5) THEN CASE WHEN ("ADS"."Feature_54" <= 1.5) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_45" <= 0.5) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_46" <= 1.5) THEN CASE WHEN ("ADS"."Feature_27" <= 10.5) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_52" <= 13.5) THEN 13 ELSE 14 END END END AS node_id_2 
FROM digits AS "ADS"), 
"DT_node_data_2" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 188 AS count, 3 AS depth, 2 AS parent_id, -0.8382643447649336 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 34 AS count, 3 AS depth, 2 AS parent_id, 6.525494363647995 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 61 AS count, 3 AS depth, 5 AS parent_id, -0.5180593423905276 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 826 AS count, 3 AS depth, 5 AS parent_id, -0.9993133317940248 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 96 AS count, 3 AS depth, 9 AS parent_id, 8.317048230711826 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 58 AS count, 3 AS depth, 9 AS parent_id, 1.6958650475017645 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 162 AS count, 3 AS depth, 12 AS parent_id, -0.9411008827563914 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 12 AS count, 3 AS depth, 12 AS parent_id, 6.389933642948087 AS "Estimator") AS "Values"), 
"DT_Output_2" AS 
(SELECT "DT_node_lookup_2"."KEY" AS "KEY", "DT_node_lookup_2".node_id_2 AS node_id_2, "DT_node_data_2".node_id AS node_id, "DT_node_data_2".feature AS feature, "DT_node_data_2".threshold AS threshold, "DT_node_data_2".count AS count, "DT_node_data_2".depth AS depth, "DT_node_data_2".parent_id AS parent_id, "DT_node_data_2"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_2" LEFT OUTER JOIN "DT_node_data_2" ON "DT_node_lookup_2".node_id_2 = "DT_node_data_2".node_id), 
"GB_Tree_0_2" AS 
(SELECT "DT_Output_2"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", "DT_Output_2"."Estimator" AS "Score_2", 0.0 AS "Score_3", 0.0 AS "Score_4", 0.0 AS "Score_5", 0.0 AS "Score_6", 0.0 AS "Score_7", 0.0 AS "Score_8", 0.0 AS "Score_9" 
FROM "DT_Output_2"), 
"DT_node_lookup_3" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_26" <= 0.5) THEN CASE WHEN ("ADS"."Feature_43" <= 2.5) THEN CASE WHEN ("ADS"."Feature_19" <= 11.5) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_46" <= 10.0) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_26" <= 5.5) THEN CASE WHEN ("ADS"."Feature_46" <= 3.5) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_18" <= 2.5) THEN 13 ELSE 14 END END END AS node_id_2 
FROM digits AS "ADS"), 
"DT_node_data_3" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 99 AS count, 3 AS depth, 2 AS parent_id, 8.296453605307239 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 8 AS count, 3 AS depth, 2 AS parent_id, -1.0006634481136996 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 155 AS count, 3 AS depth, 5 AS parent_id, -0.6604549772921418 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 5 AS parent_id, 8.740215902923268 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 160 AS count, 3 AS depth, 9 AS parent_id, -0.4906854039765834 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 62 AS count, 3 AS depth, 9 AS parent_id, 2.9616584385537266 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 52 AS count, 3 AS depth, 12 AS parent_id, -0.035864678987977225 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 900 AS count, 3 AS depth, 12 AS parent_id, -0.9209969790672276 AS "Estimator") AS "Values"), 
"DT_Output_3" AS 
(SELECT "DT_node_lookup_3"."KEY" AS "KEY", "DT_node_lookup_3".node_id_2 AS node_id_2, "DT_node_data_3".node_id AS node_id, "DT_node_data_3".feature AS feature, "DT_node_data_3".threshold AS threshold, "DT_node_data_3".count AS count, "DT_node_data_3".depth AS depth, "DT_node_data_3".parent_id AS parent_id, "DT_node_data_3"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_3" LEFT OUTER JOIN "DT_node_data_3" ON "DT_node_lookup_3".node_id_2 = "DT_node_data_3".node_id), 
"GB_Tree_0_3" AS 
(SELECT "DT_Output_3"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", "DT_Output_3"."Estimator" AS "Score_3", 0.0 AS "Score_4", 0.0 AS "Score_5", 0.0 AS "Score_6", 0.0 AS "Score_7", 0.0 AS "Score_8", 0.0 AS "Score_9" 
FROM "DT_Output_3"), 
"DT_node_lookup_4" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_33" <= 8.5) THEN CASE WHEN ("ADS"."Feature_41" <= 8.5) THEN CASE WHEN ("ADS"."Feature_22" <= 14.5) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_13" <= 10.0) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_58" <= 0.5) THEN CASE WHEN ("ADS"."Feature_59" <= 0.5) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_5" <= 0.5) THEN 13 ELSE 14 END END END AS node_id_2 
FROM digits AS "ADS"), 
"DT_node_data_4" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1292 AS count, 3 AS depth, 2 AS parent_id, -0.701575287155163 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 17 AS count, 3 AS depth, 2 AS parent_id, 5.81162821464696 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 14 AS count, 3 AS depth, 5 AS parent_id, 8.756415935909258 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS count, 3 AS depth, 5 AS parent_id, -0.9939355926288942 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 8 AS count, 3 AS depth, 9 AS parent_id, 9.028256307343604 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 67 AS count, 3 AS depth, 9 AS parent_id, 8.641791304914054 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 15 AS count, 3 AS depth, 12 AS parent_id, 6.769343149206181 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 20 AS count, 3 AS depth, 12 AS parent_id, -0.9989294586299712 AS "Estimator") AS "Values"), 
"DT_Output_4" AS 
(SELECT "DT_node_lookup_4"."KEY" AS "KEY", "DT_node_lookup_4".node_id_2 AS node_id_2, "DT_node_data_4".node_id AS node_id, "DT_node_data_4".feature AS feature, "DT_node_data_4".threshold AS threshold, "DT_node_data_4".count AS count, "DT_node_data_4".depth AS depth, "DT_node_data_4".parent_id AS parent_id, "DT_node_data_4"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_4" LEFT OUTER JOIN "DT_node_data_4" ON "DT_node_lookup_4".node_id_2 = "DT_node_data_4".node_id), 
"GB_Tree_0_4" AS 
(SELECT "DT_Output_4"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3", "DT_Output_4"."Estimator" AS "Score_4", 0.0 AS "Score_5", 0.0 AS "Score_6", 0.0 AS "Score_7", 0.0 AS "Score_8", 0.0 AS "Score_9" 
FROM "DT_Output_4"), 
"DT_node_lookup_5" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_21" <= 1.5) THEN CASE WHEN ("ADS"."Feature_5" <= 6.5) THEN CASE WHEN ("ADS"."Feature_13" <= 6.5) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_42" <= 13.5) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_1" <= 5.0) THEN CASE WHEN ("ADS"."Feature_21" <= 3.5) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_44" <= 10.5) THEN 13 ELSE 14 END END END AS node_id_2 
FROM digits AS "ADS"), 
"DT_node_data_5" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 281 AS count, 3 AS depth, 2 AS parent_id, -0.6774107657713981 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 6 AS count, 3 AS depth, 2 AS parent_id, 7.0200344508921075 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 125 AS count, 3 AS depth, 5 AS parent_id, 8.221793490032729 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 13 AS count, 3 AS depth, 5 AS parent_id, -0.21903595131541237 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 79 AS count, 3 AS depth, 9 AS parent_id, -0.33514681288477904 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 930 AS count, 3 AS depth, 9 AS parent_id, -0.9536393272447465 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 3 AS depth, 12 AS parent_id, -0.99778658980854 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 12 AS parent_id, 8.60578245192526 AS "Estimator") AS "Values"), 
"DT_Output_5" AS 
(SELECT "DT_node_lookup_5"."KEY" AS "KEY", "DT_node_lookup_5".node_id_2 AS node_id_2, "DT_node_data_5".node_id AS node_id, "DT_node_data_5".feature AS feature, "DT_node_data_5".threshold AS threshold, "DT_node_data_5".count AS count, "DT_node_data_5".depth AS depth, "DT_node_data_5".parent_id AS parent_id, "DT_node_data_5"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_5" LEFT OUTER JOIN "DT_node_data_5" ON "DT_node_lookup_5".node_id_2 = "DT_node_data_5".node_id), 
"GB_Tree_0_5" AS 
(SELECT "DT_Output_5"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3", 0.0 AS "Score_4", "DT_Output_5"."Estimator" AS "Score_5", 0.0 AS "Score_6", 0.0 AS "Score_7", 0.0 AS "Score_8", 0.0 AS "Score_9" 
FROM "DT_Output_5"), 
"DT_node_lookup_6" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_21" <= 0.5) THEN CASE WHEN ("ADS"."Feature_42" <= 9.5) THEN CASE WHEN ("ADS"."Feature_47" <= 0.5) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_54" <= 1.5) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_4" <= 3.5) THEN CASE WHEN ("ADS"."Feature_34" <= 15.5) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_46" <= 14.5) THEN 13 ELSE 14 END END END AS node_id_2 
FROM digits AS "ADS"), 
"DT_node_data_6" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 212 AS count, 3 AS depth, 2 AS parent_id, -0.8942648172763906 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 3 AS depth, 2 AS parent_id, 8.558473116867612 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 41 AS count, 3 AS depth, 5 AS parent_id, 0.3001940885149419 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 138 AS count, 3 AS depth, 5 AS parent_id, 8.02129358665858 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 28 AS count, 3 AS depth, 9 AS parent_id, -0.9984005990659506 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS count, 3 AS depth, 9 AS parent_id, 2.976657011522307 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1002 AS count, 3 AS depth, 12 AS parent_id, -0.9878988972868565 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 9 AS count, 3 AS depth, 12 AS parent_id, 0.17128321051368545 AS "Estimator") AS "Values"), 
"DT_Output_6" AS 
(SELECT "DT_node_lookup_6"."KEY" AS "KEY", "DT_node_lookup_6".node_id_2 AS node_id_2, "DT_node_data_6".node_id AS node_id, "DT_node_data_6".feature AS feature, "DT_node_data_6".threshold AS threshold, "DT_node_data_6".count AS count, "DT_node_data_6".depth AS depth, "DT_node_data_6".parent_id AS parent_id, "DT_node_data_6"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_6" LEFT OUTER JOIN "DT_node_data_6" ON "DT_node_lookup_6".node_id_2 = "DT_node_data_6".node_id), 
"GB_Tree_0_6" AS 
(SELECT "DT_Output_6"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3", 0.0 AS "Score_4", 0.0 AS "Score_5", "DT_Output_6"."Estimator" AS "Score_6", 0.0 AS "Score_7", 0.0 AS "Score_8", 0.0 AS "Score_9" 
FROM "DT_Output_6"), 
"DT_node_lookup_7" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_60" <= 2.5) THEN CASE WHEN ("ADS"."Feature_26" <= 12.5) THEN CASE WHEN ("ADS"."Feature_37" <= 0.5) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_17" <= 1.0) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_60" <= 7.5) THEN CASE WHEN ("ADS"."Feature_29" <= 10.5) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_7" <= 1.5) THEN 13 ELSE 14 END END END AS node_id_2 
FROM digits AS "ADS"), 
"DT_node_data_7" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 10 AS count, 3 AS depth, 2 AS parent_id, 0.9903438227069358 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 90 AS count, 3 AS depth, 2 AS parent_id, 8.2433261090907 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 7 AS count, 3 AS depth, 5 AS parent_id, 5.900807049580343 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 27 AS count, 3 AS depth, 5 AS parent_id, -0.9971896894477374 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 63 AS count, 3 AS depth, 9 AS parent_id, -0.6657486061530039 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 63 AS count, 3 AS depth, 9 AS parent_id, 4.13945902397381 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1170 AS count, 3 AS depth, 12 AS parent_id, -0.9345917919179552 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 7 AS count, 3 AS depth, 12 AS parent_id, 4.911953200262633 AS "Estimator") AS "Values"), 
"DT_Output_7" AS 
(SELECT "DT_node_lookup_7"."KEY" AS "KEY", "DT_node_lookup_7".node_id_2 AS node_id_2, "DT_node_data_7".node_id AS node_id, "DT_node_data_7".feature AS feature, "DT_node_data_7".threshold AS threshold, "DT_node_data_7".count AS count, "DT_node_data_7".depth AS depth, "DT_node_data_7".parent_id AS parent_id, "DT_node_data_7"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_7" LEFT OUTER JOIN "DT_node_data_7" ON "DT_node_lookup_7".node_id_2 = "DT_node_data_7".node_id), 
"GB_Tree_0_7" AS 
(SELECT "DT_Output_7"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3", 0.0 AS "Score_4", 0.0 AS "Score_5", 0.0 AS "Score_6", "DT_Output_7"."Estimator" AS "Score_7", 0.0 AS "Score_8", 0.0 AS "Score_9" 
FROM "DT_Output_7")
 SELECT "Score_Union_CTE_esu_0"."KEY", "Score_Union_CTE_esu_0"."Score_0", "Score_Union_CTE_esu_0"."Score_1", "Score_Union_CTE_esu_0"."Score_2", "Score_Union_CTE_esu_0"."Score_3", "Score_Union_CTE_esu_0"."Score_4", "Score_Union_CTE_esu_0"."Score_5", "Score_Union_CTE_esu_0"."Score_6", "Score_Union_CTE_esu_0"."Score_7", "Score_Union_CTE_esu_0"."Score_8", "Score_Union_CTE_esu_0"."Score_9" 
FROM (SELECT "GB_Tree_0_0"."KEY" AS "KEY", "GB_Tree_0_0"."Score_0" AS "Score_0", "GB_Tree_0_0"."Score_1" AS "Score_1", "GB_Tree_0_0"."Score_2" AS "Score_2", "GB_Tree_0_0"."Score_3" AS "Score_3", "GB_Tree_0_0"."Score_4" AS "Score_4", "GB_Tree_0_0"."Score_5" AS "Score_5", "GB_Tree_0_0"."Score_6" AS "Score_6", "GB_Tree_0_0"."Score_7" AS "Score_7", "GB_Tree_0_0"."Score_8" AS "Score_8", "GB_Tree_0_0"."Score_9" AS "Score_9" 
FROM "GB_Tree_0_0" UNION ALL SELECT "GB_Tree_0_1"."KEY" AS "KEY", "GB_Tree_0_1"."Score_0" AS "Score_0", "GB_Tree_0_1"."Score_1" AS "Score_1", "GB_Tree_0_1"."Score_2" AS "Score_2", "GB_Tree_0_1"."Score_3" AS "Score_3", "GB_Tree_0_1"."Score_4" AS "Score_4", "GB_Tree_0_1"."Score_5" AS "Score_5", "GB_Tree_0_1"."Score_6" AS "Score_6", "GB_Tree_0_1"."Score_7" AS "Score_7", "GB_Tree_0_1"."Score_8" AS "Score_8", "GB_Tree_0_1"."Score_9" AS "Score_9" 
FROM "GB_Tree_0_1" UNION ALL SELECT "GB_Tree_0_2"."KEY" AS "KEY", "GB_Tree_0_2"."Score_0" AS "Score_0", "GB_Tree_0_2"."Score_1" AS "Score_1", "GB_Tree_0_2"."Score_2" AS "Score_2", "GB_Tree_0_2"."Score_3" AS "Score_3", "GB_Tree_0_2"."Score_4" AS "Score_4", "GB_Tree_0_2"."Score_5" AS "Score_5", "GB_Tree_0_2"."Score_6" AS "Score_6", "GB_Tree_0_2"."Score_7" AS "Score_7", "GB_Tree_0_2"."Score_8" AS "Score_8", "GB_Tree_0_2"."Score_9" AS "Score_9" 
FROM "GB_Tree_0_2" UNION ALL SELECT "GB_Tree_0_3"."KEY" AS "KEY", "GB_Tree_0_3"."Score_0" AS "Score_0", "GB_Tree_0_3"."Score_1" AS "Score_1", "GB_Tree_0_3"."Score_2" AS "Score_2", "GB_Tree_0_3"."Score_3" AS "Score_3", "GB_Tree_0_3"."Score_4" AS "Score_4", "GB_Tree_0_3"."Score_5" AS "Score_5", "GB_Tree_0_3"."Score_6" AS "Score_6", "GB_Tree_0_3"."Score_7" AS "Score_7", "GB_Tree_0_3"."Score_8" AS "Score_8", "GB_Tree_0_3"."Score_9" AS "Score_9" 
FROM "GB_Tree_0_3" UNION ALL SELECT "GB_Tree_0_4"."KEY" AS "KEY", "GB_Tree_0_4"."Score_0" AS "Score_0", "GB_Tree_0_4"."Score_1" AS "Score_1", "GB_Tree_0_4"."Score_2" AS "Score_2", "GB_Tree_0_4"."Score_3" AS "Score_3", "GB_Tree_0_4"."Score_4" AS "Score_4", "GB_Tree_0_4"."Score_5" AS "Score_5", "GB_Tree_0_4"."Score_6" AS "Score_6", "GB_Tree_0_4"."Score_7" AS "Score_7", "GB_Tree_0_4"."Score_8" AS "Score_8", "GB_Tree_0_4"."Score_9" AS "Score_9" 
FROM "GB_Tree_0_4" UNION ALL SELECT "GB_Tree_0_5"."KEY" AS "KEY", "GB_Tree_0_5"."Score_0" AS "Score_0", "GB_Tree_0_5"."Score_1" AS "Score_1", "GB_Tree_0_5"."Score_2" AS "Score_2", "GB_Tree_0_5"."Score_3" AS "Score_3", "GB_Tree_0_5"."Score_4" AS "Score_4", "GB_Tree_0_5"."Score_5" AS "Score_5", "GB_Tree_0_5"."Score_6" AS "Score_6", "GB_Tree_0_5"."Score_7" AS "Score_7", "GB_Tree_0_5"."Score_8" AS "Score_8", "GB_Tree_0_5"."Score_9" AS "Score_9" 
FROM "GB_Tree_0_5" UNION ALL SELECT "GB_Tree_0_6"."KEY" AS "KEY", "GB_Tree_0_6"."Score_0" AS "Score_0", "GB_Tree_0_6"."Score_1" AS "Score_1", "GB_Tree_0_6"."Score_2" AS "Score_2", "GB_Tree_0_6"."Score_3" AS "Score_3", "GB_Tree_0_6"."Score_4" AS "Score_4", "GB_Tree_0_6"."Score_5" AS "Score_5", "GB_Tree_0_6"."Score_6" AS "Score_6", "GB_Tree_0_6"."Score_7" AS "Score_7", "GB_Tree_0_6"."Score_8" AS "Score_8", "GB_Tree_0_6"."Score_9" AS "Score_9" 
FROM "GB_Tree_0_6" UNION ALL SELECT "GB_Tree_0_7"."KEY" AS "KEY", "GB_Tree_0_7"."Score_0" AS "Score_0", "GB_Tree_0_7"."Score_1" AS "Score_1", "GB_Tree_0_7"."Score_2" AS "Score_2", "GB_Tree_0_7"."Score_3" AS "Score_3", "GB_Tree_0_7"."Score_4" AS "Score_4", "GB_Tree_0_7"."Score_5" AS "Score_5", "GB_Tree_0_7"."Score_6" AS "Score_6", "GB_Tree_0_7"."Score_7" AS "Score_7", "GB_Tree_0_7"."Score_8" AS "Score_8", "GB_Tree_0_7"."Score_9" AS "Score_9" 
FROM "GB_Tree_0_7") AS "Score_Union_CTE_esu_0"), 
"Score_Union_CTE_1" AS 
(WITH "DT_node_lookup_8" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_38" <= 0.5) THEN CASE WHEN ("ADS"."Feature_42" <= 7.5) THEN CASE WHEN ("ADS"."Feature_45" <= 11.5) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_51" <= 12.5) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_27" <= 12.5) THEN CASE WHEN ("ADS"."Feature_42" <= 10.5) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_43" <= 7.5) THEN 13 ELSE 14 END END END AS node_id_2 
FROM digits AS "ADS"), 
"DT_node_data_8" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 285 AS count, 3 AS depth, 2 AS parent_id, -0.77633590027168 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 117 AS count, 3 AS depth, 2 AS parent_id, 0.581494579527952 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 137 AS count, 3 AS depth, 5 AS parent_id, 5.423844933129777 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 140 AS count, 3 AS depth, 5 AS parent_id, -0.09588706190665615 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 272 AS count, 3 AS depth, 9 AS parent_id, -0.997523571246307 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 283 AS count, 3 AS depth, 9 AS parent_id, -0.9923912531257295 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 142 AS count, 3 AS depth, 12 AS parent_id, -0.9315831437509541 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 61 AS count, 3 AS depth, 12 AS parent_id, 0.5403871904597768 AS "Estimator") AS "Values"), 
"DT_Output_8" AS 
(SELECT "DT_node_lookup_8"."KEY" AS "KEY", "DT_node_lookup_8".node_id_2 AS node_id_2, "DT_node_data_8".node_id AS node_id, "DT_node_data_8".feature AS feature, "DT_node_data_8".threshold AS threshold, "DT_node_data_8".count AS count, "DT_node_data_8".depth AS depth, "DT_node_data_8".parent_id AS parent_id, "DT_node_data_8"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_8" LEFT OUTER JOIN "DT_node_data_8" ON "DT_node_lookup_8".node_id_2 = "DT_node_data_8".node_id), 
"GB_Tree_0_8" AS 
(SELECT "DT_Output_8"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3", 0.0 AS "Score_4", 0.0 AS "Score_5", 0.0 AS "Score_6", 0.0 AS "Score_7", "DT_Output_8"."Estimator" AS "Score_8", 0.0 AS "Score_9" 
FROM "DT_Output_8"), 
"DT_node_lookup_9" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_29" <= 13.5) THEN CASE WHEN ("ADS"."Feature_21" <= 15.5) THEN CASE WHEN ("ADS"."Feature_52" <= 2.5) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_42" <= 0.5) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_43" <= 0.5) THEN CASE WHEN ("ADS"."Feature_33" <= 3.5) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_17" <= 4.5) THEN 13 ELSE 14 END END END AS node_id_2 
FROM digits AS "ADS"), 
"DT_node_data_9" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 122 AS count, 3 AS depth, 2 AS parent_id, -0.318786839462255 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 885 AS count, 3 AS depth, 2 AS parent_id, -0.8901330815956668 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 26 AS count, 3 AS depth, 5 AS parent_id, 4.63271356908436 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 54 AS count, 3 AS depth, 5 AS parent_id, -0.61761340692837 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 122 AS count, 3 AS depth, 9 AS parent_id, 6.627067867974808 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 20 AS count, 3 AS depth, 9 AS parent_id, -0.48017549604544757 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 185 AS count, 3 AS depth, 12 AS parent_id, -0.7216617049634363 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 23 AS count, 3 AS depth, 12 AS parent_id, 3.255504679665752 AS "Estimator") AS "Values"), 
"DT_Output_9" AS 
(SELECT "DT_node_lookup_9"."KEY" AS "KEY", "DT_node_lookup_9".node_id_2 AS node_id_2, "DT_node_data_9".node_id AS node_id, "DT_node_data_9".feature AS feature, "DT_node_data_9".threshold AS threshold, "DT_node_data_9".count AS count, "DT_node_data_9".depth AS depth, "DT_node_data_9".parent_id AS parent_id, "DT_node_data_9"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_9" LEFT OUTER JOIN "DT_node_data_9" ON "DT_node_lookup_9".node_id_2 = "DT_node_data_9".node_id), 
"GB_Tree_0_9" AS 
(SELECT "DT_Output_9"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3", 0.0 AS "Score_4", 0.0 AS "Score_5", 0.0 AS "Score_6", 0.0 AS "Score_7", 0.0 AS "Score_8", "DT_Output_9"."Estimator" AS "Score_9" 
FROM "DT_Output_9"), 
"DT_node_lookup_10" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_36" <= 0.5) THEN CASE WHEN ("ADS"."Feature_28" <= 2.5) THEN CASE WHEN ("ADS"."Feature_21" <= 0.5) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_42" <= 15.5) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_36" <= 3.5) THEN CASE WHEN ("ADS"."Feature_34" <= 12.5) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_62" <= 2.5) THEN 13 ELSE 14 END END END AS node_id_2 
FROM digits AS "ADS"), 
"DT_node_data_10" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 13 AS count, 3 AS depth, 2 AS parent_id, -0.16035698359241649 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 133 AS count, 3 AS depth, 2 AS parent_id, 3.9489609419768246 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 72 AS count, 3 AS depth, 5 AS parent_id, -0.8529719213670632 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 5 AS parent_id, 4.000337528518904 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 64 AS count, 3 AS depth, 9 AS parent_id, -0.9891697283423654 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 15 AS count, 3 AS depth, 9 AS parent_id, 1.5857728908577309 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 850 AS count, 3 AS depth, 12 AS parent_id, -0.9871308965672868 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 289 AS count, 3 AS depth, 12 AS parent_id, -0.9844970550485392 AS "Estimator") AS "Values"), 
"DT_Output_10" AS 
(SELECT "DT_node_lookup_10"."KEY" AS "KEY", "DT_node_lookup_10".node_id_2 AS node_id_2, "DT_node_data_10".node_id AS node_id, "DT_node_data_10".feature AS feature, "DT_node_data_10".threshold AS threshold, "DT_node_data_10".count AS count, "DT_node_data_10".depth AS depth, "DT_node_data_10".parent_id AS parent_id, "DT_node_data_10"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_10" LEFT OUTER JOIN "DT_node_data_10" ON "DT_node_lookup_10".node_id_2 = "DT_node_data_10".node_id), 
"GB_Tree_1_0" AS 
(SELECT "DT_Output_10"."KEY" AS "KEY", "DT_Output_10"."Estimator" AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3", 0.0 AS "Score_4", 0.0 AS "Score_5", 0.0 AS "Score_6", 0.0 AS "Score_7", 0.0 AS "Score_8", 0.0 AS "Score_9" 
FROM "DT_Output_10"), 
"DT_node_lookup_11" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_19" <= 15.5) THEN CASE WHEN ("ADS"."Feature_10" <= 0.5) THEN CASE WHEN ("ADS"."Feature_20" <= 15.5) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_3" <= 1.5) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_46" <= 0.5) THEN CASE WHEN ("ADS"."Feature_9" <= 2.5) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_29" <= 15.5) THEN 13 ELSE 14 END END END AS node_id_2 
FROM digits AS "ADS"), 
"DT_node_data_11" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 48 AS count, 3 AS depth, 2 AS parent_id, -0.15133169291116033 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 36 AS count, 3 AS depth, 2 AS parent_id, 3.8323071718743367 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 8 AS count, 3 AS depth, 5 AS parent_id, 2.1220093661369503 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1144 AS count, 3 AS depth, 5 AS parent_id, -0.9190451057699163 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 119 AS count, 3 AS depth, 9 AS parent_id, 3.767281687954002 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 12 AS count, 3 AS depth, 9 AS parent_id, -1.0962393128830272 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 61 AS count, 3 AS depth, 12 AS parent_id, -0.9905256364346557 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 9 AS count, 3 AS depth, 12 AS parent_id, 3.486771970360871 AS "Estimator") AS "Values"), 
"DT_Output_11" AS 
(SELECT "DT_node_lookup_11"."KEY" AS "KEY", "DT_node_lookup_11".node_id_2 AS node_id_2, "DT_node_data_11".node_id AS node_id, "DT_node_data_11".feature AS feature, "DT_node_data_11".threshold AS threshold, "DT_node_data_11".count AS count, "DT_node_data_11".depth AS depth, "DT_node_data_11".parent_id AS parent_id, "DT_node_data_11"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_11" LEFT OUTER JOIN "DT_node_data_11" ON "DT_node_lookup_11".node_id_2 = "DT_node_data_11".node_id), 
"GB_Tree_1_1" AS 
(SELECT "DT_Output_11"."KEY" AS "KEY", 0.0 AS "Score_0", "DT_Output_11"."Estimator" AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3", 0.0 AS "Score_4", 0.0 AS "Score_5", 0.0 AS "Score_6", 0.0 AS "Score_7", 0.0 AS "Score_8", 0.0 AS "Score_9" 
FROM "DT_Output_11"), 
"DT_node_lookup_12" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_62" <= 2.5) THEN CASE WHEN ("ADS"."Feature_37" <= 1.5) THEN CASE WHEN ("ADS"."Feature_54" <= 1.5) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_56" <= 0.5) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_45" <= 1.5) THEN CASE WHEN ("ADS"."Feature_38" <= 0.5) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_52" <= 14.5) THEN 13 ELSE 14 END END END AS node_id_2 
FROM digits AS "ADS"), 
"DT_node_data_12" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 164 AS count, 3 AS depth, 2 AS parent_id, -0.8550907532795423 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 31 AS count, 3 AS depth, 2 AS parent_id, 3.7085705124621495 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 913 AS count, 3 AS depth, 5 AS parent_id, -0.9388508776573976 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 5 AS parent_id, 8.825945653567917 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 91 AS count, 3 AS depth, 9 AS parent_id, 4.219441735874859 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 11 AS count, 3 AS depth, 9 AS parent_id, -0.9864760525788449 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 182 AS count, 3 AS depth, 12 AS parent_id, -0.7779750608133748 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 44 AS count, 3 AS depth, 12 AS parent_id, 3.1483177408098353 AS "Estimator") AS "Values"), 
"DT_Output_12" AS 
(SELECT "DT_node_lookup_12"."KEY" AS "KEY", "DT_node_lookup_12".node_id_2 AS node_id_2, "DT_node_data_12".node_id AS node_id, "DT_node_data_12".feature AS feature, "DT_node_data_12".threshold AS threshold, "DT_node_data_12".count AS count, "DT_node_data_12".depth AS depth, "DT_node_data_12".parent_id AS parent_id, "DT_node_data_12"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_12" LEFT OUTER JOIN "DT_node_data_12" ON "DT_node_lookup_12".node_id_2 = "DT_node_data_12".node_id), 
"GB_Tree_1_2" AS 
(SELECT "DT_Output_12"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", "DT_Output_12"."Estimator" AS "Score_2", 0.0 AS "Score_3", 0.0 AS "Score_4", 0.0 AS "Score_5", 0.0 AS "Score_6", 0.0 AS "Score_7", 0.0 AS "Score_8", 0.0 AS "Score_9" 
FROM "DT_Output_12"), 
"DT_node_lookup_13" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_26" <= 0.5) THEN CASE WHEN ("ADS"."Feature_43" <= 2.5) THEN CASE WHEN ("ADS"."Feature_63" <= 1.0) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_46" <= 10.0) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_18" <= 3.5) THEN CASE WHEN ("ADS"."Feature_46" <= 4.5) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_26" <= 6.5) THEN 13 ELSE 14 END END END AS node_id_2 
FROM digits AS "ADS"), 
"DT_node_data_13" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 99 AS count, 3 AS depth, 2 AS parent_id, 3.9399662408743708 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 8 AS count, 3 AS depth, 2 AS parent_id, -1.054066584833722 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 155 AS count, 3 AS depth, 5 AS parent_id, -0.6252171772503162 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 5 AS parent_id, 3.8855894534984277 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 123 AS count, 3 AS depth, 9 AS parent_id, -0.470982124739423 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 26 AS count, 3 AS depth, 9 AS parent_id, 5.304677294043618 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 171 AS count, 3 AS depth, 12 AS parent_id, -0.19597694119287293 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 854 AS count, 3 AS depth, 12 AS parent_id, -0.9214613082786357 AS "Estimator") AS "Values"), 
"DT_Output_13" AS 
(SELECT "DT_node_lookup_13"."KEY" AS "KEY", "DT_node_lookup_13".node_id_2 AS node_id_2, "DT_node_data_13".node_id AS node_id, "DT_node_data_13".feature AS feature, "DT_node_data_13".threshold AS threshold, "DT_node_data_13".count AS count, "DT_node_data_13".depth AS depth, "DT_node_data_13".parent_id AS parent_id, "DT_node_data_13"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_13" LEFT OUTER JOIN "DT_node_data_13" ON "DT_node_lookup_13".node_id_2 = "DT_node_data_13".node_id), 
"GB_Tree_1_3" AS 
(SELECT "DT_Output_13"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", "DT_Output_13"."Estimator" AS "Score_3", 0.0 AS "Score_4", 0.0 AS "Score_5", 0.0 AS "Score_6", 0.0 AS "Score_7", 0.0 AS "Score_8", 0.0 AS "Score_9" 
FROM "DT_Output_13"), 
"DT_node_lookup_14" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_33" <= 8.5) THEN CASE WHEN ("ADS"."Feature_41" <= 8.5) THEN CASE WHEN ("ADS"."Feature_22" <= 14.5) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_34" <= 10.0) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_2" <= 3.5) THEN CASE WHEN ("ADS"."Feature_54" <= 1.5) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_12" <= 1.5) THEN 13 ELSE 14 END END END AS node_id_2 
FROM digits AS "ADS"), 
"DT_node_data_14" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1292 AS count, 3 AS depth, 2 AS parent_id, -0.6657583093816167 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 17 AS count, 3 AS depth, 2 AS parent_id, 3.248419057521402 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS count, 3 AS depth, 5 AS parent_id, -0.9800407064788895 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 14 AS count, 3 AS depth, 5 AS parent_id, 4.005009520621901 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 89 AS count, 3 AS depth, 9 AS parent_id, 3.901780414396349 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 3 AS depth, 9 AS parent_id, -0.9854236819469108 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 3 AS depth, 12 AS parent_id, 4.762286073967631 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 16 AS count, 3 AS depth, 12 AS parent_id, -1.010292653370785 AS "Estimator") AS "Values"), 
"DT_Output_14" AS 
(SELECT "DT_node_lookup_14"."KEY" AS "KEY", "DT_node_lookup_14".node_id_2 AS node_id_2, "DT_node_data_14".node_id AS node_id, "DT_node_data_14".feature AS feature, "DT_node_data_14".threshold AS threshold, "DT_node_data_14".count AS count, "DT_node_data_14".depth AS depth, "DT_node_data_14".parent_id AS parent_id, "DT_node_data_14"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_14" LEFT OUTER JOIN "DT_node_data_14" ON "DT_node_lookup_14".node_id_2 = "DT_node_data_14".node_id), 
"GB_Tree_1_4" AS 
(SELECT "DT_Output_14"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3", "DT_Output_14"."Estimator" AS "Score_4", 0.0 AS "Score_5", 0.0 AS "Score_6", 0.0 AS "Score_7", 0.0 AS "Score_8", 0.0 AS "Score_9" 
FROM "DT_Output_14"), 
"DT_node_lookup_15" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_21" <= 1.5) THEN CASE WHEN ("ADS"."Feature_5" <= 6.5) THEN CASE WHEN ("ADS"."Feature_13" <= 9.5) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_42" <= 8.5) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_26" <= 15.5) THEN CASE WHEN ("ADS"."Feature_36" <= 0.5) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_2" <= 12.5) THEN 13 ELSE 14 END END END AS node_id_2 
FROM digits AS "ADS"), 
"DT_node_data_15" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 283 AS count, 3 AS depth, 2 AS parent_id, -0.601310145650367 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS count, 3 AS depth, 2 AS parent_id, 4.495321974385487 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 118 AS count, 3 AS depth, 5 AS parent_id, 3.9437904206757093 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 20 AS count, 3 AS depth, 5 AS parent_id, 0.9540791072005458 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 146 AS count, 3 AS depth, 9 AS parent_id, -0.8226806321275012 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 696 AS count, 3 AS depth, 9 AS parent_id, -0.9879306665037338 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 167 AS count, 3 AS depth, 12 AS parent_id, -0.6445792024592535 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 3 AS depth, 12 AS parent_id, 6.605589614799681 AS "Estimator") AS "Values"), 
"DT_Output_15" AS 
(SELECT "DT_node_lookup_15"."KEY" AS "KEY", "DT_node_lookup_15".node_id_2 AS node_id_2, "DT_node_data_15".node_id AS node_id, "DT_node_data_15".feature AS feature, "DT_node_data_15".threshold AS threshold, "DT_node_data_15".count AS count, "DT_node_data_15".depth AS depth, "DT_node_data_15".parent_id AS parent_id, "DT_node_data_15"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_15" LEFT OUTER JOIN "DT_node_data_15" ON "DT_node_lookup_15".node_id_2 = "DT_node_data_15".node_id), 
"GB_Tree_1_5" AS 
(SELECT "DT_Output_15"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3", 0.0 AS "Score_4", "DT_Output_15"."Estimator" AS "Score_5", 0.0 AS "Score_6", 0.0 AS "Score_7", 0.0 AS "Score_8", 0.0 AS "Score_9" 
FROM "DT_Output_15")
 SELECT "Score_Union_CTE_esu_1"."KEY", "Score_Union_CTE_esu_1"."Score_0", "Score_Union_CTE_esu_1"."Score_1", "Score_Union_CTE_esu_1"."Score_2", "Score_Union_CTE_esu_1"."Score_3", "Score_Union_CTE_esu_1"."Score_4", "Score_Union_CTE_esu_1"."Score_5", "Score_Union_CTE_esu_1"."Score_6", "Score_Union_CTE_esu_1"."Score_7", "Score_Union_CTE_esu_1"."Score_8", "Score_Union_CTE_esu_1"."Score_9" 
FROM (SELECT "GB_Tree_0_8"."KEY" AS "KEY", "GB_Tree_0_8"."Score_0" AS "Score_0", "GB_Tree_0_8"."Score_1" AS "Score_1", "GB_Tree_0_8"."Score_2" AS "Score_2", "GB_Tree_0_8"."Score_3" AS "Score_3", "GB_Tree_0_8"."Score_4" AS "Score_4", "GB_Tree_0_8"."Score_5" AS "Score_5", "GB_Tree_0_8"."Score_6" AS "Score_6", "GB_Tree_0_8"."Score_7" AS "Score_7", "GB_Tree_0_8"."Score_8" AS "Score_8", "GB_Tree_0_8"."Score_9" AS "Score_9" 
FROM "GB_Tree_0_8" UNION ALL SELECT "GB_Tree_0_9"."KEY" AS "KEY", "GB_Tree_0_9"."Score_0" AS "Score_0", "GB_Tree_0_9"."Score_1" AS "Score_1", "GB_Tree_0_9"."Score_2" AS "Score_2", "GB_Tree_0_9"."Score_3" AS "Score_3", "GB_Tree_0_9"."Score_4" AS "Score_4", "GB_Tree_0_9"."Score_5" AS "Score_5", "GB_Tree_0_9"."Score_6" AS "Score_6", "GB_Tree_0_9"."Score_7" AS "Score_7", "GB_Tree_0_9"."Score_8" AS "Score_8", "GB_Tree_0_9"."Score_9" AS "Score_9" 
FROM "GB_Tree_0_9" UNION ALL SELECT "GB_Tree_1_0"."KEY" AS "KEY", "GB_Tree_1_0"."Score_0" AS "Score_0", "GB_Tree_1_0"."Score_1" AS "Score_1", "GB_Tree_1_0"."Score_2" AS "Score_2", "GB_Tree_1_0"."Score_3" AS "Score_3", "GB_Tree_1_0"."Score_4" AS "Score_4", "GB_Tree_1_0"."Score_5" AS "Score_5", "GB_Tree_1_0"."Score_6" AS "Score_6", "GB_Tree_1_0"."Score_7" AS "Score_7", "GB_Tree_1_0"."Score_8" AS "Score_8", "GB_Tree_1_0"."Score_9" AS "Score_9" 
FROM "GB_Tree_1_0" UNION ALL SELECT "GB_Tree_1_1"."KEY" AS "KEY", "GB_Tree_1_1"."Score_0" AS "Score_0", "GB_Tree_1_1"."Score_1" AS "Score_1", "GB_Tree_1_1"."Score_2" AS "Score_2", "GB_Tree_1_1"."Score_3" AS "Score_3", "GB_Tree_1_1"."Score_4" AS "Score_4", "GB_Tree_1_1"."Score_5" AS "Score_5", "GB_Tree_1_1"."Score_6" AS "Score_6", "GB_Tree_1_1"."Score_7" AS "Score_7", "GB_Tree_1_1"."Score_8" AS "Score_8", "GB_Tree_1_1"."Score_9" AS "Score_9" 
FROM "GB_Tree_1_1" UNION ALL SELECT "GB_Tree_1_2"."KEY" AS "KEY", "GB_Tree_1_2"."Score_0" AS "Score_0", "GB_Tree_1_2"."Score_1" AS "Score_1", "GB_Tree_1_2"."Score_2" AS "Score_2", "GB_Tree_1_2"."Score_3" AS "Score_3", "GB_Tree_1_2"."Score_4" AS "Score_4", "GB_Tree_1_2"."Score_5" AS "Score_5", "GB_Tree_1_2"."Score_6" AS "Score_6", "GB_Tree_1_2"."Score_7" AS "Score_7", "GB_Tree_1_2"."Score_8" AS "Score_8", "GB_Tree_1_2"."Score_9" AS "Score_9" 
FROM "GB_Tree_1_2" UNION ALL SELECT "GB_Tree_1_3"."KEY" AS "KEY", "GB_Tree_1_3"."Score_0" AS "Score_0", "GB_Tree_1_3"."Score_1" AS "Score_1", "GB_Tree_1_3"."Score_2" AS "Score_2", "GB_Tree_1_3"."Score_3" AS "Score_3", "GB_Tree_1_3"."Score_4" AS "Score_4", "GB_Tree_1_3"."Score_5" AS "Score_5", "GB_Tree_1_3"."Score_6" AS "Score_6", "GB_Tree_1_3"."Score_7" AS "Score_7", "GB_Tree_1_3"."Score_8" AS "Score_8", "GB_Tree_1_3"."Score_9" AS "Score_9" 
FROM "GB_Tree_1_3" UNION ALL SELECT "GB_Tree_1_4"."KEY" AS "KEY", "GB_Tree_1_4"."Score_0" AS "Score_0", "GB_Tree_1_4"."Score_1" AS "Score_1", "GB_Tree_1_4"."Score_2" AS "Score_2", "GB_Tree_1_4"."Score_3" AS "Score_3", "GB_Tree_1_4"."Score_4" AS "Score_4", "GB_Tree_1_4"."Score_5" AS "Score_5", "GB_Tree_1_4"."Score_6" AS "Score_6", "GB_Tree_1_4"."Score_7" AS "Score_7", "GB_Tree_1_4"."Score_8" AS "Score_8", "GB_Tree_1_4"."Score_9" AS "Score_9" 
FROM "GB_Tree_1_4" UNION ALL SELECT "GB_Tree_1_5"."KEY" AS "KEY", "GB_Tree_1_5"."Score_0" AS "Score_0", "GB_Tree_1_5"."Score_1" AS "Score_1", "GB_Tree_1_5"."Score_2" AS "Score_2", "GB_Tree_1_5"."Score_3" AS "Score_3", "GB_Tree_1_5"."Score_4" AS "Score_4", "GB_Tree_1_5"."Score_5" AS "Score_5", "GB_Tree_1_5"."Score_6" AS "Score_6", "GB_Tree_1_5"."Score_7" AS "Score_7", "GB_Tree_1_5"."Score_8" AS "Score_8", "GB_Tree_1_5"."Score_9" AS "Score_9" 
FROM "GB_Tree_1_5") AS "Score_Union_CTE_esu_1"), 
"Score_Union_CTE_2" AS 
(WITH "DT_node_lookup_16" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_21" <= 0.5) THEN CASE WHEN ("ADS"."Feature_42" <= 9.5) THEN CASE WHEN ("ADS"."Feature_47" <= 0.5) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_54" <= 0.5) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_4" <= 3.5) THEN CASE WHEN ("ADS"."Feature_34" <= 15.5) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_46" <= 14.5) THEN 13 ELSE 14 END END END AS node_id_2 
FROM digits AS "ADS"), 
"DT_node_data_16" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 212 AS count, 3 AS depth, 2 AS parent_id, -0.8734706711607506 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 3 AS depth, 2 AS parent_id, 3.9426101655424026 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 39 AS count, 3 AS depth, 5 AS parent_id, 0.09973837191344345 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 140 AS count, 3 AS depth, 5 AS parent_id, 3.829588254943986 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 28 AS count, 3 AS depth, 9 AS parent_id, -0.9865370918343388 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS count, 3 AS depth, 9 AS parent_id, 2.158001628302401 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1002 AS count, 3 AS depth, 12 AS parent_id, -0.9753108142311064 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 9 AS count, 3 AS depth, 12 AS parent_id, 0.2114461530186644 AS "Estimator") AS "Values"), 
"DT_Output_16" AS 
(SELECT "DT_node_lookup_16"."KEY" AS "KEY", "DT_node_lookup_16".node_id_2 AS node_id_2, "DT_node_data_16".node_id AS node_id, "DT_node_data_16".feature AS feature, "DT_node_data_16".threshold AS threshold, "DT_node_data_16".count AS count, "DT_node_data_16".depth AS depth, "DT_node_data_16".parent_id AS parent_id, "DT_node_data_16"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_16" LEFT OUTER JOIN "DT_node_data_16" ON "DT_node_lookup_16".node_id_2 = "DT_node_data_16".node_id), 
"GB_Tree_1_6" AS 
(SELECT "DT_Output_16"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3", 0.0 AS "Score_4", 0.0 AS "Score_5", "DT_Output_16"."Estimator" AS "Score_6", 0.0 AS "Score_7", 0.0 AS "Score_8", 0.0 AS "Score_9" 
FROM "DT_Output_16"), 
"DT_node_lookup_17" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_60" <= 2.5) THEN CASE WHEN ("ADS"."Feature_26" <= 12.5) THEN CASE WHEN ("ADS"."Feature_37" <= 0.5) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_17" <= 1.0) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_60" <= 7.5) THEN CASE WHEN ("ADS"."Feature_29" <= 10.5) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_6" <= 15.5) THEN 13 ELSE 14 END END END AS node_id_2 
FROM digits AS "ADS"), 
"DT_node_data_17" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 10 AS count, 3 AS depth, 2 AS parent_id, 0.793018758202339 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 90 AS count, 3 AS depth, 2 AS parent_id, 3.854229577076679 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 7 AS count, 3 AS depth, 5 AS parent_id, 3.215940121643034 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 27 AS count, 3 AS depth, 5 AS parent_id, -0.9887533545709878 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 63 AS count, 3 AS depth, 9 AS parent_id, -0.6305044146484063 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 63 AS count, 3 AS depth, 9 AS parent_id, 2.6381715628788647 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1173 AS count, 3 AS depth, 12 AS parent_id, -0.9078486856651117 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS count, 3 AS depth, 12 AS parent_id, 4.465988690589141 AS "Estimator") AS "Values"), 
"DT_Output_17" AS 
(SELECT "DT_node_lookup_17"."KEY" AS "KEY", "DT_node_lookup_17".node_id_2 AS node_id_2, "DT_node_data_17".node_id AS node_id, "DT_node_data_17".feature AS feature, "DT_node_data_17".threshold AS threshold, "DT_node_data_17".count AS count, "DT_node_data_17".depth AS depth, "DT_node_data_17".parent_id AS parent_id, "DT_node_data_17"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_17" LEFT OUTER JOIN "DT_node_data_17" ON "DT_node_lookup_17".node_id_2 = "DT_node_data_17".node_id), 
"GB_Tree_1_7" AS 
(SELECT "DT_Output_17"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3", 0.0 AS "Score_4", 0.0 AS "Score_5", 0.0 AS "Score_6", "DT_Output_17"."Estimator" AS "Score_7", 0.0 AS "Score_8", 0.0 AS "Score_9" 
FROM "DT_Output_17"), 
"DT_node_lookup_18" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_38" <= 0.5) THEN CASE WHEN ("ADS"."Feature_21" <= 8.5) THEN CASE WHEN ("ADS"."Feature_11" <= 2.5) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_35" <= 11.5) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_38" <= 1.5) THEN CASE WHEN ("ADS"."Feature_22" <= 6.5) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_38" <= 3.5) THEN 13 ELSE 14 END END END AS node_id_2 
FROM digits AS "ADS"), 
"DT_node_data_18" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 3 AS depth, 2 AS parent_id, 5.74952146475722 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 377 AS count, 3 AS depth, 2 AS parent_id, -0.5575369606633953 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 134 AS count, 3 AS depth, 5 AS parent_id, -0.5440752289387217 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 165 AS count, 3 AS depth, 5 AS parent_id, 3.5994684753350232 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 78 AS count, 3 AS depth, 9 AS parent_id, -0.7011311404250874 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 14 AS count, 3 AS depth, 9 AS parent_id, 2.0599729280378734 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 160 AS count, 3 AS depth, 12 AS parent_id, -0.7044792609552878 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 506 AS count, 3 AS depth, 12 AS parent_id, -0.9853882785636687 AS "Estimator") AS "Values"), 
"DT_Output_18" AS 
(SELECT "DT_node_lookup_18"."KEY" AS "KEY", "DT_node_lookup_18".node_id_2 AS node_id_2, "DT_node_data_18".node_id AS node_id, "DT_node_data_18".feature AS feature, "DT_node_data_18".threshold AS threshold, "DT_node_data_18".count AS count, "DT_node_data_18".depth AS depth, "DT_node_data_18".parent_id AS parent_id, "DT_node_data_18"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_18" LEFT OUTER JOIN "DT_node_data_18" ON "DT_node_lookup_18".node_id_2 = "DT_node_data_18".node_id), 
"GB_Tree_1_8" AS 
(SELECT "DT_Output_18"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3", 0.0 AS "Score_4", 0.0 AS "Score_5", 0.0 AS "Score_6", 0.0 AS "Score_7", "DT_Output_18"."Estimator" AS "Score_8", 0.0 AS "Score_9" 
FROM "DT_Output_18"), 
"DT_node_lookup_19" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_29" <= 13.5) THEN CASE WHEN ("ADS"."Feature_21" <= 15.5) THEN CASE WHEN ("ADS"."Feature_42" <= 3.5) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_42" <= 0.5) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_43" <= 0.5) THEN CASE WHEN ("ADS"."Feature_33" <= 3.5) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_46" <= 7.5) THEN 13 ELSE 14 END END END AS node_id_2 
FROM digits AS "ADS"), 
"DT_node_data_19" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 401 AS count, 3 AS depth, 2 AS parent_id, -0.5399197501413943 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 606 AS count, 3 AS depth, 2 AS parent_id, -0.9657587827601566 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 26 AS count, 3 AS depth, 5 AS parent_id, 2.8232713646821006 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 54 AS count, 3 AS depth, 5 AS parent_id, -0.5798418304873042 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 122 AS count, 3 AS depth, 9 AS parent_id, 3.4774304832746856 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 20 AS count, 3 AS depth, 9 AS parent_id, -0.4449070381259576 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 198 AS count, 3 AS depth, 12 AS parent_id, -0.5174020267050018 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 10 AS count, 3 AS depth, 12 AS parent_id, 4.179449906438616 AS "Estimator") AS "Values"), 
"DT_Output_19" AS 
(SELECT "DT_node_lookup_19"."KEY" AS "KEY", "DT_node_lookup_19".node_id_2 AS node_id_2, "DT_node_data_19".node_id AS node_id, "DT_node_data_19".feature AS feature, "DT_node_data_19".threshold AS threshold, "DT_node_data_19".count AS count, "DT_node_data_19".depth AS depth, "DT_node_data_19".parent_id AS parent_id, "DT_node_data_19"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_19" LEFT OUTER JOIN "DT_node_data_19" ON "DT_node_lookup_19".node_id_2 = "DT_node_data_19".node_id), 
"GB_Tree_1_9" AS 
(SELECT "DT_Output_19"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3", 0.0 AS "Score_4", 0.0 AS "Score_5", 0.0 AS "Score_6", 0.0 AS "Score_7", 0.0 AS "Score_8", "DT_Output_19"."Estimator" AS "Score_9" 
FROM "DT_Output_19"), 
"DT_node_lookup_20" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_36" <= 0.5) THEN CASE WHEN ("ADS"."Feature_28" <= 4.5) THEN CASE WHEN ("ADS"."Feature_21" <= 0.5) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_29" <= 13.5) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_36" <= 3.5) THEN CASE WHEN ("ADS"."Feature_27" <= 7.5) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_33" <= 8.5) THEN 13 ELSE 14 END END END AS node_id_2 
FROM digits AS "ADS"), 
"DT_node_data_20" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 13 AS count, 3 AS depth, 2 AS parent_id, -0.13798247895834587 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 137 AS count, 3 AS depth, 2 AS parent_id, 2.742035644579073 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 29 AS count, 3 AS depth, 5 AS parent_id, -0.9849148430854686 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 40 AS count, 3 AS depth, 5 AS parent_id, -0.9766253698401303 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 9 AS count, 3 AS depth, 9 AS parent_id, 2.2175695100443598 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 70 AS count, 3 AS depth, 9 AS parent_id, -0.8199088908330198 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1041 AS count, 3 AS depth, 12 AS parent_id, -0.9769552495476422 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 98 AS count, 3 AS depth, 12 AS parent_id, -0.9708527070459915 AS "Estimator") AS "Values"), 
"DT_Output_20" AS 
(SELECT "DT_node_lookup_20"."KEY" AS "KEY", "DT_node_lookup_20".node_id_2 AS node_id_2, "DT_node_data_20".node_id AS node_id, "DT_node_data_20".feature AS feature, "DT_node_data_20".threshold AS threshold, "DT_node_data_20".count AS count, "DT_node_data_20".depth AS depth, "DT_node_data_20".parent_id AS parent_id, "DT_node_data_20"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_20" LEFT OUTER JOIN "DT_node_data_20" ON "DT_node_lookup_20".node_id_2 = "DT_node_data_20".node_id), 
"GB_Tree_2_0" AS 
(SELECT "DT_Output_20"."KEY" AS "KEY", "DT_Output_20"."Estimator" AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3", 0.0 AS "Score_4", 0.0 AS "Score_5", 0.0 AS "Score_6", 0.0 AS "Score_7", 0.0 AS "Score_8", 0.0 AS "Score_9" 
FROM "DT_Output_20"), 
"DT_node_lookup_21" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_19" <= 15.5) THEN CASE WHEN ("ADS"."Feature_10" <= 0.5) THEN CASE WHEN ("ADS"."Feature_20" <= 9.5) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_63" <= 14.0) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_46" <= 0.5) THEN CASE WHEN ("ADS"."Feature_27" <= 14.5) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_5" <= 14.5) THEN 13 ELSE 14 END END END AS node_id_2 
FROM digits AS "ADS"), 
"DT_node_data_21" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 38 AS count, 3 AS depth, 2 AS parent_id, -0.9914908479382134 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 46 AS count, 3 AS depth, 2 AS parent_id, 2.7301994709574706 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1147 AS count, 3 AS depth, 5 AS parent_id, -0.8931394833154884 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS count, 3 AS depth, 5 AS parent_id, 3.904108291367187 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 28 AS count, 3 AS depth, 9 AS parent_id, 0.5219866002271524 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 103 AS count, 3 AS depth, 9 AS parent_id, 2.8102001133209997 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 64 AS count, 3 AS depth, 12 AS parent_id, -0.809342859008833 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 6 AS count, 3 AS depth, 12 AS parent_id, 3.4080930606893616 AS "Estimator") AS "Values"), 
"DT_Output_21" AS 
(SELECT "DT_node_lookup_21"."KEY" AS "KEY", "DT_node_lookup_21".node_id_2 AS node_id_2, "DT_node_data_21".node_id AS node_id, "DT_node_data_21".feature AS feature, "DT_node_data_21".threshold AS threshold, "DT_node_data_21".count AS count, "DT_node_data_21".depth AS depth, "DT_node_data_21".parent_id AS parent_id, "DT_node_data_21"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_21" LEFT OUTER JOIN "DT_node_data_21" ON "DT_node_lookup_21".node_id_2 = "DT_node_data_21".node_id), 
"GB_Tree_2_1" AS 
(SELECT "DT_Output_21"."KEY" AS "KEY", 0.0 AS "Score_0", "DT_Output_21"."Estimator" AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3", 0.0 AS "Score_4", 0.0 AS "Score_5", 0.0 AS "Score_6", 0.0 AS "Score_7", 0.0 AS "Score_8", 0.0 AS "Score_9" 
FROM "DT_Output_21"), 
"DT_node_lookup_22" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_62" <= 2.5) THEN CASE WHEN ("ADS"."Feature_26" <= 1.5) THEN CASE WHEN ("ADS"."Feature_37" <= 1.5) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_56" <= 0.5) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_45" <= 1.5) THEN CASE WHEN ("ADS"."Feature_38" <= 0.5) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_52" <= 14.5) THEN 13 ELSE 14 END END END AS node_id_2 
FROM digits AS "ADS"), 
"DT_node_data_22" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 39 AS count, 3 AS depth, 2 AS parent_id, 2.471545086039188 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 161 AS count, 3 AS depth, 2 AS parent_id, -0.6724893039068651 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 908 AS count, 3 AS depth, 5 AS parent_id, -0.9063006727414583 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 5 AS parent_id, 3.9327041800813025 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 91 AS count, 3 AS depth, 9 AS parent_id, 2.926244268860364 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 11 AS count, 3 AS depth, 9 AS parent_id, -0.9742988100110138 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 182 AS count, 3 AS depth, 12 AS parent_id, -0.7493815212792161 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 44 AS count, 3 AS depth, 12 AS parent_id, 2.297690361747915 AS "Estimator") AS "Values"), 
"DT_Output_22" AS 
(SELECT "DT_node_lookup_22"."KEY" AS "KEY", "DT_node_lookup_22".node_id_2 AS node_id_2, "DT_node_data_22".node_id AS node_id, "DT_node_data_22".feature AS feature, "DT_node_data_22".threshold AS threshold, "DT_node_data_22".count AS count, "DT_node_data_22".depth AS depth, "DT_node_data_22".parent_id AS parent_id, "DT_node_data_22"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_22" LEFT OUTER JOIN "DT_node_data_22" ON "DT_node_lookup_22".node_id_2 = "DT_node_data_22".node_id), 
"GB_Tree_2_2" AS 
(SELECT "DT_Output_22"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", "DT_Output_22"."Estimator" AS "Score_2", 0.0 AS "Score_3", 0.0 AS "Score_4", 0.0 AS "Score_5", 0.0 AS "Score_6", 0.0 AS "Score_7", 0.0 AS "Score_8", 0.0 AS "Score_9" 
FROM "DT_Output_22"), 
"DT_node_lookup_23" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_26" <= 0.5) THEN CASE WHEN ("ADS"."Feature_43" <= 2.5) THEN CASE WHEN ("ADS"."Feature_63" <= 1.0) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_46" <= 10.0) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_18" <= 3.5) THEN CASE WHEN ("ADS"."Feature_46" <= 4.5) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_34" <= 0.5) THEN 13 ELSE 14 END END END AS node_id_2 
FROM digits AS "ADS"), 
"DT_node_data_23" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 99 AS count, 3 AS depth, 2 AS parent_id, 2.790997618596255 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 8 AS count, 3 AS depth, 2 AS parent_id, -1.030801898129513 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 155 AS count, 3 AS depth, 5 AS parent_id, -0.590081627299932 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 5 AS parent_id, 2.7667376190105317 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 123 AS count, 3 AS depth, 9 AS parent_id, -0.42769240930883123 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 26 AS count, 3 AS depth, 9 AS parent_id, 3.1707875829366627 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 191 AS count, 3 AS depth, 12 AS parent_id, -0.20665446502065285 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 834 AS count, 3 AS depth, 12 AS parent_id, -0.9057921947602374 AS "Estimator") AS "Values"), 
"DT_Output_23" AS 
(SELECT "DT_node_lookup_23"."KEY" AS "KEY", "DT_node_lookup_23".node_id_2 AS node_id_2, "DT_node_data_23".node_id AS node_id, "DT_node_data_23".feature AS feature, "DT_node_data_23".threshold AS threshold, "DT_node_data_23".count AS count, "DT_node_data_23".depth AS depth, "DT_node_data_23".parent_id AS parent_id, "DT_node_data_23"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_23" LEFT OUTER JOIN "DT_node_data_23" ON "DT_node_lookup_23".node_id_2 = "DT_node_data_23".node_id), 
"GB_Tree_2_3" AS 
(SELECT "DT_Output_23"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", "DT_Output_23"."Estimator" AS "Score_3", 0.0 AS "Score_4", 0.0 AS "Score_5", 0.0 AS "Score_6", 0.0 AS "Score_7", 0.0 AS "Score_8", 0.0 AS "Score_9" 
FROM "DT_Output_23")
 SELECT "Score_Union_CTE_esu_2"."KEY", "Score_Union_CTE_esu_2"."Score_0", "Score_Union_CTE_esu_2"."Score_1", "Score_Union_CTE_esu_2"."Score_2", "Score_Union_CTE_esu_2"."Score_3", "Score_Union_CTE_esu_2"."Score_4", "Score_Union_CTE_esu_2"."Score_5", "Score_Union_CTE_esu_2"."Score_6", "Score_Union_CTE_esu_2"."Score_7", "Score_Union_CTE_esu_2"."Score_8", "Score_Union_CTE_esu_2"."Score_9" 
FROM (SELECT "GB_Tree_1_6"."KEY" AS "KEY", "GB_Tree_1_6"."Score_0" AS "Score_0", "GB_Tree_1_6"."Score_1" AS "Score_1", "GB_Tree_1_6"."Score_2" AS "Score_2", "GB_Tree_1_6"."Score_3" AS "Score_3", "GB_Tree_1_6"."Score_4" AS "Score_4", "GB_Tree_1_6"."Score_5" AS "Score_5", "GB_Tree_1_6"."Score_6" AS "Score_6", "GB_Tree_1_6"."Score_7" AS "Score_7", "GB_Tree_1_6"."Score_8" AS "Score_8", "GB_Tree_1_6"."Score_9" AS "Score_9" 
FROM "GB_Tree_1_6" UNION ALL SELECT "GB_Tree_1_7"."KEY" AS "KEY", "GB_Tree_1_7"."Score_0" AS "Score_0", "GB_Tree_1_7"."Score_1" AS "Score_1", "GB_Tree_1_7"."Score_2" AS "Score_2", "GB_Tree_1_7"."Score_3" AS "Score_3", "GB_Tree_1_7"."Score_4" AS "Score_4", "GB_Tree_1_7"."Score_5" AS "Score_5", "GB_Tree_1_7"."Score_6" AS "Score_6", "GB_Tree_1_7"."Score_7" AS "Score_7", "GB_Tree_1_7"."Score_8" AS "Score_8", "GB_Tree_1_7"."Score_9" AS "Score_9" 
FROM "GB_Tree_1_7" UNION ALL SELECT "GB_Tree_1_8"."KEY" AS "KEY", "GB_Tree_1_8"."Score_0" AS "Score_0", "GB_Tree_1_8"."Score_1" AS "Score_1", "GB_Tree_1_8"."Score_2" AS "Score_2", "GB_Tree_1_8"."Score_3" AS "Score_3", "GB_Tree_1_8"."Score_4" AS "Score_4", "GB_Tree_1_8"."Score_5" AS "Score_5", "GB_Tree_1_8"."Score_6" AS "Score_6", "GB_Tree_1_8"."Score_7" AS "Score_7", "GB_Tree_1_8"."Score_8" AS "Score_8", "GB_Tree_1_8"."Score_9" AS "Score_9" 
FROM "GB_Tree_1_8" UNION ALL SELECT "GB_Tree_1_9"."KEY" AS "KEY", "GB_Tree_1_9"."Score_0" AS "Score_0", "GB_Tree_1_9"."Score_1" AS "Score_1", "GB_Tree_1_9"."Score_2" AS "Score_2", "GB_Tree_1_9"."Score_3" AS "Score_3", "GB_Tree_1_9"."Score_4" AS "Score_4", "GB_Tree_1_9"."Score_5" AS "Score_5", "GB_Tree_1_9"."Score_6" AS "Score_6", "GB_Tree_1_9"."Score_7" AS "Score_7", "GB_Tree_1_9"."Score_8" AS "Score_8", "GB_Tree_1_9"."Score_9" AS "Score_9" 
FROM "GB_Tree_1_9" UNION ALL SELECT "GB_Tree_2_0"."KEY" AS "KEY", "GB_Tree_2_0"."Score_0" AS "Score_0", "GB_Tree_2_0"."Score_1" AS "Score_1", "GB_Tree_2_0"."Score_2" AS "Score_2", "GB_Tree_2_0"."Score_3" AS "Score_3", "GB_Tree_2_0"."Score_4" AS "Score_4", "GB_Tree_2_0"."Score_5" AS "Score_5", "GB_Tree_2_0"."Score_6" AS "Score_6", "GB_Tree_2_0"."Score_7" AS "Score_7", "GB_Tree_2_0"."Score_8" AS "Score_8", "GB_Tree_2_0"."Score_9" AS "Score_9" 
FROM "GB_Tree_2_0" UNION ALL SELECT "GB_Tree_2_1"."KEY" AS "KEY", "GB_Tree_2_1"."Score_0" AS "Score_0", "GB_Tree_2_1"."Score_1" AS "Score_1", "GB_Tree_2_1"."Score_2" AS "Score_2", "GB_Tree_2_1"."Score_3" AS "Score_3", "GB_Tree_2_1"."Score_4" AS "Score_4", "GB_Tree_2_1"."Score_5" AS "Score_5", "GB_Tree_2_1"."Score_6" AS "Score_6", "GB_Tree_2_1"."Score_7" AS "Score_7", "GB_Tree_2_1"."Score_8" AS "Score_8", "GB_Tree_2_1"."Score_9" AS "Score_9" 
FROM "GB_Tree_2_1" UNION ALL SELECT "GB_Tree_2_2"."KEY" AS "KEY", "GB_Tree_2_2"."Score_0" AS "Score_0", "GB_Tree_2_2"."Score_1" AS "Score_1", "GB_Tree_2_2"."Score_2" AS "Score_2", "GB_Tree_2_2"."Score_3" AS "Score_3", "GB_Tree_2_2"."Score_4" AS "Score_4", "GB_Tree_2_2"."Score_5" AS "Score_5", "GB_Tree_2_2"."Score_6" AS "Score_6", "GB_Tree_2_2"."Score_7" AS "Score_7", "GB_Tree_2_2"."Score_8" AS "Score_8", "GB_Tree_2_2"."Score_9" AS "Score_9" 
FROM "GB_Tree_2_2" UNION ALL SELECT "GB_Tree_2_3"."KEY" AS "KEY", "GB_Tree_2_3"."Score_0" AS "Score_0", "GB_Tree_2_3"."Score_1" AS "Score_1", "GB_Tree_2_3"."Score_2" AS "Score_2", "GB_Tree_2_3"."Score_3" AS "Score_3", "GB_Tree_2_3"."Score_4" AS "Score_4", "GB_Tree_2_3"."Score_5" AS "Score_5", "GB_Tree_2_3"."Score_6" AS "Score_6", "GB_Tree_2_3"."Score_7" AS "Score_7", "GB_Tree_2_3"."Score_8" AS "Score_8", "GB_Tree_2_3"."Score_9" AS "Score_9" 
FROM "GB_Tree_2_3") AS "Score_Union_CTE_esu_2"), 
"Score_Union_CTE_3" AS 
(WITH "DT_node_lookup_24" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_33" <= 8.5) THEN CASE WHEN ("ADS"."Feature_58" <= 0.5) THEN CASE WHEN ("ADS"."Feature_33" <= 3.5) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_3" <= 2.5) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_58" <= 0.5) THEN CASE WHEN ("ADS"."Feature_59" <= 2.5) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_5" <= 0.5) THEN 13 ELSE 14 END END END AS node_id_2 
FROM digits AS "ADS"), 
"DT_node_data_24" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 182 AS count, 3 AS depth, 2 AS parent_id, -0.5768368208076504 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 94 AS count, 3 AS depth, 2 AS parent_id, 3.1768532619501486 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 3 AS depth, 5 AS parent_id, 4.636040102559396 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1049 AS count, 3 AS depth, 5 AS parent_id, -0.9024786824951436 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 15 AS count, 3 AS depth, 9 AS parent_id, 2.9284362928692356 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 60 AS count, 3 AS depth, 9 AS parent_id, 2.792667168172813 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 15 AS count, 3 AS depth, 12 AS parent_id, 2.6587759957154296 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 20 AS count, 3 AS depth, 12 AS parent_id, -0.990814479454975 AS "Estimator") AS "Values"), 
"DT_Output_24" AS 
(SELECT "DT_node_lookup_24"."KEY" AS "KEY", "DT_node_lookup_24".node_id_2 AS node_id_2, "DT_node_data_24".node_id AS node_id, "DT_node_data_24".feature AS feature, "DT_node_data_24".threshold AS threshold, "DT_node_data_24".count AS count, "DT_node_data_24".depth AS depth, "DT_node_data_24".parent_id AS parent_id, "DT_node_data_24"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_24" LEFT OUTER JOIN "DT_node_data_24" ON "DT_node_lookup_24".node_id_2 = "DT_node_data_24".node_id), 
"GB_Tree_2_4" AS 
(SELECT "DT_Output_24"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3", "DT_Output_24"."Estimator" AS "Score_4", 0.0 AS "Score_5", 0.0 AS "Score_6", 0.0 AS "Score_7", 0.0 AS "Score_8", 0.0 AS "Score_9" 
FROM "DT_Output_24"), 
"DT_node_lookup_25" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_21" <= 1.5) THEN CASE WHEN ("ADS"."Feature_5" <= 6.5) THEN CASE WHEN ("ADS"."Feature_13" <= 6.5) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_42" <= 8.5) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_26" <= 15.5) THEN CASE WHEN ("ADS"."Feature_33" <= 2.5) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_58" <= 7.5) THEN 13 ELSE 14 END END END AS node_id_2 
FROM digits AS "ADS"), 
"DT_node_data_25" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 281 AS count, 3 AS depth, 2 AS parent_id, -0.5964321818673972 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 6 AS count, 3 AS depth, 2 AS parent_id, 2.6889799082898236 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 118 AS count, 3 AS depth, 5 AS parent_id, 2.7904817027422286 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 20 AS count, 3 AS depth, 5 AS parent_id, 0.8142617573349918 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 650 AS count, 3 AS depth, 9 AS parent_id, -0.9791593882840515 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 192 AS count, 3 AS depth, 9 AS parent_id, -0.8355639966752266 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 148 AS count, 3 AS depth, 12 AS parent_id, -0.9783210042434327 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 22 AS count, 3 AS depth, 12 AS parent_id, 2.4896033142477254 AS "Estimator") AS "Values"), 
"DT_Output_25" AS 
(SELECT "DT_node_lookup_25"."KEY" AS "KEY", "DT_node_lookup_25".node_id_2 AS node_id_2, "DT_node_data_25".node_id AS node_id, "DT_node_data_25".feature AS feature, "DT_node_data_25".threshold AS threshold, "DT_node_data_25".count AS count, "DT_node_data_25".depth AS depth, "DT_node_data_25".parent_id AS parent_id, "DT_node_data_25"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_25" LEFT OUTER JOIN "DT_node_data_25" ON "DT_node_lookup_25".node_id_2 = "DT_node_data_25".node_id), 
"GB_Tree_2_5" AS 
(SELECT "DT_Output_25"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3", 0.0 AS "Score_4", "DT_Output_25"."Estimator" AS "Score_5", 0.0 AS "Score_6", 0.0 AS "Score_7", 0.0 AS "Score_8", 0.0 AS "Score_9" 
FROM "DT_Output_25"), 
"DT_node_lookup_26" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_21" <= 0.5) THEN CASE WHEN ("ADS"."Feature_42" <= 9.5) THEN CASE WHEN ("ADS"."Feature_46" <= 14.5) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_54" <= 0.5) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_46" <= 14.5) THEN CASE WHEN ("ADS"."Feature_4" <= 3.5) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_10" <= 3.0) THEN 13 ELSE 14 END END END AS node_id_2 
FROM digits AS "ADS"), 
"DT_node_data_26" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 212 AS count, 3 AS depth, 2 AS parent_id, -0.853013908992241 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 3 AS depth, 2 AS parent_id, 2.7805672852777614 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 39 AS count, 3 AS depth, 5 AS parent_id, 0.11675622568758331 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 140 AS count, 3 AS depth, 5 AS parent_id, 2.70607235577123 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 32 AS count, 3 AS depth, 9 AS parent_id, -0.3003255867520965 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1002 AS count, 3 AS depth, 9 AS parent_id, -0.964534691321941 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 12 AS parent_id, 9.753186153941918 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 9 AS count, 3 AS depth, 12 AS parent_id, -0.9872582538818181 AS "Estimator") AS "Values"), 
"DT_Output_26" AS 
(SELECT "DT_node_lookup_26"."KEY" AS "KEY", "DT_node_lookup_26".node_id_2 AS node_id_2, "DT_node_data_26".node_id AS node_id, "DT_node_data_26".feature AS feature, "DT_node_data_26".threshold AS threshold, "DT_node_data_26".count AS count, "DT_node_data_26".depth AS depth, "DT_node_data_26".parent_id AS parent_id, "DT_node_data_26"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_26" LEFT OUTER JOIN "DT_node_data_26" ON "DT_node_lookup_26".node_id_2 = "DT_node_data_26".node_id), 
"GB_Tree_2_6" AS 
(SELECT "DT_Output_26"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3", 0.0 AS "Score_4", 0.0 AS "Score_5", "DT_Output_26"."Estimator" AS "Score_6", 0.0 AS "Score_7", 0.0 AS "Score_8", 0.0 AS "Score_9" 
FROM "DT_Output_26"), 
"DT_node_lookup_27" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_60" <= 2.5) THEN CASE WHEN ("ADS"."Feature_18" <= 12.5) THEN CASE WHEN ("ADS"."Feature_29" <= 0.5) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_26" <= 10.5) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_6" <= 14.5) THEN CASE WHEN ("ADS"."Feature_60" <= 7.5) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_20" <= 6.5) THEN 13 ELSE 14 END END END AS node_id_2 
FROM digits AS "ADS"), 
"DT_node_data_27" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 3 AS depth, 2 AS parent_id, -1.0243674280655004 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 80 AS count, 3 AS depth, 2 AS parent_id, 2.911240865106742 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 18 AS count, 3 AS depth, 5 AS parent_id, 2.190188027308579 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 34 AS count, 3 AS depth, 5 AS parent_id, -0.48130849599738196 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 115 AS count, 3 AS depth, 9 AS parent_id, 0.8432785830303559 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1170 AS count, 3 AS depth, 9 AS parent_id, -0.9008360979933379 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 14 AS count, 3 AS depth, 12 AS parent_id, 3.785020674154871 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS count, 3 AS depth, 12 AS parent_id, -1.0307416688253048 AS "Estimator") AS "Values"), 
"DT_Output_27" AS 
(SELECT "DT_node_lookup_27"."KEY" AS "KEY", "DT_node_lookup_27".node_id_2 AS node_id_2, "DT_node_data_27".node_id AS node_id, "DT_node_data_27".feature AS feature, "DT_node_data_27".threshold AS threshold, "DT_node_data_27".count AS count, "DT_node_data_27".depth AS depth, "DT_node_data_27".parent_id AS parent_id, "DT_node_data_27"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_27" LEFT OUTER JOIN "DT_node_data_27" ON "DT_node_lookup_27".node_id_2 = "DT_node_data_27".node_id), 
"GB_Tree_2_7" AS 
(SELECT "DT_Output_27"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3", 0.0 AS "Score_4", 0.0 AS "Score_5", 0.0 AS "Score_6", "DT_Output_27"."Estimator" AS "Score_7", 0.0 AS "Score_8", 0.0 AS "Score_9" 
FROM "DT_Output_27"), 
"DT_node_lookup_28" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_38" <= 0.5) THEN CASE WHEN ("ADS"."Feature_22" <= 0.5) THEN CASE WHEN ("ADS"."Feature_13" <= 9.5) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_35" <= 11.5) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_27" <= 12.5) THEN CASE WHEN ("ADS"."Feature_42" <= 10.5) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_43" <= 7.5) THEN 13 ELSE 14 END END END AS node_id_2 
FROM digits AS "ADS"), 
"DT_node_data_28" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 325 AS count, 3 AS depth, 2 AS parent_id, -0.7517044595010584 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 173 AS count, 3 AS depth, 2 AS parent_id, 0.9131700003737719 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 80 AS count, 3 AS depth, 5 AS parent_id, -0.07827529759892864 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 101 AS count, 3 AS depth, 5 AS parent_id, 2.8940408180650365 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 272 AS count, 3 AS depth, 9 AS parent_id, -0.9789471395824982 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 283 AS count, 3 AS depth, 9 AS parent_id, -0.9704893909165296 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 142 AS count, 3 AS depth, 12 AS parent_id, -0.898353657445381 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 61 AS count, 3 AS depth, 12 AS parent_id, 0.6022753906787083 AS "Estimator") AS "Values"), 
"DT_Output_28" AS 
(SELECT "DT_node_lookup_28"."KEY" AS "KEY", "DT_node_lookup_28".node_id_2 AS node_id_2, "DT_node_data_28".node_id AS node_id, "DT_node_data_28".feature AS feature, "DT_node_data_28".threshold AS threshold, "DT_node_data_28".count AS count, "DT_node_data_28".depth AS depth, "DT_node_data_28".parent_id AS parent_id, "DT_node_data_28"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_28" LEFT OUTER JOIN "DT_node_data_28" ON "DT_node_lookup_28".node_id_2 = "DT_node_data_28".node_id), 
"GB_Tree_2_8" AS 
(SELECT "DT_Output_28"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3", 0.0 AS "Score_4", 0.0 AS "Score_5", 0.0 AS "Score_6", 0.0 AS "Score_7", "DT_Output_28"."Estimator" AS "Score_8", 0.0 AS "Score_9" 
FROM "DT_Output_28"), 
"DT_node_lookup_29" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_29" <= 13.5) THEN CASE WHEN ("ADS"."Feature_21" <= 15.5) THEN CASE WHEN ("ADS"."Feature_42" <= 0.5) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_44" <= 0.5) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_43" <= 2.5) THEN CASE WHEN ("ADS"."Feature_33" <= 3.5) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_4" <= 0.5) THEN 13 ELSE 14 END END END AS node_id_2 
FROM digits AS "ADS"), 
"DT_node_data_29" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 320 AS count, 3 AS depth, 2 AS parent_id, -0.4556769712237901 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 687 AS count, 3 AS depth, 2 AS parent_id, -0.9201558843031686 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 26 AS count, 3 AS depth, 5 AS parent_id, 2.786350846156115 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 54 AS count, 3 AS depth, 5 AS parent_id, -0.49989997453910096 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 138 AS count, 3 AS depth, 9 AS parent_id, 2.530781567365588 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 32 AS count, 3 AS depth, 9 AS parent_id, -0.6317110473114345 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 12 AS parent_id, 5.490737209084656 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 179 AS count, 3 AS depth, 12 AS parent_id, -0.6833342512012492 AS "Estimator") AS "Values"), 
"DT_Output_29" AS 
(SELECT "DT_node_lookup_29"."KEY" AS "KEY", "DT_node_lookup_29".node_id_2 AS node_id_2, "DT_node_data_29".node_id AS node_id, "DT_node_data_29".feature AS feature, "DT_node_data_29".threshold AS threshold, "DT_node_data_29".count AS count, "DT_node_data_29".depth AS depth, "DT_node_data_29".parent_id AS parent_id, "DT_node_data_29"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_29" LEFT OUTER JOIN "DT_node_data_29" ON "DT_node_lookup_29".node_id_2 = "DT_node_data_29".node_id), 
"GB_Tree_2_9" AS 
(SELECT "DT_Output_29"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3", 0.0 AS "Score_4", 0.0 AS "Score_5", 0.0 AS "Score_6", 0.0 AS "Score_7", 0.0 AS "Score_8", "DT_Output_29"."Estimator" AS "Score_9" 
FROM "DT_Output_29"), 
"DT_node_lookup_30" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_36" <= 0.5) THEN CASE WHEN ("ADS"."Feature_28" <= 2.5) THEN CASE WHEN ("ADS"."Feature_21" <= 3.0) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_42" <= 13.5) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_28" <= 0.5) THEN CASE WHEN ("ADS"."Feature_21" <= 15.5) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_21" <= 4.5) THEN 13 ELSE 14 END END END AS node_id_2 
FROM digits AS "ADS"), 
"DT_node_data_30" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 16 AS count, 3 AS depth, 2 AS parent_id, 0.39845368148649535 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 130 AS count, 3 AS depth, 2 AS parent_id, 2.2329716211171617 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 69 AS count, 3 AS depth, 5 AS parent_id, -0.9943081320807087 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS count, 3 AS depth, 5 AS parent_id, 1.808898134805714 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 107 AS count, 3 AS depth, 9 AS parent_id, -0.8383660176399618 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS count, 3 AS depth, 9 AS parent_id, 4.204201476920782 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 422 AS count, 3 AS depth, 12 AS parent_id, -0.9663376285173293 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 685 AS count, 3 AS depth, 12 AS parent_id, -0.9704430694474929 AS "Estimator") AS "Values"), 
"DT_Output_30" AS 
(SELECT "DT_node_lookup_30"."KEY" AS "KEY", "DT_node_lookup_30".node_id_2 AS node_id_2, "DT_node_data_30".node_id AS node_id, "DT_node_data_30".feature AS feature, "DT_node_data_30".threshold AS threshold, "DT_node_data_30".count AS count, "DT_node_data_30".depth AS depth, "DT_node_data_30".parent_id AS parent_id, "DT_node_data_30"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_30" LEFT OUTER JOIN "DT_node_data_30" ON "DT_node_lookup_30".node_id_2 = "DT_node_data_30".node_id), 
"GB_Tree_3_0" AS 
(SELECT "DT_Output_30"."KEY" AS "KEY", "DT_Output_30"."Estimator" AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3", 0.0 AS "Score_4", 0.0 AS "Score_5", 0.0 AS "Score_6", 0.0 AS "Score_7", 0.0 AS "Score_8", 0.0 AS "Score_9" 
FROM "DT_Output_30"), 
"DT_node_lookup_31" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_19" <= 15.5) THEN CASE WHEN ("ADS"."Feature_10" <= 0.5) THEN CASE WHEN ("ADS"."Feature_20" <= 9.5) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_3" <= 1.5) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_46" <= 0.5) THEN CASE WHEN ("ADS"."Feature_9" <= 2.5) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_29" <= 15.5) THEN 13 ELSE 14 END END END AS node_id_2 
FROM digits AS "ADS"), 
"DT_node_data_31" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 38 AS count, 3 AS depth, 2 AS parent_id, -0.9807192623132349 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 46 AS count, 3 AS depth, 2 AS parent_id, 2.1689079547052548 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 8 AS count, 3 AS depth, 5 AS parent_id, 1.9468200421288844 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1144 AS count, 3 AS depth, 5 AS parent_id, -0.8872918323046018 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 119 AS count, 3 AS depth, 9 AS parent_id, 2.1105631749734615 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 12 AS count, 3 AS depth, 9 AS parent_id, -1.0947174900647574 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 61 AS count, 3 AS depth, 12 AS parent_id, -0.9760712176184463 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 9 AS count, 3 AS depth, 12 AS parent_id, 2.2684528495478924 AS "Estimator") AS "Values"), 
"DT_Output_31" AS 
(SELECT "DT_node_lookup_31"."KEY" AS "KEY", "DT_node_lookup_31".node_id_2 AS node_id_2, "DT_node_data_31".node_id AS node_id, "DT_node_data_31".feature AS feature, "DT_node_data_31".threshold AS threshold, "DT_node_data_31".count AS count, "DT_node_data_31".depth AS depth, "DT_node_data_31".parent_id AS parent_id, "DT_node_data_31"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_31" LEFT OUTER JOIN "DT_node_data_31" ON "DT_node_lookup_31".node_id_2 = "DT_node_data_31".node_id), 
"GB_Tree_3_1" AS 
(SELECT "DT_Output_31"."KEY" AS "KEY", 0.0 AS "Score_0", "DT_Output_31"."Estimator" AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3", 0.0 AS "Score_4", 0.0 AS "Score_5", 0.0 AS "Score_6", 0.0 AS "Score_7", 0.0 AS "Score_8", 0.0 AS "Score_9" 
FROM "DT_Output_31")
 SELECT "Score_Union_CTE_esu_3"."KEY", "Score_Union_CTE_esu_3"."Score_0", "Score_Union_CTE_esu_3"."Score_1", "Score_Union_CTE_esu_3"."Score_2", "Score_Union_CTE_esu_3"."Score_3", "Score_Union_CTE_esu_3"."Score_4", "Score_Union_CTE_esu_3"."Score_5", "Score_Union_CTE_esu_3"."Score_6", "Score_Union_CTE_esu_3"."Score_7", "Score_Union_CTE_esu_3"."Score_8", "Score_Union_CTE_esu_3"."Score_9" 
FROM (SELECT "GB_Tree_2_4"."KEY" AS "KEY", "GB_Tree_2_4"."Score_0" AS "Score_0", "GB_Tree_2_4"."Score_1" AS "Score_1", "GB_Tree_2_4"."Score_2" AS "Score_2", "GB_Tree_2_4"."Score_3" AS "Score_3", "GB_Tree_2_4"."Score_4" AS "Score_4", "GB_Tree_2_4"."Score_5" AS "Score_5", "GB_Tree_2_4"."Score_6" AS "Score_6", "GB_Tree_2_4"."Score_7" AS "Score_7", "GB_Tree_2_4"."Score_8" AS "Score_8", "GB_Tree_2_4"."Score_9" AS "Score_9" 
FROM "GB_Tree_2_4" UNION ALL SELECT "GB_Tree_2_5"."KEY" AS "KEY", "GB_Tree_2_5"."Score_0" AS "Score_0", "GB_Tree_2_5"."Score_1" AS "Score_1", "GB_Tree_2_5"."Score_2" AS "Score_2", "GB_Tree_2_5"."Score_3" AS "Score_3", "GB_Tree_2_5"."Score_4" AS "Score_4", "GB_Tree_2_5"."Score_5" AS "Score_5", "GB_Tree_2_5"."Score_6" AS "Score_6", "GB_Tree_2_5"."Score_7" AS "Score_7", "GB_Tree_2_5"."Score_8" AS "Score_8", "GB_Tree_2_5"."Score_9" AS "Score_9" 
FROM "GB_Tree_2_5" UNION ALL SELECT "GB_Tree_2_6"."KEY" AS "KEY", "GB_Tree_2_6"."Score_0" AS "Score_0", "GB_Tree_2_6"."Score_1" AS "Score_1", "GB_Tree_2_6"."Score_2" AS "Score_2", "GB_Tree_2_6"."Score_3" AS "Score_3", "GB_Tree_2_6"."Score_4" AS "Score_4", "GB_Tree_2_6"."Score_5" AS "Score_5", "GB_Tree_2_6"."Score_6" AS "Score_6", "GB_Tree_2_6"."Score_7" AS "Score_7", "GB_Tree_2_6"."Score_8" AS "Score_8", "GB_Tree_2_6"."Score_9" AS "Score_9" 
FROM "GB_Tree_2_6" UNION ALL SELECT "GB_Tree_2_7"."KEY" AS "KEY", "GB_Tree_2_7"."Score_0" AS "Score_0", "GB_Tree_2_7"."Score_1" AS "Score_1", "GB_Tree_2_7"."Score_2" AS "Score_2", "GB_Tree_2_7"."Score_3" AS "Score_3", "GB_Tree_2_7"."Score_4" AS "Score_4", "GB_Tree_2_7"."Score_5" AS "Score_5", "GB_Tree_2_7"."Score_6" AS "Score_6", "GB_Tree_2_7"."Score_7" AS "Score_7", "GB_Tree_2_7"."Score_8" AS "Score_8", "GB_Tree_2_7"."Score_9" AS "Score_9" 
FROM "GB_Tree_2_7" UNION ALL SELECT "GB_Tree_2_8"."KEY" AS "KEY", "GB_Tree_2_8"."Score_0" AS "Score_0", "GB_Tree_2_8"."Score_1" AS "Score_1", "GB_Tree_2_8"."Score_2" AS "Score_2", "GB_Tree_2_8"."Score_3" AS "Score_3", "GB_Tree_2_8"."Score_4" AS "Score_4", "GB_Tree_2_8"."Score_5" AS "Score_5", "GB_Tree_2_8"."Score_6" AS "Score_6", "GB_Tree_2_8"."Score_7" AS "Score_7", "GB_Tree_2_8"."Score_8" AS "Score_8", "GB_Tree_2_8"."Score_9" AS "Score_9" 
FROM "GB_Tree_2_8" UNION ALL SELECT "GB_Tree_2_9"."KEY" AS "KEY", "GB_Tree_2_9"."Score_0" AS "Score_0", "GB_Tree_2_9"."Score_1" AS "Score_1", "GB_Tree_2_9"."Score_2" AS "Score_2", "GB_Tree_2_9"."Score_3" AS "Score_3", "GB_Tree_2_9"."Score_4" AS "Score_4", "GB_Tree_2_9"."Score_5" AS "Score_5", "GB_Tree_2_9"."Score_6" AS "Score_6", "GB_Tree_2_9"."Score_7" AS "Score_7", "GB_Tree_2_9"."Score_8" AS "Score_8", "GB_Tree_2_9"."Score_9" AS "Score_9" 
FROM "GB_Tree_2_9" UNION ALL SELECT "GB_Tree_3_0"."KEY" AS "KEY", "GB_Tree_3_0"."Score_0" AS "Score_0", "GB_Tree_3_0"."Score_1" AS "Score_1", "GB_Tree_3_0"."Score_2" AS "Score_2", "GB_Tree_3_0"."Score_3" AS "Score_3", "GB_Tree_3_0"."Score_4" AS "Score_4", "GB_Tree_3_0"."Score_5" AS "Score_5", "GB_Tree_3_0"."Score_6" AS "Score_6", "GB_Tree_3_0"."Score_7" AS "Score_7", "GB_Tree_3_0"."Score_8" AS "Score_8", "GB_Tree_3_0"."Score_9" AS "Score_9" 
FROM "GB_Tree_3_0" UNION ALL SELECT "GB_Tree_3_1"."KEY" AS "KEY", "GB_Tree_3_1"."Score_0" AS "Score_0", "GB_Tree_3_1"."Score_1" AS "Score_1", "GB_Tree_3_1"."Score_2" AS "Score_2", "GB_Tree_3_1"."Score_3" AS "Score_3", "GB_Tree_3_1"."Score_4" AS "Score_4", "GB_Tree_3_1"."Score_5" AS "Score_5", "GB_Tree_3_1"."Score_6" AS "Score_6", "GB_Tree_3_1"."Score_7" AS "Score_7", "GB_Tree_3_1"."Score_8" AS "Score_8", "GB_Tree_3_1"."Score_9" AS "Score_9" 
FROM "GB_Tree_3_1") AS "Score_Union_CTE_esu_3"), 
"Score_Union_CTE_4" AS 
(WITH "DT_node_lookup_32" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_62" <= 2.5) THEN CASE WHEN ("ADS"."Feature_37" <= 1.5) THEN CASE WHEN ("ADS"."Feature_54" <= 1.5) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_56" <= 0.5) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_45" <= 1.5) THEN CASE WHEN ("ADS"."Feature_26" <= 10.5) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_61" <= 10.5) THEN 13 ELSE 14 END END END AS node_id_2 
FROM digits AS "ADS"), 
"DT_node_data_32" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 164 AS count, 3 AS depth, 2 AS parent_id, -0.8230929336765583 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 31 AS count, 3 AS depth, 2 AS parent_id, 2.235602841039348 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 913 AS count, 3 AS depth, 5 AS parent_id, -0.9109056752811934 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 5 AS parent_id, 2.8281338425547227 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 90 AS count, 3 AS depth, 9 AS parent_id, 2.3597495651175424 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 12 AS count, 3 AS depth, 9 AS parent_id, -0.42025784897276774 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 20 AS count, 3 AS depth, 12 AS parent_id, 2.8201524214041016 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 206 AS count, 3 AS depth, 12 AS parent_id, -0.3053442473033089 AS "Estimator") AS "Values"), 
"DT_Output_32" AS 
(SELECT "DT_node_lookup_32"."KEY" AS "KEY", "DT_node_lookup_32".node_id_2 AS node_id_2, "DT_node_data_32".node_id AS node_id, "DT_node_data_32".feature AS feature, "DT_node_data_32".threshold AS threshold, "DT_node_data_32".count AS count, "DT_node_data_32".depth AS depth, "DT_node_data_32".parent_id AS parent_id, "DT_node_data_32"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_32" LEFT OUTER JOIN "DT_node_data_32" ON "DT_node_lookup_32".node_id_2 = "DT_node_data_32".node_id), 
"GB_Tree_3_2" AS 
(SELECT "DT_Output_32"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", "DT_Output_32"."Estimator" AS "Score_2", 0.0 AS "Score_3", 0.0 AS "Score_4", 0.0 AS "Score_5", 0.0 AS "Score_6", 0.0 AS "Score_7", 0.0 AS "Score_8", 0.0 AS "Score_9" 
FROM "DT_Output_32"), 
"DT_node_lookup_33" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_26" <= 0.5) THEN CASE WHEN ("ADS"."Feature_43" <= 2.5) THEN CASE WHEN ("ADS"."Feature_19" <= 11.5) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_46" <= 10.0) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_26" <= 5.5) THEN CASE WHEN ("ADS"."Feature_43" <= 1.5) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_54" <= 5.5) THEN 13 ELSE 14 END END END AS node_id_2 
FROM digits AS "ADS"), 
"DT_node_data_33" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 99 AS count, 3 AS depth, 2 AS parent_id, 2.224913699495201 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 8 AS count, 3 AS depth, 2 AS parent_id, -1.0364707478121582 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 155 AS count, 3 AS depth, 5 AS parent_id, -0.5575075808700689 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 5 AS parent_id, 2.197678533991835 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 72 AS count, 3 AS depth, 9 AS parent_id, 1.585033817023275 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 150 AS count, 3 AS depth, 9 AS parent_id, -0.5204978559843252 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 695 AS count, 3 AS depth, 12 AS parent_id, -0.9537633286898447 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 257 AS count, 3 AS depth, 12 AS parent_id, -0.4271807564075708 AS "Estimator") AS "Values"), 
"DT_Output_33" AS 
(SELECT "DT_node_lookup_33"."KEY" AS "KEY", "DT_node_lookup_33".node_id_2 AS node_id_2, "DT_node_data_33".node_id AS node_id, "DT_node_data_33".feature AS feature, "DT_node_data_33".threshold AS threshold, "DT_node_data_33".count AS count, "DT_node_data_33".depth AS depth, "DT_node_data_33".parent_id AS parent_id, "DT_node_data_33"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_33" LEFT OUTER JOIN "DT_node_data_33" ON "DT_node_lookup_33".node_id_2 = "DT_node_data_33".node_id), 
"GB_Tree_3_3" AS 
(SELECT "DT_Output_33"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", "DT_Output_33"."Estimator" AS "Score_3", 0.0 AS "Score_4", 0.0 AS "Score_5", 0.0 AS "Score_6", 0.0 AS "Score_7", 0.0 AS "Score_8", 0.0 AS "Score_9" 
FROM "DT_Output_33"), 
"DT_node_lookup_34" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_33" <= 8.5) THEN CASE WHEN ("ADS"."Feature_58" <= 0.5) THEN CASE WHEN ("ADS"."Feature_33" <= 3.5) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_22" <= 14.5) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_2" <= 3.5) THEN CASE WHEN ("ADS"."Feature_54" <= 1.5) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_12" <= 1.5) THEN 13 ELSE 14 END END END AS node_id_2 
FROM digits AS "ADS"), 
"DT_node_data_34" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 182 AS count, 3 AS depth, 2 AS parent_id, -0.5430817711131302 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 94 AS count, 3 AS depth, 2 AS parent_id, 2.2908868955733586 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1049 AS count, 3 AS depth, 5 AS parent_id, -0.8870575220235524 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 3 AS depth, 5 AS parent_id, 4.213218091719283 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 89 AS count, 3 AS depth, 9 AS parent_id, 2.2127727865847078 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 3 AS depth, 9 AS parent_id, -0.9623342733399057 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 3 AS depth, 12 AS parent_id, 2.7323000842811678 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 16 AS count, 3 AS depth, 12 AS parent_id, -1.005638633414477 AS "Estimator") AS "Values"), 
"DT_Output_34" AS 
(SELECT "DT_node_lookup_34"."KEY" AS "KEY", "DT_node_lookup_34".node_id_2 AS node_id_2, "DT_node_data_34".node_id AS node_id, "DT_node_data_34".feature AS feature, "DT_node_data_34".threshold AS threshold, "DT_node_data_34".count AS count, "DT_node_data_34".depth AS depth, "DT_node_data_34".parent_id AS parent_id, "DT_node_data_34"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_34" LEFT OUTER JOIN "DT_node_data_34" ON "DT_node_lookup_34".node_id_2 = "DT_node_data_34".node_id), 
"GB_Tree_3_4" AS 
(SELECT "DT_Output_34"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3", "DT_Output_34"."Estimator" AS "Score_4", 0.0 AS "Score_5", 0.0 AS "Score_6", 0.0 AS "Score_7", 0.0 AS "Score_8", 0.0 AS "Score_9" 
FROM "DT_Output_34"), 
"DT_node_lookup_35" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_21" <= 0.5) THEN CASE WHEN ("ADS"."Feature_5" <= 6.5) THEN CASE WHEN ("ADS"."Feature_13" <= 9.5) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_42" <= 13.5) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_21" <= 2.5) THEN CASE WHEN ("ADS"."Feature_6" <= 2.0) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_1" <= 5.0) THEN 13 ELSE 14 END END END AS node_id_2 
FROM digits AS "ADS"), 
"DT_node_data_35" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 260 AS count, 3 AS depth, 2 AS parent_id, -0.48791235894330215 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS count, 3 AS depth, 2 AS parent_id, 2.4550496721546913 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 116 AS count, 3 AS depth, 5 AS parent_id, 2.2510921401122443 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 13 AS count, 3 AS depth, 5 AS parent_id, -0.24015766813537215 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 76 AS count, 3 AS depth, 9 AS parent_id, -0.6879560519919179 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 9 AS count, 3 AS depth, 9 AS parent_id, 2.8686467347277533 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 956 AS count, 3 AS depth, 12 AS parent_id, -0.8989252426776665 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 3 AS depth, 12 AS parent_id, 1.0176659018447278 AS "Estimator") AS "Values"), 
"DT_Output_35" AS 
(SELECT "DT_node_lookup_35"."KEY" AS "KEY", "DT_node_lookup_35".node_id_2 AS node_id_2, "DT_node_data_35".node_id AS node_id, "DT_node_data_35".feature AS feature, "DT_node_data_35".threshold AS threshold, "DT_node_data_35".count AS count, "DT_node_data_35".depth AS depth, "DT_node_data_35".parent_id AS parent_id, "DT_node_data_35"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_35" LEFT OUTER JOIN "DT_node_data_35" ON "DT_node_lookup_35".node_id_2 = "DT_node_data_35".node_id), 
"GB_Tree_3_5" AS 
(SELECT "DT_Output_35"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3", 0.0 AS "Score_4", "DT_Output_35"."Estimator" AS "Score_5", 0.0 AS "Score_6", 0.0 AS "Score_7", 0.0 AS "Score_8", 0.0 AS "Score_9" 
FROM "DT_Output_35"), 
"DT_node_lookup_36" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_21" <= 0.5) THEN CASE WHEN ("ADS"."Feature_42" <= 9.5) THEN CASE WHEN ("ADS"."Feature_46" <= 14.5) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_54" <= 0.5) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_33" <= 6.5) THEN CASE WHEN ("ADS"."Feature_46" <= 14.5) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_4" <= 0.5) THEN 13 ELSE 14 END END END AS node_id_2 
FROM digits AS "ADS"), 
"DT_node_data_36" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 212 AS count, 3 AS depth, 2 AS parent_id, -0.8328748192918983 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 3 AS depth, 2 AS parent_id, 2.2483888527608697 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 39 AS count, 3 AS depth, 5 AS parent_id, 0.13092036926539335 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 140 AS count, 3 AS depth, 5 AS parent_id, 2.1482801208973985 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 869 AS count, 3 AS depth, 9 AS parent_id, -0.9704986999717075 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 9 AS count, 3 AS depth, 9 AS parent_id, 0.2131764768569318 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 3 AS depth, 12 AS parent_id, 3.0296032000859245 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 164 AS count, 3 AS depth, 12 AS parent_id, -0.7813785161968283 AS "Estimator") AS "Values"), 
"DT_Output_36" AS 
(SELECT "DT_node_lookup_36"."KEY" AS "KEY", "DT_node_lookup_36".node_id_2 AS node_id_2, "DT_node_data_36".node_id AS node_id, "DT_node_data_36".feature AS feature, "DT_node_data_36".threshold AS threshold, "DT_node_data_36".count AS count, "DT_node_data_36".depth AS depth, "DT_node_data_36".parent_id AS parent_id, "DT_node_data_36"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_36" LEFT OUTER JOIN "DT_node_data_36" ON "DT_node_lookup_36".node_id_2 = "DT_node_data_36".node_id), 
"GB_Tree_3_6" AS 
(SELECT "DT_Output_36"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3", 0.0 AS "Score_4", 0.0 AS "Score_5", "DT_Output_36"."Estimator" AS "Score_6", 0.0 AS "Score_7", 0.0 AS "Score_8", 0.0 AS "Score_9" 
FROM "DT_Output_36"), 
"DT_node_lookup_37" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_60" <= 2.5) THEN CASE WHEN ("ADS"."Feature_18" <= 12.5) THEN CASE WHEN ("ADS"."Feature_29" <= 0.5) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_26" <= 10.5) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_14" <= 8.5) THEN CASE WHEN ("ADS"."Feature_53" <= 0.5) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_53" <= 0.5) THEN 13 ELSE 14 END END END AS node_id_2 
FROM digits AS "ADS"), 
"DT_node_data_37" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 3 AS depth, 2 AS parent_id, -1.0159011962073372 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 80 AS count, 3 AS depth, 2 AS parent_id, 2.2949105853210265 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 18 AS count, 3 AS depth, 5 AS parent_id, 1.747248867746504 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 34 AS count, 3 AS depth, 5 AS parent_id, -0.4609736806109956 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 138 AS count, 3 AS depth, 9 AS parent_id, 0.193701581594908 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1077 AS count, 3 AS depth, 9 AS parent_id, -0.9343334240969758 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 27 AS count, 3 AS depth, 12 AS parent_id, 2.9401791863811355 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 61 AS count, 3 AS depth, 12 AS parent_id, 0.018916399292965107 AS "Estimator") AS "Values"), 
"DT_Output_37" AS 
(SELECT "DT_node_lookup_37"."KEY" AS "KEY", "DT_node_lookup_37".node_id_2 AS node_id_2, "DT_node_data_37".node_id AS node_id, "DT_node_data_37".feature AS feature, "DT_node_data_37".threshold AS threshold, "DT_node_data_37".count AS count, "DT_node_data_37".depth AS depth, "DT_node_data_37".parent_id AS parent_id, "DT_node_data_37"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_37" LEFT OUTER JOIN "DT_node_data_37" ON "DT_node_lookup_37".node_id_2 = "DT_node_data_37".node_id), 
"GB_Tree_3_7" AS 
(SELECT "DT_Output_37"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3", 0.0 AS "Score_4", 0.0 AS "Score_5", 0.0 AS "Score_6", "DT_Output_37"."Estimator" AS "Score_7", 0.0 AS "Score_8", 0.0 AS "Score_9" 
FROM "DT_Output_37"), 
"DT_node_lookup_38" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_38" <= 0.5) THEN CASE WHEN ("ADS"."Feature_42" <= 7.5) THEN CASE WHEN ("ADS"."Feature_45" <= 11.5) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_21" <= 8.5) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_34" <= 1.5) THEN CASE WHEN ("ADS"."Feature_43" <= 7.0) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_50" <= 9.5) THEN 13 ELSE 14 END END END AS node_id_2 
FROM digits AS "ADS"), 
"DT_node_data_38" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 285 AS count, 3 AS depth, 2 AS parent_id, -0.7507994560811505 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 117 AS count, 3 AS depth, 2 AS parent_id, 0.46627480336283117 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 140 AS count, 3 AS depth, 5 AS parent_id, -0.1465060387763805 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 137 AS count, 3 AS depth, 5 AS parent_id, 2.1387608380620677 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 169 AS count, 3 AS depth, 9 AS parent_id, -0.971196036339008 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 24 AS count, 3 AS depth, 9 AS parent_id, 2.77862805417049 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 343 AS count, 3 AS depth, 12 AS parent_id, -0.9728582659046312 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 222 AS count, 3 AS depth, 12 AS parent_id, -0.894919590864498 AS "Estimator") AS "Values"), 
"DT_Output_38" AS 
(SELECT "DT_node_lookup_38"."KEY" AS "KEY", "DT_node_lookup_38".node_id_2 AS node_id_2, "DT_node_data_38".node_id AS node_id, "DT_node_data_38".feature AS feature, "DT_node_data_38".threshold AS threshold, "DT_node_data_38".count AS count, "DT_node_data_38".depth AS depth, "DT_node_data_38".parent_id AS parent_id, "DT_node_data_38"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_38" LEFT OUTER JOIN "DT_node_data_38" ON "DT_node_lookup_38".node_id_2 = "DT_node_data_38".node_id), 
"GB_Tree_3_8" AS 
(SELECT "DT_Output_38"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3", 0.0 AS "Score_4", 0.0 AS "Score_5", 0.0 AS "Score_6", 0.0 AS "Score_7", "DT_Output_38"."Estimator" AS "Score_8", 0.0 AS "Score_9" 
FROM "DT_Output_38"), 
"DT_node_lookup_39" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_29" <= 14.5) THEN CASE WHEN ("ADS"."Feature_21" <= 15.5) THEN CASE WHEN ("ADS"."Feature_52" <= 0.5) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_42" <= 6.0) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_44" <= 5.5) THEN CASE WHEN ("ADS"."Feature_42" <= 4.5) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_36" <= 7.5) THEN 13 ELSE 14 END END END AS node_id_2 
FROM digits AS "ADS"), 
"DT_node_data_39" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 65 AS count, 3 AS depth, 2 AS parent_id, 0.540653346626387 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 989 AS count, 3 AS depth, 2 AS parent_id, -0.7857125072880863 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 45 AS count, 3 AS depth, 5 AS parent_id, 1.6925282605630696 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 55 AS count, 3 AS depth, 5 AS parent_id, -0.7871277314222186 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 100 AS count, 3 AS depth, 9 AS parent_id, 2.39958761588654 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 24 AS count, 3 AS depth, 9 AS parent_id, -0.5814165308971427 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 16 AS count, 3 AS depth, 12 AS parent_id, 1.3780672800626586 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 143 AS count, 3 AS depth, 12 AS parent_id, -0.5867469962464266 AS "Estimator") AS "Values"), 
"DT_Output_39" AS 
(SELECT "DT_node_lookup_39"."KEY" AS "KEY", "DT_node_lookup_39".node_id_2 AS node_id_2, "DT_node_data_39".node_id AS node_id, "DT_node_data_39".feature AS feature, "DT_node_data_39".threshold AS threshold, "DT_node_data_39".count AS count, "DT_node_data_39".depth AS depth, "DT_node_data_39".parent_id AS parent_id, "DT_node_data_39"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_39" LEFT OUTER JOIN "DT_node_data_39" ON "DT_node_lookup_39".node_id_2 = "DT_node_data_39".node_id), 
"GB_Tree_3_9" AS 
(SELECT "DT_Output_39"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3", 0.0 AS "Score_4", 0.0 AS "Score_5", 0.0 AS "Score_6", 0.0 AS "Score_7", 0.0 AS "Score_8", "DT_Output_39"."Estimator" AS "Score_9" 
FROM "DT_Output_39")
 SELECT "Score_Union_CTE_esu_4"."KEY", "Score_Union_CTE_esu_4"."Score_0", "Score_Union_CTE_esu_4"."Score_1", "Score_Union_CTE_esu_4"."Score_2", "Score_Union_CTE_esu_4"."Score_3", "Score_Union_CTE_esu_4"."Score_4", "Score_Union_CTE_esu_4"."Score_5", "Score_Union_CTE_esu_4"."Score_6", "Score_Union_CTE_esu_4"."Score_7", "Score_Union_CTE_esu_4"."Score_8", "Score_Union_CTE_esu_4"."Score_9" 
FROM (SELECT "GB_Tree_3_2"."KEY" AS "KEY", "GB_Tree_3_2"."Score_0" AS "Score_0", "GB_Tree_3_2"."Score_1" AS "Score_1", "GB_Tree_3_2"."Score_2" AS "Score_2", "GB_Tree_3_2"."Score_3" AS "Score_3", "GB_Tree_3_2"."Score_4" AS "Score_4", "GB_Tree_3_2"."Score_5" AS "Score_5", "GB_Tree_3_2"."Score_6" AS "Score_6", "GB_Tree_3_2"."Score_7" AS "Score_7", "GB_Tree_3_2"."Score_8" AS "Score_8", "GB_Tree_3_2"."Score_9" AS "Score_9" 
FROM "GB_Tree_3_2" UNION ALL SELECT "GB_Tree_3_3"."KEY" AS "KEY", "GB_Tree_3_3"."Score_0" AS "Score_0", "GB_Tree_3_3"."Score_1" AS "Score_1", "GB_Tree_3_3"."Score_2" AS "Score_2", "GB_Tree_3_3"."Score_3" AS "Score_3", "GB_Tree_3_3"."Score_4" AS "Score_4", "GB_Tree_3_3"."Score_5" AS "Score_5", "GB_Tree_3_3"."Score_6" AS "Score_6", "GB_Tree_3_3"."Score_7" AS "Score_7", "GB_Tree_3_3"."Score_8" AS "Score_8", "GB_Tree_3_3"."Score_9" AS "Score_9" 
FROM "GB_Tree_3_3" UNION ALL SELECT "GB_Tree_3_4"."KEY" AS "KEY", "GB_Tree_3_4"."Score_0" AS "Score_0", "GB_Tree_3_4"."Score_1" AS "Score_1", "GB_Tree_3_4"."Score_2" AS "Score_2", "GB_Tree_3_4"."Score_3" AS "Score_3", "GB_Tree_3_4"."Score_4" AS "Score_4", "GB_Tree_3_4"."Score_5" AS "Score_5", "GB_Tree_3_4"."Score_6" AS "Score_6", "GB_Tree_3_4"."Score_7" AS "Score_7", "GB_Tree_3_4"."Score_8" AS "Score_8", "GB_Tree_3_4"."Score_9" AS "Score_9" 
FROM "GB_Tree_3_4" UNION ALL SELECT "GB_Tree_3_5"."KEY" AS "KEY", "GB_Tree_3_5"."Score_0" AS "Score_0", "GB_Tree_3_5"."Score_1" AS "Score_1", "GB_Tree_3_5"."Score_2" AS "Score_2", "GB_Tree_3_5"."Score_3" AS "Score_3", "GB_Tree_3_5"."Score_4" AS "Score_4", "GB_Tree_3_5"."Score_5" AS "Score_5", "GB_Tree_3_5"."Score_6" AS "Score_6", "GB_Tree_3_5"."Score_7" AS "Score_7", "GB_Tree_3_5"."Score_8" AS "Score_8", "GB_Tree_3_5"."Score_9" AS "Score_9" 
FROM "GB_Tree_3_5" UNION ALL SELECT "GB_Tree_3_6"."KEY" AS "KEY", "GB_Tree_3_6"."Score_0" AS "Score_0", "GB_Tree_3_6"."Score_1" AS "Score_1", "GB_Tree_3_6"."Score_2" AS "Score_2", "GB_Tree_3_6"."Score_3" AS "Score_3", "GB_Tree_3_6"."Score_4" AS "Score_4", "GB_Tree_3_6"."Score_5" AS "Score_5", "GB_Tree_3_6"."Score_6" AS "Score_6", "GB_Tree_3_6"."Score_7" AS "Score_7", "GB_Tree_3_6"."Score_8" AS "Score_8", "GB_Tree_3_6"."Score_9" AS "Score_9" 
FROM "GB_Tree_3_6" UNION ALL SELECT "GB_Tree_3_7"."KEY" AS "KEY", "GB_Tree_3_7"."Score_0" AS "Score_0", "GB_Tree_3_7"."Score_1" AS "Score_1", "GB_Tree_3_7"."Score_2" AS "Score_2", "GB_Tree_3_7"."Score_3" AS "Score_3", "GB_Tree_3_7"."Score_4" AS "Score_4", "GB_Tree_3_7"."Score_5" AS "Score_5", "GB_Tree_3_7"."Score_6" AS "Score_6", "GB_Tree_3_7"."Score_7" AS "Score_7", "GB_Tree_3_7"."Score_8" AS "Score_8", "GB_Tree_3_7"."Score_9" AS "Score_9" 
FROM "GB_Tree_3_7" UNION ALL SELECT "GB_Tree_3_8"."KEY" AS "KEY", "GB_Tree_3_8"."Score_0" AS "Score_0", "GB_Tree_3_8"."Score_1" AS "Score_1", "GB_Tree_3_8"."Score_2" AS "Score_2", "GB_Tree_3_8"."Score_3" AS "Score_3", "GB_Tree_3_8"."Score_4" AS "Score_4", "GB_Tree_3_8"."Score_5" AS "Score_5", "GB_Tree_3_8"."Score_6" AS "Score_6", "GB_Tree_3_8"."Score_7" AS "Score_7", "GB_Tree_3_8"."Score_8" AS "Score_8", "GB_Tree_3_8"."Score_9" AS "Score_9" 
FROM "GB_Tree_3_8" UNION ALL SELECT "GB_Tree_3_9"."KEY" AS "KEY", "GB_Tree_3_9"."Score_0" AS "Score_0", "GB_Tree_3_9"."Score_1" AS "Score_1", "GB_Tree_3_9"."Score_2" AS "Score_2", "GB_Tree_3_9"."Score_3" AS "Score_3", "GB_Tree_3_9"."Score_4" AS "Score_4", "GB_Tree_3_9"."Score_5" AS "Score_5", "GB_Tree_3_9"."Score_6" AS "Score_6", "GB_Tree_3_9"."Score_7" AS "Score_7", "GB_Tree_3_9"."Score_8" AS "Score_8", "GB_Tree_3_9"."Score_9" AS "Score_9" 
FROM "GB_Tree_3_9") AS "Score_Union_CTE_esu_4"), 
"Score_Union_CTE_5" AS 
(WITH "DT_node_lookup_40" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_36" <= 0.5) THEN CASE WHEN ("ADS"."Feature_28" <= 2.5) THEN CASE WHEN ("ADS"."Feature_13" <= 1.5) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_42" <= 13.5) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_28" <= 0.5) THEN CASE WHEN ("ADS"."Feature_21" <= 12.5) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_33" <= 8.5) THEN 13 ELSE 14 END END END AS node_id_2 
FROM digits AS "ADS"), 
"DT_node_data_40" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 9 AS count, 3 AS depth, 2 AS parent_id, -1.123522500354774 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 137 AS count, 3 AS depth, 2 AS parent_id, 1.8754090899776032 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 69 AS count, 3 AS depth, 5 AS parent_id, -0.9878439371137921 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS count, 3 AS depth, 5 AS parent_id, 1.467569614923047 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 104 AS count, 3 AS depth, 9 AS parent_id, -0.9585950246013692 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 7 AS count, 3 AS depth, 9 AS parent_id, 2.680194478325036 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1026 AS count, 3 AS depth, 12 AS parent_id, -0.9622821776364799 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 81 AS count, 3 AS depth, 12 AS parent_id, -0.9525780808537447 AS "Estimator") AS "Values"), 
"DT_Output_40" AS 
(SELECT "DT_node_lookup_40"."KEY" AS "KEY", "DT_node_lookup_40".node_id_2 AS node_id_2, "DT_node_data_40".node_id AS node_id, "DT_node_data_40".feature AS feature, "DT_node_data_40".threshold AS threshold, "DT_node_data_40".count AS count, "DT_node_data_40".depth AS depth, "DT_node_data_40".parent_id AS parent_id, "DT_node_data_40"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_40" LEFT OUTER JOIN "DT_node_data_40" ON "DT_node_lookup_40".node_id_2 = "DT_node_data_40".node_id), 
"GB_Tree_4_0" AS 
(SELECT "DT_Output_40"."KEY" AS "KEY", "DT_Output_40"."Estimator" AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3", 0.0 AS "Score_4", 0.0 AS "Score_5", 0.0 AS "Score_6", 0.0 AS "Score_7", 0.0 AS "Score_8", 0.0 AS "Score_9" 
FROM "DT_Output_40"), 
"DT_node_lookup_41" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_19" <= 15.5) THEN CASE WHEN ("ADS"."Feature_10" <= 0.5) THEN CASE WHEN ("ADS"."Feature_20" <= 9.5) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_63" <= 14.0) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_46" <= 0.5) THEN CASE WHEN ("ADS"."Feature_30" <= 0.5) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_5" <= 14.5) THEN 13 ELSE 14 END END END AS node_id_2 
FROM digits AS "ADS"), 
"DT_node_data_41" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 38 AS count, 3 AS depth, 2 AS parent_id, -0.9724021309322315 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 46 AS count, 3 AS depth, 2 AS parent_id, 1.7887522813014507 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1147 AS count, 3 AS depth, 5 AS parent_id, -0.8602690955784492 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS count, 3 AS depth, 5 AS parent_id, 2.8068034631247616 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 116 AS count, 3 AS depth, 9 AS parent_id, 1.7816856988728895 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 15 AS count, 3 AS depth, 9 AS parent_id, -0.7082902139096467 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 64 AS count, 3 AS depth, 12 AS parent_id, -0.7763980350934218 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 6 AS count, 3 AS depth, 12 AS parent_id, 2.3628562036538763 AS "Estimator") AS "Values"), 
"DT_Output_41" AS 
(SELECT "DT_node_lookup_41"."KEY" AS "KEY", "DT_node_lookup_41".node_id_2 AS node_id_2, "DT_node_data_41".node_id AS node_id, "DT_node_data_41".feature AS feature, "DT_node_data_41".threshold AS threshold, "DT_node_data_41".count AS count, "DT_node_data_41".depth AS depth, "DT_node_data_41".parent_id AS parent_id, "DT_node_data_41"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_41" LEFT OUTER JOIN "DT_node_data_41" ON "DT_node_lookup_41".node_id_2 = "DT_node_data_41".node_id), 
"GB_Tree_4_1" AS 
(SELECT "DT_Output_41"."KEY" AS "KEY", 0.0 AS "Score_0", "DT_Output_41"."Estimator" AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3", 0.0 AS "Score_4", 0.0 AS "Score_5", 0.0 AS "Score_6", 0.0 AS "Score_7", 0.0 AS "Score_8", 0.0 AS "Score_9" 
FROM "DT_Output_41"), 
"DT_node_lookup_42" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_62" <= 2.5) THEN CASE WHEN ("ADS"."Feature_26" <= 1.5) THEN CASE WHEN ("ADS"."Feature_37" <= 0.5) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_56" <= 0.5) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_46" <= 0.5) THEN CASE WHEN ("ADS"."Feature_19" <= 12.5) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_52" <= 13.5) THEN 13 ELSE 14 END END END AS node_id_2 
FROM digits AS "ADS"), 
"DT_node_data_42" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 33 AS count, 3 AS depth, 2 AS parent_id, 1.757531485382356 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 167 AS count, 3 AS depth, 2 AS parent_id, -0.4762714149538545 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 908 AS count, 3 AS depth, 5 AS parent_id, -0.8813398024123951 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 5 AS parent_id, 2.295384253095147 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 102 AS count, 3 AS depth, 9 AS parent_id, 2.04411040310266 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 40 AS count, 3 AS depth, 9 AS parent_id, 0.12648048571777537 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 169 AS count, 3 AS depth, 12 AS parent_id, -0.8315571577904601 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 17 AS count, 3 AS depth, 12 AS parent_id, 1.7815158009310175 AS "Estimator") AS "Values"), 
"DT_Output_42" AS 
(SELECT "DT_node_lookup_42"."KEY" AS "KEY", "DT_node_lookup_42".node_id_2 AS node_id_2, "DT_node_data_42".node_id AS node_id, "DT_node_data_42".feature AS feature, "DT_node_data_42".threshold AS threshold, "DT_node_data_42".count AS count, "DT_node_data_42".depth AS depth, "DT_node_data_42".parent_id AS parent_id, "DT_node_data_42"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_42" LEFT OUTER JOIN "DT_node_data_42" ON "DT_node_lookup_42".node_id_2 = "DT_node_data_42".node_id), 
"GB_Tree_4_2" AS 
(SELECT "DT_Output_42"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", "DT_Output_42"."Estimator" AS "Score_2", 0.0 AS "Score_3", 0.0 AS "Score_4", 0.0 AS "Score_5", 0.0 AS "Score_6", 0.0 AS "Score_7", 0.0 AS "Score_8", 0.0 AS "Score_9" 
FROM "DT_Output_42"), 
"DT_node_lookup_43" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_26" <= 0.5) THEN CASE WHEN ("ADS"."Feature_43" <= 2.5) THEN CASE WHEN ("ADS"."Feature_63" <= 1.0) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_13" <= 14.5) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_18" <= 3.5) THEN CASE WHEN ("ADS"."Feature_59" <= 15.5) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_29" <= 10.5) THEN 13 ELSE 14 END END END AS node_id_2 
FROM digits AS "ADS"), 
"DT_node_data_43" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 99 AS count, 3 AS depth, 2 AS parent_id, 1.8774735042531572 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 8 AS count, 3 AS depth, 2 AS parent_id, -1.0254124252778307 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 113 AS count, 3 AS depth, 5 AS parent_id, -0.8729387689908278 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 43 AS count, 3 AS depth, 5 AS parent_id, 0.5759017676884812 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 111 AS count, 3 AS depth, 9 AS parent_id, -0.6717397230295192 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 38 AS count, 3 AS depth, 9 AS parent_id, 2.4902801950139484 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 645 AS count, 3 AS depth, 12 AS parent_id, -0.5450257515068314 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 380 AS count, 3 AS depth, 12 AS parent_id, -0.9789036549315008 AS "Estimator") AS "Values"), 
"DT_Output_43" AS 
(SELECT "DT_node_lookup_43"."KEY" AS "KEY", "DT_node_lookup_43".node_id_2 AS node_id_2, "DT_node_data_43".node_id AS node_id, "DT_node_data_43".feature AS feature, "DT_node_data_43".threshold AS threshold, "DT_node_data_43".count AS count, "DT_node_data_43".depth AS depth, "DT_node_data_43".parent_id AS parent_id, "DT_node_data_43"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_43" LEFT OUTER JOIN "DT_node_data_43" ON "DT_node_lookup_43".node_id_2 = "DT_node_data_43".node_id), 
"GB_Tree_4_3" AS 
(SELECT "DT_Output_43"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", "DT_Output_43"."Estimator" AS "Score_3", 0.0 AS "Score_4", 0.0 AS "Score_5", 0.0 AS "Score_6", 0.0 AS "Score_7", 0.0 AS "Score_8", 0.0 AS "Score_9" 
FROM "DT_Output_43"), 
"DT_node_lookup_44" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_33" <= 8.5) THEN CASE WHEN ("ADS"."Feature_30" <= 8.5) THEN CASE WHEN ("ADS"."Feature_3" <= 5.5) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_13" <= 3.0) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_2" <= 3.5) THEN CASE WHEN ("ADS"."Feature_54" <= 1.5) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_51" <= 15.0) THEN 13 ELSE 14 END END END AS node_id_2 
FROM digits AS "ADS"), 
"DT_node_data_44" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 102 AS count, 3 AS depth, 2 AS parent_id, 1.0536692616357657 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1141 AS count, 3 AS depth, 2 AS parent_id, -0.8077925215601818 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 27 AS count, 3 AS depth, 5 AS parent_id, 2.9538297251445433 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 57 AS count, 3 AS depth, 5 AS parent_id, -0.16152283313090593 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 89 AS count, 3 AS depth, 9 AS parent_id, 1.8675856254311134 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 3 AS depth, 9 AS parent_id, -0.953217087044159 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 16 AS count, 3 AS depth, 12 AS parent_id, -0.9914555495745621 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 3 AS depth, 12 AS parent_id, 2.2700034687699207 AS "Estimator") AS "Values"), 
"DT_Output_44" AS 
(SELECT "DT_node_lookup_44"."KEY" AS "KEY", "DT_node_lookup_44".node_id_2 AS node_id_2, "DT_node_data_44".node_id AS node_id, "DT_node_data_44".feature AS feature, "DT_node_data_44".threshold AS threshold, "DT_node_data_44".count AS count, "DT_node_data_44".depth AS depth, "DT_node_data_44".parent_id AS parent_id, "DT_node_data_44"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_44" LEFT OUTER JOIN "DT_node_data_44" ON "DT_node_lookup_44".node_id_2 = "DT_node_data_44".node_id), 
"GB_Tree_4_4" AS 
(SELECT "DT_Output_44"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3", "DT_Output_44"."Estimator" AS "Score_4", 0.0 AS "Score_5", 0.0 AS "Score_6", 0.0 AS "Score_7", 0.0 AS "Score_8", 0.0 AS "Score_9" 
FROM "DT_Output_44"), 
"DT_node_lookup_45" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_21" <= 0.5) THEN CASE WHEN ("ADS"."Feature_5" <= 6.5) THEN CASE WHEN ("ADS"."Feature_43" <= 0.5) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_2" <= 1.5) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_21" <= 2.5) THEN CASE WHEN ("ADS"."Feature_6" <= 2.0) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_36" <= 1.5) THEN 13 ELSE 14 END END END AS node_id_2 
FROM digits AS "ADS"), 
"DT_node_data_45" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 30 AS count, 3 AS depth, 2 AS parent_id, 2.034121204514023 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 234 AS count, 3 AS depth, 2 AS parent_id, -0.7153472980579954 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 13 AS count, 3 AS depth, 5 AS parent_id, -0.14974530212961848 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 116 AS count, 3 AS depth, 5 AS parent_id, 1.9327664386808612 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 76 AS count, 3 AS depth, 9 AS parent_id, -0.6564151761429168 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 9 AS count, 3 AS depth, 9 AS parent_id, 2.33409806685395 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 212 AS count, 3 AS depth, 12 AS parent_id, -0.5869456381471125 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 747 AS count, 3 AS depth, 12 AS parent_id, -0.9494507637052934 AS "Estimator") AS "Values"), 
"DT_Output_45" AS 
(SELECT "DT_node_lookup_45"."KEY" AS "KEY", "DT_node_lookup_45".node_id_2 AS node_id_2, "DT_node_data_45".node_id AS node_id, "DT_node_data_45".feature AS feature, "DT_node_data_45".threshold AS threshold, "DT_node_data_45".count AS count, "DT_node_data_45".depth AS depth, "DT_node_data_45".parent_id AS parent_id, "DT_node_data_45"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_45" LEFT OUTER JOIN "DT_node_data_45" ON "DT_node_lookup_45".node_id_2 = "DT_node_data_45".node_id), 
"GB_Tree_4_5" AS 
(SELECT "DT_Output_45"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3", 0.0 AS "Score_4", "DT_Output_45"."Estimator" AS "Score_5", 0.0 AS "Score_6", 0.0 AS "Score_7", 0.0 AS "Score_8", 0.0 AS "Score_9" 
FROM "DT_Output_45"), 
"DT_node_lookup_46" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_21" <= 0.5) THEN CASE WHEN ("ADS"."Feature_42" <= 9.5) THEN CASE WHEN ("ADS"."Feature_46" <= 14.5) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_54" <= 5.5) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_33" <= 6.5) THEN CASE WHEN ("ADS"."Feature_46" <= 14.5) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_4" <= 0.5) THEN 13 ELSE 14 END END END AS node_id_2 
FROM digits AS "ADS"), 
"DT_node_data_46" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 212 AS count, 3 AS depth, 2 AS parent_id, -0.8117359760996635 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 3 AS depth, 2 AS parent_id, 1.8922195941534463 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 59 AS count, 3 AS depth, 5 AS parent_id, 0.684955760974219 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 120 AS count, 3 AS depth, 5 AS parent_id, 1.912066751487362 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 869 AS count, 3 AS depth, 9 AS parent_id, -0.9634188323857068 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 9 AS count, 3 AS depth, 9 AS parent_id, 0.2156142635190347 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 3 AS depth, 12 AS parent_id, 2.1684186576134756 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 164 AS count, 3 AS depth, 12 AS parent_id, -0.7540499781148727 AS "Estimator") AS "Values"), 
"DT_Output_46" AS 
(SELECT "DT_node_lookup_46"."KEY" AS "KEY", "DT_node_lookup_46".node_id_2 AS node_id_2, "DT_node_data_46".node_id AS node_id, "DT_node_data_46".feature AS feature, "DT_node_data_46".threshold AS threshold, "DT_node_data_46".count AS count, "DT_node_data_46".depth AS depth, "DT_node_data_46".parent_id AS parent_id, "DT_node_data_46"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_46" LEFT OUTER JOIN "DT_node_data_46" ON "DT_node_lookup_46".node_id_2 = "DT_node_data_46".node_id), 
"GB_Tree_4_6" AS 
(SELECT "DT_Output_46"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3", 0.0 AS "Score_4", 0.0 AS "Score_5", "DT_Output_46"."Estimator" AS "Score_6", 0.0 AS "Score_7", 0.0 AS "Score_8", 0.0 AS "Score_9" 
FROM "DT_Output_46"), 
"DT_node_lookup_47" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_60" <= 2.5) THEN CASE WHEN ("ADS"."Feature_18" <= 13.5) THEN CASE WHEN ("ADS"."Feature_52" <= 9.5) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_26" <= 9.5) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_6" <= 14.5) THEN CASE WHEN ("ADS"."Feature_53" <= 0.5) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_20" <= 6.5) THEN 13 ELSE 14 END END END AS node_id_2 
FROM digits AS "ADS"), 
"DT_node_data_47" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 81 AS count, 3 AS depth, 2 AS parent_id, 1.9517419823052127 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 8 AS count, 3 AS depth, 2 AS parent_id, 0.8208023496629129 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 14 AS count, 3 AS depth, 5 AS parent_id, 1.6866515457431586 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 31 AS count, 3 AS depth, 5 AS parent_id, -1.022718910776468 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 156 AS count, 3 AS depth, 9 AS parent_id, 0.6291509210577672 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1129 AS count, 3 AS depth, 9 AS parent_id, -0.8991657191465606 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 14 AS count, 3 AS depth, 12 AS parent_id, 2.3230691954356284 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS count, 3 AS depth, 12 AS parent_id, -1.013250004507728 AS "Estimator") AS "Values"), 
"DT_Output_47" AS 
(SELECT "DT_node_lookup_47"."KEY" AS "KEY", "DT_node_lookup_47".node_id_2 AS node_id_2, "DT_node_data_47".node_id AS node_id, "DT_node_data_47".feature AS feature, "DT_node_data_47".threshold AS threshold, "DT_node_data_47".count AS count, "DT_node_data_47".depth AS depth, "DT_node_data_47".parent_id AS parent_id, "DT_node_data_47"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_47" LEFT OUTER JOIN "DT_node_data_47" ON "DT_node_lookup_47".node_id_2 = "DT_node_data_47".node_id), 
"GB_Tree_4_7" AS 
(SELECT "DT_Output_47"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3", 0.0 AS "Score_4", 0.0 AS "Score_5", 0.0 AS "Score_6", "DT_Output_47"."Estimator" AS "Score_7", 0.0 AS "Score_8", 0.0 AS "Score_9" 
FROM "DT_Output_47")
 SELECT "Score_Union_CTE_esu_5"."KEY", "Score_Union_CTE_esu_5"."Score_0", "Score_Union_CTE_esu_5"."Score_1", "Score_Union_CTE_esu_5"."Score_2", "Score_Union_CTE_esu_5"."Score_3", "Score_Union_CTE_esu_5"."Score_4", "Score_Union_CTE_esu_5"."Score_5", "Score_Union_CTE_esu_5"."Score_6", "Score_Union_CTE_esu_5"."Score_7", "Score_Union_CTE_esu_5"."Score_8", "Score_Union_CTE_esu_5"."Score_9" 
FROM (SELECT "GB_Tree_4_0"."KEY" AS "KEY", "GB_Tree_4_0"."Score_0" AS "Score_0", "GB_Tree_4_0"."Score_1" AS "Score_1", "GB_Tree_4_0"."Score_2" AS "Score_2", "GB_Tree_4_0"."Score_3" AS "Score_3", "GB_Tree_4_0"."Score_4" AS "Score_4", "GB_Tree_4_0"."Score_5" AS "Score_5", "GB_Tree_4_0"."Score_6" AS "Score_6", "GB_Tree_4_0"."Score_7" AS "Score_7", "GB_Tree_4_0"."Score_8" AS "Score_8", "GB_Tree_4_0"."Score_9" AS "Score_9" 
FROM "GB_Tree_4_0" UNION ALL SELECT "GB_Tree_4_1"."KEY" AS "KEY", "GB_Tree_4_1"."Score_0" AS "Score_0", "GB_Tree_4_1"."Score_1" AS "Score_1", "GB_Tree_4_1"."Score_2" AS "Score_2", "GB_Tree_4_1"."Score_3" AS "Score_3", "GB_Tree_4_1"."Score_4" AS "Score_4", "GB_Tree_4_1"."Score_5" AS "Score_5", "GB_Tree_4_1"."Score_6" AS "Score_6", "GB_Tree_4_1"."Score_7" AS "Score_7", "GB_Tree_4_1"."Score_8" AS "Score_8", "GB_Tree_4_1"."Score_9" AS "Score_9" 
FROM "GB_Tree_4_1" UNION ALL SELECT "GB_Tree_4_2"."KEY" AS "KEY", "GB_Tree_4_2"."Score_0" AS "Score_0", "GB_Tree_4_2"."Score_1" AS "Score_1", "GB_Tree_4_2"."Score_2" AS "Score_2", "GB_Tree_4_2"."Score_3" AS "Score_3", "GB_Tree_4_2"."Score_4" AS "Score_4", "GB_Tree_4_2"."Score_5" AS "Score_5", "GB_Tree_4_2"."Score_6" AS "Score_6", "GB_Tree_4_2"."Score_7" AS "Score_7", "GB_Tree_4_2"."Score_8" AS "Score_8", "GB_Tree_4_2"."Score_9" AS "Score_9" 
FROM "GB_Tree_4_2" UNION ALL SELECT "GB_Tree_4_3"."KEY" AS "KEY", "GB_Tree_4_3"."Score_0" AS "Score_0", "GB_Tree_4_3"."Score_1" AS "Score_1", "GB_Tree_4_3"."Score_2" AS "Score_2", "GB_Tree_4_3"."Score_3" AS "Score_3", "GB_Tree_4_3"."Score_4" AS "Score_4", "GB_Tree_4_3"."Score_5" AS "Score_5", "GB_Tree_4_3"."Score_6" AS "Score_6", "GB_Tree_4_3"."Score_7" AS "Score_7", "GB_Tree_4_3"."Score_8" AS "Score_8", "GB_Tree_4_3"."Score_9" AS "Score_9" 
FROM "GB_Tree_4_3" UNION ALL SELECT "GB_Tree_4_4"."KEY" AS "KEY", "GB_Tree_4_4"."Score_0" AS "Score_0", "GB_Tree_4_4"."Score_1" AS "Score_1", "GB_Tree_4_4"."Score_2" AS "Score_2", "GB_Tree_4_4"."Score_3" AS "Score_3", "GB_Tree_4_4"."Score_4" AS "Score_4", "GB_Tree_4_4"."Score_5" AS "Score_5", "GB_Tree_4_4"."Score_6" AS "Score_6", "GB_Tree_4_4"."Score_7" AS "Score_7", "GB_Tree_4_4"."Score_8" AS "Score_8", "GB_Tree_4_4"."Score_9" AS "Score_9" 
FROM "GB_Tree_4_4" UNION ALL SELECT "GB_Tree_4_5"."KEY" AS "KEY", "GB_Tree_4_5"."Score_0" AS "Score_0", "GB_Tree_4_5"."Score_1" AS "Score_1", "GB_Tree_4_5"."Score_2" AS "Score_2", "GB_Tree_4_5"."Score_3" AS "Score_3", "GB_Tree_4_5"."Score_4" AS "Score_4", "GB_Tree_4_5"."Score_5" AS "Score_5", "GB_Tree_4_5"."Score_6" AS "Score_6", "GB_Tree_4_5"."Score_7" AS "Score_7", "GB_Tree_4_5"."Score_8" AS "Score_8", "GB_Tree_4_5"."Score_9" AS "Score_9" 
FROM "GB_Tree_4_5" UNION ALL SELECT "GB_Tree_4_6"."KEY" AS "KEY", "GB_Tree_4_6"."Score_0" AS "Score_0", "GB_Tree_4_6"."Score_1" AS "Score_1", "GB_Tree_4_6"."Score_2" AS "Score_2", "GB_Tree_4_6"."Score_3" AS "Score_3", "GB_Tree_4_6"."Score_4" AS "Score_4", "GB_Tree_4_6"."Score_5" AS "Score_5", "GB_Tree_4_6"."Score_6" AS "Score_6", "GB_Tree_4_6"."Score_7" AS "Score_7", "GB_Tree_4_6"."Score_8" AS "Score_8", "GB_Tree_4_6"."Score_9" AS "Score_9" 
FROM "GB_Tree_4_6" UNION ALL SELECT "GB_Tree_4_7"."KEY" AS "KEY", "GB_Tree_4_7"."Score_0" AS "Score_0", "GB_Tree_4_7"."Score_1" AS "Score_1", "GB_Tree_4_7"."Score_2" AS "Score_2", "GB_Tree_4_7"."Score_3" AS "Score_3", "GB_Tree_4_7"."Score_4" AS "Score_4", "GB_Tree_4_7"."Score_5" AS "Score_5", "GB_Tree_4_7"."Score_6" AS "Score_6", "GB_Tree_4_7"."Score_7" AS "Score_7", "GB_Tree_4_7"."Score_8" AS "Score_8", "GB_Tree_4_7"."Score_9" AS "Score_9" 
FROM "GB_Tree_4_7") AS "Score_Union_CTE_esu_5"), 
"Score_Union_CTE_6" AS 
(WITH "DT_node_lookup_48" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_38" <= 0.5) THEN CASE WHEN ("ADS"."Feature_42" <= 7.5) THEN CASE WHEN ("ADS"."Feature_45" <= 11.5) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_51" <= 12.5) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_27" <= 12.5) THEN CASE WHEN ("ADS"."Feature_42" <= 11.5) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_38" <= 3.5) THEN 13 ELSE 14 END END END AS node_id_2 
FROM digits AS "ADS"), 
"DT_node_data_48" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 285 AS count, 3 AS depth, 2 AS parent_id, -0.7245790361203484 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 117 AS count, 3 AS depth, 2 AS parent_id, 0.4235190495567302 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 137 AS count, 3 AS depth, 5 AS parent_id, 1.7778027629761897 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 140 AS count, 3 AS depth, 5 AS parent_id, -0.16793252417898294 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 290 AS count, 3 AS depth, 9 AS parent_id, -0.9653677787818117 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 265 AS count, 3 AS depth, 9 AS parent_id, -0.9528644214934997 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 78 AS count, 3 AS depth, 12 AS parent_id, 0.4569993515789245 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 125 AS count, 3 AS depth, 12 AS parent_id, -0.9680913477665726 AS "Estimator") AS "Values"), 
"DT_Output_48" AS 
(SELECT "DT_node_lookup_48"."KEY" AS "KEY", "DT_node_lookup_48".node_id_2 AS node_id_2, "DT_node_data_48".node_id AS node_id, "DT_node_data_48".feature AS feature, "DT_node_data_48".threshold AS threshold, "DT_node_data_48".count AS count, "DT_node_data_48".depth AS depth, "DT_node_data_48".parent_id AS parent_id, "DT_node_data_48"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_48" LEFT OUTER JOIN "DT_node_data_48" ON "DT_node_lookup_48".node_id_2 = "DT_node_data_48".node_id), 
"GB_Tree_4_8" AS 
(SELECT "DT_Output_48"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3", 0.0 AS "Score_4", 0.0 AS "Score_5", 0.0 AS "Score_6", 0.0 AS "Score_7", "DT_Output_48"."Estimator" AS "Score_8", 0.0 AS "Score_9" 
FROM "DT_Output_48"), 
"DT_node_lookup_49" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_43" <= 0.5) THEN CASE WHEN ("ADS"."Feature_29" <= 13.5) THEN CASE WHEN ("ADS"."Feature_21" <= 15.5) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_21" <= 9.5) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_43" <= 3.5) THEN CASE WHEN ("ADS"."Feature_29" <= 15.5) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_38" <= 13.0) THEN 13 ELSE 14 END END END AS node_id_2 
FROM digits AS "ADS"), 
"DT_node_data_49" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 276 AS count, 3 AS depth, 2 AS parent_id, -0.3426578628892182 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 32 AS count, 3 AS depth, 2 AS parent_id, 1.6163709447871164 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 22 AS count, 3 AS depth, 5 AS parent_id, -0.46123696269137976 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 120 AS count, 3 AS depth, 5 AS parent_id, 1.7633339851743939 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 125 AS count, 3 AS depth, 9 AS parent_id, -0.3777112237240794 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 21 AS count, 3 AS depth, 9 AS parent_id, 2.1671310209818566 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 838 AS count, 3 AS depth, 12 AS parent_id, -0.8685489039348796 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 3 AS depth, 12 AS parent_id, 2.3694497668507597 AS "Estimator") AS "Values"), 
"DT_Output_49" AS 
(SELECT "DT_node_lookup_49"."KEY" AS "KEY", "DT_node_lookup_49".node_id_2 AS node_id_2, "DT_node_data_49".node_id AS node_id, "DT_node_data_49".feature AS feature, "DT_node_data_49".threshold AS threshold, "DT_node_data_49".count AS count, "DT_node_data_49".depth AS depth, "DT_node_data_49".parent_id AS parent_id, "DT_node_data_49"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_49" LEFT OUTER JOIN "DT_node_data_49" ON "DT_node_lookup_49".node_id_2 = "DT_node_data_49".node_id), 
"GB_Tree_4_9" AS 
(SELECT "DT_Output_49"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3", 0.0 AS "Score_4", 0.0 AS "Score_5", 0.0 AS "Score_6", 0.0 AS "Score_7", 0.0 AS "Score_8", "DT_Output_49"."Estimator" AS "Score_9" 
FROM "DT_Output_49"), 
"DT_node_lookup_50" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_36" <= 0.5) THEN CASE WHEN ("ADS"."Feature_28" <= 2.5) THEN CASE WHEN ("ADS"."Feature_43" <= 9.5) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_42" <= 13.5) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_28" <= 0.5) THEN CASE WHEN ("ADS"."Feature_21" <= 12.5) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_21" <= 4.5) THEN 13 ELSE 14 END END END AS node_id_2 
FROM digits AS "ADS"), 
"DT_node_data_50" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 134 AS count, 3 AS depth, 2 AS parent_id, 1.6784633186619713 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 12 AS count, 3 AS depth, 2 AS parent_id, -0.2977694582554047 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 69 AS count, 3 AS depth, 5 AS parent_id, -0.9823204587140247 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS count, 3 AS depth, 5 AS parent_id, 1.2028750330107971 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 104 AS count, 3 AS depth, 9 AS parent_id, -0.9513099044684621 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 7 AS count, 3 AS depth, 9 AS parent_id, 2.0292684579797737 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 422 AS count, 3 AS depth, 12 AS parent_id, -0.9519583001245886 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 685 AS count, 3 AS depth, 12 AS parent_id, -0.9574830749383728 AS "Estimator") AS "Values"), 
"DT_Output_50" AS 
(SELECT "DT_node_lookup_50"."KEY" AS "KEY", "DT_node_lookup_50".node_id_2 AS node_id_2, "DT_node_data_50".node_id AS node_id, "DT_node_data_50".feature AS feature, "DT_node_data_50".threshold AS threshold, "DT_node_data_50".count AS count, "DT_node_data_50".depth AS depth, "DT_node_data_50".parent_id AS parent_id, "DT_node_data_50"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_50" LEFT OUTER JOIN "DT_node_data_50" ON "DT_node_lookup_50".node_id_2 = "DT_node_data_50".node_id), 
"GB_Tree_5_0" AS 
(SELECT "DT_Output_50"."KEY" AS "KEY", "DT_Output_50"."Estimator" AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3", 0.0 AS "Score_4", 0.0 AS "Score_5", 0.0 AS "Score_6", 0.0 AS "Score_7", 0.0 AS "Score_8", 0.0 AS "Score_9" 
FROM "DT_Output_50"), 
"DT_node_lookup_51" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_19" <= 15.5) THEN CASE WHEN ("ADS"."Feature_10" <= 0.5) THEN CASE WHEN ("ADS"."Feature_41" <= 1.5) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_3" <= 1.5) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_38" <= 1.5) THEN CASE WHEN ("ADS"."Feature_9" <= 2.5) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_53" <= 15.5) THEN 13 ELSE 14 END END END AS node_id_2 
FROM digits AS "ADS"), 
"DT_node_data_51" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 48 AS count, 3 AS depth, 2 AS parent_id, 1.8262836857212594 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 36 AS count, 3 AS depth, 2 AS parent_id, -0.7482836079193281 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 8 AS count, 3 AS depth, 5 AS parent_id, 1.7354783049334237 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1144 AS count, 3 AS depth, 5 AS parent_id, -0.8563578538518345 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 124 AS count, 3 AS depth, 9 AS parent_id, 1.5937989069581373 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 15 AS count, 3 AS depth, 9 AS parent_id, -1.0855280923658654 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 53 AS count, 3 AS depth, 12 AS parent_id, -1.031257579692517 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 9 AS count, 3 AS depth, 12 AS parent_id, 1.9639583747627711 AS "Estimator") AS "Values"), 
"DT_Output_51" AS 
(SELECT "DT_node_lookup_51"."KEY" AS "KEY", "DT_node_lookup_51".node_id_2 AS node_id_2, "DT_node_data_51".node_id AS node_id, "DT_node_data_51".feature AS feature, "DT_node_data_51".threshold AS threshold, "DT_node_data_51".count AS count, "DT_node_data_51".depth AS depth, "DT_node_data_51".parent_id AS parent_id, "DT_node_data_51"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_51" LEFT OUTER JOIN "DT_node_data_51" ON "DT_node_lookup_51".node_id_2 = "DT_node_data_51".node_id), 
"GB_Tree_5_1" AS 
(SELECT "DT_Output_51"."KEY" AS "KEY", 0.0 AS "Score_0", "DT_Output_51"."Estimator" AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3", 0.0 AS "Score_4", 0.0 AS "Score_5", 0.0 AS "Score_6", 0.0 AS "Score_7", 0.0 AS "Score_8", 0.0 AS "Score_9" 
FROM "DT_Output_51"), 
"DT_node_lookup_52" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_62" <= 2.5) THEN CASE WHEN ("ADS"."Feature_26" <= 1.5) THEN CASE WHEN ("ADS"."Feature_37" <= 1.5) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_56" <= 0.5) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_46" <= 0.5) THEN CASE WHEN ("ADS"."Feature_19" <= 12.5) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_52" <= 13.5) THEN 13 ELSE 14 END END END AS node_id_2 
FROM digits AS "ADS"), 
"DT_node_data_52" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 39 AS count, 3 AS depth, 2 AS parent_id, 1.4050672881626305 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 161 AS count, 3 AS depth, 2 AS parent_id, -0.5613545533466606 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 908 AS count, 3 AS depth, 5 AS parent_id, -0.8664556076567201 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 5 AS parent_id, 1.955035984463784 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 102 AS count, 3 AS depth, 9 AS parent_id, 1.7664615137475295 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 40 AS count, 3 AS depth, 9 AS parent_id, 0.14346800100443527 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 169 AS count, 3 AS depth, 12 AS parent_id, -0.8100004882661843 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 17 AS count, 3 AS depth, 12 AS parent_id, 1.5072919190882725 AS "Estimator") AS "Values"), 
"DT_Output_52" AS 
(SELECT "DT_node_lookup_52"."KEY" AS "KEY", "DT_node_lookup_52".node_id_2 AS node_id_2, "DT_node_data_52".node_id AS node_id, "DT_node_data_52".feature AS feature, "DT_node_data_52".threshold AS threshold, "DT_node_data_52".count AS count, "DT_node_data_52".depth AS depth, "DT_node_data_52".parent_id AS parent_id, "DT_node_data_52"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_52" LEFT OUTER JOIN "DT_node_data_52" ON "DT_node_lookup_52".node_id_2 = "DT_node_data_52".node_id), 
"GB_Tree_5_2" AS 
(SELECT "DT_Output_52"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", "DT_Output_52"."Estimator" AS "Score_2", 0.0 AS "Score_3", 0.0 AS "Score_4", 0.0 AS "Score_5", 0.0 AS "Score_6", 0.0 AS "Score_7", 0.0 AS "Score_8", 0.0 AS "Score_9" 
FROM "DT_Output_52"), 
"DT_node_lookup_53" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_26" <= 0.5) THEN CASE WHEN ("ADS"."Feature_43" <= 2.5) THEN CASE WHEN ("ADS"."Feature_19" <= 11.5) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_51" <= 7.5) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_18" <= 3.5) THEN CASE WHEN ("ADS"."Feature_59" <= 15.5) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_43" <= 1.5) THEN 13 ELSE 14 END END END AS node_id_2 
FROM digits AS "ADS"), 
"DT_node_data_53" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 99 AS count, 3 AS depth, 2 AS parent_id, 1.6567313373941126 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 8 AS count, 3 AS depth, 2 AS parent_id, -1.0348066708623014 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 24 AS count, 3 AS depth, 5 AS parent_id, 0.9903557682242685 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 132 AS count, 3 AS depth, 5 AS parent_id, -0.7397638296568687 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 111 AS count, 3 AS depth, 9 AS parent_id, -0.6374753920492915 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 38 AS count, 3 AS depth, 9 AS parent_id, 1.9730462120776637 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 387 AS count, 3 AS depth, 12 AS parent_id, -0.3346557382316301 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 638 AS count, 3 AS depth, 12 AS parent_id, -0.9137391576672375 AS "Estimator") AS "Values"), 
"DT_Output_53" AS 
(SELECT "DT_node_lookup_53"."KEY" AS "KEY", "DT_node_lookup_53".node_id_2 AS node_id_2, "DT_node_data_53".node_id AS node_id, "DT_node_data_53".feature AS feature, "DT_node_data_53".threshold AS threshold, "DT_node_data_53".count AS count, "DT_node_data_53".depth AS depth, "DT_node_data_53".parent_id AS parent_id, "DT_node_data_53"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_53" LEFT OUTER JOIN "DT_node_data_53" ON "DT_node_lookup_53".node_id_2 = "DT_node_data_53".node_id), 
"GB_Tree_5_3" AS 
(SELECT "DT_Output_53"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", "DT_Output_53"."Estimator" AS "Score_3", 0.0 AS "Score_4", 0.0 AS "Score_5", 0.0 AS "Score_6", 0.0 AS "Score_7", 0.0 AS "Score_8", 0.0 AS "Score_9" 
FROM "DT_Output_53"), 
"DT_node_lookup_54" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_33" <= 8.5) THEN CASE WHEN ("ADS"."Feature_2" <= 0.5) THEN CASE WHEN ("ADS"."Feature_33" <= 1.5) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_22" <= 14.5) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_58" <= 0.5) THEN CASE WHEN ("ADS"."Feature_59" <= 2.5) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_5" <= 0.5) THEN 13 ELSE 14 END END END AS node_id_2 
FROM digits AS "ADS"), 
"DT_node_data_54" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 148 AS count, 3 AS depth, 2 AS parent_id, -0.7868483651824159 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 132 AS count, 3 AS depth, 2 AS parent_id, 1.5640269772250004 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1043 AS count, 3 AS depth, 5 AS parent_id, -0.8590784181681136 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS count, 3 AS depth, 5 AS parent_id, 1.7265787231490997 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 15 AS count, 3 AS depth, 9 AS parent_id, 1.77142370504897 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 60 AS count, 3 AS depth, 9 AS parent_id, 1.6610578560969234 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 15 AS count, 3 AS depth, 12 AS parent_id, 1.5965995617830078 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 20 AS count, 3 AS depth, 12 AS parent_id, -1.0117528008290013 AS "Estimator") AS "Values"), 
"DT_Output_54" AS 
(SELECT "DT_node_lookup_54"."KEY" AS "KEY", "DT_node_lookup_54".node_id_2 AS node_id_2, "DT_node_data_54".node_id AS node_id, "DT_node_data_54".feature AS feature, "DT_node_data_54".threshold AS threshold, "DT_node_data_54".count AS count, "DT_node_data_54".depth AS depth, "DT_node_data_54".parent_id AS parent_id, "DT_node_data_54"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_54" LEFT OUTER JOIN "DT_node_data_54" ON "DT_node_lookup_54".node_id_2 = "DT_node_data_54".node_id), 
"GB_Tree_5_4" AS 
(SELECT "DT_Output_54"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3", "DT_Output_54"."Estimator" AS "Score_4", 0.0 AS "Score_5", 0.0 AS "Score_6", 0.0 AS "Score_7", 0.0 AS "Score_8", 0.0 AS "Score_9" 
FROM "DT_Output_54"), 
"DT_node_lookup_55" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_21" <= 0.5) THEN CASE WHEN ("ADS"."Feature_5" <= 6.5) THEN CASE WHEN ("ADS"."Feature_42" <= 0.5) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_42" <= 13.5) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_21" <= 3.5) THEN CASE WHEN ("ADS"."Feature_43" <= 0.5) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_1" <= 5.0) THEN 13 ELSE 14 END END END AS node_id_2 
FROM digits AS "ADS"), 
"DT_node_data_55" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 49 AS count, 3 AS depth, 2 AS parent_id, 1.3441007336194504 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 215 AS count, 3 AS depth, 2 AS parent_id, -0.8378671039482114 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 116 AS count, 3 AS depth, 5 AS parent_id, 1.6674329416924436 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 13 AS count, 3 AS depth, 5 AS parent_id, -0.22653016838417966 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 25 AS count, 3 AS depth, 9 AS parent_id, 1.7197177099568106 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 86 AS count, 3 AS depth, 9 AS parent_id, -0.992114582948733 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 930 AS count, 3 AS depth, 12 AS parent_id, -0.8860918159274682 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 3 AS depth, 12 AS parent_id, 0.995941891880495 AS "Estimator") AS "Values"), 
"DT_Output_55" AS 
(SELECT "DT_node_lookup_55"."KEY" AS "KEY", "DT_node_lookup_55".node_id_2 AS node_id_2, "DT_node_data_55".node_id AS node_id, "DT_node_data_55".feature AS feature, "DT_node_data_55".threshold AS threshold, "DT_node_data_55".count AS count, "DT_node_data_55".depth AS depth, "DT_node_data_55".parent_id AS parent_id, "DT_node_data_55"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_55" LEFT OUTER JOIN "DT_node_data_55" ON "DT_node_lookup_55".node_id_2 = "DT_node_data_55".node_id), 
"GB_Tree_5_5" AS 
(SELECT "DT_Output_55"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3", 0.0 AS "Score_4", "DT_Output_55"."Estimator" AS "Score_5", 0.0 AS "Score_6", 0.0 AS "Score_7", 0.0 AS "Score_8", 0.0 AS "Score_9" 
FROM "DT_Output_55")
 SELECT "Score_Union_CTE_esu_6"."KEY", "Score_Union_CTE_esu_6"."Score_0", "Score_Union_CTE_esu_6"."Score_1", "Score_Union_CTE_esu_6"."Score_2", "Score_Union_CTE_esu_6"."Score_3", "Score_Union_CTE_esu_6"."Score_4", "Score_Union_CTE_esu_6"."Score_5", "Score_Union_CTE_esu_6"."Score_6", "Score_Union_CTE_esu_6"."Score_7", "Score_Union_CTE_esu_6"."Score_8", "Score_Union_CTE_esu_6"."Score_9" 
FROM (SELECT "GB_Tree_4_8"."KEY" AS "KEY", "GB_Tree_4_8"."Score_0" AS "Score_0", "GB_Tree_4_8"."Score_1" AS "Score_1", "GB_Tree_4_8"."Score_2" AS "Score_2", "GB_Tree_4_8"."Score_3" AS "Score_3", "GB_Tree_4_8"."Score_4" AS "Score_4", "GB_Tree_4_8"."Score_5" AS "Score_5", "GB_Tree_4_8"."Score_6" AS "Score_6", "GB_Tree_4_8"."Score_7" AS "Score_7", "GB_Tree_4_8"."Score_8" AS "Score_8", "GB_Tree_4_8"."Score_9" AS "Score_9" 
FROM "GB_Tree_4_8" UNION ALL SELECT "GB_Tree_4_9"."KEY" AS "KEY", "GB_Tree_4_9"."Score_0" AS "Score_0", "GB_Tree_4_9"."Score_1" AS "Score_1", "GB_Tree_4_9"."Score_2" AS "Score_2", "GB_Tree_4_9"."Score_3" AS "Score_3", "GB_Tree_4_9"."Score_4" AS "Score_4", "GB_Tree_4_9"."Score_5" AS "Score_5", "GB_Tree_4_9"."Score_6" AS "Score_6", "GB_Tree_4_9"."Score_7" AS "Score_7", "GB_Tree_4_9"."Score_8" AS "Score_8", "GB_Tree_4_9"."Score_9" AS "Score_9" 
FROM "GB_Tree_4_9" UNION ALL SELECT "GB_Tree_5_0"."KEY" AS "KEY", "GB_Tree_5_0"."Score_0" AS "Score_0", "GB_Tree_5_0"."Score_1" AS "Score_1", "GB_Tree_5_0"."Score_2" AS "Score_2", "GB_Tree_5_0"."Score_3" AS "Score_3", "GB_Tree_5_0"."Score_4" AS "Score_4", "GB_Tree_5_0"."Score_5" AS "Score_5", "GB_Tree_5_0"."Score_6" AS "Score_6", "GB_Tree_5_0"."Score_7" AS "Score_7", "GB_Tree_5_0"."Score_8" AS "Score_8", "GB_Tree_5_0"."Score_9" AS "Score_9" 
FROM "GB_Tree_5_0" UNION ALL SELECT "GB_Tree_5_1"."KEY" AS "KEY", "GB_Tree_5_1"."Score_0" AS "Score_0", "GB_Tree_5_1"."Score_1" AS "Score_1", "GB_Tree_5_1"."Score_2" AS "Score_2", "GB_Tree_5_1"."Score_3" AS "Score_3", "GB_Tree_5_1"."Score_4" AS "Score_4", "GB_Tree_5_1"."Score_5" AS "Score_5", "GB_Tree_5_1"."Score_6" AS "Score_6", "GB_Tree_5_1"."Score_7" AS "Score_7", "GB_Tree_5_1"."Score_8" AS "Score_8", "GB_Tree_5_1"."Score_9" AS "Score_9" 
FROM "GB_Tree_5_1" UNION ALL SELECT "GB_Tree_5_2"."KEY" AS "KEY", "GB_Tree_5_2"."Score_0" AS "Score_0", "GB_Tree_5_2"."Score_1" AS "Score_1", "GB_Tree_5_2"."Score_2" AS "Score_2", "GB_Tree_5_2"."Score_3" AS "Score_3", "GB_Tree_5_2"."Score_4" AS "Score_4", "GB_Tree_5_2"."Score_5" AS "Score_5", "GB_Tree_5_2"."Score_6" AS "Score_6", "GB_Tree_5_2"."Score_7" AS "Score_7", "GB_Tree_5_2"."Score_8" AS "Score_8", "GB_Tree_5_2"."Score_9" AS "Score_9" 
FROM "GB_Tree_5_2" UNION ALL SELECT "GB_Tree_5_3"."KEY" AS "KEY", "GB_Tree_5_3"."Score_0" AS "Score_0", "GB_Tree_5_3"."Score_1" AS "Score_1", "GB_Tree_5_3"."Score_2" AS "Score_2", "GB_Tree_5_3"."Score_3" AS "Score_3", "GB_Tree_5_3"."Score_4" AS "Score_4", "GB_Tree_5_3"."Score_5" AS "Score_5", "GB_Tree_5_3"."Score_6" AS "Score_6", "GB_Tree_5_3"."Score_7" AS "Score_7", "GB_Tree_5_3"."Score_8" AS "Score_8", "GB_Tree_5_3"."Score_9" AS "Score_9" 
FROM "GB_Tree_5_3" UNION ALL SELECT "GB_Tree_5_4"."KEY" AS "KEY", "GB_Tree_5_4"."Score_0" AS "Score_0", "GB_Tree_5_4"."Score_1" AS "Score_1", "GB_Tree_5_4"."Score_2" AS "Score_2", "GB_Tree_5_4"."Score_3" AS "Score_3", "GB_Tree_5_4"."Score_4" AS "Score_4", "GB_Tree_5_4"."Score_5" AS "Score_5", "GB_Tree_5_4"."Score_6" AS "Score_6", "GB_Tree_5_4"."Score_7" AS "Score_7", "GB_Tree_5_4"."Score_8" AS "Score_8", "GB_Tree_5_4"."Score_9" AS "Score_9" 
FROM "GB_Tree_5_4" UNION ALL SELECT "GB_Tree_5_5"."KEY" AS "KEY", "GB_Tree_5_5"."Score_0" AS "Score_0", "GB_Tree_5_5"."Score_1" AS "Score_1", "GB_Tree_5_5"."Score_2" AS "Score_2", "GB_Tree_5_5"."Score_3" AS "Score_3", "GB_Tree_5_5"."Score_4" AS "Score_4", "GB_Tree_5_5"."Score_5" AS "Score_5", "GB_Tree_5_5"."Score_6" AS "Score_6", "GB_Tree_5_5"."Score_7" AS "Score_7", "GB_Tree_5_5"."Score_8" AS "Score_8", "GB_Tree_5_5"."Score_9" AS "Score_9" 
FROM "GB_Tree_5_5") AS "Score_Union_CTE_esu_6"), 
"Score_Union_CTE_7" AS 
(WITH "DT_node_lookup_56" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_21" <= 0.5) THEN CASE WHEN ("ADS"."Feature_42" <= 9.5) THEN CASE WHEN ("ADS"."Feature_2" <= 0.5) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_49" <= 2.5) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_33" <= 6.5) THEN CASE WHEN ("ADS"."Feature_46" <= 14.5) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_4" <= 0.5) THEN 13 ELSE 14 END END END AS node_id_2 
FROM digits AS "ADS"), 
"DT_node_data_56" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 15 AS count, 3 AS depth, 2 AS parent_id, 1.4762098335186378 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 199 AS count, 3 AS depth, 2 AS parent_id, -0.9551223102917172 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 157 AS count, 3 AS depth, 5 AS parent_id, 1.6616019449797566 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 22 AS count, 3 AS depth, 5 AS parent_id, -0.7946654558025852 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 869 AS count, 3 AS depth, 9 AS parent_id, -0.9574895623868676 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 9 AS count, 3 AS depth, 9 AS parent_id, 0.21487991305235768 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 3 AS depth, 12 AS parent_id, 1.7306369640428094 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 164 AS count, 3 AS depth, 12 AS parent_id, -0.7241725529097485 AS "Estimator") AS "Values"), 
"DT_Output_56" AS 
(SELECT "DT_node_lookup_56"."KEY" AS "KEY", "DT_node_lookup_56".node_id_2 AS node_id_2, "DT_node_data_56".node_id AS node_id, "DT_node_data_56".feature AS feature, "DT_node_data_56".threshold AS threshold, "DT_node_data_56".count AS count, "DT_node_data_56".depth AS depth, "DT_node_data_56".parent_id AS parent_id, "DT_node_data_56"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_56" LEFT OUTER JOIN "DT_node_data_56" ON "DT_node_lookup_56".node_id_2 = "DT_node_data_56".node_id), 
"GB_Tree_5_6" AS 
(SELECT "DT_Output_56"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3", 0.0 AS "Score_4", 0.0 AS "Score_5", "DT_Output_56"."Estimator" AS "Score_6", 0.0 AS "Score_7", 0.0 AS "Score_8", 0.0 AS "Score_9" 
FROM "DT_Output_56"), 
"DT_node_lookup_57" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_60" <= 7.5) THEN CASE WHEN ("ADS"."Feature_18" <= 8.5) THEN CASE WHEN ("ADS"."Feature_53" <= 5.0) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_27" <= 5.5) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_7" <= 8.5) THEN CASE WHEN ("ADS"."Feature_6" <= 11.5) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_4" <= 12.0) THEN 13 ELSE 14 END END END AS node_id_2 
FROM digits AS "ADS"), 
"DT_node_data_57" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 99 AS count, 3 AS depth, 2 AS parent_id, 1.8514531815422737 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 9 AS count, 3 AS depth, 2 AS parent_id, -1.02670944359229 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 62 AS count, 3 AS depth, 5 AS parent_id, 1.2920453351184356 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 90 AS count, 3 AS depth, 5 AS parent_id, -0.5685310276943449 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1162 AS count, 3 AS depth, 9 AS parent_id, -0.8702496740065815 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 13 AS count, 3 AS depth, 9 AS parent_id, 0.9319150368886724 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 12 AS parent_id, 4.612520051776435 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 12 AS parent_id, 2.3788046125769418 AS "Estimator") AS "Values"), 
"DT_Output_57" AS 
(SELECT "DT_node_lookup_57"."KEY" AS "KEY", "DT_node_lookup_57".node_id_2 AS node_id_2, "DT_node_data_57".node_id AS node_id, "DT_node_data_57".feature AS feature, "DT_node_data_57".threshold AS threshold, "DT_node_data_57".count AS count, "DT_node_data_57".depth AS depth, "DT_node_data_57".parent_id AS parent_id, "DT_node_data_57"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_57" LEFT OUTER JOIN "DT_node_data_57" ON "DT_node_lookup_57".node_id_2 = "DT_node_data_57".node_id), 
"GB_Tree_5_7" AS 
(SELECT "DT_Output_57"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3", 0.0 AS "Score_4", 0.0 AS "Score_5", 0.0 AS "Score_6", "DT_Output_57"."Estimator" AS "Score_7", 0.0 AS "Score_8", 0.0 AS "Score_9" 
FROM "DT_Output_57"), 
"DT_node_lookup_58" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_35" <= 11.5) THEN CASE WHEN ("ADS"."Feature_35" <= 5.5) THEN CASE WHEN ("ADS"."Feature_38" <= 0.5) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_13" <= 6.5) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_21" <= 9.5) THEN CASE WHEN ("ADS"."Feature_8" <= 0.5) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_50" <= 8.5) THEN 13 ELSE 14 END END END AS node_id_2 
FROM digits AS "ADS"), 
"DT_node_data_58" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 155 AS count, 3 AS depth, 2 AS parent_id, -0.9950867660241844 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 335 AS count, 3 AS depth, 2 AS parent_id, -0.9019668519676538 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 130 AS count, 3 AS depth, 5 AS parent_id, -0.9693614019900142 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 166 AS count, 3 AS depth, 5 AS parent_id, 0.21798380985135377 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 405 AS count, 3 AS depth, 9 AS parent_id, -0.386552184546314 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 3 AS depth, 9 AS parent_id, 3.8520072105400818 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 134 AS count, 3 AS depth, 12 AS parent_id, 0.043704982722193815 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 110 AS count, 3 AS depth, 12 AS parent_id, 1.7734848495521727 AS "Estimator") AS "Values"), 
"DT_Output_58" AS 
(SELECT "DT_node_lookup_58"."KEY" AS "KEY", "DT_node_lookup_58".node_id_2 AS node_id_2, "DT_node_data_58".node_id AS node_id, "DT_node_data_58".feature AS feature, "DT_node_data_58".threshold AS threshold, "DT_node_data_58".count AS count, "DT_node_data_58".depth AS depth, "DT_node_data_58".parent_id AS parent_id, "DT_node_data_58"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_58" LEFT OUTER JOIN "DT_node_data_58" ON "DT_node_lookup_58".node_id_2 = "DT_node_data_58".node_id), 
"GB_Tree_5_8" AS 
(SELECT "DT_Output_58"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3", 0.0 AS "Score_4", 0.0 AS "Score_5", 0.0 AS "Score_6", 0.0 AS "Score_7", "DT_Output_58"."Estimator" AS "Score_8", 0.0 AS "Score_9" 
FROM "DT_Output_58"), 
"DT_node_lookup_59" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_43" <= 0.5) THEN CASE WHEN ("ADS"."Feature_29" <= 13.5) THEN CASE WHEN ("ADS"."Feature_21" <= 15.5) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_21" <= 9.5) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_43" <= 3.5) THEN CASE WHEN ("ADS"."Feature_29" <= 14.5) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_38" <= 13.0) THEN 13 ELSE 14 END END END AS node_id_2 
FROM digits AS "ADS"), 
"DT_node_data_59" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 276 AS count, 3 AS depth, 2 AS parent_id, -0.30160641611581096 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 32 AS count, 3 AS depth, 2 AS parent_id, 1.3392840587006836 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 22 AS count, 3 AS depth, 5 AS parent_id, -0.44004596195393053 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 120 AS count, 3 AS depth, 5 AS parent_id, 1.5025014366659353 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 116 AS count, 3 AS depth, 9 AS parent_id, -0.4935347262124811 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 30 AS count, 3 AS depth, 9 AS parent_id, 1.5244923330097802 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 838 AS count, 3 AS depth, 12 AS parent_id, -0.8514894658722593 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 3 AS depth, 12 AS parent_id, 1.7782156687706183 AS "Estimator") AS "Values"), 
"DT_Output_59" AS 
(SELECT "DT_node_lookup_59"."KEY" AS "KEY", "DT_node_lookup_59".node_id_2 AS node_id_2, "DT_node_data_59".node_id AS node_id, "DT_node_data_59".feature AS feature, "DT_node_data_59".threshold AS threshold, "DT_node_data_59".count AS count, "DT_node_data_59".depth AS depth, "DT_node_data_59".parent_id AS parent_id, "DT_node_data_59"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_59" LEFT OUTER JOIN "DT_node_data_59" ON "DT_node_lookup_59".node_id_2 = "DT_node_data_59".node_id), 
"GB_Tree_5_9" AS 
(SELECT "DT_Output_59"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3", 0.0 AS "Score_4", 0.0 AS "Score_5", 0.0 AS "Score_6", 0.0 AS "Score_7", 0.0 AS "Score_8", "DT_Output_59"."Estimator" AS "Score_9" 
FROM "DT_Output_59"), 
"DT_node_lookup_60" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_36" <= 0.5) THEN CASE WHEN ("ADS"."Feature_28" <= 2.5) THEN CASE WHEN ("ADS"."Feature_13" <= 1.5) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_42" <= 13.5) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_28" <= 0.5) THEN CASE WHEN ("ADS"."Feature_21" <= 12.5) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_21" <= 4.5) THEN 13 ELSE 14 END END END AS node_id_2 
FROM digits AS "ADS"), 
"DT_node_data_60" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 9 AS count, 3 AS depth, 2 AS parent_id, -1.115608723777429 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 137 AS count, 3 AS depth, 2 AS parent_id, 1.4942060462353675 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 69 AS count, 3 AS depth, 5 AS parent_id, -0.9776196313912738 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS count, 3 AS depth, 5 AS parent_id, 0.9975931624893777 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 104 AS count, 3 AS depth, 9 AS parent_id, -0.9450171045913167 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 7 AS count, 3 AS depth, 9 AS parent_id, 1.6636381520691934 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 422 AS count, 3 AS depth, 12 AS parent_id, -0.9463015419866015 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 685 AS count, 3 AS depth, 12 AS parent_id, -0.9522243291338582 AS "Estimator") AS "Values"), 
"DT_Output_60" AS 
(SELECT "DT_node_lookup_60"."KEY" AS "KEY", "DT_node_lookup_60".node_id_2 AS node_id_2, "DT_node_data_60".node_id AS node_id, "DT_node_data_60".feature AS feature, "DT_node_data_60".threshold AS threshold, "DT_node_data_60".count AS count, "DT_node_data_60".depth AS depth, "DT_node_data_60".parent_id AS parent_id, "DT_node_data_60"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_60" LEFT OUTER JOIN "DT_node_data_60" ON "DT_node_lookup_60".node_id_2 = "DT_node_data_60".node_id), 
"GB_Tree_6_0" AS 
(SELECT "DT_Output_60"."KEY" AS "KEY", "DT_Output_60"."Estimator" AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3", 0.0 AS "Score_4", 0.0 AS "Score_5", 0.0 AS "Score_6", 0.0 AS "Score_7", 0.0 AS "Score_8", 0.0 AS "Score_9" 
FROM "DT_Output_60"), 
"DT_node_lookup_61" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_20" <= 15.5) THEN CASE WHEN ("ADS"."Feature_63" <= 7.5) THEN CASE WHEN ("ADS"."Feature_19" <= 15.5) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_19" <= 13.0) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_10" <= 9.5) THEN CASE WHEN ("ADS"."Feature_41" <= 3.0) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_26" <= 10.5) THEN 13 ELSE 14 END END END AS node_id_2 
FROM digits AS "ADS"), 
"DT_node_data_61" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1068 AS count, 3 AS depth, 2 AS parent_id, -0.8750799641313518 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 99 AS count, 3 AS depth, 2 AS parent_id, 0.1707977927437901 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 13 AS count, 3 AS depth, 5 AS parent_id, -0.9622443957114138 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 17 AS count, 3 AS depth, 5 AS parent_id, 2.272516132051629 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 97 AS count, 3 AS depth, 9 AS parent_id, 1.8032638476542018 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 18 AS count, 3 AS depth, 9 AS parent_id, -0.265615098683033 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 104 AS count, 3 AS depth, 12 AS parent_id, -0.85094767245933 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 21 AS count, 3 AS depth, 12 AS parent_id, 1.3070950416570875 AS "Estimator") AS "Values"), 
"DT_Output_61" AS 
(SELECT "DT_node_lookup_61"."KEY" AS "KEY", "DT_node_lookup_61".node_id_2 AS node_id_2, "DT_node_data_61".node_id AS node_id, "DT_node_data_61".feature AS feature, "DT_node_data_61".threshold AS threshold, "DT_node_data_61".count AS count, "DT_node_data_61".depth AS depth, "DT_node_data_61".parent_id AS parent_id, "DT_node_data_61"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_61" LEFT OUTER JOIN "DT_node_data_61" ON "DT_node_lookup_61".node_id_2 = "DT_node_data_61".node_id), 
"GB_Tree_6_1" AS 
(SELECT "DT_Output_61"."KEY" AS "KEY", 0.0 AS "Score_0", "DT_Output_61"."Estimator" AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3", 0.0 AS "Score_4", 0.0 AS "Score_5", 0.0 AS "Score_6", 0.0 AS "Score_7", 0.0 AS "Score_8", 0.0 AS "Score_9" 
FROM "DT_Output_61"), 
"DT_node_lookup_62" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_26" <= 1.5) THEN CASE WHEN ("ADS"."Feature_62" <= 2.5) THEN CASE WHEN ("ADS"."Feature_37" <= 1.5) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_43" <= 4.5) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_63" <= 0.5) THEN CASE WHEN ("ADS"."Feature_4" <= 2.5) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_19" <= 8.0) THEN 13 ELSE 14 END END END AS node_id_2 
FROM digits AS "ADS"), 
"DT_node_data_62" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 39 AS count, 3 AS depth, 2 AS parent_id, 1.1862430721113348 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 161 AS count, 3 AS depth, 2 AS parent_id, -0.5219677710690537 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 33 AS count, 3 AS depth, 5 AS parent_id, 0.5907287090891248 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 74 AS count, 3 AS depth, 5 AS parent_id, 1.6873336781493977 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 49 AS count, 3 AS depth, 9 AS parent_id, 0.9983252093055959 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1024 AS count, 3 AS depth, 9 AS parent_id, -0.7863332761365531 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 28 AS count, 3 AS depth, 12 AS parent_id, 1.383533551172122 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 29 AS count, 3 AS depth, 12 AS parent_id, -0.7713736296385247 AS "Estimator") AS "Values"), 
"DT_Output_62" AS 
(SELECT "DT_node_lookup_62"."KEY" AS "KEY", "DT_node_lookup_62".node_id_2 AS node_id_2, "DT_node_data_62".node_id AS node_id, "DT_node_data_62".feature AS feature, "DT_node_data_62".threshold AS threshold, "DT_node_data_62".count AS count, "DT_node_data_62".depth AS depth, "DT_node_data_62".parent_id AS parent_id, "DT_node_data_62"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_62" LEFT OUTER JOIN "DT_node_data_62" ON "DT_node_lookup_62".node_id_2 = "DT_node_data_62".node_id), 
"GB_Tree_6_2" AS 
(SELECT "DT_Output_62"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", "DT_Output_62"."Estimator" AS "Score_2", 0.0 AS "Score_3", 0.0 AS "Score_4", 0.0 AS "Score_5", 0.0 AS "Score_6", 0.0 AS "Score_7", 0.0 AS "Score_8", 0.0 AS "Score_9" 
FROM "DT_Output_62"), 
"DT_node_lookup_63" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_26" <= 5.5) THEN CASE WHEN ("ADS"."Feature_43" <= 2.5) THEN CASE WHEN ("ADS"."Feature_30" <= 1.5) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_51" <= 7.5) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_54" <= 5.5) THEN CASE WHEN ("ADS"."Feature_28" <= 0.5) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_18" <= 1.5) THEN 13 ELSE 14 END END END AS node_id_2 
FROM digits AS "ADS"), 
"DT_node_data_63" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 146 AS count, 3 AS depth, 2 AS parent_id, 1.6043328784416715 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 34 AS count, 3 AS depth, 2 AS parent_id, -0.8713816033481231 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 52 AS count, 3 AS depth, 5 AS parent_id, 0.9997661222485851 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 253 AS count, 3 AS depth, 5 AS parent_id, -0.7891758715542699 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 165 AS count, 3 AS depth, 9 AS parent_id, -0.8340318840193887 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 530 AS count, 3 AS depth, 9 AS parent_id, -0.958118269557646 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 3 AS depth, 12 AS parent_id, 2.6293012604143424 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 254 AS count, 3 AS depth, 12 AS parent_id, -0.4377861451805275 AS "Estimator") AS "Values"), 
"DT_Output_63" AS 
(SELECT "DT_node_lookup_63"."KEY" AS "KEY", "DT_node_lookup_63".node_id_2 AS node_id_2, "DT_node_data_63".node_id AS node_id, "DT_node_data_63".feature AS feature, "DT_node_data_63".threshold AS threshold, "DT_node_data_63".count AS count, "DT_node_data_63".depth AS depth, "DT_node_data_63".parent_id AS parent_id, "DT_node_data_63"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_63" LEFT OUTER JOIN "DT_node_data_63" ON "DT_node_lookup_63".node_id_2 = "DT_node_data_63".node_id), 
"GB_Tree_6_3" AS 
(SELECT "DT_Output_63"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", "DT_Output_63"."Estimator" AS "Score_3", 0.0 AS "Score_4", 0.0 AS "Score_5", 0.0 AS "Score_6", 0.0 AS "Score_7", 0.0 AS "Score_8", 0.0 AS "Score_9" 
FROM "DT_Output_63")
 SELECT "Score_Union_CTE_esu_7"."KEY", "Score_Union_CTE_esu_7"."Score_0", "Score_Union_CTE_esu_7"."Score_1", "Score_Union_CTE_esu_7"."Score_2", "Score_Union_CTE_esu_7"."Score_3", "Score_Union_CTE_esu_7"."Score_4", "Score_Union_CTE_esu_7"."Score_5", "Score_Union_CTE_esu_7"."Score_6", "Score_Union_CTE_esu_7"."Score_7", "Score_Union_CTE_esu_7"."Score_8", "Score_Union_CTE_esu_7"."Score_9" 
FROM (SELECT "GB_Tree_5_6"."KEY" AS "KEY", "GB_Tree_5_6"."Score_0" AS "Score_0", "GB_Tree_5_6"."Score_1" AS "Score_1", "GB_Tree_5_6"."Score_2" AS "Score_2", "GB_Tree_5_6"."Score_3" AS "Score_3", "GB_Tree_5_6"."Score_4" AS "Score_4", "GB_Tree_5_6"."Score_5" AS "Score_5", "GB_Tree_5_6"."Score_6" AS "Score_6", "GB_Tree_5_6"."Score_7" AS "Score_7", "GB_Tree_5_6"."Score_8" AS "Score_8", "GB_Tree_5_6"."Score_9" AS "Score_9" 
FROM "GB_Tree_5_6" UNION ALL SELECT "GB_Tree_5_7"."KEY" AS "KEY", "GB_Tree_5_7"."Score_0" AS "Score_0", "GB_Tree_5_7"."Score_1" AS "Score_1", "GB_Tree_5_7"."Score_2" AS "Score_2", "GB_Tree_5_7"."Score_3" AS "Score_3", "GB_Tree_5_7"."Score_4" AS "Score_4", "GB_Tree_5_7"."Score_5" AS "Score_5", "GB_Tree_5_7"."Score_6" AS "Score_6", "GB_Tree_5_7"."Score_7" AS "Score_7", "GB_Tree_5_7"."Score_8" AS "Score_8", "GB_Tree_5_7"."Score_9" AS "Score_9" 
FROM "GB_Tree_5_7" UNION ALL SELECT "GB_Tree_5_8"."KEY" AS "KEY", "GB_Tree_5_8"."Score_0" AS "Score_0", "GB_Tree_5_8"."Score_1" AS "Score_1", "GB_Tree_5_8"."Score_2" AS "Score_2", "GB_Tree_5_8"."Score_3" AS "Score_3", "GB_Tree_5_8"."Score_4" AS "Score_4", "GB_Tree_5_8"."Score_5" AS "Score_5", "GB_Tree_5_8"."Score_6" AS "Score_6", "GB_Tree_5_8"."Score_7" AS "Score_7", "GB_Tree_5_8"."Score_8" AS "Score_8", "GB_Tree_5_8"."Score_9" AS "Score_9" 
FROM "GB_Tree_5_8" UNION ALL SELECT "GB_Tree_5_9"."KEY" AS "KEY", "GB_Tree_5_9"."Score_0" AS "Score_0", "GB_Tree_5_9"."Score_1" AS "Score_1", "GB_Tree_5_9"."Score_2" AS "Score_2", "GB_Tree_5_9"."Score_3" AS "Score_3", "GB_Tree_5_9"."Score_4" AS "Score_4", "GB_Tree_5_9"."Score_5" AS "Score_5", "GB_Tree_5_9"."Score_6" AS "Score_6", "GB_Tree_5_9"."Score_7" AS "Score_7", "GB_Tree_5_9"."Score_8" AS "Score_8", "GB_Tree_5_9"."Score_9" AS "Score_9" 
FROM "GB_Tree_5_9" UNION ALL SELECT "GB_Tree_6_0"."KEY" AS "KEY", "GB_Tree_6_0"."Score_0" AS "Score_0", "GB_Tree_6_0"."Score_1" AS "Score_1", "GB_Tree_6_0"."Score_2" AS "Score_2", "GB_Tree_6_0"."Score_3" AS "Score_3", "GB_Tree_6_0"."Score_4" AS "Score_4", "GB_Tree_6_0"."Score_5" AS "Score_5", "GB_Tree_6_0"."Score_6" AS "Score_6", "GB_Tree_6_0"."Score_7" AS "Score_7", "GB_Tree_6_0"."Score_8" AS "Score_8", "GB_Tree_6_0"."Score_9" AS "Score_9" 
FROM "GB_Tree_6_0" UNION ALL SELECT "GB_Tree_6_1"."KEY" AS "KEY", "GB_Tree_6_1"."Score_0" AS "Score_0", "GB_Tree_6_1"."Score_1" AS "Score_1", "GB_Tree_6_1"."Score_2" AS "Score_2", "GB_Tree_6_1"."Score_3" AS "Score_3", "GB_Tree_6_1"."Score_4" AS "Score_4", "GB_Tree_6_1"."Score_5" AS "Score_5", "GB_Tree_6_1"."Score_6" AS "Score_6", "GB_Tree_6_1"."Score_7" AS "Score_7", "GB_Tree_6_1"."Score_8" AS "Score_8", "GB_Tree_6_1"."Score_9" AS "Score_9" 
FROM "GB_Tree_6_1" UNION ALL SELECT "GB_Tree_6_2"."KEY" AS "KEY", "GB_Tree_6_2"."Score_0" AS "Score_0", "GB_Tree_6_2"."Score_1" AS "Score_1", "GB_Tree_6_2"."Score_2" AS "Score_2", "GB_Tree_6_2"."Score_3" AS "Score_3", "GB_Tree_6_2"."Score_4" AS "Score_4", "GB_Tree_6_2"."Score_5" AS "Score_5", "GB_Tree_6_2"."Score_6" AS "Score_6", "GB_Tree_6_2"."Score_7" AS "Score_7", "GB_Tree_6_2"."Score_8" AS "Score_8", "GB_Tree_6_2"."Score_9" AS "Score_9" 
FROM "GB_Tree_6_2" UNION ALL SELECT "GB_Tree_6_3"."KEY" AS "KEY", "GB_Tree_6_3"."Score_0" AS "Score_0", "GB_Tree_6_3"."Score_1" AS "Score_1", "GB_Tree_6_3"."Score_2" AS "Score_2", "GB_Tree_6_3"."Score_3" AS "Score_3", "GB_Tree_6_3"."Score_4" AS "Score_4", "GB_Tree_6_3"."Score_5" AS "Score_5", "GB_Tree_6_3"."Score_6" AS "Score_6", "GB_Tree_6_3"."Score_7" AS "Score_7", "GB_Tree_6_3"."Score_8" AS "Score_8", "GB_Tree_6_3"."Score_9" AS "Score_9" 
FROM "GB_Tree_6_3") AS "Score_Union_CTE_esu_7"), 
"Score_Union_CTE_8" AS 
(WITH "DT_node_lookup_64" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_33" <= 8.5) THEN CASE WHEN ("ADS"."Feature_30" <= 8.5) THEN CASE WHEN ("ADS"."Feature_10" <= 2.5) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_13" <= 7.5) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_2" <= 3.5) THEN CASE WHEN ("ADS"."Feature_19" <= 2.0) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_51" <= 15.0) THEN 13 ELSE 14 END END END AS node_id_2 
FROM digits AS "ADS"), 
"DT_node_data_64" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 144 AS count, 3 AS depth, 2 AS parent_id, 0.7124546257042664 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1099 AS count, 3 AS depth, 2 AS parent_id, -0.816335297684776 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 33 AS count, 3 AS depth, 5 AS parent_id, 2.300163916126073 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 51 AS count, 3 AS depth, 5 AS parent_id, -0.4619471820668593 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 3 AS depth, 9 AS parent_id, -1.0841923645733014 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 90 AS count, 3 AS depth, 9 AS parent_id, 1.4986907981822175 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 16 AS count, 3 AS depth, 12 AS parent_id, -0.9836768206491739 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 3 AS depth, 12 AS parent_id, 1.780547923498568 AS "Estimator") AS "Values"), 
"DT_Output_64" AS 
(SELECT "DT_node_lookup_64"."KEY" AS "KEY", "DT_node_lookup_64".node_id_2 AS node_id_2, "DT_node_data_64".node_id AS node_id, "DT_node_data_64".feature AS feature, "DT_node_data_64".threshold AS threshold, "DT_node_data_64".count AS count, "DT_node_data_64".depth AS depth, "DT_node_data_64".parent_id AS parent_id, "DT_node_data_64"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_64" LEFT OUTER JOIN "DT_node_data_64" ON "DT_node_lookup_64".node_id_2 = "DT_node_data_64".node_id), 
"GB_Tree_6_4" AS 
(SELECT "DT_Output_64"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3", "DT_Output_64"."Estimator" AS "Score_4", 0.0 AS "Score_5", 0.0 AS "Score_6", 0.0 AS "Score_7", 0.0 AS "Score_8", 0.0 AS "Score_9" 
FROM "DT_Output_64"), 
"DT_node_lookup_65" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_21" <= 0.5) THEN CASE WHEN ("ADS"."Feature_5" <= 3.5) THEN CASE WHEN ("ADS"."Feature_9" <= 13.5) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_42" <= 10.5) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_21" <= 3.5) THEN CASE WHEN ("ADS"."Feature_35" <= 1.5) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_36" <= 0.5) THEN 13 ELSE 14 END END END AS node_id_2 
FROM digits AS "ADS"), 
"DT_node_data_65" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 231 AS count, 3 AS depth, 2 AS parent_id, -0.7054810031592745 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 3 AS depth, 2 AS parent_id, 2.679050148799805 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 122 AS count, 3 AS depth, 5 AS parent_id, 1.6081593173441266 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 38 AS count, 3 AS depth, 5 AS parent_id, -0.033856436888398095 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 19 AS count, 3 AS depth, 9 AS parent_id, 1.7673960225901961 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 92 AS count, 3 AS depth, 9 AS parent_id, -0.7539594917756127 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 189 AS count, 3 AS depth, 12 AS parent_id, -0.5277167152843031 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 744 AS count, 3 AS depth, 12 AS parent_id, -0.9365436606635416 AS "Estimator") AS "Values"), 
"DT_Output_65" AS 
(SELECT "DT_node_lookup_65"."KEY" AS "KEY", "DT_node_lookup_65".node_id_2 AS node_id_2, "DT_node_data_65".node_id AS node_id, "DT_node_data_65".feature AS feature, "DT_node_data_65".threshold AS threshold, "DT_node_data_65".count AS count, "DT_node_data_65".depth AS depth, "DT_node_data_65".parent_id AS parent_id, "DT_node_data_65"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_65" LEFT OUTER JOIN "DT_node_data_65" ON "DT_node_lookup_65".node_id_2 = "DT_node_data_65".node_id), 
"GB_Tree_6_5" AS 
(SELECT "DT_Output_65"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3", 0.0 AS "Score_4", "DT_Output_65"."Estimator" AS "Score_5", 0.0 AS "Score_6", 0.0 AS "Score_7", 0.0 AS "Score_8", 0.0 AS "Score_9" 
FROM "DT_Output_65"), 
"DT_node_lookup_66" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_21" <= 0.5) THEN CASE WHEN ("ADS"."Feature_42" <= 9.5) THEN CASE WHEN ("ADS"."Feature_59" <= 2.5) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_61" <= 6.5) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_33" <= 6.5) THEN CASE WHEN ("ADS"."Feature_46" <= 14.5) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_4" <= 0.5) THEN 13 ELSE 14 END END END AS node_id_2 
FROM digits AS "ADS"), 
"DT_node_data_66" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 3 AS depth, 2 AS parent_id, 5.296296208541568 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 212 AS count, 3 AS depth, 2 AS parent_id, -0.7442550842557275 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 32 AS count, 3 AS depth, 5 AS parent_id, -0.40566067355312485 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 147 AS count, 3 AS depth, 5 AS parent_id, 1.4425651360413756 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 869 AS count, 3 AS depth, 9 AS parent_id, -0.9522311356512745 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 9 AS count, 3 AS depth, 9 AS parent_id, 0.22816770123945648 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 3 AS depth, 12 AS parent_id, 1.4361743313396163 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 164 AS count, 3 AS depth, 12 AS parent_id, -0.6924257214906238 AS "Estimator") AS "Values"), 
"DT_Output_66" AS 
(SELECT "DT_node_lookup_66"."KEY" AS "KEY", "DT_node_lookup_66".node_id_2 AS node_id_2, "DT_node_data_66".node_id AS node_id, "DT_node_data_66".feature AS feature, "DT_node_data_66".threshold AS threshold, "DT_node_data_66".count AS count, "DT_node_data_66".depth AS depth, "DT_node_data_66".parent_id AS parent_id, "DT_node_data_66"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_66" LEFT OUTER JOIN "DT_node_data_66" ON "DT_node_lookup_66".node_id_2 = "DT_node_data_66".node_id), 
"GB_Tree_6_6" AS 
(SELECT "DT_Output_66"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3", 0.0 AS "Score_4", 0.0 AS "Score_5", "DT_Output_66"."Estimator" AS "Score_6", 0.0 AS "Score_7", 0.0 AS "Score_8", 0.0 AS "Score_9" 
FROM "DT_Output_66"), 
"DT_node_lookup_67" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_60" <= 7.5) THEN CASE WHEN ("ADS"."Feature_26" <= 9.5) THEN CASE WHEN ("ADS"."Feature_38" <= 0.5) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_15" <= 2.5) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_7" <= 8.5) THEN CASE WHEN ("ADS"."Feature_14" <= 6.5) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_15" <= 11.0) THEN 13 ELSE 14 END END END AS node_id_2 
FROM digits AS "ADS"), 
"DT_node_data_67" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 38 AS count, 3 AS depth, 2 AS parent_id, 0.4069206156436673 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 102 AS count, 3 AS depth, 2 AS parent_id, 1.718231658449784 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 111 AS count, 3 AS depth, 5 AS parent_id, -0.259444624534268 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 9 AS count, 3 AS depth, 5 AS parent_id, 1.9827609409969646 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1072 AS count, 3 AS depth, 9 AS parent_id, -0.9180254417278885 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 103 AS count, 3 AS depth, 9 AS parent_id, 0.0597697613084344 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 12 AS parent_id, 2.043406247948488 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 12 AS parent_id, 3.2620510885052982 AS "Estimator") AS "Values"), 
"DT_Output_67" AS 
(SELECT "DT_node_lookup_67"."KEY" AS "KEY", "DT_node_lookup_67".node_id_2 AS node_id_2, "DT_node_data_67".node_id AS node_id, "DT_node_data_67".feature AS feature, "DT_node_data_67".threshold AS threshold, "DT_node_data_67".count AS count, "DT_node_data_67".depth AS depth, "DT_node_data_67".parent_id AS parent_id, "DT_node_data_67"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_67" LEFT OUTER JOIN "DT_node_data_67" ON "DT_node_lookup_67".node_id_2 = "DT_node_data_67".node_id), 
"GB_Tree_6_7" AS 
(SELECT "DT_Output_67"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3", 0.0 AS "Score_4", 0.0 AS "Score_5", 0.0 AS "Score_6", "DT_Output_67"."Estimator" AS "Score_7", 0.0 AS "Score_8", 0.0 AS "Score_9" 
FROM "DT_Output_67"), 
"DT_node_lookup_68" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_38" <= 0.5) THEN CASE WHEN ("ADS"."Feature_22" <= 0.5) THEN CASE WHEN ("ADS"."Feature_13" <= 9.5) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_35" <= 8.5) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_34" <= 1.5) THEN CASE WHEN ("ADS"."Feature_43" <= 7.0) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_42" <= 9.5) THEN 13 ELSE 14 END END END AS node_id_2 
FROM digits AS "ADS"), 
"DT_node_data_68" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 325 AS count, 3 AS depth, 2 AS parent_id, -0.6766916705056423 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 173 AS count, 3 AS depth, 2 AS parent_id, 0.552367737711422 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 57 AS count, 3 AS depth, 5 AS parent_id, -0.9797961675988243 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 124 AS count, 3 AS depth, 5 AS parent_id, 1.4477681372777897 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 169 AS count, 3 AS depth, 9 AS parent_id, -0.9550830175825036 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 24 AS count, 3 AS depth, 9 AS parent_id, 1.9007290240016579 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 221 AS count, 3 AS depth, 12 AS parent_id, -0.9636066625031391 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 344 AS count, 3 AS depth, 12 AS parent_id, -0.884035226334731 AS "Estimator") AS "Values"), 
"DT_Output_68" AS 
(SELECT "DT_node_lookup_68"."KEY" AS "KEY", "DT_node_lookup_68".node_id_2 AS node_id_2, "DT_node_data_68".node_id AS node_id, "DT_node_data_68".feature AS feature, "DT_node_data_68".threshold AS threshold, "DT_node_data_68".count AS count, "DT_node_data_68".depth AS depth, "DT_node_data_68".parent_id AS parent_id, "DT_node_data_68"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_68" LEFT OUTER JOIN "DT_node_data_68" ON "DT_node_lookup_68".node_id_2 = "DT_node_data_68".node_id), 
"GB_Tree_6_8" AS 
(SELECT "DT_Output_68"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3", 0.0 AS "Score_4", 0.0 AS "Score_5", 0.0 AS "Score_6", 0.0 AS "Score_7", "DT_Output_68"."Estimator" AS "Score_8", 0.0 AS "Score_9" 
FROM "DT_Output_68"), 
"DT_node_lookup_69" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_43" <= 0.5) THEN CASE WHEN ("ADS"."Feature_29" <= 13.5) THEN CASE WHEN ("ADS"."Feature_21" <= 15.5) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_27" <= 1.5) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_43" <= 3.5) THEN CASE WHEN ("ADS"."Feature_29" <= 15.5) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_60" <= 1.5) THEN 13 ELSE 14 END END END AS node_id_2 
FROM digits AS "ADS"), 
"DT_node_data_69" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 276 AS count, 3 AS depth, 2 AS parent_id, -0.25703587351776386 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 32 AS count, 3 AS depth, 2 AS parent_id, 1.1398631469033502 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 14 AS count, 3 AS depth, 5 AS parent_id, -0.9795332922200869 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 128 AS count, 3 AS depth, 5 AS parent_id, 1.2993826423979173 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 125 AS count, 3 AS depth, 9 AS parent_id, -0.3091364544189067 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 21 AS count, 3 AS depth, 9 AS parent_id, 1.4388985199070026 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 101 AS count, 3 AS depth, 12 AS parent_id, -0.10009674942487308 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 740 AS count, 3 AS depth, 12 AS parent_id, -0.9139100439442418 AS "Estimator") AS "Values"), 
"DT_Output_69" AS 
(SELECT "DT_node_lookup_69"."KEY" AS "KEY", "DT_node_lookup_69".node_id_2 AS node_id_2, "DT_node_data_69".node_id AS node_id, "DT_node_data_69".feature AS feature, "DT_node_data_69".threshold AS threshold, "DT_node_data_69".count AS count, "DT_node_data_69".depth AS depth, "DT_node_data_69".parent_id AS parent_id, "DT_node_data_69"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_69" LEFT OUTER JOIN "DT_node_data_69" ON "DT_node_lookup_69".node_id_2 = "DT_node_data_69".node_id), 
"GB_Tree_6_9" AS 
(SELECT "DT_Output_69"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3", 0.0 AS "Score_4", 0.0 AS "Score_5", 0.0 AS "Score_6", 0.0 AS "Score_7", 0.0 AS "Score_8", "DT_Output_69"."Estimator" AS "Score_9" 
FROM "DT_Output_69"), 
"DT_node_lookup_70" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_36" <= 0.5) THEN CASE WHEN ("ADS"."Feature_28" <= 4.5) THEN CASE WHEN ("ADS"."Feature_13" <= 2.5) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_42" <= 13.5) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_28" <= 0.5) THEN CASE WHEN ("ADS"."Feature_21" <= 12.5) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_18" <= 6.5) THEN 13 ELSE 14 END END END AS node_id_2 
FROM digits AS "ADS"), 
"DT_node_data_70" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 11 AS count, 3 AS depth, 2 AS parent_id, -0.5504530767470549 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 139 AS count, 3 AS depth, 2 AS parent_id, 1.358470365414545 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 67 AS count, 3 AS depth, 5 AS parent_id, -0.9506057485479867 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 3 AS depth, 5 AS parent_id, -1.0656358660886214 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 104 AS count, 3 AS depth, 9 AS parent_id, -0.9395851280780115 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 7 AS count, 3 AS depth, 9 AS parent_id, 1.3588143723380877 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 384 AS count, 3 AS depth, 12 AS parent_id, -0.9408318425790589 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 723 AS count, 3 AS depth, 12 AS parent_id, -0.9474842957604449 AS "Estimator") AS "Values"), 
"DT_Output_70" AS 
(SELECT "DT_node_lookup_70"."KEY" AS "KEY", "DT_node_lookup_70".node_id_2 AS node_id_2, "DT_node_data_70".node_id AS node_id, "DT_node_data_70".feature AS feature, "DT_node_data_70".threshold AS threshold, "DT_node_data_70".count AS count, "DT_node_data_70".depth AS depth, "DT_node_data_70".parent_id AS parent_id, "DT_node_data_70"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_70" LEFT OUTER JOIN "DT_node_data_70" ON "DT_node_lookup_70".node_id_2 = "DT_node_data_70".node_id), 
"GB_Tree_7_0" AS 
(SELECT "DT_Output_70"."KEY" AS "KEY", "DT_Output_70"."Estimator" AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3", 0.0 AS "Score_4", 0.0 AS "Score_5", 0.0 AS "Score_6", 0.0 AS "Score_7", 0.0 AS "Score_8", 0.0 AS "Score_9" 
FROM "DT_Output_70"), 
"DT_node_lookup_71" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_20" <= 15.5) THEN CASE WHEN ("ADS"."Feature_63" <= 7.5) THEN CASE WHEN ("ADS"."Feature_12" <= 14.5) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_19" <= 13.0) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_10" <= 9.5) THEN CASE WHEN ("ADS"."Feature_41" <= 3.0) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_26" <= 10.5) THEN 13 ELSE 14 END END END AS node_id_2 
FROM digits AS "ADS"), 
"DT_node_data_71" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 982 AS count, 3 AS depth, 2 AS parent_id, -0.8480968258891792 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 185 AS count, 3 AS depth, 2 AS parent_id, 0.0533514687548176 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 13 AS count, 3 AS depth, 5 AS parent_id, -0.9558247621350514 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 17 AS count, 3 AS depth, 5 AS parent_id, 1.9856674591442534 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 97 AS count, 3 AS depth, 9 AS parent_id, 1.6217860732873899 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 18 AS count, 3 AS depth, 9 AS parent_id, -0.25882547920045673 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 104 AS count, 3 AS depth, 12 AS parent_id, -0.8330477054355372 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 21 AS count, 3 AS depth, 12 AS parent_id, 1.1377007288046763 AS "Estimator") AS "Values"), 
"DT_Output_71" AS 
(SELECT "DT_node_lookup_71"."KEY" AS "KEY", "DT_node_lookup_71".node_id_2 AS node_id_2, "DT_node_data_71".node_id AS node_id, "DT_node_data_71".feature AS feature, "DT_node_data_71".threshold AS threshold, "DT_node_data_71".count AS count, "DT_node_data_71".depth AS depth, "DT_node_data_71".parent_id AS parent_id, "DT_node_data_71"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_71" LEFT OUTER JOIN "DT_node_data_71" ON "DT_node_lookup_71".node_id_2 = "DT_node_data_71".node_id), 
"GB_Tree_7_1" AS 
(SELECT "DT_Output_71"."KEY" AS "KEY", 0.0 AS "Score_0", "DT_Output_71"."Estimator" AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3", 0.0 AS "Score_4", 0.0 AS "Score_5", 0.0 AS "Score_6", 0.0 AS "Score_7", 0.0 AS "Score_8", 0.0 AS "Score_9" 
FROM "DT_Output_71")
 SELECT "Score_Union_CTE_esu_8"."KEY", "Score_Union_CTE_esu_8"."Score_0", "Score_Union_CTE_esu_8"."Score_1", "Score_Union_CTE_esu_8"."Score_2", "Score_Union_CTE_esu_8"."Score_3", "Score_Union_CTE_esu_8"."Score_4", "Score_Union_CTE_esu_8"."Score_5", "Score_Union_CTE_esu_8"."Score_6", "Score_Union_CTE_esu_8"."Score_7", "Score_Union_CTE_esu_8"."Score_8", "Score_Union_CTE_esu_8"."Score_9" 
FROM (SELECT "GB_Tree_6_4"."KEY" AS "KEY", "GB_Tree_6_4"."Score_0" AS "Score_0", "GB_Tree_6_4"."Score_1" AS "Score_1", "GB_Tree_6_4"."Score_2" AS "Score_2", "GB_Tree_6_4"."Score_3" AS "Score_3", "GB_Tree_6_4"."Score_4" AS "Score_4", "GB_Tree_6_4"."Score_5" AS "Score_5", "GB_Tree_6_4"."Score_6" AS "Score_6", "GB_Tree_6_4"."Score_7" AS "Score_7", "GB_Tree_6_4"."Score_8" AS "Score_8", "GB_Tree_6_4"."Score_9" AS "Score_9" 
FROM "GB_Tree_6_4" UNION ALL SELECT "GB_Tree_6_5"."KEY" AS "KEY", "GB_Tree_6_5"."Score_0" AS "Score_0", "GB_Tree_6_5"."Score_1" AS "Score_1", "GB_Tree_6_5"."Score_2" AS "Score_2", "GB_Tree_6_5"."Score_3" AS "Score_3", "GB_Tree_6_5"."Score_4" AS "Score_4", "GB_Tree_6_5"."Score_5" AS "Score_5", "GB_Tree_6_5"."Score_6" AS "Score_6", "GB_Tree_6_5"."Score_7" AS "Score_7", "GB_Tree_6_5"."Score_8" AS "Score_8", "GB_Tree_6_5"."Score_9" AS "Score_9" 
FROM "GB_Tree_6_5" UNION ALL SELECT "GB_Tree_6_6"."KEY" AS "KEY", "GB_Tree_6_6"."Score_0" AS "Score_0", "GB_Tree_6_6"."Score_1" AS "Score_1", "GB_Tree_6_6"."Score_2" AS "Score_2", "GB_Tree_6_6"."Score_3" AS "Score_3", "GB_Tree_6_6"."Score_4" AS "Score_4", "GB_Tree_6_6"."Score_5" AS "Score_5", "GB_Tree_6_6"."Score_6" AS "Score_6", "GB_Tree_6_6"."Score_7" AS "Score_7", "GB_Tree_6_6"."Score_8" AS "Score_8", "GB_Tree_6_6"."Score_9" AS "Score_9" 
FROM "GB_Tree_6_6" UNION ALL SELECT "GB_Tree_6_7"."KEY" AS "KEY", "GB_Tree_6_7"."Score_0" AS "Score_0", "GB_Tree_6_7"."Score_1" AS "Score_1", "GB_Tree_6_7"."Score_2" AS "Score_2", "GB_Tree_6_7"."Score_3" AS "Score_3", "GB_Tree_6_7"."Score_4" AS "Score_4", "GB_Tree_6_7"."Score_5" AS "Score_5", "GB_Tree_6_7"."Score_6" AS "Score_6", "GB_Tree_6_7"."Score_7" AS "Score_7", "GB_Tree_6_7"."Score_8" AS "Score_8", "GB_Tree_6_7"."Score_9" AS "Score_9" 
FROM "GB_Tree_6_7" UNION ALL SELECT "GB_Tree_6_8"."KEY" AS "KEY", "GB_Tree_6_8"."Score_0" AS "Score_0", "GB_Tree_6_8"."Score_1" AS "Score_1", "GB_Tree_6_8"."Score_2" AS "Score_2", "GB_Tree_6_8"."Score_3" AS "Score_3", "GB_Tree_6_8"."Score_4" AS "Score_4", "GB_Tree_6_8"."Score_5" AS "Score_5", "GB_Tree_6_8"."Score_6" AS "Score_6", "GB_Tree_6_8"."Score_7" AS "Score_7", "GB_Tree_6_8"."Score_8" AS "Score_8", "GB_Tree_6_8"."Score_9" AS "Score_9" 
FROM "GB_Tree_6_8" UNION ALL SELECT "GB_Tree_6_9"."KEY" AS "KEY", "GB_Tree_6_9"."Score_0" AS "Score_0", "GB_Tree_6_9"."Score_1" AS "Score_1", "GB_Tree_6_9"."Score_2" AS "Score_2", "GB_Tree_6_9"."Score_3" AS "Score_3", "GB_Tree_6_9"."Score_4" AS "Score_4", "GB_Tree_6_9"."Score_5" AS "Score_5", "GB_Tree_6_9"."Score_6" AS "Score_6", "GB_Tree_6_9"."Score_7" AS "Score_7", "GB_Tree_6_9"."Score_8" AS "Score_8", "GB_Tree_6_9"."Score_9" AS "Score_9" 
FROM "GB_Tree_6_9" UNION ALL SELECT "GB_Tree_7_0"."KEY" AS "KEY", "GB_Tree_7_0"."Score_0" AS "Score_0", "GB_Tree_7_0"."Score_1" AS "Score_1", "GB_Tree_7_0"."Score_2" AS "Score_2", "GB_Tree_7_0"."Score_3" AS "Score_3", "GB_Tree_7_0"."Score_4" AS "Score_4", "GB_Tree_7_0"."Score_5" AS "Score_5", "GB_Tree_7_0"."Score_6" AS "Score_6", "GB_Tree_7_0"."Score_7" AS "Score_7", "GB_Tree_7_0"."Score_8" AS "Score_8", "GB_Tree_7_0"."Score_9" AS "Score_9" 
FROM "GB_Tree_7_0" UNION ALL SELECT "GB_Tree_7_1"."KEY" AS "KEY", "GB_Tree_7_1"."Score_0" AS "Score_0", "GB_Tree_7_1"."Score_1" AS "Score_1", "GB_Tree_7_1"."Score_2" AS "Score_2", "GB_Tree_7_1"."Score_3" AS "Score_3", "GB_Tree_7_1"."Score_4" AS "Score_4", "GB_Tree_7_1"."Score_5" AS "Score_5", "GB_Tree_7_1"."Score_6" AS "Score_6", "GB_Tree_7_1"."Score_7" AS "Score_7", "GB_Tree_7_1"."Score_8" AS "Score_8", "GB_Tree_7_1"."Score_9" AS "Score_9" 
FROM "GB_Tree_7_1") AS "Score_Union_CTE_esu_8"), 
"Score_Union_CTE_9" AS 
(WITH "DT_node_lookup_72" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_62" <= 2.5) THEN CASE WHEN ("ADS"."Feature_26" <= 0.5) THEN CASE WHEN ("ADS"."Feature_37" <= 1.5) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_56" <= 0.5) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_46" <= 1.5) THEN CASE WHEN ("ADS"."Feature_45" <= 7.5) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_2" <= 14.5) THEN 13 ELSE 14 END END END AS node_id_2 
FROM digits AS "ADS"), 
"DT_node_data_72" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 30 AS count, 3 AS depth, 2 AS parent_id, 1.2056443939908799 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 138 AS count, 3 AS depth, 2 AS parent_id, -0.3935394130590434 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 940 AS count, 3 AS depth, 5 AS parent_id, -0.800321990361581 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 5 AS parent_id, 1.7522342961315445 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 117 AS count, 3 AS depth, 9 AS parent_id, 1.4395702876045535 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 37 AS count, 3 AS depth, 9 AS parent_id, -0.12582109437445246 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 170 AS count, 3 AS depth, 12 AS parent_id, -0.5848671561774792 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS count, 3 AS depth, 12 AS parent_id, 2.3417064693052416 AS "Estimator") AS "Values"), 
"DT_Output_72" AS 
(SELECT "DT_node_lookup_72"."KEY" AS "KEY", "DT_node_lookup_72".node_id_2 AS node_id_2, "DT_node_data_72".node_id AS node_id, "DT_node_data_72".feature AS feature, "DT_node_data_72".threshold AS threshold, "DT_node_data_72".count AS count, "DT_node_data_72".depth AS depth, "DT_node_data_72".parent_id AS parent_id, "DT_node_data_72"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_72" LEFT OUTER JOIN "DT_node_data_72" ON "DT_node_lookup_72".node_id_2 = "DT_node_data_72".node_id), 
"GB_Tree_7_2" AS 
(SELECT "DT_Output_72"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", "DT_Output_72"."Estimator" AS "Score_2", 0.0 AS "Score_3", 0.0 AS "Score_4", 0.0 AS "Score_5", 0.0 AS "Score_6", 0.0 AS "Score_7", 0.0 AS "Score_8", 0.0 AS "Score_9" 
FROM "DT_Output_72"), 
"DT_node_lookup_73" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_26" <= 5.5) THEN CASE WHEN ("ADS"."Feature_43" <= 2.5) THEN CASE WHEN ("ADS"."Feature_30" <= 1.5) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_51" <= 7.5) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_53" <= 15.5) THEN CASE WHEN ("ADS"."Feature_62" <= 8.5) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_1" <= 0.5) THEN 13 ELSE 14 END END END AS node_id_2 
FROM digits AS "ADS"), 
"DT_node_data_73" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 146 AS count, 3 AS depth, 2 AS parent_id, 1.438619929533747 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 34 AS count, 3 AS depth, 2 AS parent_id, -0.8421372368033825 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 52 AS count, 3 AS depth, 5 AS parent_id, 0.8472513890523792 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 253 AS count, 3 AS depth, 5 AS parent_id, -0.764131052995745 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 758 AS count, 3 AS depth, 9 AS parent_id, -0.9063492475289456 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 59 AS count, 3 AS depth, 9 AS parent_id, -0.011333757725258296 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 127 AS count, 3 AS depth, 12 AS parent_id, -0.48588438358687674 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 8 AS count, 3 AS depth, 12 AS parent_id, 2.814726338401188 AS "Estimator") AS "Values"), 
"DT_Output_73" AS 
(SELECT "DT_node_lookup_73"."KEY" AS "KEY", "DT_node_lookup_73".node_id_2 AS node_id_2, "DT_node_data_73".node_id AS node_id, "DT_node_data_73".feature AS feature, "DT_node_data_73".threshold AS threshold, "DT_node_data_73".count AS count, "DT_node_data_73".depth AS depth, "DT_node_data_73".parent_id AS parent_id, "DT_node_data_73"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_73" LEFT OUTER JOIN "DT_node_data_73" ON "DT_node_lookup_73".node_id_2 = "DT_node_data_73".node_id), 
"GB_Tree_7_3" AS 
(SELECT "DT_Output_73"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", "DT_Output_73"."Estimator" AS "Score_3", 0.0 AS "Score_4", 0.0 AS "Score_5", 0.0 AS "Score_6", 0.0 AS "Score_7", 0.0 AS "Score_8", 0.0 AS "Score_9" 
FROM "DT_Output_73"), 
"DT_node_lookup_74" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_33" <= 8.5) THEN CASE WHEN ("ADS"."Feature_34" <= 13.5) THEN CASE WHEN ("ADS"."Feature_41" <= 9.5) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_50" <= 0.5) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_2" <= 3.5) THEN CASE WHEN ("ADS"."Feature_5" <= 15.5) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_12" <= 1.5) THEN 13 ELSE 14 END END END AS node_id_2 
FROM digits AS "ADS"), 
"DT_node_data_74" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 999 AS count, 3 AS depth, 2 AS parent_id, -0.8441412073335544 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS count, 3 AS depth, 2 AS parent_id, 1.2393772339825027 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 74 AS count, 3 AS depth, 5 AS parent_id, 1.959173035387404 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 249 AS count, 3 AS depth, 5 AS parent_id, -0.36149960075635 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 90 AS count, 3 AS depth, 9 AS parent_id, 1.3726793594621471 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 3 AS depth, 9 AS parent_id, -1.0974295476184708 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 3 AS depth, 12 AS parent_id, 1.6175460988574981 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 16 AS count, 3 AS depth, 12 AS parent_id, -0.9724540993904578 AS "Estimator") AS "Values"), 
"DT_Output_74" AS 
(SELECT "DT_node_lookup_74"."KEY" AS "KEY", "DT_node_lookup_74".node_id_2 AS node_id_2, "DT_node_data_74".node_id AS node_id, "DT_node_data_74".feature AS feature, "DT_node_data_74".threshold AS threshold, "DT_node_data_74".count AS count, "DT_node_data_74".depth AS depth, "DT_node_data_74".parent_id AS parent_id, "DT_node_data_74"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_74" LEFT OUTER JOIN "DT_node_data_74" ON "DT_node_lookup_74".node_id_2 = "DT_node_data_74".node_id), 
"GB_Tree_7_4" AS 
(SELECT "DT_Output_74"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3", "DT_Output_74"."Estimator" AS "Score_4", 0.0 AS "Score_5", 0.0 AS "Score_6", 0.0 AS "Score_7", 0.0 AS "Score_8", 0.0 AS "Score_9" 
FROM "DT_Output_74"), 
"DT_node_lookup_75" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_21" <= 0.5) THEN CASE WHEN ("ADS"."Feature_5" <= 3.5) THEN CASE WHEN ("ADS"."Feature_29" <= 11.5) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_2" <= 1.5) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_43" <= 0.5) THEN CASE WHEN ("ADS"."Feature_21" <= 3.5) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_1" <= 5.0) THEN 13 ELSE 14 END END END AS node_id_2 
FROM digits AS "ADS"), 
"DT_node_data_75" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 224 AS count, 3 AS depth, 2 AS parent_id, -0.7471170957912657 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 9 AS count, 3 AS depth, 2 AS parent_id, 1.8285510194196606 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 31 AS count, 3 AS depth, 5 AS parent_id, -0.5033997132733591 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 129 AS count, 3 AS depth, 5 AS parent_id, 1.4731558938222544 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 25 AS count, 3 AS depth, 9 AS parent_id, 1.3551663473940594 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 337 AS count, 3 AS depth, 9 AS parent_id, -0.6883128027160775 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 680 AS count, 3 AS depth, 12 AS parent_id, -0.9544685096294496 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 3 AS depth, 12 AS parent_id, 1.2310076142032156 AS "Estimator") AS "Values"), 
"DT_Output_75" AS 
(SELECT "DT_node_lookup_75"."KEY" AS "KEY", "DT_node_lookup_75".node_id_2 AS node_id_2, "DT_node_data_75".node_id AS node_id, "DT_node_data_75".feature AS feature, "DT_node_data_75".threshold AS threshold, "DT_node_data_75".count AS count, "DT_node_data_75".depth AS depth, "DT_node_data_75".parent_id AS parent_id, "DT_node_data_75"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_75" LEFT OUTER JOIN "DT_node_data_75" ON "DT_node_lookup_75".node_id_2 = "DT_node_data_75".node_id), 
"GB_Tree_7_5" AS 
(SELECT "DT_Output_75"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3", 0.0 AS "Score_4", "DT_Output_75"."Estimator" AS "Score_5", 0.0 AS "Score_6", 0.0 AS "Score_7", 0.0 AS "Score_8", 0.0 AS "Score_9" 
FROM "DT_Output_75"), 
"DT_node_lookup_76" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_21" <= 0.5) THEN CASE WHEN ("ADS"."Feature_42" <= 9.5) THEN CASE WHEN ("ADS"."Feature_46" <= 14.5) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_1" <= 0.5) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_33" <= 6.5) THEN CASE WHEN ("ADS"."Feature_46" <= 14.5) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_4" <= 0.5) THEN 13 ELSE 14 END END END AS node_id_2 
FROM digits AS "ADS"), 
"DT_node_data_76" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 212 AS count, 3 AS depth, 2 AS parent_id, -0.7481402624721709 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 3 AS depth, 2 AS parent_id, 1.5159628550690267 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 167 AS count, 3 AS depth, 5 AS parent_id, 1.3326767374124533 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 12 AS count, 3 AS depth, 5 AS parent_id, -1.408279129843665 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 869 AS count, 3 AS depth, 9 AS parent_id, -0.9474642290656676 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 9 AS count, 3 AS depth, 9 AS parent_id, 0.23234345469770817 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 3 AS depth, 12 AS parent_id, 1.2498622220497133 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 164 AS count, 3 AS depth, 12 AS parent_id, -0.6577269169680999 AS "Estimator") AS "Values"), 
"DT_Output_76" AS 
(SELECT "DT_node_lookup_76"."KEY" AS "KEY", "DT_node_lookup_76".node_id_2 AS node_id_2, "DT_node_data_76".node_id AS node_id, "DT_node_data_76".feature AS feature, "DT_node_data_76".threshold AS threshold, "DT_node_data_76".count AS count, "DT_node_data_76".depth AS depth, "DT_node_data_76".parent_id AS parent_id, "DT_node_data_76"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_76" LEFT OUTER JOIN "DT_node_data_76" ON "DT_node_lookup_76".node_id_2 = "DT_node_data_76".node_id), 
"GB_Tree_7_6" AS 
(SELECT "DT_Output_76"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3", 0.0 AS "Score_4", 0.0 AS "Score_5", "DT_Output_76"."Estimator" AS "Score_6", 0.0 AS "Score_7", 0.0 AS "Score_8", 0.0 AS "Score_9" 
FROM "DT_Output_76"), 
"DT_node_lookup_77" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_60" <= 7.5) THEN CASE WHEN ("ADS"."Feature_18" <= 8.5) THEN CASE WHEN ("ADS"."Feature_53" <= 5.0) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_25" <= 1.5) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_7" <= 8.5) THEN CASE WHEN ("ADS"."Feature_6" <= 11.5) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_3" <= 5.0) THEN 13 ELSE 14 END END END AS node_id_2 
FROM digits AS "ADS"), 
"DT_node_data_77" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 99 AS count, 3 AS depth, 2 AS parent_id, 1.5063794403389494 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 9 AS count, 3 AS depth, 2 AS parent_id, -1.0173854045473936 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 55 AS count, 3 AS depth, 5 AS parent_id, 1.1454873913825077 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 97 AS count, 3 AS depth, 5 AS parent_id, -0.4275992306373943 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1162 AS count, 3 AS depth, 9 AS parent_id, -0.8399797352703307 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 13 AS count, 3 AS depth, 9 AS parent_id, 0.8800228063901034 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 12 AS parent_id, 2.4939629107204366 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 12 AS parent_id, 1.8930547943441314 AS "Estimator") AS "Values"), 
"DT_Output_77" AS 
(SELECT "DT_node_lookup_77"."KEY" AS "KEY", "DT_node_lookup_77".node_id_2 AS node_id_2, "DT_node_data_77".node_id AS node_id, "DT_node_data_77".feature AS feature, "DT_node_data_77".threshold AS threshold, "DT_node_data_77".count AS count, "DT_node_data_77".depth AS depth, "DT_node_data_77".parent_id AS parent_id, "DT_node_data_77"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_77" LEFT OUTER JOIN "DT_node_data_77" ON "DT_node_lookup_77".node_id_2 = "DT_node_data_77".node_id), 
"GB_Tree_7_7" AS 
(SELECT "DT_Output_77"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3", 0.0 AS "Score_4", 0.0 AS "Score_5", 0.0 AS "Score_6", "DT_Output_77"."Estimator" AS "Score_7", 0.0 AS "Score_8", 0.0 AS "Score_9" 
FROM "DT_Output_77"), 
"DT_node_lookup_78" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_35" <= 11.5) THEN CASE WHEN ("ADS"."Feature_20" <= 3.5) THEN CASE WHEN ("ADS"."Feature_36" <= 15.5) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_21" <= 7.5) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_21" <= 8.5) THEN CASE WHEN ("ADS"."Feature_8" <= 0.5) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_50" <= 9.5) THEN 13 ELSE 14 END END END AS node_id_2 
FROM digits AS "ADS"), 
"DT_node_data_78" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 273 AS count, 3 AS depth, 2 AS parent_id, -0.6263565983062682 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 41 AS count, 3 AS depth, 2 AS parent_id, 1.2517493329102216 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 158 AS count, 3 AS depth, 5 AS parent_id, -0.525340890932305 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 314 AS count, 3 AS depth, 5 AS parent_id, -0.9743644896965099 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 377 AS count, 3 AS depth, 9 AS parent_id, -0.4549055239464525 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 3 AS depth, 9 AS parent_id, 3.0304022531442287 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 162 AS count, 3 AS depth, 12 AS parent_id, 0.07699559151672548 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 110 AS count, 3 AS depth, 12 AS parent_id, 1.3877267349199771 AS "Estimator") AS "Values"), 
"DT_Output_78" AS 
(SELECT "DT_node_lookup_78"."KEY" AS "KEY", "DT_node_lookup_78".node_id_2 AS node_id_2, "DT_node_data_78".node_id AS node_id, "DT_node_data_78".feature AS feature, "DT_node_data_78".threshold AS threshold, "DT_node_data_78".count AS count, "DT_node_data_78".depth AS depth, "DT_node_data_78".parent_id AS parent_id, "DT_node_data_78"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_78" LEFT OUTER JOIN "DT_node_data_78" ON "DT_node_lookup_78".node_id_2 = "DT_node_data_78".node_id), 
"GB_Tree_7_8" AS 
(SELECT "DT_Output_78"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3", 0.0 AS "Score_4", 0.0 AS "Score_5", 0.0 AS "Score_6", 0.0 AS "Score_7", "DT_Output_78"."Estimator" AS "Score_8", 0.0 AS "Score_9" 
FROM "DT_Output_78"), 
"DT_node_lookup_79" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_43" <= 0.5) THEN CASE WHEN ("ADS"."Feature_21" <= 10.5) THEN CASE WHEN ("ADS"."Feature_54" <= 15.0) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_27" <= 7.5) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_43" <= 3.5) THEN CASE WHEN ("ADS"."Feature_29" <= 14.5) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_60" <= 1.5) THEN 13 ELSE 14 END END END AS node_id_2 
FROM digits AS "ADS"), 
"DT_node_data_79" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 196 AS count, 3 AS depth, 2 AS parent_id, -0.7148700293522348 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS count, 3 AS depth, 2 AS parent_id, 3.6172022027153665 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 101 AS count, 3 AS depth, 5 AS parent_id, -0.3605360480276579 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 148 AS count, 3 AS depth, 5 AS parent_id, 1.5270040735551367 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 116 AS count, 3 AS depth, 9 AS parent_id, -0.42366038166864134 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 30 AS count, 3 AS depth, 9 AS parent_id, 1.1154917486004068 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 101 AS count, 3 AS depth, 12 AS parent_id, -0.05528616059463621 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 740 AS count, 3 AS depth, 12 AS parent_id, -0.9037600782691853 AS "Estimator") AS "Values"), 
"DT_Output_79" AS 
(SELECT "DT_node_lookup_79"."KEY" AS "KEY", "DT_node_lookup_79".node_id_2 AS node_id_2, "DT_node_data_79".node_id AS node_id, "DT_node_data_79".feature AS feature, "DT_node_data_79".threshold AS threshold, "DT_node_data_79".count AS count, "DT_node_data_79".depth AS depth, "DT_node_data_79".parent_id AS parent_id, "DT_node_data_79"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_79" LEFT OUTER JOIN "DT_node_data_79" ON "DT_node_lookup_79".node_id_2 = "DT_node_data_79".node_id), 
"GB_Tree_7_9" AS 
(SELECT "DT_Output_79"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3", 0.0 AS "Score_4", 0.0 AS "Score_5", 0.0 AS "Score_6", 0.0 AS "Score_7", 0.0 AS "Score_8", "DT_Output_79"."Estimator" AS "Score_9" 
FROM "DT_Output_79")
 SELECT "Score_Union_CTE_esu_9"."KEY", "Score_Union_CTE_esu_9"."Score_0", "Score_Union_CTE_esu_9"."Score_1", "Score_Union_CTE_esu_9"."Score_2", "Score_Union_CTE_esu_9"."Score_3", "Score_Union_CTE_esu_9"."Score_4", "Score_Union_CTE_esu_9"."Score_5", "Score_Union_CTE_esu_9"."Score_6", "Score_Union_CTE_esu_9"."Score_7", "Score_Union_CTE_esu_9"."Score_8", "Score_Union_CTE_esu_9"."Score_9" 
FROM (SELECT "GB_Tree_7_2"."KEY" AS "KEY", "GB_Tree_7_2"."Score_0" AS "Score_0", "GB_Tree_7_2"."Score_1" AS "Score_1", "GB_Tree_7_2"."Score_2" AS "Score_2", "GB_Tree_7_2"."Score_3" AS "Score_3", "GB_Tree_7_2"."Score_4" AS "Score_4", "GB_Tree_7_2"."Score_5" AS "Score_5", "GB_Tree_7_2"."Score_6" AS "Score_6", "GB_Tree_7_2"."Score_7" AS "Score_7", "GB_Tree_7_2"."Score_8" AS "Score_8", "GB_Tree_7_2"."Score_9" AS "Score_9" 
FROM "GB_Tree_7_2" UNION ALL SELECT "GB_Tree_7_3"."KEY" AS "KEY", "GB_Tree_7_3"."Score_0" AS "Score_0", "GB_Tree_7_3"."Score_1" AS "Score_1", "GB_Tree_7_3"."Score_2" AS "Score_2", "GB_Tree_7_3"."Score_3" AS "Score_3", "GB_Tree_7_3"."Score_4" AS "Score_4", "GB_Tree_7_3"."Score_5" AS "Score_5", "GB_Tree_7_3"."Score_6" AS "Score_6", "GB_Tree_7_3"."Score_7" AS "Score_7", "GB_Tree_7_3"."Score_8" AS "Score_8", "GB_Tree_7_3"."Score_9" AS "Score_9" 
FROM "GB_Tree_7_3" UNION ALL SELECT "GB_Tree_7_4"."KEY" AS "KEY", "GB_Tree_7_4"."Score_0" AS "Score_0", "GB_Tree_7_4"."Score_1" AS "Score_1", "GB_Tree_7_4"."Score_2" AS "Score_2", "GB_Tree_7_4"."Score_3" AS "Score_3", "GB_Tree_7_4"."Score_4" AS "Score_4", "GB_Tree_7_4"."Score_5" AS "Score_5", "GB_Tree_7_4"."Score_6" AS "Score_6", "GB_Tree_7_4"."Score_7" AS "Score_7", "GB_Tree_7_4"."Score_8" AS "Score_8", "GB_Tree_7_4"."Score_9" AS "Score_9" 
FROM "GB_Tree_7_4" UNION ALL SELECT "GB_Tree_7_5"."KEY" AS "KEY", "GB_Tree_7_5"."Score_0" AS "Score_0", "GB_Tree_7_5"."Score_1" AS "Score_1", "GB_Tree_7_5"."Score_2" AS "Score_2", "GB_Tree_7_5"."Score_3" AS "Score_3", "GB_Tree_7_5"."Score_4" AS "Score_4", "GB_Tree_7_5"."Score_5" AS "Score_5", "GB_Tree_7_5"."Score_6" AS "Score_6", "GB_Tree_7_5"."Score_7" AS "Score_7", "GB_Tree_7_5"."Score_8" AS "Score_8", "GB_Tree_7_5"."Score_9" AS "Score_9" 
FROM "GB_Tree_7_5" UNION ALL SELECT "GB_Tree_7_6"."KEY" AS "KEY", "GB_Tree_7_6"."Score_0" AS "Score_0", "GB_Tree_7_6"."Score_1" AS "Score_1", "GB_Tree_7_6"."Score_2" AS "Score_2", "GB_Tree_7_6"."Score_3" AS "Score_3", "GB_Tree_7_6"."Score_4" AS "Score_4", "GB_Tree_7_6"."Score_5" AS "Score_5", "GB_Tree_7_6"."Score_6" AS "Score_6", "GB_Tree_7_6"."Score_7" AS "Score_7", "GB_Tree_7_6"."Score_8" AS "Score_8", "GB_Tree_7_6"."Score_9" AS "Score_9" 
FROM "GB_Tree_7_6" UNION ALL SELECT "GB_Tree_7_7"."KEY" AS "KEY", "GB_Tree_7_7"."Score_0" AS "Score_0", "GB_Tree_7_7"."Score_1" AS "Score_1", "GB_Tree_7_7"."Score_2" AS "Score_2", "GB_Tree_7_7"."Score_3" AS "Score_3", "GB_Tree_7_7"."Score_4" AS "Score_4", "GB_Tree_7_7"."Score_5" AS "Score_5", "GB_Tree_7_7"."Score_6" AS "Score_6", "GB_Tree_7_7"."Score_7" AS "Score_7", "GB_Tree_7_7"."Score_8" AS "Score_8", "GB_Tree_7_7"."Score_9" AS "Score_9" 
FROM "GB_Tree_7_7" UNION ALL SELECT "GB_Tree_7_8"."KEY" AS "KEY", "GB_Tree_7_8"."Score_0" AS "Score_0", "GB_Tree_7_8"."Score_1" AS "Score_1", "GB_Tree_7_8"."Score_2" AS "Score_2", "GB_Tree_7_8"."Score_3" AS "Score_3", "GB_Tree_7_8"."Score_4" AS "Score_4", "GB_Tree_7_8"."Score_5" AS "Score_5", "GB_Tree_7_8"."Score_6" AS "Score_6", "GB_Tree_7_8"."Score_7" AS "Score_7", "GB_Tree_7_8"."Score_8" AS "Score_8", "GB_Tree_7_8"."Score_9" AS "Score_9" 
FROM "GB_Tree_7_8" UNION ALL SELECT "GB_Tree_7_9"."KEY" AS "KEY", "GB_Tree_7_9"."Score_0" AS "Score_0", "GB_Tree_7_9"."Score_1" AS "Score_1", "GB_Tree_7_9"."Score_2" AS "Score_2", "GB_Tree_7_9"."Score_3" AS "Score_3", "GB_Tree_7_9"."Score_4" AS "Score_4", "GB_Tree_7_9"."Score_5" AS "Score_5", "GB_Tree_7_9"."Score_6" AS "Score_6", "GB_Tree_7_9"."Score_7" AS "Score_7", "GB_Tree_7_9"."Score_8" AS "Score_8", "GB_Tree_7_9"."Score_9" AS "Score_9" 
FROM "GB_Tree_7_9") AS "Score_Union_CTE_esu_9"), 
"Score_Union_CTE_10" AS 
(WITH "DT_node_lookup_80" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_36" <= 0.5) THEN CASE WHEN ("ADS"."Feature_28" <= 2.5) THEN CASE WHEN ("ADS"."Feature_43" <= 9.5) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_27" <= 2.0) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_28" <= 0.5) THEN CASE WHEN ("ADS"."Feature_21" <= 15.5) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_18" <= 6.5) THEN 13 ELSE 14 END END END AS node_id_2 
FROM digits AS "ADS"), 
"DT_node_data_80" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 134 AS count, 3 AS depth, 2 AS parent_id, 1.3121051901293772 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 12 AS count, 3 AS depth, 2 AS parent_id, -0.4300919377784253 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 3 AS depth, 5 AS parent_id, 1.7041250864563098 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 71 AS count, 3 AS depth, 5 AS parent_id, -0.8333767390807513 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 107 AS count, 3 AS depth, 9 AS parent_id, -0.7443569353645992 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS count, 3 AS depth, 9 AS parent_id, 1.342226552912462 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 384 AS count, 3 AS depth, 12 AS parent_id, -0.9363794352433987 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 723 AS count, 3 AS depth, 12 AS parent_id, -0.9435331860415288 AS "Estimator") AS "Values"), 
"DT_Output_80" AS 
(SELECT "DT_node_lookup_80"."KEY" AS "KEY", "DT_node_lookup_80".node_id_2 AS node_id_2, "DT_node_data_80".node_id AS node_id, "DT_node_data_80".feature AS feature, "DT_node_data_80".threshold AS threshold, "DT_node_data_80".count AS count, "DT_node_data_80".depth AS depth, "DT_node_data_80".parent_id AS parent_id, "DT_node_data_80"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_80" LEFT OUTER JOIN "DT_node_data_80" ON "DT_node_lookup_80".node_id_2 = "DT_node_data_80".node_id), 
"GB_Tree_8_0" AS 
(SELECT "DT_Output_80"."KEY" AS "KEY", "DT_Output_80"."Estimator" AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3", 0.0 AS "Score_4", 0.0 AS "Score_5", 0.0 AS "Score_6", 0.0 AS "Score_7", 0.0 AS "Score_8", 0.0 AS "Score_9" 
FROM "DT_Output_80"), 
"DT_node_lookup_81" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_20" <= 15.5) THEN CASE WHEN ("ADS"."Feature_63" <= 7.5) THEN CASE WHEN ("ADS"."Feature_19" <= 15.5) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_19" <= 13.0) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_10" <= 8.5) THEN CASE WHEN ("ADS"."Feature_41" <= 3.0) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_26" <= 10.5) THEN 13 ELSE 14 END END END AS node_id_2 
FROM digits AS "ADS"), 
"DT_node_data_81" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1068 AS count, 3 AS depth, 2 AS parent_id, -0.847360368976957 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 99 AS count, 3 AS depth, 2 AS parent_id, 0.1804674323744084 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 13 AS count, 3 AS depth, 5 AS parent_id, -0.9489235520343645 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 17 AS count, 3 AS depth, 5 AS parent_id, 1.8065586119375767 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 95 AS count, 3 AS depth, 9 AS parent_id, 1.4894300126681075 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 18 AS count, 3 AS depth, 9 AS parent_id, -0.2409585711824219 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 106 AS count, 3 AS depth, 12 AS parent_id, -0.7215089289368876 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 21 AS count, 3 AS depth, 12 AS parent_id, 1.0079276246642013 AS "Estimator") AS "Values"), 
"DT_Output_81" AS 
(SELECT "DT_node_lookup_81"."KEY" AS "KEY", "DT_node_lookup_81".node_id_2 AS node_id_2, "DT_node_data_81".node_id AS node_id, "DT_node_data_81".feature AS feature, "DT_node_data_81".threshold AS threshold, "DT_node_data_81".count AS count, "DT_node_data_81".depth AS depth, "DT_node_data_81".parent_id AS parent_id, "DT_node_data_81"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_81" LEFT OUTER JOIN "DT_node_data_81" ON "DT_node_lookup_81".node_id_2 = "DT_node_data_81".node_id), 
"GB_Tree_8_1" AS 
(SELECT "DT_Output_81"."KEY" AS "KEY", 0.0 AS "Score_0", "DT_Output_81"."Estimator" AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3", 0.0 AS "Score_4", 0.0 AS "Score_5", 0.0 AS "Score_6", 0.0 AS "Score_7", 0.0 AS "Score_8", 0.0 AS "Score_9" 
FROM "DT_Output_81"), 
"DT_node_lookup_82" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_26" <= 3.5) THEN CASE WHEN ("ADS"."Feature_37" <= 1.5) THEN CASE WHEN ("ADS"."Feature_44" <= 8.5) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_27" <= 0.5) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_45" <= 4.5) THEN CASE WHEN ("ADS"."Feature_53" <= 13.5) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_37" <= 1.5) THEN 13 ELSE 14 END END END AS node_id_2 
FROM digits AS "ADS"), 
"DT_node_data_82" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 66 AS count, 3 AS depth, 2 AS parent_id, 1.7057193943032023 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 40 AS count, 3 AS depth, 2 AS parent_id, 0.21636781748015477 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 58 AS count, 3 AS depth, 5 AS parent_id, 1.5076901440736186 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 241 AS count, 3 AS depth, 5 AS parent_id, -0.5675562879119367 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 258 AS count, 3 AS depth, 9 AS parent_id, -0.2958859690794783 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 16 AS count, 3 AS depth, 9 AS parent_id, 2.013796357367518 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 37 AS count, 3 AS depth, 12 AS parent_id, -1.0746888626921007 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 721 AS count, 3 AS depth, 12 AS parent_id, -0.9243084311258066 AS "Estimator") AS "Values"), 
"DT_Output_82" AS 
(SELECT "DT_node_lookup_82"."KEY" AS "KEY", "DT_node_lookup_82".node_id_2 AS node_id_2, "DT_node_data_82".node_id AS node_id, "DT_node_data_82".feature AS feature, "DT_node_data_82".threshold AS threshold, "DT_node_data_82".count AS count, "DT_node_data_82".depth AS depth, "DT_node_data_82".parent_id AS parent_id, "DT_node_data_82"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_82" LEFT OUTER JOIN "DT_node_data_82" ON "DT_node_lookup_82".node_id_2 = "DT_node_data_82".node_id), 
"GB_Tree_8_2" AS 
(SELECT "DT_Output_82"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", "DT_Output_82"."Estimator" AS "Score_2", 0.0 AS "Score_3", 0.0 AS "Score_4", 0.0 AS "Score_5", 0.0 AS "Score_6", 0.0 AS "Score_7", 0.0 AS "Score_8", 0.0 AS "Score_9" 
FROM "DT_Output_82"), 
"DT_node_lookup_83" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_34" <= 0.5) THEN CASE WHEN ("ADS"."Feature_18" <= 4.5) THEN CASE WHEN ("ADS"."Feature_43" <= 9.5) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_43" <= 3.5) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_9" <= 6.5) THEN CASE WHEN ("ADS"."Feature_18" <= 0.5) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_17" <= 1.5) THEN 13 ELSE 14 END END END AS node_id_2 
FROM digits AS "ADS"), 
"DT_node_data_83" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 84 AS count, 3 AS depth, 2 AS parent_id, 1.443810991223487 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 24 AS count, 3 AS depth, 2 AS parent_id, -0.9540917190765318 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 141 AS count, 3 AS depth, 5 AS parent_id, 0.7256773395386824 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 122 AS count, 3 AS depth, 5 AS parent_id, -0.9608915113433588 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 95 AS count, 3 AS depth, 9 AS parent_id, 0.3111029969506942 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 878 AS count, 3 AS depth, 9 AS parent_id, -0.8267566786710698 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 16 AS count, 3 AS depth, 12 AS parent_id, 2.5195608281647144 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 77 AS count, 3 AS depth, 12 AS parent_id, -0.2767342093674293 AS "Estimator") AS "Values"), 
"DT_Output_83" AS 
(SELECT "DT_node_lookup_83"."KEY" AS "KEY", "DT_node_lookup_83".node_id_2 AS node_id_2, "DT_node_data_83".node_id AS node_id, "DT_node_data_83".feature AS feature, "DT_node_data_83".threshold AS threshold, "DT_node_data_83".count AS count, "DT_node_data_83".depth AS depth, "DT_node_data_83".parent_id AS parent_id, "DT_node_data_83"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_83" LEFT OUTER JOIN "DT_node_data_83" ON "DT_node_lookup_83".node_id_2 = "DT_node_data_83".node_id), 
"GB_Tree_8_3" AS 
(SELECT "DT_Output_83"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", "DT_Output_83"."Estimator" AS "Score_3", 0.0 AS "Score_4", 0.0 AS "Score_5", 0.0 AS "Score_6", 0.0 AS "Score_7", 0.0 AS "Score_8", 0.0 AS "Score_9" 
FROM "DT_Output_83"), 
"DT_node_lookup_84" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_33" <= 8.5) THEN CASE WHEN ("ADS"."Feature_34" <= 13.5) THEN CASE WHEN ("ADS"."Feature_22" <= 14.5) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_50" <= 0.5) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_58" <= 0.5) THEN CASE WHEN ("ADS"."Feature_21" <= 0.5) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_5" <= 0.5) THEN 13 ELSE 14 END END END AS node_id_2 
FROM digits AS "ADS"), 
"DT_node_data_84" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 998 AS count, 3 AS depth, 2 AS parent_id, -0.8354299249799595 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 6 AS count, 3 AS depth, 2 AS parent_id, 0.8543999025332428 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 74 AS count, 3 AS depth, 5 AS parent_id, 1.6168951970847372 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 249 AS count, 3 AS depth, 5 AS parent_id, -0.3245391584911793 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 17 AS count, 3 AS depth, 9 AS parent_id, 1.3700879136735595 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 58 AS count, 3 AS depth, 9 AS parent_id, 1.2929976663231577 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 15 AS count, 3 AS depth, 12 AS parent_id, 1.222762978316748 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 20 AS count, 3 AS depth, 12 AS parent_id, -1.0020310551735025 AS "Estimator") AS "Values"), 
"DT_Output_84" AS 
(SELECT "DT_node_lookup_84"."KEY" AS "KEY", "DT_node_lookup_84".node_id_2 AS node_id_2, "DT_node_data_84".node_id AS node_id, "DT_node_data_84".feature AS feature, "DT_node_data_84".threshold AS threshold, "DT_node_data_84".count AS count, "DT_node_data_84".depth AS depth, "DT_node_data_84".parent_id AS parent_id, "DT_node_data_84"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_84" LEFT OUTER JOIN "DT_node_data_84" ON "DT_node_lookup_84".node_id_2 = "DT_node_data_84".node_id), 
"GB_Tree_8_4" AS 
(SELECT "DT_Output_84"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3", "DT_Output_84"."Estimator" AS "Score_4", 0.0 AS "Score_5", 0.0 AS "Score_6", 0.0 AS "Score_7", 0.0 AS "Score_8", 0.0 AS "Score_9" 
FROM "DT_Output_84"), 
"DT_node_lookup_85" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_21" <= 0.5) THEN CASE WHEN ("ADS"."Feature_5" <= 3.5) THEN CASE WHEN ("ADS"."Feature_13" <= 9.0) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_42" <= 10.5) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_36" <= 1.5) THEN CASE WHEN ("ADS"."Feature_21" <= 6.5) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_1" <= 5.0) THEN 13 ELSE 14 END END END AS node_id_2 
FROM digits AS "ADS"), 
"DT_node_data_85" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 232 AS count, 3 AS depth, 2 AS parent_id, -0.6365258135258511 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 2 AS parent_id, 1.8359615390722246 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 122 AS count, 3 AS depth, 5 AS parent_id, 1.373866200128208 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 38 AS count, 3 AS depth, 5 AS parent_id, -0.04564756924039798 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 21 AS count, 3 AS depth, 9 AS parent_id, 1.7324124788317297 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 202 AS count, 3 AS depth, 9 AS parent_id, -0.6942361690774925 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 818 AS count, 3 AS depth, 12 AS parent_id, -0.8701827855968699 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 3 AS depth, 12 AS parent_id, 0.8580839470419627 AS "Estimator") AS "Values"), 
"DT_Output_85" AS 
(SELECT "DT_node_lookup_85"."KEY" AS "KEY", "DT_node_lookup_85".node_id_2 AS node_id_2, "DT_node_data_85".node_id AS node_id, "DT_node_data_85".feature AS feature, "DT_node_data_85".threshold AS threshold, "DT_node_data_85".count AS count, "DT_node_data_85".depth AS depth, "DT_node_data_85".parent_id AS parent_id, "DT_node_data_85"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_85" LEFT OUTER JOIN "DT_node_data_85" ON "DT_node_lookup_85".node_id_2 = "DT_node_data_85".node_id), 
"GB_Tree_8_5" AS 
(SELECT "DT_Output_85"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3", 0.0 AS "Score_4", "DT_Output_85"."Estimator" AS "Score_5", 0.0 AS "Score_6", 0.0 AS "Score_7", 0.0 AS "Score_8", 0.0 AS "Score_9" 
FROM "DT_Output_85"), 
"DT_node_lookup_86" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_21" <= 0.5) THEN CASE WHEN ("ADS"."Feature_42" <= 9.5) THEN CASE WHEN ("ADS"."Feature_2" <= 0.5) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_20" <= 3.5) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_33" <= 6.5) THEN CASE WHEN ("ADS"."Feature_46" <= 14.5) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_29" <= 0.5) THEN 13 ELSE 14 END END END AS node_id_2 
FROM digits AS "ADS"), 
"DT_node_data_86" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 15 AS count, 3 AS depth, 2 AS parent_id, 1.1869125746036715 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 199 AS count, 3 AS depth, 2 AS parent_id, -0.9426058222567949 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 152 AS count, 3 AS depth, 5 AS parent_id, 1.2647790654747288 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 27 AS count, 3 AS depth, 5 AS parent_id, -0.5420970108468766 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 869 AS count, 3 AS depth, 9 AS parent_id, -0.9434346426318965 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 9 AS count, 3 AS depth, 9 AS parent_id, 0.22990231735757155 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS count, 3 AS depth, 12 AS parent_id, 2.3313843708450714 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 161 AS count, 3 AS depth, 12 AS parent_id, -0.6547265786861552 AS "Estimator") AS "Values"), 
"DT_Output_86" AS 
(SELECT "DT_node_lookup_86"."KEY" AS "KEY", "DT_node_lookup_86".node_id_2 AS node_id_2, "DT_node_data_86".node_id AS node_id, "DT_node_data_86".feature AS feature, "DT_node_data_86".threshold AS threshold, "DT_node_data_86".count AS count, "DT_node_data_86".depth AS depth, "DT_node_data_86".parent_id AS parent_id, "DT_node_data_86"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_86" LEFT OUTER JOIN "DT_node_data_86" ON "DT_node_lookup_86".node_id_2 = "DT_node_data_86".node_id), 
"GB_Tree_8_6" AS 
(SELECT "DT_Output_86"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3", 0.0 AS "Score_4", 0.0 AS "Score_5", "DT_Output_86"."Estimator" AS "Score_6", 0.0 AS "Score_7", 0.0 AS "Score_8", 0.0 AS "Score_9" 
FROM "DT_Output_86"), 
"DT_node_lookup_87" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_53" <= 0.5) THEN CASE WHEN ("ADS"."Feature_19" <= 3.5) THEN CASE WHEN ("ADS"."Feature_26" <= 12.5) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_6" <= 5.5) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_7" <= 1.5) THEN CASE WHEN ("ADS"."Feature_30" <= 14.0) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_26" <= 3.0) THEN 13 ELSE 14 END END END AS node_id_2 
FROM digits AS "ADS"), 
"DT_node_data_87" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 94 AS count, 3 AS depth, 2 AS parent_id, 1.5893292764718268 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 27 AS count, 3 AS depth, 2 AS parent_id, -0.1740816083243906 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 140 AS count, 3 AS depth, 5 AS parent_id, -0.15593147400232932 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 30 AS count, 3 AS depth, 5 AS parent_id, 1.1420181357248573 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1127 AS count, 3 AS depth, 9 AS parent_id, -0.8540472191837771 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 11 AS count, 3 AS depth, 9 AS parent_id, 0.695451512311936 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS count, 3 AS depth, 12 AS parent_id, 2.0720830664690917 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS count, 3 AS depth, 12 AS parent_id, -1.0650963531818343 AS "Estimator") AS "Values"), 
"DT_Output_87" AS 
(SELECT "DT_node_lookup_87"."KEY" AS "KEY", "DT_node_lookup_87".node_id_2 AS node_id_2, "DT_node_data_87".node_id AS node_id, "DT_node_data_87".feature AS feature, "DT_node_data_87".threshold AS threshold, "DT_node_data_87".count AS count, "DT_node_data_87".depth AS depth, "DT_node_data_87".parent_id AS parent_id, "DT_node_data_87"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_87" LEFT OUTER JOIN "DT_node_data_87" ON "DT_node_lookup_87".node_id_2 = "DT_node_data_87".node_id), 
"GB_Tree_8_7" AS 
(SELECT "DT_Output_87"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3", 0.0 AS "Score_4", 0.0 AS "Score_5", 0.0 AS "Score_6", "DT_Output_87"."Estimator" AS "Score_7", 0.0 AS "Score_8", 0.0 AS "Score_9" 
FROM "DT_Output_87")
 SELECT "Score_Union_CTE_esu_10"."KEY", "Score_Union_CTE_esu_10"."Score_0", "Score_Union_CTE_esu_10"."Score_1", "Score_Union_CTE_esu_10"."Score_2", "Score_Union_CTE_esu_10"."Score_3", "Score_Union_CTE_esu_10"."Score_4", "Score_Union_CTE_esu_10"."Score_5", "Score_Union_CTE_esu_10"."Score_6", "Score_Union_CTE_esu_10"."Score_7", "Score_Union_CTE_esu_10"."Score_8", "Score_Union_CTE_esu_10"."Score_9" 
FROM (SELECT "GB_Tree_8_0"."KEY" AS "KEY", "GB_Tree_8_0"."Score_0" AS "Score_0", "GB_Tree_8_0"."Score_1" AS "Score_1", "GB_Tree_8_0"."Score_2" AS "Score_2", "GB_Tree_8_0"."Score_3" AS "Score_3", "GB_Tree_8_0"."Score_4" AS "Score_4", "GB_Tree_8_0"."Score_5" AS "Score_5", "GB_Tree_8_0"."Score_6" AS "Score_6", "GB_Tree_8_0"."Score_7" AS "Score_7", "GB_Tree_8_0"."Score_8" AS "Score_8", "GB_Tree_8_0"."Score_9" AS "Score_9" 
FROM "GB_Tree_8_0" UNION ALL SELECT "GB_Tree_8_1"."KEY" AS "KEY", "GB_Tree_8_1"."Score_0" AS "Score_0", "GB_Tree_8_1"."Score_1" AS "Score_1", "GB_Tree_8_1"."Score_2" AS "Score_2", "GB_Tree_8_1"."Score_3" AS "Score_3", "GB_Tree_8_1"."Score_4" AS "Score_4", "GB_Tree_8_1"."Score_5" AS "Score_5", "GB_Tree_8_1"."Score_6" AS "Score_6", "GB_Tree_8_1"."Score_7" AS "Score_7", "GB_Tree_8_1"."Score_8" AS "Score_8", "GB_Tree_8_1"."Score_9" AS "Score_9" 
FROM "GB_Tree_8_1" UNION ALL SELECT "GB_Tree_8_2"."KEY" AS "KEY", "GB_Tree_8_2"."Score_0" AS "Score_0", "GB_Tree_8_2"."Score_1" AS "Score_1", "GB_Tree_8_2"."Score_2" AS "Score_2", "GB_Tree_8_2"."Score_3" AS "Score_3", "GB_Tree_8_2"."Score_4" AS "Score_4", "GB_Tree_8_2"."Score_5" AS "Score_5", "GB_Tree_8_2"."Score_6" AS "Score_6", "GB_Tree_8_2"."Score_7" AS "Score_7", "GB_Tree_8_2"."Score_8" AS "Score_8", "GB_Tree_8_2"."Score_9" AS "Score_9" 
FROM "GB_Tree_8_2" UNION ALL SELECT "GB_Tree_8_3"."KEY" AS "KEY", "GB_Tree_8_3"."Score_0" AS "Score_0", "GB_Tree_8_3"."Score_1" AS "Score_1", "GB_Tree_8_3"."Score_2" AS "Score_2", "GB_Tree_8_3"."Score_3" AS "Score_3", "GB_Tree_8_3"."Score_4" AS "Score_4", "GB_Tree_8_3"."Score_5" AS "Score_5", "GB_Tree_8_3"."Score_6" AS "Score_6", "GB_Tree_8_3"."Score_7" AS "Score_7", "GB_Tree_8_3"."Score_8" AS "Score_8", "GB_Tree_8_3"."Score_9" AS "Score_9" 
FROM "GB_Tree_8_3" UNION ALL SELECT "GB_Tree_8_4"."KEY" AS "KEY", "GB_Tree_8_4"."Score_0" AS "Score_0", "GB_Tree_8_4"."Score_1" AS "Score_1", "GB_Tree_8_4"."Score_2" AS "Score_2", "GB_Tree_8_4"."Score_3" AS "Score_3", "GB_Tree_8_4"."Score_4" AS "Score_4", "GB_Tree_8_4"."Score_5" AS "Score_5", "GB_Tree_8_4"."Score_6" AS "Score_6", "GB_Tree_8_4"."Score_7" AS "Score_7", "GB_Tree_8_4"."Score_8" AS "Score_8", "GB_Tree_8_4"."Score_9" AS "Score_9" 
FROM "GB_Tree_8_4" UNION ALL SELECT "GB_Tree_8_5"."KEY" AS "KEY", "GB_Tree_8_5"."Score_0" AS "Score_0", "GB_Tree_8_5"."Score_1" AS "Score_1", "GB_Tree_8_5"."Score_2" AS "Score_2", "GB_Tree_8_5"."Score_3" AS "Score_3", "GB_Tree_8_5"."Score_4" AS "Score_4", "GB_Tree_8_5"."Score_5" AS "Score_5", "GB_Tree_8_5"."Score_6" AS "Score_6", "GB_Tree_8_5"."Score_7" AS "Score_7", "GB_Tree_8_5"."Score_8" AS "Score_8", "GB_Tree_8_5"."Score_9" AS "Score_9" 
FROM "GB_Tree_8_5" UNION ALL SELECT "GB_Tree_8_6"."KEY" AS "KEY", "GB_Tree_8_6"."Score_0" AS "Score_0", "GB_Tree_8_6"."Score_1" AS "Score_1", "GB_Tree_8_6"."Score_2" AS "Score_2", "GB_Tree_8_6"."Score_3" AS "Score_3", "GB_Tree_8_6"."Score_4" AS "Score_4", "GB_Tree_8_6"."Score_5" AS "Score_5", "GB_Tree_8_6"."Score_6" AS "Score_6", "GB_Tree_8_6"."Score_7" AS "Score_7", "GB_Tree_8_6"."Score_8" AS "Score_8", "GB_Tree_8_6"."Score_9" AS "Score_9" 
FROM "GB_Tree_8_6" UNION ALL SELECT "GB_Tree_8_7"."KEY" AS "KEY", "GB_Tree_8_7"."Score_0" AS "Score_0", "GB_Tree_8_7"."Score_1" AS "Score_1", "GB_Tree_8_7"."Score_2" AS "Score_2", "GB_Tree_8_7"."Score_3" AS "Score_3", "GB_Tree_8_7"."Score_4" AS "Score_4", "GB_Tree_8_7"."Score_5" AS "Score_5", "GB_Tree_8_7"."Score_6" AS "Score_6", "GB_Tree_8_7"."Score_7" AS "Score_7", "GB_Tree_8_7"."Score_8" AS "Score_8", "GB_Tree_8_7"."Score_9" AS "Score_9" 
FROM "GB_Tree_8_7") AS "Score_Union_CTE_esu_10"), 
"Score_Union_CTE_11" AS 
(WITH "DT_node_lookup_88" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_38" <= 0.5) THEN CASE WHEN ("ADS"."Feature_42" <= 3.5) THEN CASE WHEN ("ADS"."Feature_58" <= 1.5) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_51" <= 13.5) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_53" <= 10.5) THEN CASE WHEN ("ADS"."Feature_42" <= 11.5) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_43" <= 7.5) THEN 13 ELSE 14 END END END AS node_id_2 
FROM digits AS "ADS"), 
"DT_node_data_88" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 85 AS count, 3 AS depth, 2 AS parent_id, 0.4386077566832292 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 251 AS count, 3 AS depth, 2 AS parent_id, -0.8839456284724921 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 190 AS count, 3 AS depth, 5 AS parent_id, 1.1570049438982302 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 153 AS count, 3 AS depth, 5 AS parent_id, -0.4315091072553013 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 214 AS count, 3 AS depth, 9 AS parent_id, -0.9599679430203735 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 140 AS count, 3 AS depth, 9 AS parent_id, -0.9405416505209325 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 327 AS count, 3 AS depth, 12 AS parent_id, -0.8636028176400287 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 77 AS count, 3 AS depth, 12 AS parent_id, 0.643113294472791 AS "Estimator") AS "Values"), 
"DT_Output_88" AS 
(SELECT "DT_node_lookup_88"."KEY" AS "KEY", "DT_node_lookup_88".node_id_2 AS node_id_2, "DT_node_data_88".node_id AS node_id, "DT_node_data_88".feature AS feature, "DT_node_data_88".threshold AS threshold, "DT_node_data_88".count AS count, "DT_node_data_88".depth AS depth, "DT_node_data_88".parent_id AS parent_id, "DT_node_data_88"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_88" LEFT OUTER JOIN "DT_node_data_88" ON "DT_node_lookup_88".node_id_2 = "DT_node_data_88".node_id), 
"GB_Tree_8_8" AS 
(SELECT "DT_Output_88"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3", 0.0 AS "Score_4", 0.0 AS "Score_5", 0.0 AS "Score_6", 0.0 AS "Score_7", "DT_Output_88"."Estimator" AS "Score_8", 0.0 AS "Score_9" 
FROM "DT_Output_88"), 
"DT_node_lookup_89" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_43" <= 0.5) THEN CASE WHEN ("ADS"."Feature_21" <= 10.5) THEN CASE WHEN ("ADS"."Feature_54" <= 13.5) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_27" <= 7.5) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_17" <= 5.5) THEN CASE WHEN ("ADS"."Feature_38" <= 13.0) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_29" <= 12.5) THEN 13 ELSE 14 END END END AS node_id_2 
FROM digits AS "ADS"), 
"DT_node_data_89" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 189 AS count, 3 AS depth, 2 AS parent_id, -0.8144057748272043 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 12 AS count, 3 AS depth, 2 AS parent_id, 1.8388932878114106 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 101 AS count, 3 AS depth, 5 AS parent_id, -0.327187258214892 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 148 AS count, 3 AS depth, 5 AS parent_id, 1.3760224313442397 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 818 AS count, 3 AS depth, 9 AS parent_id, -0.7900731953182875 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS count, 3 AS depth, 9 AS parent_id, 1.4399404018168975 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 139 AS count, 3 AS depth, 12 AS parent_id, -0.4140686320077614 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 26 AS count, 3 AS depth, 12 AS parent_id, 1.3774912549698934 AS "Estimator") AS "Values"), 
"DT_Output_89" AS 
(SELECT "DT_node_lookup_89"."KEY" AS "KEY", "DT_node_lookup_89".node_id_2 AS node_id_2, "DT_node_data_89".node_id AS node_id, "DT_node_data_89".feature AS feature, "DT_node_data_89".threshold AS threshold, "DT_node_data_89".count AS count, "DT_node_data_89".depth AS depth, "DT_node_data_89".parent_id AS parent_id, "DT_node_data_89"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_89" LEFT OUTER JOIN "DT_node_data_89" ON "DT_node_lookup_89".node_id_2 = "DT_node_data_89".node_id), 
"GB_Tree_8_9" AS 
(SELECT "DT_Output_89"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3", 0.0 AS "Score_4", 0.0 AS "Score_5", 0.0 AS "Score_6", 0.0 AS "Score_7", 0.0 AS "Score_8", "DT_Output_89"."Estimator" AS "Score_9" 
FROM "DT_Output_89"), 
"DT_node_lookup_90" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_36" <= 0.5) THEN CASE WHEN ("ADS"."Feature_28" <= 2.5) THEN CASE WHEN ("ADS"."Feature_43" <= 9.5) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_2" <= 0.5) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_28" <= 0.5) THEN CASE WHEN ("ADS"."Feature_21" <= 12.5) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_18" <= 6.5) THEN 13 ELSE 14 END END END AS node_id_2 
FROM digits AS "ADS"), 
"DT_node_data_90" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 134 AS count, 3 AS depth, 2 AS parent_id, 1.2366623934665586 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 12 AS count, 3 AS depth, 2 AS parent_id, -0.39483740842145537 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 6 AS count, 3 AS depth, 5 AS parent_id, 1.1205945153902859 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 67 AS count, 3 AS depth, 5 AS parent_id, -0.9857891343100003 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 104 AS count, 3 AS depth, 9 AS parent_id, -0.9315939534531784 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 7 AS count, 3 AS depth, 9 AS parent_id, 1.0447361133454396 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 384 AS count, 3 AS depth, 12 AS parent_id, -0.9326055313997167 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 723 AS count, 3 AS depth, 12 AS parent_id, -0.9399600143932262 AS "Estimator") AS "Values"), 
"DT_Output_90" AS 
(SELECT "DT_node_lookup_90"."KEY" AS "KEY", "DT_node_lookup_90".node_id_2 AS node_id_2, "DT_node_data_90".node_id AS node_id, "DT_node_data_90".feature AS feature, "DT_node_data_90".threshold AS threshold, "DT_node_data_90".count AS count, "DT_node_data_90".depth AS depth, "DT_node_data_90".parent_id AS parent_id, "DT_node_data_90"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_90" LEFT OUTER JOIN "DT_node_data_90" ON "DT_node_lookup_90".node_id_2 = "DT_node_data_90".node_id), 
"GB_Tree_9_0" AS 
(SELECT "DT_Output_90"."KEY" AS "KEY", "DT_Output_90"."Estimator" AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3", 0.0 AS "Score_4", 0.0 AS "Score_5", 0.0 AS "Score_6", 0.0 AS "Score_7", 0.0 AS "Score_8", 0.0 AS "Score_9" 
FROM "DT_Output_90"), 
"DT_node_lookup_91" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_20" <= 15.5) THEN CASE WHEN ("ADS"."Feature_63" <= 7.5) THEN CASE WHEN ("ADS"."Feature_59" <= 0.5) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_19" <= 13.0) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_10" <= 9.5) THEN CASE WHEN ("ADS"."Feature_41" <= 3.0) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_25" <= 9.5) THEN 13 ELSE 14 END END END AS node_id_2 
FROM digits AS "ADS"), 
"DT_node_data_91" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 37 AS count, 3 AS depth, 2 AS parent_id, 0.5883292872785398 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1130 AS count, 3 AS depth, 2 AS parent_id, -0.6929007456503027 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 13 AS count, 3 AS depth, 5 AS parent_id, -0.9433175608452039 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 17 AS count, 3 AS depth, 5 AS parent_id, 1.6475506721205275 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 97 AS count, 3 AS depth, 9 AS parent_id, 1.373037777468724 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 18 AS count, 3 AS depth, 9 AS parent_id, -0.2275498297714073 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 124 AS count, 3 AS depth, 12 AS parent_id, -0.17135161618682843 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 12 AS parent_id, 9.745515271662814 AS "Estimator") AS "Values"), 
"DT_Output_91" AS 
(SELECT "DT_node_lookup_91"."KEY" AS "KEY", "DT_node_lookup_91".node_id_2 AS node_id_2, "DT_node_data_91".node_id AS node_id, "DT_node_data_91".feature AS feature, "DT_node_data_91".threshold AS threshold, "DT_node_data_91".count AS count, "DT_node_data_91".depth AS depth, "DT_node_data_91".parent_id AS parent_id, "DT_node_data_91"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_91" LEFT OUTER JOIN "DT_node_data_91" ON "DT_node_lookup_91".node_id_2 = "DT_node_data_91".node_id), 
"GB_Tree_9_1" AS 
(SELECT "DT_Output_91"."KEY" AS "KEY", 0.0 AS "Score_0", "DT_Output_91"."Estimator" AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3", 0.0 AS "Score_4", 0.0 AS "Score_5", 0.0 AS "Score_6", 0.0 AS "Score_7", 0.0 AS "Score_8", 0.0 AS "Score_9" 
FROM "DT_Output_91"), 
"DT_node_lookup_92" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_62" <= 2.5) THEN CASE WHEN ("ADS"."Feature_51" <= 15.5) THEN CASE WHEN ("ADS"."Feature_37" <= 0.5) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_34" <= 0.5) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_46" <= 0.5) THEN CASE WHEN ("ADS"."Feature_19" <= 12.5) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_52" <= 13.5) THEN 13 ELSE 14 END END END AS node_id_2 
FROM digits AS "ADS"), 
"DT_node_data_92" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 106 AS count, 3 AS depth, 2 AS parent_id, 0.03978165429728677 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 829 AS count, 3 AS depth, 2 AS parent_id, -0.9499593700018505 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 26 AS count, 3 AS depth, 5 AS parent_id, 1.8027669776875512 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 148 AS count, 3 AS depth, 5 AS parent_id, -0.5532445143747138 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 102 AS count, 3 AS depth, 9 AS parent_id, 1.2940986290143874 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 40 AS count, 3 AS depth, 9 AS parent_id, 0.1158160521551369 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 169 AS count, 3 AS depth, 12 AS parent_id, -0.7610861841046992 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 17 AS count, 3 AS depth, 12 AS parent_id, 1.0952435972766026 AS "Estimator") AS "Values"), 
"DT_Output_92" AS 
(SELECT "DT_node_lookup_92"."KEY" AS "KEY", "DT_node_lookup_92".node_id_2 AS node_id_2, "DT_node_data_92".node_id AS node_id, "DT_node_data_92".feature AS feature, "DT_node_data_92".threshold AS threshold, "DT_node_data_92".count AS count, "DT_node_data_92".depth AS depth, "DT_node_data_92".parent_id AS parent_id, "DT_node_data_92"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_92" LEFT OUTER JOIN "DT_node_data_92" ON "DT_node_lookup_92".node_id_2 = "DT_node_data_92".node_id), 
"GB_Tree_9_2" AS 
(SELECT "DT_Output_92"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", "DT_Output_92"."Estimator" AS "Score_2", 0.0 AS "Score_3", 0.0 AS "Score_4", 0.0 AS "Score_5", 0.0 AS "Score_6", 0.0 AS "Score_7", 0.0 AS "Score_8", 0.0 AS "Score_9" 
FROM "DT_Output_92"), 
"DT_node_lookup_93" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_26" <= 5.5) THEN CASE WHEN ("ADS"."Feature_43" <= 2.5) THEN CASE WHEN ("ADS"."Feature_30" <= 0.5) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_51" <= 7.5) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_54" <= 5.5) THEN CASE WHEN ("ADS"."Feature_28" <= 0.5) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_18" <= 2.5) THEN 13 ELSE 14 END END END AS node_id_2 
FROM digits AS "ADS"), 
"DT_node_data_93" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 131 AS count, 3 AS depth, 2 AS parent_id, 1.302139932392957 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 49 AS count, 3 AS depth, 2 AS parent_id, -0.21997770245898887 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 52 AS count, 3 AS depth, 5 AS parent_id, 0.783766644817813 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 253 AS count, 3 AS depth, 5 AS parent_id, -0.717339122632655 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 165 AS count, 3 AS depth, 9 AS parent_id, -0.7736666222529354 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 530 AS count, 3 AS depth, 9 AS parent_id, -0.9462007747974194 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS count, 3 AS depth, 12 AS parent_id, 1.5557198447405924 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 252 AS count, 3 AS depth, 12 AS parent_id, -0.3583400781583957 AS "Estimator") AS "Values"), 
"DT_Output_93" AS 
(SELECT "DT_node_lookup_93"."KEY" AS "KEY", "DT_node_lookup_93".node_id_2 AS node_id_2, "DT_node_data_93".node_id AS node_id, "DT_node_data_93".feature AS feature, "DT_node_data_93".threshold AS threshold, "DT_node_data_93".count AS count, "DT_node_data_93".depth AS depth, "DT_node_data_93".parent_id AS parent_id, "DT_node_data_93"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_93" LEFT OUTER JOIN "DT_node_data_93" ON "DT_node_lookup_93".node_id_2 = "DT_node_data_93".node_id), 
"GB_Tree_9_3" AS 
(SELECT "DT_Output_93"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", "DT_Output_93"."Estimator" AS "Score_3", 0.0 AS "Score_4", 0.0 AS "Score_5", 0.0 AS "Score_6", 0.0 AS "Score_7", 0.0 AS "Score_8", 0.0 AS "Score_9" 
FROM "DT_Output_93"), 
"DT_node_lookup_94" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_33" <= 8.5) THEN CASE WHEN ("ADS"."Feature_2" <= 0.5) THEN CASE WHEN ("ADS"."Feature_61" <= 6.5) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_22" <= 14.5) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_58" <= 0.5) THEN CASE WHEN ("ADS"."Feature_21" <= 0.5) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_12" <= 1.5) THEN 13 ELSE 14 END END END AS node_id_2 
FROM digits AS "ADS"), 
"DT_node_data_94" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 121 AS count, 3 AS depth, 2 AS parent_id, 1.2038880276296142 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 159 AS count, 3 AS depth, 2 AS parent_id, -0.5277466081458667 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1043 AS count, 3 AS depth, 5 AS parent_id, -0.8015085714998486 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS count, 3 AS depth, 5 AS parent_id, 1.2042058033773027 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 17 AS count, 3 AS depth, 9 AS parent_id, 1.303457408771724 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 58 AS count, 3 AS depth, 9 AS parent_id, 1.2251753039676485 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 8 AS count, 3 AS depth, 12 AS parent_id, 1.3866358008339423 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 27 AS count, 3 AS depth, 12 AS parent_id, -0.06130746077489431 AS "Estimator") AS "Values"), 
"DT_Output_94" AS 
(SELECT "DT_node_lookup_94"."KEY" AS "KEY", "DT_node_lookup_94".node_id_2 AS node_id_2, "DT_node_data_94".node_id AS node_id, "DT_node_data_94".feature AS feature, "DT_node_data_94".threshold AS threshold, "DT_node_data_94".count AS count, "DT_node_data_94".depth AS depth, "DT_node_data_94".parent_id AS parent_id, "DT_node_data_94"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_94" LEFT OUTER JOIN "DT_node_data_94" ON "DT_node_lookup_94".node_id_2 = "DT_node_data_94".node_id), 
"GB_Tree_9_4" AS 
(SELECT "DT_Output_94"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3", "DT_Output_94"."Estimator" AS "Score_4", 0.0 AS "Score_5", 0.0 AS "Score_6", 0.0 AS "Score_7", 0.0 AS "Score_8", 0.0 AS "Score_9" 
FROM "DT_Output_94"), 
"DT_node_lookup_95" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_21" <= 0.5) THEN CASE WHEN ("ADS"."Feature_5" <= 3.5) THEN CASE WHEN ("ADS"."Feature_19" <= 1.5) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_2" <= 1.5) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_43" <= 0.5) THEN CASE WHEN ("ADS"."Feature_21" <= 3.5) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_1" <= 5.0) THEN 13 ELSE 14 END END END AS node_id_2 
FROM digits AS "ADS"), 
"DT_node_data_95" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 17 AS count, 3 AS depth, 2 AS parent_id, 1.2561745465622167 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 216 AS count, 3 AS depth, 2 AS parent_id, -0.7623648431132357 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 31 AS count, 3 AS depth, 5 AS parent_id, -0.49222269020855175 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 129 AS count, 3 AS depth, 5 AS parent_id, 1.2846633322126593 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 25 AS count, 3 AS depth, 9 AS parent_id, 1.097249011084163 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 337 AS count, 3 AS depth, 9 AS parent_id, -0.623904957149508 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 680 AS count, 3 AS depth, 12 AS parent_id, -0.9469936627838312 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 3 AS depth, 12 AS parent_id, 0.9935148587829277 AS "Estimator") AS "Values"), 
"DT_Output_95" AS 
(SELECT "DT_node_lookup_95"."KEY" AS "KEY", "DT_node_lookup_95".node_id_2 AS node_id_2, "DT_node_data_95".node_id AS node_id, "DT_node_data_95".feature AS feature, "DT_node_data_95".threshold AS threshold, "DT_node_data_95".count AS count, "DT_node_data_95".depth AS depth, "DT_node_data_95".parent_id AS parent_id, "DT_node_data_95"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_95" LEFT OUTER JOIN "DT_node_data_95" ON "DT_node_lookup_95".node_id_2 = "DT_node_data_95".node_id), 
"GB_Tree_9_5" AS 
(SELECT "DT_Output_95"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3", 0.0 AS "Score_4", "DT_Output_95"."Estimator" AS "Score_5", 0.0 AS "Score_6", 0.0 AS "Score_7", 0.0 AS "Score_8", 0.0 AS "Score_9" 
FROM "DT_Output_95")
 SELECT "Score_Union_CTE_esu_11"."KEY", "Score_Union_CTE_esu_11"."Score_0", "Score_Union_CTE_esu_11"."Score_1", "Score_Union_CTE_esu_11"."Score_2", "Score_Union_CTE_esu_11"."Score_3", "Score_Union_CTE_esu_11"."Score_4", "Score_Union_CTE_esu_11"."Score_5", "Score_Union_CTE_esu_11"."Score_6", "Score_Union_CTE_esu_11"."Score_7", "Score_Union_CTE_esu_11"."Score_8", "Score_Union_CTE_esu_11"."Score_9" 
FROM (SELECT "GB_Tree_8_8"."KEY" AS "KEY", "GB_Tree_8_8"."Score_0" AS "Score_0", "GB_Tree_8_8"."Score_1" AS "Score_1", "GB_Tree_8_8"."Score_2" AS "Score_2", "GB_Tree_8_8"."Score_3" AS "Score_3", "GB_Tree_8_8"."Score_4" AS "Score_4", "GB_Tree_8_8"."Score_5" AS "Score_5", "GB_Tree_8_8"."Score_6" AS "Score_6", "GB_Tree_8_8"."Score_7" AS "Score_7", "GB_Tree_8_8"."Score_8" AS "Score_8", "GB_Tree_8_8"."Score_9" AS "Score_9" 
FROM "GB_Tree_8_8" UNION ALL SELECT "GB_Tree_8_9"."KEY" AS "KEY", "GB_Tree_8_9"."Score_0" AS "Score_0", "GB_Tree_8_9"."Score_1" AS "Score_1", "GB_Tree_8_9"."Score_2" AS "Score_2", "GB_Tree_8_9"."Score_3" AS "Score_3", "GB_Tree_8_9"."Score_4" AS "Score_4", "GB_Tree_8_9"."Score_5" AS "Score_5", "GB_Tree_8_9"."Score_6" AS "Score_6", "GB_Tree_8_9"."Score_7" AS "Score_7", "GB_Tree_8_9"."Score_8" AS "Score_8", "GB_Tree_8_9"."Score_9" AS "Score_9" 
FROM "GB_Tree_8_9" UNION ALL SELECT "GB_Tree_9_0"."KEY" AS "KEY", "GB_Tree_9_0"."Score_0" AS "Score_0", "GB_Tree_9_0"."Score_1" AS "Score_1", "GB_Tree_9_0"."Score_2" AS "Score_2", "GB_Tree_9_0"."Score_3" AS "Score_3", "GB_Tree_9_0"."Score_4" AS "Score_4", "GB_Tree_9_0"."Score_5" AS "Score_5", "GB_Tree_9_0"."Score_6" AS "Score_6", "GB_Tree_9_0"."Score_7" AS "Score_7", "GB_Tree_9_0"."Score_8" AS "Score_8", "GB_Tree_9_0"."Score_9" AS "Score_9" 
FROM "GB_Tree_9_0" UNION ALL SELECT "GB_Tree_9_1"."KEY" AS "KEY", "GB_Tree_9_1"."Score_0" AS "Score_0", "GB_Tree_9_1"."Score_1" AS "Score_1", "GB_Tree_9_1"."Score_2" AS "Score_2", "GB_Tree_9_1"."Score_3" AS "Score_3", "GB_Tree_9_1"."Score_4" AS "Score_4", "GB_Tree_9_1"."Score_5" AS "Score_5", "GB_Tree_9_1"."Score_6" AS "Score_6", "GB_Tree_9_1"."Score_7" AS "Score_7", "GB_Tree_9_1"."Score_8" AS "Score_8", "GB_Tree_9_1"."Score_9" AS "Score_9" 
FROM "GB_Tree_9_1" UNION ALL SELECT "GB_Tree_9_2"."KEY" AS "KEY", "GB_Tree_9_2"."Score_0" AS "Score_0", "GB_Tree_9_2"."Score_1" AS "Score_1", "GB_Tree_9_2"."Score_2" AS "Score_2", "GB_Tree_9_2"."Score_3" AS "Score_3", "GB_Tree_9_2"."Score_4" AS "Score_4", "GB_Tree_9_2"."Score_5" AS "Score_5", "GB_Tree_9_2"."Score_6" AS "Score_6", "GB_Tree_9_2"."Score_7" AS "Score_7", "GB_Tree_9_2"."Score_8" AS "Score_8", "GB_Tree_9_2"."Score_9" AS "Score_9" 
FROM "GB_Tree_9_2" UNION ALL SELECT "GB_Tree_9_3"."KEY" AS "KEY", "GB_Tree_9_3"."Score_0" AS "Score_0", "GB_Tree_9_3"."Score_1" AS "Score_1", "GB_Tree_9_3"."Score_2" AS "Score_2", "GB_Tree_9_3"."Score_3" AS "Score_3", "GB_Tree_9_3"."Score_4" AS "Score_4", "GB_Tree_9_3"."Score_5" AS "Score_5", "GB_Tree_9_3"."Score_6" AS "Score_6", "GB_Tree_9_3"."Score_7" AS "Score_7", "GB_Tree_9_3"."Score_8" AS "Score_8", "GB_Tree_9_3"."Score_9" AS "Score_9" 
FROM "GB_Tree_9_3" UNION ALL SELECT "GB_Tree_9_4"."KEY" AS "KEY", "GB_Tree_9_4"."Score_0" AS "Score_0", "GB_Tree_9_4"."Score_1" AS "Score_1", "GB_Tree_9_4"."Score_2" AS "Score_2", "GB_Tree_9_4"."Score_3" AS "Score_3", "GB_Tree_9_4"."Score_4" AS "Score_4", "GB_Tree_9_4"."Score_5" AS "Score_5", "GB_Tree_9_4"."Score_6" AS "Score_6", "GB_Tree_9_4"."Score_7" AS "Score_7", "GB_Tree_9_4"."Score_8" AS "Score_8", "GB_Tree_9_4"."Score_9" AS "Score_9" 
FROM "GB_Tree_9_4" UNION ALL SELECT "GB_Tree_9_5"."KEY" AS "KEY", "GB_Tree_9_5"."Score_0" AS "Score_0", "GB_Tree_9_5"."Score_1" AS "Score_1", "GB_Tree_9_5"."Score_2" AS "Score_2", "GB_Tree_9_5"."Score_3" AS "Score_3", "GB_Tree_9_5"."Score_4" AS "Score_4", "GB_Tree_9_5"."Score_5" AS "Score_5", "GB_Tree_9_5"."Score_6" AS "Score_6", "GB_Tree_9_5"."Score_7" AS "Score_7", "GB_Tree_9_5"."Score_8" AS "Score_8", "GB_Tree_9_5"."Score_9" AS "Score_9" 
FROM "GB_Tree_9_5") AS "Score_Union_CTE_esu_11"), 
"Score_Union_CTE_12" AS 
(WITH "DT_node_lookup_96" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_21" <= 0.5) THEN CASE WHEN ("ADS"."Feature_42" <= 9.5) THEN CASE WHEN ("ADS"."Feature_59" <= 2.5) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_1" <= 0.5) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_42" <= 14.5) THEN CASE WHEN ("ADS"."Feature_46" <= 14.5) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_4" <= 3.5) THEN 13 ELSE 14 END END END AS node_id_2 
FROM digits AS "ADS"), 
"DT_node_data_96" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 3 AS depth, 2 AS parent_id, 2.8301675733603955 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 212 AS count, 3 AS depth, 2 AS parent_id, -0.6932040709375625 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 167 AS count, 3 AS depth, 5 AS parent_id, 1.1329559599432197 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 12 AS count, 3 AS depth, 5 AS parent_id, -1.2948201565037463 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 839 AS count, 3 AS depth, 9 AS parent_id, -0.9406916214538925 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 8 AS count, 3 AS depth, 9 AS parent_id, 0.35379912204183234 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 10 AS count, 3 AS depth, 12 AS parent_id, 1.2587894010747396 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 187 AS count, 3 AS depth, 12 AS parent_id, -0.7688998863188767 AS "Estimator") AS "Values"), 
"DT_Output_96" AS 
(SELECT "DT_node_lookup_96"."KEY" AS "KEY", "DT_node_lookup_96".node_id_2 AS node_id_2, "DT_node_data_96".node_id AS node_id, "DT_node_data_96".feature AS feature, "DT_node_data_96".threshold AS threshold, "DT_node_data_96".count AS count, "DT_node_data_96".depth AS depth, "DT_node_data_96".parent_id AS parent_id, "DT_node_data_96"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_96" LEFT OUTER JOIN "DT_node_data_96" ON "DT_node_lookup_96".node_id_2 = "DT_node_data_96".node_id), 
"GB_Tree_9_6" AS 
(SELECT "DT_Output_96"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3", 0.0 AS "Score_4", 0.0 AS "Score_5", "DT_Output_96"."Estimator" AS "Score_6", 0.0 AS "Score_7", 0.0 AS "Score_8", 0.0 AS "Score_9" 
FROM "DT_Output_96"), 
"DT_node_lookup_97" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_60" <= 7.5) THEN CASE WHEN ("ADS"."Feature_18" <= 8.5) THEN CASE WHEN ("ADS"."Feature_30" <= 0.5) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_27" <= 9.5) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_7" <= 8.5) THEN CASE WHEN ("ADS"."Feature_5" <= 12.5) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_19" <= 2.5) THEN 13 ELSE 14 END END END AS node_id_2 
FROM digits AS "ADS"), 
"DT_node_data_97" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 30 AS count, 3 AS depth, 2 AS parent_id, 0.4829332334677042 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 78 AS count, 3 AS depth, 2 AS parent_id, 1.440746854787303 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 81 AS count, 3 AS depth, 5 AS parent_id, 0.7855841110107369 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 71 AS count, 3 AS depth, 5 AS parent_id, -0.9513043466903477 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1026 AS count, 3 AS depth, 9 AS parent_id, -0.916870733091059 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 149 AS count, 3 AS depth, 9 AS parent_id, 0.11616149855445075 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 12 AS parent_id, 1.8901529524055831 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 12 AS parent_id, 1.6143028331404872 AS "Estimator") AS "Values"), 
"DT_Output_97" AS 
(SELECT "DT_node_lookup_97"."KEY" AS "KEY", "DT_node_lookup_97".node_id_2 AS node_id_2, "DT_node_data_97".node_id AS node_id, "DT_node_data_97".feature AS feature, "DT_node_data_97".threshold AS threshold, "DT_node_data_97".count AS count, "DT_node_data_97".depth AS depth, "DT_node_data_97".parent_id AS parent_id, "DT_node_data_97"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_97" LEFT OUTER JOIN "DT_node_data_97" ON "DT_node_lookup_97".node_id_2 = "DT_node_data_97".node_id), 
"GB_Tree_9_7" AS 
(SELECT "DT_Output_97"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3", 0.0 AS "Score_4", 0.0 AS "Score_5", 0.0 AS "Score_6", "DT_Output_97"."Estimator" AS "Score_7", 0.0 AS "Score_8", 0.0 AS "Score_9" 
FROM "DT_Output_97"), 
"DT_node_lookup_98" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_27" <= 10.5) THEN CASE WHEN ("ADS"."Feature_26" <= 6.5) THEN CASE WHEN ("ADS"."Feature_19" <= 10.5) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_37" <= 1.5) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_42" <= 3.5) THEN CASE WHEN ("ADS"."Feature_43" <= 7.5) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_21" <= 6.5) THEN 13 ELSE 14 END END END AS node_id_2 
FROM digits AS "ADS"), 
"DT_node_data_98" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 277 AS count, 3 AS depth, 2 AS parent_id, -1.0021573703132693 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 25 AS count, 3 AS depth, 2 AS parent_id, 0.20881988156353531 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 40 AS count, 3 AS depth, 5 AS parent_id, 1.083469794972321 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 408 AS count, 3 AS depth, 5 AS parent_id, -0.6277315942203031 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 273 AS count, 3 AS depth, 9 AS parent_id, -0.9709767860606496 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 98 AS count, 3 AS depth, 9 AS parent_id, 0.3682650844911725 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 168 AS count, 3 AS depth, 12 AS parent_id, -0.11318549066241072 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 148 AS count, 3 AS depth, 12 AS parent_id, 1.200818116638614 AS "Estimator") AS "Values"), 
"DT_Output_98" AS 
(SELECT "DT_node_lookup_98"."KEY" AS "KEY", "DT_node_lookup_98".node_id_2 AS node_id_2, "DT_node_data_98".node_id AS node_id, "DT_node_data_98".feature AS feature, "DT_node_data_98".threshold AS threshold, "DT_node_data_98".count AS count, "DT_node_data_98".depth AS depth, "DT_node_data_98".parent_id AS parent_id, "DT_node_data_98"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_98" LEFT OUTER JOIN "DT_node_data_98" ON "DT_node_lookup_98".node_id_2 = "DT_node_data_98".node_id), 
"GB_Tree_9_8" AS 
(SELECT "DT_Output_98"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3", 0.0 AS "Score_4", 0.0 AS "Score_5", 0.0 AS "Score_6", 0.0 AS "Score_7", "DT_Output_98"."Estimator" AS "Score_8", 0.0 AS "Score_9" 
FROM "DT_Output_98"), 
"DT_node_lookup_99" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_44" <= 0.5) THEN CASE WHEN ("ADS"."Feature_29" <= 10.5) THEN CASE WHEN ("ADS"."Feature_51" <= 0.5) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_33" <= 1.5) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_14" <= 11.5) THEN CASE WHEN ("ADS"."Feature_10" <= 14.5) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_44" <= 7.5) THEN 13 ELSE 14 END END END AS node_id_2 
FROM digits AS "ADS"), 
"DT_node_data_99" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 10 AS count, 3 AS depth, 2 AS parent_id, 1.60226120605452 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 195 AS count, 3 AS depth, 2 AS parent_id, -0.4797155219542184 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 99 AS count, 3 AS depth, 5 AS parent_id, 1.4537267552066286 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 39 AS count, 3 AS depth, 5 AS parent_id, -0.4896202258234076 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 710 AS count, 3 AS depth, 9 AS parent_id, -0.7610492227476524 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 327 AS count, 3 AS depth, 9 AS parent_id, -0.014423035347717682 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 13 AS count, 3 AS depth, 12 AS parent_id, 1.8549792593898986 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 44 AS count, 3 AS depth, 12 AS parent_id, 0.14221075846047054 AS "Estimator") AS "Values"), 
"DT_Output_99" AS 
(SELECT "DT_node_lookup_99"."KEY" AS "KEY", "DT_node_lookup_99".node_id_2 AS node_id_2, "DT_node_data_99".node_id AS node_id, "DT_node_data_99".feature AS feature, "DT_node_data_99".threshold AS threshold, "DT_node_data_99".count AS count, "DT_node_data_99".depth AS depth, "DT_node_data_99".parent_id AS parent_id, "DT_node_data_99"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_99" LEFT OUTER JOIN "DT_node_data_99" ON "DT_node_lookup_99".node_id_2 = "DT_node_data_99".node_id), 
"GB_Tree_9_9" AS 
(SELECT "DT_Output_99"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3", 0.0 AS "Score_4", 0.0 AS "Score_5", 0.0 AS "Score_6", 0.0 AS "Score_7", 0.0 AS "Score_8", "DT_Output_99"."Estimator" AS "Score_9" 
FROM "DT_Output_99"), 
"DT_node_lookup_100" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_36" <= 0.5) THEN CASE WHEN ("ADS"."Feature_33" <= 0.5) THEN CASE WHEN ("ADS"."Feature_63" <= 2.5) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_13" <= 2.5) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_28" <= 0.5) THEN CASE WHEN ("ADS"."Feature_21" <= 12.5) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_18" <= 6.5) THEN 13 ELSE 14 END END END AS node_id_2 
FROM digits AS "ADS"), 
"DT_node_data_100" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 65 AS count, 3 AS depth, 2 AS parent_id, -0.8432899612207913 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 2 AS parent_id, -1.3733442009847234 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 11 AS count, 3 AS depth, 5 AS parent_id, -0.6182061490189351 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 142 AS count, 3 AS depth, 5 AS parent_id, 1.1660211827444535 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 104 AS count, 3 AS depth, 9 AS parent_id, -0.9281751994201822 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 7 AS count, 3 AS depth, 9 AS parent_id, 0.9141143576762798 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 384 AS count, 3 AS depth, 12 AS parent_id, -0.9293045714051088 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 723 AS count, 3 AS depth, 12 AS parent_id, -0.9368513611097065 AS "Estimator") AS "Values"), 
"DT_Output_100" AS 
(SELECT "DT_node_lookup_100"."KEY" AS "KEY", "DT_node_lookup_100".node_id_2 AS node_id_2, "DT_node_data_100".node_id AS node_id, "DT_node_data_100".feature AS feature, "DT_node_data_100".threshold AS threshold, "DT_node_data_100".count AS count, "DT_node_data_100".depth AS depth, "DT_node_data_100".parent_id AS parent_id, "DT_node_data_100"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_100" LEFT OUTER JOIN "DT_node_data_100" ON "DT_node_lookup_100".node_id_2 = "DT_node_data_100".node_id), 
"GB_Tree_10_0" AS 
(SELECT "DT_Output_100"."KEY" AS "KEY", "DT_Output_100"."Estimator" AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3", 0.0 AS "Score_4", 0.0 AS "Score_5", 0.0 AS "Score_6", 0.0 AS "Score_7", 0.0 AS "Score_8", 0.0 AS "Score_9" 
FROM "DT_Output_100"), 
"DT_node_lookup_101" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_19" <= 13.5) THEN CASE WHEN ("ADS"."Feature_3" <= 1.5) THEN CASE WHEN ("ADS"."Feature_20" <= 10.5) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_10" <= 0.5) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_45" <= 4.5) THEN CASE WHEN ("ADS"."Feature_9" <= 2.5) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_42" <= 3.0) THEN 13 ELSE 14 END END END AS node_id_2 
FROM digits AS "ADS"), 
"DT_node_data_101" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 17 AS count, 3 AS depth, 2 AS parent_id, -0.15730694877467366 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 15 AS count, 3 AS depth, 2 AS parent_id, 1.6797527649180066 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 25 AS count, 3 AS depth, 5 AS parent_id, 0.7138061874373991 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1064 AS count, 3 AS depth, 5 AS parent_id, -0.9139139567251813 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 82 AS count, 3 AS depth, 9 AS parent_id, 1.3455058514934821 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 18 AS count, 3 AS depth, 9 AS parent_id, -1.050957376251896 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 68 AS count, 3 AS depth, 12 AS parent_id, 1.198398708498022 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 148 AS count, 3 AS depth, 12 AS parent_id, -0.642163525603611 AS "Estimator") AS "Values"), 
"DT_Output_101" AS 
(SELECT "DT_node_lookup_101"."KEY" AS "KEY", "DT_node_lookup_101".node_id_2 AS node_id_2, "DT_node_data_101".node_id AS node_id, "DT_node_data_101".feature AS feature, "DT_node_data_101".threshold AS threshold, "DT_node_data_101".count AS count, "DT_node_data_101".depth AS depth, "DT_node_data_101".parent_id AS parent_id, "DT_node_data_101"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_101" LEFT OUTER JOIN "DT_node_data_101" ON "DT_node_lookup_101".node_id_2 = "DT_node_data_101".node_id), 
"GB_Tree_10_1" AS 
(SELECT "DT_Output_101"."KEY" AS "KEY", 0.0 AS "Score_0", "DT_Output_101"."Estimator" AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3", 0.0 AS "Score_4", 0.0 AS "Score_5", 0.0 AS "Score_6", 0.0 AS "Score_7", 0.0 AS "Score_8", 0.0 AS "Score_9" 
FROM "DT_Output_101"), 
"DT_node_lookup_102" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_26" <= 3.5) THEN CASE WHEN ("ADS"."Feature_37" <= 1.5) THEN CASE WHEN ("ADS"."Feature_44" <= 8.5) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_27" <= 0.5) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_63" <= 3.5) THEN CASE WHEN ("ADS"."Feature_2" <= 14.5) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_19" <= 13.5) THEN 13 ELSE 14 END END END AS node_id_2 
FROM digits AS "ADS"), 
"DT_node_data_102" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 66 AS count, 3 AS depth, 2 AS parent_id, 1.5150130212380766 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 40 AS count, 3 AS depth, 2 AS parent_id, 0.09965672937813227 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 58 AS count, 3 AS depth, 5 AS parent_id, 1.2981586229302995 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 241 AS count, 3 AS depth, 5 AS parent_id, -0.5380539225584641 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 973 AS count, 3 AS depth, 9 AS parent_id, -0.7579181146566962 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 32 AS count, 3 AS depth, 9 AS parent_id, 0.9596002707912249 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 12 AS count, 3 AS depth, 12 AS parent_id, 1.3384391977320789 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 15 AS count, 3 AS depth, 12 AS parent_id, -1.0107935919807978 AS "Estimator") AS "Values"), 
"DT_Output_102" AS 
(SELECT "DT_node_lookup_102"."KEY" AS "KEY", "DT_node_lookup_102".node_id_2 AS node_id_2, "DT_node_data_102".node_id AS node_id, "DT_node_data_102".feature AS feature, "DT_node_data_102".threshold AS threshold, "DT_node_data_102".count AS count, "DT_node_data_102".depth AS depth, "DT_node_data_102".parent_id AS parent_id, "DT_node_data_102"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_102" LEFT OUTER JOIN "DT_node_data_102" ON "DT_node_lookup_102".node_id_2 = "DT_node_data_102".node_id), 
"GB_Tree_10_2" AS 
(SELECT "DT_Output_102"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", "DT_Output_102"."Estimator" AS "Score_2", 0.0 AS "Score_3", 0.0 AS "Score_4", 0.0 AS "Score_5", 0.0 AS "Score_6", 0.0 AS "Score_7", 0.0 AS "Score_8", 0.0 AS "Score_9" 
FROM "DT_Output_102"), 
"DT_node_lookup_103" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_34" <= 0.5) THEN CASE WHEN ("ADS"."Feature_18" <= 4.5) THEN CASE WHEN ("ADS"."Feature_43" <= 9.5) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_29" <= 10.5) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_58" <= 4.5) THEN CASE WHEN ("ADS"."Feature_33" <= 2.5) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_18" <= 3.5) THEN 13 ELSE 14 END END END AS node_id_2 
FROM digits AS "ADS"), 
"DT_node_data_103" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 84 AS count, 3 AS depth, 2 AS parent_id, 1.2905967727657308 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 24 AS count, 3 AS depth, 2 AS parent_id, -0.9475597202770272 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 151 AS count, 3 AS depth, 5 AS parent_id, 0.8050160567856983 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 112 AS count, 3 AS depth, 5 AS parent_id, -0.7567939253008762 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 282 AS count, 3 AS depth, 9 AS parent_id, -0.9624399879057592 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 338 AS count, 3 AS depth, 9 AS parent_id, -0.8460714208125215 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 96 AS count, 3 AS depth, 12 AS parent_id, 0.895825005977972 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 350 AS count, 3 AS depth, 12 AS parent_id, -0.49941814071855634 AS "Estimator") AS "Values"), 
"DT_Output_103" AS 
(SELECT "DT_node_lookup_103"."KEY" AS "KEY", "DT_node_lookup_103".node_id_2 AS node_id_2, "DT_node_data_103".node_id AS node_id, "DT_node_data_103".feature AS feature, "DT_node_data_103".threshold AS threshold, "DT_node_data_103".count AS count, "DT_node_data_103".depth AS depth, "DT_node_data_103".parent_id AS parent_id, "DT_node_data_103"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_103" LEFT OUTER JOIN "DT_node_data_103" ON "DT_node_lookup_103".node_id_2 = "DT_node_data_103".node_id), 
"GB_Tree_10_3" AS 
(SELECT "DT_Output_103"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", "DT_Output_103"."Estimator" AS "Score_3", 0.0 AS "Score_4", 0.0 AS "Score_5", 0.0 AS "Score_6", 0.0 AS "Score_7", 0.0 AS "Score_8", 0.0 AS "Score_9" 
FROM "DT_Output_103")
 SELECT "Score_Union_CTE_esu_12"."KEY", "Score_Union_CTE_esu_12"."Score_0", "Score_Union_CTE_esu_12"."Score_1", "Score_Union_CTE_esu_12"."Score_2", "Score_Union_CTE_esu_12"."Score_3", "Score_Union_CTE_esu_12"."Score_4", "Score_Union_CTE_esu_12"."Score_5", "Score_Union_CTE_esu_12"."Score_6", "Score_Union_CTE_esu_12"."Score_7", "Score_Union_CTE_esu_12"."Score_8", "Score_Union_CTE_esu_12"."Score_9" 
FROM (SELECT "GB_Tree_9_6"."KEY" AS "KEY", "GB_Tree_9_6"."Score_0" AS "Score_0", "GB_Tree_9_6"."Score_1" AS "Score_1", "GB_Tree_9_6"."Score_2" AS "Score_2", "GB_Tree_9_6"."Score_3" AS "Score_3", "GB_Tree_9_6"."Score_4" AS "Score_4", "GB_Tree_9_6"."Score_5" AS "Score_5", "GB_Tree_9_6"."Score_6" AS "Score_6", "GB_Tree_9_6"."Score_7" AS "Score_7", "GB_Tree_9_6"."Score_8" AS "Score_8", "GB_Tree_9_6"."Score_9" AS "Score_9" 
FROM "GB_Tree_9_6" UNION ALL SELECT "GB_Tree_9_7"."KEY" AS "KEY", "GB_Tree_9_7"."Score_0" AS "Score_0", "GB_Tree_9_7"."Score_1" AS "Score_1", "GB_Tree_9_7"."Score_2" AS "Score_2", "GB_Tree_9_7"."Score_3" AS "Score_3", "GB_Tree_9_7"."Score_4" AS "Score_4", "GB_Tree_9_7"."Score_5" AS "Score_5", "GB_Tree_9_7"."Score_6" AS "Score_6", "GB_Tree_9_7"."Score_7" AS "Score_7", "GB_Tree_9_7"."Score_8" AS "Score_8", "GB_Tree_9_7"."Score_9" AS "Score_9" 
FROM "GB_Tree_9_7" UNION ALL SELECT "GB_Tree_9_8"."KEY" AS "KEY", "GB_Tree_9_8"."Score_0" AS "Score_0", "GB_Tree_9_8"."Score_1" AS "Score_1", "GB_Tree_9_8"."Score_2" AS "Score_2", "GB_Tree_9_8"."Score_3" AS "Score_3", "GB_Tree_9_8"."Score_4" AS "Score_4", "GB_Tree_9_8"."Score_5" AS "Score_5", "GB_Tree_9_8"."Score_6" AS "Score_6", "GB_Tree_9_8"."Score_7" AS "Score_7", "GB_Tree_9_8"."Score_8" AS "Score_8", "GB_Tree_9_8"."Score_9" AS "Score_9" 
FROM "GB_Tree_9_8" UNION ALL SELECT "GB_Tree_9_9"."KEY" AS "KEY", "GB_Tree_9_9"."Score_0" AS "Score_0", "GB_Tree_9_9"."Score_1" AS "Score_1", "GB_Tree_9_9"."Score_2" AS "Score_2", "GB_Tree_9_9"."Score_3" AS "Score_3", "GB_Tree_9_9"."Score_4" AS "Score_4", "GB_Tree_9_9"."Score_5" AS "Score_5", "GB_Tree_9_9"."Score_6" AS "Score_6", "GB_Tree_9_9"."Score_7" AS "Score_7", "GB_Tree_9_9"."Score_8" AS "Score_8", "GB_Tree_9_9"."Score_9" AS "Score_9" 
FROM "GB_Tree_9_9" UNION ALL SELECT "GB_Tree_10_0"."KEY" AS "KEY", "GB_Tree_10_0"."Score_0" AS "Score_0", "GB_Tree_10_0"."Score_1" AS "Score_1", "GB_Tree_10_0"."Score_2" AS "Score_2", "GB_Tree_10_0"."Score_3" AS "Score_3", "GB_Tree_10_0"."Score_4" AS "Score_4", "GB_Tree_10_0"."Score_5" AS "Score_5", "GB_Tree_10_0"."Score_6" AS "Score_6", "GB_Tree_10_0"."Score_7" AS "Score_7", "GB_Tree_10_0"."Score_8" AS "Score_8", "GB_Tree_10_0"."Score_9" AS "Score_9" 
FROM "GB_Tree_10_0" UNION ALL SELECT "GB_Tree_10_1"."KEY" AS "KEY", "GB_Tree_10_1"."Score_0" AS "Score_0", "GB_Tree_10_1"."Score_1" AS "Score_1", "GB_Tree_10_1"."Score_2" AS "Score_2", "GB_Tree_10_1"."Score_3" AS "Score_3", "GB_Tree_10_1"."Score_4" AS "Score_4", "GB_Tree_10_1"."Score_5" AS "Score_5", "GB_Tree_10_1"."Score_6" AS "Score_6", "GB_Tree_10_1"."Score_7" AS "Score_7", "GB_Tree_10_1"."Score_8" AS "Score_8", "GB_Tree_10_1"."Score_9" AS "Score_9" 
FROM "GB_Tree_10_1" UNION ALL SELECT "GB_Tree_10_2"."KEY" AS "KEY", "GB_Tree_10_2"."Score_0" AS "Score_0", "GB_Tree_10_2"."Score_1" AS "Score_1", "GB_Tree_10_2"."Score_2" AS "Score_2", "GB_Tree_10_2"."Score_3" AS "Score_3", "GB_Tree_10_2"."Score_4" AS "Score_4", "GB_Tree_10_2"."Score_5" AS "Score_5", "GB_Tree_10_2"."Score_6" AS "Score_6", "GB_Tree_10_2"."Score_7" AS "Score_7", "GB_Tree_10_2"."Score_8" AS "Score_8", "GB_Tree_10_2"."Score_9" AS "Score_9" 
FROM "GB_Tree_10_2" UNION ALL SELECT "GB_Tree_10_3"."KEY" AS "KEY", "GB_Tree_10_3"."Score_0" AS "Score_0", "GB_Tree_10_3"."Score_1" AS "Score_1", "GB_Tree_10_3"."Score_2" AS "Score_2", "GB_Tree_10_3"."Score_3" AS "Score_3", "GB_Tree_10_3"."Score_4" AS "Score_4", "GB_Tree_10_3"."Score_5" AS "Score_5", "GB_Tree_10_3"."Score_6" AS "Score_6", "GB_Tree_10_3"."Score_7" AS "Score_7", "GB_Tree_10_3"."Score_8" AS "Score_8", "GB_Tree_10_3"."Score_9" AS "Score_9" 
FROM "GB_Tree_10_3") AS "Score_Union_CTE_esu_12"), 
"Score_Union_CTE_13" AS 
(WITH "DT_node_lookup_104" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_33" <= 8.5) THEN CASE WHEN ("ADS"."Feature_34" <= 13.5) THEN CASE WHEN ("ADS"."Feature_12" <= 3.5) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_50" <= 0.5) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_19" <= 2.5) THEN CASE WHEN ("ADS"."Feature_28" <= 8.0) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_54" <= 1.5) THEN 13 ELSE 14 END END END AS node_id_2 
FROM digits AS "ADS"), 
"DT_node_data_104" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 62 AS count, 3 AS depth, 2 AS parent_id, 0.5805624223506544 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 942 AS count, 3 AS depth, 2 AS parent_id, -0.8681341078807012 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 74 AS count, 3 AS depth, 5 AS parent_id, 1.3010422813738527 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 249 AS count, 3 AS depth, 5 AS parent_id, -0.270534643005399 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 10 AS count, 3 AS depth, 9 AS parent_id, -0.9436394165725336 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 3 AS depth, 9 AS parent_id, -1.038592254633376 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 93 AS count, 3 AS depth, 12 AS parent_id, 1.152744868041497 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS count, 3 AS depth, 12 AS parent_id, -0.9684437710508536 AS "Estimator") AS "Values"), 
"DT_Output_104" AS 
(SELECT "DT_node_lookup_104"."KEY" AS "KEY", "DT_node_lookup_104".node_id_2 AS node_id_2, "DT_node_data_104".node_id AS node_id, "DT_node_data_104".feature AS feature, "DT_node_data_104".threshold AS threshold, "DT_node_data_104".count AS count, "DT_node_data_104".depth AS depth, "DT_node_data_104".parent_id AS parent_id, "DT_node_data_104"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_104" LEFT OUTER JOIN "DT_node_data_104" ON "DT_node_lookup_104".node_id_2 = "DT_node_data_104".node_id), 
"GB_Tree_10_4" AS 
(SELECT "DT_Output_104"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3", "DT_Output_104"."Estimator" AS "Score_4", 0.0 AS "Score_5", 0.0 AS "Score_6", 0.0 AS "Score_7", 0.0 AS "Score_8", 0.0 AS "Score_9" 
FROM "DT_Output_104"), 
"DT_node_lookup_105" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_21" <= 0.5) THEN CASE WHEN ("ADS"."Feature_5" <= 3.5) THEN CASE WHEN ("ADS"."Feature_43" <= 0.5) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_2" <= 1.5) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_36" <= 1.5) THEN CASE WHEN ("ADS"."Feature_13" <= 6.5) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_2" <= 11.5) THEN 13 ELSE 14 END END END AS node_id_2 
FROM digits AS "ADS"), 
"DT_node_data_105" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 23 AS count, 3 AS depth, 2 AS parent_id, 0.7364936506358251 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 210 AS count, 3 AS depth, 2 AS parent_id, -0.861402466547001 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 31 AS count, 3 AS depth, 5 AS parent_id, -0.45600287909871556 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 129 AS count, 3 AS depth, 5 AS parent_id, 1.2168050574102316 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 34 AS count, 3 AS depth, 9 AS parent_id, 1.8509484845416218 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 189 AS count, 3 AS depth, 9 AS parent_id, -0.7956254120479194 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 728 AS count, 3 AS depth, 12 AS parent_id, -0.9195421346127998 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 93 AS count, 3 AS depth, 12 AS parent_id, -0.24543686592925334 AS "Estimator") AS "Values"), 
"DT_Output_105" AS 
(SELECT "DT_node_lookup_105"."KEY" AS "KEY", "DT_node_lookup_105".node_id_2 AS node_id_2, "DT_node_data_105".node_id AS node_id, "DT_node_data_105".feature AS feature, "DT_node_data_105".threshold AS threshold, "DT_node_data_105".count AS count, "DT_node_data_105".depth AS depth, "DT_node_data_105".parent_id AS parent_id, "DT_node_data_105"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_105" LEFT OUTER JOIN "DT_node_data_105" ON "DT_node_lookup_105".node_id_2 = "DT_node_data_105".node_id), 
"GB_Tree_10_5" AS 
(SELECT "DT_Output_105"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3", 0.0 AS "Score_4", "DT_Output_105"."Estimator" AS "Score_5", 0.0 AS "Score_6", 0.0 AS "Score_7", 0.0 AS "Score_8", 0.0 AS "Score_9" 
FROM "DT_Output_105"), 
"DT_node_lookup_106" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_21" <= 0.5) THEN CASE WHEN ("ADS"."Feature_42" <= 9.5) THEN CASE WHEN ("ADS"."Feature_2" <= 0.5) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_49" <= 2.5) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_33" <= 6.5) THEN CASE WHEN ("ADS"."Feature_46" <= 14.5) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_4" <= 3.5) THEN 13 ELSE 14 END END END AS node_id_2 
FROM digits AS "ADS"), 
"DT_node_data_106" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 15 AS count, 3 AS depth, 2 AS parent_id, 0.9829181503746244 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 199 AS count, 3 AS depth, 2 AS parent_id, -0.9371327175186097 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 157 AS count, 3 AS depth, 5 AS parent_id, 1.0860106689377815 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 22 AS count, 3 AS depth, 5 AS parent_id, -0.8097241643745031 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 869 AS count, 3 AS depth, 9 AS parent_id, -0.9366956413322932 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 9 AS count, 3 AS depth, 9 AS parent_id, 0.2519880037509562 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 11 AS count, 3 AS depth, 12 AS parent_id, 1.0190470053386782 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 155 AS count, 3 AS depth, 12 AS parent_id, -0.7091884371583075 AS "Estimator") AS "Values"), 
"DT_Output_106" AS 
(SELECT "DT_node_lookup_106"."KEY" AS "KEY", "DT_node_lookup_106".node_id_2 AS node_id_2, "DT_node_data_106".node_id AS node_id, "DT_node_data_106".feature AS feature, "DT_node_data_106".threshold AS threshold, "DT_node_data_106".count AS count, "DT_node_data_106".depth AS depth, "DT_node_data_106".parent_id AS parent_id, "DT_node_data_106"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_106" LEFT OUTER JOIN "DT_node_data_106" ON "DT_node_lookup_106".node_id_2 = "DT_node_data_106".node_id), 
"GB_Tree_10_6" AS 
(SELECT "DT_Output_106"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3", 0.0 AS "Score_4", 0.0 AS "Score_5", "DT_Output_106"."Estimator" AS "Score_6", 0.0 AS "Score_7", 0.0 AS "Score_8", 0.0 AS "Score_9" 
FROM "DT_Output_106"), 
"DT_node_lookup_107" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_53" <= 0.5) THEN CASE WHEN ("ADS"."Feature_26" <= 9.5) THEN CASE WHEN ("ADS"."Feature_37" <= 0.5) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_18" <= 3.0) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_7" <= 1.5) THEN CASE WHEN ("ADS"."Feature_34" <= 14.5) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_26" <= 3.0) THEN 13 ELSE 14 END END END AS node_id_2 
FROM digits AS "ADS"), 
"DT_node_data_107" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 32 AS count, 3 AS depth, 2 AS parent_id, -0.7109364652139067 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 118 AS count, 3 AS depth, 2 AS parent_id, 1.360059017742984 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 9 AS count, 3 AS depth, 5 AS parent_id, 1.4826002117147508 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 132 AS count, 3 AS depth, 5 AS parent_id, -0.2685325742925443 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 870 AS count, 3 AS depth, 9 AS parent_id, -0.8894993929414661 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 268 AS count, 3 AS depth, 9 AS parent_id, -0.511949749310799 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS count, 3 AS depth, 12 AS parent_id, 1.7748498157843635 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS count, 3 AS depth, 12 AS parent_id, -1.0266256875929463 AS "Estimator") AS "Values"), 
"DT_Output_107" AS 
(SELECT "DT_node_lookup_107"."KEY" AS "KEY", "DT_node_lookup_107".node_id_2 AS node_id_2, "DT_node_data_107".node_id AS node_id, "DT_node_data_107".feature AS feature, "DT_node_data_107".threshold AS threshold, "DT_node_data_107".count AS count, "DT_node_data_107".depth AS depth, "DT_node_data_107".parent_id AS parent_id, "DT_node_data_107"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_107" LEFT OUTER JOIN "DT_node_data_107" ON "DT_node_lookup_107".node_id_2 = "DT_node_data_107".node_id), 
"GB_Tree_10_7" AS 
(SELECT "DT_Output_107"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3", 0.0 AS "Score_4", 0.0 AS "Score_5", 0.0 AS "Score_6", "DT_Output_107"."Estimator" AS "Score_7", 0.0 AS "Score_8", 0.0 AS "Score_9" 
FROM "DT_Output_107"), 
"DT_node_lookup_108" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_35" <= 8.5) THEN CASE WHEN ("ADS"."Feature_52" <= 1.5) THEN CASE WHEN ("ADS"."Feature_5" <= 14.5) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_38" <= 0.5) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_21" <= 4.5) THEN CASE WHEN ("ADS"."Feature_8" <= 1.0) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_50" <= 8.5) THEN 13 ELSE 14 END END END AS node_id_2 
FROM digits AS "ADS"), 
"DT_node_data_108" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 57 AS count, 3 AS depth, 2 AS parent_id, -0.3496594420607864 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 3 AS depth, 2 AS parent_id, 3.237724085162742 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 205 AS count, 3 AS depth, 5 AS parent_id, -0.9756089473743114 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 375 AS count, 3 AS depth, 5 AS parent_id, -0.7341041544748992 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 364 AS count, 3 AS depth, 9 AS parent_id, -0.721458388306319 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 9 AS parent_id, 3.452201514101184 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 250 AS count, 3 AS depth, 12 AS parent_id, -0.055780312357105455 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 183 AS count, 3 AS depth, 12 AS parent_id, 0.9864546435911391 AS "Estimator") AS "Values"), 
"DT_Output_108" AS 
(SELECT "DT_node_lookup_108"."KEY" AS "KEY", "DT_node_lookup_108".node_id_2 AS node_id_2, "DT_node_data_108".node_id AS node_id, "DT_node_data_108".feature AS feature, "DT_node_data_108".threshold AS threshold, "DT_node_data_108".count AS count, "DT_node_data_108".depth AS depth, "DT_node_data_108".parent_id AS parent_id, "DT_node_data_108"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_108" LEFT OUTER JOIN "DT_node_data_108" ON "DT_node_lookup_108".node_id_2 = "DT_node_data_108".node_id), 
"GB_Tree_10_8" AS 
(SELECT "DT_Output_108"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3", 0.0 AS "Score_4", 0.0 AS "Score_5", 0.0 AS "Score_6", 0.0 AS "Score_7", "DT_Output_108"."Estimator" AS "Score_8", 0.0 AS "Score_9" 
FROM "DT_Output_108"), 
"DT_node_lookup_109" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_43" <= 3.5) THEN CASE WHEN ("ADS"."Feature_21" <= 10.5) THEN CASE WHEN ("ADS"."Feature_54" <= 15.5) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_27" <= 6.5) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_60" <= 1.5) THEN CASE WHEN ("ADS"."Feature_17" <= 6.5) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_38" <= 13.0) THEN 13 ELSE 14 END END END AS node_id_2 
FROM digits AS "ADS"), 
"DT_node_data_109" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 267 AS count, 3 AS depth, 2 AS parent_id, -0.6672760388476738 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS count, 3 AS depth, 2 AS parent_id, 2.245095102667093 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 135 AS count, 3 AS depth, 5 AS parent_id, -0.26712173452423565 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 189 AS count, 3 AS depth, 5 AS parent_id, 1.175267410997554 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 86 AS count, 3 AS depth, 9 AS parent_id, -0.9543769012965144 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 15 AS count, 3 AS depth, 9 AS parent_id, 3.1517112035664026 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 737 AS count, 3 AS depth, 12 AS parent_id, -0.9107508178973507 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 3 AS depth, 12 AS parent_id, 1.3415871755724413 AS "Estimator") AS "Values"), 
"DT_Output_109" AS 
(SELECT "DT_node_lookup_109"."KEY" AS "KEY", "DT_node_lookup_109".node_id_2 AS node_id_2, "DT_node_data_109".node_id AS node_id, "DT_node_data_109".feature AS feature, "DT_node_data_109".threshold AS threshold, "DT_node_data_109".count AS count, "DT_node_data_109".depth AS depth, "DT_node_data_109".parent_id AS parent_id, "DT_node_data_109"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_109" LEFT OUTER JOIN "DT_node_data_109" ON "DT_node_lookup_109".node_id_2 = "DT_node_data_109".node_id), 
"GB_Tree_10_9" AS 
(SELECT "DT_Output_109"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3", 0.0 AS "Score_4", 0.0 AS "Score_5", 0.0 AS "Score_6", 0.0 AS "Score_7", 0.0 AS "Score_8", "DT_Output_109"."Estimator" AS "Score_9" 
FROM "DT_Output_109"), 
"DT_node_lookup_110" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_36" <= 0.5) THEN CASE WHEN ("ADS"."Feature_28" <= 2.5) THEN CASE WHEN ("ADS"."Feature_13" <= 1.5) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_12" <= 15.5) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_28" <= 0.5) THEN CASE WHEN ("ADS"."Feature_21" <= 12.5) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_18" <= 6.5) THEN 13 ELSE 14 END END END AS node_id_2 
FROM digits AS "ADS"), 
"DT_node_data_110" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 9 AS count, 3 AS depth, 2 AS parent_id, -1.0674468890498445 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 137 AS count, 3 AS depth, 2 AS parent_id, 1.1104516605838772 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 67 AS count, 3 AS depth, 5 AS parent_id, -0.9799498979991441 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 6 AS count, 3 AS depth, 5 AS parent_id, 0.9934623383875526 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 104 AS count, 3 AS depth, 9 AS parent_id, -0.925348562226782 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 7 AS count, 3 AS depth, 9 AS parent_id, 0.8081391006964601 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 384 AS count, 3 AS depth, 12 AS parent_id, -0.9263121490333168 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 723 AS count, 3 AS depth, 12 AS parent_id, -0.93401689842418 AS "Estimator") AS "Values"), 
"DT_Output_110" AS 
(SELECT "DT_node_lookup_110"."KEY" AS "KEY", "DT_node_lookup_110".node_id_2 AS node_id_2, "DT_node_data_110".node_id AS node_id, "DT_node_data_110".feature AS feature, "DT_node_data_110".threshold AS threshold, "DT_node_data_110".count AS count, "DT_node_data_110".depth AS depth, "DT_node_data_110".parent_id AS parent_id, "DT_node_data_110"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_110" LEFT OUTER JOIN "DT_node_data_110" ON "DT_node_lookup_110".node_id_2 = "DT_node_data_110".node_id), 
"GB_Tree_11_0" AS 
(SELECT "DT_Output_110"."KEY" AS "KEY", "DT_Output_110"."Estimator" AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3", 0.0 AS "Score_4", 0.0 AS "Score_5", 0.0 AS "Score_6", 0.0 AS "Score_7", 0.0 AS "Score_8", 0.0 AS "Score_9" 
FROM "DT_Output_110"), 
"DT_node_lookup_111" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_20" <= 15.5) THEN CASE WHEN ("ADS"."Feature_63" <= 7.5) THEN CASE WHEN ("ADS"."Feature_59" <= 0.5) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_19" <= 13.0) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_10" <= 8.5) THEN CASE WHEN ("ADS"."Feature_41" <= 5.5) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_25" <= 9.5) THEN 13 ELSE 14 END END END AS node_id_2 
FROM digits AS "ADS"), 
"DT_node_data_111" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 37 AS count, 3 AS depth, 2 AS parent_id, 0.498298524039249 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1130 AS count, 3 AS depth, 2 AS parent_id, -0.6574086610961001 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 13 AS count, 3 AS depth, 5 AS parent_id, -0.9328381579146988 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 17 AS count, 3 AS depth, 5 AS parent_id, 1.4592017450716792 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 99 AS count, 3 AS depth, 9 AS parent_id, 1.2093700963977443 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 14 AS count, 3 AS depth, 9 AS parent_id, -0.6623644298272744 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 126 AS count, 3 AS depth, 12 AS parent_id, -0.12996074338917926 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 12 AS parent_id, 3.549841801011095 AS "Estimator") AS "Values"), 
"DT_Output_111" AS 
(SELECT "DT_node_lookup_111"."KEY" AS "KEY", "DT_node_lookup_111".node_id_2 AS node_id_2, "DT_node_data_111".node_id AS node_id, "DT_node_data_111".feature AS feature, "DT_node_data_111".threshold AS threshold, "DT_node_data_111".count AS count, "DT_node_data_111".depth AS depth, "DT_node_data_111".parent_id AS parent_id, "DT_node_data_111"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_111" LEFT OUTER JOIN "DT_node_data_111" ON "DT_node_lookup_111".node_id_2 = "DT_node_data_111".node_id), 
"GB_Tree_11_1" AS 
(SELECT "DT_Output_111"."KEY" AS "KEY", 0.0 AS "Score_0", "DT_Output_111"."Estimator" AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3", 0.0 AS "Score_4", 0.0 AS "Score_5", 0.0 AS "Score_6", 0.0 AS "Score_7", 0.0 AS "Score_8", 0.0 AS "Score_9" 
FROM "DT_Output_111")
 SELECT "Score_Union_CTE_esu_13"."KEY", "Score_Union_CTE_esu_13"."Score_0", "Score_Union_CTE_esu_13"."Score_1", "Score_Union_CTE_esu_13"."Score_2", "Score_Union_CTE_esu_13"."Score_3", "Score_Union_CTE_esu_13"."Score_4", "Score_Union_CTE_esu_13"."Score_5", "Score_Union_CTE_esu_13"."Score_6", "Score_Union_CTE_esu_13"."Score_7", "Score_Union_CTE_esu_13"."Score_8", "Score_Union_CTE_esu_13"."Score_9" 
FROM (SELECT "GB_Tree_10_4"."KEY" AS "KEY", "GB_Tree_10_4"."Score_0" AS "Score_0", "GB_Tree_10_4"."Score_1" AS "Score_1", "GB_Tree_10_4"."Score_2" AS "Score_2", "GB_Tree_10_4"."Score_3" AS "Score_3", "GB_Tree_10_4"."Score_4" AS "Score_4", "GB_Tree_10_4"."Score_5" AS "Score_5", "GB_Tree_10_4"."Score_6" AS "Score_6", "GB_Tree_10_4"."Score_7" AS "Score_7", "GB_Tree_10_4"."Score_8" AS "Score_8", "GB_Tree_10_4"."Score_9" AS "Score_9" 
FROM "GB_Tree_10_4" UNION ALL SELECT "GB_Tree_10_5"."KEY" AS "KEY", "GB_Tree_10_5"."Score_0" AS "Score_0", "GB_Tree_10_5"."Score_1" AS "Score_1", "GB_Tree_10_5"."Score_2" AS "Score_2", "GB_Tree_10_5"."Score_3" AS "Score_3", "GB_Tree_10_5"."Score_4" AS "Score_4", "GB_Tree_10_5"."Score_5" AS "Score_5", "GB_Tree_10_5"."Score_6" AS "Score_6", "GB_Tree_10_5"."Score_7" AS "Score_7", "GB_Tree_10_5"."Score_8" AS "Score_8", "GB_Tree_10_5"."Score_9" AS "Score_9" 
FROM "GB_Tree_10_5" UNION ALL SELECT "GB_Tree_10_6"."KEY" AS "KEY", "GB_Tree_10_6"."Score_0" AS "Score_0", "GB_Tree_10_6"."Score_1" AS "Score_1", "GB_Tree_10_6"."Score_2" AS "Score_2", "GB_Tree_10_6"."Score_3" AS "Score_3", "GB_Tree_10_6"."Score_4" AS "Score_4", "GB_Tree_10_6"."Score_5" AS "Score_5", "GB_Tree_10_6"."Score_6" AS "Score_6", "GB_Tree_10_6"."Score_7" AS "Score_7", "GB_Tree_10_6"."Score_8" AS "Score_8", "GB_Tree_10_6"."Score_9" AS "Score_9" 
FROM "GB_Tree_10_6" UNION ALL SELECT "GB_Tree_10_7"."KEY" AS "KEY", "GB_Tree_10_7"."Score_0" AS "Score_0", "GB_Tree_10_7"."Score_1" AS "Score_1", "GB_Tree_10_7"."Score_2" AS "Score_2", "GB_Tree_10_7"."Score_3" AS "Score_3", "GB_Tree_10_7"."Score_4" AS "Score_4", "GB_Tree_10_7"."Score_5" AS "Score_5", "GB_Tree_10_7"."Score_6" AS "Score_6", "GB_Tree_10_7"."Score_7" AS "Score_7", "GB_Tree_10_7"."Score_8" AS "Score_8", "GB_Tree_10_7"."Score_9" AS "Score_9" 
FROM "GB_Tree_10_7" UNION ALL SELECT "GB_Tree_10_8"."KEY" AS "KEY", "GB_Tree_10_8"."Score_0" AS "Score_0", "GB_Tree_10_8"."Score_1" AS "Score_1", "GB_Tree_10_8"."Score_2" AS "Score_2", "GB_Tree_10_8"."Score_3" AS "Score_3", "GB_Tree_10_8"."Score_4" AS "Score_4", "GB_Tree_10_8"."Score_5" AS "Score_5", "GB_Tree_10_8"."Score_6" AS "Score_6", "GB_Tree_10_8"."Score_7" AS "Score_7", "GB_Tree_10_8"."Score_8" AS "Score_8", "GB_Tree_10_8"."Score_9" AS "Score_9" 
FROM "GB_Tree_10_8" UNION ALL SELECT "GB_Tree_10_9"."KEY" AS "KEY", "GB_Tree_10_9"."Score_0" AS "Score_0", "GB_Tree_10_9"."Score_1" AS "Score_1", "GB_Tree_10_9"."Score_2" AS "Score_2", "GB_Tree_10_9"."Score_3" AS "Score_3", "GB_Tree_10_9"."Score_4" AS "Score_4", "GB_Tree_10_9"."Score_5" AS "Score_5", "GB_Tree_10_9"."Score_6" AS "Score_6", "GB_Tree_10_9"."Score_7" AS "Score_7", "GB_Tree_10_9"."Score_8" AS "Score_8", "GB_Tree_10_9"."Score_9" AS "Score_9" 
FROM "GB_Tree_10_9" UNION ALL SELECT "GB_Tree_11_0"."KEY" AS "KEY", "GB_Tree_11_0"."Score_0" AS "Score_0", "GB_Tree_11_0"."Score_1" AS "Score_1", "GB_Tree_11_0"."Score_2" AS "Score_2", "GB_Tree_11_0"."Score_3" AS "Score_3", "GB_Tree_11_0"."Score_4" AS "Score_4", "GB_Tree_11_0"."Score_5" AS "Score_5", "GB_Tree_11_0"."Score_6" AS "Score_6", "GB_Tree_11_0"."Score_7" AS "Score_7", "GB_Tree_11_0"."Score_8" AS "Score_8", "GB_Tree_11_0"."Score_9" AS "Score_9" 
FROM "GB_Tree_11_0" UNION ALL SELECT "GB_Tree_11_1"."KEY" AS "KEY", "GB_Tree_11_1"."Score_0" AS "Score_0", "GB_Tree_11_1"."Score_1" AS "Score_1", "GB_Tree_11_1"."Score_2" AS "Score_2", "GB_Tree_11_1"."Score_3" AS "Score_3", "GB_Tree_11_1"."Score_4" AS "Score_4", "GB_Tree_11_1"."Score_5" AS "Score_5", "GB_Tree_11_1"."Score_6" AS "Score_6", "GB_Tree_11_1"."Score_7" AS "Score_7", "GB_Tree_11_1"."Score_8" AS "Score_8", "GB_Tree_11_1"."Score_9" AS "Score_9" 
FROM "GB_Tree_11_1") AS "Score_Union_CTE_esu_13"), 
"Score_Union_CTE_14" AS 
(WITH "DT_node_lookup_112" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_62" <= 2.5) THEN CASE WHEN ("ADS"."Feature_51" <= 15.5) THEN CASE WHEN ("ADS"."Feature_50" <= 15.5) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_34" <= 0.5) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_58" <= 10.5) THEN CASE WHEN ("ADS"."Feature_61" <= 10.5) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_38" <= 0.5) THEN 13 ELSE 14 END END END AS node_id_2 
FROM digits AS "ADS"), 
"DT_node_data_112" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 848 AS count, 3 AS depth, 2 AS parent_id, -0.8433934952315802 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 87 AS count, 3 AS depth, 2 AS parent_id, 0.19730734679184217 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 26 AS count, 3 AS depth, 5 AS parent_id, 1.4800353742953882 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 148 AS count, 3 AS depth, 5 AS parent_id, -0.5013102170550857 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 14 AS count, 3 AS depth, 9 AS parent_id, 1.4286756789090147 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 232 AS count, 3 AS depth, 9 AS parent_id, -0.004942163977892218 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 67 AS count, 3 AS depth, 12 AS parent_id, 1.3501500111972269 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 15 AS count, 3 AS depth, 12 AS parent_id, -0.1266401993040907 AS "Estimator") AS "Values"), 
"DT_Output_112" AS 
(SELECT "DT_node_lookup_112"."KEY" AS "KEY", "DT_node_lookup_112".node_id_2 AS node_id_2, "DT_node_data_112".node_id AS node_id, "DT_node_data_112".feature AS feature, "DT_node_data_112".threshold AS threshold, "DT_node_data_112".count AS count, "DT_node_data_112".depth AS depth, "DT_node_data_112".parent_id AS parent_id, "DT_node_data_112"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_112" LEFT OUTER JOIN "DT_node_data_112" ON "DT_node_lookup_112".node_id_2 = "DT_node_data_112".node_id), 
"GB_Tree_11_2" AS 
(SELECT "DT_Output_112"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", "DT_Output_112"."Estimator" AS "Score_2", 0.0 AS "Score_3", 0.0 AS "Score_4", 0.0 AS "Score_5", 0.0 AS "Score_6", 0.0 AS "Score_7", 0.0 AS "Score_8", 0.0 AS "Score_9" 
FROM "DT_Output_112"), 
"DT_node_lookup_113" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_26" <= 5.5) THEN CASE WHEN ("ADS"."Feature_43" <= 1.5) THEN CASE WHEN ("ADS"."Feature_30" <= 1.5) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_18" <= 0.5) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_12" <= 15.5) THEN CASE WHEN ("ADS"."Feature_62" <= 8.5) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_46" <= 13.0) THEN 13 ELSE 14 END END END AS node_id_2 
FROM digits AS "ADS"), 
"DT_node_data_113" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 143 AS count, 3 AS depth, 2 AS parent_id, 1.108574158936857 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 33 AS count, 3 AS depth, 2 AS parent_id, -0.7954660308987224 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 85 AS count, 3 AS depth, 5 AS parent_id, 0.7553580870764238 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 224 AS count, 3 AS depth, 5 AS parent_id, -0.705573721548538 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 720 AS count, 3 AS depth, 9 AS parent_id, -0.9085533076095157 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 61 AS count, 3 AS depth, 9 AS parent_id, 0.2286416310920236 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 170 AS count, 3 AS depth, 12 AS parent_id, -0.08708423797371705 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 12 AS parent_id, 8.646961282582028 AS "Estimator") AS "Values"), 
"DT_Output_113" AS 
(SELECT "DT_node_lookup_113"."KEY" AS "KEY", "DT_node_lookup_113".node_id_2 AS node_id_2, "DT_node_data_113".node_id AS node_id, "DT_node_data_113".feature AS feature, "DT_node_data_113".threshold AS threshold, "DT_node_data_113".count AS count, "DT_node_data_113".depth AS depth, "DT_node_data_113".parent_id AS parent_id, "DT_node_data_113"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_113" LEFT OUTER JOIN "DT_node_data_113" ON "DT_node_lookup_113".node_id_2 = "DT_node_data_113".node_id), 
"GB_Tree_11_3" AS 
(SELECT "DT_Output_113"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", "DT_Output_113"."Estimator" AS "Score_3", 0.0 AS "Score_4", 0.0 AS "Score_5", 0.0 AS "Score_6", 0.0 AS "Score_7", 0.0 AS "Score_8", 0.0 AS "Score_9" 
FROM "DT_Output_113"), 
"DT_node_lookup_114" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_41" <= 8.5) THEN CASE WHEN ("ADS"."Feature_33" <= 3.5) THEN CASE WHEN ("ADS"."Feature_31" <= 0.5) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_44" <= 12.5) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_26" <= 1.5) THEN CASE WHEN ("ADS"."Feature_59" <= 2.0) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_33" <= 2.5) THEN 13 ELSE 14 END END END AS node_id_2 
FROM digits AS "ADS"), 
"DT_node_data_114" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1012 AS count, 3 AS depth, 2 AS parent_id, -0.7826877278069654 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 2 AS parent_id, 3.9731676313970827 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 246 AS count, 3 AS depth, 5 AS parent_id, -0.5277524725535577 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 115 AS count, 3 AS depth, 5 AS parent_id, 1.2668288540004091 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 9 AS parent_id, -0.9310836403801978 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 3 AS depth, 9 AS parent_id, -0.9248744441645524 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 3 AS depth, 12 AS parent_id, 2.141752560265157 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 56 AS count, 3 AS depth, 12 AS parent_id, 1.1693813247213973 AS "Estimator") AS "Values"), 
"DT_Output_114" AS 
(SELECT "DT_node_lookup_114"."KEY" AS "KEY", "DT_node_lookup_114".node_id_2 AS node_id_2, "DT_node_data_114".node_id AS node_id, "DT_node_data_114".feature AS feature, "DT_node_data_114".threshold AS threshold, "DT_node_data_114".count AS count, "DT_node_data_114".depth AS depth, "DT_node_data_114".parent_id AS parent_id, "DT_node_data_114"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_114" LEFT OUTER JOIN "DT_node_data_114" ON "DT_node_lookup_114".node_id_2 = "DT_node_data_114".node_id), 
"GB_Tree_11_4" AS 
(SELECT "DT_Output_114"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3", "DT_Output_114"."Estimator" AS "Score_4", 0.0 AS "Score_5", 0.0 AS "Score_6", 0.0 AS "Score_7", 0.0 AS "Score_8", 0.0 AS "Score_9" 
FROM "DT_Output_114"), 
"DT_node_lookup_115" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_21" <= 0.5) THEN CASE WHEN ("ADS"."Feature_5" <= 2.5) THEN CASE WHEN ("ADS"."Feature_29" <= 11.5) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_42" <= 9.5) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_6" <= 1.5) THEN CASE WHEN ("ADS"."Feature_1" <= 5.0) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_13" <= 6.5) THEN 13 ELSE 14 END END END AS node_id_2 
FROM digits AS "ADS"), 
"DT_node_data_115" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 212 AS count, 3 AS depth, 2 AS parent_id, -0.8377893437801575 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 9 AS count, 3 AS depth, 2 AS parent_id, 1.5246246971374233 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 125 AS count, 3 AS depth, 5 AS parent_id, 1.197049641103991 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 47 AS count, 3 AS depth, 5 AS parent_id, -0.11632478725875406 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 837 AS count, 3 AS depth, 9 AS parent_id, -0.8471257220289641 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 3 AS depth, 9 AS parent_id, 0.7154371034492629 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 16 AS count, 3 AS depth, 12 AS parent_id, 2.44531504346079 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 188 AS count, 3 AS depth, 12 AS parent_id, -0.5148818837196668 AS "Estimator") AS "Values"), 
"DT_Output_115" AS 
(SELECT "DT_node_lookup_115"."KEY" AS "KEY", "DT_node_lookup_115".node_id_2 AS node_id_2, "DT_node_data_115".node_id AS node_id, "DT_node_data_115".feature AS feature, "DT_node_data_115".threshold AS threshold, "DT_node_data_115".count AS count, "DT_node_data_115".depth AS depth, "DT_node_data_115".parent_id AS parent_id, "DT_node_data_115"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_115" LEFT OUTER JOIN "DT_node_data_115" ON "DT_node_lookup_115".node_id_2 = "DT_node_data_115".node_id), 
"GB_Tree_11_5" AS 
(SELECT "DT_Output_115"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3", 0.0 AS "Score_4", "DT_Output_115"."Estimator" AS "Score_5", 0.0 AS "Score_6", 0.0 AS "Score_7", 0.0 AS "Score_8", 0.0 AS "Score_9" 
FROM "DT_Output_115"), 
"DT_node_lookup_116" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_21" <= 0.5) THEN CASE WHEN ("ADS"."Feature_42" <= 14.5) THEN CASE WHEN ("ADS"."Feature_2" <= 1.5) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_61" <= 4.0) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_33" <= 6.5) THEN CASE WHEN ("ADS"."Feature_46" <= 14.5) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_29" <= 0.5) THEN 13 ELSE 14 END END END AS node_id_2 
FROM digits AS "ADS"), 
"DT_node_data_116" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 66 AS count, 3 AS depth, 2 AS parent_id, 0.8404715921667772 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 210 AS count, 3 AS depth, 2 AS parent_id, -0.8659666803640936 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 13 AS count, 3 AS depth, 5 AS parent_id, -1.0314761255762066 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 104 AS count, 3 AS depth, 5 AS parent_id, 1.1561780012015728 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 869 AS count, 3 AS depth, 9 AS parent_id, -0.9337851032001903 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 9 AS count, 3 AS depth, 9 AS parent_id, 0.27562389573512663 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS count, 3 AS depth, 12 AS parent_id, 2.1478600885477164 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 161 AS count, 3 AS depth, 12 AS parent_id, -0.557036626028338 AS "Estimator") AS "Values"), 
"DT_Output_116" AS 
(SELECT "DT_node_lookup_116"."KEY" AS "KEY", "DT_node_lookup_116".node_id_2 AS node_id_2, "DT_node_data_116".node_id AS node_id, "DT_node_data_116".feature AS feature, "DT_node_data_116".threshold AS threshold, "DT_node_data_116".count AS count, "DT_node_data_116".depth AS depth, "DT_node_data_116".parent_id AS parent_id, "DT_node_data_116"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_116" LEFT OUTER JOIN "DT_node_data_116" ON "DT_node_lookup_116".node_id_2 = "DT_node_data_116".node_id), 
"GB_Tree_11_6" AS 
(SELECT "DT_Output_116"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3", 0.0 AS "Score_4", 0.0 AS "Score_5", "DT_Output_116"."Estimator" AS "Score_6", 0.0 AS "Score_7", 0.0 AS "Score_8", 0.0 AS "Score_9" 
FROM "DT_Output_116"), 
"DT_node_lookup_117" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_53" <= 0.5) THEN CASE WHEN ("ADS"."Feature_29" <= 9.5) THEN CASE WHEN ("ADS"."Feature_52" <= 0.5) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_26" <= 12.5) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_7" <= 1.5) THEN CASE WHEN ("ADS"."Feature_22" <= 7.5) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_36" <= 15.0) THEN 13 ELSE 14 END END END AS node_id_2 
FROM digits AS "ADS"), 
"DT_node_data_117" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 17 AS count, 3 AS depth, 2 AS parent_id, 1.177237561634139 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 123 AS count, 3 AS depth, 2 AS parent_id, -0.44857398659198744 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 99 AS count, 3 AS depth, 5 AS parent_id, 1.3596157522640688 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 52 AS count, 3 AS depth, 5 AS parent_id, 0.1419534180751051 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1058 AS count, 3 AS depth, 9 AS parent_id, -0.8590666042825655 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 80 AS count, 3 AS depth, 9 AS parent_id, -0.05230357440773829 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS count, 3 AS depth, 12 AS parent_id, -1.0062467562496684 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS count, 3 AS depth, 12 AS parent_id, 1.6107558697536577 AS "Estimator") AS "Values"), 
"DT_Output_117" AS 
(SELECT "DT_node_lookup_117"."KEY" AS "KEY", "DT_node_lookup_117".node_id_2 AS node_id_2, "DT_node_data_117".node_id AS node_id, "DT_node_data_117".feature AS feature, "DT_node_data_117".threshold AS threshold, "DT_node_data_117".count AS count, "DT_node_data_117".depth AS depth, "DT_node_data_117".parent_id AS parent_id, "DT_node_data_117"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_117" LEFT OUTER JOIN "DT_node_data_117" ON "DT_node_lookup_117".node_id_2 = "DT_node_data_117".node_id), 
"GB_Tree_11_7" AS 
(SELECT "DT_Output_117"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3", 0.0 AS "Score_4", 0.0 AS "Score_5", 0.0 AS "Score_6", "DT_Output_117"."Estimator" AS "Score_7", 0.0 AS "Score_8", 0.0 AS "Score_9" 
FROM "DT_Output_117"), 
"DT_node_lookup_118" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_27" <= 10.5) THEN CASE WHEN ("ADS"."Feature_26" <= 9.5) THEN CASE WHEN ("ADS"."Feature_10" <= 2.5) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_33" <= 1.5) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_42" <= 3.5) THEN CASE WHEN ("ADS"."Feature_43" <= 7.5) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_51" <= 13.5) THEN 13 ELSE 14 END END END AS node_id_2 
FROM digits AS "ADS"), 
"DT_node_data_118" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 17 AS count, 3 AS depth, 2 AS parent_id, 0.24229261314427383 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 336 AS count, 3 AS depth, 2 AS parent_id, -0.8808710196818874 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 91 AS count, 3 AS depth, 5 AS parent_id, 0.8871299523898739 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 306 AS count, 3 AS depth, 5 AS parent_id, -0.9587850519864378 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 273 AS count, 3 AS depth, 9 AS parent_id, -0.9664335236102989 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 98 AS count, 3 AS depth, 9 AS parent_id, 0.3311634330541061 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 178 AS count, 3 AS depth, 12 AS parent_id, 1.1201790048546578 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 138 AS count, 3 AS depth, 12 AS parent_id, -0.40603325428963893 AS "Estimator") AS "Values"), 
"DT_Output_118" AS 
(SELECT "DT_node_lookup_118"."KEY" AS "KEY", "DT_node_lookup_118".node_id_2 AS node_id_2, "DT_node_data_118".node_id AS node_id, "DT_node_data_118".feature AS feature, "DT_node_data_118".threshold AS threshold, "DT_node_data_118".count AS count, "DT_node_data_118".depth AS depth, "DT_node_data_118".parent_id AS parent_id, "DT_node_data_118"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_118" LEFT OUTER JOIN "DT_node_data_118" ON "DT_node_lookup_118".node_id_2 = "DT_node_data_118".node_id), 
"GB_Tree_11_8" AS 
(SELECT "DT_Output_118"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3", 0.0 AS "Score_4", 0.0 AS "Score_5", 0.0 AS "Score_6", 0.0 AS "Score_7", "DT_Output_118"."Estimator" AS "Score_8", 0.0 AS "Score_9" 
FROM "DT_Output_118"), 
"DT_node_lookup_119" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_21" <= 10.5) THEN CASE WHEN ("ADS"."Feature_54" <= 13.5) THEN CASE WHEN ("ADS"."Feature_17" <= 14.5) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_36" <= 3.5) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_42" <= 4.5) THEN CASE WHEN ("ADS"."Feature_36" <= 10.5) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_20" <= 12.5) THEN 13 ELSE 14 END END END AS node_id_2 
FROM digits AS "ADS"), 
"DT_node_data_119" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 723 AS count, 3 AS depth, 2 AS parent_id, -0.8427567624280173 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 7 AS count, 3 AS depth, 2 AS parent_id, 1.5163946644023811 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 6 AS count, 3 AS depth, 5 AS parent_id, 2.3725587576200167 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 79 AS count, 3 AS depth, 5 AS parent_id, -0.4257705238256579 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 145 AS count, 3 AS depth, 9 AS parent_id, 1.1273396338864416 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 185 AS count, 3 AS depth, 9 AS parent_id, 0.05728931508933373 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 248 AS count, 3 AS depth, 12 AS parent_id, -0.8896419069640297 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 44 AS count, 3 AS depth, 12 AS parent_id, 0.3079075992762405 AS "Estimator") AS "Values"), 
"DT_Output_119" AS 
(SELECT "DT_node_lookup_119"."KEY" AS "KEY", "DT_node_lookup_119".node_id_2 AS node_id_2, "DT_node_data_119".node_id AS node_id, "DT_node_data_119".feature AS feature, "DT_node_data_119".threshold AS threshold, "DT_node_data_119".count AS count, "DT_node_data_119".depth AS depth, "DT_node_data_119".parent_id AS parent_id, "DT_node_data_119"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_119" LEFT OUTER JOIN "DT_node_data_119" ON "DT_node_lookup_119".node_id_2 = "DT_node_data_119".node_id), 
"GB_Tree_11_9" AS 
(SELECT "DT_Output_119"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3", 0.0 AS "Score_4", 0.0 AS "Score_5", 0.0 AS "Score_6", 0.0 AS "Score_7", 0.0 AS "Score_8", "DT_Output_119"."Estimator" AS "Score_9" 
FROM "DT_Output_119")
 SELECT "Score_Union_CTE_esu_14"."KEY", "Score_Union_CTE_esu_14"."Score_0", "Score_Union_CTE_esu_14"."Score_1", "Score_Union_CTE_esu_14"."Score_2", "Score_Union_CTE_esu_14"."Score_3", "Score_Union_CTE_esu_14"."Score_4", "Score_Union_CTE_esu_14"."Score_5", "Score_Union_CTE_esu_14"."Score_6", "Score_Union_CTE_esu_14"."Score_7", "Score_Union_CTE_esu_14"."Score_8", "Score_Union_CTE_esu_14"."Score_9" 
FROM (SELECT "GB_Tree_11_2"."KEY" AS "KEY", "GB_Tree_11_2"."Score_0" AS "Score_0", "GB_Tree_11_2"."Score_1" AS "Score_1", "GB_Tree_11_2"."Score_2" AS "Score_2", "GB_Tree_11_2"."Score_3" AS "Score_3", "GB_Tree_11_2"."Score_4" AS "Score_4", "GB_Tree_11_2"."Score_5" AS "Score_5", "GB_Tree_11_2"."Score_6" AS "Score_6", "GB_Tree_11_2"."Score_7" AS "Score_7", "GB_Tree_11_2"."Score_8" AS "Score_8", "GB_Tree_11_2"."Score_9" AS "Score_9" 
FROM "GB_Tree_11_2" UNION ALL SELECT "GB_Tree_11_3"."KEY" AS "KEY", "GB_Tree_11_3"."Score_0" AS "Score_0", "GB_Tree_11_3"."Score_1" AS "Score_1", "GB_Tree_11_3"."Score_2" AS "Score_2", "GB_Tree_11_3"."Score_3" AS "Score_3", "GB_Tree_11_3"."Score_4" AS "Score_4", "GB_Tree_11_3"."Score_5" AS "Score_5", "GB_Tree_11_3"."Score_6" AS "Score_6", "GB_Tree_11_3"."Score_7" AS "Score_7", "GB_Tree_11_3"."Score_8" AS "Score_8", "GB_Tree_11_3"."Score_9" AS "Score_9" 
FROM "GB_Tree_11_3" UNION ALL SELECT "GB_Tree_11_4"."KEY" AS "KEY", "GB_Tree_11_4"."Score_0" AS "Score_0", "GB_Tree_11_4"."Score_1" AS "Score_1", "GB_Tree_11_4"."Score_2" AS "Score_2", "GB_Tree_11_4"."Score_3" AS "Score_3", "GB_Tree_11_4"."Score_4" AS "Score_4", "GB_Tree_11_4"."Score_5" AS "Score_5", "GB_Tree_11_4"."Score_6" AS "Score_6", "GB_Tree_11_4"."Score_7" AS "Score_7", "GB_Tree_11_4"."Score_8" AS "Score_8", "GB_Tree_11_4"."Score_9" AS "Score_9" 
FROM "GB_Tree_11_4" UNION ALL SELECT "GB_Tree_11_5"."KEY" AS "KEY", "GB_Tree_11_5"."Score_0" AS "Score_0", "GB_Tree_11_5"."Score_1" AS "Score_1", "GB_Tree_11_5"."Score_2" AS "Score_2", "GB_Tree_11_5"."Score_3" AS "Score_3", "GB_Tree_11_5"."Score_4" AS "Score_4", "GB_Tree_11_5"."Score_5" AS "Score_5", "GB_Tree_11_5"."Score_6" AS "Score_6", "GB_Tree_11_5"."Score_7" AS "Score_7", "GB_Tree_11_5"."Score_8" AS "Score_8", "GB_Tree_11_5"."Score_9" AS "Score_9" 
FROM "GB_Tree_11_5" UNION ALL SELECT "GB_Tree_11_6"."KEY" AS "KEY", "GB_Tree_11_6"."Score_0" AS "Score_0", "GB_Tree_11_6"."Score_1" AS "Score_1", "GB_Tree_11_6"."Score_2" AS "Score_2", "GB_Tree_11_6"."Score_3" AS "Score_3", "GB_Tree_11_6"."Score_4" AS "Score_4", "GB_Tree_11_6"."Score_5" AS "Score_5", "GB_Tree_11_6"."Score_6" AS "Score_6", "GB_Tree_11_6"."Score_7" AS "Score_7", "GB_Tree_11_6"."Score_8" AS "Score_8", "GB_Tree_11_6"."Score_9" AS "Score_9" 
FROM "GB_Tree_11_6" UNION ALL SELECT "GB_Tree_11_7"."KEY" AS "KEY", "GB_Tree_11_7"."Score_0" AS "Score_0", "GB_Tree_11_7"."Score_1" AS "Score_1", "GB_Tree_11_7"."Score_2" AS "Score_2", "GB_Tree_11_7"."Score_3" AS "Score_3", "GB_Tree_11_7"."Score_4" AS "Score_4", "GB_Tree_11_7"."Score_5" AS "Score_5", "GB_Tree_11_7"."Score_6" AS "Score_6", "GB_Tree_11_7"."Score_7" AS "Score_7", "GB_Tree_11_7"."Score_8" AS "Score_8", "GB_Tree_11_7"."Score_9" AS "Score_9" 
FROM "GB_Tree_11_7" UNION ALL SELECT "GB_Tree_11_8"."KEY" AS "KEY", "GB_Tree_11_8"."Score_0" AS "Score_0", "GB_Tree_11_8"."Score_1" AS "Score_1", "GB_Tree_11_8"."Score_2" AS "Score_2", "GB_Tree_11_8"."Score_3" AS "Score_3", "GB_Tree_11_8"."Score_4" AS "Score_4", "GB_Tree_11_8"."Score_5" AS "Score_5", "GB_Tree_11_8"."Score_6" AS "Score_6", "GB_Tree_11_8"."Score_7" AS "Score_7", "GB_Tree_11_8"."Score_8" AS "Score_8", "GB_Tree_11_8"."Score_9" AS "Score_9" 
FROM "GB_Tree_11_8" UNION ALL SELECT "GB_Tree_11_9"."KEY" AS "KEY", "GB_Tree_11_9"."Score_0" AS "Score_0", "GB_Tree_11_9"."Score_1" AS "Score_1", "GB_Tree_11_9"."Score_2" AS "Score_2", "GB_Tree_11_9"."Score_3" AS "Score_3", "GB_Tree_11_9"."Score_4" AS "Score_4", "GB_Tree_11_9"."Score_5" AS "Score_5", "GB_Tree_11_9"."Score_6" AS "Score_6", "GB_Tree_11_9"."Score_7" AS "Score_7", "GB_Tree_11_9"."Score_8" AS "Score_8", "GB_Tree_11_9"."Score_9" AS "Score_9" 
FROM "GB_Tree_11_9") AS "Score_Union_CTE_esu_14"), 
"Score_Union_CTE_15" AS 
(WITH "DT_node_lookup_120" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_36" <= 0.5) THEN CASE WHEN ("ADS"."Feature_28" <= 2.5) THEN CASE WHEN ("ADS"."Feature_43" <= 9.5) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_2" <= 0.5) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_28" <= 0.5) THEN CASE WHEN ("ADS"."Feature_21" <= 12.5) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_18" <= 6.5) THEN 13 ELSE 14 END END END AS node_id_2 
FROM digits AS "ADS"), 
"DT_node_data_120" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 134 AS count, 3 AS depth, 2 AS parent_id, 1.0964490193719898 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 12 AS count, 3 AS depth, 2 AS parent_id, -0.40717165881379297 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 6 AS count, 3 AS depth, 5 AS parent_id, 0.9307421394718831 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 67 AS count, 3 AS depth, 5 AS parent_id, -0.9758313233317492 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 104 AS count, 3 AS depth, 9 AS parent_id, -0.9227452275688652 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 7 AS count, 3 AS depth, 9 AS parent_id, 0.7296804389130693 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 384 AS count, 3 AS depth, 12 AS parent_id, -0.9238689503855095 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 723 AS count, 3 AS depth, 12 AS parent_id, -0.9313883957428618 AS "Estimator") AS "Values"), 
"DT_Output_120" AS 
(SELECT "DT_node_lookup_120"."KEY" AS "KEY", "DT_node_lookup_120".node_id_2 AS node_id_2, "DT_node_data_120".node_id AS node_id, "DT_node_data_120".feature AS feature, "DT_node_data_120".threshold AS threshold, "DT_node_data_120".count AS count, "DT_node_data_120".depth AS depth, "DT_node_data_120".parent_id AS parent_id, "DT_node_data_120"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_120" LEFT OUTER JOIN "DT_node_data_120" ON "DT_node_lookup_120".node_id_2 = "DT_node_data_120".node_id), 
"GB_Tree_12_0" AS 
(SELECT "DT_Output_120"."KEY" AS "KEY", "DT_Output_120"."Estimator" AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3", 0.0 AS "Score_4", 0.0 AS "Score_5", 0.0 AS "Score_6", 0.0 AS "Score_7", 0.0 AS "Score_8", 0.0 AS "Score_9" 
FROM "DT_Output_120"), 
"DT_node_lookup_121" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_12" <= 15.5) THEN CASE WHEN ("ADS"."Feature_63" <= 7.5) THEN CASE WHEN ("ADS"."Feature_3" <= 0.5) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_19" <= 13.0) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_19" <= 10.5) THEN CASE WHEN ("ADS"."Feature_11" <= 1.5) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_38" <= 0.5) THEN 13 ELSE 14 END END END AS node_id_2 
FROM digits AS "ADS"), 
"DT_node_data_121" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 19 AS count, 3 AS depth, 2 AS parent_id, 0.8692231816632766 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1110 AS count, 3 AS depth, 2 AS parent_id, -0.7107025651742804 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 10 AS count, 3 AS depth, 5 AS parent_id, -0.9307223542516472 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 17 AS count, 3 AS depth, 5 AS parent_id, 1.3862152371679488 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 3 AS depth, 9 AS parent_id, 1.479279191418707 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 121 AS count, 3 AS depth, 9 AS parent_id, -0.7938368700695659 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 114 AS count, 3 AS depth, 12 AS parent_id, 1.1800497825685248 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 44 AS count, 3 AS depth, 12 AS parent_id, -0.04086115942727123 AS "Estimator") AS "Values"), 
"DT_Output_121" AS 
(SELECT "DT_node_lookup_121"."KEY" AS "KEY", "DT_node_lookup_121".node_id_2 AS node_id_2, "DT_node_data_121".node_id AS node_id, "DT_node_data_121".feature AS feature, "DT_node_data_121".threshold AS threshold, "DT_node_data_121".count AS count, "DT_node_data_121".depth AS depth, "DT_node_data_121".parent_id AS parent_id, "DT_node_data_121"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_121" LEFT OUTER JOIN "DT_node_data_121" ON "DT_node_lookup_121".node_id_2 = "DT_node_data_121".node_id), 
"GB_Tree_12_1" AS 
(SELECT "DT_Output_121"."KEY" AS "KEY", 0.0 AS "Score_0", "DT_Output_121"."Estimator" AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3", 0.0 AS "Score_4", 0.0 AS "Score_5", 0.0 AS "Score_6", 0.0 AS "Score_7", 0.0 AS "Score_8", 0.0 AS "Score_9" 
FROM "DT_Output_121"), 
"DT_node_lookup_122" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_26" <= 3.5) THEN CASE WHEN ("ADS"."Feature_37" <= 1.5) THEN CASE WHEN ("ADS"."Feature_44" <= 8.5) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_27" <= 0.5) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_45" <= 3.5) THEN CASE WHEN ("ADS"."Feature_53" <= 13.5) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_37" <= 1.5) THEN 13 ELSE 14 END END END AS node_id_2 
FROM digits AS "ADS"), 
"DT_node_data_122" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 66 AS count, 3 AS depth, 2 AS parent_id, 1.3822134891899454 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 40 AS count, 3 AS depth, 2 AS parent_id, 0.025781724302954515 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 58 AS count, 3 AS depth, 5 AS parent_id, 1.1779996498483019 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 241 AS count, 3 AS depth, 5 AS parent_id, -0.5013544260794925 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 229 AS count, 3 AS depth, 9 AS parent_id, -0.25093574593723317 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 12 AS count, 3 AS depth, 9 AS parent_id, 1.5627068521176246 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 42 AS count, 3 AS depth, 12 AS parent_id, -1.0421969726380726 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 749 AS count, 3 AS depth, 12 AS parent_id, -0.8647076132874084 AS "Estimator") AS "Values"), 
"DT_Output_122" AS 
(SELECT "DT_node_lookup_122"."KEY" AS "KEY", "DT_node_lookup_122".node_id_2 AS node_id_2, "DT_node_data_122".node_id AS node_id, "DT_node_data_122".feature AS feature, "DT_node_data_122".threshold AS threshold, "DT_node_data_122".count AS count, "DT_node_data_122".depth AS depth, "DT_node_data_122".parent_id AS parent_id, "DT_node_data_122"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_122" LEFT OUTER JOIN "DT_node_data_122" ON "DT_node_lookup_122".node_id_2 = "DT_node_data_122".node_id), 
"GB_Tree_12_2" AS 
(SELECT "DT_Output_122"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", "DT_Output_122"."Estimator" AS "Score_2", 0.0 AS "Score_3", 0.0 AS "Score_4", 0.0 AS "Score_5", 0.0 AS "Score_6", 0.0 AS "Score_7", 0.0 AS "Score_8", 0.0 AS "Score_9" 
FROM "DT_Output_122"), 
"DT_node_lookup_123" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_18" <= 0.5) THEN CASE WHEN ("ADS"."Feature_2" <= 5.5) THEN CASE WHEN ("ADS"."Feature_44" <= 3.0) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_50" <= 2.5) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_43" <= 1.5) THEN CASE WHEN ("ADS"."Feature_26" <= 6.5) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_53" <= 15.5) THEN 13 ELSE 14 END END END AS node_id_2 
FROM digits AS "ADS"), 
"DT_node_data_123" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS count, 3 AS depth, 2 AS parent_id, 1.4252889068973045 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 71 AS count, 3 AS depth, 2 AS parent_id, -0.8766171419319225 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 15 AS count, 3 AS depth, 5 AS parent_id, 2.6613519139730992 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 77 AS count, 3 AS depth, 5 AS parent_id, 0.9051540281311848 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 136 AS count, 3 AS depth, 9 AS parent_id, 0.7873415673727956 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 328 AS count, 3 AS depth, 9 AS parent_id, -0.44811494940415364 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 698 AS count, 3 AS depth, 12 AS parent_id, -0.9266665400893425 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 107 AS count, 3 AS depth, 12 AS parent_id, -0.14148212402658786 AS "Estimator") AS "Values"), 
"DT_Output_123" AS 
(SELECT "DT_node_lookup_123"."KEY" AS "KEY", "DT_node_lookup_123".node_id_2 AS node_id_2, "DT_node_data_123".node_id AS node_id, "DT_node_data_123".feature AS feature, "DT_node_data_123".threshold AS threshold, "DT_node_data_123".count AS count, "DT_node_data_123".depth AS depth, "DT_node_data_123".parent_id AS parent_id, "DT_node_data_123"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_123" LEFT OUTER JOIN "DT_node_data_123" ON "DT_node_lookup_123".node_id_2 = "DT_node_data_123".node_id), 
"GB_Tree_12_3" AS 
(SELECT "DT_Output_123"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", "DT_Output_123"."Estimator" AS "Score_3", 0.0 AS "Score_4", 0.0 AS "Score_5", 0.0 AS "Score_6", 0.0 AS "Score_7", 0.0 AS "Score_8", 0.0 AS "Score_9" 
FROM "DT_Output_123"), 
"DT_node_lookup_124" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_41" <= 8.5) THEN CASE WHEN ("ADS"."Feature_33" <= 3.5) THEN CASE WHEN ("ADS"."Feature_31" <= 0.5) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_44" <= 12.5) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_26" <= 1.5) THEN CASE WHEN ("ADS"."Feature_22" <= 9.0) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_33" <= 2.5) THEN 13 ELSE 14 END END END AS node_id_2 
FROM digits AS "ADS"), 
"DT_node_data_124" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1012 AS count, 3 AS depth, 2 AS parent_id, -0.7612680816182706 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 2 AS parent_id, 2.874635013196847 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 246 AS count, 3 AS depth, 5 AS parent_id, -0.491031765750516 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 115 AS count, 3 AS depth, 5 AS parent_id, 1.1467432956803694 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 3 AS depth, 9 AS parent_id, -0.9207220172825918 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 9 AS parent_id, -0.9296942386718471 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 3 AS depth, 12 AS parent_id, 1.8991560265066143 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 56 AS count, 3 AS depth, 12 AS parent_id, 1.1275746521993277 AS "Estimator") AS "Values"), 
"DT_Output_124" AS 
(SELECT "DT_node_lookup_124"."KEY" AS "KEY", "DT_node_lookup_124".node_id_2 AS node_id_2, "DT_node_data_124".node_id AS node_id, "DT_node_data_124".feature AS feature, "DT_node_data_124".threshold AS threshold, "DT_node_data_124".count AS count, "DT_node_data_124".depth AS depth, "DT_node_data_124".parent_id AS parent_id, "DT_node_data_124"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_124" LEFT OUTER JOIN "DT_node_data_124" ON "DT_node_lookup_124".node_id_2 = "DT_node_data_124".node_id), 
"GB_Tree_12_4" AS 
(SELECT "DT_Output_124"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3", "DT_Output_124"."Estimator" AS "Score_4", 0.0 AS "Score_5", 0.0 AS "Score_6", 0.0 AS "Score_7", 0.0 AS "Score_8", 0.0 AS "Score_9" 
FROM "DT_Output_124"), 
"DT_node_lookup_125" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_21" <= 0.5) THEN CASE WHEN ("ADS"."Feature_5" <= 2.5) THEN CASE WHEN ("ADS"."Feature_9" <= 13.5) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_2" <= 1.5) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_36" <= 1.5) THEN CASE WHEN ("ADS"."Feature_13" <= 6.5) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_2" <= 11.5) THEN 13 ELSE 14 END END END AS node_id_2 
FROM digits AS "ADS"), 
"DT_node_data_125" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 219 AS count, 3 AS depth, 2 AS parent_id, -0.7105392863066402 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 3 AS depth, 2 AS parent_id, 1.804173204466446 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 38 AS count, 3 AS depth, 5 AS parent_id, -0.4932850334107973 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 134 AS count, 3 AS depth, 5 AS parent_id, 1.1219107682157063 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 34 AS count, 3 AS depth, 9 AS parent_id, 1.472507122217224 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 189 AS count, 3 AS depth, 9 AS parent_id, -0.7511047172972011 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 728 AS count, 3 AS depth, 12 AS parent_id, -0.9094035162688751 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 93 AS count, 3 AS depth, 12 AS parent_id, -0.19849480677798156 AS "Estimator") AS "Values"), 
"DT_Output_125" AS 
(SELECT "DT_node_lookup_125"."KEY" AS "KEY", "DT_node_lookup_125".node_id_2 AS node_id_2, "DT_node_data_125".node_id AS node_id, "DT_node_data_125".feature AS feature, "DT_node_data_125".threshold AS threshold, "DT_node_data_125".count AS count, "DT_node_data_125".depth AS depth, "DT_node_data_125".parent_id AS parent_id, "DT_node_data_125"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_125" LEFT OUTER JOIN "DT_node_data_125" ON "DT_node_lookup_125".node_id_2 = "DT_node_data_125".node_id), 
"GB_Tree_12_5" AS 
(SELECT "DT_Output_125"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3", 0.0 AS "Score_4", "DT_Output_125"."Estimator" AS "Score_5", 0.0 AS "Score_6", 0.0 AS "Score_7", 0.0 AS "Score_8", 0.0 AS "Score_9" 
FROM "DT_Output_125"), 
"DT_node_lookup_126" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_21" <= 0.5) THEN CASE WHEN ("ADS"."Feature_42" <= 13.5) THEN CASE WHEN ("ADS"."Feature_46" <= 12.5) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_20" <= 8.5) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_42" <= 14.5) THEN CASE WHEN ("ADS"."Feature_46" <= 14.5) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_4" <= 3.5) THEN 13 ELSE 14 END END END AS node_id_2 
FROM digits AS "ADS"), 
"DT_node_data_126" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 238 AS count, 3 AS depth, 2 AS parent_id, -0.3956505597746027 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 17 AS count, 3 AS depth, 2 AS parent_id, 1.0737271828536654 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 126 AS count, 3 AS depth, 5 AS parent_id, 1.064718627734585 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 12 AS count, 3 AS depth, 5 AS parent_id, -1.121295474589527 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 839 AS count, 3 AS depth, 9 AS parent_id, -0.9322994093140843 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 8 AS count, 3 AS depth, 9 AS parent_id, 0.3788286541932263 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 10 AS count, 3 AS depth, 12 AS parent_id, 1.184165504859945 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 187 AS count, 3 AS depth, 12 AS parent_id, -0.6905597734593621 AS "Estimator") AS "Values"), 
"DT_Output_126" AS 
(SELECT "DT_node_lookup_126"."KEY" AS "KEY", "DT_node_lookup_126".node_id_2 AS node_id_2, "DT_node_data_126".node_id AS node_id, "DT_node_data_126".feature AS feature, "DT_node_data_126".threshold AS threshold, "DT_node_data_126".count AS count, "DT_node_data_126".depth AS depth, "DT_node_data_126".parent_id AS parent_id, "DT_node_data_126"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_126" LEFT OUTER JOIN "DT_node_data_126" ON "DT_node_lookup_126".node_id_2 = "DT_node_data_126".node_id), 
"GB_Tree_12_6" AS 
(SELECT "DT_Output_126"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3", 0.0 AS "Score_4", 0.0 AS "Score_5", "DT_Output_126"."Estimator" AS "Score_6", 0.0 AS "Score_7", 0.0 AS "Score_8", 0.0 AS "Score_9" 
FROM "DT_Output_126"), 
"DT_node_lookup_127" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_60" <= 7.5) THEN CASE WHEN ("ADS"."Feature_25" <= 1.5) THEN CASE WHEN ("ADS"."Feature_37" <= 0.5) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_18" <= 5.5) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_7" <= 1.5) THEN CASE WHEN ("ADS"."Feature_60" <= 9.5) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_17" <= 0.5) THEN 13 ELSE 14 END END END AS node_id_2 
FROM digits AS "ADS"), 
"DT_node_data_127" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 29 AS count, 3 AS depth, 2 AS parent_id, -0.5001547531335726 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 121 AS count, 3 AS depth, 2 AS parent_id, 1.1967315924616277 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 12 AS count, 3 AS depth, 5 AS parent_id, 1.1738692986429804 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 98 AS count, 3 AS depth, 5 AS parent_id, -0.4825263787944821 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 86 AS count, 3 AS depth, 9 AS parent_id, 0.5426662661515687 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1084 AS count, 3 AS depth, 9 AS parent_id, -0.8701704940461656 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS count, 3 AS depth, 12 AS parent_id, 1.4816303464961726 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 3 AS depth, 12 AS parent_id, -0.9954239656081102 AS "Estimator") AS "Values"), 
"DT_Output_127" AS 
(SELECT "DT_node_lookup_127"."KEY" AS "KEY", "DT_node_lookup_127".node_id_2 AS node_id_2, "DT_node_data_127".node_id AS node_id, "DT_node_data_127".feature AS feature, "DT_node_data_127".threshold AS threshold, "DT_node_data_127".count AS count, "DT_node_data_127".depth AS depth, "DT_node_data_127".parent_id AS parent_id, "DT_node_data_127"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_127" LEFT OUTER JOIN "DT_node_data_127" ON "DT_node_lookup_127".node_id_2 = "DT_node_data_127".node_id), 
"GB_Tree_12_7" AS 
(SELECT "DT_Output_127"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3", 0.0 AS "Score_4", 0.0 AS "Score_5", 0.0 AS "Score_6", "DT_Output_127"."Estimator" AS "Score_7", 0.0 AS "Score_8", 0.0 AS "Score_9" 
FROM "DT_Output_127")
 SELECT "Score_Union_CTE_esu_15"."KEY", "Score_Union_CTE_esu_15"."Score_0", "Score_Union_CTE_esu_15"."Score_1", "Score_Union_CTE_esu_15"."Score_2", "Score_Union_CTE_esu_15"."Score_3", "Score_Union_CTE_esu_15"."Score_4", "Score_Union_CTE_esu_15"."Score_5", "Score_Union_CTE_esu_15"."Score_6", "Score_Union_CTE_esu_15"."Score_7", "Score_Union_CTE_esu_15"."Score_8", "Score_Union_CTE_esu_15"."Score_9" 
FROM (SELECT "GB_Tree_12_0"."KEY" AS "KEY", "GB_Tree_12_0"."Score_0" AS "Score_0", "GB_Tree_12_0"."Score_1" AS "Score_1", "GB_Tree_12_0"."Score_2" AS "Score_2", "GB_Tree_12_0"."Score_3" AS "Score_3", "GB_Tree_12_0"."Score_4" AS "Score_4", "GB_Tree_12_0"."Score_5" AS "Score_5", "GB_Tree_12_0"."Score_6" AS "Score_6", "GB_Tree_12_0"."Score_7" AS "Score_7", "GB_Tree_12_0"."Score_8" AS "Score_8", "GB_Tree_12_0"."Score_9" AS "Score_9" 
FROM "GB_Tree_12_0" UNION ALL SELECT "GB_Tree_12_1"."KEY" AS "KEY", "GB_Tree_12_1"."Score_0" AS "Score_0", "GB_Tree_12_1"."Score_1" AS "Score_1", "GB_Tree_12_1"."Score_2" AS "Score_2", "GB_Tree_12_1"."Score_3" AS "Score_3", "GB_Tree_12_1"."Score_4" AS "Score_4", "GB_Tree_12_1"."Score_5" AS "Score_5", "GB_Tree_12_1"."Score_6" AS "Score_6", "GB_Tree_12_1"."Score_7" AS "Score_7", "GB_Tree_12_1"."Score_8" AS "Score_8", "GB_Tree_12_1"."Score_9" AS "Score_9" 
FROM "GB_Tree_12_1" UNION ALL SELECT "GB_Tree_12_2"."KEY" AS "KEY", "GB_Tree_12_2"."Score_0" AS "Score_0", "GB_Tree_12_2"."Score_1" AS "Score_1", "GB_Tree_12_2"."Score_2" AS "Score_2", "GB_Tree_12_2"."Score_3" AS "Score_3", "GB_Tree_12_2"."Score_4" AS "Score_4", "GB_Tree_12_2"."Score_5" AS "Score_5", "GB_Tree_12_2"."Score_6" AS "Score_6", "GB_Tree_12_2"."Score_7" AS "Score_7", "GB_Tree_12_2"."Score_8" AS "Score_8", "GB_Tree_12_2"."Score_9" AS "Score_9" 
FROM "GB_Tree_12_2" UNION ALL SELECT "GB_Tree_12_3"."KEY" AS "KEY", "GB_Tree_12_3"."Score_0" AS "Score_0", "GB_Tree_12_3"."Score_1" AS "Score_1", "GB_Tree_12_3"."Score_2" AS "Score_2", "GB_Tree_12_3"."Score_3" AS "Score_3", "GB_Tree_12_3"."Score_4" AS "Score_4", "GB_Tree_12_3"."Score_5" AS "Score_5", "GB_Tree_12_3"."Score_6" AS "Score_6", "GB_Tree_12_3"."Score_7" AS "Score_7", "GB_Tree_12_3"."Score_8" AS "Score_8", "GB_Tree_12_3"."Score_9" AS "Score_9" 
FROM "GB_Tree_12_3" UNION ALL SELECT "GB_Tree_12_4"."KEY" AS "KEY", "GB_Tree_12_4"."Score_0" AS "Score_0", "GB_Tree_12_4"."Score_1" AS "Score_1", "GB_Tree_12_4"."Score_2" AS "Score_2", "GB_Tree_12_4"."Score_3" AS "Score_3", "GB_Tree_12_4"."Score_4" AS "Score_4", "GB_Tree_12_4"."Score_5" AS "Score_5", "GB_Tree_12_4"."Score_6" AS "Score_6", "GB_Tree_12_4"."Score_7" AS "Score_7", "GB_Tree_12_4"."Score_8" AS "Score_8", "GB_Tree_12_4"."Score_9" AS "Score_9" 
FROM "GB_Tree_12_4" UNION ALL SELECT "GB_Tree_12_5"."KEY" AS "KEY", "GB_Tree_12_5"."Score_0" AS "Score_0", "GB_Tree_12_5"."Score_1" AS "Score_1", "GB_Tree_12_5"."Score_2" AS "Score_2", "GB_Tree_12_5"."Score_3" AS "Score_3", "GB_Tree_12_5"."Score_4" AS "Score_4", "GB_Tree_12_5"."Score_5" AS "Score_5", "GB_Tree_12_5"."Score_6" AS "Score_6", "GB_Tree_12_5"."Score_7" AS "Score_7", "GB_Tree_12_5"."Score_8" AS "Score_8", "GB_Tree_12_5"."Score_9" AS "Score_9" 
FROM "GB_Tree_12_5" UNION ALL SELECT "GB_Tree_12_6"."KEY" AS "KEY", "GB_Tree_12_6"."Score_0" AS "Score_0", "GB_Tree_12_6"."Score_1" AS "Score_1", "GB_Tree_12_6"."Score_2" AS "Score_2", "GB_Tree_12_6"."Score_3" AS "Score_3", "GB_Tree_12_6"."Score_4" AS "Score_4", "GB_Tree_12_6"."Score_5" AS "Score_5", "GB_Tree_12_6"."Score_6" AS "Score_6", "GB_Tree_12_6"."Score_7" AS "Score_7", "GB_Tree_12_6"."Score_8" AS "Score_8", "GB_Tree_12_6"."Score_9" AS "Score_9" 
FROM "GB_Tree_12_6" UNION ALL SELECT "GB_Tree_12_7"."KEY" AS "KEY", "GB_Tree_12_7"."Score_0" AS "Score_0", "GB_Tree_12_7"."Score_1" AS "Score_1", "GB_Tree_12_7"."Score_2" AS "Score_2", "GB_Tree_12_7"."Score_3" AS "Score_3", "GB_Tree_12_7"."Score_4" AS "Score_4", "GB_Tree_12_7"."Score_5" AS "Score_5", "GB_Tree_12_7"."Score_6" AS "Score_6", "GB_Tree_12_7"."Score_7" AS "Score_7", "GB_Tree_12_7"."Score_8" AS "Score_8", "GB_Tree_12_7"."Score_9" AS "Score_9" 
FROM "GB_Tree_12_7") AS "Score_Union_CTE_esu_15"), 
"Score_Union_CTE_16" AS 
(WITH "DT_node_lookup_128" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_38" <= 1.5) THEN CASE WHEN ("ADS"."Feature_22" <= 0.5) THEN CASE WHEN ("ADS"."Feature_13" <= 11.5) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_60" <= 8.5) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_29" <= 8.5) THEN CASE WHEN ("ADS"."Feature_21" <= 14.5) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_35" <= 4.5) THEN 13 ELSE 14 END END END AS node_id_2 
FROM digits AS "ADS"), 
"DT_node_data_128" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 392 AS count, 3 AS depth, 2 AS parent_id, -0.505620727610333 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 167 AS count, 3 AS depth, 2 AS parent_id, 0.3896726987984704 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 62 AS count, 3 AS depth, 5 AS parent_id, -0.6167985836129681 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 150 AS count, 3 AS depth, 5 AS parent_id, 0.9808733346647674 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 240 AS count, 3 AS depth, 9 AS parent_id, -0.6585035138289304 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 13 AS count, 3 AS depth, 9 AS parent_id, 1.3522314581298882 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 188 AS count, 3 AS depth, 12 AS parent_id, -0.9271548827343857 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 225 AS count, 3 AS depth, 12 AS parent_id, -0.9460101971672601 AS "Estimator") AS "Values"), 
"DT_Output_128" AS 
(SELECT "DT_node_lookup_128"."KEY" AS "KEY", "DT_node_lookup_128".node_id_2 AS node_id_2, "DT_node_data_128".node_id AS node_id, "DT_node_data_128".feature AS feature, "DT_node_data_128".threshold AS threshold, "DT_node_data_128".count AS count, "DT_node_data_128".depth AS depth, "DT_node_data_128".parent_id AS parent_id, "DT_node_data_128"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_128" LEFT OUTER JOIN "DT_node_data_128" ON "DT_node_lookup_128".node_id_2 = "DT_node_data_128".node_id), 
"GB_Tree_12_8" AS 
(SELECT "DT_Output_128"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3", 0.0 AS "Score_4", 0.0 AS "Score_5", 0.0 AS "Score_6", 0.0 AS "Score_7", "DT_Output_128"."Estimator" AS "Score_8", 0.0 AS "Score_9" 
FROM "DT_Output_128"), 
"DT_node_lookup_129" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_44" <= 0.5) THEN CASE WHEN ("ADS"."Feature_42" <= 5.5) THEN CASE WHEN ("ADS"."Feature_21" <= 9.5) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_3" <= 10.5) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_14" <= 11.5) THEN CASE WHEN ("ADS"."Feature_10" <= 14.5) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_59" <= 0.5) THEN 13 ELSE 14 END END END AS node_id_2 
FROM digits AS "ADS"), 
"DT_node_data_129" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 68 AS count, 3 AS depth, 2 AS parent_id, 0.10678000175693143 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 106 AS count, 3 AS depth, 2 AS parent_id, 1.227611635523467 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 22 AS count, 3 AS depth, 5 AS parent_id, 0.3851492367938389 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 147 AS count, 3 AS depth, 5 AS parent_id, -0.9450083498602512 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 710 AS count, 3 AS depth, 9 AS parent_id, -0.7184462259771845 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 327 AS count, 3 AS depth, 9 AS parent_id, 0.0015843390352728117 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 7 AS count, 3 AS depth, 12 AS parent_id, 1.8236740733591177 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 50 AS count, 3 AS depth, 12 AS parent_id, 0.37068602984185683 AS "Estimator") AS "Values"), 
"DT_Output_129" AS 
(SELECT "DT_node_lookup_129"."KEY" AS "KEY", "DT_node_lookup_129".node_id_2 AS node_id_2, "DT_node_data_129".node_id AS node_id, "DT_node_data_129".feature AS feature, "DT_node_data_129".threshold AS threshold, "DT_node_data_129".count AS count, "DT_node_data_129".depth AS depth, "DT_node_data_129".parent_id AS parent_id, "DT_node_data_129"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_129" LEFT OUTER JOIN "DT_node_data_129" ON "DT_node_lookup_129".node_id_2 = "DT_node_data_129".node_id), 
"GB_Tree_12_9" AS 
(SELECT "DT_Output_129"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3", 0.0 AS "Score_4", 0.0 AS "Score_5", 0.0 AS "Score_6", 0.0 AS "Score_7", 0.0 AS "Score_8", "DT_Output_129"."Estimator" AS "Score_9" 
FROM "DT_Output_129"), 
"DT_node_lookup_130" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_36" <= 0.5) THEN CASE WHEN ("ADS"."Feature_33" <= 0.5) THEN CASE WHEN ("ADS"."Feature_63" <= 2.5) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_28" <= 4.5) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_28" <= 0.5) THEN CASE WHEN ("ADS"."Feature_21" <= 12.5) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_18" <= 6.5) THEN 13 ELSE 14 END END END AS node_id_2 
FROM digits AS "ADS"), 
"DT_node_data_130" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 65 AS count, 3 AS depth, 2 AS parent_id, -0.8314976651945636 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 2 AS parent_id, -1.2385994792670068 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 142 AS count, 3 AS depth, 5 AS parent_id, 1.0253606600048408 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 11 AS count, 3 AS depth, 5 AS parent_id, -0.9724600706447245 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 104 AS count, 3 AS depth, 9 AS parent_id, -0.92024734233969 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 7 AS count, 3 AS depth, 9 AS parent_id, 0.6496597961572839 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 384 AS count, 3 AS depth, 12 AS parent_id, -0.9213388148558266 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 723 AS count, 3 AS depth, 12 AS parent_id, -0.9291409127032383 AS "Estimator") AS "Values"), 
"DT_Output_130" AS 
(SELECT "DT_node_lookup_130"."KEY" AS "KEY", "DT_node_lookup_130".node_id_2 AS node_id_2, "DT_node_data_130".node_id AS node_id, "DT_node_data_130".feature AS feature, "DT_node_data_130".threshold AS threshold, "DT_node_data_130".count AS count, "DT_node_data_130".depth AS depth, "DT_node_data_130".parent_id AS parent_id, "DT_node_data_130"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_130" LEFT OUTER JOIN "DT_node_data_130" ON "DT_node_lookup_130".node_id_2 = "DT_node_data_130".node_id), 
"GB_Tree_13_0" AS 
(SELECT "DT_Output_130"."KEY" AS "KEY", "DT_Output_130"."Estimator" AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3", 0.0 AS "Score_4", 0.0 AS "Score_5", 0.0 AS "Score_6", 0.0 AS "Score_7", 0.0 AS "Score_8", 0.0 AS "Score_9" 
FROM "DT_Output_130"), 
"DT_node_lookup_131" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_19" <= 13.5) THEN CASE WHEN ("ADS"."Feature_3" <= 1.5) THEN CASE WHEN ("ADS"."Feature_53" <= 14.5) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_10" <= 0.5) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_45" <= 4.5) THEN CASE WHEN ("ADS"."Feature_9" <= 2.5) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_42" <= 3.0) THEN 13 ELSE 14 END END END AS node_id_2 
FROM digits AS "ADS"), 
"DT_node_data_131" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 27 AS count, 3 AS depth, 2 AS parent_id, 0.6054598696834886 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS count, 3 AS depth, 2 AS parent_id, 2.1790369710552486 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 25 AS count, 3 AS depth, 5 AS parent_id, 0.619809275131468 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1064 AS count, 3 AS depth, 5 AS parent_id, -0.8991170367581163 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 82 AS count, 3 AS depth, 9 AS parent_id, 1.173743023669288 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 18 AS count, 3 AS depth, 9 AS parent_id, -1.0334696425031116 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 68 AS count, 3 AS depth, 12 AS parent_id, 0.9824740090844943 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 148 AS count, 3 AS depth, 12 AS parent_id, -0.621227097159736 AS "Estimator") AS "Values"), 
"DT_Output_131" AS 
(SELECT "DT_node_lookup_131"."KEY" AS "KEY", "DT_node_lookup_131".node_id_2 AS node_id_2, "DT_node_data_131".node_id AS node_id, "DT_node_data_131".feature AS feature, "DT_node_data_131".threshold AS threshold, "DT_node_data_131".count AS count, "DT_node_data_131".depth AS depth, "DT_node_data_131".parent_id AS parent_id, "DT_node_data_131"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_131" LEFT OUTER JOIN "DT_node_data_131" ON "DT_node_lookup_131".node_id_2 = "DT_node_data_131".node_id), 
"GB_Tree_13_1" AS 
(SELECT "DT_Output_131"."KEY" AS "KEY", 0.0 AS "Score_0", "DT_Output_131"."Estimator" AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3", 0.0 AS "Score_4", 0.0 AS "Score_5", 0.0 AS "Score_6", 0.0 AS "Score_7", 0.0 AS "Score_8", 0.0 AS "Score_9" 
FROM "DT_Output_131"), 
"DT_node_lookup_132" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_26" <= 6.5) THEN CASE WHEN ("ADS"."Feature_51" <= 13.5) THEN CASE WHEN ("ADS"."Feature_50" <= 15.5) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_53" <= 3.5) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_63" <= 3.5) THEN CASE WHEN ("ADS"."Feature_9" <= 11.5) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_19" <= 13.5) THEN 13 ELSE 14 END END END AS node_id_2 
FROM digits AS "ADS"), 
"DT_node_data_132" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 289 AS count, 3 AS depth, 2 AS parent_id, -0.5202499342689924 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 46 AS count, 3 AS depth, 2 AS parent_id, 1.0149650390711846 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 75 AS count, 3 AS depth, 5 AS parent_id, -0.6819860926870401 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 116 AS count, 3 AS depth, 5 AS parent_id, 1.277965210630978 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 883 AS count, 3 AS depth, 9 AS parent_id, -0.8844945021033253 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 8 AS count, 3 AS depth, 9 AS parent_id, 0.5399005644762155 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 8 AS count, 3 AS depth, 12 AS parent_id, 1.3462170346859677 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 12 AS count, 3 AS depth, 12 AS parent_id, -0.9964038089123843 AS "Estimator") AS "Values"), 
"DT_Output_132" AS 
(SELECT "DT_node_lookup_132"."KEY" AS "KEY", "DT_node_lookup_132".node_id_2 AS node_id_2, "DT_node_data_132".node_id AS node_id, "DT_node_data_132".feature AS feature, "DT_node_data_132".threshold AS threshold, "DT_node_data_132".count AS count, "DT_node_data_132".depth AS depth, "DT_node_data_132".parent_id AS parent_id, "DT_node_data_132"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_132" LEFT OUTER JOIN "DT_node_data_132" ON "DT_node_lookup_132".node_id_2 = "DT_node_data_132".node_id), 
"GB_Tree_13_2" AS 
(SELECT "DT_Output_132"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", "DT_Output_132"."Estimator" AS "Score_2", 0.0 AS "Score_3", 0.0 AS "Score_4", 0.0 AS "Score_5", 0.0 AS "Score_6", 0.0 AS "Score_7", 0.0 AS "Score_8", 0.0 AS "Score_9" 
FROM "DT_Output_132"), 
"DT_node_lookup_133" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_34" <= 0.5) THEN CASE WHEN ("ADS"."Feature_43" <= 4.5) THEN CASE WHEN ("ADS"."Feature_29" <= 10.5) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_11" <= 7.5) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_9" <= 6.5) THEN CASE WHEN ("ADS"."Feature_18" <= 0.5) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_17" <= 1.5) THEN 13 ELSE 14 END END END AS node_id_2 
FROM digits AS "ADS"), 
"DT_node_data_133" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 116 AS count, 3 AS depth, 2 AS parent_id, 1.28650699456228 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 107 AS count, 3 AS depth, 2 AS parent_id, -0.1059013425134091 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 12 AS count, 3 AS depth, 5 AS parent_id, 1.7002672232954905 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 136 AS count, 3 AS depth, 5 AS parent_id, -0.9462910388270918 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 95 AS count, 3 AS depth, 9 AS parent_id, 0.27434969195615194 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 878 AS count, 3 AS depth, 9 AS parent_id, -0.7677802414188076 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 16 AS count, 3 AS depth, 12 AS parent_id, 2.1081473478185293 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 77 AS count, 3 AS depth, 12 AS parent_id, -0.27930523051234935 AS "Estimator") AS "Values"), 
"DT_Output_133" AS 
(SELECT "DT_node_lookup_133"."KEY" AS "KEY", "DT_node_lookup_133".node_id_2 AS node_id_2, "DT_node_data_133".node_id AS node_id, "DT_node_data_133".feature AS feature, "DT_node_data_133".threshold AS threshold, "DT_node_data_133".count AS count, "DT_node_data_133".depth AS depth, "DT_node_data_133".parent_id AS parent_id, "DT_node_data_133"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_133" LEFT OUTER JOIN "DT_node_data_133" ON "DT_node_lookup_133".node_id_2 = "DT_node_data_133".node_id), 
"GB_Tree_13_3" AS 
(SELECT "DT_Output_133"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", "DT_Output_133"."Estimator" AS "Score_3", 0.0 AS "Score_4", 0.0 AS "Score_5", 0.0 AS "Score_6", 0.0 AS "Score_7", 0.0 AS "Score_8", 0.0 AS "Score_9" 
FROM "DT_Output_133"), 
"DT_node_lookup_134" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_41" <= 5.5) THEN CASE WHEN ("ADS"."Feature_30" <= 8.5) THEN CASE WHEN ("ADS"."Feature_5" <= 0.5) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_25" <= 3.5) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_13" <= 7.5) THEN CASE WHEN ("ADS"."Feature_59" <= 2.5) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_30" <= 14.5) THEN 13 ELSE 14 END END END AS node_id_2 
FROM digits AS "ADS"), 
"DT_node_data_134" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 311 AS count, 3 AS depth, 2 AS parent_id, 0.2356785251035858 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 890 AS count, 3 AS depth, 2 AS parent_id, -0.7862164225777928 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 53 AS count, 3 AS depth, 5 AS parent_id, -0.3176412611426964 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 39 AS count, 3 AS depth, 5 AS parent_id, 1.4888480936008042 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 23 AS count, 3 AS depth, 9 AS parent_id, 1.6533299456756336 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 65 AS count, 3 AS depth, 9 AS parent_id, 0.981153246452295 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 55 AS count, 3 AS depth, 12 AS parent_id, -0.15439545188843887 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 12 AS parent_id, -1.3832318872270828 AS "Estimator") AS "Values"), 
"DT_Output_134" AS 
(SELECT "DT_node_lookup_134"."KEY" AS "KEY", "DT_node_lookup_134".node_id_2 AS node_id_2, "DT_node_data_134".node_id AS node_id, "DT_node_data_134".feature AS feature, "DT_node_data_134".threshold AS threshold, "DT_node_data_134".count AS count, "DT_node_data_134".depth AS depth, "DT_node_data_134".parent_id AS parent_id, "DT_node_data_134"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_134" LEFT OUTER JOIN "DT_node_data_134" ON "DT_node_lookup_134".node_id_2 = "DT_node_data_134".node_id), 
"GB_Tree_13_4" AS 
(SELECT "DT_Output_134"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3", "DT_Output_134"."Estimator" AS "Score_4", 0.0 AS "Score_5", 0.0 AS "Score_6", 0.0 AS "Score_7", 0.0 AS "Score_8", 0.0 AS "Score_9" 
FROM "DT_Output_134"), 
"DT_node_lookup_135" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_21" <= 1.5) THEN CASE WHEN ("ADS"."Feature_6" <= 0.5) THEN CASE WHEN ("ADS"."Feature_42" <= 0.5) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_38" <= 10.5) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_2" <= 6.5) THEN CASE WHEN ("ADS"."Feature_42" <= 10.5) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_26" <= 15.5) THEN 13 ELSE 14 END END END AS node_id_2 
FROM digits AS "ADS"), 
"DT_node_data_135" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 74 AS count, 3 AS depth, 2 AS parent_id, 0.8602156158526059 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 256 AS count, 3 AS depth, 2 AS parent_id, -0.6356236398081441 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 94 AS count, 3 AS depth, 5 AS parent_id, 1.070841995358858 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 5 AS parent_id, 3.837134825580969 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 378 AS count, 3 AS depth, 9 AS parent_id, -0.9406578202915933 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 291 AS count, 3 AS depth, 9 AS parent_id, -0.927245334827471 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 320 AS count, 3 AS depth, 12 AS parent_id, -0.6817417126599391 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 23 AS count, 3 AS depth, 12 AS parent_id, 1.4943428615156567 AS "Estimator") AS "Values"), 
"DT_Output_135" AS 
(SELECT "DT_node_lookup_135"."KEY" AS "KEY", "DT_node_lookup_135".node_id_2 AS node_id_2, "DT_node_data_135".node_id AS node_id, "DT_node_data_135".feature AS feature, "DT_node_data_135".threshold AS threshold, "DT_node_data_135".count AS count, "DT_node_data_135".depth AS depth, "DT_node_data_135".parent_id AS parent_id, "DT_node_data_135"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_135" LEFT OUTER JOIN "DT_node_data_135" ON "DT_node_lookup_135".node_id_2 = "DT_node_data_135".node_id), 
"GB_Tree_13_5" AS 
(SELECT "DT_Output_135"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3", 0.0 AS "Score_4", "DT_Output_135"."Estimator" AS "Score_5", 0.0 AS "Score_6", 0.0 AS "Score_7", 0.0 AS "Score_8", 0.0 AS "Score_9" 
FROM "DT_Output_135")
 SELECT "Score_Union_CTE_esu_16"."KEY", "Score_Union_CTE_esu_16"."Score_0", "Score_Union_CTE_esu_16"."Score_1", "Score_Union_CTE_esu_16"."Score_2", "Score_Union_CTE_esu_16"."Score_3", "Score_Union_CTE_esu_16"."Score_4", "Score_Union_CTE_esu_16"."Score_5", "Score_Union_CTE_esu_16"."Score_6", "Score_Union_CTE_esu_16"."Score_7", "Score_Union_CTE_esu_16"."Score_8", "Score_Union_CTE_esu_16"."Score_9" 
FROM (SELECT "GB_Tree_12_8"."KEY" AS "KEY", "GB_Tree_12_8"."Score_0" AS "Score_0", "GB_Tree_12_8"."Score_1" AS "Score_1", "GB_Tree_12_8"."Score_2" AS "Score_2", "GB_Tree_12_8"."Score_3" AS "Score_3", "GB_Tree_12_8"."Score_4" AS "Score_4", "GB_Tree_12_8"."Score_5" AS "Score_5", "GB_Tree_12_8"."Score_6" AS "Score_6", "GB_Tree_12_8"."Score_7" AS "Score_7", "GB_Tree_12_8"."Score_8" AS "Score_8", "GB_Tree_12_8"."Score_9" AS "Score_9" 
FROM "GB_Tree_12_8" UNION ALL SELECT "GB_Tree_12_9"."KEY" AS "KEY", "GB_Tree_12_9"."Score_0" AS "Score_0", "GB_Tree_12_9"."Score_1" AS "Score_1", "GB_Tree_12_9"."Score_2" AS "Score_2", "GB_Tree_12_9"."Score_3" AS "Score_3", "GB_Tree_12_9"."Score_4" AS "Score_4", "GB_Tree_12_9"."Score_5" AS "Score_5", "GB_Tree_12_9"."Score_6" AS "Score_6", "GB_Tree_12_9"."Score_7" AS "Score_7", "GB_Tree_12_9"."Score_8" AS "Score_8", "GB_Tree_12_9"."Score_9" AS "Score_9" 
FROM "GB_Tree_12_9" UNION ALL SELECT "GB_Tree_13_0"."KEY" AS "KEY", "GB_Tree_13_0"."Score_0" AS "Score_0", "GB_Tree_13_0"."Score_1" AS "Score_1", "GB_Tree_13_0"."Score_2" AS "Score_2", "GB_Tree_13_0"."Score_3" AS "Score_3", "GB_Tree_13_0"."Score_4" AS "Score_4", "GB_Tree_13_0"."Score_5" AS "Score_5", "GB_Tree_13_0"."Score_6" AS "Score_6", "GB_Tree_13_0"."Score_7" AS "Score_7", "GB_Tree_13_0"."Score_8" AS "Score_8", "GB_Tree_13_0"."Score_9" AS "Score_9" 
FROM "GB_Tree_13_0" UNION ALL SELECT "GB_Tree_13_1"."KEY" AS "KEY", "GB_Tree_13_1"."Score_0" AS "Score_0", "GB_Tree_13_1"."Score_1" AS "Score_1", "GB_Tree_13_1"."Score_2" AS "Score_2", "GB_Tree_13_1"."Score_3" AS "Score_3", "GB_Tree_13_1"."Score_4" AS "Score_4", "GB_Tree_13_1"."Score_5" AS "Score_5", "GB_Tree_13_1"."Score_6" AS "Score_6", "GB_Tree_13_1"."Score_7" AS "Score_7", "GB_Tree_13_1"."Score_8" AS "Score_8", "GB_Tree_13_1"."Score_9" AS "Score_9" 
FROM "GB_Tree_13_1" UNION ALL SELECT "GB_Tree_13_2"."KEY" AS "KEY", "GB_Tree_13_2"."Score_0" AS "Score_0", "GB_Tree_13_2"."Score_1" AS "Score_1", "GB_Tree_13_2"."Score_2" AS "Score_2", "GB_Tree_13_2"."Score_3" AS "Score_3", "GB_Tree_13_2"."Score_4" AS "Score_4", "GB_Tree_13_2"."Score_5" AS "Score_5", "GB_Tree_13_2"."Score_6" AS "Score_6", "GB_Tree_13_2"."Score_7" AS "Score_7", "GB_Tree_13_2"."Score_8" AS "Score_8", "GB_Tree_13_2"."Score_9" AS "Score_9" 
FROM "GB_Tree_13_2" UNION ALL SELECT "GB_Tree_13_3"."KEY" AS "KEY", "GB_Tree_13_3"."Score_0" AS "Score_0", "GB_Tree_13_3"."Score_1" AS "Score_1", "GB_Tree_13_3"."Score_2" AS "Score_2", "GB_Tree_13_3"."Score_3" AS "Score_3", "GB_Tree_13_3"."Score_4" AS "Score_4", "GB_Tree_13_3"."Score_5" AS "Score_5", "GB_Tree_13_3"."Score_6" AS "Score_6", "GB_Tree_13_3"."Score_7" AS "Score_7", "GB_Tree_13_3"."Score_8" AS "Score_8", "GB_Tree_13_3"."Score_9" AS "Score_9" 
FROM "GB_Tree_13_3" UNION ALL SELECT "GB_Tree_13_4"."KEY" AS "KEY", "GB_Tree_13_4"."Score_0" AS "Score_0", "GB_Tree_13_4"."Score_1" AS "Score_1", "GB_Tree_13_4"."Score_2" AS "Score_2", "GB_Tree_13_4"."Score_3" AS "Score_3", "GB_Tree_13_4"."Score_4" AS "Score_4", "GB_Tree_13_4"."Score_5" AS "Score_5", "GB_Tree_13_4"."Score_6" AS "Score_6", "GB_Tree_13_4"."Score_7" AS "Score_7", "GB_Tree_13_4"."Score_8" AS "Score_8", "GB_Tree_13_4"."Score_9" AS "Score_9" 
FROM "GB_Tree_13_4" UNION ALL SELECT "GB_Tree_13_5"."KEY" AS "KEY", "GB_Tree_13_5"."Score_0" AS "Score_0", "GB_Tree_13_5"."Score_1" AS "Score_1", "GB_Tree_13_5"."Score_2" AS "Score_2", "GB_Tree_13_5"."Score_3" AS "Score_3", "GB_Tree_13_5"."Score_4" AS "Score_4", "GB_Tree_13_5"."Score_5" AS "Score_5", "GB_Tree_13_5"."Score_6" AS "Score_6", "GB_Tree_13_5"."Score_7" AS "Score_7", "GB_Tree_13_5"."Score_8" AS "Score_8", "GB_Tree_13_5"."Score_9" AS "Score_9" 
FROM "GB_Tree_13_5") AS "Score_Union_CTE_esu_16"), 
"Score_Union_CTE_17" AS 
(WITH "DT_node_lookup_136" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_21" <= 0.5) THEN CASE WHEN ("ADS"."Feature_2" <= 4.5) THEN CASE WHEN ("ADS"."Feature_61" <= 6.5) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_42" <= 15.5) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_33" <= 6.5) THEN CASE WHEN ("ADS"."Feature_3" <= 0.5) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_29" <= 0.5) THEN 13 ELSE 14 END END END AS node_id_2 
FROM digits AS "ADS"), 
"DT_node_data_136" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 52 AS count, 3 AS depth, 2 AS parent_id, -0.7167895229808311 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 150 AS count, 3 AS depth, 2 AS parent_id, 1.096580613668334 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 183 AS count, 3 AS depth, 5 AS parent_id, -1.008700197098991 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 8 AS count, 3 AS depth, 5 AS parent_id, 0.9455527791784253 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 32 AS count, 3 AS depth, 9 AS parent_id, 0.06726607887889853 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 846 AS count, 3 AS depth, 9 AS parent_id, -0.9294657640195738 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS count, 3 AS depth, 12 AS parent_id, 1.7541487407961307 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 161 AS count, 3 AS depth, 12 AS parent_id, -0.4811631095271599 AS "Estimator") AS "Values"), 
"DT_Output_136" AS 
(SELECT "DT_node_lookup_136"."KEY" AS "KEY", "DT_node_lookup_136".node_id_2 AS node_id_2, "DT_node_data_136".node_id AS node_id, "DT_node_data_136".feature AS feature, "DT_node_data_136".threshold AS threshold, "DT_node_data_136".count AS count, "DT_node_data_136".depth AS depth, "DT_node_data_136".parent_id AS parent_id, "DT_node_data_136"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_136" LEFT OUTER JOIN "DT_node_data_136" ON "DT_node_lookup_136".node_id_2 = "DT_node_data_136".node_id), 
"GB_Tree_13_6" AS 
(SELECT "DT_Output_136"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3", 0.0 AS "Score_4", 0.0 AS "Score_5", "DT_Output_136"."Estimator" AS "Score_6", 0.0 AS "Score_7", 0.0 AS "Score_8", 0.0 AS "Score_9" 
FROM "DT_Output_136"), 
"DT_node_lookup_137" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_53" <= 0.5) THEN CASE WHEN ("ADS"."Feature_19" <= 3.5) THEN CASE WHEN ("ADS"."Feature_17" <= 7.5) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_15" <= 2.5) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_7" <= 1.5) THEN CASE WHEN ("ADS"."Feature_34" <= 14.5) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_36" <= 15.0) THEN 13 ELSE 14 END END END AS node_id_2 
FROM digits AS "ADS"), 
"DT_node_data_137" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 102 AS count, 3 AS depth, 2 AS parent_id, 1.2586511111719976 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 19 AS count, 3 AS depth, 2 AS parent_id, -0.854592690511281 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 162 AS count, 3 AS depth, 5 AS parent_id, -0.036694467198573645 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 8 AS count, 3 AS depth, 5 AS parent_id, 1.302309131196882 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 870 AS count, 3 AS depth, 9 AS parent_id, -0.8631085294916943 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 268 AS count, 3 AS depth, 9 AS parent_id, -0.3685322404799489 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS count, 3 AS depth, 12 AS parent_id, -0.9783753905888811 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS count, 3 AS depth, 12 AS parent_id, 1.394007248871059 AS "Estimator") AS "Values"), 
"DT_Output_137" AS 
(SELECT "DT_node_lookup_137"."KEY" AS "KEY", "DT_node_lookup_137".node_id_2 AS node_id_2, "DT_node_data_137".node_id AS node_id, "DT_node_data_137".feature AS feature, "DT_node_data_137".threshold AS threshold, "DT_node_data_137".count AS count, "DT_node_data_137".depth AS depth, "DT_node_data_137".parent_id AS parent_id, "DT_node_data_137"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_137" LEFT OUTER JOIN "DT_node_data_137" ON "DT_node_lookup_137".node_id_2 = "DT_node_data_137".node_id), 
"GB_Tree_13_7" AS 
(SELECT "DT_Output_137"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3", 0.0 AS "Score_4", 0.0 AS "Score_5", 0.0 AS "Score_6", "DT_Output_137"."Estimator" AS "Score_7", 0.0 AS "Score_8", 0.0 AS "Score_9" 
FROM "DT_Output_137"), 
"DT_node_lookup_138" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_27" <= 10.5) THEN CASE WHEN ("ADS"."Feature_26" <= 7.5) THEN CASE WHEN ("ADS"."Feature_37" <= 4.5) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_33" <= 1.5) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_42" <= 3.5) THEN CASE WHEN ("ADS"."Feature_20" <= 10.5) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_51" <= 13.5) THEN 13 ELSE 14 END END END AS node_id_2 
FROM digits AS "ADS"), 
"DT_node_data_138" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 105 AS count, 3 AS depth, 2 AS parent_id, -0.968427944117289 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 214 AS count, 3 AS depth, 2 AS parent_id, -0.6379307020510211 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 103 AS count, 3 AS depth, 5 AS parent_id, 0.64677618422384 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 328 AS count, 3 AS depth, 5 AS parent_id, -0.9036246935005284 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 215 AS count, 3 AS depth, 9 AS parent_id, 0.041837680708227014 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 156 AS count, 3 AS depth, 9 AS parent_id, -1.0069278352847282 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 178 AS count, 3 AS depth, 12 AS parent_id, 0.9907785268137665 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 138 AS count, 3 AS depth, 12 AS parent_id, -0.3570469758964623 AS "Estimator") AS "Values"), 
"DT_Output_138" AS 
(SELECT "DT_node_lookup_138"."KEY" AS "KEY", "DT_node_lookup_138".node_id_2 AS node_id_2, "DT_node_data_138".node_id AS node_id, "DT_node_data_138".feature AS feature, "DT_node_data_138".threshold AS threshold, "DT_node_data_138".count AS count, "DT_node_data_138".depth AS depth, "DT_node_data_138".parent_id AS parent_id, "DT_node_data_138"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_138" LEFT OUTER JOIN "DT_node_data_138" ON "DT_node_lookup_138".node_id_2 = "DT_node_data_138".node_id), 
"GB_Tree_13_8" AS 
(SELECT "DT_Output_138"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3", 0.0 AS "Score_4", 0.0 AS "Score_5", 0.0 AS "Score_6", 0.0 AS "Score_7", "DT_Output_138"."Estimator" AS "Score_8", 0.0 AS "Score_9" 
FROM "DT_Output_138"), 
"DT_node_lookup_139" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_43" <= 3.5) THEN CASE WHEN ("ADS"."Feature_21" <= 9.5) THEN CASE WHEN ("ADS"."Feature_54" <= 15.5) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_27" <= 7.5) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_60" <= 1.5) THEN CASE WHEN ("ADS"."Feature_17" <= 6.5) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_38" <= 13.0) THEN 13 ELSE 14 END END END AS node_id_2 
FROM digits AS "ADS"), 
"DT_node_data_139" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 248 AS count, 3 AS depth, 2 AS parent_id, -0.7044120810277794 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS count, 3 AS depth, 2 AS parent_id, 1.768186517898856 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 151 AS count, 3 AS depth, 5 AS parent_id, -0.19678669730061407 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 192 AS count, 3 AS depth, 5 AS parent_id, 1.0353396638417545 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 86 AS count, 3 AS depth, 9 AS parent_id, -0.9564736345686549 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 15 AS count, 3 AS depth, 9 AS parent_id, 2.173145133060395 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 737 AS count, 3 AS depth, 12 AS parent_id, -0.8929842859379737 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 3 AS depth, 12 AS parent_id, 1.026127322445878 AS "Estimator") AS "Values"), 
"DT_Output_139" AS 
(SELECT "DT_node_lookup_139"."KEY" AS "KEY", "DT_node_lookup_139".node_id_2 AS node_id_2, "DT_node_data_139".node_id AS node_id, "DT_node_data_139".feature AS feature, "DT_node_data_139".threshold AS threshold, "DT_node_data_139".count AS count, "DT_node_data_139".depth AS depth, "DT_node_data_139".parent_id AS parent_id, "DT_node_data_139"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_139" LEFT OUTER JOIN "DT_node_data_139" ON "DT_node_lookup_139".node_id_2 = "DT_node_data_139".node_id), 
"GB_Tree_13_9" AS 
(SELECT "DT_Output_139"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3", 0.0 AS "Score_4", 0.0 AS "Score_5", 0.0 AS "Score_6", 0.0 AS "Score_7", 0.0 AS "Score_8", "DT_Output_139"."Estimator" AS "Score_9" 
FROM "DT_Output_139"), 
"DT_node_lookup_140" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_36" <= 0.5) THEN CASE WHEN ("ADS"."Feature_28" <= 2.5) THEN CASE WHEN ("ADS"."Feature_13" <= 1.5) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_12" <= 15.5) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_34" <= 11.5) THEN CASE WHEN ("ADS"."Feature_58" <= 3.5) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_36" <= 3.5) THEN 13 ELSE 14 END END END AS node_id_2 
FROM digits AS "ADS"), 
"DT_node_data_140" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 9 AS count, 3 AS depth, 2 AS parent_id, -1.05525870773672 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 137 AS count, 3 AS depth, 2 AS parent_id, 1.0089374148722479 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 67 AS count, 3 AS depth, 5 AS parent_id, -0.967976007461739 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 6 AS count, 3 AS depth, 5 AS parent_id, 0.8358111392560286 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 252 AS count, 3 AS depth, 9 AS parent_id, -0.9394335124197225 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 523 AS count, 3 AS depth, 9 AS parent_id, -0.9253473050937929 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 16 AS count, 3 AS depth, 12 AS parent_id, 0.8093455971775945 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 427 AS count, 3 AS depth, 12 AS parent_id, -0.9196874219831112 AS "Estimator") AS "Values"), 
"DT_Output_140" AS 
(SELECT "DT_node_lookup_140"."KEY" AS "KEY", "DT_node_lookup_140".node_id_2 AS node_id_2, "DT_node_data_140".node_id AS node_id, "DT_node_data_140".feature AS feature, "DT_node_data_140".threshold AS threshold, "DT_node_data_140".count AS count, "DT_node_data_140".depth AS depth, "DT_node_data_140".parent_id AS parent_id, "DT_node_data_140"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_140" LEFT OUTER JOIN "DT_node_data_140" ON "DT_node_lookup_140".node_id_2 = "DT_node_data_140".node_id), 
"GB_Tree_14_0" AS 
(SELECT "DT_Output_140"."KEY" AS "KEY", "DT_Output_140"."Estimator" AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3", 0.0 AS "Score_4", 0.0 AS "Score_5", 0.0 AS "Score_6", 0.0 AS "Score_7", 0.0 AS "Score_8", 0.0 AS "Score_9" 
FROM "DT_Output_140"), 
"DT_node_lookup_141" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_12" <= 15.5) THEN CASE WHEN ("ADS"."Feature_63" <= 7.5) THEN CASE WHEN ("ADS"."Feature_3" <= 0.5) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_10" <= 2.5) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_19" <= 10.5) THEN CASE WHEN ("ADS"."Feature_11" <= 1.5) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_6" <= 0.5) THEN 13 ELSE 14 END END END AS node_id_2 
FROM digits AS "ADS"), 
"DT_node_data_141" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 19 AS count, 3 AS depth, 2 AS parent_id, 0.6667002957588078 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1110 AS count, 3 AS depth, 2 AS parent_id, -0.6749094209983708 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS count, 3 AS depth, 5 AS parent_id, 1.6419851780295267 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 23 AS count, 3 AS depth, 5 AS parent_id, 0.8758586250992361 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 3 AS depth, 9 AS parent_id, 1.381482950880319 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 121 AS count, 3 AS depth, 9 AS parent_id, -0.7535545570724559 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 123 AS count, 3 AS depth, 12 AS parent_id, 0.5931949387409413 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 35 AS count, 3 AS depth, 12 AS parent_id, 1.4524100962721558 AS "Estimator") AS "Values"), 
"DT_Output_141" AS 
(SELECT "DT_node_lookup_141"."KEY" AS "KEY", "DT_node_lookup_141".node_id_2 AS node_id_2, "DT_node_data_141".node_id AS node_id, "DT_node_data_141".feature AS feature, "DT_node_data_141".threshold AS threshold, "DT_node_data_141".count AS count, "DT_node_data_141".depth AS depth, "DT_node_data_141".parent_id AS parent_id, "DT_node_data_141"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_141" LEFT OUTER JOIN "DT_node_data_141" ON "DT_node_lookup_141".node_id_2 = "DT_node_data_141".node_id), 
"GB_Tree_14_1" AS 
(SELECT "DT_Output_141"."KEY" AS "KEY", 0.0 AS "Score_0", "DT_Output_141"."Estimator" AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3", 0.0 AS "Score_4", 0.0 AS "Score_5", 0.0 AS "Score_6", 0.0 AS "Score_7", 0.0 AS "Score_8", 0.0 AS "Score_9" 
FROM "DT_Output_141"), 
"DT_node_lookup_142" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_62" <= 2.5) THEN CASE WHEN ("ADS"."Feature_51" <= 15.5) THEN CASE WHEN ("ADS"."Feature_44" <= 2.5) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_34" <= 0.5) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_52" <= 7.5) THEN CASE WHEN ("ADS"."Feature_45" <= 0.5) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_26" <= 11.5) THEN 13 ELSE 14 END END END AS node_id_2 
FROM digits AS "ADS"), 
"DT_node_data_142" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 337 AS count, 3 AS depth, 2 AS parent_id, -0.26912033721829953 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 598 AS count, 3 AS depth, 2 AS parent_id, -0.9208741397384345 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 26 AS count, 3 AS depth, 5 AS parent_id, 1.1144433919673298 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 148 AS count, 3 AS depth, 5 AS parent_id, -0.4463698769441823 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 19 AS count, 3 AS depth, 9 AS parent_id, 0.9692113860629931 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 145 AS count, 3 AS depth, 9 AS parent_id, -0.9532548491022805 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 133 AS count, 3 AS depth, 12 AS parent_id, 1.0332499230685597 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 31 AS count, 3 AS depth, 12 AS parent_id, -0.9891162098303043 AS "Estimator") AS "Values"), 
"DT_Output_142" AS 
(SELECT "DT_node_lookup_142"."KEY" AS "KEY", "DT_node_lookup_142".node_id_2 AS node_id_2, "DT_node_data_142".node_id AS node_id, "DT_node_data_142".feature AS feature, "DT_node_data_142".threshold AS threshold, "DT_node_data_142".count AS count, "DT_node_data_142".depth AS depth, "DT_node_data_142".parent_id AS parent_id, "DT_node_data_142"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_142" LEFT OUTER JOIN "DT_node_data_142" ON "DT_node_lookup_142".node_id_2 = "DT_node_data_142".node_id), 
"GB_Tree_14_2" AS 
(SELECT "DT_Output_142"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", "DT_Output_142"."Estimator" AS "Score_2", 0.0 AS "Score_3", 0.0 AS "Score_4", 0.0 AS "Score_5", 0.0 AS "Score_6", 0.0 AS "Score_7", 0.0 AS "Score_8", 0.0 AS "Score_9" 
FROM "DT_Output_142"), 
"DT_node_lookup_143" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_18" <= 0.5) THEN CASE WHEN ("ADS"."Feature_2" <= 5.5) THEN CASE WHEN ("ADS"."Feature_44" <= 3.0) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_50" <= 2.5) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_43" <= 1.5) THEN CASE WHEN ("ADS"."Feature_36" <= 4.5) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_53" <= 15.5) THEN 13 ELSE 14 END END END AS node_id_2 
FROM digits AS "ADS"), 
"DT_node_data_143" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS count, 3 AS depth, 2 AS parent_id, 1.3179760169422763 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 71 AS count, 3 AS depth, 2 AS parent_id, -0.8608766778769659 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 15 AS count, 3 AS depth, 5 AS parent_id, 2.229302188115908 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 77 AS count, 3 AS depth, 5 AS parent_id, 0.8134486871345789 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 230 AS count, 3 AS depth, 9 AS parent_id, -0.874370588792793 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 234 AS count, 3 AS depth, 9 AS parent_id, 0.8363339936968267 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 698 AS count, 3 AS depth, 12 AS parent_id, -0.9193456731428215 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 107 AS count, 3 AS depth, 12 AS parent_id, -0.07752351271827479 AS "Estimator") AS "Values"), 
"DT_Output_143" AS 
(SELECT "DT_node_lookup_143"."KEY" AS "KEY", "DT_node_lookup_143".node_id_2 AS node_id_2, "DT_node_data_143".node_id AS node_id, "DT_node_data_143".feature AS feature, "DT_node_data_143".threshold AS threshold, "DT_node_data_143".count AS count, "DT_node_data_143".depth AS depth, "DT_node_data_143".parent_id AS parent_id, "DT_node_data_143"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_143" LEFT OUTER JOIN "DT_node_data_143" ON "DT_node_lookup_143".node_id_2 = "DT_node_data_143".node_id), 
"GB_Tree_14_3" AS 
(SELECT "DT_Output_143"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", "DT_Output_143"."Estimator" AS "Score_3", 0.0 AS "Score_4", 0.0 AS "Score_5", 0.0 AS "Score_6", 0.0 AS "Score_7", 0.0 AS "Score_8", 0.0 AS "Score_9" 
FROM "DT_Output_143")
 SELECT "Score_Union_CTE_esu_17"."KEY", "Score_Union_CTE_esu_17"."Score_0", "Score_Union_CTE_esu_17"."Score_1", "Score_Union_CTE_esu_17"."Score_2", "Score_Union_CTE_esu_17"."Score_3", "Score_Union_CTE_esu_17"."Score_4", "Score_Union_CTE_esu_17"."Score_5", "Score_Union_CTE_esu_17"."Score_6", "Score_Union_CTE_esu_17"."Score_7", "Score_Union_CTE_esu_17"."Score_8", "Score_Union_CTE_esu_17"."Score_9" 
FROM (SELECT "GB_Tree_13_6"."KEY" AS "KEY", "GB_Tree_13_6"."Score_0" AS "Score_0", "GB_Tree_13_6"."Score_1" AS "Score_1", "GB_Tree_13_6"."Score_2" AS "Score_2", "GB_Tree_13_6"."Score_3" AS "Score_3", "GB_Tree_13_6"."Score_4" AS "Score_4", "GB_Tree_13_6"."Score_5" AS "Score_5", "GB_Tree_13_6"."Score_6" AS "Score_6", "GB_Tree_13_6"."Score_7" AS "Score_7", "GB_Tree_13_6"."Score_8" AS "Score_8", "GB_Tree_13_6"."Score_9" AS "Score_9" 
FROM "GB_Tree_13_6" UNION ALL SELECT "GB_Tree_13_7"."KEY" AS "KEY", "GB_Tree_13_7"."Score_0" AS "Score_0", "GB_Tree_13_7"."Score_1" AS "Score_1", "GB_Tree_13_7"."Score_2" AS "Score_2", "GB_Tree_13_7"."Score_3" AS "Score_3", "GB_Tree_13_7"."Score_4" AS "Score_4", "GB_Tree_13_7"."Score_5" AS "Score_5", "GB_Tree_13_7"."Score_6" AS "Score_6", "GB_Tree_13_7"."Score_7" AS "Score_7", "GB_Tree_13_7"."Score_8" AS "Score_8", "GB_Tree_13_7"."Score_9" AS "Score_9" 
FROM "GB_Tree_13_7" UNION ALL SELECT "GB_Tree_13_8"."KEY" AS "KEY", "GB_Tree_13_8"."Score_0" AS "Score_0", "GB_Tree_13_8"."Score_1" AS "Score_1", "GB_Tree_13_8"."Score_2" AS "Score_2", "GB_Tree_13_8"."Score_3" AS "Score_3", "GB_Tree_13_8"."Score_4" AS "Score_4", "GB_Tree_13_8"."Score_5" AS "Score_5", "GB_Tree_13_8"."Score_6" AS "Score_6", "GB_Tree_13_8"."Score_7" AS "Score_7", "GB_Tree_13_8"."Score_8" AS "Score_8", "GB_Tree_13_8"."Score_9" AS "Score_9" 
FROM "GB_Tree_13_8" UNION ALL SELECT "GB_Tree_13_9"."KEY" AS "KEY", "GB_Tree_13_9"."Score_0" AS "Score_0", "GB_Tree_13_9"."Score_1" AS "Score_1", "GB_Tree_13_9"."Score_2" AS "Score_2", "GB_Tree_13_9"."Score_3" AS "Score_3", "GB_Tree_13_9"."Score_4" AS "Score_4", "GB_Tree_13_9"."Score_5" AS "Score_5", "GB_Tree_13_9"."Score_6" AS "Score_6", "GB_Tree_13_9"."Score_7" AS "Score_7", "GB_Tree_13_9"."Score_8" AS "Score_8", "GB_Tree_13_9"."Score_9" AS "Score_9" 
FROM "GB_Tree_13_9" UNION ALL SELECT "GB_Tree_14_0"."KEY" AS "KEY", "GB_Tree_14_0"."Score_0" AS "Score_0", "GB_Tree_14_0"."Score_1" AS "Score_1", "GB_Tree_14_0"."Score_2" AS "Score_2", "GB_Tree_14_0"."Score_3" AS "Score_3", "GB_Tree_14_0"."Score_4" AS "Score_4", "GB_Tree_14_0"."Score_5" AS "Score_5", "GB_Tree_14_0"."Score_6" AS "Score_6", "GB_Tree_14_0"."Score_7" AS "Score_7", "GB_Tree_14_0"."Score_8" AS "Score_8", "GB_Tree_14_0"."Score_9" AS "Score_9" 
FROM "GB_Tree_14_0" UNION ALL SELECT "GB_Tree_14_1"."KEY" AS "KEY", "GB_Tree_14_1"."Score_0" AS "Score_0", "GB_Tree_14_1"."Score_1" AS "Score_1", "GB_Tree_14_1"."Score_2" AS "Score_2", "GB_Tree_14_1"."Score_3" AS "Score_3", "GB_Tree_14_1"."Score_4" AS "Score_4", "GB_Tree_14_1"."Score_5" AS "Score_5", "GB_Tree_14_1"."Score_6" AS "Score_6", "GB_Tree_14_1"."Score_7" AS "Score_7", "GB_Tree_14_1"."Score_8" AS "Score_8", "GB_Tree_14_1"."Score_9" AS "Score_9" 
FROM "GB_Tree_14_1" UNION ALL SELECT "GB_Tree_14_2"."KEY" AS "KEY", "GB_Tree_14_2"."Score_0" AS "Score_0", "GB_Tree_14_2"."Score_1" AS "Score_1", "GB_Tree_14_2"."Score_2" AS "Score_2", "GB_Tree_14_2"."Score_3" AS "Score_3", "GB_Tree_14_2"."Score_4" AS "Score_4", "GB_Tree_14_2"."Score_5" AS "Score_5", "GB_Tree_14_2"."Score_6" AS "Score_6", "GB_Tree_14_2"."Score_7" AS "Score_7", "GB_Tree_14_2"."Score_8" AS "Score_8", "GB_Tree_14_2"."Score_9" AS "Score_9" 
FROM "GB_Tree_14_2" UNION ALL SELECT "GB_Tree_14_3"."KEY" AS "KEY", "GB_Tree_14_3"."Score_0" AS "Score_0", "GB_Tree_14_3"."Score_1" AS "Score_1", "GB_Tree_14_3"."Score_2" AS "Score_2", "GB_Tree_14_3"."Score_3" AS "Score_3", "GB_Tree_14_3"."Score_4" AS "Score_4", "GB_Tree_14_3"."Score_5" AS "Score_5", "GB_Tree_14_3"."Score_6" AS "Score_6", "GB_Tree_14_3"."Score_7" AS "Score_7", "GB_Tree_14_3"."Score_8" AS "Score_8", "GB_Tree_14_3"."Score_9" AS "Score_9" 
FROM "GB_Tree_14_3") AS "Score_Union_CTE_esu_17"), 
"Score_Union_CTE_18" AS 
(WITH "DT_node_lookup_144" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_33" <= 5.5) THEN CASE WHEN ("ADS"."Feature_59" <= 2.5) THEN CASE WHEN ("ADS"."Feature_21" <= 5.0) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_24" <= 0.5) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_44" <= 12.5) THEN CASE WHEN ("ADS"."Feature_33" <= 10.5) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_13" <= 13.5) THEN 13 ELSE 14 END END END AS node_id_2 
FROM digits AS "ADS"), 
"DT_node_data_144" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 15 AS count, 3 AS depth, 2 AS parent_id, 1.6697021845906352 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 46 AS count, 3 AS depth, 2 AS parent_id, -0.43549834584115565 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1107 AS count, 3 AS depth, 5 AS parent_id, -0.6134737000096365 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 5 AS parent_id, 2.0123421326344846 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 133 AS count, 3 AS depth, 9 AS parent_id, -0.5077983161706059 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 10 AS count, 3 AS depth, 9 AS parent_id, 1.0946923016501968 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 114 AS count, 3 AS depth, 12 AS parent_id, 1.1987236000670372 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 11 AS count, 3 AS depth, 12 AS parent_id, -0.5619450679780505 AS "Estimator") AS "Values"), 
"DT_Output_144" AS 
(SELECT "DT_node_lookup_144"."KEY" AS "KEY", "DT_node_lookup_144".node_id_2 AS node_id_2, "DT_node_data_144".node_id AS node_id, "DT_node_data_144".feature AS feature, "DT_node_data_144".threshold AS threshold, "DT_node_data_144".count AS count, "DT_node_data_144".depth AS depth, "DT_node_data_144".parent_id AS parent_id, "DT_node_data_144"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_144" LEFT OUTER JOIN "DT_node_data_144" ON "DT_node_lookup_144".node_id_2 = "DT_node_data_144".node_id), 
"GB_Tree_14_4" AS 
(SELECT "DT_Output_144"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3", "DT_Output_144"."Estimator" AS "Score_4", 0.0 AS "Score_5", 0.0 AS "Score_6", 0.0 AS "Score_7", 0.0 AS "Score_8", 0.0 AS "Score_9" 
FROM "DT_Output_144"), 
"DT_node_lookup_145" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_21" <= 0.5) THEN CASE WHEN ("ADS"."Feature_5" <= 2.5) THEN CASE WHEN ("ADS"."Feature_36" <= 1.5) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_42" <= 9.5) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_36" <= 1.5) THEN CASE WHEN ("ADS"."Feature_6" <= 1.5) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_6" <= 7.5) THEN 13 ELSE 14 END END END AS node_id_2 
FROM digits AS "ADS"), 
"DT_node_data_145" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 12 AS count, 3 AS depth, 2 AS parent_id, 1.8519326818631212 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 209 AS count, 3 AS depth, 2 AS parent_id, -0.8163936090048229 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 125 AS count, 3 AS depth, 5 AS parent_id, 1.0772854725055683 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 47 AS count, 3 AS depth, 5 AS parent_id, -0.09325683052973899 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 200 AS count, 3 AS depth, 9 AS parent_id, -0.48562333042899125 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 23 AS count, 3 AS depth, 9 AS parent_id, 1.7899584598975031 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 757 AS count, 3 AS depth, 12 AS parent_id, -0.8840488897965809 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 64 AS count, 3 AS depth, 12 AS parent_id, -0.025381407678138405 AS "Estimator") AS "Values"), 
"DT_Output_145" AS 
(SELECT "DT_node_lookup_145"."KEY" AS "KEY", "DT_node_lookup_145".node_id_2 AS node_id_2, "DT_node_data_145".node_id AS node_id, "DT_node_data_145".feature AS feature, "DT_node_data_145".threshold AS threshold, "DT_node_data_145".count AS count, "DT_node_data_145".depth AS depth, "DT_node_data_145".parent_id AS parent_id, "DT_node_data_145"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_145" LEFT OUTER JOIN "DT_node_data_145" ON "DT_node_lookup_145".node_id_2 = "DT_node_data_145".node_id), 
"GB_Tree_14_5" AS 
(SELECT "DT_Output_145"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3", 0.0 AS "Score_4", "DT_Output_145"."Estimator" AS "Score_5", 0.0 AS "Score_6", 0.0 AS "Score_7", 0.0 AS "Score_8", 0.0 AS "Score_9" 
FROM "DT_Output_145"), 
"DT_node_lookup_146" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_21" <= 0.5) THEN CASE WHEN ("ADS"."Feature_2" <= 4.5) THEN CASE WHEN ("ADS"."Feature_61" <= 6.5) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_42" <= 15.5) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_42" <= 14.5) THEN CASE WHEN ("ADS"."Feature_46" <= 14.5) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_4" <= 3.5) THEN 13 ELSE 14 END END END AS node_id_2 
FROM digits AS "ADS"), 
"DT_node_data_146" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 52 AS count, 3 AS depth, 2 AS parent_id, -0.6822661321423782 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 150 AS count, 3 AS depth, 2 AS parent_id, 1.0452424398210585 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 183 AS count, 3 AS depth, 5 AS parent_id, -0.9994012564725319 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 8 AS count, 3 AS depth, 5 AS parent_id, 0.8914113233054858 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 839 AS count, 3 AS depth, 9 AS parent_id, -0.9281246092680734 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 8 AS count, 3 AS depth, 9 AS parent_id, 0.5008573297506822 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 10 AS count, 3 AS depth, 12 AS parent_id, 1.1243105996700897 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 187 AS count, 3 AS depth, 12 AS parent_id, -0.6308726132006126 AS "Estimator") AS "Values"), 
"DT_Output_146" AS 
(SELECT "DT_node_lookup_146"."KEY" AS "KEY", "DT_node_lookup_146".node_id_2 AS node_id_2, "DT_node_data_146".node_id AS node_id, "DT_node_data_146".feature AS feature, "DT_node_data_146".threshold AS threshold, "DT_node_data_146".count AS count, "DT_node_data_146".depth AS depth, "DT_node_data_146".parent_id AS parent_id, "DT_node_data_146"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_146" LEFT OUTER JOIN "DT_node_data_146" ON "DT_node_lookup_146".node_id_2 = "DT_node_data_146".node_id), 
"GB_Tree_14_6" AS 
(SELECT "DT_Output_146"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3", 0.0 AS "Score_4", 0.0 AS "Score_5", "DT_Output_146"."Estimator" AS "Score_6", 0.0 AS "Score_7", 0.0 AS "Score_8", 0.0 AS "Score_9" 
FROM "DT_Output_146"), 
"DT_node_lookup_147" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_60" <= 7.5) THEN CASE WHEN ("ADS"."Feature_25" <= 1.5) THEN CASE WHEN ("ADS"."Feature_37" <= 0.5) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_18" <= 5.5) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_6" <= 11.5) THEN CASE WHEN ("ADS"."Feature_5" <= 12.5) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_26" <= 5.5) THEN 13 ELSE 14 END END END AS node_id_2 
FROM digits AS "ADS"), 
"DT_node_data_147" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 29 AS count, 3 AS depth, 2 AS parent_id, -0.46723078256427303 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 121 AS count, 3 AS depth, 2 AS parent_id, 1.1072475471261016 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 12 AS count, 3 AS depth, 5 AS parent_id, 1.0211552060455165 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 98 AS count, 3 AS depth, 5 AS parent_id, -0.48109487416750796 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1024 AS count, 3 AS depth, 9 AS parent_id, -0.8910218364836687 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 138 AS count, 3 AS depth, 9 AS parent_id, 0.22286482313417688 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS count, 3 AS depth, 12 AS parent_id, 1.615267886908057 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 10 AS count, 3 AS depth, 12 AS parent_id, -0.952268683928916 AS "Estimator") AS "Values"), 
"DT_Output_147" AS 
(SELECT "DT_node_lookup_147"."KEY" AS "KEY", "DT_node_lookup_147".node_id_2 AS node_id_2, "DT_node_data_147".node_id AS node_id, "DT_node_data_147".feature AS feature, "DT_node_data_147".threshold AS threshold, "DT_node_data_147".count AS count, "DT_node_data_147".depth AS depth, "DT_node_data_147".parent_id AS parent_id, "DT_node_data_147"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_147" LEFT OUTER JOIN "DT_node_data_147" ON "DT_node_lookup_147".node_id_2 = "DT_node_data_147".node_id), 
"GB_Tree_14_7" AS 
(SELECT "DT_Output_147"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3", 0.0 AS "Score_4", 0.0 AS "Score_5", 0.0 AS "Score_6", "DT_Output_147"."Estimator" AS "Score_7", 0.0 AS "Score_8", 0.0 AS "Score_9" 
FROM "DT_Output_147"), 
"DT_node_lookup_148" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_35" <= 8.5) THEN CASE WHEN ("ADS"."Feature_43" <= 7.5) THEN CASE WHEN ("ADS"."Feature_46" <= 1.5) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_27" <= 12.5) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_13" <= 8.5) THEN CASE WHEN ("ADS"."Feature_9" <= 15.5) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_18" <= 4.5) THEN 13 ELSE 14 END END END AS node_id_2 
FROM digits AS "ADS"), 
"DT_node_data_148" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 169 AS count, 3 AS depth, 2 AS parent_id, -0.9786437201725189 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 329 AS count, 3 AS depth, 2 AS parent_id, -0.8178614631162371 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 127 AS count, 3 AS depth, 5 AS parent_id, -0.9451047829578987 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 14 AS count, 3 AS depth, 5 AS parent_id, 1.5614002825189197 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 450 AS count, 3 AS depth, 9 AS parent_id, -0.3351096235428586 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 9 AS parent_id, 2.2270618595783604 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 124 AS count, 3 AS depth, 12 AS parent_id, -0.34021811611768443 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 223 AS count, 3 AS depth, 12 AS parent_id, 0.8046125717971349 AS "Estimator") AS "Values"), 
"DT_Output_148" AS 
(SELECT "DT_node_lookup_148"."KEY" AS "KEY", "DT_node_lookup_148".node_id_2 AS node_id_2, "DT_node_data_148".node_id AS node_id, "DT_node_data_148".feature AS feature, "DT_node_data_148".threshold AS threshold, "DT_node_data_148".count AS count, "DT_node_data_148".depth AS depth, "DT_node_data_148".parent_id AS parent_id, "DT_node_data_148"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_148" LEFT OUTER JOIN "DT_node_data_148" ON "DT_node_lookup_148".node_id_2 = "DT_node_data_148".node_id), 
"GB_Tree_14_8" AS 
(SELECT "DT_Output_148"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3", 0.0 AS "Score_4", 0.0 AS "Score_5", 0.0 AS "Score_6", 0.0 AS "Score_7", "DT_Output_148"."Estimator" AS "Score_8", 0.0 AS "Score_9" 
FROM "DT_Output_148"), 
"DT_node_lookup_149" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_44" <= 1.5) THEN CASE WHEN ("ADS"."Feature_42" <= 5.5) THEN CASE WHEN ("ADS"."Feature_29" <= 9.5) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_6" <= 2.5) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_14" <= 11.5) THEN CASE WHEN ("ADS"."Feature_60" <= 4.5) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_43" <= 2.5) THEN 13 ELSE 14 END END END AS node_id_2 
FROM digits AS "ADS"), 
"DT_node_data_149" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 83 AS count, 3 AS depth, 2 AS parent_id, -0.04503125067774937 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 121 AS count, 3 AS depth, 2 AS parent_id, 1.1273086133377854 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 215 AS count, 3 AS depth, 5 AS parent_id, -0.8129884470111117 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 3 AS depth, 5 AS parent_id, 0.7989505456908172 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 148 AS count, 3 AS depth, 9 AS parent_id, 0.29634812000032806 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 811 AS count, 3 AS depth, 9 AS parent_id, -0.6125056345462174 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 25 AS count, 3 AS depth, 12 AS parent_id, 1.1743042922675124 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 31 AS count, 3 AS depth, 12 AS parent_id, -0.9804327772316678 AS "Estimator") AS "Values"), 
"DT_Output_149" AS 
(SELECT "DT_node_lookup_149"."KEY" AS "KEY", "DT_node_lookup_149".node_id_2 AS node_id_2, "DT_node_data_149".node_id AS node_id, "DT_node_data_149".feature AS feature, "DT_node_data_149".threshold AS threshold, "DT_node_data_149".count AS count, "DT_node_data_149".depth AS depth, "DT_node_data_149".parent_id AS parent_id, "DT_node_data_149"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_149" LEFT OUTER JOIN "DT_node_data_149" ON "DT_node_lookup_149".node_id_2 = "DT_node_data_149".node_id), 
"GB_Tree_14_9" AS 
(SELECT "DT_Output_149"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3", 0.0 AS "Score_4", 0.0 AS "Score_5", 0.0 AS "Score_6", 0.0 AS "Score_7", 0.0 AS "Score_8", "DT_Output_149"."Estimator" AS "Score_9" 
FROM "DT_Output_149"), 
"DT_node_lookup_150" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_36" <= 0.5) THEN CASE WHEN ("ADS"."Feature_33" <= 0.5) THEN CASE WHEN ("ADS"."Feature_63" <= 2.5) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_43" <= 13.5) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_34" <= 11.5) THEN CASE WHEN ("ADS"."Feature_58" <= 3.5) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_36" <= 3.5) THEN 13 ELSE 14 END END END AS node_id_2 
FROM digits AS "ADS"), 
"DT_node_data_150" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 65 AS count, 3 AS depth, 2 AS parent_id, -0.8089125771875375 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 2 AS parent_id, -1.1762320758072027 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 146 AS count, 3 AS depth, 5 AS parent_id, 0.9820116774219128 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 7 AS count, 3 AS depth, 5 AS parent_id, -1.0509058353015066 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 252 AS count, 3 AS depth, 9 AS parent_id, -0.9367694237370748 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 523 AS count, 3 AS depth, 9 AS parent_id, -0.9231397400577014 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 16 AS count, 3 AS depth, 12 AS parent_id, 0.7301830154699573 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 427 AS count, 3 AS depth, 12 AS parent_id, -0.9180248747545169 AS "Estimator") AS "Values"), 
"DT_Output_150" AS 
(SELECT "DT_node_lookup_150"."KEY" AS "KEY", "DT_node_lookup_150".node_id_2 AS node_id_2, "DT_node_data_150".node_id AS node_id, "DT_node_data_150".feature AS feature, "DT_node_data_150".threshold AS threshold, "DT_node_data_150".count AS count, "DT_node_data_150".depth AS depth, "DT_node_data_150".parent_id AS parent_id, "DT_node_data_150"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_150" LEFT OUTER JOIN "DT_node_data_150" ON "DT_node_lookup_150".node_id_2 = "DT_node_data_150".node_id), 
"GB_Tree_15_0" AS 
(SELECT "DT_Output_150"."KEY" AS "KEY", "DT_Output_150"."Estimator" AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3", 0.0 AS "Score_4", 0.0 AS "Score_5", 0.0 AS "Score_6", 0.0 AS "Score_7", 0.0 AS "Score_8", 0.0 AS "Score_9" 
FROM "DT_Output_150"), 
"DT_node_lookup_151" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_12" <= 15.5) THEN CASE WHEN ("ADS"."Feature_63" <= 7.5) THEN CASE WHEN ("ADS"."Feature_3" <= 0.5) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_19" <= 13.0) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_10" <= 7.5) THEN CASE WHEN ("ADS"."Feature_38" <= 0.5) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_51" <= 15.5) THEN 13 ELSE 14 END END END AS node_id_2 
FROM digits AS "ADS"), 
"DT_node_data_151" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 19 AS count, 3 AS depth, 2 AS parent_id, 0.5765423237753519 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1110 AS count, 3 AS depth, 2 AS parent_id, -0.6460475538886974 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 10 AS count, 3 AS depth, 5 AS parent_id, -0.9253982412584417 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 17 AS count, 3 AS depth, 5 AS parent_id, 1.227894645537278 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 84 AS count, 3 AS depth, 9 AS parent_id, 1.1819059308156865 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 34 AS count, 3 AS depth, 9 AS parent_id, -0.05434117702029197 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 123 AS count, 3 AS depth, 12 AS parent_id, -0.7387374828622849 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 40 AS count, 3 AS depth, 12 AS parent_id, 0.8979539169763543 AS "Estimator") AS "Values"), 
"DT_Output_151" AS 
(SELECT "DT_node_lookup_151"."KEY" AS "KEY", "DT_node_lookup_151".node_id_2 AS node_id_2, "DT_node_data_151".node_id AS node_id, "DT_node_data_151".feature AS feature, "DT_node_data_151".threshold AS threshold, "DT_node_data_151".count AS count, "DT_node_data_151".depth AS depth, "DT_node_data_151".parent_id AS parent_id, "DT_node_data_151"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_151" LEFT OUTER JOIN "DT_node_data_151" ON "DT_node_lookup_151".node_id_2 = "DT_node_data_151".node_id), 
"GB_Tree_15_1" AS 
(SELECT "DT_Output_151"."KEY" AS "KEY", 0.0 AS "Score_0", "DT_Output_151"."Estimator" AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3", 0.0 AS "Score_4", 0.0 AS "Score_5", 0.0 AS "Score_6", 0.0 AS "Score_7", 0.0 AS "Score_8", 0.0 AS "Score_9" 
FROM "DT_Output_151")
 SELECT "Score_Union_CTE_esu_18"."KEY", "Score_Union_CTE_esu_18"."Score_0", "Score_Union_CTE_esu_18"."Score_1", "Score_Union_CTE_esu_18"."Score_2", "Score_Union_CTE_esu_18"."Score_3", "Score_Union_CTE_esu_18"."Score_4", "Score_Union_CTE_esu_18"."Score_5", "Score_Union_CTE_esu_18"."Score_6", "Score_Union_CTE_esu_18"."Score_7", "Score_Union_CTE_esu_18"."Score_8", "Score_Union_CTE_esu_18"."Score_9" 
FROM (SELECT "GB_Tree_14_4"."KEY" AS "KEY", "GB_Tree_14_4"."Score_0" AS "Score_0", "GB_Tree_14_4"."Score_1" AS "Score_1", "GB_Tree_14_4"."Score_2" AS "Score_2", "GB_Tree_14_4"."Score_3" AS "Score_3", "GB_Tree_14_4"."Score_4" AS "Score_4", "GB_Tree_14_4"."Score_5" AS "Score_5", "GB_Tree_14_4"."Score_6" AS "Score_6", "GB_Tree_14_4"."Score_7" AS "Score_7", "GB_Tree_14_4"."Score_8" AS "Score_8", "GB_Tree_14_4"."Score_9" AS "Score_9" 
FROM "GB_Tree_14_4" UNION ALL SELECT "GB_Tree_14_5"."KEY" AS "KEY", "GB_Tree_14_5"."Score_0" AS "Score_0", "GB_Tree_14_5"."Score_1" AS "Score_1", "GB_Tree_14_5"."Score_2" AS "Score_2", "GB_Tree_14_5"."Score_3" AS "Score_3", "GB_Tree_14_5"."Score_4" AS "Score_4", "GB_Tree_14_5"."Score_5" AS "Score_5", "GB_Tree_14_5"."Score_6" AS "Score_6", "GB_Tree_14_5"."Score_7" AS "Score_7", "GB_Tree_14_5"."Score_8" AS "Score_8", "GB_Tree_14_5"."Score_9" AS "Score_9" 
FROM "GB_Tree_14_5" UNION ALL SELECT "GB_Tree_14_6"."KEY" AS "KEY", "GB_Tree_14_6"."Score_0" AS "Score_0", "GB_Tree_14_6"."Score_1" AS "Score_1", "GB_Tree_14_6"."Score_2" AS "Score_2", "GB_Tree_14_6"."Score_3" AS "Score_3", "GB_Tree_14_6"."Score_4" AS "Score_4", "GB_Tree_14_6"."Score_5" AS "Score_5", "GB_Tree_14_6"."Score_6" AS "Score_6", "GB_Tree_14_6"."Score_7" AS "Score_7", "GB_Tree_14_6"."Score_8" AS "Score_8", "GB_Tree_14_6"."Score_9" AS "Score_9" 
FROM "GB_Tree_14_6" UNION ALL SELECT "GB_Tree_14_7"."KEY" AS "KEY", "GB_Tree_14_7"."Score_0" AS "Score_0", "GB_Tree_14_7"."Score_1" AS "Score_1", "GB_Tree_14_7"."Score_2" AS "Score_2", "GB_Tree_14_7"."Score_3" AS "Score_3", "GB_Tree_14_7"."Score_4" AS "Score_4", "GB_Tree_14_7"."Score_5" AS "Score_5", "GB_Tree_14_7"."Score_6" AS "Score_6", "GB_Tree_14_7"."Score_7" AS "Score_7", "GB_Tree_14_7"."Score_8" AS "Score_8", "GB_Tree_14_7"."Score_9" AS "Score_9" 
FROM "GB_Tree_14_7" UNION ALL SELECT "GB_Tree_14_8"."KEY" AS "KEY", "GB_Tree_14_8"."Score_0" AS "Score_0", "GB_Tree_14_8"."Score_1" AS "Score_1", "GB_Tree_14_8"."Score_2" AS "Score_2", "GB_Tree_14_8"."Score_3" AS "Score_3", "GB_Tree_14_8"."Score_4" AS "Score_4", "GB_Tree_14_8"."Score_5" AS "Score_5", "GB_Tree_14_8"."Score_6" AS "Score_6", "GB_Tree_14_8"."Score_7" AS "Score_7", "GB_Tree_14_8"."Score_8" AS "Score_8", "GB_Tree_14_8"."Score_9" AS "Score_9" 
FROM "GB_Tree_14_8" UNION ALL SELECT "GB_Tree_14_9"."KEY" AS "KEY", "GB_Tree_14_9"."Score_0" AS "Score_0", "GB_Tree_14_9"."Score_1" AS "Score_1", "GB_Tree_14_9"."Score_2" AS "Score_2", "GB_Tree_14_9"."Score_3" AS "Score_3", "GB_Tree_14_9"."Score_4" AS "Score_4", "GB_Tree_14_9"."Score_5" AS "Score_5", "GB_Tree_14_9"."Score_6" AS "Score_6", "GB_Tree_14_9"."Score_7" AS "Score_7", "GB_Tree_14_9"."Score_8" AS "Score_8", "GB_Tree_14_9"."Score_9" AS "Score_9" 
FROM "GB_Tree_14_9" UNION ALL SELECT "GB_Tree_15_0"."KEY" AS "KEY", "GB_Tree_15_0"."Score_0" AS "Score_0", "GB_Tree_15_0"."Score_1" AS "Score_1", "GB_Tree_15_0"."Score_2" AS "Score_2", "GB_Tree_15_0"."Score_3" AS "Score_3", "GB_Tree_15_0"."Score_4" AS "Score_4", "GB_Tree_15_0"."Score_5" AS "Score_5", "GB_Tree_15_0"."Score_6" AS "Score_6", "GB_Tree_15_0"."Score_7" AS "Score_7", "GB_Tree_15_0"."Score_8" AS "Score_8", "GB_Tree_15_0"."Score_9" AS "Score_9" 
FROM "GB_Tree_15_0" UNION ALL SELECT "GB_Tree_15_1"."KEY" AS "KEY", "GB_Tree_15_1"."Score_0" AS "Score_0", "GB_Tree_15_1"."Score_1" AS "Score_1", "GB_Tree_15_1"."Score_2" AS "Score_2", "GB_Tree_15_1"."Score_3" AS "Score_3", "GB_Tree_15_1"."Score_4" AS "Score_4", "GB_Tree_15_1"."Score_5" AS "Score_5", "GB_Tree_15_1"."Score_6" AS "Score_6", "GB_Tree_15_1"."Score_7" AS "Score_7", "GB_Tree_15_1"."Score_8" AS "Score_8", "GB_Tree_15_1"."Score_9" AS "Score_9" 
FROM "GB_Tree_15_1") AS "Score_Union_CTE_esu_18"), 
"Score_Union_CTE_19" AS 
(WITH "DT_node_lookup_152" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_26" <= 3.5) THEN CASE WHEN ("ADS"."Feature_51" <= 14.5) THEN CASE WHEN ("ADS"."Feature_37" <= 0.5) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_53" <= 3.5) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_9" <= 4.5) THEN CASE WHEN ("ADS"."Feature_56" <= 0.5) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_13" <= 0.5) THEN 13 ELSE 14 END END END AS node_id_2 
FROM digits AS "ADS"), 
"DT_node_data_152" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 45 AS count, 3 AS depth, 2 AS parent_id, 0.6703316841511534 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 228 AS count, 3 AS depth, 2 AS parent_id, -0.43902576493670886 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 47 AS count, 3 AS depth, 5 AS parent_id, -0.7200000713276983 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 85 AS count, 3 AS depth, 5 AS parent_id, 1.217547004850682 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 896 AS count, 3 AS depth, 9 AS parent_id, -0.7454176290058615 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 9 AS parent_id, 1.1689829892121826 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 17 AS count, 3 AS depth, 12 AS parent_id, 1.2647003349918033 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 118 AS count, 3 AS depth, 12 AS parent_id, -0.31477702992190765 AS "Estimator") AS "Values"), 
"DT_Output_152" AS 
(SELECT "DT_node_lookup_152"."KEY" AS "KEY", "DT_node_lookup_152".node_id_2 AS node_id_2, "DT_node_data_152".node_id AS node_id, "DT_node_data_152".feature AS feature, "DT_node_data_152".threshold AS threshold, "DT_node_data_152".count AS count, "DT_node_data_152".depth AS depth, "DT_node_data_152".parent_id AS parent_id, "DT_node_data_152"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_152" LEFT OUTER JOIN "DT_node_data_152" ON "DT_node_lookup_152".node_id_2 = "DT_node_data_152".node_id), 
"GB_Tree_15_2" AS 
(SELECT "DT_Output_152"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", "DT_Output_152"."Estimator" AS "Score_2", 0.0 AS "Score_3", 0.0 AS "Score_4", 0.0 AS "Score_5", 0.0 AS "Score_6", 0.0 AS "Score_7", 0.0 AS "Score_8", 0.0 AS "Score_9" 
FROM "DT_Output_152"), 
"DT_node_lookup_153" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_34" <= 0.5) THEN CASE WHEN ("ADS"."Feature_19" <= 4.5) THEN CASE WHEN ("ADS"."Feature_43" <= 3.5) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_29" <= 9.5) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_53" <= 15.5) THEN CASE WHEN ("ADS"."Feature_18" <= 3.5) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_4" <= 15.5) THEN 13 ELSE 14 END END END AS node_id_2 
FROM digits AS "ADS"), 
"DT_node_data_153" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 112 AS count, 3 AS depth, 2 AS parent_id, 1.1852429675459093 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 70 AS count, 3 AS depth, 2 AS parent_id, -0.5153984676417149 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 98 AS count, 3 AS depth, 5 AS parent_id, 0.5146289951070996 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 91 AS count, 3 AS depth, 5 AS parent_id, -0.9143386836412654 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 174 AS count, 3 AS depth, 9 AS parent_id, 0.05231375753699077 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 754 AS count, 3 AS depth, 9 AS parent_id, -0.9058702119625657 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 110 AS count, 3 AS depth, 12 AS parent_id, -0.2566849162978148 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 28 AS count, 3 AS depth, 12 AS parent_id, 1.7549754586230417 AS "Estimator") AS "Values"), 
"DT_Output_153" AS 
(SELECT "DT_node_lookup_153"."KEY" AS "KEY", "DT_node_lookup_153".node_id_2 AS node_id_2, "DT_node_data_153".node_id AS node_id, "DT_node_data_153".feature AS feature, "DT_node_data_153".threshold AS threshold, "DT_node_data_153".count AS count, "DT_node_data_153".depth AS depth, "DT_node_data_153".parent_id AS parent_id, "DT_node_data_153"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_153" LEFT OUTER JOIN "DT_node_data_153" ON "DT_node_lookup_153".node_id_2 = "DT_node_data_153".node_id), 
"GB_Tree_15_3" AS 
(SELECT "DT_Output_153"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", "DT_Output_153"."Estimator" AS "Score_3", 0.0 AS "Score_4", 0.0 AS "Score_5", 0.0 AS "Score_6", 0.0 AS "Score_7", 0.0 AS "Score_8", 0.0 AS "Score_9" 
FROM "DT_Output_153"), 
"DT_node_lookup_154" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_2" <= 0.5) THEN CASE WHEN ("ADS"."Feature_13" <= 7.5) THEN CASE WHEN ("ADS"."Feature_54" <= 1.5) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_5" <= 3.5) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_12" <= 2.5) THEN CASE WHEN ("ADS"."Feature_53" <= 0.5) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_30" <= 12.5) THEN 13 ELSE 14 END END END AS node_id_2 
FROM digits AS "ADS"), 
"DT_node_data_154" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 147 AS count, 3 AS depth, 2 AS parent_id, 1.224668438750105 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 77 AS count, 3 AS depth, 2 AS parent_id, -0.9335594141308837 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 19 AS count, 3 AS depth, 5 AS parent_id, 0.8540417222351177 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 111 AS count, 3 AS depth, 5 AS parent_id, -0.8654111067996175 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 17 AS count, 3 AS depth, 9 AS parent_id, 2.0468720660148754 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 81 AS count, 3 AS depth, 9 AS parent_id, -0.64304025974938 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 967 AS count, 3 AS depth, 12 AS parent_id, -0.8594624981612499 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 18 AS count, 3 AS depth, 12 AS parent_id, 1.1391829414025745 AS "Estimator") AS "Values"), 
"DT_Output_154" AS 
(SELECT "DT_node_lookup_154"."KEY" AS "KEY", "DT_node_lookup_154".node_id_2 AS node_id_2, "DT_node_data_154".node_id AS node_id, "DT_node_data_154".feature AS feature, "DT_node_data_154".threshold AS threshold, "DT_node_data_154".count AS count, "DT_node_data_154".depth AS depth, "DT_node_data_154".parent_id AS parent_id, "DT_node_data_154"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_154" LEFT OUTER JOIN "DT_node_data_154" ON "DT_node_lookup_154".node_id_2 = "DT_node_data_154".node_id), 
"GB_Tree_15_4" AS 
(SELECT "DT_Output_154"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3", "DT_Output_154"."Estimator" AS "Score_4", 0.0 AS "Score_5", 0.0 AS "Score_6", 0.0 AS "Score_7", 0.0 AS "Score_8", 0.0 AS "Score_9" 
FROM "DT_Output_154"), 
"DT_node_lookup_155" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_21" <= 2.5) THEN CASE WHEN ("ADS"."Feature_6" <= 0.5) THEN CASE WHEN ("ADS"."Feature_42" <= 0.5) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_38" <= 10.5) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_36" <= 1.5) THEN CASE WHEN ("ADS"."Feature_5" <= 15.5) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_1" <= 5.0) THEN 13 ELSE 14 END END END AS node_id_2 
FROM digits AS "ADS"), 
"DT_node_data_155" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 86 AS count, 3 AS depth, 2 AS parent_id, 0.6825229970875722 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 292 AS count, 3 AS depth, 2 AS parent_id, -0.6342652948181708 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 99 AS count, 3 AS depth, 5 AS parent_id, 1.039936830370983 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 5 AS parent_id, 2.672575436515487 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 207 AS count, 3 AS depth, 9 AS parent_id, -0.3620318243246163 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS count, 3 AS depth, 9 AS parent_id, 2.524394735141732 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 744 AS count, 3 AS depth, 12 AS parent_id, -0.9275662287533594 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 3 AS depth, 12 AS parent_id, 0.7059415544597752 AS "Estimator") AS "Values"), 
"DT_Output_155" AS 
(SELECT "DT_node_lookup_155"."KEY" AS "KEY", "DT_node_lookup_155".node_id_2 AS node_id_2, "DT_node_data_155".node_id AS node_id, "DT_node_data_155".feature AS feature, "DT_node_data_155".threshold AS threshold, "DT_node_data_155".count AS count, "DT_node_data_155".depth AS depth, "DT_node_data_155".parent_id AS parent_id, "DT_node_data_155"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_155" LEFT OUTER JOIN "DT_node_data_155" ON "DT_node_lookup_155".node_id_2 = "DT_node_data_155".node_id), 
"GB_Tree_15_5" AS 
(SELECT "DT_Output_155"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3", 0.0 AS "Score_4", "DT_Output_155"."Estimator" AS "Score_5", 0.0 AS "Score_6", 0.0 AS "Score_7", 0.0 AS "Score_8", 0.0 AS "Score_9" 
FROM "DT_Output_155"), 
"DT_node_lookup_156" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_21" <= 0.5) THEN CASE WHEN ("ADS"."Feature_42" <= 7.5) THEN CASE WHEN ("ADS"."Feature_59" <= 8.0) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_61" <= 4.0) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_33" <= 6.5) THEN CASE WHEN ("ADS"."Feature_46" <= 14.5) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_29" <= 0.5) THEN 13 ELSE 14 END END END AS node_id_2 
FROM digits AS "ADS"), 
"DT_node_data_156" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 8 AS count, 3 AS depth, 2 AS parent_id, 1.2272877672395226 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 192 AS count, 3 AS depth, 2 AS parent_id, -0.9415327971705642 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 31 AS count, 3 AS depth, 5 AS parent_id, -1.0189287723544795 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 162 AS count, 3 AS depth, 5 AS parent_id, 0.8609366269457933 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 869 AS count, 3 AS depth, 9 AS parent_id, -0.9246261113908784 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 9 AS count, 3 AS depth, 9 AS parent_id, 0.3936092126907929 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS count, 3 AS depth, 12 AS parent_id, 1.5390631923445706 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 161 AS count, 3 AS depth, 12 AS parent_id, -0.3908767065215626 AS "Estimator") AS "Values"), 
"DT_Output_156" AS 
(SELECT "DT_node_lookup_156"."KEY" AS "KEY", "DT_node_lookup_156".node_id_2 AS node_id_2, "DT_node_data_156".node_id AS node_id, "DT_node_data_156".feature AS feature, "DT_node_data_156".threshold AS threshold, "DT_node_data_156".count AS count, "DT_node_data_156".depth AS depth, "DT_node_data_156".parent_id AS parent_id, "DT_node_data_156"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_156" LEFT OUTER JOIN "DT_node_data_156" ON "DT_node_lookup_156".node_id_2 = "DT_node_data_156".node_id), 
"GB_Tree_15_6" AS 
(SELECT "DT_Output_156"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3", 0.0 AS "Score_4", 0.0 AS "Score_5", "DT_Output_156"."Estimator" AS "Score_6", 0.0 AS "Score_7", 0.0 AS "Score_8", 0.0 AS "Score_9" 
FROM "DT_Output_156"), 
"DT_node_lookup_157" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_53" <= 0.5) THEN CASE WHEN ("ADS"."Feature_29" <= 7.5) THEN CASE WHEN ("ADS"."Feature_52" <= 0.5) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_12" <= 5.5) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_30" <= 13.5) THEN CASE WHEN ("ADS"."Feature_27" <= 1.5) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_6" <= 3.5) THEN 13 ELSE 14 END END END AS node_id_2 
FROM digits AS "ADS"), 
"DT_node_data_157" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 15 AS count, 3 AS depth, 2 AS parent_id, 1.0612357627083877 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 106 AS count, 3 AS depth, 2 AS parent_id, -0.6780329516716432 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 41 AS count, 3 AS depth, 5 AS parent_id, -0.5319045809097964 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 129 AS count, 3 AS depth, 5 AS parent_id, 1.0893969075858703 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 220 AS count, 3 AS depth, 9 AS parent_id, -0.2024042001288603 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 913 AS count, 3 AS depth, 9 AS parent_id, -0.8517611345508278 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 10 AS count, 3 AS depth, 12 AS parent_id, -0.9134826830414746 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 3 AS depth, 12 AS parent_id, 1.5764289866003085 AS "Estimator") AS "Values"), 
"DT_Output_157" AS 
(SELECT "DT_node_lookup_157"."KEY" AS "KEY", "DT_node_lookup_157".node_id_2 AS node_id_2, "DT_node_data_157".node_id AS node_id, "DT_node_data_157".feature AS feature, "DT_node_data_157".threshold AS threshold, "DT_node_data_157".count AS count, "DT_node_data_157".depth AS depth, "DT_node_data_157".parent_id AS parent_id, "DT_node_data_157"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_157" LEFT OUTER JOIN "DT_node_data_157" ON "DT_node_lookup_157".node_id_2 = "DT_node_data_157".node_id), 
"GB_Tree_15_7" AS 
(SELECT "DT_Output_157"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3", 0.0 AS "Score_4", 0.0 AS "Score_5", 0.0 AS "Score_6", "DT_Output_157"."Estimator" AS "Score_7", 0.0 AS "Score_8", 0.0 AS "Score_9" 
FROM "DT_Output_157"), 
"DT_node_lookup_158" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_50" <= 3.5) THEN CASE WHEN ("ADS"."Feature_54" <= 1.5) THEN CASE WHEN ("ADS"."Feature_37" <= 2.5) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_58" <= 0.5) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_35" <= 8.5) THEN CASE WHEN ("ADS"."Feature_52" <= 1.5) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_51" <= 13.5) THEN 13 ELSE 14 END END END AS node_id_2 
FROM digits AS "ADS"), 
"DT_node_data_158" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 41 AS count, 3 AS depth, 2 AS parent_id, -1.1290615691150108 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 300 AS count, 3 AS depth, 2 AS parent_id, -0.8431018442459788 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 37 AS count, 3 AS depth, 5 AS parent_id, 1.01037803913454 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 87 AS count, 3 AS depth, 5 AS parent_id, -0.9511351836812554 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 48 AS count, 3 AS depth, 9 AS parent_id, 0.3724149128423629 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 405 AS count, 3 AS depth, 9 AS parent_id, -0.8691665110713139 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 281 AS count, 3 AS depth, 12 AS parent_id, 0.8118791783875365 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 238 AS count, 3 AS depth, 12 AS parent_id, -0.4703354733150523 AS "Estimator") AS "Values"), 
"DT_Output_158" AS 
(SELECT "DT_node_lookup_158"."KEY" AS "KEY", "DT_node_lookup_158".node_id_2 AS node_id_2, "DT_node_data_158".node_id AS node_id, "DT_node_data_158".feature AS feature, "DT_node_data_158".threshold AS threshold, "DT_node_data_158".count AS count, "DT_node_data_158".depth AS depth, "DT_node_data_158".parent_id AS parent_id, "DT_node_data_158"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_158" LEFT OUTER JOIN "DT_node_data_158" ON "DT_node_lookup_158".node_id_2 = "DT_node_data_158".node_id), 
"GB_Tree_15_8" AS 
(SELECT "DT_Output_158"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3", 0.0 AS "Score_4", 0.0 AS "Score_5", 0.0 AS "Score_6", 0.0 AS "Score_7", "DT_Output_158"."Estimator" AS "Score_8", 0.0 AS "Score_9" 
FROM "DT_Output_158"), 
"DT_node_lookup_159" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_21" <= 10.5) THEN CASE WHEN ("ADS"."Feature_54" <= 13.5) THEN CASE WHEN ("ADS"."Feature_17" <= 14.5) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_43" <= 1.0) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_42" <= 4.5) THEN CASE WHEN ("ADS"."Feature_18" <= 7.5) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_34" <= 1.5) THEN 13 ELSE 14 END END END AS node_id_2 
FROM digits AS "ADS"), 
"DT_node_data_159" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 723 AS count, 3 AS depth, 2 AS parent_id, -0.8019687064116013 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 7 AS count, 3 AS depth, 2 AS parent_id, 1.3410344616173109 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 12 AS count, 3 AS depth, 5 AS parent_id, 1.1747360581656128 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 73 AS count, 3 AS depth, 5 AS parent_id, -0.9224488662539011 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 134 AS count, 3 AS depth, 9 AS parent_id, -0.3030820708259087 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 196 AS count, 3 AS depth, 9 AS parent_id, 0.874944840481686 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 30 AS count, 3 AS depth, 12 AS parent_id, 0.5970323774027214 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 262 AS count, 3 AS depth, 12 AS parent_id, -0.8316045781834582 AS "Estimator") AS "Values"), 
"DT_Output_159" AS 
(SELECT "DT_node_lookup_159"."KEY" AS "KEY", "DT_node_lookup_159".node_id_2 AS node_id_2, "DT_node_data_159".node_id AS node_id, "DT_node_data_159".feature AS feature, "DT_node_data_159".threshold AS threshold, "DT_node_data_159".count AS count, "DT_node_data_159".depth AS depth, "DT_node_data_159".parent_id AS parent_id, "DT_node_data_159"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_159" LEFT OUTER JOIN "DT_node_data_159" ON "DT_node_lookup_159".node_id_2 = "DT_node_data_159".node_id), 
"GB_Tree_15_9" AS 
(SELECT "DT_Output_159"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3", 0.0 AS "Score_4", 0.0 AS "Score_5", 0.0 AS "Score_6", 0.0 AS "Score_7", 0.0 AS "Score_8", "DT_Output_159"."Estimator" AS "Score_9" 
FROM "DT_Output_159")
 SELECT "Score_Union_CTE_esu_19"."KEY", "Score_Union_CTE_esu_19"."Score_0", "Score_Union_CTE_esu_19"."Score_1", "Score_Union_CTE_esu_19"."Score_2", "Score_Union_CTE_esu_19"."Score_3", "Score_Union_CTE_esu_19"."Score_4", "Score_Union_CTE_esu_19"."Score_5", "Score_Union_CTE_esu_19"."Score_6", "Score_Union_CTE_esu_19"."Score_7", "Score_Union_CTE_esu_19"."Score_8", "Score_Union_CTE_esu_19"."Score_9" 
FROM (SELECT "GB_Tree_15_2"."KEY" AS "KEY", "GB_Tree_15_2"."Score_0" AS "Score_0", "GB_Tree_15_2"."Score_1" AS "Score_1", "GB_Tree_15_2"."Score_2" AS "Score_2", "GB_Tree_15_2"."Score_3" AS "Score_3", "GB_Tree_15_2"."Score_4" AS "Score_4", "GB_Tree_15_2"."Score_5" AS "Score_5", "GB_Tree_15_2"."Score_6" AS "Score_6", "GB_Tree_15_2"."Score_7" AS "Score_7", "GB_Tree_15_2"."Score_8" AS "Score_8", "GB_Tree_15_2"."Score_9" AS "Score_9" 
FROM "GB_Tree_15_2" UNION ALL SELECT "GB_Tree_15_3"."KEY" AS "KEY", "GB_Tree_15_3"."Score_0" AS "Score_0", "GB_Tree_15_3"."Score_1" AS "Score_1", "GB_Tree_15_3"."Score_2" AS "Score_2", "GB_Tree_15_3"."Score_3" AS "Score_3", "GB_Tree_15_3"."Score_4" AS "Score_4", "GB_Tree_15_3"."Score_5" AS "Score_5", "GB_Tree_15_3"."Score_6" AS "Score_6", "GB_Tree_15_3"."Score_7" AS "Score_7", "GB_Tree_15_3"."Score_8" AS "Score_8", "GB_Tree_15_3"."Score_9" AS "Score_9" 
FROM "GB_Tree_15_3" UNION ALL SELECT "GB_Tree_15_4"."KEY" AS "KEY", "GB_Tree_15_4"."Score_0" AS "Score_0", "GB_Tree_15_4"."Score_1" AS "Score_1", "GB_Tree_15_4"."Score_2" AS "Score_2", "GB_Tree_15_4"."Score_3" AS "Score_3", "GB_Tree_15_4"."Score_4" AS "Score_4", "GB_Tree_15_4"."Score_5" AS "Score_5", "GB_Tree_15_4"."Score_6" AS "Score_6", "GB_Tree_15_4"."Score_7" AS "Score_7", "GB_Tree_15_4"."Score_8" AS "Score_8", "GB_Tree_15_4"."Score_9" AS "Score_9" 
FROM "GB_Tree_15_4" UNION ALL SELECT "GB_Tree_15_5"."KEY" AS "KEY", "GB_Tree_15_5"."Score_0" AS "Score_0", "GB_Tree_15_5"."Score_1" AS "Score_1", "GB_Tree_15_5"."Score_2" AS "Score_2", "GB_Tree_15_5"."Score_3" AS "Score_3", "GB_Tree_15_5"."Score_4" AS "Score_4", "GB_Tree_15_5"."Score_5" AS "Score_5", "GB_Tree_15_5"."Score_6" AS "Score_6", "GB_Tree_15_5"."Score_7" AS "Score_7", "GB_Tree_15_5"."Score_8" AS "Score_8", "GB_Tree_15_5"."Score_9" AS "Score_9" 
FROM "GB_Tree_15_5" UNION ALL SELECT "GB_Tree_15_6"."KEY" AS "KEY", "GB_Tree_15_6"."Score_0" AS "Score_0", "GB_Tree_15_6"."Score_1" AS "Score_1", "GB_Tree_15_6"."Score_2" AS "Score_2", "GB_Tree_15_6"."Score_3" AS "Score_3", "GB_Tree_15_6"."Score_4" AS "Score_4", "GB_Tree_15_6"."Score_5" AS "Score_5", "GB_Tree_15_6"."Score_6" AS "Score_6", "GB_Tree_15_6"."Score_7" AS "Score_7", "GB_Tree_15_6"."Score_8" AS "Score_8", "GB_Tree_15_6"."Score_9" AS "Score_9" 
FROM "GB_Tree_15_6" UNION ALL SELECT "GB_Tree_15_7"."KEY" AS "KEY", "GB_Tree_15_7"."Score_0" AS "Score_0", "GB_Tree_15_7"."Score_1" AS "Score_1", "GB_Tree_15_7"."Score_2" AS "Score_2", "GB_Tree_15_7"."Score_3" AS "Score_3", "GB_Tree_15_7"."Score_4" AS "Score_4", "GB_Tree_15_7"."Score_5" AS "Score_5", "GB_Tree_15_7"."Score_6" AS "Score_6", "GB_Tree_15_7"."Score_7" AS "Score_7", "GB_Tree_15_7"."Score_8" AS "Score_8", "GB_Tree_15_7"."Score_9" AS "Score_9" 
FROM "GB_Tree_15_7" UNION ALL SELECT "GB_Tree_15_8"."KEY" AS "KEY", "GB_Tree_15_8"."Score_0" AS "Score_0", "GB_Tree_15_8"."Score_1" AS "Score_1", "GB_Tree_15_8"."Score_2" AS "Score_2", "GB_Tree_15_8"."Score_3" AS "Score_3", "GB_Tree_15_8"."Score_4" AS "Score_4", "GB_Tree_15_8"."Score_5" AS "Score_5", "GB_Tree_15_8"."Score_6" AS "Score_6", "GB_Tree_15_8"."Score_7" AS "Score_7", "GB_Tree_15_8"."Score_8" AS "Score_8", "GB_Tree_15_8"."Score_9" AS "Score_9" 
FROM "GB_Tree_15_8" UNION ALL SELECT "GB_Tree_15_9"."KEY" AS "KEY", "GB_Tree_15_9"."Score_0" AS "Score_0", "GB_Tree_15_9"."Score_1" AS "Score_1", "GB_Tree_15_9"."Score_2" AS "Score_2", "GB_Tree_15_9"."Score_3" AS "Score_3", "GB_Tree_15_9"."Score_4" AS "Score_4", "GB_Tree_15_9"."Score_5" AS "Score_5", "GB_Tree_15_9"."Score_6" AS "Score_6", "GB_Tree_15_9"."Score_7" AS "Score_7", "GB_Tree_15_9"."Score_8" AS "Score_8", "GB_Tree_15_9"."Score_9" AS "Score_9" 
FROM "GB_Tree_15_9") AS "Score_Union_CTE_esu_19"), 
"Score_Union_CTE_20" AS 
(WITH "DT_node_lookup_160" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_36" <= 0.5) THEN CASE WHEN ("ADS"."Feature_28" <= 2.5) THEN CASE WHEN ("ADS"."Feature_43" <= 13.5) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_2" <= 0.5) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_34" <= 11.5) THEN CASE WHEN ("ADS"."Feature_58" <= 3.5) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_36" <= 3.5) THEN 13 ELSE 14 END END END AS node_id_2 
FROM digits AS "ADS"), 
"DT_node_data_160" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 138 AS count, 3 AS depth, 2 AS parent_id, 0.9653713091801218 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 8 AS count, 3 AS depth, 2 AS parent_id, -1.0266866602886426 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 6 AS count, 3 AS depth, 5 AS parent_id, 0.7800874463729198 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 67 AS count, 3 AS depth, 5 AS parent_id, -0.9620526059705768 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 252 AS count, 3 AS depth, 9 AS parent_id, -0.9335755516064166 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 523 AS count, 3 AS depth, 9 AS parent_id, -0.9215752890308696 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 16 AS count, 3 AS depth, 12 AS parent_id, 0.6625067446217444 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 427 AS count, 3 AS depth, 12 AS parent_id, -0.9164465888752868 AS "Estimator") AS "Values"), 
"DT_Output_160" AS 
(SELECT "DT_node_lookup_160"."KEY" AS "KEY", "DT_node_lookup_160".node_id_2 AS node_id_2, "DT_node_data_160".node_id AS node_id, "DT_node_data_160".feature AS feature, "DT_node_data_160".threshold AS threshold, "DT_node_data_160".count AS count, "DT_node_data_160".depth AS depth, "DT_node_data_160".parent_id AS parent_id, "DT_node_data_160"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_160" LEFT OUTER JOIN "DT_node_data_160" ON "DT_node_lookup_160".node_id_2 = "DT_node_data_160".node_id), 
"GB_Tree_16_0" AS 
(SELECT "DT_Output_160"."KEY" AS "KEY", "DT_Output_160"."Estimator" AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3", 0.0 AS "Score_4", 0.0 AS "Score_5", 0.0 AS "Score_6", 0.0 AS "Score_7", 0.0 AS "Score_8", 0.0 AS "Score_9" 
FROM "DT_Output_160"), 
"DT_node_lookup_161" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_19" <= 13.5) THEN CASE WHEN ("ADS"."Feature_3" <= 1.5) THEN CASE WHEN ("ADS"."Feature_17" <= 5.0) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_10" <= 0.5) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_42" <= 3.5) THEN CASE WHEN ("ADS"."Feature_61" <= 13.5) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_51" <= 15.5) THEN 13 ELSE 14 END END END AS node_id_2 
FROM digits AS "ADS"), 
"DT_node_data_161" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 30 AS count, 3 AS depth, 2 AS parent_id, 0.5811351492031743 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 3 AS depth, 2 AS parent_id, 2.851838717318759 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 25 AS count, 3 AS depth, 5 AS parent_id, 0.5954158404186202 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1064 AS count, 3 AS depth, 5 AS parent_id, -0.8836973094455071 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 59 AS count, 3 AS depth, 9 AS parent_id, 0.402960774228336 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 39 AS count, 3 AS depth, 9 AS parent_id, 1.3763291369243946 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 122 AS count, 3 AS depth, 12 AS parent_id, -1.151916450827318 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 96 AS count, 3 AS depth, 12 AS parent_id, 0.9251930913069837 AS "Estimator") AS "Values"), 
"DT_Output_161" AS 
(SELECT "DT_node_lookup_161"."KEY" AS "KEY", "DT_node_lookup_161".node_id_2 AS node_id_2, "DT_node_data_161".node_id AS node_id, "DT_node_data_161".feature AS feature, "DT_node_data_161".threshold AS threshold, "DT_node_data_161".count AS count, "DT_node_data_161".depth AS depth, "DT_node_data_161".parent_id AS parent_id, "DT_node_data_161"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_161" LEFT OUTER JOIN "DT_node_data_161" ON "DT_node_lookup_161".node_id_2 = "DT_node_data_161".node_id), 
"GB_Tree_16_1" AS 
(SELECT "DT_Output_161"."KEY" AS "KEY", 0.0 AS "Score_0", "DT_Output_161"."Estimator" AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3", 0.0 AS "Score_4", 0.0 AS "Score_5", 0.0 AS "Score_6", 0.0 AS "Score_7", 0.0 AS "Score_8", 0.0 AS "Score_9" 
FROM "DT_Output_161"), 
"DT_node_lookup_162" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_62" <= 2.5) THEN CASE WHEN ("ADS"."Feature_44" <= 11.5) THEN CASE WHEN ("ADS"."Feature_37" <= 2.5) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_26" <= 1.5) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_52" <= 7.5) THEN CASE WHEN ("ADS"."Feature_45" <= 0.5) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_26" <= 11.5) THEN 13 ELSE 14 END END END AS node_id_2 
FROM digits AS "ADS"), 
"DT_node_data_162" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 105 AS count, 3 AS depth, 2 AS parent_id, 0.6431943463400855 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 568 AS count, 3 AS depth, 2 AS parent_id, -0.6860624051509888 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 75 AS count, 3 AS depth, 5 AS parent_id, -0.9918712398362176 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 361 AS count, 3 AS depth, 5 AS parent_id, -0.9412794689929979 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 19 AS count, 3 AS depth, 9 AS parent_id, 0.920438993328037 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 145 AS count, 3 AS depth, 9 AS parent_id, -0.9463423966753021 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 133 AS count, 3 AS depth, 12 AS parent_id, 0.961132194682138 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 31 AS count, 3 AS depth, 12 AS parent_id, -0.9724507835546206 AS "Estimator") AS "Values"), 
"DT_Output_162" AS 
(SELECT "DT_node_lookup_162"."KEY" AS "KEY", "DT_node_lookup_162".node_id_2 AS node_id_2, "DT_node_data_162".node_id AS node_id, "DT_node_data_162".feature AS feature, "DT_node_data_162".threshold AS threshold, "DT_node_data_162".count AS count, "DT_node_data_162".depth AS depth, "DT_node_data_162".parent_id AS parent_id, "DT_node_data_162"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_162" LEFT OUTER JOIN "DT_node_data_162" ON "DT_node_lookup_162".node_id_2 = "DT_node_data_162".node_id), 
"GB_Tree_16_2" AS 
(SELECT "DT_Output_162"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", "DT_Output_162"."Estimator" AS "Score_2", 0.0 AS "Score_3", 0.0 AS "Score_4", 0.0 AS "Score_5", 0.0 AS "Score_6", 0.0 AS "Score_7", 0.0 AS "Score_8", 0.0 AS "Score_9" 
FROM "DT_Output_162"), 
"DT_node_lookup_163" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_26" <= 5.5) THEN CASE WHEN ("ADS"."Feature_43" <= 4.5) THEN CASE WHEN ("ADS"."Feature_30" <= 1.5) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_50" <= 2.5) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_54" <= 6.5) THEN CASE WHEN ("ADS"."Feature_28" <= 2.5) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_1" <= 3.5) THEN 13 ELSE 14 END END END AS node_id_2 
FROM digits AS "ADS"), 
"DT_node_data_163" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 160 AS count, 3 AS depth, 2 AS parent_id, 0.8922875371353075 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 42 AS count, 3 AS depth, 2 AS parent_id, -0.8014006748660294 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 82 AS count, 3 AS depth, 5 AS parent_id, 0.5941579276619315 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 201 AS count, 3 AS depth, 5 AS parent_id, -0.9453117239073063 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 223 AS count, 3 AS depth, 9 AS parent_id, -0.7249291305255622 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 496 AS count, 3 AS depth, 9 AS parent_id, -0.8819828412336309 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 232 AS count, 3 AS depth, 12 AS parent_id, 0.09985237718514628 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 12 AS parent_id, 3.518715136478226 AS "Estimator") AS "Values"), 
"DT_Output_163" AS 
(SELECT "DT_node_lookup_163"."KEY" AS "KEY", "DT_node_lookup_163".node_id_2 AS node_id_2, "DT_node_data_163".node_id AS node_id, "DT_node_data_163".feature AS feature, "DT_node_data_163".threshold AS threshold, "DT_node_data_163".count AS count, "DT_node_data_163".depth AS depth, "DT_node_data_163".parent_id AS parent_id, "DT_node_data_163"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_163" LEFT OUTER JOIN "DT_node_data_163" ON "DT_node_lookup_163".node_id_2 = "DT_node_data_163".node_id), 
"GB_Tree_16_3" AS 
(SELECT "DT_Output_163"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", "DT_Output_163"."Estimator" AS "Score_3", 0.0 AS "Score_4", 0.0 AS "Score_5", 0.0 AS "Score_6", 0.0 AS "Score_7", 0.0 AS "Score_8", 0.0 AS "Score_9" 
FROM "DT_Output_163"), 
"DT_node_lookup_164" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_33" <= 3.5) THEN CASE WHEN ("ADS"."Feature_31" <= 0.5) THEN CASE WHEN ("ADS"."Feature_41" <= 8.5) THEN 3 ELSE 4 END ELSE 5 END ELSE CASE WHEN ("ADS"."Feature_44" <= 12.5) THEN CASE WHEN ("ADS"."Feature_22" <= 12.0) THEN 8 ELSE 9 END ELSE CASE WHEN ("ADS"."Feature_13" <= 13.5) THEN 11 ELSE 12 END END END AS node_id_2 
FROM digits AS "ADS"), 
"DT_node_data_164" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1012 AS count, 3 AS depth, 2 AS parent_id, -0.6865303465217268 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 8 AS count, 3 AS depth, 2 AS parent_id, 1.2097275889560435 AS "Estimator" UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 2 AS depth, 1 AS parent_id, 1.848290639879857 AS "Estimator" UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 244 AS count, 3 AS depth, 7 AS parent_id, -0.5321599822182095 AS "Estimator" UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 7 AS count, 3 AS depth, 7 AS parent_id, 1.083953428853155 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 143 AS count, 3 AS depth, 10 AS parent_id, 1.1542200997472496 AS "Estimator" UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 22 AS count, 3 AS depth, 10 AS parent_id, -0.8096597397891018 AS "Estimator") AS "Values"), 
"DT_Output_164" AS 
(SELECT "DT_node_lookup_164"."KEY" AS "KEY", "DT_node_lookup_164".node_id_2 AS node_id_2, "DT_node_data_164".node_id AS node_id, "DT_node_data_164".feature AS feature, "DT_node_data_164".threshold AS threshold, "DT_node_data_164".count AS count, "DT_node_data_164".depth AS depth, "DT_node_data_164".parent_id AS parent_id, "DT_node_data_164"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_164" LEFT OUTER JOIN "DT_node_data_164" ON "DT_node_lookup_164".node_id_2 = "DT_node_data_164".node_id), 
"GB_Tree_16_4" AS 
(SELECT "DT_Output_164"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3", "DT_Output_164"."Estimator" AS "Score_4", 0.0 AS "Score_5", 0.0 AS "Score_6", 0.0 AS "Score_7", 0.0 AS "Score_8", 0.0 AS "Score_9" 
FROM "DT_Output_164"), 
"DT_node_lookup_165" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_21" <= 0.5) THEN CASE WHEN ("ADS"."Feature_61" <= 4.5) THEN CASE WHEN ("ADS"."Feature_30" <= 3.5) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_25" <= 9.5) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_43" <= 0.5) THEN CASE WHEN ("ADS"."Feature_21" <= 3.5) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_1" <= 5.0) THEN 13 ELSE 14 END END END AS node_id_2 
FROM digits AS "ADS"), 
"DT_node_data_165" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 123 AS count, 3 AS depth, 2 AS parent_id, 1.057794877146559 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 14 AS count, 3 AS depth, 2 AS parent_id, -1.2135571551272473 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 249 AS count, 3 AS depth, 5 AS parent_id, -0.38565829536472274 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 7 AS count, 3 AS depth, 5 AS parent_id, 1.3879804097222785 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 25 AS count, 3 AS depth, 9 AS parent_id, 0.8036067976531407 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 337 AS count, 3 AS depth, 9 AS parent_id, -0.4008753493732404 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 680 AS count, 3 AS depth, 12 AS parent_id, -0.9327342125227888 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 3 AS depth, 12 AS parent_id, 0.8118752760676518 AS "Estimator") AS "Values"), 
"DT_Output_165" AS 
(SELECT "DT_node_lookup_165"."KEY" AS "KEY", "DT_node_lookup_165".node_id_2 AS node_id_2, "DT_node_data_165".node_id AS node_id, "DT_node_data_165".feature AS feature, "DT_node_data_165".threshold AS threshold, "DT_node_data_165".count AS count, "DT_node_data_165".depth AS depth, "DT_node_data_165".parent_id AS parent_id, "DT_node_data_165"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_165" LEFT OUTER JOIN "DT_node_data_165" ON "DT_node_lookup_165".node_id_2 = "DT_node_data_165".node_id), 
"GB_Tree_16_5" AS 
(SELECT "DT_Output_165"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3", 0.0 AS "Score_4", "DT_Output_165"."Estimator" AS "Score_5", 0.0 AS "Score_6", 0.0 AS "Score_7", 0.0 AS "Score_8", 0.0 AS "Score_9" 
FROM "DT_Output_165"), 
"DT_node_lookup_166" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_42" <= 14.5) THEN CASE WHEN ("ADS"."Feature_46" <= 12.5) THEN CASE WHEN ("ADS"."Feature_46" <= 7.5) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_3" <= 2.5) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_21" <= 1.5) THEN CASE WHEN ("ADS"."Feature_41" <= 7.5) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_29" <= 0.5) THEN 13 ELSE 14 END END END AS node_id_2 
FROM digits AS "ADS"), 
"DT_node_data_166" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 913 AS count, 3 AS depth, 2 AS parent_id, -0.809578913353088 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 170 AS count, 3 AS depth, 2 AS parent_id, 0.012074555714035708 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 5 AS parent_id, 2.2688995331926964 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 39 AS count, 3 AS depth, 5 AS parent_id, 0.6598357925170392 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 109 AS count, 3 AS depth, 9 AS parent_id, 0.943559288590571 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 13 AS count, 3 AS depth, 9 AS parent_id, -1.0283827307005806 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 8 AS count, 3 AS depth, 12 AS parent_id, 2.0832650665133667 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 184 AS count, 3 AS depth, 12 AS parent_id, -0.602165588902273 AS "Estimator") AS "Values"), 
"DT_Output_166" AS 
(SELECT "DT_node_lookup_166"."KEY" AS "KEY", "DT_node_lookup_166".node_id_2 AS node_id_2, "DT_node_data_166".node_id AS node_id, "DT_node_data_166".feature AS feature, "DT_node_data_166".threshold AS threshold, "DT_node_data_166".count AS count, "DT_node_data_166".depth AS depth, "DT_node_data_166".parent_id AS parent_id, "DT_node_data_166"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_166" LEFT OUTER JOIN "DT_node_data_166" ON "DT_node_lookup_166".node_id_2 = "DT_node_data_166".node_id), 
"GB_Tree_16_6" AS 
(SELECT "DT_Output_166"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3", 0.0 AS "Score_4", 0.0 AS "Score_5", "DT_Output_166"."Estimator" AS "Score_6", 0.0 AS "Score_7", 0.0 AS "Score_8", 0.0 AS "Score_9" 
FROM "DT_Output_166"), 
"DT_node_lookup_167" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_60" <= 9.5) THEN CASE WHEN ("ADS"."Feature_26" <= 9.5) THEN CASE WHEN ("ADS"."Feature_38" <= 0.5) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_15" <= 2.5) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_7" <= 1.5) THEN CASE WHEN ("ADS"."Feature_5" <= 13.5) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_26" <= 4.5) THEN 13 ELSE 14 END END END AS node_id_2 
FROM digits AS "ADS"), 
"DT_node_data_167" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 70 AS count, 3 AS depth, 2 AS parent_id, -0.0656861875183016 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 111 AS count, 3 AS depth, 2 AS parent_id, 1.2359766409863464 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 157 AS count, 3 AS depth, 5 AS parent_id, -0.42392519373613535 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 9 AS count, 3 AS depth, 5 AS parent_id, 1.1679409608136024 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 994 AS count, 3 AS depth, 9 AS parent_id, -0.928884759036355 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 90 AS count, 3 AS depth, 9 AS parent_id, -0.004189224844358897 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 3 AS depth, 12 AS parent_id, 1.2190127915676627 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 3 AS depth, 12 AS parent_id, -0.947438960642136 AS "Estimator") AS "Values"), 
"DT_Output_167" AS 
(SELECT "DT_node_lookup_167"."KEY" AS "KEY", "DT_node_lookup_167".node_id_2 AS node_id_2, "DT_node_data_167".node_id AS node_id, "DT_node_data_167".feature AS feature, "DT_node_data_167".threshold AS threshold, "DT_node_data_167".count AS count, "DT_node_data_167".depth AS depth, "DT_node_data_167".parent_id AS parent_id, "DT_node_data_167"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_167" LEFT OUTER JOIN "DT_node_data_167" ON "DT_node_lookup_167".node_id_2 = "DT_node_data_167".node_id), 
"GB_Tree_16_7" AS 
(SELECT "DT_Output_167"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3", 0.0 AS "Score_4", 0.0 AS "Score_5", 0.0 AS "Score_6", "DT_Output_167"."Estimator" AS "Score_7", 0.0 AS "Score_8", 0.0 AS "Score_9" 
FROM "DT_Output_167")
 SELECT "Score_Union_CTE_esu_20"."KEY", "Score_Union_CTE_esu_20"."Score_0", "Score_Union_CTE_esu_20"."Score_1", "Score_Union_CTE_esu_20"."Score_2", "Score_Union_CTE_esu_20"."Score_3", "Score_Union_CTE_esu_20"."Score_4", "Score_Union_CTE_esu_20"."Score_5", "Score_Union_CTE_esu_20"."Score_6", "Score_Union_CTE_esu_20"."Score_7", "Score_Union_CTE_esu_20"."Score_8", "Score_Union_CTE_esu_20"."Score_9" 
FROM (SELECT "GB_Tree_16_0"."KEY" AS "KEY", "GB_Tree_16_0"."Score_0" AS "Score_0", "GB_Tree_16_0"."Score_1" AS "Score_1", "GB_Tree_16_0"."Score_2" AS "Score_2", "GB_Tree_16_0"."Score_3" AS "Score_3", "GB_Tree_16_0"."Score_4" AS "Score_4", "GB_Tree_16_0"."Score_5" AS "Score_5", "GB_Tree_16_0"."Score_6" AS "Score_6", "GB_Tree_16_0"."Score_7" AS "Score_7", "GB_Tree_16_0"."Score_8" AS "Score_8", "GB_Tree_16_0"."Score_9" AS "Score_9" 
FROM "GB_Tree_16_0" UNION ALL SELECT "GB_Tree_16_1"."KEY" AS "KEY", "GB_Tree_16_1"."Score_0" AS "Score_0", "GB_Tree_16_1"."Score_1" AS "Score_1", "GB_Tree_16_1"."Score_2" AS "Score_2", "GB_Tree_16_1"."Score_3" AS "Score_3", "GB_Tree_16_1"."Score_4" AS "Score_4", "GB_Tree_16_1"."Score_5" AS "Score_5", "GB_Tree_16_1"."Score_6" AS "Score_6", "GB_Tree_16_1"."Score_7" AS "Score_7", "GB_Tree_16_1"."Score_8" AS "Score_8", "GB_Tree_16_1"."Score_9" AS "Score_9" 
FROM "GB_Tree_16_1" UNION ALL SELECT "GB_Tree_16_2"."KEY" AS "KEY", "GB_Tree_16_2"."Score_0" AS "Score_0", "GB_Tree_16_2"."Score_1" AS "Score_1", "GB_Tree_16_2"."Score_2" AS "Score_2", "GB_Tree_16_2"."Score_3" AS "Score_3", "GB_Tree_16_2"."Score_4" AS "Score_4", "GB_Tree_16_2"."Score_5" AS "Score_5", "GB_Tree_16_2"."Score_6" AS "Score_6", "GB_Tree_16_2"."Score_7" AS "Score_7", "GB_Tree_16_2"."Score_8" AS "Score_8", "GB_Tree_16_2"."Score_9" AS "Score_9" 
FROM "GB_Tree_16_2" UNION ALL SELECT "GB_Tree_16_3"."KEY" AS "KEY", "GB_Tree_16_3"."Score_0" AS "Score_0", "GB_Tree_16_3"."Score_1" AS "Score_1", "GB_Tree_16_3"."Score_2" AS "Score_2", "GB_Tree_16_3"."Score_3" AS "Score_3", "GB_Tree_16_3"."Score_4" AS "Score_4", "GB_Tree_16_3"."Score_5" AS "Score_5", "GB_Tree_16_3"."Score_6" AS "Score_6", "GB_Tree_16_3"."Score_7" AS "Score_7", "GB_Tree_16_3"."Score_8" AS "Score_8", "GB_Tree_16_3"."Score_9" AS "Score_9" 
FROM "GB_Tree_16_3" UNION ALL SELECT "GB_Tree_16_4"."KEY" AS "KEY", "GB_Tree_16_4"."Score_0" AS "Score_0", "GB_Tree_16_4"."Score_1" AS "Score_1", "GB_Tree_16_4"."Score_2" AS "Score_2", "GB_Tree_16_4"."Score_3" AS "Score_3", "GB_Tree_16_4"."Score_4" AS "Score_4", "GB_Tree_16_4"."Score_5" AS "Score_5", "GB_Tree_16_4"."Score_6" AS "Score_6", "GB_Tree_16_4"."Score_7" AS "Score_7", "GB_Tree_16_4"."Score_8" AS "Score_8", "GB_Tree_16_4"."Score_9" AS "Score_9" 
FROM "GB_Tree_16_4" UNION ALL SELECT "GB_Tree_16_5"."KEY" AS "KEY", "GB_Tree_16_5"."Score_0" AS "Score_0", "GB_Tree_16_5"."Score_1" AS "Score_1", "GB_Tree_16_5"."Score_2" AS "Score_2", "GB_Tree_16_5"."Score_3" AS "Score_3", "GB_Tree_16_5"."Score_4" AS "Score_4", "GB_Tree_16_5"."Score_5" AS "Score_5", "GB_Tree_16_5"."Score_6" AS "Score_6", "GB_Tree_16_5"."Score_7" AS "Score_7", "GB_Tree_16_5"."Score_8" AS "Score_8", "GB_Tree_16_5"."Score_9" AS "Score_9" 
FROM "GB_Tree_16_5" UNION ALL SELECT "GB_Tree_16_6"."KEY" AS "KEY", "GB_Tree_16_6"."Score_0" AS "Score_0", "GB_Tree_16_6"."Score_1" AS "Score_1", "GB_Tree_16_6"."Score_2" AS "Score_2", "GB_Tree_16_6"."Score_3" AS "Score_3", "GB_Tree_16_6"."Score_4" AS "Score_4", "GB_Tree_16_6"."Score_5" AS "Score_5", "GB_Tree_16_6"."Score_6" AS "Score_6", "GB_Tree_16_6"."Score_7" AS "Score_7", "GB_Tree_16_6"."Score_8" AS "Score_8", "GB_Tree_16_6"."Score_9" AS "Score_9" 
FROM "GB_Tree_16_6" UNION ALL SELECT "GB_Tree_16_7"."KEY" AS "KEY", "GB_Tree_16_7"."Score_0" AS "Score_0", "GB_Tree_16_7"."Score_1" AS "Score_1", "GB_Tree_16_7"."Score_2" AS "Score_2", "GB_Tree_16_7"."Score_3" AS "Score_3", "GB_Tree_16_7"."Score_4" AS "Score_4", "GB_Tree_16_7"."Score_5" AS "Score_5", "GB_Tree_16_7"."Score_6" AS "Score_6", "GB_Tree_16_7"."Score_7" AS "Score_7", "GB_Tree_16_7"."Score_8" AS "Score_8", "GB_Tree_16_7"."Score_9" AS "Score_9" 
FROM "GB_Tree_16_7") AS "Score_Union_CTE_esu_20"), 
"Score_Union_CTE_21" AS 
(WITH "DT_node_lookup_168" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_27" <= 10.5) THEN CASE WHEN ("ADS"."Feature_26" <= 7.5) THEN CASE WHEN ("ADS"."Feature_19" <= 10.5) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_37" <= 1.5) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_42" <= 1.5) THEN CASE WHEN ("ADS"."Feature_58" <= 1.5) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_43" <= 15.5) THEN 13 ELSE 14 END END END AS node_id_2 
FROM digits AS "ADS"), 
"DT_node_data_168" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 291 AS count, 3 AS depth, 2 AS parent_id, -0.9524660186046424 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 28 AS count, 3 AS depth, 2 AS parent_id, 0.21553429664914547 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 37 AS count, 3 AS depth, 5 AS parent_id, 0.8460706176462338 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 394 AS count, 3 AS depth, 5 AS parent_id, -0.46815722284165345 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 74 AS count, 3 AS depth, 9 AS parent_id, 0.3018217037404963 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 256 AS count, 3 AS depth, 9 AS parent_id, -0.911330411010946 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 241 AS count, 3 AS depth, 12 AS parent_id, 0.8443401021783757 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 116 AS count, 3 AS depth, 12 AS parent_id, -0.5915106438024162 AS "Estimator") AS "Values"), 
"DT_Output_168" AS 
(SELECT "DT_node_lookup_168"."KEY" AS "KEY", "DT_node_lookup_168".node_id_2 AS node_id_2, "DT_node_data_168".node_id AS node_id, "DT_node_data_168".feature AS feature, "DT_node_data_168".threshold AS threshold, "DT_node_data_168".count AS count, "DT_node_data_168".depth AS depth, "DT_node_data_168".parent_id AS parent_id, "DT_node_data_168"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_168" LEFT OUTER JOIN "DT_node_data_168" ON "DT_node_lookup_168".node_id_2 = "DT_node_data_168".node_id), 
"GB_Tree_16_8" AS 
(SELECT "DT_Output_168"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3", 0.0 AS "Score_4", 0.0 AS "Score_5", 0.0 AS "Score_6", 0.0 AS "Score_7", "DT_Output_168"."Estimator" AS "Score_8", 0.0 AS "Score_9" 
FROM "DT_Output_168"), 
"DT_node_lookup_169" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_43" <= 3.5) THEN CASE WHEN ("ADS"."Feature_21" <= 9.5) THEN CASE WHEN ("ADS"."Feature_54" <= 15.5) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_27" <= 10.5) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_17" <= 14.5) THEN CASE WHEN ("ADS"."Feature_35" <= 8.5) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_59" <= 13.0) THEN 13 ELSE 14 END END END AS node_id_2 
FROM digits AS "ADS"), 
"DT_node_data_169" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 248 AS count, 3 AS depth, 2 AS parent_id, -0.6514531994047101 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS count, 3 AS depth, 2 AS parent_id, 1.3524112795002439 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 191 AS count, 3 AS depth, 5 AS parent_id, 0.02941057402726032 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 152 AS count, 3 AS depth, 5 AS parent_id, 1.0277848001791183 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 189 AS count, 3 AS depth, 9 AS parent_id, -0.06251080655535911 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 645 AS count, 3 AS depth, 9 AS parent_id, -0.881782410101187 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 12 AS parent_id, 3.818844949007424 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 6 AS count, 3 AS depth, 12 AS parent_id, -0.9423153255624481 AS "Estimator") AS "Values"), 
"DT_Output_169" AS 
(SELECT "DT_node_lookup_169"."KEY" AS "KEY", "DT_node_lookup_169".node_id_2 AS node_id_2, "DT_node_data_169".node_id AS node_id, "DT_node_data_169".feature AS feature, "DT_node_data_169".threshold AS threshold, "DT_node_data_169".count AS count, "DT_node_data_169".depth AS depth, "DT_node_data_169".parent_id AS parent_id, "DT_node_data_169"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_169" LEFT OUTER JOIN "DT_node_data_169" ON "DT_node_lookup_169".node_id_2 = "DT_node_data_169".node_id), 
"GB_Tree_16_9" AS 
(SELECT "DT_Output_169"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3", 0.0 AS "Score_4", 0.0 AS "Score_5", 0.0 AS "Score_6", 0.0 AS "Score_7", 0.0 AS "Score_8", "DT_Output_169"."Estimator" AS "Score_9" 
FROM "DT_Output_169"), 
"DT_node_lookup_170" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_36" <= 0.5) THEN CASE WHEN ("ADS"."Feature_28" <= 2.5) THEN CASE WHEN ("ADS"."Feature_13" <= 1.5) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_27" <= 2.0) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_42" <= 13.5) THEN CASE WHEN ("ADS"."Feature_58" <= 9.5) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_36" <= 3.5) THEN 13 ELSE 14 END END END AS node_id_2 
FROM digits AS "ADS"), 
"DT_node_data_170" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 9 AS count, 3 AS depth, 2 AS parent_id, -1.0086958920802787 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 137 AS count, 3 AS depth, 2 AS parent_id, 0.948562404040903 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 3 AS depth, 5 AS parent_id, 1.0494497278371604 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 71 AS count, 3 AS depth, 5 AS parent_id, -0.8034998219238207 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 619 AS count, 3 AS depth, 9 AS parent_id, -0.8883490086641924 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 296 AS count, 3 AS depth, 9 AS parent_id, -0.916202795226527 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 18 AS count, 3 AS depth, 12 AS parent_id, 0.514776906345977 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 285 AS count, 3 AS depth, 12 AS parent_id, -0.9122758273970515 AS "Estimator") AS "Values"), 
"DT_Output_170" AS 
(SELECT "DT_node_lookup_170"."KEY" AS "KEY", "DT_node_lookup_170".node_id_2 AS node_id_2, "DT_node_data_170".node_id AS node_id, "DT_node_data_170".feature AS feature, "DT_node_data_170".threshold AS threshold, "DT_node_data_170".count AS count, "DT_node_data_170".depth AS depth, "DT_node_data_170".parent_id AS parent_id, "DT_node_data_170"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_170" LEFT OUTER JOIN "DT_node_data_170" ON "DT_node_lookup_170".node_id_2 = "DT_node_data_170".node_id), 
"GB_Tree_17_0" AS 
(SELECT "DT_Output_170"."KEY" AS "KEY", "DT_Output_170"."Estimator" AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3", 0.0 AS "Score_4", 0.0 AS "Score_5", 0.0 AS "Score_6", 0.0 AS "Score_7", 0.0 AS "Score_8", 0.0 AS "Score_9" 
FROM "DT_Output_170"), 
"DT_node_lookup_171" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_12" <= 14.5) THEN CASE WHEN ("ADS"."Feature_63" <= 4.5) THEN CASE WHEN ("ADS"."Feature_55" <= 4.5) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_19" <= 13.0) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_10" <= 7.5) THEN CASE WHEN ("ADS"."Feature_38" <= 0.5) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_5" <= 15.5) THEN 13 ELSE 14 END END END AS node_id_2 
FROM digits AS "ADS"), 
"DT_node_data_171" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1007 AS count, 3 AS depth, 2 AS parent_id, -0.7923250424649745 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 10 AS count, 3 AS depth, 2 AS parent_id, 1.3034790774641747 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 17 AS count, 3 AS depth, 5 AS parent_id, -0.9163319291727816 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 20 AS count, 3 AS depth, 5 AS parent_id, 1.1958690177245148 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 96 AS count, 3 AS depth, 9 AS parent_id, 1.1277774847912223 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 54 AS count, 3 AS depth, 9 AS parent_id, 0.041127156896396226 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 232 AS count, 3 AS depth, 12 AS parent_id, -0.09237723808733984 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 12 AS parent_id, 2.4841463489004236 AS "Estimator") AS "Values"), 
"DT_Output_171" AS 
(SELECT "DT_node_lookup_171"."KEY" AS "KEY", "DT_node_lookup_171".node_id_2 AS node_id_2, "DT_node_data_171".node_id AS node_id, "DT_node_data_171".feature AS feature, "DT_node_data_171".threshold AS threshold, "DT_node_data_171".count AS count, "DT_node_data_171".depth AS depth, "DT_node_data_171".parent_id AS parent_id, "DT_node_data_171"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_171" LEFT OUTER JOIN "DT_node_data_171" ON "DT_node_lookup_171".node_id_2 = "DT_node_data_171".node_id), 
"GB_Tree_17_1" AS 
(SELECT "DT_Output_171"."KEY" AS "KEY", 0.0 AS "Score_0", "DT_Output_171"."Estimator" AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3", 0.0 AS "Score_4", 0.0 AS "Score_5", 0.0 AS "Score_6", 0.0 AS "Score_7", 0.0 AS "Score_8", 0.0 AS "Score_9" 
FROM "DT_Output_171"), 
"DT_node_lookup_172" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_62" <= 2.5) THEN CASE WHEN ("ADS"."Feature_51" <= 13.5) THEN CASE WHEN ("ADS"."Feature_44" <= 1.5) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_34" <= 1.5) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_46" <= 0.5) THEN CASE WHEN ("ADS"."Feature_36" <= 4.5) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_2" <= 14.0) THEN 13 ELSE 14 END END END AS node_id_2 
FROM digits AS "ADS"), 
"DT_node_data_172" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 268 AS count, 3 AS depth, 2 AS parent_id, -0.33170487216105143 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 538 AS count, 3 AS depth, 2 AS parent_id, -0.9564444450479004 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 55 AS count, 3 AS depth, 5 AS parent_id, 0.8042794662391538 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 248 AS count, 3 AS depth, 5 AS parent_id, -0.4711632969264047 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 14 AS count, 3 AS depth, 9 AS parent_id, 1.3980979405781873 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 128 AS count, 3 AS depth, 9 AS parent_id, 0.6669088801031988 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 180 AS count, 3 AS depth, 12 AS parent_id, -0.41391471527476814 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 6 AS count, 3 AS depth, 12 AS parent_id, 1.274957298716635 AS "Estimator") AS "Values"), 
"DT_Output_172" AS 
(SELECT "DT_node_lookup_172"."KEY" AS "KEY", "DT_node_lookup_172".node_id_2 AS node_id_2, "DT_node_data_172".node_id AS node_id, "DT_node_data_172".feature AS feature, "DT_node_data_172".threshold AS threshold, "DT_node_data_172".count AS count, "DT_node_data_172".depth AS depth, "DT_node_data_172".parent_id AS parent_id, "DT_node_data_172"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_172" LEFT OUTER JOIN "DT_node_data_172" ON "DT_node_lookup_172".node_id_2 = "DT_node_data_172".node_id), 
"GB_Tree_17_2" AS 
(SELECT "DT_Output_172"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", "DT_Output_172"."Estimator" AS "Score_2", 0.0 AS "Score_3", 0.0 AS "Score_4", 0.0 AS "Score_5", 0.0 AS "Score_6", 0.0 AS "Score_7", 0.0 AS "Score_8", 0.0 AS "Score_9" 
FROM "DT_Output_172"), 
"DT_node_lookup_173" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_18" <= 0.5) THEN CASE WHEN ("ADS"."Feature_2" <= 5.5) THEN CASE WHEN ("ADS"."Feature_44" <= 3.0) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_44" <= 14.5) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_46" <= 5.5) THEN CASE WHEN ("ADS"."Feature_9" <= 5.5) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_26" <= 7.5) THEN 13 ELSE 14 END END END AS node_id_2 
FROM digits AS "ADS"), 
"DT_node_data_173" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS count, 3 AS depth, 2 AS parent_id, 1.2031682545619853 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 71 AS count, 3 AS depth, 2 AS parent_id, -0.8578983581043402 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 82 AS count, 3 AS depth, 5 AS parent_id, 0.8118797662147637 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 10 AS count, 3 AS depth, 5 AS parent_id, 1.9677271307324746 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 748 AS count, 3 AS depth, 9 AS parent_id, -0.764316795485864 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 130 AS count, 3 AS depth, 9 AS parent_id, 0.17518241055221137 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 116 AS count, 3 AS depth, 12 AS parent_id, 0.7997430572095509 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 275 AS count, 3 AS depth, 12 AS parent_id, -0.41225471310239303 AS "Estimator") AS "Values"), 
"DT_Output_173" AS 
(SELECT "DT_node_lookup_173"."KEY" AS "KEY", "DT_node_lookup_173".node_id_2 AS node_id_2, "DT_node_data_173".node_id AS node_id, "DT_node_data_173".feature AS feature, "DT_node_data_173".threshold AS threshold, "DT_node_data_173".count AS count, "DT_node_data_173".depth AS depth, "DT_node_data_173".parent_id AS parent_id, "DT_node_data_173"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_173" LEFT OUTER JOIN "DT_node_data_173" ON "DT_node_lookup_173".node_id_2 = "DT_node_data_173".node_id), 
"GB_Tree_17_3" AS 
(SELECT "DT_Output_173"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", "DT_Output_173"."Estimator" AS "Score_3", 0.0 AS "Score_4", 0.0 AS "Score_5", 0.0 AS "Score_6", 0.0 AS "Score_7", 0.0 AS "Score_8", 0.0 AS "Score_9" 
FROM "DT_Output_173"), 
"DT_node_lookup_174" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_2" <= 0.5) THEN CASE WHEN ("ADS"."Feature_13" <= 7.5) THEN CASE WHEN ("ADS"."Feature_54" <= 1.5) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_5" <= 3.5) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_12" <= 2.5) THEN CASE WHEN ("ADS"."Feature_53" <= 0.5) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_30" <= 12.5) THEN 13 ELSE 14 END END END AS node_id_2 
FROM digits AS "ADS"), 
"DT_node_data_174" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 147 AS count, 3 AS depth, 2 AS parent_id, 1.125491221402327 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 77 AS count, 3 AS depth, 2 AS parent_id, -0.9278130880941533 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 19 AS count, 3 AS depth, 5 AS parent_id, 0.7804026180648024 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 111 AS count, 3 AS depth, 5 AS parent_id, -0.8287158072637231 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 17 AS count, 3 AS depth, 9 AS parent_id, 2.004810879668038 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 81 AS count, 3 AS depth, 9 AS parent_id, -0.6320144021873645 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 967 AS count, 3 AS depth, 12 AS parent_id, -0.8443839083218464 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 18 AS count, 3 AS depth, 12 AS parent_id, 1.0646474406041493 AS "Estimator") AS "Values"), 
"DT_Output_174" AS 
(SELECT "DT_node_lookup_174"."KEY" AS "KEY", "DT_node_lookup_174".node_id_2 AS node_id_2, "DT_node_data_174".node_id AS node_id, "DT_node_data_174".feature AS feature, "DT_node_data_174".threshold AS threshold, "DT_node_data_174".count AS count, "DT_node_data_174".depth AS depth, "DT_node_data_174".parent_id AS parent_id, "DT_node_data_174"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_174" LEFT OUTER JOIN "DT_node_data_174" ON "DT_node_lookup_174".node_id_2 = "DT_node_data_174".node_id), 
"GB_Tree_17_4" AS 
(SELECT "DT_Output_174"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3", "DT_Output_174"."Estimator" AS "Score_4", 0.0 AS "Score_5", 0.0 AS "Score_6", 0.0 AS "Score_7", 0.0 AS "Score_8", 0.0 AS "Score_9" 
FROM "DT_Output_174"), 
"DT_node_lookup_175" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_21" <= 0.5) THEN CASE WHEN ("ADS"."Feature_5" <= 2.5) THEN CASE WHEN ("ADS"."Feature_29" <= 11.5) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_2" <= 1.5) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_36" <= 1.5) THEN CASE WHEN ("ADS"."Feature_13" <= 6.5) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_2" <= 11.5) THEN 13 ELSE 14 END END END AS node_id_2 
FROM digits AS "ADS"), 
"DT_node_data_175" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 212 AS count, 3 AS depth, 2 AS parent_id, -0.7920035739195792 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 9 AS count, 3 AS depth, 2 AS parent_id, 1.1034097231751037 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 38 AS count, 3 AS depth, 5 AS parent_id, -0.4966444559847733 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 134 AS count, 3 AS depth, 5 AS parent_id, 0.946158717747796 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 34 AS count, 3 AS depth, 9 AS parent_id, 1.1332383118117477 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 189 AS count, 3 AS depth, 9 AS parent_id, -0.7386173799038337 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 728 AS count, 3 AS depth, 12 AS parent_id, -0.8919754164799265 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 93 AS count, 3 AS depth, 12 AS parent_id, -0.09662312127863142 AS "Estimator") AS "Values"), 
"DT_Output_175" AS 
(SELECT "DT_node_lookup_175"."KEY" AS "KEY", "DT_node_lookup_175".node_id_2 AS node_id_2, "DT_node_data_175".node_id AS node_id, "DT_node_data_175".feature AS feature, "DT_node_data_175".threshold AS threshold, "DT_node_data_175".count AS count, "DT_node_data_175".depth AS depth, "DT_node_data_175".parent_id AS parent_id, "DT_node_data_175"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_175" LEFT OUTER JOIN "DT_node_data_175" ON "DT_node_lookup_175".node_id_2 = "DT_node_data_175".node_id), 
"GB_Tree_17_5" AS 
(SELECT "DT_Output_175"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3", 0.0 AS "Score_4", "DT_Output_175"."Estimator" AS "Score_5", 0.0 AS "Score_6", 0.0 AS "Score_7", 0.0 AS "Score_8", 0.0 AS "Score_9" 
FROM "DT_Output_175")
 SELECT "Score_Union_CTE_esu_21"."KEY", "Score_Union_CTE_esu_21"."Score_0", "Score_Union_CTE_esu_21"."Score_1", "Score_Union_CTE_esu_21"."Score_2", "Score_Union_CTE_esu_21"."Score_3", "Score_Union_CTE_esu_21"."Score_4", "Score_Union_CTE_esu_21"."Score_5", "Score_Union_CTE_esu_21"."Score_6", "Score_Union_CTE_esu_21"."Score_7", "Score_Union_CTE_esu_21"."Score_8", "Score_Union_CTE_esu_21"."Score_9" 
FROM (SELECT "GB_Tree_16_8"."KEY" AS "KEY", "GB_Tree_16_8"."Score_0" AS "Score_0", "GB_Tree_16_8"."Score_1" AS "Score_1", "GB_Tree_16_8"."Score_2" AS "Score_2", "GB_Tree_16_8"."Score_3" AS "Score_3", "GB_Tree_16_8"."Score_4" AS "Score_4", "GB_Tree_16_8"."Score_5" AS "Score_5", "GB_Tree_16_8"."Score_6" AS "Score_6", "GB_Tree_16_8"."Score_7" AS "Score_7", "GB_Tree_16_8"."Score_8" AS "Score_8", "GB_Tree_16_8"."Score_9" AS "Score_9" 
FROM "GB_Tree_16_8" UNION ALL SELECT "GB_Tree_16_9"."KEY" AS "KEY", "GB_Tree_16_9"."Score_0" AS "Score_0", "GB_Tree_16_9"."Score_1" AS "Score_1", "GB_Tree_16_9"."Score_2" AS "Score_2", "GB_Tree_16_9"."Score_3" AS "Score_3", "GB_Tree_16_9"."Score_4" AS "Score_4", "GB_Tree_16_9"."Score_5" AS "Score_5", "GB_Tree_16_9"."Score_6" AS "Score_6", "GB_Tree_16_9"."Score_7" AS "Score_7", "GB_Tree_16_9"."Score_8" AS "Score_8", "GB_Tree_16_9"."Score_9" AS "Score_9" 
FROM "GB_Tree_16_9" UNION ALL SELECT "GB_Tree_17_0"."KEY" AS "KEY", "GB_Tree_17_0"."Score_0" AS "Score_0", "GB_Tree_17_0"."Score_1" AS "Score_1", "GB_Tree_17_0"."Score_2" AS "Score_2", "GB_Tree_17_0"."Score_3" AS "Score_3", "GB_Tree_17_0"."Score_4" AS "Score_4", "GB_Tree_17_0"."Score_5" AS "Score_5", "GB_Tree_17_0"."Score_6" AS "Score_6", "GB_Tree_17_0"."Score_7" AS "Score_7", "GB_Tree_17_0"."Score_8" AS "Score_8", "GB_Tree_17_0"."Score_9" AS "Score_9" 
FROM "GB_Tree_17_0" UNION ALL SELECT "GB_Tree_17_1"."KEY" AS "KEY", "GB_Tree_17_1"."Score_0" AS "Score_0", "GB_Tree_17_1"."Score_1" AS "Score_1", "GB_Tree_17_1"."Score_2" AS "Score_2", "GB_Tree_17_1"."Score_3" AS "Score_3", "GB_Tree_17_1"."Score_4" AS "Score_4", "GB_Tree_17_1"."Score_5" AS "Score_5", "GB_Tree_17_1"."Score_6" AS "Score_6", "GB_Tree_17_1"."Score_7" AS "Score_7", "GB_Tree_17_1"."Score_8" AS "Score_8", "GB_Tree_17_1"."Score_9" AS "Score_9" 
FROM "GB_Tree_17_1" UNION ALL SELECT "GB_Tree_17_2"."KEY" AS "KEY", "GB_Tree_17_2"."Score_0" AS "Score_0", "GB_Tree_17_2"."Score_1" AS "Score_1", "GB_Tree_17_2"."Score_2" AS "Score_2", "GB_Tree_17_2"."Score_3" AS "Score_3", "GB_Tree_17_2"."Score_4" AS "Score_4", "GB_Tree_17_2"."Score_5" AS "Score_5", "GB_Tree_17_2"."Score_6" AS "Score_6", "GB_Tree_17_2"."Score_7" AS "Score_7", "GB_Tree_17_2"."Score_8" AS "Score_8", "GB_Tree_17_2"."Score_9" AS "Score_9" 
FROM "GB_Tree_17_2" UNION ALL SELECT "GB_Tree_17_3"."KEY" AS "KEY", "GB_Tree_17_3"."Score_0" AS "Score_0", "GB_Tree_17_3"."Score_1" AS "Score_1", "GB_Tree_17_3"."Score_2" AS "Score_2", "GB_Tree_17_3"."Score_3" AS "Score_3", "GB_Tree_17_3"."Score_4" AS "Score_4", "GB_Tree_17_3"."Score_5" AS "Score_5", "GB_Tree_17_3"."Score_6" AS "Score_6", "GB_Tree_17_3"."Score_7" AS "Score_7", "GB_Tree_17_3"."Score_8" AS "Score_8", "GB_Tree_17_3"."Score_9" AS "Score_9" 
FROM "GB_Tree_17_3" UNION ALL SELECT "GB_Tree_17_4"."KEY" AS "KEY", "GB_Tree_17_4"."Score_0" AS "Score_0", "GB_Tree_17_4"."Score_1" AS "Score_1", "GB_Tree_17_4"."Score_2" AS "Score_2", "GB_Tree_17_4"."Score_3" AS "Score_3", "GB_Tree_17_4"."Score_4" AS "Score_4", "GB_Tree_17_4"."Score_5" AS "Score_5", "GB_Tree_17_4"."Score_6" AS "Score_6", "GB_Tree_17_4"."Score_7" AS "Score_7", "GB_Tree_17_4"."Score_8" AS "Score_8", "GB_Tree_17_4"."Score_9" AS "Score_9" 
FROM "GB_Tree_17_4" UNION ALL SELECT "GB_Tree_17_5"."KEY" AS "KEY", "GB_Tree_17_5"."Score_0" AS "Score_0", "GB_Tree_17_5"."Score_1" AS "Score_1", "GB_Tree_17_5"."Score_2" AS "Score_2", "GB_Tree_17_5"."Score_3" AS "Score_3", "GB_Tree_17_5"."Score_4" AS "Score_4", "GB_Tree_17_5"."Score_5" AS "Score_5", "GB_Tree_17_5"."Score_6" AS "Score_6", "GB_Tree_17_5"."Score_7" AS "Score_7", "GB_Tree_17_5"."Score_8" AS "Score_8", "GB_Tree_17_5"."Score_9" AS "Score_9" 
FROM "GB_Tree_17_5") AS "Score_Union_CTE_esu_21"), 
"Score_Union_CTE_22" AS 
(WITH "DT_node_lookup_176" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_34" <= 13.5) THEN CASE WHEN ("ADS"."Feature_10" <= 3.5) THEN CASE WHEN ("ADS"."Feature_46" <= 7.5) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_28" <= 0.5) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_61" <= 7.5) THEN CASE WHEN ("ADS"."Feature_4" <= 0.5) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_21" <= 5.5) THEN 13 ELSE 14 END END END AS node_id_2 
FROM digits AS "ADS"), 
"DT_node_data_176" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 115 AS count, 3 AS depth, 2 AS parent_id, -0.4231688632848328 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 14 AS count, 3 AS depth, 2 AS parent_id, 1.4538723978939774 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 118 AS count, 3 AS depth, 5 AS parent_id, -0.0824018831450163 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 791 AS count, 3 AS depth, 5 AS parent_id, -0.9297376519148671 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 9 AS parent_id, 1.539352587495666 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 246 AS count, 3 AS depth, 9 AS parent_id, -0.5379041050229734 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 124 AS count, 3 AS depth, 12 AS parent_id, 1.031976704790276 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 28 AS count, 3 AS depth, 12 AS parent_id, -0.913236421469241 AS "Estimator") AS "Values"), 
"DT_Output_176" AS 
(SELECT "DT_node_lookup_176"."KEY" AS "KEY", "DT_node_lookup_176".node_id_2 AS node_id_2, "DT_node_data_176".node_id AS node_id, "DT_node_data_176".feature AS feature, "DT_node_data_176".threshold AS threshold, "DT_node_data_176".count AS count, "DT_node_data_176".depth AS depth, "DT_node_data_176".parent_id AS parent_id, "DT_node_data_176"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_176" LEFT OUTER JOIN "DT_node_data_176" ON "DT_node_lookup_176".node_id_2 = "DT_node_data_176".node_id), 
"GB_Tree_17_6" AS 
(SELECT "DT_Output_176"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3", 0.0 AS "Score_4", 0.0 AS "Score_5", "DT_Output_176"."Estimator" AS "Score_6", 0.0 AS "Score_7", 0.0 AS "Score_8", 0.0 AS "Score_9" 
FROM "DT_Output_176"), 
"DT_node_lookup_177" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_60" <= 0.5) THEN CASE WHEN ("ADS"."Feature_18" <= 14.5) THEN CASE WHEN ("ADS"."Feature_19" <= 13.5) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_5" <= 9.0) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_14" <= 7.5) THEN CASE WHEN ("ADS"."Feature_27" <= 9.5) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_20" <= 3.5) THEN 13 ELSE 14 END END END AS node_id_2 
FROM digits AS "ADS"), 
"DT_node_data_177" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 64 AS count, 3 AS depth, 2 AS parent_id, 1.0235713774408777 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 2 AS parent_id, 2.369306365522471 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 8 AS count, 3 AS depth, 5 AS parent_id, -1.102812175085324 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 13 AS count, 3 AS depth, 5 AS parent_id, 0.5471474561689591 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 579 AS count, 3 AS depth, 9 AS parent_id, -0.12689737998793577 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 633 AS count, 3 AS depth, 9 AS parent_id, -0.9389644402323774 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 76 AS count, 3 AS depth, 12 AS parent_id, 1.1047221462024823 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 63 AS count, 3 AS depth, 12 AS parent_id, -0.6490405027723432 AS "Estimator") AS "Values"), 
"DT_Output_177" AS 
(SELECT "DT_node_lookup_177"."KEY" AS "KEY", "DT_node_lookup_177".node_id_2 AS node_id_2, "DT_node_data_177".node_id AS node_id, "DT_node_data_177".feature AS feature, "DT_node_data_177".threshold AS threshold, "DT_node_data_177".count AS count, "DT_node_data_177".depth AS depth, "DT_node_data_177".parent_id AS parent_id, "DT_node_data_177"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_177" LEFT OUTER JOIN "DT_node_data_177" ON "DT_node_lookup_177".node_id_2 = "DT_node_data_177".node_id), 
"GB_Tree_17_7" AS 
(SELECT "DT_Output_177"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3", 0.0 AS "Score_4", 0.0 AS "Score_5", 0.0 AS "Score_6", "DT_Output_177"."Estimator" AS "Score_7", 0.0 AS "Score_8", 0.0 AS "Score_9" 
FROM "DT_Output_177"), 
"DT_node_lookup_178" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_38" <= 1.5) THEN CASE WHEN ("ADS"."Feature_21" <= 4.5) THEN CASE WHEN ("ADS"."Feature_8" <= 1.5) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_43" <= 15.5) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_29" <= 8.5) THEN CASE WHEN ("ADS"."Feature_21" <= 12.5) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_35" <= 4.5) THEN 13 ELSE 14 END END END AS node_id_2 
FROM digits AS "ADS"), 
"DT_node_data_178" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 333 AS count, 3 AS depth, 2 AS parent_id, -0.5613792625473673 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 2 AS parent_id, 1.6552623699078068 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 358 AS count, 3 AS depth, 5 AS parent_id, 0.5806320413555661 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 79 AS count, 3 AS depth, 5 AS parent_id, -0.7474009839778866 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 221 AS count, 3 AS depth, 9 AS parent_id, -0.6851807050899484 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 32 AS count, 3 AS depth, 9 AS parent_id, 0.8715222154903738 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 188 AS count, 3 AS depth, 12 AS parent_id, -0.9204995242009618 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 225 AS count, 3 AS depth, 12 AS parent_id, -0.9441483093965958 AS "Estimator") AS "Values"), 
"DT_Output_178" AS 
(SELECT "DT_node_lookup_178"."KEY" AS "KEY", "DT_node_lookup_178".node_id_2 AS node_id_2, "DT_node_data_178".node_id AS node_id, "DT_node_data_178".feature AS feature, "DT_node_data_178".threshold AS threshold, "DT_node_data_178".count AS count, "DT_node_data_178".depth AS depth, "DT_node_data_178".parent_id AS parent_id, "DT_node_data_178"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_178" LEFT OUTER JOIN "DT_node_data_178" ON "DT_node_lookup_178".node_id_2 = "DT_node_data_178".node_id), 
"GB_Tree_17_8" AS 
(SELECT "DT_Output_178"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3", 0.0 AS "Score_4", 0.0 AS "Score_5", 0.0 AS "Score_6", 0.0 AS "Score_7", "DT_Output_178"."Estimator" AS "Score_8", 0.0 AS "Score_9" 
FROM "DT_Output_178"), 
"DT_node_lookup_179" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_44" <= 1.5) THEN CASE WHEN ("ADS"."Feature_42" <= 5.5) THEN CASE WHEN ("ADS"."Feature_4" <= 11.5) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_6" <= 2.5) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_27" <= 11.5) THEN CASE WHEN ("ADS"."Feature_13" <= 14.5) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_21" <= 11.5) THEN 13 ELSE 14 END END END AS node_id_2 
FROM digits AS "ADS"), 
"DT_node_data_179" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 57 AS count, 3 AS depth, 2 AS parent_id, 1.3782546205925503 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 147 AS count, 3 AS depth, 2 AS parent_id, 0.4325699424812162 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 215 AS count, 3 AS depth, 5 AS parent_id, -0.7697953611208158 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 3 AS depth, 5 AS parent_id, 0.7408707457020932 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 435 AS count, 3 AS depth, 9 AS parent_id, -0.6106870618746324 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 141 AS count, 3 AS depth, 9 AS parent_id, -0.8729577590563746 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 288 AS count, 3 AS depth, 12 AS parent_id, -0.7156842147308161 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 151 AS count, 3 AS depth, 12 AS parent_id, 0.6590350502921022 AS "Estimator") AS "Values"), 
"DT_Output_179" AS 
(SELECT "DT_node_lookup_179"."KEY" AS "KEY", "DT_node_lookup_179".node_id_2 AS node_id_2, "DT_node_data_179".node_id AS node_id, "DT_node_data_179".feature AS feature, "DT_node_data_179".threshold AS threshold, "DT_node_data_179".count AS count, "DT_node_data_179".depth AS depth, "DT_node_data_179".parent_id AS parent_id, "DT_node_data_179"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_179" LEFT OUTER JOIN "DT_node_data_179" ON "DT_node_lookup_179".node_id_2 = "DT_node_data_179".node_id), 
"GB_Tree_17_9" AS 
(SELECT "DT_Output_179"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3", 0.0 AS "Score_4", 0.0 AS "Score_5", 0.0 AS "Score_6", 0.0 AS "Score_7", 0.0 AS "Score_8", "DT_Output_179"."Estimator" AS "Score_9" 
FROM "DT_Output_179"), 
"DT_node_lookup_180" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_36" <= 0.5) THEN CASE WHEN ("ADS"."Feature_27" <= 8.5) THEN CASE WHEN ("ADS"."Feature_25" <= 0.5) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_59" <= 4.5) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_34" <= 11.5) THEN CASE WHEN ("ADS"."Feature_58" <= 3.5) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_36" <= 3.5) THEN 13 ELSE 14 END END END AS node_id_2 
FROM digits AS "ADS"), 
"DT_node_data_180" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 12 AS count, 3 AS depth, 2 AS parent_id, -0.7685223390667136 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 131 AS count, 3 AS depth, 2 AS parent_id, 0.9683221944549814 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS count, 3 AS depth, 5 AS parent_id, -1.0374384463863169 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 72 AS count, 3 AS depth, 5 AS parent_id, -0.2905623222424562 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 252 AS count, 3 AS depth, 9 AS parent_id, -0.9292145555755519 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 523 AS count, 3 AS depth, 9 AS parent_id, -0.918221789163983 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 16 AS count, 3 AS depth, 12 AS parent_id, 0.6028986850927007 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 427 AS count, 3 AS depth, 12 AS parent_id, -0.9137425449354116 AS "Estimator") AS "Values"), 
"DT_Output_180" AS 
(SELECT "DT_node_lookup_180"."KEY" AS "KEY", "DT_node_lookup_180".node_id_2 AS node_id_2, "DT_node_data_180".node_id AS node_id, "DT_node_data_180".feature AS feature, "DT_node_data_180".threshold AS threshold, "DT_node_data_180".count AS count, "DT_node_data_180".depth AS depth, "DT_node_data_180".parent_id AS parent_id, "DT_node_data_180"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_180" LEFT OUTER JOIN "DT_node_data_180" ON "DT_node_lookup_180".node_id_2 = "DT_node_data_180".node_id), 
"GB_Tree_18_0" AS 
(SELECT "DT_Output_180"."KEY" AS "KEY", "DT_Output_180"."Estimator" AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3", 0.0 AS "Score_4", 0.0 AS "Score_5", 0.0 AS "Score_6", 0.0 AS "Score_7", 0.0 AS "Score_8", 0.0 AS "Score_9" 
FROM "DT_Output_180"), 
"DT_node_lookup_181" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_20" <= 15.5) THEN CASE WHEN ("ADS"."Feature_63" <= 4.5) THEN CASE WHEN ("ADS"."Feature_55" <= 8.5) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_19" <= 13.0) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_58" <= 2.5) THEN CASE WHEN ("ADS"."Feature_21" <= 7.5) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_51" <= 15.5) THEN 13 ELSE 14 END END END AS node_id_2 
FROM digits AS "ADS"), 
"DT_node_data_181" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1151 AS count, 3 AS depth, 2 AS parent_id, -0.46731725053028084 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 3 AS depth, 2 AS parent_id, 1.6294157927675508 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 24 AS count, 3 AS depth, 5 AS parent_id, -0.9170891871704483 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 20 AS count, 3 AS depth, 5 AS parent_id, 1.1561081965693554 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 43 AS count, 3 AS depth, 9 AS parent_id, 0.32831786523888196 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 54 AS count, 3 AS depth, 9 AS parent_id, 1.183152220906754 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 88 AS count, 3 AS depth, 12 AS parent_id, -1.1648329297114877 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 55 AS count, 3 AS depth, 12 AS parent_id, 0.8481955439726278 AS "Estimator") AS "Values"), 
"DT_Output_181" AS 
(SELECT "DT_node_lookup_181"."KEY" AS "KEY", "DT_node_lookup_181".node_id_2 AS node_id_2, "DT_node_data_181".node_id AS node_id, "DT_node_data_181".feature AS feature, "DT_node_data_181".threshold AS threshold, "DT_node_data_181".count AS count, "DT_node_data_181".depth AS depth, "DT_node_data_181".parent_id AS parent_id, "DT_node_data_181"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_181" LEFT OUTER JOIN "DT_node_data_181" ON "DT_node_lookup_181".node_id_2 = "DT_node_data_181".node_id), 
"GB_Tree_18_1" AS 
(SELECT "DT_Output_181"."KEY" AS "KEY", 0.0 AS "Score_0", "DT_Output_181"."Estimator" AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3", 0.0 AS "Score_4", 0.0 AS "Score_5", 0.0 AS "Score_6", 0.0 AS "Score_7", 0.0 AS "Score_8", 0.0 AS "Score_9" 
FROM "DT_Output_181"), 
"DT_node_lookup_182" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_26" <= 3.5) THEN CASE WHEN ("ADS"."Feature_62" <= 0.5) THEN CASE WHEN ("ADS"."Feature_44" <= 11.5) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_52" <= 6.5) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_63" <= 3.5) THEN CASE WHEN ("ADS"."Feature_55" <= 8.5) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_19" <= 13.5) THEN 13 ELSE 14 END END END AS node_id_2 
FROM digits AS "ADS"), 
"DT_node_data_182" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 122 AS count, 3 AS depth, 2 AS parent_id, 0.5378760178931002 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 105 AS count, 3 AS depth, 2 AS parent_id, -0.970472889563437 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 62 AS count, 3 AS depth, 5 AS parent_id, -0.1203300872974574 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 116 AS count, 3 AS depth, 5 AS parent_id, 1.0072233671377409 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1004 AS count, 3 AS depth, 9 AS parent_id, -0.5987982447436508 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 9 AS parent_id, -1.3126746677452135 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 12 AS count, 3 AS depth, 12 AS parent_id, 1.0583954038600019 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 15 AS count, 3 AS depth, 12 AS parent_id, -0.9623057093345494 AS "Estimator") AS "Values"), 
"DT_Output_182" AS 
(SELECT "DT_node_lookup_182"."KEY" AS "KEY", "DT_node_lookup_182".node_id_2 AS node_id_2, "DT_node_data_182".node_id AS node_id, "DT_node_data_182".feature AS feature, "DT_node_data_182".threshold AS threshold, "DT_node_data_182".count AS count, "DT_node_data_182".depth AS depth, "DT_node_data_182".parent_id AS parent_id, "DT_node_data_182"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_182" LEFT OUTER JOIN "DT_node_data_182" ON "DT_node_lookup_182".node_id_2 = "DT_node_data_182".node_id), 
"GB_Tree_18_2" AS 
(SELECT "DT_Output_182"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", "DT_Output_182"."Estimator" AS "Score_2", 0.0 AS "Score_3", 0.0 AS "Score_4", 0.0 AS "Score_5", 0.0 AS "Score_6", 0.0 AS "Score_7", 0.0 AS "Score_8", 0.0 AS "Score_9" 
FROM "DT_Output_182"), 
"DT_node_lookup_183" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_34" <= 0.5) THEN CASE WHEN ("ADS"."Feature_19" <= 4.5) THEN CASE WHEN ("ADS"."Feature_3" <= 9.5) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_29" <= 9.5) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_9" <= 6.5) THEN CASE WHEN ("ADS"."Feature_58" <= 4.5) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_17" <= 1.5) THEN 13 ELSE 14 END END END AS node_id_2 
FROM digits AS "ADS"), 
"DT_node_data_183" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 8 AS count, 3 AS depth, 2 AS parent_id, 1.9654898458782066 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 174 AS count, 3 AS depth, 2 AS parent_id, 0.7447104501811139 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 98 AS count, 3 AS depth, 5 AS parent_id, 0.4421855044104827 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 91 AS count, 3 AS depth, 5 AS parent_id, -0.8943274781546907 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 612 AS count, 3 AS depth, 9 AS parent_id, -0.8845082939854423 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 361 AS count, 3 AS depth, 9 AS parent_id, -0.06731456418078431 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 16 AS count, 3 AS depth, 12 AS parent_id, 1.665392139914803 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 77 AS count, 3 AS depth, 12 AS parent_id, -0.2784866636100713 AS "Estimator") AS "Values"), 
"DT_Output_183" AS 
(SELECT "DT_node_lookup_183"."KEY" AS "KEY", "DT_node_lookup_183".node_id_2 AS node_id_2, "DT_node_data_183".node_id AS node_id, "DT_node_data_183".feature AS feature, "DT_node_data_183".threshold AS threshold, "DT_node_data_183".count AS count, "DT_node_data_183".depth AS depth, "DT_node_data_183".parent_id AS parent_id, "DT_node_data_183"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_183" LEFT OUTER JOIN "DT_node_data_183" ON "DT_node_lookup_183".node_id_2 = "DT_node_data_183".node_id), 
"GB_Tree_18_3" AS 
(SELECT "DT_Output_183"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", "DT_Output_183"."Estimator" AS "Score_3", 0.0 AS "Score_4", 0.0 AS "Score_5", 0.0 AS "Score_6", 0.0 AS "Score_7", 0.0 AS "Score_8", 0.0 AS "Score_9" 
FROM "DT_Output_183")
 SELECT "Score_Union_CTE_esu_22"."KEY", "Score_Union_CTE_esu_22"."Score_0", "Score_Union_CTE_esu_22"."Score_1", "Score_Union_CTE_esu_22"."Score_2", "Score_Union_CTE_esu_22"."Score_3", "Score_Union_CTE_esu_22"."Score_4", "Score_Union_CTE_esu_22"."Score_5", "Score_Union_CTE_esu_22"."Score_6", "Score_Union_CTE_esu_22"."Score_7", "Score_Union_CTE_esu_22"."Score_8", "Score_Union_CTE_esu_22"."Score_9" 
FROM (SELECT "GB_Tree_17_6"."KEY" AS "KEY", "GB_Tree_17_6"."Score_0" AS "Score_0", "GB_Tree_17_6"."Score_1" AS "Score_1", "GB_Tree_17_6"."Score_2" AS "Score_2", "GB_Tree_17_6"."Score_3" AS "Score_3", "GB_Tree_17_6"."Score_4" AS "Score_4", "GB_Tree_17_6"."Score_5" AS "Score_5", "GB_Tree_17_6"."Score_6" AS "Score_6", "GB_Tree_17_6"."Score_7" AS "Score_7", "GB_Tree_17_6"."Score_8" AS "Score_8", "GB_Tree_17_6"."Score_9" AS "Score_9" 
FROM "GB_Tree_17_6" UNION ALL SELECT "GB_Tree_17_7"."KEY" AS "KEY", "GB_Tree_17_7"."Score_0" AS "Score_0", "GB_Tree_17_7"."Score_1" AS "Score_1", "GB_Tree_17_7"."Score_2" AS "Score_2", "GB_Tree_17_7"."Score_3" AS "Score_3", "GB_Tree_17_7"."Score_4" AS "Score_4", "GB_Tree_17_7"."Score_5" AS "Score_5", "GB_Tree_17_7"."Score_6" AS "Score_6", "GB_Tree_17_7"."Score_7" AS "Score_7", "GB_Tree_17_7"."Score_8" AS "Score_8", "GB_Tree_17_7"."Score_9" AS "Score_9" 
FROM "GB_Tree_17_7" UNION ALL SELECT "GB_Tree_17_8"."KEY" AS "KEY", "GB_Tree_17_8"."Score_0" AS "Score_0", "GB_Tree_17_8"."Score_1" AS "Score_1", "GB_Tree_17_8"."Score_2" AS "Score_2", "GB_Tree_17_8"."Score_3" AS "Score_3", "GB_Tree_17_8"."Score_4" AS "Score_4", "GB_Tree_17_8"."Score_5" AS "Score_5", "GB_Tree_17_8"."Score_6" AS "Score_6", "GB_Tree_17_8"."Score_7" AS "Score_7", "GB_Tree_17_8"."Score_8" AS "Score_8", "GB_Tree_17_8"."Score_9" AS "Score_9" 
FROM "GB_Tree_17_8" UNION ALL SELECT "GB_Tree_17_9"."KEY" AS "KEY", "GB_Tree_17_9"."Score_0" AS "Score_0", "GB_Tree_17_9"."Score_1" AS "Score_1", "GB_Tree_17_9"."Score_2" AS "Score_2", "GB_Tree_17_9"."Score_3" AS "Score_3", "GB_Tree_17_9"."Score_4" AS "Score_4", "GB_Tree_17_9"."Score_5" AS "Score_5", "GB_Tree_17_9"."Score_6" AS "Score_6", "GB_Tree_17_9"."Score_7" AS "Score_7", "GB_Tree_17_9"."Score_8" AS "Score_8", "GB_Tree_17_9"."Score_9" AS "Score_9" 
FROM "GB_Tree_17_9" UNION ALL SELECT "GB_Tree_18_0"."KEY" AS "KEY", "GB_Tree_18_0"."Score_0" AS "Score_0", "GB_Tree_18_0"."Score_1" AS "Score_1", "GB_Tree_18_0"."Score_2" AS "Score_2", "GB_Tree_18_0"."Score_3" AS "Score_3", "GB_Tree_18_0"."Score_4" AS "Score_4", "GB_Tree_18_0"."Score_5" AS "Score_5", "GB_Tree_18_0"."Score_6" AS "Score_6", "GB_Tree_18_0"."Score_7" AS "Score_7", "GB_Tree_18_0"."Score_8" AS "Score_8", "GB_Tree_18_0"."Score_9" AS "Score_9" 
FROM "GB_Tree_18_0" UNION ALL SELECT "GB_Tree_18_1"."KEY" AS "KEY", "GB_Tree_18_1"."Score_0" AS "Score_0", "GB_Tree_18_1"."Score_1" AS "Score_1", "GB_Tree_18_1"."Score_2" AS "Score_2", "GB_Tree_18_1"."Score_3" AS "Score_3", "GB_Tree_18_1"."Score_4" AS "Score_4", "GB_Tree_18_1"."Score_5" AS "Score_5", "GB_Tree_18_1"."Score_6" AS "Score_6", "GB_Tree_18_1"."Score_7" AS "Score_7", "GB_Tree_18_1"."Score_8" AS "Score_8", "GB_Tree_18_1"."Score_9" AS "Score_9" 
FROM "GB_Tree_18_1" UNION ALL SELECT "GB_Tree_18_2"."KEY" AS "KEY", "GB_Tree_18_2"."Score_0" AS "Score_0", "GB_Tree_18_2"."Score_1" AS "Score_1", "GB_Tree_18_2"."Score_2" AS "Score_2", "GB_Tree_18_2"."Score_3" AS "Score_3", "GB_Tree_18_2"."Score_4" AS "Score_4", "GB_Tree_18_2"."Score_5" AS "Score_5", "GB_Tree_18_2"."Score_6" AS "Score_6", "GB_Tree_18_2"."Score_7" AS "Score_7", "GB_Tree_18_2"."Score_8" AS "Score_8", "GB_Tree_18_2"."Score_9" AS "Score_9" 
FROM "GB_Tree_18_2" UNION ALL SELECT "GB_Tree_18_3"."KEY" AS "KEY", "GB_Tree_18_3"."Score_0" AS "Score_0", "GB_Tree_18_3"."Score_1" AS "Score_1", "GB_Tree_18_3"."Score_2" AS "Score_2", "GB_Tree_18_3"."Score_3" AS "Score_3", "GB_Tree_18_3"."Score_4" AS "Score_4", "GB_Tree_18_3"."Score_5" AS "Score_5", "GB_Tree_18_3"."Score_6" AS "Score_6", "GB_Tree_18_3"."Score_7" AS "Score_7", "GB_Tree_18_3"."Score_8" AS "Score_8", "GB_Tree_18_3"."Score_9" AS "Score_9" 
FROM "GB_Tree_18_3") AS "Score_Union_CTE_esu_22"), 
"Score_Union_CTE_23" AS 
(WITH "DT_node_lookup_184" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_33" <= 1.5) THEN CASE WHEN ("ADS"."Feature_4" <= 0.5) THEN CASE WHEN ("ADS"."Feature_52" <= 3.0) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_41" <= 13.5) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_44" <= 12.5) THEN CASE WHEN ("ADS"."Feature_30" <= 11.5) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_13" <= 7.5) THEN 13 ELSE 14 END END END AS node_id_2 
FROM digits AS "ADS"), 
"DT_node_data_184" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 3 AS depth, 2 AS parent_id, 9.21389604118118 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 18 AS count, 3 AS depth, 2 AS parent_id, -0.9183784142745329 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 891 AS count, 3 AS depth, 5 AS parent_id, -0.8461674200772076 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 5 AS parent_id, 1.2958585376125877 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 314 AS count, 3 AS depth, 9 AS parent_id, -0.6057453167852194 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 17 AS count, 3 AS depth, 9 AS parent_id, 1.1627759084000362 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 143 AS count, 3 AS depth, 12 AS parent_id, 1.1319963582439614 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 51 AS count, 3 AS depth, 12 AS parent_id, -0.21108907613936506 AS "Estimator") AS "Values"), 
"DT_Output_184" AS 
(SELECT "DT_node_lookup_184"."KEY" AS "KEY", "DT_node_lookup_184".node_id_2 AS node_id_2, "DT_node_data_184".node_id AS node_id, "DT_node_data_184".feature AS feature, "DT_node_data_184".threshold AS threshold, "DT_node_data_184".count AS count, "DT_node_data_184".depth AS depth, "DT_node_data_184".parent_id AS parent_id, "DT_node_data_184"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_184" LEFT OUTER JOIN "DT_node_data_184" ON "DT_node_lookup_184".node_id_2 = "DT_node_data_184".node_id), 
"GB_Tree_18_4" AS 
(SELECT "DT_Output_184"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3", "DT_Output_184"."Estimator" AS "Score_4", 0.0 AS "Score_5", 0.0 AS "Score_6", 0.0 AS "Score_7", 0.0 AS "Score_8", 0.0 AS "Score_9" 
FROM "DT_Output_184"), 
"DT_node_lookup_185" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_6" <= 1.5) THEN CASE WHEN ("ADS"."Feature_20" <= 8.5) THEN CASE WHEN ("ADS"."Feature_42" <= 1.5) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_21" <= 2.5) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_21" <= 6.5) THEN CASE WHEN ("ADS"."Feature_36" <= 0.5) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_13" <= 0.5) THEN 13 ELSE 14 END END END AS node_id_2 
FROM digits AS "ADS"), 
"DT_node_data_185" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 160 AS count, 3 AS depth, 2 AS parent_id, 0.7565162950135026 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 465 AS count, 3 AS depth, 2 AS parent_id, -0.7693061979116074 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 122 AS count, 3 AS depth, 5 AS parent_id, -1.0009658139368758 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 413 AS count, 3 AS depth, 5 AS parent_id, -0.9204825359716469 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 11 AS count, 3 AS depth, 9 AS parent_id, 1.3756205049165666 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 83 AS count, 3 AS depth, 9 AS parent_id, 0.9685380452190221 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 3 AS depth, 12 AS parent_id, 2.3169980044238465 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 181 AS count, 3 AS depth, 12 AS parent_id, -0.6213233647848214 AS "Estimator") AS "Values"), 
"DT_Output_185" AS 
(SELECT "DT_node_lookup_185"."KEY" AS "KEY", "DT_node_lookup_185".node_id_2 AS node_id_2, "DT_node_data_185".node_id AS node_id, "DT_node_data_185".feature AS feature, "DT_node_data_185".threshold AS threshold, "DT_node_data_185".count AS count, "DT_node_data_185".depth AS depth, "DT_node_data_185".parent_id AS parent_id, "DT_node_data_185"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_185" LEFT OUTER JOIN "DT_node_data_185" ON "DT_node_lookup_185".node_id_2 = "DT_node_data_185".node_id), 
"GB_Tree_18_5" AS 
(SELECT "DT_Output_185"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3", 0.0 AS "Score_4", "DT_Output_185"."Estimator" AS "Score_5", 0.0 AS "Score_6", 0.0 AS "Score_7", 0.0 AS "Score_8", 0.0 AS "Score_9" 
FROM "DT_Output_185"), 
"DT_node_lookup_186" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_34" <= 13.5) THEN CASE WHEN ("ADS"."Feature_10" <= 3.5) THEN CASE WHEN ("ADS"."Feature_46" <= 7.5) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_28" <= 0.5) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_61" <= 7.5) THEN CASE WHEN ("ADS"."Feature_4" <= 0.5) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_21" <= 5.5) THEN 13 ELSE 14 END END END AS node_id_2 
FROM digits AS "ADS"), 
"DT_node_data_186" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 115 AS count, 3 AS depth, 2 AS parent_id, -0.4014296269638061 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 14 AS count, 3 AS depth, 2 AS parent_id, 1.3961952750806417 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 118 AS count, 3 AS depth, 5 AS parent_id, -0.07074767975835107 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 791 AS count, 3 AS depth, 5 AS parent_id, -0.9254382523785806 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 9 AS parent_id, 1.416048314092883 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 246 AS count, 3 AS depth, 9 AS parent_id, -0.5077664214565563 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 124 AS count, 3 AS depth, 12 AS parent_id, 0.9954626321230442 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 28 AS count, 3 AS depth, 12 AS parent_id, -0.9118956072229498 AS "Estimator") AS "Values"), 
"DT_Output_186" AS 
(SELECT "DT_node_lookup_186"."KEY" AS "KEY", "DT_node_lookup_186".node_id_2 AS node_id_2, "DT_node_data_186".node_id AS node_id, "DT_node_data_186".feature AS feature, "DT_node_data_186".threshold AS threshold, "DT_node_data_186".count AS count, "DT_node_data_186".depth AS depth, "DT_node_data_186".parent_id AS parent_id, "DT_node_data_186"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_186" LEFT OUTER JOIN "DT_node_data_186" ON "DT_node_lookup_186".node_id_2 = "DT_node_data_186".node_id), 
"GB_Tree_18_6" AS 
(SELECT "DT_Output_186"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3", 0.0 AS "Score_4", 0.0 AS "Score_5", "DT_Output_186"."Estimator" AS "Score_6", 0.0 AS "Score_7", 0.0 AS "Score_8", 0.0 AS "Score_9" 
FROM "DT_Output_186"), 
"DT_node_lookup_187" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_61" <= 0.5) THEN CASE WHEN ("ADS"."Feature_26" <= 9.5) THEN CASE WHEN ("ADS"."Feature_38" <= 0.5) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_18" <= 5.0) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_22" <= 9.5) THEN CASE WHEN ("ADS"."Feature_53" <= 0.5) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_19" <= 0.5) THEN 13 ELSE 14 END END END AS node_id_2 
FROM digits AS "ADS"), 
"DT_node_data_187" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 60 AS count, 3 AS depth, 2 AS parent_id, -0.057578136608852575 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 112 AS count, 3 AS depth, 2 AS parent_id, 1.194734683565514 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 12 AS count, 3 AS depth, 5 AS parent_id, 0.9494972512842847 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 206 AS count, 3 AS depth, 5 AS parent_id, -0.40466508035885906 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 26 AS count, 3 AS depth, 9 AS parent_id, -0.9764891196029573 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 992 AS count, 3 AS depth, 9 AS parent_id, -0.9215484633252854 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 3 AS depth, 12 AS parent_id, 4.407727545114617 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 27 AS count, 3 AS depth, 12 AS parent_id, -0.5371345136474989 AS "Estimator") AS "Values"), 
"DT_Output_187" AS 
(SELECT "DT_node_lookup_187"."KEY" AS "KEY", "DT_node_lookup_187".node_id_2 AS node_id_2, "DT_node_data_187".node_id AS node_id, "DT_node_data_187".feature AS feature, "DT_node_data_187".threshold AS threshold, "DT_node_data_187".count AS count, "DT_node_data_187".depth AS depth, "DT_node_data_187".parent_id AS parent_id, "DT_node_data_187"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_187" LEFT OUTER JOIN "DT_node_data_187" ON "DT_node_lookup_187".node_id_2 = "DT_node_data_187".node_id), 
"GB_Tree_18_7" AS 
(SELECT "DT_Output_187"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3", 0.0 AS "Score_4", 0.0 AS "Score_5", 0.0 AS "Score_6", "DT_Output_187"."Estimator" AS "Score_7", 0.0 AS "Score_8", 0.0 AS "Score_9" 
FROM "DT_Output_187"), 
"DT_node_lookup_188" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_50" <= 3.5) THEN CASE WHEN ("ADS"."Feature_54" <= 1.5) THEN CASE WHEN ("ADS"."Feature_37" <= 2.5) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_58" <= 0.5) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_27" <= 13.5) THEN CASE WHEN ("ADS"."Feature_35" <= 14.5) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_42" <= 1.5) THEN 13 ELSE 14 END END END AS node_id_2 
FROM digits AS "ADS"), 
"DT_node_data_188" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 41 AS count, 3 AS depth, 2 AS parent_id, -1.1062468030420867 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 300 AS count, 3 AS depth, 2 AS parent_id, -0.8150009377920974 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 37 AS count, 3 AS depth, 5 AS parent_id, 0.8487077543396925 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 87 AS count, 3 AS depth, 5 AS parent_id, -0.9425985217238201 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 494 AS count, 3 AS depth, 9 AS parent_id, -0.5498487340315436 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 155 AS count, 3 AS depth, 9 AS parent_id, 0.29753737659426754 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 105 AS count, 3 AS depth, 12 AS parent_id, -0.7379539628439835 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 218 AS count, 3 AS depth, 12 AS parent_id, 0.6570347180066115 AS "Estimator") AS "Values"), 
"DT_Output_188" AS 
(SELECT "DT_node_lookup_188"."KEY" AS "KEY", "DT_node_lookup_188".node_id_2 AS node_id_2, "DT_node_data_188".node_id AS node_id, "DT_node_data_188".feature AS feature, "DT_node_data_188".threshold AS threshold, "DT_node_data_188".count AS count, "DT_node_data_188".depth AS depth, "DT_node_data_188".parent_id AS parent_id, "DT_node_data_188"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_188" LEFT OUTER JOIN "DT_node_data_188" ON "DT_node_lookup_188".node_id_2 = "DT_node_data_188".node_id), 
"GB_Tree_18_8" AS 
(SELECT "DT_Output_188"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3", 0.0 AS "Score_4", 0.0 AS "Score_5", 0.0 AS "Score_6", 0.0 AS "Score_7", "DT_Output_188"."Estimator" AS "Score_8", 0.0 AS "Score_9" 
FROM "DT_Output_188"), 
"DT_node_lookup_189" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_43" <= 4.5) THEN CASE WHEN ("ADS"."Feature_21" <= 9.5) THEN CASE WHEN ("ADS"."Feature_54" <= 13.5) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_27" <= 2.5) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_60" <= 1.5) THEN CASE WHEN ("ADS"."Feature_17" <= 6.5) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_38" <= 13.0) THEN 13 ELSE 14 END END END AS node_id_2 
FROM digits AS "ADS"), 
"DT_node_data_189" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 256 AS count, 3 AS depth, 2 AS parent_id, -0.7855669100365839 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 15 AS count, 3 AS depth, 2 AS parent_id, 0.9265156543582604 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 110 AS count, 3 AS depth, 5 AS parent_id, -0.7693548735399164 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 251 AS count, 3 AS depth, 5 AS parent_id, 0.7965051254090134 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 84 AS count, 3 AS depth, 9 AS parent_id, -0.9670079122689378 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 15 AS count, 3 AS depth, 9 AS parent_id, 1.52350942681739 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 703 AS count, 3 AS depth, 12 AS parent_id, -0.9332441267496634 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 3 AS depth, 12 AS parent_id, 0.9290845977181504 AS "Estimator") AS "Values"), 
"DT_Output_189" AS 
(SELECT "DT_node_lookup_189"."KEY" AS "KEY", "DT_node_lookup_189".node_id_2 AS node_id_2, "DT_node_data_189".node_id AS node_id, "DT_node_data_189".feature AS feature, "DT_node_data_189".threshold AS threshold, "DT_node_data_189".count AS count, "DT_node_data_189".depth AS depth, "DT_node_data_189".parent_id AS parent_id, "DT_node_data_189"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_189" LEFT OUTER JOIN "DT_node_data_189" ON "DT_node_lookup_189".node_id_2 = "DT_node_data_189".node_id), 
"GB_Tree_18_9" AS 
(SELECT "DT_Output_189"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3", 0.0 AS "Score_4", 0.0 AS "Score_5", 0.0 AS "Score_6", 0.0 AS "Score_7", 0.0 AS "Score_8", "DT_Output_189"."Estimator" AS "Score_9" 
FROM "DT_Output_189"), 
"DT_node_lookup_190" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_36" <= 0.5) THEN CASE WHEN ("ADS"."Feature_28" <= 2.5) THEN CASE WHEN ("ADS"."Feature_13" <= 2.5) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_42" <= 15.5) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_34" <= 11.5) THEN CASE WHEN ("ADS"."Feature_58" <= 3.5) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_36" <= 3.5) THEN 13 ELSE 14 END END END AS node_id_2 
FROM digits AS "ADS"), 
"DT_node_data_190" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 11 AS count, 3 AS depth, 2 AS parent_id, -0.6787256292569218 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 135 AS count, 3 AS depth, 2 AS parent_id, 0.9318490781605384 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 72 AS count, 3 AS depth, 5 AS parent_id, -0.7501554053609343 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 5 AS parent_id, 1.037411566571747 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 252 AS count, 3 AS depth, 9 AS parent_id, -0.9271518877882339 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 523 AS count, 3 AS depth, 9 AS parent_id, -0.9165669713368291 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 16 AS count, 3 AS depth, 12 AS parent_id, 0.5351658201827737 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 427 AS count, 3 AS depth, 12 AS parent_id, -0.9125316783009371 AS "Estimator") AS "Values"), 
"DT_Output_190" AS 
(SELECT "DT_node_lookup_190"."KEY" AS "KEY", "DT_node_lookup_190".node_id_2 AS node_id_2, "DT_node_data_190".node_id AS node_id, "DT_node_data_190".feature AS feature, "DT_node_data_190".threshold AS threshold, "DT_node_data_190".count AS count, "DT_node_data_190".depth AS depth, "DT_node_data_190".parent_id AS parent_id, "DT_node_data_190"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_190" LEFT OUTER JOIN "DT_node_data_190" ON "DT_node_lookup_190".node_id_2 = "DT_node_data_190".node_id), 
"GB_Tree_19_0" AS 
(SELECT "DT_Output_190"."KEY" AS "KEY", "DT_Output_190"."Estimator" AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3", 0.0 AS "Score_4", 0.0 AS "Score_5", 0.0 AS "Score_6", 0.0 AS "Score_7", 0.0 AS "Score_8", 0.0 AS "Score_9" 
FROM "DT_Output_190"), 
"DT_node_lookup_191" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_10" <= 5.5) THEN CASE WHEN ("ADS"."Feature_20" <= 11.5) THEN CASE WHEN ("ADS"."Feature_4" <= 3.5) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_41" <= 3.5) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_3" <= 1.5) THEN 9 ELSE CASE WHEN ("ADS"."Feature_19" <= 15.5) THEN 11 ELSE 12 END END END AS node_id_2 
FROM digits AS "ADS"), 
"DT_node_data_191" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 7 AS count, 3 AS depth, 2 AS parent_id, 1.246838926660211 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 198 AS count, 3 AS depth, 2 AS parent_id, -0.588713984324622 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 97 AS count, 3 AS depth, 5 AS parent_id, 1.1493555434391327 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 21 AS count, 3 AS depth, 5 AS parent_id, -0.5288176170711829 AS "Estimator" UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 2 AS depth, 8 AS parent_id, 2.0769923950052087 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1022 AS count, 3 AS depth, 10 AS parent_id, -0.8249113497092022 AS "Estimator" UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 91 AS count, 3 AS depth, 10 AS parent_id, 0.2346165746889902 AS "Estimator") AS "Values"), 
"DT_Output_191" AS 
(SELECT "DT_node_lookup_191"."KEY" AS "KEY", "DT_node_lookup_191".node_id_2 AS node_id_2, "DT_node_data_191".node_id AS node_id, "DT_node_data_191".feature AS feature, "DT_node_data_191".threshold AS threshold, "DT_node_data_191".count AS count, "DT_node_data_191".depth AS depth, "DT_node_data_191".parent_id AS parent_id, "DT_node_data_191"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_191" LEFT OUTER JOIN "DT_node_data_191" ON "DT_node_lookup_191".node_id_2 = "DT_node_data_191".node_id), 
"GB_Tree_19_1" AS 
(SELECT "DT_Output_191"."KEY" AS "KEY", 0.0 AS "Score_0", "DT_Output_191"."Estimator" AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3", 0.0 AS "Score_4", 0.0 AS "Score_5", 0.0 AS "Score_6", 0.0 AS "Score_7", 0.0 AS "Score_8", 0.0 AS "Score_9" 
FROM "DT_Output_191")
 SELECT "Score_Union_CTE_esu_23"."KEY", "Score_Union_CTE_esu_23"."Score_0", "Score_Union_CTE_esu_23"."Score_1", "Score_Union_CTE_esu_23"."Score_2", "Score_Union_CTE_esu_23"."Score_3", "Score_Union_CTE_esu_23"."Score_4", "Score_Union_CTE_esu_23"."Score_5", "Score_Union_CTE_esu_23"."Score_6", "Score_Union_CTE_esu_23"."Score_7", "Score_Union_CTE_esu_23"."Score_8", "Score_Union_CTE_esu_23"."Score_9" 
FROM (SELECT "GB_Tree_18_4"."KEY" AS "KEY", "GB_Tree_18_4"."Score_0" AS "Score_0", "GB_Tree_18_4"."Score_1" AS "Score_1", "GB_Tree_18_4"."Score_2" AS "Score_2", "GB_Tree_18_4"."Score_3" AS "Score_3", "GB_Tree_18_4"."Score_4" AS "Score_4", "GB_Tree_18_4"."Score_5" AS "Score_5", "GB_Tree_18_4"."Score_6" AS "Score_6", "GB_Tree_18_4"."Score_7" AS "Score_7", "GB_Tree_18_4"."Score_8" AS "Score_8", "GB_Tree_18_4"."Score_9" AS "Score_9" 
FROM "GB_Tree_18_4" UNION ALL SELECT "GB_Tree_18_5"."KEY" AS "KEY", "GB_Tree_18_5"."Score_0" AS "Score_0", "GB_Tree_18_5"."Score_1" AS "Score_1", "GB_Tree_18_5"."Score_2" AS "Score_2", "GB_Tree_18_5"."Score_3" AS "Score_3", "GB_Tree_18_5"."Score_4" AS "Score_4", "GB_Tree_18_5"."Score_5" AS "Score_5", "GB_Tree_18_5"."Score_6" AS "Score_6", "GB_Tree_18_5"."Score_7" AS "Score_7", "GB_Tree_18_5"."Score_8" AS "Score_8", "GB_Tree_18_5"."Score_9" AS "Score_9" 
FROM "GB_Tree_18_5" UNION ALL SELECT "GB_Tree_18_6"."KEY" AS "KEY", "GB_Tree_18_6"."Score_0" AS "Score_0", "GB_Tree_18_6"."Score_1" AS "Score_1", "GB_Tree_18_6"."Score_2" AS "Score_2", "GB_Tree_18_6"."Score_3" AS "Score_3", "GB_Tree_18_6"."Score_4" AS "Score_4", "GB_Tree_18_6"."Score_5" AS "Score_5", "GB_Tree_18_6"."Score_6" AS "Score_6", "GB_Tree_18_6"."Score_7" AS "Score_7", "GB_Tree_18_6"."Score_8" AS "Score_8", "GB_Tree_18_6"."Score_9" AS "Score_9" 
FROM "GB_Tree_18_6" UNION ALL SELECT "GB_Tree_18_7"."KEY" AS "KEY", "GB_Tree_18_7"."Score_0" AS "Score_0", "GB_Tree_18_7"."Score_1" AS "Score_1", "GB_Tree_18_7"."Score_2" AS "Score_2", "GB_Tree_18_7"."Score_3" AS "Score_3", "GB_Tree_18_7"."Score_4" AS "Score_4", "GB_Tree_18_7"."Score_5" AS "Score_5", "GB_Tree_18_7"."Score_6" AS "Score_6", "GB_Tree_18_7"."Score_7" AS "Score_7", "GB_Tree_18_7"."Score_8" AS "Score_8", "GB_Tree_18_7"."Score_9" AS "Score_9" 
FROM "GB_Tree_18_7" UNION ALL SELECT "GB_Tree_18_8"."KEY" AS "KEY", "GB_Tree_18_8"."Score_0" AS "Score_0", "GB_Tree_18_8"."Score_1" AS "Score_1", "GB_Tree_18_8"."Score_2" AS "Score_2", "GB_Tree_18_8"."Score_3" AS "Score_3", "GB_Tree_18_8"."Score_4" AS "Score_4", "GB_Tree_18_8"."Score_5" AS "Score_5", "GB_Tree_18_8"."Score_6" AS "Score_6", "GB_Tree_18_8"."Score_7" AS "Score_7", "GB_Tree_18_8"."Score_8" AS "Score_8", "GB_Tree_18_8"."Score_9" AS "Score_9" 
FROM "GB_Tree_18_8" UNION ALL SELECT "GB_Tree_18_9"."KEY" AS "KEY", "GB_Tree_18_9"."Score_0" AS "Score_0", "GB_Tree_18_9"."Score_1" AS "Score_1", "GB_Tree_18_9"."Score_2" AS "Score_2", "GB_Tree_18_9"."Score_3" AS "Score_3", "GB_Tree_18_9"."Score_4" AS "Score_4", "GB_Tree_18_9"."Score_5" AS "Score_5", "GB_Tree_18_9"."Score_6" AS "Score_6", "GB_Tree_18_9"."Score_7" AS "Score_7", "GB_Tree_18_9"."Score_8" AS "Score_8", "GB_Tree_18_9"."Score_9" AS "Score_9" 
FROM "GB_Tree_18_9" UNION ALL SELECT "GB_Tree_19_0"."KEY" AS "KEY", "GB_Tree_19_0"."Score_0" AS "Score_0", "GB_Tree_19_0"."Score_1" AS "Score_1", "GB_Tree_19_0"."Score_2" AS "Score_2", "GB_Tree_19_0"."Score_3" AS "Score_3", "GB_Tree_19_0"."Score_4" AS "Score_4", "GB_Tree_19_0"."Score_5" AS "Score_5", "GB_Tree_19_0"."Score_6" AS "Score_6", "GB_Tree_19_0"."Score_7" AS "Score_7", "GB_Tree_19_0"."Score_8" AS "Score_8", "GB_Tree_19_0"."Score_9" AS "Score_9" 
FROM "GB_Tree_19_0" UNION ALL SELECT "GB_Tree_19_1"."KEY" AS "KEY", "GB_Tree_19_1"."Score_0" AS "Score_0", "GB_Tree_19_1"."Score_1" AS "Score_1", "GB_Tree_19_1"."Score_2" AS "Score_2", "GB_Tree_19_1"."Score_3" AS "Score_3", "GB_Tree_19_1"."Score_4" AS "Score_4", "GB_Tree_19_1"."Score_5" AS "Score_5", "GB_Tree_19_1"."Score_6" AS "Score_6", "GB_Tree_19_1"."Score_7" AS "Score_7", "GB_Tree_19_1"."Score_8" AS "Score_8", "GB_Tree_19_1"."Score_9" AS "Score_9" 
FROM "GB_Tree_19_1") AS "Score_Union_CTE_esu_23"), 
"Score_Union_CTE_24" AS 
(WITH "DT_node_lookup_192" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_26" <= 6.5) THEN CASE WHEN ("ADS"."Feature_51" <= 13.5) THEN CASE WHEN ("ADS"."Feature_49" <= 3.5) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_53" <= 3.5) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_63" <= 3.5) THEN CASE WHEN ("ADS"."Feature_28" <= 4.5) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_19" <= 13.5) THEN 13 ELSE 14 END END END AS node_id_2 
FROM digits AS "ADS"), 
"DT_node_data_192" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 296 AS count, 3 AS depth, 2 AS parent_id, -0.4300641035843734 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 39 AS count, 3 AS depth, 2 AS parent_id, 0.9836895629916683 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 75 AS count, 3 AS depth, 5 AS parent_id, -0.6342179381249416 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 116 AS count, 3 AS depth, 5 AS parent_id, 1.0719704371761039 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 336 AS count, 3 AS depth, 9 AS parent_id, -0.7455279640549081 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 555 AS count, 3 AS depth, 9 AS parent_id, -0.8480633765608336 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 8 AS count, 3 AS depth, 12 AS parent_id, 1.1344663513824262 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 12 AS count, 3 AS depth, 12 AS parent_id, -0.9600992624161552 AS "Estimator") AS "Values"), 
"DT_Output_192" AS 
(SELECT "DT_node_lookup_192"."KEY" AS "KEY", "DT_node_lookup_192".node_id_2 AS node_id_2, "DT_node_data_192".node_id AS node_id, "DT_node_data_192".feature AS feature, "DT_node_data_192".threshold AS threshold, "DT_node_data_192".count AS count, "DT_node_data_192".depth AS depth, "DT_node_data_192".parent_id AS parent_id, "DT_node_data_192"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_192" LEFT OUTER JOIN "DT_node_data_192" ON "DT_node_lookup_192".node_id_2 = "DT_node_data_192".node_id), 
"GB_Tree_19_2" AS 
(SELECT "DT_Output_192"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", "DT_Output_192"."Estimator" AS "Score_2", 0.0 AS "Score_3", 0.0 AS "Score_4", 0.0 AS "Score_5", 0.0 AS "Score_6", 0.0 AS "Score_7", 0.0 AS "Score_8", 0.0 AS "Score_9" 
FROM "DT_Output_192"), 
"DT_node_lookup_193" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_18" <= 0.5) THEN CASE WHEN ("ADS"."Feature_2" <= 5.5) THEN CASE WHEN ("ADS"."Feature_44" <= 3.0) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_50" <= 2.5) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_43" <= 1.5) THEN CASE WHEN ("ADS"."Feature_36" <= 4.5) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_1" <= 3.5) THEN 13 ELSE 14 END END END AS node_id_2 
FROM digits AS "ADS"), 
"DT_node_data_193" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS count, 3 AS depth, 2 AS parent_id, 1.1549716541605553 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 71 AS count, 3 AS depth, 2 AS parent_id, -0.833890673766147 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 15 AS count, 3 AS depth, 5 AS parent_id, 1.6737789590176013 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 77 AS count, 3 AS depth, 5 AS parent_id, 0.6653410005382377 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 230 AS count, 3 AS depth, 9 AS parent_id, -0.8442875555816363 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 234 AS count, 3 AS depth, 9 AS parent_id, 0.7086426857498428 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 786 AS count, 3 AS depth, 12 AS parent_id, -0.7951618243831782 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 19 AS count, 3 AS depth, 12 AS parent_id, 0.678005166977288 AS "Estimator") AS "Values"), 
"DT_Output_193" AS 
(SELECT "DT_node_lookup_193"."KEY" AS "KEY", "DT_node_lookup_193".node_id_2 AS node_id_2, "DT_node_data_193".node_id AS node_id, "DT_node_data_193".feature AS feature, "DT_node_data_193".threshold AS threshold, "DT_node_data_193".count AS count, "DT_node_data_193".depth AS depth, "DT_node_data_193".parent_id AS parent_id, "DT_node_data_193"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_193" LEFT OUTER JOIN "DT_node_data_193" ON "DT_node_lookup_193".node_id_2 = "DT_node_data_193".node_id), 
"GB_Tree_19_3" AS 
(SELECT "DT_Output_193"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", "DT_Output_193"."Estimator" AS "Score_3", 0.0 AS "Score_4", 0.0 AS "Score_5", 0.0 AS "Score_6", 0.0 AS "Score_7", 0.0 AS "Score_8", 0.0 AS "Score_9" 
FROM "DT_Output_193"), 
"DT_node_lookup_194" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_2" <= 0.5) THEN CASE WHEN ("ADS"."Feature_13" <= 7.5) THEN CASE WHEN ("ADS"."Feature_54" <= 1.5) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_38" <= 7.5) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_12" <= 2.5) THEN CASE WHEN ("ADS"."Feature_53" <= 0.5) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_30" <= 12.5) THEN 13 ELSE 14 END END END AS node_id_2 
FROM digits AS "ADS"), 
"DT_node_data_194" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 147 AS count, 3 AS depth, 2 AS parent_id, 1.04055776929942 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 77 AS count, 3 AS depth, 2 AS parent_id, -0.9240080851491131 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 119 AS count, 3 AS depth, 5 AS parent_id, -0.73481626419441 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 11 AS count, 3 AS depth, 5 AS parent_id, 0.9478422526604748 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 17 AS count, 3 AS depth, 9 AS parent_id, 1.679633931438811 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 81 AS count, 3 AS depth, 9 AS parent_id, -0.6130694010901123 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 967 AS count, 3 AS depth, 12 AS parent_id, -0.825565943838318 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 18 AS count, 3 AS depth, 12 AS parent_id, 0.9252206646025463 AS "Estimator") AS "Values"), 
"DT_Output_194" AS 
(SELECT "DT_node_lookup_194"."KEY" AS "KEY", "DT_node_lookup_194".node_id_2 AS node_id_2, "DT_node_data_194".node_id AS node_id, "DT_node_data_194".feature AS feature, "DT_node_data_194".threshold AS threshold, "DT_node_data_194".count AS count, "DT_node_data_194".depth AS depth, "DT_node_data_194".parent_id AS parent_id, "DT_node_data_194"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_194" LEFT OUTER JOIN "DT_node_data_194" ON "DT_node_lookup_194".node_id_2 = "DT_node_data_194".node_id), 
"GB_Tree_19_4" AS 
(SELECT "DT_Output_194"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3", "DT_Output_194"."Estimator" AS "Score_4", 0.0 AS "Score_5", 0.0 AS "Score_6", 0.0 AS "Score_7", 0.0 AS "Score_8", 0.0 AS "Score_9" 
FROM "DT_Output_194"), 
"DT_node_lookup_195" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_5" <= 11.5) THEN CASE WHEN ("ADS"."Feature_25" <= 9.5) THEN CASE WHEN ("ADS"."Feature_2" <= 6.5) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_52" <= 3.5) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_13" <= 8.5) THEN CASE WHEN ("ADS"."Feature_36" <= 0.5) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_21" <= 0.5) THEN 13 ELSE 14 END END END AS node_id_2 
FROM digits AS "ADS"), 
"DT_node_data_195" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 701 AS count, 3 AS depth, 2 AS parent_id, -0.8462684082732687 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 378 AS count, 3 AS depth, 2 AS parent_id, 0.06163583380975772 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 3 AS depth, 5 AS parent_id, 1.619244540895542 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 24 AS count, 3 AS depth, 5 AS parent_id, 0.27689312048929043 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 16 AS count, 3 AS depth, 9 AS parent_id, 1.535238591281529 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 82 AS count, 3 AS depth, 9 AS parent_id, 0.9517967140765813 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 18 AS count, 3 AS depth, 12 AS parent_id, 0.8138140322908453 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 216 AS count, 3 AS depth, 12 AS parent_id, -0.7322601605083917 AS "Estimator") AS "Values"), 
"DT_Output_195" AS 
(SELECT "DT_node_lookup_195"."KEY" AS "KEY", "DT_node_lookup_195".node_id_2 AS node_id_2, "DT_node_data_195".node_id AS node_id, "DT_node_data_195".feature AS feature, "DT_node_data_195".threshold AS threshold, "DT_node_data_195".count AS count, "DT_node_data_195".depth AS depth, "DT_node_data_195".parent_id AS parent_id, "DT_node_data_195"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_195" LEFT OUTER JOIN "DT_node_data_195" ON "DT_node_lookup_195".node_id_2 = "DT_node_data_195".node_id), 
"GB_Tree_19_5" AS 
(SELECT "DT_Output_195"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3", 0.0 AS "Score_4", "DT_Output_195"."Estimator" AS "Score_5", 0.0 AS "Score_6", 0.0 AS "Score_7", 0.0 AS "Score_8", 0.0 AS "Score_9" 
FROM "DT_Output_195"), 
"DT_node_lookup_196" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_42" <= 14.5) THEN CASE WHEN ("ADS"."Feature_46" <= 12.5) THEN CASE WHEN ("ADS"."Feature_28" <= 5.5) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_18" <= 0.5) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_29" <= 0.5) THEN CASE WHEN ("ADS"."Feature_13" <= 15.0) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_54" <= 4.5) THEN 13 ELSE 14 END END END AS node_id_2 
FROM digits AS "ADS"), 
"DT_node_data_196" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 223 AS count, 3 AS depth, 2 AS parent_id, -0.04838143250193673 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 860 AS count, 3 AS depth, 2 AS parent_id, -0.848737233986908 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 5 AS parent_id, 1.5752060963467245 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 39 AS count, 3 AS depth, 5 AS parent_id, 0.594691715781912 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 78 AS count, 3 AS depth, 9 AS parent_id, 0.8027290825914207 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 9 AS parent_id, 4.347119341263831 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 178 AS count, 3 AS depth, 12 AS parent_id, -0.634370394310977 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 57 AS count, 3 AS depth, 12 AS parent_id, 0.9438432021504667 AS "Estimator") AS "Values"), 
"DT_Output_196" AS 
(SELECT "DT_node_lookup_196"."KEY" AS "KEY", "DT_node_lookup_196".node_id_2 AS node_id_2, "DT_node_data_196".node_id AS node_id, "DT_node_data_196".feature AS feature, "DT_node_data_196".threshold AS threshold, "DT_node_data_196".count AS count, "DT_node_data_196".depth AS depth, "DT_node_data_196".parent_id AS parent_id, "DT_node_data_196"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_196" LEFT OUTER JOIN "DT_node_data_196" ON "DT_node_lookup_196".node_id_2 = "DT_node_data_196".node_id), 
"GB_Tree_19_6" AS 
(SELECT "DT_Output_196"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3", 0.0 AS "Score_4", 0.0 AS "Score_5", "DT_Output_196"."Estimator" AS "Score_6", 0.0 AS "Score_7", 0.0 AS "Score_8", 0.0 AS "Score_9" 
FROM "DT_Output_196"), 
"DT_node_lookup_197" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_60" <= 0.5) THEN CASE WHEN ("ADS"."Feature_18" <= 14.5) THEN CASE WHEN ("ADS"."Feature_19" <= 13.5) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_5" <= 9.0) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_14" <= 7.5) THEN CASE WHEN ("ADS"."Feature_13" <= 15.5) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_20" <= 1.5) THEN 13 ELSE 14 END END END AS node_id_2 
FROM digits AS "ADS"), 
"DT_node_data_197" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 64 AS count, 3 AS depth, 2 AS parent_id, 0.9908678917403477 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 2 AS parent_id, 2.022975605919303 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 8 AS count, 3 AS depth, 5 AS parent_id, -1.0600948849973302 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 13 AS count, 3 AS depth, 5 AS parent_id, 0.4597792481007519 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1053 AS count, 3 AS depth, 9 AS parent_id, -0.7370165496837199 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 159 AS count, 3 AS depth, 9 AS parent_id, 0.2657787190767061 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 57 AS count, 3 AS depth, 12 AS parent_id, 1.0652558506447671 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 82 AS count, 3 AS depth, 12 AS parent_id, -0.23017285731489764 AS "Estimator") AS "Values"), 
"DT_Output_197" AS 
(SELECT "DT_node_lookup_197"."KEY" AS "KEY", "DT_node_lookup_197".node_id_2 AS node_id_2, "DT_node_data_197".node_id AS node_id, "DT_node_data_197".feature AS feature, "DT_node_data_197".threshold AS threshold, "DT_node_data_197".count AS count, "DT_node_data_197".depth AS depth, "DT_node_data_197".parent_id AS parent_id, "DT_node_data_197"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_197" LEFT OUTER JOIN "DT_node_data_197" ON "DT_node_lookup_197".node_id_2 = "DT_node_data_197".node_id), 
"GB_Tree_19_7" AS 
(SELECT "DT_Output_197"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3", 0.0 AS "Score_4", 0.0 AS "Score_5", 0.0 AS "Score_6", "DT_Output_197"."Estimator" AS "Score_7", 0.0 AS "Score_8", 0.0 AS "Score_9" 
FROM "DT_Output_197"), 
"DT_node_lookup_198" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_50" <= 3.5) THEN CASE WHEN ("ADS"."Feature_54" <= 1.5) THEN CASE WHEN ("ADS"."Feature_37" <= 2.5) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_22" <= 3.5) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_27" <= 12.5) THEN CASE WHEN ("ADS"."Feature_35" <= 14.5) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_21" <= 1.5) THEN 13 ELSE 14 END END END AS node_id_2 
FROM digits AS "ADS"), 
"DT_node_data_198" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 41 AS count, 3 AS depth, 2 AS parent_id, -1.089578907709673 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 300 AS count, 3 AS depth, 2 AS parent_id, -0.7936526176212018 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 104 AS count, 3 AS depth, 5 AS parent_id, -0.3109254539288049 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 20 AS count, 3 AS depth, 5 AS parent_id, 1.0194429550688247 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 461 AS count, 3 AS depth, 9 AS parent_id, -0.6374841610950831 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 139 AS count, 3 AS depth, 9 AS parent_id, 0.2684760340542876 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 130 AS count, 3 AS depth, 12 AS parent_id, -0.5057036171774971 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 242 AS count, 3 AS depth, 12 AS parent_id, 0.6173292861391548 AS "Estimator") AS "Values"), 
"DT_Output_198" AS 
(SELECT "DT_node_lookup_198"."KEY" AS "KEY", "DT_node_lookup_198".node_id_2 AS node_id_2, "DT_node_data_198".node_id AS node_id, "DT_node_data_198".feature AS feature, "DT_node_data_198".threshold AS threshold, "DT_node_data_198".count AS count, "DT_node_data_198".depth AS depth, "DT_node_data_198".parent_id AS parent_id, "DT_node_data_198"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_198" LEFT OUTER JOIN "DT_node_data_198" ON "DT_node_lookup_198".node_id_2 = "DT_node_data_198".node_id), 
"GB_Tree_19_8" AS 
(SELECT "DT_Output_198"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3", 0.0 AS "Score_4", 0.0 AS "Score_5", 0.0 AS "Score_6", 0.0 AS "Score_7", "DT_Output_198"."Estimator" AS "Score_8", 0.0 AS "Score_9" 
FROM "DT_Output_198"), 
"DT_node_lookup_199" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_44" <= 1.5) THEN CASE WHEN ("ADS"."Feature_29" <= 9.5) THEN CASE WHEN ("ADS"."Feature_51" <= 0.5) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_42" <= 9.0) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_14" <= 11.5) THEN CASE WHEN ("ADS"."Feature_60" <= 4.5) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_43" <= 2.5) THEN 13 ELSE 14 END END END AS node_id_2 
FROM digits AS "ADS"), 
"DT_node_data_199" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 12 AS count, 3 AS depth, 2 AS parent_id, 0.7662471773503762 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 221 AS count, 3 AS depth, 2 AS parent_id, -0.5865432419265403 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 126 AS count, 3 AS depth, 5 AS parent_id, 0.9557625229305139 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 63 AS count, 3 AS depth, 5 AS parent_id, -0.9381489781471657 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 148 AS count, 3 AS depth, 9 AS parent_id, 0.3412132292435787 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 811 AS count, 3 AS depth, 9 AS parent_id, -0.5593785432496277 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 25 AS count, 3 AS depth, 12 AS parent_id, 1.0426627153142618 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 31 AS count, 3 AS depth, 12 AS parent_id, -0.9673071593813448 AS "Estimator") AS "Values"), 
"DT_Output_199" AS 
(SELECT "DT_node_lookup_199"."KEY" AS "KEY", "DT_node_lookup_199".node_id_2 AS node_id_2, "DT_node_data_199".node_id AS node_id, "DT_node_data_199".feature AS feature, "DT_node_data_199".threshold AS threshold, "DT_node_data_199".count AS count, "DT_node_data_199".depth AS depth, "DT_node_data_199".parent_id AS parent_id, "DT_node_data_199"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_199" LEFT OUTER JOIN "DT_node_data_199" ON "DT_node_lookup_199".node_id_2 = "DT_node_data_199".node_id), 
"GB_Tree_19_9" AS 
(SELECT "DT_Output_199"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3", 0.0 AS "Score_4", 0.0 AS "Score_5", 0.0 AS "Score_6", 0.0 AS "Score_7", 0.0 AS "Score_8", "DT_Output_199"."Estimator" AS "Score_9" 
FROM "DT_Output_199")
 SELECT "Score_Union_CTE_esu_24"."KEY", "Score_Union_CTE_esu_24"."Score_0", "Score_Union_CTE_esu_24"."Score_1", "Score_Union_CTE_esu_24"."Score_2", "Score_Union_CTE_esu_24"."Score_3", "Score_Union_CTE_esu_24"."Score_4", "Score_Union_CTE_esu_24"."Score_5", "Score_Union_CTE_esu_24"."Score_6", "Score_Union_CTE_esu_24"."Score_7", "Score_Union_CTE_esu_24"."Score_8", "Score_Union_CTE_esu_24"."Score_9" 
FROM (SELECT "GB_Tree_19_2"."KEY" AS "KEY", "GB_Tree_19_2"."Score_0" AS "Score_0", "GB_Tree_19_2"."Score_1" AS "Score_1", "GB_Tree_19_2"."Score_2" AS "Score_2", "GB_Tree_19_2"."Score_3" AS "Score_3", "GB_Tree_19_2"."Score_4" AS "Score_4", "GB_Tree_19_2"."Score_5" AS "Score_5", "GB_Tree_19_2"."Score_6" AS "Score_6", "GB_Tree_19_2"."Score_7" AS "Score_7", "GB_Tree_19_2"."Score_8" AS "Score_8", "GB_Tree_19_2"."Score_9" AS "Score_9" 
FROM "GB_Tree_19_2" UNION ALL SELECT "GB_Tree_19_3"."KEY" AS "KEY", "GB_Tree_19_3"."Score_0" AS "Score_0", "GB_Tree_19_3"."Score_1" AS "Score_1", "GB_Tree_19_3"."Score_2" AS "Score_2", "GB_Tree_19_3"."Score_3" AS "Score_3", "GB_Tree_19_3"."Score_4" AS "Score_4", "GB_Tree_19_3"."Score_5" AS "Score_5", "GB_Tree_19_3"."Score_6" AS "Score_6", "GB_Tree_19_3"."Score_7" AS "Score_7", "GB_Tree_19_3"."Score_8" AS "Score_8", "GB_Tree_19_3"."Score_9" AS "Score_9" 
FROM "GB_Tree_19_3" UNION ALL SELECT "GB_Tree_19_4"."KEY" AS "KEY", "GB_Tree_19_4"."Score_0" AS "Score_0", "GB_Tree_19_4"."Score_1" AS "Score_1", "GB_Tree_19_4"."Score_2" AS "Score_2", "GB_Tree_19_4"."Score_3" AS "Score_3", "GB_Tree_19_4"."Score_4" AS "Score_4", "GB_Tree_19_4"."Score_5" AS "Score_5", "GB_Tree_19_4"."Score_6" AS "Score_6", "GB_Tree_19_4"."Score_7" AS "Score_7", "GB_Tree_19_4"."Score_8" AS "Score_8", "GB_Tree_19_4"."Score_9" AS "Score_9" 
FROM "GB_Tree_19_4" UNION ALL SELECT "GB_Tree_19_5"."KEY" AS "KEY", "GB_Tree_19_5"."Score_0" AS "Score_0", "GB_Tree_19_5"."Score_1" AS "Score_1", "GB_Tree_19_5"."Score_2" AS "Score_2", "GB_Tree_19_5"."Score_3" AS "Score_3", "GB_Tree_19_5"."Score_4" AS "Score_4", "GB_Tree_19_5"."Score_5" AS "Score_5", "GB_Tree_19_5"."Score_6" AS "Score_6", "GB_Tree_19_5"."Score_7" AS "Score_7", "GB_Tree_19_5"."Score_8" AS "Score_8", "GB_Tree_19_5"."Score_9" AS "Score_9" 
FROM "GB_Tree_19_5" UNION ALL SELECT "GB_Tree_19_6"."KEY" AS "KEY", "GB_Tree_19_6"."Score_0" AS "Score_0", "GB_Tree_19_6"."Score_1" AS "Score_1", "GB_Tree_19_6"."Score_2" AS "Score_2", "GB_Tree_19_6"."Score_3" AS "Score_3", "GB_Tree_19_6"."Score_4" AS "Score_4", "GB_Tree_19_6"."Score_5" AS "Score_5", "GB_Tree_19_6"."Score_6" AS "Score_6", "GB_Tree_19_6"."Score_7" AS "Score_7", "GB_Tree_19_6"."Score_8" AS "Score_8", "GB_Tree_19_6"."Score_9" AS "Score_9" 
FROM "GB_Tree_19_6" UNION ALL SELECT "GB_Tree_19_7"."KEY" AS "KEY", "GB_Tree_19_7"."Score_0" AS "Score_0", "GB_Tree_19_7"."Score_1" AS "Score_1", "GB_Tree_19_7"."Score_2" AS "Score_2", "GB_Tree_19_7"."Score_3" AS "Score_3", "GB_Tree_19_7"."Score_4" AS "Score_4", "GB_Tree_19_7"."Score_5" AS "Score_5", "GB_Tree_19_7"."Score_6" AS "Score_6", "GB_Tree_19_7"."Score_7" AS "Score_7", "GB_Tree_19_7"."Score_8" AS "Score_8", "GB_Tree_19_7"."Score_9" AS "Score_9" 
FROM "GB_Tree_19_7" UNION ALL SELECT "GB_Tree_19_8"."KEY" AS "KEY", "GB_Tree_19_8"."Score_0" AS "Score_0", "GB_Tree_19_8"."Score_1" AS "Score_1", "GB_Tree_19_8"."Score_2" AS "Score_2", "GB_Tree_19_8"."Score_3" AS "Score_3", "GB_Tree_19_8"."Score_4" AS "Score_4", "GB_Tree_19_8"."Score_5" AS "Score_5", "GB_Tree_19_8"."Score_6" AS "Score_6", "GB_Tree_19_8"."Score_7" AS "Score_7", "GB_Tree_19_8"."Score_8" AS "Score_8", "GB_Tree_19_8"."Score_9" AS "Score_9" 
FROM "GB_Tree_19_8" UNION ALL SELECT "GB_Tree_19_9"."KEY" AS "KEY", "GB_Tree_19_9"."Score_0" AS "Score_0", "GB_Tree_19_9"."Score_1" AS "Score_1", "GB_Tree_19_9"."Score_2" AS "Score_2", "GB_Tree_19_9"."Score_3" AS "Score_3", "GB_Tree_19_9"."Score_4" AS "Score_4", "GB_Tree_19_9"."Score_5" AS "Score_5", "GB_Tree_19_9"."Score_6" AS "Score_6", "GB_Tree_19_9"."Score_7" AS "Score_7", "GB_Tree_19_9"."Score_8" AS "Score_8", "GB_Tree_19_9"."Score_9" AS "Score_9" 
FROM "GB_Tree_19_9") AS "Score_Union_CTE_esu_24"), 
"Score_Union_CTE_25" AS 
(WITH "DT_node_lookup_200" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_36" <= 0.5) THEN CASE WHEN ("ADS"."Feature_33" <= 0.5) THEN CASE WHEN ("ADS"."Feature_63" <= 2.5) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_6" <= 1.5) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_34" <= 11.5) THEN CASE WHEN ("ADS"."Feature_58" <= 3.5) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_36" <= 3.5) THEN 13 ELSE 14 END END END AS node_id_2 
FROM digits AS "ADS"), 
"DT_node_data_200" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 65 AS count, 3 AS depth, 2 AS parent_id, -0.8035169558027756 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 2 AS parent_id, -1.0832367343944929 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 143 AS count, 3 AS depth, 5 AS parent_id, 0.8984319652699233 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 10 AS count, 3 AS depth, 5 AS parent_id, -0.9655311938834088 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 252 AS count, 3 AS depth, 9 AS parent_id, -0.9260041151667252 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 523 AS count, 3 AS depth, 9 AS parent_id, -0.9154423072999409 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 16 AS count, 3 AS depth, 12 AS parent_id, 0.4821679412821677 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 427 AS count, 3 AS depth, 12 AS parent_id, -0.9115201951766825 AS "Estimator") AS "Values"), 
"DT_Output_200" AS 
(SELECT "DT_node_lookup_200"."KEY" AS "KEY", "DT_node_lookup_200".node_id_2 AS node_id_2, "DT_node_data_200".node_id AS node_id, "DT_node_data_200".feature AS feature, "DT_node_data_200".threshold AS threshold, "DT_node_data_200".count AS count, "DT_node_data_200".depth AS depth, "DT_node_data_200".parent_id AS parent_id, "DT_node_data_200"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_200" LEFT OUTER JOIN "DT_node_data_200" ON "DT_node_lookup_200".node_id_2 = "DT_node_data_200".node_id), 
"GB_Tree_20_0" AS 
(SELECT "DT_Output_200"."KEY" AS "KEY", "DT_Output_200"."Estimator" AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3", 0.0 AS "Score_4", 0.0 AS "Score_5", 0.0 AS "Score_6", 0.0 AS "Score_7", 0.0 AS "Score_8", 0.0 AS "Score_9" 
FROM "DT_Output_200"), 
"DT_node_lookup_201" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_12" <= 14.5) THEN CASE WHEN ("ADS"."Feature_63" <= 4.5) THEN CASE WHEN ("ADS"."Feature_55" <= 4.5) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_19" <= 13.0) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_6" <= 0.5) THEN CASE WHEN ("ADS"."Feature_51" <= 14.5) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_19" <= 10.5) THEN 13 ELSE 14 END END END AS node_id_2 
FROM digits AS "ADS"), 
"DT_node_data_201" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1007 AS count, 3 AS depth, 2 AS parent_id, -0.7514684825653942 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 10 AS count, 3 AS depth, 2 AS parent_id, 1.0986075164217017 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 17 AS count, 3 AS depth, 5 AS parent_id, -0.9103519613752796 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 20 AS count, 3 AS depth, 5 AS parent_id, 1.096641786663721 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 206 AS count, 3 AS depth, 9 AS parent_id, -0.35819399753917913 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 116 AS count, 3 AS depth, 9 AS parent_id, 0.847932741518229 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 19 AS count, 3 AS depth, 12 AS parent_id, -0.928218837036903 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 42 AS count, 3 AS depth, 12 AS parent_id, 1.1889635361147868 AS "Estimator") AS "Values"), 
"DT_Output_201" AS 
(SELECT "DT_node_lookup_201"."KEY" AS "KEY", "DT_node_lookup_201".node_id_2 AS node_id_2, "DT_node_data_201".node_id AS node_id, "DT_node_data_201".feature AS feature, "DT_node_data_201".threshold AS threshold, "DT_node_data_201".count AS count, "DT_node_data_201".depth AS depth, "DT_node_data_201".parent_id AS parent_id, "DT_node_data_201"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_201" LEFT OUTER JOIN "DT_node_data_201" ON "DT_node_lookup_201".node_id_2 = "DT_node_data_201".node_id), 
"GB_Tree_20_1" AS 
(SELECT "DT_Output_201"."KEY" AS "KEY", 0.0 AS "Score_0", "DT_Output_201"."Estimator" AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3", 0.0 AS "Score_4", 0.0 AS "Score_5", 0.0 AS "Score_6", 0.0 AS "Score_7", 0.0 AS "Score_8", 0.0 AS "Score_9" 
FROM "DT_Output_201"), 
"DT_node_lookup_202" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_45" <= 6.5) THEN CASE WHEN ("ADS"."Feature_54" <= 0.5) THEN CASE WHEN ("ADS"."Feature_61" <= 11.5) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_38" <= 0.5) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_63" <= 2.5) THEN CASE WHEN ("ADS"."Feature_33" <= 1.5) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_29" <= 8.0) THEN 13 ELSE 14 END END END AS node_id_2 
FROM digits AS "ADS"), 
"DT_node_data_202" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 322 AS count, 3 AS depth, 2 AS parent_id, -0.7437546826331364 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 10 AS count, 3 AS depth, 2 AS parent_id, 1.1871770906769301 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 137 AS count, 3 AS depth, 5 AS parent_id, 0.9996569024667211 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 73 AS count, 3 AS depth, 5 AS parent_id, -0.9212039645620527 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 481 AS count, 3 AS depth, 9 AS parent_id, -0.7833672754460729 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 393 AS count, 3 AS depth, 9 AS parent_id, -0.9182391284369962 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 15 AS count, 3 AS depth, 12 AS parent_id, -0.5678773057439405 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 6 AS count, 3 AS depth, 12 AS parent_id, 1.2008436026200195 AS "Estimator") AS "Values"), 
"DT_Output_202" AS 
(SELECT "DT_node_lookup_202"."KEY" AS "KEY", "DT_node_lookup_202".node_id_2 AS node_id_2, "DT_node_data_202".node_id AS node_id, "DT_node_data_202".feature AS feature, "DT_node_data_202".threshold AS threshold, "DT_node_data_202".count AS count, "DT_node_data_202".depth AS depth, "DT_node_data_202".parent_id AS parent_id, "DT_node_data_202"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_202" LEFT OUTER JOIN "DT_node_data_202" ON "DT_node_lookup_202".node_id_2 = "DT_node_data_202".node_id), 
"GB_Tree_20_2" AS 
(SELECT "DT_Output_202"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", "DT_Output_202"."Estimator" AS "Score_2", 0.0 AS "Score_3", 0.0 AS "Score_4", 0.0 AS "Score_5", 0.0 AS "Score_6", 0.0 AS "Score_7", 0.0 AS "Score_8", 0.0 AS "Score_9" 
FROM "DT_Output_202"), 
"DT_node_lookup_203" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_34" <= 0.5) THEN CASE WHEN ("ADS"."Feature_43" <= 4.5) THEN CASE WHEN ("ADS"."Feature_29" <= 10.5) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_11" <= 7.5) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_53" <= 15.5) THEN CASE WHEN ("ADS"."Feature_18" <= 3.5) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_9" <= 5.5) THEN 13 ELSE 14 END END END AS node_id_2 
FROM digits AS "ADS"), 
"DT_node_data_203" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 116 AS count, 3 AS depth, 2 AS parent_id, 1.0365513616046935 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 107 AS count, 3 AS depth, 2 AS parent_id, -0.14261862386822655 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 12 AS count, 3 AS depth, 5 AS parent_id, 0.9984376729019065 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 136 AS count, 3 AS depth, 5 AS parent_id, -0.93463960396798 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 174 AS count, 3 AS depth, 9 AS parent_id, 0.07582591007184138 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 754 AS count, 3 AS depth, 9 AS parent_id, -0.8898753749901148 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 122 AS count, 3 AS depth, 12 AS parent_id, 0.09855203431043694 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 16 AS count, 3 AS depth, 12 AS parent_id, 1.4999915128017194 AS "Estimator") AS "Values"), 
"DT_Output_203" AS 
(SELECT "DT_node_lookup_203"."KEY" AS "KEY", "DT_node_lookup_203".node_id_2 AS node_id_2, "DT_node_data_203".node_id AS node_id, "DT_node_data_203".feature AS feature, "DT_node_data_203".threshold AS threshold, "DT_node_data_203".count AS count, "DT_node_data_203".depth AS depth, "DT_node_data_203".parent_id AS parent_id, "DT_node_data_203"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_203" LEFT OUTER JOIN "DT_node_data_203" ON "DT_node_lookup_203".node_id_2 = "DT_node_data_203".node_id), 
"GB_Tree_20_3" AS 
(SELECT "DT_Output_203"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", "DT_Output_203"."Estimator" AS "Score_3", 0.0 AS "Score_4", 0.0 AS "Score_5", 0.0 AS "Score_6", 0.0 AS "Score_7", 0.0 AS "Score_8", 0.0 AS "Score_9" 
FROM "DT_Output_203"), 
"DT_node_lookup_204" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_33" <= 1.5) THEN CASE WHEN ("ADS"."Feature_4" <= 0.5) THEN CASE WHEN ("ADS"."Feature_53" <= 1.5) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_41" <= 13.5) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_44" <= 12.5) THEN CASE WHEN ("ADS"."Feature_30" <= 11.5) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_13" <= 13.5) THEN 13 ELSE 14 END END END AS node_id_2 
FROM digits AS "ADS"), 
"DT_node_data_204" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 3 AS depth, 2 AS parent_id, 3.5672950004129302 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 18 AS count, 3 AS depth, 2 AS parent_id, -0.9148426902630961 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 891 AS count, 3 AS depth, 5 AS parent_id, -0.8304894210348222 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 5 AS parent_id, 1.1902948710405088 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 314 AS count, 3 AS depth, 9 AS parent_id, -0.5727955994472066 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 17 AS count, 3 AS depth, 9 AS parent_id, 1.0704257204731393 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 164 AS count, 3 AS depth, 12 AS parent_id, 1.0001138840449721 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 30 AS count, 3 AS depth, 12 AS parent_id, -0.7510618165113938 AS "Estimator") AS "Values"), 
"DT_Output_204" AS 
(SELECT "DT_node_lookup_204"."KEY" AS "KEY", "DT_node_lookup_204".node_id_2 AS node_id_2, "DT_node_data_204".node_id AS node_id, "DT_node_data_204".feature AS feature, "DT_node_data_204".threshold AS threshold, "DT_node_data_204".count AS count, "DT_node_data_204".depth AS depth, "DT_node_data_204".parent_id AS parent_id, "DT_node_data_204"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_204" LEFT OUTER JOIN "DT_node_data_204" ON "DT_node_lookup_204".node_id_2 = "DT_node_data_204".node_id), 
"GB_Tree_20_4" AS 
(SELECT "DT_Output_204"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3", "DT_Output_204"."Estimator" AS "Score_4", 0.0 AS "Score_5", 0.0 AS "Score_6", 0.0 AS "Score_7", 0.0 AS "Score_8", 0.0 AS "Score_9" 
FROM "DT_Output_204"), 
"DT_node_lookup_205" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_2" <= 6.5) THEN CASE WHEN ("ADS"."Feature_9" <= 9.5) THEN CASE WHEN ("ADS"."Feature_26" <= 14.5) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_50" <= 4.0) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_26" <= 13.5) THEN CASE WHEN ("ADS"."Feature_20" <= 3.5) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_36" <= 2.5) THEN 13 ELSE 14 END END END AS node_id_2 
FROM digits AS "ADS"), 
"DT_node_data_205" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 572 AS count, 3 AS depth, 2 AS parent_id, -0.892779867050226 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 343 AS count, 3 AS depth, 2 AS parent_id, -0.12595542299735693 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 3 AS depth, 5 AS parent_id, 1.499846231958587 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 3 AS depth, 5 AS parent_id, -0.9572988105936251 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 58 AS count, 3 AS depth, 9 AS parent_id, 0.7055878774022765 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 327 AS count, 3 AS depth, 9 AS parent_id, -0.731290220265543 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 32 AS count, 3 AS depth, 12 AS parent_id, 1.3539259808367694 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 101 AS count, 3 AS depth, 12 AS parent_id, 0.6444618806771455 AS "Estimator") AS "Values"), 
"DT_Output_205" AS 
(SELECT "DT_node_lookup_205"."KEY" AS "KEY", "DT_node_lookup_205".node_id_2 AS node_id_2, "DT_node_data_205".node_id AS node_id, "DT_node_data_205".feature AS feature, "DT_node_data_205".threshold AS threshold, "DT_node_data_205".count AS count, "DT_node_data_205".depth AS depth, "DT_node_data_205".parent_id AS parent_id, "DT_node_data_205"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_205" LEFT OUTER JOIN "DT_node_data_205" ON "DT_node_lookup_205".node_id_2 = "DT_node_data_205".node_id), 
"GB_Tree_20_5" AS 
(SELECT "DT_Output_205"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3", 0.0 AS "Score_4", "DT_Output_205"."Estimator" AS "Score_5", 0.0 AS "Score_6", 0.0 AS "Score_7", 0.0 AS "Score_8", 0.0 AS "Score_9" 
FROM "DT_Output_205"), 
"DT_node_lookup_206" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_34" <= 13.5) THEN CASE WHEN ("ADS"."Feature_10" <= 3.5) THEN CASE WHEN ("ADS"."Feature_46" <= 7.5) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_28" <= 0.5) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_61" <= 7.5) THEN CASE WHEN ("ADS"."Feature_4" <= 0.5) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_12" <= 13.5) THEN 13 ELSE 14 END END END AS node_id_2 
FROM digits AS "ADS"), 
"DT_node_data_206" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 115 AS count, 3 AS depth, 2 AS parent_id, -0.3354912244261314 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 14 AS count, 3 AS depth, 2 AS parent_id, 1.334391031149311 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 118 AS count, 3 AS depth, 5 AS parent_id, -0.09544673680808355 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 791 AS count, 3 AS depth, 5 AS parent_id, -0.9182491703104363 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 9 AS parent_id, 1.381515485491663 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 246 AS count, 3 AS depth, 9 AS parent_id, -0.4760561638908305 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 126 AS count, 3 AS depth, 12 AS parent_id, 1.0346101604919047 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 26 AS count, 3 AS depth, 12 AS parent_id, -0.4524405452482757 AS "Estimator") AS "Values"), 
"DT_Output_206" AS 
(SELECT "DT_node_lookup_206"."KEY" AS "KEY", "DT_node_lookup_206".node_id_2 AS node_id_2, "DT_node_data_206".node_id AS node_id, "DT_node_data_206".feature AS feature, "DT_node_data_206".threshold AS threshold, "DT_node_data_206".count AS count, "DT_node_data_206".depth AS depth, "DT_node_data_206".parent_id AS parent_id, "DT_node_data_206"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_206" LEFT OUTER JOIN "DT_node_data_206" ON "DT_node_lookup_206".node_id_2 = "DT_node_data_206".node_id), 
"GB_Tree_20_6" AS 
(SELECT "DT_Output_206"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3", 0.0 AS "Score_4", 0.0 AS "Score_5", "DT_Output_206"."Estimator" AS "Score_6", 0.0 AS "Score_7", 0.0 AS "Score_8", 0.0 AS "Score_9" 
FROM "DT_Output_206"), 
"DT_node_lookup_207" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_53" <= 0.5) THEN CASE WHEN ("ADS"."Feature_19" <= 3.5) THEN CASE WHEN ("ADS"."Feature_17" <= 7.5) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_52" <= 0.5) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_30" <= 13.5) THEN CASE WHEN ("ADS"."Feature_34" <= 14.5) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_33" <= 4.5) THEN 13 ELSE 14 END END END AS node_id_2 
FROM digits AS "ADS"), 
"DT_node_data_207" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 102 AS count, 3 AS depth, 2 AS parent_id, 1.0720264827284867 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 19 AS count, 3 AS depth, 2 AS parent_id, -0.855374524969789 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 11 AS count, 3 AS depth, 5 AS parent_id, 1.1551718110927998 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 159 AS count, 3 AS depth, 5 AS parent_id, -0.16845179425378412 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 874 AS count, 3 AS depth, 9 AS parent_id, -0.7996380174976219 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 259 AS count, 3 AS depth, 9 AS parent_id, -0.09375818281912383 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 3 AS depth, 12 AS parent_id, 1.1836589008110134 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 10 AS count, 3 AS depth, 12 AS parent_id, -0.9069839435752878 AS "Estimator") AS "Values"), 
"DT_Output_207" AS 
(SELECT "DT_node_lookup_207"."KEY" AS "KEY", "DT_node_lookup_207".node_id_2 AS node_id_2, "DT_node_data_207".node_id AS node_id, "DT_node_data_207".feature AS feature, "DT_node_data_207".threshold AS threshold, "DT_node_data_207".count AS count, "DT_node_data_207".depth AS depth, "DT_node_data_207".parent_id AS parent_id, "DT_node_data_207"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_207" LEFT OUTER JOIN "DT_node_data_207" ON "DT_node_lookup_207".node_id_2 = "DT_node_data_207".node_id), 
"GB_Tree_20_7" AS 
(SELECT "DT_Output_207"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3", 0.0 AS "Score_4", 0.0 AS "Score_5", 0.0 AS "Score_6", "DT_Output_207"."Estimator" AS "Score_7", 0.0 AS "Score_8", 0.0 AS "Score_9" 
FROM "DT_Output_207")
 SELECT "Score_Union_CTE_esu_25"."KEY", "Score_Union_CTE_esu_25"."Score_0", "Score_Union_CTE_esu_25"."Score_1", "Score_Union_CTE_esu_25"."Score_2", "Score_Union_CTE_esu_25"."Score_3", "Score_Union_CTE_esu_25"."Score_4", "Score_Union_CTE_esu_25"."Score_5", "Score_Union_CTE_esu_25"."Score_6", "Score_Union_CTE_esu_25"."Score_7", "Score_Union_CTE_esu_25"."Score_8", "Score_Union_CTE_esu_25"."Score_9" 
FROM (SELECT "GB_Tree_20_0"."KEY" AS "KEY", "GB_Tree_20_0"."Score_0" AS "Score_0", "GB_Tree_20_0"."Score_1" AS "Score_1", "GB_Tree_20_0"."Score_2" AS "Score_2", "GB_Tree_20_0"."Score_3" AS "Score_3", "GB_Tree_20_0"."Score_4" AS "Score_4", "GB_Tree_20_0"."Score_5" AS "Score_5", "GB_Tree_20_0"."Score_6" AS "Score_6", "GB_Tree_20_0"."Score_7" AS "Score_7", "GB_Tree_20_0"."Score_8" AS "Score_8", "GB_Tree_20_0"."Score_9" AS "Score_9" 
FROM "GB_Tree_20_0" UNION ALL SELECT "GB_Tree_20_1"."KEY" AS "KEY", "GB_Tree_20_1"."Score_0" AS "Score_0", "GB_Tree_20_1"."Score_1" AS "Score_1", "GB_Tree_20_1"."Score_2" AS "Score_2", "GB_Tree_20_1"."Score_3" AS "Score_3", "GB_Tree_20_1"."Score_4" AS "Score_4", "GB_Tree_20_1"."Score_5" AS "Score_5", "GB_Tree_20_1"."Score_6" AS "Score_6", "GB_Tree_20_1"."Score_7" AS "Score_7", "GB_Tree_20_1"."Score_8" AS "Score_8", "GB_Tree_20_1"."Score_9" AS "Score_9" 
FROM "GB_Tree_20_1" UNION ALL SELECT "GB_Tree_20_2"."KEY" AS "KEY", "GB_Tree_20_2"."Score_0" AS "Score_0", "GB_Tree_20_2"."Score_1" AS "Score_1", "GB_Tree_20_2"."Score_2" AS "Score_2", "GB_Tree_20_2"."Score_3" AS "Score_3", "GB_Tree_20_2"."Score_4" AS "Score_4", "GB_Tree_20_2"."Score_5" AS "Score_5", "GB_Tree_20_2"."Score_6" AS "Score_6", "GB_Tree_20_2"."Score_7" AS "Score_7", "GB_Tree_20_2"."Score_8" AS "Score_8", "GB_Tree_20_2"."Score_9" AS "Score_9" 
FROM "GB_Tree_20_2" UNION ALL SELECT "GB_Tree_20_3"."KEY" AS "KEY", "GB_Tree_20_3"."Score_0" AS "Score_0", "GB_Tree_20_3"."Score_1" AS "Score_1", "GB_Tree_20_3"."Score_2" AS "Score_2", "GB_Tree_20_3"."Score_3" AS "Score_3", "GB_Tree_20_3"."Score_4" AS "Score_4", "GB_Tree_20_3"."Score_5" AS "Score_5", "GB_Tree_20_3"."Score_6" AS "Score_6", "GB_Tree_20_3"."Score_7" AS "Score_7", "GB_Tree_20_3"."Score_8" AS "Score_8", "GB_Tree_20_3"."Score_9" AS "Score_9" 
FROM "GB_Tree_20_3" UNION ALL SELECT "GB_Tree_20_4"."KEY" AS "KEY", "GB_Tree_20_4"."Score_0" AS "Score_0", "GB_Tree_20_4"."Score_1" AS "Score_1", "GB_Tree_20_4"."Score_2" AS "Score_2", "GB_Tree_20_4"."Score_3" AS "Score_3", "GB_Tree_20_4"."Score_4" AS "Score_4", "GB_Tree_20_4"."Score_5" AS "Score_5", "GB_Tree_20_4"."Score_6" AS "Score_6", "GB_Tree_20_4"."Score_7" AS "Score_7", "GB_Tree_20_4"."Score_8" AS "Score_8", "GB_Tree_20_4"."Score_9" AS "Score_9" 
FROM "GB_Tree_20_4" UNION ALL SELECT "GB_Tree_20_5"."KEY" AS "KEY", "GB_Tree_20_5"."Score_0" AS "Score_0", "GB_Tree_20_5"."Score_1" AS "Score_1", "GB_Tree_20_5"."Score_2" AS "Score_2", "GB_Tree_20_5"."Score_3" AS "Score_3", "GB_Tree_20_5"."Score_4" AS "Score_4", "GB_Tree_20_5"."Score_5" AS "Score_5", "GB_Tree_20_5"."Score_6" AS "Score_6", "GB_Tree_20_5"."Score_7" AS "Score_7", "GB_Tree_20_5"."Score_8" AS "Score_8", "GB_Tree_20_5"."Score_9" AS "Score_9" 
FROM "GB_Tree_20_5" UNION ALL SELECT "GB_Tree_20_6"."KEY" AS "KEY", "GB_Tree_20_6"."Score_0" AS "Score_0", "GB_Tree_20_6"."Score_1" AS "Score_1", "GB_Tree_20_6"."Score_2" AS "Score_2", "GB_Tree_20_6"."Score_3" AS "Score_3", "GB_Tree_20_6"."Score_4" AS "Score_4", "GB_Tree_20_6"."Score_5" AS "Score_5", "GB_Tree_20_6"."Score_6" AS "Score_6", "GB_Tree_20_6"."Score_7" AS "Score_7", "GB_Tree_20_6"."Score_8" AS "Score_8", "GB_Tree_20_6"."Score_9" AS "Score_9" 
FROM "GB_Tree_20_6" UNION ALL SELECT "GB_Tree_20_7"."KEY" AS "KEY", "GB_Tree_20_7"."Score_0" AS "Score_0", "GB_Tree_20_7"."Score_1" AS "Score_1", "GB_Tree_20_7"."Score_2" AS "Score_2", "GB_Tree_20_7"."Score_3" AS "Score_3", "GB_Tree_20_7"."Score_4" AS "Score_4", "GB_Tree_20_7"."Score_5" AS "Score_5", "GB_Tree_20_7"."Score_6" AS "Score_6", "GB_Tree_20_7"."Score_7" AS "Score_7", "GB_Tree_20_7"."Score_8" AS "Score_8", "GB_Tree_20_7"."Score_9" AS "Score_9" 
FROM "GB_Tree_20_7") AS "Score_Union_CTE_esu_25"), 
"Score_Union_CTE_26" AS 
(WITH "DT_node_lookup_208" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_50" <= 3.5) THEN CASE WHEN ("ADS"."Feature_54" <= 1.5) THEN CASE WHEN ("ADS"."Feature_37" <= 2.5) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_58" <= 0.5) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_35" <= 8.5) THEN CASE WHEN ("ADS"."Feature_43" <= 10.5) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_51" <= 13.5) THEN 13 ELSE 14 END END END AS node_id_2 
FROM digits AS "ADS"), 
"DT_node_data_208" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 41 AS count, 3 AS depth, 2 AS parent_id, -1.0745370330688562 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 300 AS count, 3 AS depth, 2 AS parent_id, -0.7738568756605523 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 37 AS count, 3 AS depth, 5 AS parent_id, 0.7086385058790433 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 87 AS count, 3 AS depth, 5 AS parent_id, -0.9362841343058705 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 378 AS count, 3 AS depth, 9 AS parent_id, -0.8364477134458429 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 75 AS count, 3 AS depth, 9 AS parent_id, 0.34445008753665346 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 281 AS count, 3 AS depth, 12 AS parent_id, 0.6487536701991357 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 238 AS count, 3 AS depth, 12 AS parent_id, -0.4024258511168655 AS "Estimator") AS "Values"), 
"DT_Output_208" AS 
(SELECT "DT_node_lookup_208"."KEY" AS "KEY", "DT_node_lookup_208".node_id_2 AS node_id_2, "DT_node_data_208".node_id AS node_id, "DT_node_data_208".feature AS feature, "DT_node_data_208".threshold AS threshold, "DT_node_data_208".count AS count, "DT_node_data_208".depth AS depth, "DT_node_data_208".parent_id AS parent_id, "DT_node_data_208"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_208" LEFT OUTER JOIN "DT_node_data_208" ON "DT_node_lookup_208".node_id_2 = "DT_node_data_208".node_id), 
"GB_Tree_20_8" AS 
(SELECT "DT_Output_208"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3", 0.0 AS "Score_4", 0.0 AS "Score_5", 0.0 AS "Score_6", 0.0 AS "Score_7", "DT_Output_208"."Estimator" AS "Score_8", 0.0 AS "Score_9" 
FROM "DT_Output_208"), 
"DT_node_lookup_209" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_43" <= 4.5) THEN CASE WHEN ("ADS"."Feature_21" <= 8.5) THEN CASE WHEN ("ADS"."Feature_54" <= 13.5) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_27" <= 10.5) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_17" <= 14.5) THEN CASE WHEN ("ADS"."Feature_60" <= 1.5) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_60" <= 4.5) THEN 13 ELSE 14 END END END AS node_id_2 
FROM digits AS "ADS"), 
"DT_node_data_209" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 233 AS count, 3 AS depth, 2 AS parent_id, -0.8902415623282683 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 15 AS count, 3 AS depth, 2 AS parent_id, 0.8322138641408053 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 218 AS count, 3 AS depth, 5 AS parent_id, -0.020746525696503443 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 166 AS count, 3 AS depth, 5 AS parent_id, 0.8974410013581133 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 98 AS count, 3 AS depth, 9 AS parent_id, 0.13114407934209196 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 700 AS count, 3 AS depth, 9 AS parent_id, -0.8852523151278037 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 12 AS parent_id, 2.493944433909121 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 6 AS count, 3 AS depth, 12 AS parent_id, -0.9300898707182195 AS "Estimator") AS "Values"), 
"DT_Output_209" AS 
(SELECT "DT_node_lookup_209"."KEY" AS "KEY", "DT_node_lookup_209".node_id_2 AS node_id_2, "DT_node_data_209".node_id AS node_id, "DT_node_data_209".feature AS feature, "DT_node_data_209".threshold AS threshold, "DT_node_data_209".count AS count, "DT_node_data_209".depth AS depth, "DT_node_data_209".parent_id AS parent_id, "DT_node_data_209"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_209" LEFT OUTER JOIN "DT_node_data_209" ON "DT_node_lookup_209".node_id_2 = "DT_node_data_209".node_id), 
"GB_Tree_20_9" AS 
(SELECT "DT_Output_209"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3", 0.0 AS "Score_4", 0.0 AS "Score_5", 0.0 AS "Score_6", 0.0 AS "Score_7", 0.0 AS "Score_8", "DT_Output_209"."Estimator" AS "Score_9" 
FROM "DT_Output_209"), 
"DT_node_lookup_210" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_28" <= 0.5) THEN CASE WHEN ("ADS"."Feature_13" <= 4.5) THEN CASE WHEN ("ADS"."Feature_26" <= 7.5) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_34" <= 3.0) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_28" <= 2.5) THEN CASE WHEN ("ADS"."Feature_21" <= 10.5) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_18" <= 6.5) THEN 13 ELSE 14 END END END AS node_id_2 
FROM digits AS "ADS"), 
"DT_node_data_210" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 3 AS depth, 2 AS parent_id, -1.0021656040234328 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 100 AS count, 3 AS depth, 2 AS parent_id, -0.48255485386752406 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS count, 3 AS depth, 5 AS parent_id, -1.0084631876025651 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 138 AS count, 3 AS depth, 5 AS parent_id, 0.9428189024271753 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 54 AS count, 3 AS depth, 9 AS parent_id, -0.9135175569875428 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 11 AS count, 3 AS depth, 9 AS parent_id, 0.9238824244337409 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 382 AS count, 3 AS depth, 12 AS parent_id, -0.9103124957505992 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 744 AS count, 3 AS depth, 12 AS parent_id, -0.8614222167977797 AS "Estimator") AS "Values"), 
"DT_Output_210" AS 
(SELECT "DT_node_lookup_210"."KEY" AS "KEY", "DT_node_lookup_210".node_id_2 AS node_id_2, "DT_node_data_210".node_id AS node_id, "DT_node_data_210".feature AS feature, "DT_node_data_210".threshold AS threshold, "DT_node_data_210".count AS count, "DT_node_data_210".depth AS depth, "DT_node_data_210".parent_id AS parent_id, "DT_node_data_210"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_210" LEFT OUTER JOIN "DT_node_data_210" ON "DT_node_lookup_210".node_id_2 = "DT_node_data_210".node_id), 
"GB_Tree_21_0" AS 
(SELECT "DT_Output_210"."KEY" AS "KEY", "DT_Output_210"."Estimator" AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3", 0.0 AS "Score_4", 0.0 AS "Score_5", 0.0 AS "Score_6", 0.0 AS "Score_7", 0.0 AS "Score_8", 0.0 AS "Score_9" 
FROM "DT_Output_210"), 
"DT_node_lookup_211" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_10" <= 5.5) THEN CASE WHEN ("ADS"."Feature_20" <= 12.5) THEN CASE WHEN ("ADS"."Feature_4" <= 4.5) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_41" <= 3.5) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_3" <= 1.5) THEN 9 ELSE CASE WHEN ("ADS"."Feature_52" <= 15.5) THEN 11 ELSE 12 END END END AS node_id_2 
FROM digits AS "ADS"), 
"DT_node_data_211" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 11 AS count, 3 AS depth, 2 AS parent_id, 1.1253889819084733 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 199 AS count, 3 AS depth, 2 AS parent_id, -0.5783928708177404 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 93 AS count, 3 AS depth, 5 AS parent_id, 1.1144726110426832 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 20 AS count, 3 AS depth, 5 AS parent_id, -0.4326795171929606 AS "Estimator" UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 2 AS depth, 8 AS parent_id, 1.7129480679807148 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 964 AS count, 3 AS depth, 10 AS parent_id, -0.6495302252467623 AS "Estimator" UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 149 AS count, 3 AS depth, 10 AS parent_id, 0.4298321436952199 AS "Estimator") AS "Values"), 
"DT_Output_211" AS 
(SELECT "DT_node_lookup_211"."KEY" AS "KEY", "DT_node_lookup_211".node_id_2 AS node_id_2, "DT_node_data_211".node_id AS node_id, "DT_node_data_211".feature AS feature, "DT_node_data_211".threshold AS threshold, "DT_node_data_211".count AS count, "DT_node_data_211".depth AS depth, "DT_node_data_211".parent_id AS parent_id, "DT_node_data_211"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_211" LEFT OUTER JOIN "DT_node_data_211" ON "DT_node_lookup_211".node_id_2 = "DT_node_data_211".node_id), 
"GB_Tree_21_1" AS 
(SELECT "DT_Output_211"."KEY" AS "KEY", 0.0 AS "Score_0", "DT_Output_211"."Estimator" AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3", 0.0 AS "Score_4", 0.0 AS "Score_5", 0.0 AS "Score_6", 0.0 AS "Score_7", 0.0 AS "Score_8", 0.0 AS "Score_9" 
FROM "DT_Output_211"), 
"DT_node_lookup_212" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_26" <= 1.5) THEN CASE WHEN ("ADS"."Feature_61" <= 2.5) THEN CASE WHEN ("ADS"."Feature_27" <= 11.5) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_28" <= 13.5) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_2" <= 14.5) THEN CASE WHEN ("ADS"."Feature_27" <= 6.5) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_44" <= 0.5) THEN 13 ELSE 14 END END END AS node_id_2 
FROM digits AS "ADS"), 
"DT_node_data_212" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 73 AS count, 3 AS depth, 2 AS parent_id, -0.5860165376154001 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 18 AS count, 3 AS depth, 2 AS parent_id, -1.0288742250894556 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 65 AS count, 3 AS depth, 5 AS parent_id, 1.1496215131770404 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 151 AS count, 3 AS depth, 5 AS parent_id, 0.4188461032475871 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 362 AS count, 3 AS depth, 9 AS parent_id, -0.014865319401387703 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 728 AS count, 3 AS depth, 9 AS parent_id, -0.7373415249691775 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 8 AS count, 3 AS depth, 12 AS parent_id, 1.3439198917034287 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 32 AS count, 3 AS depth, 12 AS parent_id, 0.08045570494384548 AS "Estimator") AS "Values"), 
"DT_Output_212" AS 
(SELECT "DT_node_lookup_212"."KEY" AS "KEY", "DT_node_lookup_212".node_id_2 AS node_id_2, "DT_node_data_212".node_id AS node_id, "DT_node_data_212".feature AS feature, "DT_node_data_212".threshold AS threshold, "DT_node_data_212".count AS count, "DT_node_data_212".depth AS depth, "DT_node_data_212".parent_id AS parent_id, "DT_node_data_212"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_212" LEFT OUTER JOIN "DT_node_data_212" ON "DT_node_lookup_212".node_id_2 = "DT_node_data_212".node_id), 
"GB_Tree_21_2" AS 
(SELECT "DT_Output_212"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", "DT_Output_212"."Estimator" AS "Score_2", 0.0 AS "Score_3", 0.0 AS "Score_4", 0.0 AS "Score_5", 0.0 AS "Score_6", 0.0 AS "Score_7", 0.0 AS "Score_8", 0.0 AS "Score_9" 
FROM "DT_Output_212"), 
"DT_node_lookup_213" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_18" <= 0.5) THEN CASE WHEN ("ADS"."Feature_2" <= 5.5) THEN CASE WHEN ("ADS"."Feature_44" <= 3.0) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_44" <= 11.5) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_46" <= 5.5) THEN CASE WHEN ("ADS"."Feature_9" <= 5.5) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_20" <= 9.5) THEN 13 ELSE 14 END END END AS node_id_2 
FROM digits AS "ADS"), 
"DT_node_data_213" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS count, 3 AS depth, 2 AS parent_id, 1.0976244613717774 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 71 AS count, 3 AS depth, 2 AS parent_id, -0.8101478388820479 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 71 AS count, 3 AS depth, 5 AS parent_id, 0.5249707998441702 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 21 AS count, 3 AS depth, 5 AS parent_id, 1.4517424985651457 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 748 AS count, 3 AS depth, 9 AS parent_id, -0.7358643839626344 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 130 AS count, 3 AS depth, 9 AS parent_id, 0.1422569245679161 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 270 AS count, 3 AS depth, 12 AS parent_id, -0.3283088052341468 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 121 AS count, 3 AS depth, 12 AS parent_id, 0.713596427307875 AS "Estimator") AS "Values"), 
"DT_Output_213" AS 
(SELECT "DT_node_lookup_213"."KEY" AS "KEY", "DT_node_lookup_213".node_id_2 AS node_id_2, "DT_node_data_213".node_id AS node_id, "DT_node_data_213".feature AS feature, "DT_node_data_213".threshold AS threshold, "DT_node_data_213".count AS count, "DT_node_data_213".depth AS depth, "DT_node_data_213".parent_id AS parent_id, "DT_node_data_213"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_213" LEFT OUTER JOIN "DT_node_data_213" ON "DT_node_lookup_213".node_id_2 = "DT_node_data_213".node_id), 
"GB_Tree_21_3" AS 
(SELECT "DT_Output_213"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", "DT_Output_213"."Estimator" AS "Score_3", 0.0 AS "Score_4", 0.0 AS "Score_5", 0.0 AS "Score_6", 0.0 AS "Score_7", 0.0 AS "Score_8", 0.0 AS "Score_9" 
FROM "DT_Output_213"), 
"DT_node_lookup_214" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_33" <= 1.5) THEN CASE WHEN ("ADS"."Feature_4" <= 0.5) THEN CASE WHEN ("ADS"."Feature_53" <= 1.5) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_49" <= 10.5) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_44" <= 12.5) THEN CASE WHEN ("ADS"."Feature_30" <= 11.5) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_5" <= 11.5) THEN 13 ELSE 14 END END END AS node_id_2 
FROM digits AS "ADS"), 
"DT_node_data_214" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 3 AS depth, 2 AS parent_id, 2.747364758890486 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 18 AS count, 3 AS depth, 2 AS parent_id, -0.9133890326676417 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 887 AS count, 3 AS depth, 5 AS parent_id, -0.8458925198885338 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS count, 3 AS depth, 5 AS parent_id, 1.4490458533892185 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 314 AS count, 3 AS depth, 9 AS parent_id, -0.5358359777284218 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 17 AS count, 3 AS depth, 9 AS parent_id, 1.0073069051097108 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 162 AS count, 3 AS depth, 12 AS parent_id, 0.9383088606319151 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 32 AS count, 3 AS depth, 12 AS parent_id, -0.7876421513160152 AS "Estimator") AS "Values"), 
"DT_Output_214" AS 
(SELECT "DT_node_lookup_214"."KEY" AS "KEY", "DT_node_lookup_214".node_id_2 AS node_id_2, "DT_node_data_214".node_id AS node_id, "DT_node_data_214".feature AS feature, "DT_node_data_214".threshold AS threshold, "DT_node_data_214".count AS count, "DT_node_data_214".depth AS depth, "DT_node_data_214".parent_id AS parent_id, "DT_node_data_214"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_214" LEFT OUTER JOIN "DT_node_data_214" ON "DT_node_lookup_214".node_id_2 = "DT_node_data_214".node_id), 
"GB_Tree_21_4" AS 
(SELECT "DT_Output_214"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3", "DT_Output_214"."Estimator" AS "Score_4", 0.0 AS "Score_5", 0.0 AS "Score_6", 0.0 AS "Score_7", 0.0 AS "Score_8", 0.0 AS "Score_9" 
FROM "DT_Output_214"), 
"DT_node_lookup_215" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_6" <= 1.5) THEN CASE WHEN ("ADS"."Feature_20" <= 4.5) THEN CASE WHEN ("ADS"."Feature_42" <= 1.5) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_21" <= 1.5) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_21" <= 8.5) THEN CASE WHEN ("ADS"."Feature_36" <= 0.5) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_13" <= 0.5) THEN 13 ELSE 14 END END END AS node_id_2 
FROM digits AS "ADS"), 
"DT_node_data_215" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 103 AS count, 3 AS depth, 2 AS parent_id, 0.7553914076462666 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 362 AS count, 3 AS depth, 2 AS parent_id, -0.6546165643208502 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 121 AS count, 3 AS depth, 5 AS parent_id, -0.9233566267445972 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 574 AS count, 3 AS depth, 5 AS parent_id, -0.6622591611975972 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 12 AS count, 3 AS depth, 9 AS parent_id, 1.4048188465747038 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 96 AS count, 3 AS depth, 9 AS parent_id, 0.8451502394584709 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 12 AS parent_id, 1.7764170345049566 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 168 AS count, 3 AS depth, 12 AS parent_id, -0.9192755919161403 AS "Estimator") AS "Values"), 
"DT_Output_215" AS 
(SELECT "DT_node_lookup_215"."KEY" AS "KEY", "DT_node_lookup_215".node_id_2 AS node_id_2, "DT_node_data_215".node_id AS node_id, "DT_node_data_215".feature AS feature, "DT_node_data_215".threshold AS threshold, "DT_node_data_215".count AS count, "DT_node_data_215".depth AS depth, "DT_node_data_215".parent_id AS parent_id, "DT_node_data_215"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_215" LEFT OUTER JOIN "DT_node_data_215" ON "DT_node_lookup_215".node_id_2 = "DT_node_data_215".node_id), 
"GB_Tree_21_5" AS 
(SELECT "DT_Output_215"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3", 0.0 AS "Score_4", "DT_Output_215"."Estimator" AS "Score_5", 0.0 AS "Score_6", 0.0 AS "Score_7", 0.0 AS "Score_8", 0.0 AS "Score_9" 
FROM "DT_Output_215")
 SELECT "Score_Union_CTE_esu_26"."KEY", "Score_Union_CTE_esu_26"."Score_0", "Score_Union_CTE_esu_26"."Score_1", "Score_Union_CTE_esu_26"."Score_2", "Score_Union_CTE_esu_26"."Score_3", "Score_Union_CTE_esu_26"."Score_4", "Score_Union_CTE_esu_26"."Score_5", "Score_Union_CTE_esu_26"."Score_6", "Score_Union_CTE_esu_26"."Score_7", "Score_Union_CTE_esu_26"."Score_8", "Score_Union_CTE_esu_26"."Score_9" 
FROM (SELECT "GB_Tree_20_8"."KEY" AS "KEY", "GB_Tree_20_8"."Score_0" AS "Score_0", "GB_Tree_20_8"."Score_1" AS "Score_1", "GB_Tree_20_8"."Score_2" AS "Score_2", "GB_Tree_20_8"."Score_3" AS "Score_3", "GB_Tree_20_8"."Score_4" AS "Score_4", "GB_Tree_20_8"."Score_5" AS "Score_5", "GB_Tree_20_8"."Score_6" AS "Score_6", "GB_Tree_20_8"."Score_7" AS "Score_7", "GB_Tree_20_8"."Score_8" AS "Score_8", "GB_Tree_20_8"."Score_9" AS "Score_9" 
FROM "GB_Tree_20_8" UNION ALL SELECT "GB_Tree_20_9"."KEY" AS "KEY", "GB_Tree_20_9"."Score_0" AS "Score_0", "GB_Tree_20_9"."Score_1" AS "Score_1", "GB_Tree_20_9"."Score_2" AS "Score_2", "GB_Tree_20_9"."Score_3" AS "Score_3", "GB_Tree_20_9"."Score_4" AS "Score_4", "GB_Tree_20_9"."Score_5" AS "Score_5", "GB_Tree_20_9"."Score_6" AS "Score_6", "GB_Tree_20_9"."Score_7" AS "Score_7", "GB_Tree_20_9"."Score_8" AS "Score_8", "GB_Tree_20_9"."Score_9" AS "Score_9" 
FROM "GB_Tree_20_9" UNION ALL SELECT "GB_Tree_21_0"."KEY" AS "KEY", "GB_Tree_21_0"."Score_0" AS "Score_0", "GB_Tree_21_0"."Score_1" AS "Score_1", "GB_Tree_21_0"."Score_2" AS "Score_2", "GB_Tree_21_0"."Score_3" AS "Score_3", "GB_Tree_21_0"."Score_4" AS "Score_4", "GB_Tree_21_0"."Score_5" AS "Score_5", "GB_Tree_21_0"."Score_6" AS "Score_6", "GB_Tree_21_0"."Score_7" AS "Score_7", "GB_Tree_21_0"."Score_8" AS "Score_8", "GB_Tree_21_0"."Score_9" AS "Score_9" 
FROM "GB_Tree_21_0" UNION ALL SELECT "GB_Tree_21_1"."KEY" AS "KEY", "GB_Tree_21_1"."Score_0" AS "Score_0", "GB_Tree_21_1"."Score_1" AS "Score_1", "GB_Tree_21_1"."Score_2" AS "Score_2", "GB_Tree_21_1"."Score_3" AS "Score_3", "GB_Tree_21_1"."Score_4" AS "Score_4", "GB_Tree_21_1"."Score_5" AS "Score_5", "GB_Tree_21_1"."Score_6" AS "Score_6", "GB_Tree_21_1"."Score_7" AS "Score_7", "GB_Tree_21_1"."Score_8" AS "Score_8", "GB_Tree_21_1"."Score_9" AS "Score_9" 
FROM "GB_Tree_21_1" UNION ALL SELECT "GB_Tree_21_2"."KEY" AS "KEY", "GB_Tree_21_2"."Score_0" AS "Score_0", "GB_Tree_21_2"."Score_1" AS "Score_1", "GB_Tree_21_2"."Score_2" AS "Score_2", "GB_Tree_21_2"."Score_3" AS "Score_3", "GB_Tree_21_2"."Score_4" AS "Score_4", "GB_Tree_21_2"."Score_5" AS "Score_5", "GB_Tree_21_2"."Score_6" AS "Score_6", "GB_Tree_21_2"."Score_7" AS "Score_7", "GB_Tree_21_2"."Score_8" AS "Score_8", "GB_Tree_21_2"."Score_9" AS "Score_9" 
FROM "GB_Tree_21_2" UNION ALL SELECT "GB_Tree_21_3"."KEY" AS "KEY", "GB_Tree_21_3"."Score_0" AS "Score_0", "GB_Tree_21_3"."Score_1" AS "Score_1", "GB_Tree_21_3"."Score_2" AS "Score_2", "GB_Tree_21_3"."Score_3" AS "Score_3", "GB_Tree_21_3"."Score_4" AS "Score_4", "GB_Tree_21_3"."Score_5" AS "Score_5", "GB_Tree_21_3"."Score_6" AS "Score_6", "GB_Tree_21_3"."Score_7" AS "Score_7", "GB_Tree_21_3"."Score_8" AS "Score_8", "GB_Tree_21_3"."Score_9" AS "Score_9" 
FROM "GB_Tree_21_3" UNION ALL SELECT "GB_Tree_21_4"."KEY" AS "KEY", "GB_Tree_21_4"."Score_0" AS "Score_0", "GB_Tree_21_4"."Score_1" AS "Score_1", "GB_Tree_21_4"."Score_2" AS "Score_2", "GB_Tree_21_4"."Score_3" AS "Score_3", "GB_Tree_21_4"."Score_4" AS "Score_4", "GB_Tree_21_4"."Score_5" AS "Score_5", "GB_Tree_21_4"."Score_6" AS "Score_6", "GB_Tree_21_4"."Score_7" AS "Score_7", "GB_Tree_21_4"."Score_8" AS "Score_8", "GB_Tree_21_4"."Score_9" AS "Score_9" 
FROM "GB_Tree_21_4" UNION ALL SELECT "GB_Tree_21_5"."KEY" AS "KEY", "GB_Tree_21_5"."Score_0" AS "Score_0", "GB_Tree_21_5"."Score_1" AS "Score_1", "GB_Tree_21_5"."Score_2" AS "Score_2", "GB_Tree_21_5"."Score_3" AS "Score_3", "GB_Tree_21_5"."Score_4" AS "Score_4", "GB_Tree_21_5"."Score_5" AS "Score_5", "GB_Tree_21_5"."Score_6" AS "Score_6", "GB_Tree_21_5"."Score_7" AS "Score_7", "GB_Tree_21_5"."Score_8" AS "Score_8", "GB_Tree_21_5"."Score_9" AS "Score_9" 
FROM "GB_Tree_21_5") AS "Score_Union_CTE_esu_26"), 
"Score_Union_CTE_27" AS 
(WITH "DT_node_lookup_216" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_42" <= 14.5) THEN CASE WHEN ("ADS"."Feature_46" <= 12.5) THEN CASE WHEN ("ADS"."Feature_10" <= 8.5) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_43" <= 6.0) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_29" <= 0.5) THEN CASE WHEN ("ADS"."Feature_22" <= 0.5) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_54" <= 4.5) THEN 13 ELSE 14 END END END AS node_id_2 
FROM digits AS "ADS"), 
"DT_node_data_216" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 303 AS count, 3 AS depth, 2 AS parent_id, -0.10021032931916019 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 780 AS count, 3 AS depth, 2 AS parent_id, -0.855530970253905 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 19 AS count, 3 AS depth, 5 AS parent_id, -0.9406468583090326 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 21 AS count, 3 AS depth, 5 AS parent_id, 1.038952136267372 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 78 AS count, 3 AS depth, 9 AS parent_id, 0.7489077620933869 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 9 AS parent_id, 3.0800854595760576 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 178 AS count, 3 AS depth, 12 AS parent_id, -0.6024802449506126 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 57 AS count, 3 AS depth, 12 AS parent_id, 0.8989793365965603 AS "Estimator") AS "Values"), 
"DT_Output_216" AS 
(SELECT "DT_node_lookup_216"."KEY" AS "KEY", "DT_node_lookup_216".node_id_2 AS node_id_2, "DT_node_data_216".node_id AS node_id, "DT_node_data_216".feature AS feature, "DT_node_data_216".threshold AS threshold, "DT_node_data_216".count AS count, "DT_node_data_216".depth AS depth, "DT_node_data_216".parent_id AS parent_id, "DT_node_data_216"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_216" LEFT OUTER JOIN "DT_node_data_216" ON "DT_node_lookup_216".node_id_2 = "DT_node_data_216".node_id), 
"GB_Tree_21_6" AS 
(SELECT "DT_Output_216"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3", 0.0 AS "Score_4", 0.0 AS "Score_5", "DT_Output_216"."Estimator" AS "Score_6", 0.0 AS "Score_7", 0.0 AS "Score_8", 0.0 AS "Score_9" 
FROM "DT_Output_216"), 
"DT_node_lookup_217" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_60" <= 0.5) THEN CASE WHEN ("ADS"."Feature_50" <= 9.5) THEN CASE WHEN ("ADS"."Feature_17" <= 1.5) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_27" <= 15.5) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_14" <= 7.5) THEN CASE WHEN ("ADS"."Feature_27" <= 9.5) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_20" <= 1.5) THEN 13 ELSE 14 END END END AS node_id_2 
FROM digits AS "ADS"), 
"DT_node_data_217" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 50 AS count, 3 AS depth, 2 AS parent_id, 0.9234519322053358 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 20 AS count, 3 AS depth, 2 AS parent_id, -0.4817202215588743 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 10 AS count, 3 AS depth, 5 AS parent_id, 0.9758483675467391 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 6 AS count, 3 AS depth, 5 AS parent_id, 1.3227361886563878 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 579 AS count, 3 AS depth, 9 AS parent_id, -0.04963135076006613 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 633 AS count, 3 AS depth, 9 AS parent_id, -0.9376064085387822 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 57 AS count, 3 AS depth, 12 AS parent_id, 0.9849466062590707 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 82 AS count, 3 AS depth, 12 AS parent_id, -0.23315320939877576 AS "Estimator") AS "Values"), 
"DT_Output_217" AS 
(SELECT "DT_node_lookup_217"."KEY" AS "KEY", "DT_node_lookup_217".node_id_2 AS node_id_2, "DT_node_data_217".node_id AS node_id, "DT_node_data_217".feature AS feature, "DT_node_data_217".threshold AS threshold, "DT_node_data_217".count AS count, "DT_node_data_217".depth AS depth, "DT_node_data_217".parent_id AS parent_id, "DT_node_data_217"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_217" LEFT OUTER JOIN "DT_node_data_217" ON "DT_node_lookup_217".node_id_2 = "DT_node_data_217".node_id), 
"GB_Tree_21_7" AS 
(SELECT "DT_Output_217"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3", 0.0 AS "Score_4", 0.0 AS "Score_5", 0.0 AS "Score_6", "DT_Output_217"."Estimator" AS "Score_7", 0.0 AS "Score_8", 0.0 AS "Score_9" 
FROM "DT_Output_217"), 
"DT_node_lookup_218" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_43" <= 15.5) THEN CASE WHEN ("ADS"."Feature_35" <= 9.5) THEN CASE WHEN ("ADS"."Feature_43" <= 13.5) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_21" <= 4.5) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_21" <= 15.5) THEN CASE WHEN ("ADS"."Feature_25" <= 7.5) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_36" <= 8.0) THEN 13 ELSE 14 END END END AS node_id_2 
FROM digits AS "ADS"), 
"DT_node_data_218" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 575 AS count, 3 AS depth, 2 AS parent_id, -0.6692725056730281 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 33 AS count, 3 AS depth, 2 AS parent_id, 0.6493324004596501 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 255 AS count, 3 AS depth, 5 AS parent_id, -0.5257940709404505 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 321 AS count, 3 AS depth, 5 AS parent_id, 0.561386655801039 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 217 AS count, 3 AS depth, 9 AS parent_id, -0.5908324253883309 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 14 AS count, 3 AS depth, 9 AS parent_id, 1.6889442208840693 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 3 AS depth, 12 AS parent_id, -1.3028506294994293 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 20 AS count, 3 AS depth, 12 AS parent_id, -1.0378425641822693 AS "Estimator") AS "Values"), 
"DT_Output_218" AS 
(SELECT "DT_node_lookup_218"."KEY" AS "KEY", "DT_node_lookup_218".node_id_2 AS node_id_2, "DT_node_data_218".node_id AS node_id, "DT_node_data_218".feature AS feature, "DT_node_data_218".threshold AS threshold, "DT_node_data_218".count AS count, "DT_node_data_218".depth AS depth, "DT_node_data_218".parent_id AS parent_id, "DT_node_data_218"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_218" LEFT OUTER JOIN "DT_node_data_218" ON "DT_node_lookup_218".node_id_2 = "DT_node_data_218".node_id), 
"GB_Tree_21_8" AS 
(SELECT "DT_Output_218"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3", 0.0 AS "Score_4", 0.0 AS "Score_5", 0.0 AS "Score_6", 0.0 AS "Score_7", "DT_Output_218"."Estimator" AS "Score_8", 0.0 AS "Score_9" 
FROM "DT_Output_218"), 
"DT_node_lookup_219" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_44" <= 1.5) THEN CASE WHEN ("ADS"."Feature_22" <= 10.5) THEN CASE WHEN ("ADS"."Feature_42" <= 1.5) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_60" <= 8.0) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_14" <= 11.5) THEN CASE WHEN ("ADS"."Feature_27" <= 10.5) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_43" <= 2.5) THEN 13 ELSE 14 END END END AS node_id_2 
FROM digits AS "ADS"), 
"DT_node_data_219" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 174 AS count, 3 AS depth, 2 AS parent_id, 0.6652768174787088 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 246 AS count, 3 AS depth, 2 AS parent_id, -0.3088159638275181 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 5 AS parent_id, 2.087102780664673 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 5 AS parent_id, 1.380075813949492 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 494 AS count, 3 AS depth, 9 AS parent_id, -0.862604445728563 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 465 AS count, 3 AS depth, 9 AS parent_id, -0.0062735414962972365 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 25 AS count, 3 AS depth, 12 AS parent_id, 0.9426618510604128 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 31 AS count, 3 AS depth, 12 AS parent_id, -0.9564551942506808 AS "Estimator") AS "Values"), 
"DT_Output_219" AS 
(SELECT "DT_node_lookup_219"."KEY" AS "KEY", "DT_node_lookup_219".node_id_2 AS node_id_2, "DT_node_data_219".node_id AS node_id, "DT_node_data_219".feature AS feature, "DT_node_data_219".threshold AS threshold, "DT_node_data_219".count AS count, "DT_node_data_219".depth AS depth, "DT_node_data_219".parent_id AS parent_id, "DT_node_data_219"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_219" LEFT OUTER JOIN "DT_node_data_219" ON "DT_node_lookup_219".node_id_2 = "DT_node_data_219".node_id), 
"GB_Tree_21_9" AS 
(SELECT "DT_Output_219"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3", 0.0 AS "Score_4", 0.0 AS "Score_5", 0.0 AS "Score_6", 0.0 AS "Score_7", 0.0 AS "Score_8", "DT_Output_219"."Estimator" AS "Score_9" 
FROM "DT_Output_219"), 
"DT_node_lookup_220" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_36" <= 0.5) THEN CASE WHEN ("ADS"."Feature_28" <= 4.5) THEN CASE WHEN ("ADS"."Feature_3" <= 6.0) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_34" <= 15.5) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_34" <= 11.5) THEN CASE WHEN ("ADS"."Feature_58" <= 3.5) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_36" <= 3.5) THEN 13 ELSE 14 END END END AS node_id_2 
FROM digits AS "ADS"), 
"DT_node_data_220" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 7 AS count, 3 AS depth, 2 AS parent_id, -0.9785270083155896 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 143 AS count, 3 AS depth, 2 AS parent_id, 0.865546080083393 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 67 AS count, 3 AS depth, 5 AS parent_id, -0.9182508098432691 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 3 AS depth, 5 AS parent_id, -0.9865528156789715 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 252 AS count, 3 AS depth, 9 AS parent_id, -0.922640620626802 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 523 AS count, 3 AS depth, 9 AS parent_id, -0.9125970581017614 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 16 AS count, 3 AS depth, 12 AS parent_id, 0.4325415552268438 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 427 AS count, 3 AS depth, 12 AS parent_id, -0.9097761788944582 AS "Estimator") AS "Values"), 
"DT_Output_220" AS 
(SELECT "DT_node_lookup_220"."KEY" AS "KEY", "DT_node_lookup_220".node_id_2 AS node_id_2, "DT_node_data_220".node_id AS node_id, "DT_node_data_220".feature AS feature, "DT_node_data_220".threshold AS threshold, "DT_node_data_220".count AS count, "DT_node_data_220".depth AS depth, "DT_node_data_220".parent_id AS parent_id, "DT_node_data_220"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_220" LEFT OUTER JOIN "DT_node_data_220" ON "DT_node_lookup_220".node_id_2 = "DT_node_data_220".node_id), 
"GB_Tree_22_0" AS 
(SELECT "DT_Output_220"."KEY" AS "KEY", "DT_Output_220"."Estimator" AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3", 0.0 AS "Score_4", 0.0 AS "Score_5", 0.0 AS "Score_6", 0.0 AS "Score_7", 0.0 AS "Score_8", 0.0 AS "Score_9" 
FROM "DT_Output_220"), 
"DT_node_lookup_221" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_10" <= 5.5) THEN CASE WHEN ("ADS"."Feature_13" <= 15.5) THEN CASE WHEN ("ADS"."Feature_37" <= 6.5) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_35" <= 2.5) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_3" <= 1.5) THEN 9 ELSE CASE WHEN ("ADS"."Feature_43" <= 15.5) THEN 11 ELSE 12 END END END AS node_id_2 
FROM digits AS "ADS"), 
"DT_node_data_221" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 76 AS count, 3 AS depth, 2 AS parent_id, 0.8521638105518312 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 199 AS count, 3 AS depth, 2 AS parent_id, -0.6385046276098431 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 12 AS count, 3 AS depth, 5 AS parent_id, 1.46108996593178 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 36 AS count, 3 AS depth, 5 AS parent_id, 0.8971008472535952 AS "Estimator" UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 2 AS depth, 8 AS parent_id, 1.5450301022978643 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 965 AS count, 3 AS depth, 10 AS parent_id, -0.6444807938371591 AS "Estimator" UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 148 AS count, 3 AS depth, 10 AS parent_id, 0.3816033030969373 AS "Estimator") AS "Values"), 
"DT_Output_221" AS 
(SELECT "DT_node_lookup_221"."KEY" AS "KEY", "DT_node_lookup_221".node_id_2 AS node_id_2, "DT_node_data_221".node_id AS node_id, "DT_node_data_221".feature AS feature, "DT_node_data_221".threshold AS threshold, "DT_node_data_221".count AS count, "DT_node_data_221".depth AS depth, "DT_node_data_221".parent_id AS parent_id, "DT_node_data_221"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_221" LEFT OUTER JOIN "DT_node_data_221" ON "DT_node_lookup_221".node_id_2 = "DT_node_data_221".node_id), 
"GB_Tree_22_1" AS 
(SELECT "DT_Output_221"."KEY" AS "KEY", 0.0 AS "Score_0", "DT_Output_221"."Estimator" AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3", 0.0 AS "Score_4", 0.0 AS "Score_5", 0.0 AS "Score_6", 0.0 AS "Score_7", 0.0 AS "Score_8", 0.0 AS "Score_9" 
FROM "DT_Output_221"), 
"DT_node_lookup_222" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_45" <= 6.5) THEN CASE WHEN ("ADS"."Feature_53" <= 3.5) THEN CASE WHEN ("ADS"."Feature_34" <= 2.5) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_26" <= 8.5) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_63" <= 2.5) THEN CASE WHEN ("ADS"."Feature_33" <= 1.5) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_29" <= 8.0) THEN 13 ELSE 14 END END END AS node_id_2 
FROM digits AS "ADS"), 
"DT_node_data_222" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 72 AS count, 3 AS depth, 2 AS parent_id, -0.8543189687122371 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 211 AS count, 3 AS depth, 2 AS parent_id, -0.9189215899239778 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 165 AS count, 3 AS depth, 5 AS parent_id, 0.9256781717494835 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 94 AS count, 3 AS depth, 5 AS parent_id, -0.32687433053260323 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 481 AS count, 3 AS depth, 9 AS parent_id, -0.7636782686815204 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 393 AS count, 3 AS depth, 9 AS parent_id, -0.9160552074174304 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 15 AS count, 3 AS depth, 12 AS parent_id, -0.5417463478216722 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 6 AS count, 3 AS depth, 12 AS parent_id, 1.1257449469114889 AS "Estimator") AS "Values"), 
"DT_Output_222" AS 
(SELECT "DT_node_lookup_222"."KEY" AS "KEY", "DT_node_lookup_222".node_id_2 AS node_id_2, "DT_node_data_222".node_id AS node_id, "DT_node_data_222".feature AS feature, "DT_node_data_222".threshold AS threshold, "DT_node_data_222".count AS count, "DT_node_data_222".depth AS depth, "DT_node_data_222".parent_id AS parent_id, "DT_node_data_222"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_222" LEFT OUTER JOIN "DT_node_data_222" ON "DT_node_lookup_222".node_id_2 = "DT_node_data_222".node_id), 
"GB_Tree_22_2" AS 
(SELECT "DT_Output_222"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", "DT_Output_222"."Estimator" AS "Score_2", 0.0 AS "Score_3", 0.0 AS "Score_4", 0.0 AS "Score_5", 0.0 AS "Score_6", 0.0 AS "Score_7", 0.0 AS "Score_8", 0.0 AS "Score_9" 
FROM "DT_Output_222"), 
"DT_node_lookup_223" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_26" <= 0.5) THEN CASE WHEN ("ADS"."Feature_43" <= 4.5) THEN CASE WHEN ("ADS"."Feature_45" <= 0.5) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_50" <= 2.5) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_29" <= 10.5) THEN CASE WHEN ("ADS"."Feature_42" <= 1.5) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_34" <= 3.5) THEN 13 ELSE 14 END END END AS node_id_2 
FROM digits AS "ADS"), 
"DT_node_data_223" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 2 AS parent_id, 2.297066209467988 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 112 AS count, 3 AS depth, 2 AS parent_id, 0.7587072855467335 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 38 AS count, 3 AS depth, 5 AS parent_id, 0.7340980019489887 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 112 AS count, 3 AS depth, 5 AS parent_id, -0.9517507658785792 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 218 AS count, 3 AS depth, 9 AS parent_id, 0.6597917989470558 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 505 AS count, 3 AS depth, 9 AS parent_id, -0.5282624187262067 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 151 AS count, 3 AS depth, 12 AS parent_id, -0.908152583240219 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 300 AS count, 3 AS depth, 12 AS parent_id, -0.9225615839595261 AS "Estimator") AS "Values"), 
"DT_Output_223" AS 
(SELECT "DT_node_lookup_223"."KEY" AS "KEY", "DT_node_lookup_223".node_id_2 AS node_id_2, "DT_node_data_223".node_id AS node_id, "DT_node_data_223".feature AS feature, "DT_node_data_223".threshold AS threshold, "DT_node_data_223".count AS count, "DT_node_data_223".depth AS depth, "DT_node_data_223".parent_id AS parent_id, "DT_node_data_223"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_223" LEFT OUTER JOIN "DT_node_data_223" ON "DT_node_lookup_223".node_id_2 = "DT_node_data_223".node_id), 
"GB_Tree_22_3" AS 
(SELECT "DT_Output_223"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", "DT_Output_223"."Estimator" AS "Score_3", 0.0 AS "Score_4", 0.0 AS "Score_5", 0.0 AS "Score_6", 0.0 AS "Score_7", 0.0 AS "Score_8", 0.0 AS "Score_9" 
FROM "DT_Output_223")
 SELECT "Score_Union_CTE_esu_27"."KEY", "Score_Union_CTE_esu_27"."Score_0", "Score_Union_CTE_esu_27"."Score_1", "Score_Union_CTE_esu_27"."Score_2", "Score_Union_CTE_esu_27"."Score_3", "Score_Union_CTE_esu_27"."Score_4", "Score_Union_CTE_esu_27"."Score_5", "Score_Union_CTE_esu_27"."Score_6", "Score_Union_CTE_esu_27"."Score_7", "Score_Union_CTE_esu_27"."Score_8", "Score_Union_CTE_esu_27"."Score_9" 
FROM (SELECT "GB_Tree_21_6"."KEY" AS "KEY", "GB_Tree_21_6"."Score_0" AS "Score_0", "GB_Tree_21_6"."Score_1" AS "Score_1", "GB_Tree_21_6"."Score_2" AS "Score_2", "GB_Tree_21_6"."Score_3" AS "Score_3", "GB_Tree_21_6"."Score_4" AS "Score_4", "GB_Tree_21_6"."Score_5" AS "Score_5", "GB_Tree_21_6"."Score_6" AS "Score_6", "GB_Tree_21_6"."Score_7" AS "Score_7", "GB_Tree_21_6"."Score_8" AS "Score_8", "GB_Tree_21_6"."Score_9" AS "Score_9" 
FROM "GB_Tree_21_6" UNION ALL SELECT "GB_Tree_21_7"."KEY" AS "KEY", "GB_Tree_21_7"."Score_0" AS "Score_0", "GB_Tree_21_7"."Score_1" AS "Score_1", "GB_Tree_21_7"."Score_2" AS "Score_2", "GB_Tree_21_7"."Score_3" AS "Score_3", "GB_Tree_21_7"."Score_4" AS "Score_4", "GB_Tree_21_7"."Score_5" AS "Score_5", "GB_Tree_21_7"."Score_6" AS "Score_6", "GB_Tree_21_7"."Score_7" AS "Score_7", "GB_Tree_21_7"."Score_8" AS "Score_8", "GB_Tree_21_7"."Score_9" AS "Score_9" 
FROM "GB_Tree_21_7" UNION ALL SELECT "GB_Tree_21_8"."KEY" AS "KEY", "GB_Tree_21_8"."Score_0" AS "Score_0", "GB_Tree_21_8"."Score_1" AS "Score_1", "GB_Tree_21_8"."Score_2" AS "Score_2", "GB_Tree_21_8"."Score_3" AS "Score_3", "GB_Tree_21_8"."Score_4" AS "Score_4", "GB_Tree_21_8"."Score_5" AS "Score_5", "GB_Tree_21_8"."Score_6" AS "Score_6", "GB_Tree_21_8"."Score_7" AS "Score_7", "GB_Tree_21_8"."Score_8" AS "Score_8", "GB_Tree_21_8"."Score_9" AS "Score_9" 
FROM "GB_Tree_21_8" UNION ALL SELECT "GB_Tree_21_9"."KEY" AS "KEY", "GB_Tree_21_9"."Score_0" AS "Score_0", "GB_Tree_21_9"."Score_1" AS "Score_1", "GB_Tree_21_9"."Score_2" AS "Score_2", "GB_Tree_21_9"."Score_3" AS "Score_3", "GB_Tree_21_9"."Score_4" AS "Score_4", "GB_Tree_21_9"."Score_5" AS "Score_5", "GB_Tree_21_9"."Score_6" AS "Score_6", "GB_Tree_21_9"."Score_7" AS "Score_7", "GB_Tree_21_9"."Score_8" AS "Score_8", "GB_Tree_21_9"."Score_9" AS "Score_9" 
FROM "GB_Tree_21_9" UNION ALL SELECT "GB_Tree_22_0"."KEY" AS "KEY", "GB_Tree_22_0"."Score_0" AS "Score_0", "GB_Tree_22_0"."Score_1" AS "Score_1", "GB_Tree_22_0"."Score_2" AS "Score_2", "GB_Tree_22_0"."Score_3" AS "Score_3", "GB_Tree_22_0"."Score_4" AS "Score_4", "GB_Tree_22_0"."Score_5" AS "Score_5", "GB_Tree_22_0"."Score_6" AS "Score_6", "GB_Tree_22_0"."Score_7" AS "Score_7", "GB_Tree_22_0"."Score_8" AS "Score_8", "GB_Tree_22_0"."Score_9" AS "Score_9" 
FROM "GB_Tree_22_0" UNION ALL SELECT "GB_Tree_22_1"."KEY" AS "KEY", "GB_Tree_22_1"."Score_0" AS "Score_0", "GB_Tree_22_1"."Score_1" AS "Score_1", "GB_Tree_22_1"."Score_2" AS "Score_2", "GB_Tree_22_1"."Score_3" AS "Score_3", "GB_Tree_22_1"."Score_4" AS "Score_4", "GB_Tree_22_1"."Score_5" AS "Score_5", "GB_Tree_22_1"."Score_6" AS "Score_6", "GB_Tree_22_1"."Score_7" AS "Score_7", "GB_Tree_22_1"."Score_8" AS "Score_8", "GB_Tree_22_1"."Score_9" AS "Score_9" 
FROM "GB_Tree_22_1" UNION ALL SELECT "GB_Tree_22_2"."KEY" AS "KEY", "GB_Tree_22_2"."Score_0" AS "Score_0", "GB_Tree_22_2"."Score_1" AS "Score_1", "GB_Tree_22_2"."Score_2" AS "Score_2", "GB_Tree_22_2"."Score_3" AS "Score_3", "GB_Tree_22_2"."Score_4" AS "Score_4", "GB_Tree_22_2"."Score_5" AS "Score_5", "GB_Tree_22_2"."Score_6" AS "Score_6", "GB_Tree_22_2"."Score_7" AS "Score_7", "GB_Tree_22_2"."Score_8" AS "Score_8", "GB_Tree_22_2"."Score_9" AS "Score_9" 
FROM "GB_Tree_22_2" UNION ALL SELECT "GB_Tree_22_3"."KEY" AS "KEY", "GB_Tree_22_3"."Score_0" AS "Score_0", "GB_Tree_22_3"."Score_1" AS "Score_1", "GB_Tree_22_3"."Score_2" AS "Score_2", "GB_Tree_22_3"."Score_3" AS "Score_3", "GB_Tree_22_3"."Score_4" AS "Score_4", "GB_Tree_22_3"."Score_5" AS "Score_5", "GB_Tree_22_3"."Score_6" AS "Score_6", "GB_Tree_22_3"."Score_7" AS "Score_7", "GB_Tree_22_3"."Score_8" AS "Score_8", "GB_Tree_22_3"."Score_9" AS "Score_9" 
FROM "GB_Tree_22_3") AS "Score_Union_CTE_esu_27"), 
"Score_Union_CTE_28" AS 
(WITH "DT_node_lookup_224" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_59" <= 4.5) THEN CASE WHEN ("ADS"."Feature_13" <= 7.5) THEN CASE WHEN ("ADS"."Feature_25" <= 9.0) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_38" <= 7.5) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_5" <= 0.5) THEN CASE WHEN ("ADS"."Feature_61" <= 0.5) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_24" <= 0.5) THEN 13 ELSE 14 END END END AS node_id_2 
FROM digits AS "ADS"), 
"DT_node_data_224" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 64 AS count, 3 AS depth, 2 AS parent_id, 1.010200102078227 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 2 AS parent_id, 2.534311082247273 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 68 AS count, 3 AS depth, 5 AS parent_id, -0.8922722513512744 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS count, 3 AS depth, 5 AS parent_id, 1.0384925817531163 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 89 AS count, 3 AS depth, 9 AS parent_id, 1.0700231890269458 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 289 AS count, 3 AS depth, 9 AS parent_id, -0.6179094673644433 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 920 AS count, 3 AS depth, 12 AS parent_id, -0.7410016547472472 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 12 AS parent_id, 1.1856582179311181 AS "Estimator") AS "Values"), 
"DT_Output_224" AS 
(SELECT "DT_node_lookup_224"."KEY" AS "KEY", "DT_node_lookup_224".node_id_2 AS node_id_2, "DT_node_data_224".node_id AS node_id, "DT_node_data_224".feature AS feature, "DT_node_data_224".threshold AS threshold, "DT_node_data_224".count AS count, "DT_node_data_224".depth AS depth, "DT_node_data_224".parent_id AS parent_id, "DT_node_data_224"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_224" LEFT OUTER JOIN "DT_node_data_224" ON "DT_node_lookup_224".node_id_2 = "DT_node_data_224".node_id), 
"GB_Tree_22_4" AS 
(SELECT "DT_Output_224"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3", "DT_Output_224"."Estimator" AS "Score_4", 0.0 AS "Score_5", 0.0 AS "Score_6", 0.0 AS "Score_7", 0.0 AS "Score_8", 0.0 AS "Score_9" 
FROM "DT_Output_224"), 
"DT_node_lookup_225" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_21" <= 3.5) THEN CASE WHEN ("ADS"."Feature_5" <= 2.5) THEN CASE WHEN ("ADS"."Feature_9" <= 13.5) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_42" <= 8.5) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_36" <= 0.5) THEN CASE WHEN ("ADS"."Feature_6" <= 1.5) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_1" <= 5.0) THEN 13 ELSE 14 END END END AS node_id_2 
FROM digits AS "ADS"), 
"DT_node_data_225" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 286 AS count, 3 AS depth, 2 AS parent_id, -0.6551728263023787 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 3 AS depth, 2 AS parent_id, 0.9872079218789882 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 147 AS count, 3 AS depth, 5 AS parent_id, 0.8803017334149084 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 68 AS count, 3 AS depth, 5 AS parent_id, -0.1205977951351493 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 176 AS count, 3 AS depth, 9 AS parent_id, -0.9210917586041266 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 13 AS count, 3 AS depth, 9 AS parent_id, 1.37106448383697 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 741 AS count, 3 AS depth, 12 AS parent_id, -0.9188364611383613 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 3 AS depth, 12 AS parent_id, 0.6862771853062187 AS "Estimator") AS "Values"), 
"DT_Output_225" AS 
(SELECT "DT_node_lookup_225"."KEY" AS "KEY", "DT_node_lookup_225".node_id_2 AS node_id_2, "DT_node_data_225".node_id AS node_id, "DT_node_data_225".feature AS feature, "DT_node_data_225".threshold AS threshold, "DT_node_data_225".count AS count, "DT_node_data_225".depth AS depth, "DT_node_data_225".parent_id AS parent_id, "DT_node_data_225"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_225" LEFT OUTER JOIN "DT_node_data_225" ON "DT_node_lookup_225".node_id_2 = "DT_node_data_225".node_id), 
"GB_Tree_22_5" AS 
(SELECT "DT_Output_225"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3", 0.0 AS "Score_4", "DT_Output_225"."Estimator" AS "Score_5", 0.0 AS "Score_6", 0.0 AS "Score_7", 0.0 AS "Score_8", 0.0 AS "Score_9" 
FROM "DT_Output_225"), 
"DT_node_lookup_226" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_20" <= 2.5) THEN CASE WHEN ("ADS"."Feature_61" <= 10.5) THEN CASE WHEN ("ADS"."Feature_29" <= 2.5) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_21" <= 4.0) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_10" <= 7.5) THEN CASE WHEN ("ADS"."Feature_54" <= 4.5) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_21" <= 0.5) THEN 13 ELSE 14 END END END AS node_id_2 
FROM digits AS "ADS"), 
"DT_node_data_226" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 95 AS count, 3 AS depth, 2 AS parent_id, 0.7545373224382588 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 279 AS count, 3 AS depth, 2 AS parent_id, -0.7124003301738155 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 116 AS count, 3 AS depth, 5 AS parent_id, 1.0043894818736294 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 29 AS count, 3 AS depth, 5 AS parent_id, -0.9145520303470714 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 211 AS count, 3 AS depth, 9 AS parent_id, -0.6560867380854374 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 47 AS count, 3 AS depth, 9 AS parent_id, 0.8839623512932735 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 95 AS count, 3 AS depth, 12 AS parent_id, -0.9933801159259495 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 565 AS count, 3 AS depth, 12 AS parent_id, -0.8264698833901378 AS "Estimator") AS "Values"), 
"DT_Output_226" AS 
(SELECT "DT_node_lookup_226"."KEY" AS "KEY", "DT_node_lookup_226".node_id_2 AS node_id_2, "DT_node_data_226".node_id AS node_id, "DT_node_data_226".feature AS feature, "DT_node_data_226".threshold AS threshold, "DT_node_data_226".count AS count, "DT_node_data_226".depth AS depth, "DT_node_data_226".parent_id AS parent_id, "DT_node_data_226"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_226" LEFT OUTER JOIN "DT_node_data_226" ON "DT_node_lookup_226".node_id_2 = "DT_node_data_226".node_id), 
"GB_Tree_22_6" AS 
(SELECT "DT_Output_226"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3", 0.0 AS "Score_4", 0.0 AS "Score_5", "DT_Output_226"."Estimator" AS "Score_6", 0.0 AS "Score_7", 0.0 AS "Score_8", 0.0 AS "Score_9" 
FROM "DT_Output_226"), 
"DT_node_lookup_227" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_61" <= 0.5) THEN CASE WHEN ("ADS"."Feature_26" <= 9.5) THEN CASE WHEN ("ADS"."Feature_38" <= 0.5) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_18" <= 5.0) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_33" <= 7.5) THEN CASE WHEN ("ADS"."Feature_53" <= 0.5) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_14" <= 10.0) THEN 13 ELSE 14 END END END AS node_id_2 
FROM digits AS "ADS"), 
"DT_node_data_227" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 60 AS count, 3 AS depth, 2 AS parent_id, -0.06595972403418665 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 112 AS count, 3 AS depth, 2 AS parent_id, 1.1270333411361444 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 12 AS count, 3 AS depth, 5 AS parent_id, 0.85919358108279 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 206 AS count, 3 AS depth, 5 AS parent_id, -0.37478723308857426 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 23 AS count, 3 AS depth, 9 AS parent_id, -0.9604022820616005 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 928 AS count, 3 AS depth, 9 AS parent_id, -0.9016785823106598 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 95 AS count, 3 AS depth, 12 AS parent_id, -0.9093657627806191 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 12 AS parent_id, 5.784416534677563 AS "Estimator") AS "Values"), 
"DT_Output_227" AS 
(SELECT "DT_node_lookup_227"."KEY" AS "KEY", "DT_node_lookup_227".node_id_2 AS node_id_2, "DT_node_data_227".node_id AS node_id, "DT_node_data_227".feature AS feature, "DT_node_data_227".threshold AS threshold, "DT_node_data_227".count AS count, "DT_node_data_227".depth AS depth, "DT_node_data_227".parent_id AS parent_id, "DT_node_data_227"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_227" LEFT OUTER JOIN "DT_node_data_227" ON "DT_node_lookup_227".node_id_2 = "DT_node_data_227".node_id), 
"GB_Tree_22_7" AS 
(SELECT "DT_Output_227"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3", 0.0 AS "Score_4", 0.0 AS "Score_5", 0.0 AS "Score_6", "DT_Output_227"."Estimator" AS "Score_7", 0.0 AS "Score_8", 0.0 AS "Score_9" 
FROM "DT_Output_227"), 
"DT_node_lookup_228" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_9" <= 15.5) THEN CASE WHEN ("ADS"."Feature_60" <= 1.5) THEN CASE WHEN ("ADS"."Feature_37" <= 1.5) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_27" <= 10.5) THEN 6 ELSE 7 END END ELSE 8 END AS node_id_2 
FROM digits AS "ADS"), 
"DT_node_data_228" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 27 AS count, 3 AS depth, 2 AS parent_id, -1.0773714818070768 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 81 AS count, 3 AS depth, 2 AS parent_id, -0.9481596094371846 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 697 AS count, 3 AS depth, 5 AS parent_id, -0.3543783794315747 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 631 AS count, 3 AS depth, 5 AS parent_id, 0.29032487193242473 AS "Estimator" UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 1 AS depth, 0 AS parent_id, 1.3681314991328706 AS "Estimator") AS "Values"), 
"DT_Output_228" AS 
(SELECT "DT_node_lookup_228"."KEY" AS "KEY", "DT_node_lookup_228".node_id_2 AS node_id_2, "DT_node_data_228".node_id AS node_id, "DT_node_data_228".feature AS feature, "DT_node_data_228".threshold AS threshold, "DT_node_data_228".count AS count, "DT_node_data_228".depth AS depth, "DT_node_data_228".parent_id AS parent_id, "DT_node_data_228"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_228" LEFT OUTER JOIN "DT_node_data_228" ON "DT_node_lookup_228".node_id_2 = "DT_node_data_228".node_id), 
"GB_Tree_22_8" AS 
(SELECT "DT_Output_228"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3", 0.0 AS "Score_4", 0.0 AS "Score_5", 0.0 AS "Score_6", 0.0 AS "Score_7", "DT_Output_228"."Estimator" AS "Score_8", 0.0 AS "Score_9" 
FROM "DT_Output_228"), 
"DT_node_lookup_229" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_21" <= 10.5) THEN CASE WHEN ("ADS"."Feature_4" <= 5.5) THEN CASE WHEN ("ADS"."Feature_51" <= 0.5) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_17" <= 14.5) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_43" <= 8.5) THEN CASE WHEN ("ADS"."Feature_27" <= 2.5) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_4" <= 0.5) THEN 13 ELSE 14 END END END AS node_id_2 
FROM digits AS "ADS"), 
"DT_node_data_229" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 2 AS parent_id, 1.810065895347797 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 121 AS count, 3 AS depth, 2 AS parent_id, 0.15207111580445049 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 685 AS count, 3 AS depth, 5 AS parent_id, -0.7485472380765773 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 8 AS count, 3 AS depth, 5 AS parent_id, 0.9885306291349351 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 116 AS count, 3 AS depth, 9 AS parent_id, -0.7220234274055314 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 285 AS count, 3 AS depth, 9 AS parent_id, 0.6916494827960525 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 3 AS depth, 12 AS parent_id, -1.1272134974256416 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 219 AS count, 3 AS depth, 12 AS parent_id, -0.735441474532098 AS "Estimator") AS "Values"), 
"DT_Output_229" AS 
(SELECT "DT_node_lookup_229"."KEY" AS "KEY", "DT_node_lookup_229".node_id_2 AS node_id_2, "DT_node_data_229".node_id AS node_id, "DT_node_data_229".feature AS feature, "DT_node_data_229".threshold AS threshold, "DT_node_data_229".count AS count, "DT_node_data_229".depth AS depth, "DT_node_data_229".parent_id AS parent_id, "DT_node_data_229"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_229" LEFT OUTER JOIN "DT_node_data_229" ON "DT_node_lookup_229".node_id_2 = "DT_node_data_229".node_id), 
"GB_Tree_22_9" AS 
(SELECT "DT_Output_229"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3", 0.0 AS "Score_4", 0.0 AS "Score_5", 0.0 AS "Score_6", 0.0 AS "Score_7", 0.0 AS "Score_8", "DT_Output_229"."Estimator" AS "Score_9" 
FROM "DT_Output_229"), 
"DT_node_lookup_230" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_28" <= 0.5) THEN CASE WHEN ("ADS"."Feature_13" <= 4.5) THEN CASE WHEN ("ADS"."Feature_26" <= 7.5) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_34" <= 3.0) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_28" <= 2.5) THEN CASE WHEN ("ADS"."Feature_21" <= 10.5) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_18" <= 6.5) THEN 13 ELSE 14 END END END AS node_id_2 
FROM digits AS "ADS"), 
"DT_node_data_230" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 3 AS depth, 2 AS parent_id, -0.9736042935345949 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 100 AS count, 3 AS depth, 2 AS parent_id, -0.45623995119002425 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS count, 3 AS depth, 5 AS parent_id, -0.9859086699166765 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 138 AS count, 3 AS depth, 5 AS parent_id, 0.9120622339611446 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 54 AS count, 3 AS depth, 9 AS parent_id, -0.9112382661913075 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 11 AS count, 3 AS depth, 9 AS parent_id, 0.905732831344631 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 382 AS count, 3 AS depth, 12 AS parent_id, -0.9083639237201179 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 744 AS count, 3 AS depth, 12 AS parent_id, -0.8510460986696317 AS "Estimator") AS "Values"), 
"DT_Output_230" AS 
(SELECT "DT_node_lookup_230"."KEY" AS "KEY", "DT_node_lookup_230".node_id_2 AS node_id_2, "DT_node_data_230".node_id AS node_id, "DT_node_data_230".feature AS feature, "DT_node_data_230".threshold AS threshold, "DT_node_data_230".count AS count, "DT_node_data_230".depth AS depth, "DT_node_data_230".parent_id AS parent_id, "DT_node_data_230"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_230" LEFT OUTER JOIN "DT_node_data_230" ON "DT_node_lookup_230".node_id_2 = "DT_node_data_230".node_id), 
"GB_Tree_23_0" AS 
(SELECT "DT_Output_230"."KEY" AS "KEY", "DT_Output_230"."Estimator" AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3", 0.0 AS "Score_4", 0.0 AS "Score_5", 0.0 AS "Score_6", 0.0 AS "Score_7", 0.0 AS "Score_8", 0.0 AS "Score_9" 
FROM "DT_Output_230"), 
"DT_node_lookup_231" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_10" <= 5.5) THEN CASE WHEN ("ADS"."Feature_13" <= 15.5) THEN CASE WHEN ("ADS"."Feature_37" <= 2.5) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_35" <= 2.5) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_3" <= 1.5) THEN 9 ELSE CASE WHEN ("ADS"."Feature_52" <= 15.5) THEN 11 ELSE 12 END END END AS node_id_2 
FROM digits AS "ADS"), 
"DT_node_data_231" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 43 AS count, 3 AS depth, 2 AS parent_id, 1.0973995491036685 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 232 AS count, 3 AS depth, 2 AS parent_id, -0.21518543946066665 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 12 AS count, 3 AS depth, 5 AS parent_id, 1.379189234344437 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 36 AS count, 3 AS depth, 5 AS parent_id, 0.8619179004941389 AS "Estimator" UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 2 AS depth, 8 AS parent_id, 1.414522460548293 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 964 AS count, 3 AS depth, 10 AS parent_id, -0.6003692021798115 AS "Estimator" UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 149 AS count, 3 AS depth, 10 AS parent_id, 0.40226339928533633 AS "Estimator") AS "Values"), 
"DT_Output_231" AS 
(SELECT "DT_node_lookup_231"."KEY" AS "KEY", "DT_node_lookup_231".node_id_2 AS node_id_2, "DT_node_data_231".node_id AS node_id, "DT_node_data_231".feature AS feature, "DT_node_data_231".threshold AS threshold, "DT_node_data_231".count AS count, "DT_node_data_231".depth AS depth, "DT_node_data_231".parent_id AS parent_id, "DT_node_data_231"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_231" LEFT OUTER JOIN "DT_node_data_231" ON "DT_node_lookup_231".node_id_2 = "DT_node_data_231".node_id), 
"GB_Tree_23_1" AS 
(SELECT "DT_Output_231"."KEY" AS "KEY", 0.0 AS "Score_0", "DT_Output_231"."Estimator" AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3", 0.0 AS "Score_4", 0.0 AS "Score_5", 0.0 AS "Score_6", 0.0 AS "Score_7", 0.0 AS "Score_8", 0.0 AS "Score_9" 
FROM "DT_Output_231")
 SELECT "Score_Union_CTE_esu_28"."KEY", "Score_Union_CTE_esu_28"."Score_0", "Score_Union_CTE_esu_28"."Score_1", "Score_Union_CTE_esu_28"."Score_2", "Score_Union_CTE_esu_28"."Score_3", "Score_Union_CTE_esu_28"."Score_4", "Score_Union_CTE_esu_28"."Score_5", "Score_Union_CTE_esu_28"."Score_6", "Score_Union_CTE_esu_28"."Score_7", "Score_Union_CTE_esu_28"."Score_8", "Score_Union_CTE_esu_28"."Score_9" 
FROM (SELECT "GB_Tree_22_4"."KEY" AS "KEY", "GB_Tree_22_4"."Score_0" AS "Score_0", "GB_Tree_22_4"."Score_1" AS "Score_1", "GB_Tree_22_4"."Score_2" AS "Score_2", "GB_Tree_22_4"."Score_3" AS "Score_3", "GB_Tree_22_4"."Score_4" AS "Score_4", "GB_Tree_22_4"."Score_5" AS "Score_5", "GB_Tree_22_4"."Score_6" AS "Score_6", "GB_Tree_22_4"."Score_7" AS "Score_7", "GB_Tree_22_4"."Score_8" AS "Score_8", "GB_Tree_22_4"."Score_9" AS "Score_9" 
FROM "GB_Tree_22_4" UNION ALL SELECT "GB_Tree_22_5"."KEY" AS "KEY", "GB_Tree_22_5"."Score_0" AS "Score_0", "GB_Tree_22_5"."Score_1" AS "Score_1", "GB_Tree_22_5"."Score_2" AS "Score_2", "GB_Tree_22_5"."Score_3" AS "Score_3", "GB_Tree_22_5"."Score_4" AS "Score_4", "GB_Tree_22_5"."Score_5" AS "Score_5", "GB_Tree_22_5"."Score_6" AS "Score_6", "GB_Tree_22_5"."Score_7" AS "Score_7", "GB_Tree_22_5"."Score_8" AS "Score_8", "GB_Tree_22_5"."Score_9" AS "Score_9" 
FROM "GB_Tree_22_5" UNION ALL SELECT "GB_Tree_22_6"."KEY" AS "KEY", "GB_Tree_22_6"."Score_0" AS "Score_0", "GB_Tree_22_6"."Score_1" AS "Score_1", "GB_Tree_22_6"."Score_2" AS "Score_2", "GB_Tree_22_6"."Score_3" AS "Score_3", "GB_Tree_22_6"."Score_4" AS "Score_4", "GB_Tree_22_6"."Score_5" AS "Score_5", "GB_Tree_22_6"."Score_6" AS "Score_6", "GB_Tree_22_6"."Score_7" AS "Score_7", "GB_Tree_22_6"."Score_8" AS "Score_8", "GB_Tree_22_6"."Score_9" AS "Score_9" 
FROM "GB_Tree_22_6" UNION ALL SELECT "GB_Tree_22_7"."KEY" AS "KEY", "GB_Tree_22_7"."Score_0" AS "Score_0", "GB_Tree_22_7"."Score_1" AS "Score_1", "GB_Tree_22_7"."Score_2" AS "Score_2", "GB_Tree_22_7"."Score_3" AS "Score_3", "GB_Tree_22_7"."Score_4" AS "Score_4", "GB_Tree_22_7"."Score_5" AS "Score_5", "GB_Tree_22_7"."Score_6" AS "Score_6", "GB_Tree_22_7"."Score_7" AS "Score_7", "GB_Tree_22_7"."Score_8" AS "Score_8", "GB_Tree_22_7"."Score_9" AS "Score_9" 
FROM "GB_Tree_22_7" UNION ALL SELECT "GB_Tree_22_8"."KEY" AS "KEY", "GB_Tree_22_8"."Score_0" AS "Score_0", "GB_Tree_22_8"."Score_1" AS "Score_1", "GB_Tree_22_8"."Score_2" AS "Score_2", "GB_Tree_22_8"."Score_3" AS "Score_3", "GB_Tree_22_8"."Score_4" AS "Score_4", "GB_Tree_22_8"."Score_5" AS "Score_5", "GB_Tree_22_8"."Score_6" AS "Score_6", "GB_Tree_22_8"."Score_7" AS "Score_7", "GB_Tree_22_8"."Score_8" AS "Score_8", "GB_Tree_22_8"."Score_9" AS "Score_9" 
FROM "GB_Tree_22_8" UNION ALL SELECT "GB_Tree_22_9"."KEY" AS "KEY", "GB_Tree_22_9"."Score_0" AS "Score_0", "GB_Tree_22_9"."Score_1" AS "Score_1", "GB_Tree_22_9"."Score_2" AS "Score_2", "GB_Tree_22_9"."Score_3" AS "Score_3", "GB_Tree_22_9"."Score_4" AS "Score_4", "GB_Tree_22_9"."Score_5" AS "Score_5", "GB_Tree_22_9"."Score_6" AS "Score_6", "GB_Tree_22_9"."Score_7" AS "Score_7", "GB_Tree_22_9"."Score_8" AS "Score_8", "GB_Tree_22_9"."Score_9" AS "Score_9" 
FROM "GB_Tree_22_9" UNION ALL SELECT "GB_Tree_23_0"."KEY" AS "KEY", "GB_Tree_23_0"."Score_0" AS "Score_0", "GB_Tree_23_0"."Score_1" AS "Score_1", "GB_Tree_23_0"."Score_2" AS "Score_2", "GB_Tree_23_0"."Score_3" AS "Score_3", "GB_Tree_23_0"."Score_4" AS "Score_4", "GB_Tree_23_0"."Score_5" AS "Score_5", "GB_Tree_23_0"."Score_6" AS "Score_6", "GB_Tree_23_0"."Score_7" AS "Score_7", "GB_Tree_23_0"."Score_8" AS "Score_8", "GB_Tree_23_0"."Score_9" AS "Score_9" 
FROM "GB_Tree_23_0" UNION ALL SELECT "GB_Tree_23_1"."KEY" AS "KEY", "GB_Tree_23_1"."Score_0" AS "Score_0", "GB_Tree_23_1"."Score_1" AS "Score_1", "GB_Tree_23_1"."Score_2" AS "Score_2", "GB_Tree_23_1"."Score_3" AS "Score_3", "GB_Tree_23_1"."Score_4" AS "Score_4", "GB_Tree_23_1"."Score_5" AS "Score_5", "GB_Tree_23_1"."Score_6" AS "Score_6", "GB_Tree_23_1"."Score_7" AS "Score_7", "GB_Tree_23_1"."Score_8" AS "Score_8", "GB_Tree_23_1"."Score_9" AS "Score_9" 
FROM "GB_Tree_23_1") AS "Score_Union_CTE_esu_28"), 
"Score_Union_CTE_29" AS 
(WITH "DT_node_lookup_232" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_45" <= 0.5) THEN CASE WHEN ("ADS"."Feature_61" <= 5.5) THEN CASE WHEN ("ADS"."Feature_34" <= 0.5) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_14" <= 5.5) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_51" <= 14.5) THEN CASE WHEN ("ADS"."Feature_3" <= 14.5) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_34" <= 2.5) THEN 13 ELSE 14 END END END AS node_id_2 
FROM digits AS "ADS"), 
"DT_node_data_232" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 17 AS count, 3 AS depth, 2 AS parent_id, -1.022416798361508 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 145 AS count, 3 AS depth, 2 AS parent_id, -0.80916036004679 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 108 AS count, 3 AS depth, 5 AS parent_id, 0.8998336378297738 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 3 AS depth, 5 AS parent_id, 1.7532165322877091 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 707 AS count, 3 AS depth, 9 AS parent_id, -0.9173090519933977 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 259 AS count, 3 AS depth, 9 AS parent_id, -0.1317250043742691 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 64 AS count, 3 AS depth, 12 AS parent_id, 0.78965715630334 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 134 AS count, 3 AS depth, 12 AS parent_id, -0.6853480958693225 AS "Estimator") AS "Values"), 
"DT_Output_232" AS 
(SELECT "DT_node_lookup_232"."KEY" AS "KEY", "DT_node_lookup_232".node_id_2 AS node_id_2, "DT_node_data_232".node_id AS node_id, "DT_node_data_232".feature AS feature, "DT_node_data_232".threshold AS threshold, "DT_node_data_232".count AS count, "DT_node_data_232".depth AS depth, "DT_node_data_232".parent_id AS parent_id, "DT_node_data_232"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_232" LEFT OUTER JOIN "DT_node_data_232" ON "DT_node_lookup_232".node_id_2 = "DT_node_data_232".node_id), 
"GB_Tree_23_2" AS 
(SELECT "DT_Output_232"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", "DT_Output_232"."Estimator" AS "Score_2", 0.0 AS "Score_3", 0.0 AS "Score_4", 0.0 AS "Score_5", 0.0 AS "Score_6", 0.0 AS "Score_7", 0.0 AS "Score_8", 0.0 AS "Score_9" 
FROM "DT_Output_232"), 
"DT_node_lookup_233" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_18" <= 0.5) THEN CASE WHEN ("ADS"."Feature_2" <= 5.5) THEN CASE WHEN ("ADS"."Feature_44" <= 3.0) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_44" <= 14.5) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_46" <= 5.5) THEN CASE WHEN ("ADS"."Feature_9" <= 5.5) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_26" <= 7.5) THEN 13 ELSE 14 END END END AS node_id_2 
FROM digits AS "ADS"), 
"DT_node_data_233" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS count, 3 AS depth, 2 AS parent_id, 1.0527988106343653 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 71 AS count, 3 AS depth, 2 AS parent_id, -0.7945244076687813 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 82 AS count, 3 AS depth, 5 AS parent_id, 0.6496639647261353 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 10 AS count, 3 AS depth, 5 AS parent_id, 1.4000052504617704 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 748 AS count, 3 AS depth, 9 AS parent_id, -0.7143324097005592 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 130 AS count, 3 AS depth, 9 AS parent_id, 0.14573989148749525 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 116 AS count, 3 AS depth, 12 AS parent_id, 0.6623158214739041 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 275 AS count, 3 AS depth, 12 AS parent_id, -0.27309116898832736 AS "Estimator") AS "Values"), 
"DT_Output_233" AS 
(SELECT "DT_node_lookup_233"."KEY" AS "KEY", "DT_node_lookup_233".node_id_2 AS node_id_2, "DT_node_data_233".node_id AS node_id, "DT_node_data_233".feature AS feature, "DT_node_data_233".threshold AS threshold, "DT_node_data_233".count AS count, "DT_node_data_233".depth AS depth, "DT_node_data_233".parent_id AS parent_id, "DT_node_data_233"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_233" LEFT OUTER JOIN "DT_node_data_233" ON "DT_node_lookup_233".node_id_2 = "DT_node_data_233".node_id), 
"GB_Tree_23_3" AS 
(SELECT "DT_Output_233"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", "DT_Output_233"."Estimator" AS "Score_3", 0.0 AS "Score_4", 0.0 AS "Score_5", 0.0 AS "Score_6", 0.0 AS "Score_7", 0.0 AS "Score_8", 0.0 AS "Score_9" 
FROM "DT_Output_233"), 
"DT_node_lookup_234" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_33" <= 1.5) THEN CASE WHEN ("ADS"."Feature_4" <= 0.5) THEN CASE WHEN ("ADS"."Feature_21" <= 14.5) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_41" <= 13.5) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_44" <= 12.5) THEN CASE WHEN ("ADS"."Feature_30" <= 11.5) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_13" <= 13.5) THEN 13 ELSE 14 END END END AS node_id_2 
FROM digits AS "ADS"), 
"DT_node_data_234" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 18 AS count, 3 AS depth, 2 AS parent_id, -0.9115162115647517 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 3 AS depth, 2 AS parent_id, 2.0360519003544018 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 891 AS count, 3 AS depth, 5 AS parent_id, -0.8031344340588789 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 5 AS parent_id, 1.1273547539990803 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 314 AS count, 3 AS depth, 9 AS parent_id, -0.5028675696305401 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 17 AS count, 3 AS depth, 9 AS parent_id, 0.9820611074135271 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 164 AS count, 3 AS depth, 12 AS parent_id, 0.8941365200462026 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 30 AS count, 3 AS depth, 12 AS parent_id, -0.6541201749298007 AS "Estimator") AS "Values"), 
"DT_Output_234" AS 
(SELECT "DT_node_lookup_234"."KEY" AS "KEY", "DT_node_lookup_234".node_id_2 AS node_id_2, "DT_node_data_234".node_id AS node_id, "DT_node_data_234".feature AS feature, "DT_node_data_234".threshold AS threshold, "DT_node_data_234".count AS count, "DT_node_data_234".depth AS depth, "DT_node_data_234".parent_id AS parent_id, "DT_node_data_234"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_234" LEFT OUTER JOIN "DT_node_data_234" ON "DT_node_lookup_234".node_id_2 = "DT_node_data_234".node_id), 
"GB_Tree_23_4" AS 
(SELECT "DT_Output_234"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3", "DT_Output_234"."Estimator" AS "Score_4", 0.0 AS "Score_5", 0.0 AS "Score_6", 0.0 AS "Score_7", 0.0 AS "Score_8", 0.0 AS "Score_9" 
FROM "DT_Output_234"), 
"DT_node_lookup_235" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_21" <= 0.5) THEN CASE WHEN ("ADS"."Feature_61" <= 4.5) THEN CASE WHEN ("ADS"."Feature_30" <= 3.5) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_19" <= 1.5) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_36" <= 0.5) THEN CASE WHEN ("ADS"."Feature_6" <= 1.5) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_52" <= 14.5) THEN 13 ELSE 14 END END END AS node_id_2 
FROM digits AS "ADS"), 
"DT_node_data_235" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 123 AS count, 3 AS depth, 2 AS parent_id, 0.9241583178972296 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 14 AS count, 3 AS depth, 2 AS parent_id, -1.0868464735970234 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 23 AS count, 3 AS depth, 5 AS parent_id, 1.0169318954316973 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 233 AS count, 3 AS depth, 5 AS parent_id, -0.5319006585759587 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 182 AS count, 3 AS depth, 9 AS parent_id, -0.3929303332142654 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 17 AS count, 3 AS depth, 9 AS parent_id, 1.1955316244351986 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 602 AS count, 3 AS depth, 12 AS parent_id, -0.8863053089901299 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 243 AS count, 3 AS depth, 12 AS parent_id, -0.27283934782056896 AS "Estimator") AS "Values"), 
"DT_Output_235" AS 
(SELECT "DT_node_lookup_235"."KEY" AS "KEY", "DT_node_lookup_235".node_id_2 AS node_id_2, "DT_node_data_235".node_id AS node_id, "DT_node_data_235".feature AS feature, "DT_node_data_235".threshold AS threshold, "DT_node_data_235".count AS count, "DT_node_data_235".depth AS depth, "DT_node_data_235".parent_id AS parent_id, "DT_node_data_235"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_235" LEFT OUTER JOIN "DT_node_data_235" ON "DT_node_lookup_235".node_id_2 = "DT_node_data_235".node_id), 
"GB_Tree_23_5" AS 
(SELECT "DT_Output_235"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3", 0.0 AS "Score_4", "DT_Output_235"."Estimator" AS "Score_5", 0.0 AS "Score_6", 0.0 AS "Score_7", 0.0 AS "Score_8", 0.0 AS "Score_9" 
FROM "DT_Output_235"), 
"DT_node_lookup_236" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_34" <= 13.5) THEN CASE WHEN ("ADS"."Feature_10" <= 3.5) THEN CASE WHEN ("ADS"."Feature_46" <= 7.5) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_28" <= 0.5) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_61" <= 7.5) THEN CASE WHEN ("ADS"."Feature_4" <= 0.5) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_12" <= 13.5) THEN 13 ELSE 14 END END END AS node_id_2 
FROM digits AS "ADS"), 
"DT_node_data_236" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 115 AS count, 3 AS depth, 2 AS parent_id, -0.27800221914075285 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 14 AS count, 3 AS depth, 2 AS parent_id, 1.2625574468956797 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 118 AS count, 3 AS depth, 5 AS parent_id, -0.07886455819349225 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 791 AS count, 3 AS depth, 5 AS parent_id, -0.9077774811759731 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 9 AS parent_id, 1.3043111458642522 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 246 AS count, 3 AS depth, 9 AS parent_id, -0.4228768285489803 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 126 AS count, 3 AS depth, 12 AS parent_id, 0.9947545923957414 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 26 AS count, 3 AS depth, 12 AS parent_id, -0.4389120576238962 AS "Estimator") AS "Values"), 
"DT_Output_236" AS 
(SELECT "DT_node_lookup_236"."KEY" AS "KEY", "DT_node_lookup_236".node_id_2 AS node_id_2, "DT_node_data_236".node_id AS node_id, "DT_node_data_236".feature AS feature, "DT_node_data_236".threshold AS threshold, "DT_node_data_236".count AS count, "DT_node_data_236".depth AS depth, "DT_node_data_236".parent_id AS parent_id, "DT_node_data_236"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_236" LEFT OUTER JOIN "DT_node_data_236" ON "DT_node_lookup_236".node_id_2 = "DT_node_data_236".node_id), 
"GB_Tree_23_6" AS 
(SELECT "DT_Output_236"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3", 0.0 AS "Score_4", 0.0 AS "Score_5", "DT_Output_236"."Estimator" AS "Score_6", 0.0 AS "Score_7", 0.0 AS "Score_8", 0.0 AS "Score_9" 
FROM "DT_Output_236"), 
"DT_node_lookup_237" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_61" <= 0.5) THEN CASE WHEN ("ADS"."Feature_26" <= 9.5) THEN CASE WHEN ("ADS"."Feature_38" <= 0.5) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_12" <= 9.5) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_22" <= 9.5) THEN CASE WHEN ("ADS"."Feature_53" <= 0.5) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_19" <= 0.5) THEN 13 ELSE 14 END END END AS node_id_2 
FROM digits AS "ADS"), 
"DT_node_data_237" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 60 AS count, 3 AS depth, 2 AS parent_id, -0.07963560205603673 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 112 AS count, 3 AS depth, 2 AS parent_id, 1.098760780270315 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 130 AS count, 3 AS depth, 5 AS parent_id, -0.7619172873475382 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 88 AS count, 3 AS depth, 5 AS parent_id, 0.4816305968556046 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 26 AS count, 3 AS depth, 9 AS parent_id, -0.9533852104682459 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 992 AS count, 3 AS depth, 9 AS parent_id, -0.9155151858374925 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 3 AS depth, 12 AS parent_id, 1.7563459348088515 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 27 AS count, 3 AS depth, 12 AS parent_id, -0.5066123293393743 AS "Estimator") AS "Values"), 
"DT_Output_237" AS 
(SELECT "DT_node_lookup_237"."KEY" AS "KEY", "DT_node_lookup_237".node_id_2 AS node_id_2, "DT_node_data_237".node_id AS node_id, "DT_node_data_237".feature AS feature, "DT_node_data_237".threshold AS threshold, "DT_node_data_237".count AS count, "DT_node_data_237".depth AS depth, "DT_node_data_237".parent_id AS parent_id, "DT_node_data_237"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_237" LEFT OUTER JOIN "DT_node_data_237" ON "DT_node_lookup_237".node_id_2 = "DT_node_data_237".node_id), 
"GB_Tree_23_7" AS 
(SELECT "DT_Output_237"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3", 0.0 AS "Score_4", 0.0 AS "Score_5", 0.0 AS "Score_6", "DT_Output_237"."Estimator" AS "Score_7", 0.0 AS "Score_8", 0.0 AS "Score_9" 
FROM "DT_Output_237"), 
"DT_node_lookup_238" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_9" <= 15.5) THEN CASE WHEN ("ADS"."Feature_12" <= 15.5) THEN CASE WHEN ("ADS"."Feature_38" <= 0.5) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_20" <= 15.5) THEN 6 ELSE 7 END END ELSE 8 END AS node_id_2 
FROM digits AS "ADS"), 
"DT_node_data_238" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 501 AS count, 3 AS depth, 2 AS parent_id, 0.3463299994982363 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 655 AS count, 3 AS depth, 2 AS parent_id, -0.499076431288068 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 113 AS count, 3 AS depth, 5 AS parent_id, 0.01856279964354285 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 167 AS count, 3 AS depth, 5 AS parent_id, -0.7157802963005198 AS "Estimator" UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 1 AS depth, 0 AS parent_id, 1.3001371480181207 AS "Estimator") AS "Values"), 
"DT_Output_238" AS 
(SELECT "DT_node_lookup_238"."KEY" AS "KEY", "DT_node_lookup_238".node_id_2 AS node_id_2, "DT_node_data_238".node_id AS node_id, "DT_node_data_238".feature AS feature, "DT_node_data_238".threshold AS threshold, "DT_node_data_238".count AS count, "DT_node_data_238".depth AS depth, "DT_node_data_238".parent_id AS parent_id, "DT_node_data_238"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_238" LEFT OUTER JOIN "DT_node_data_238" ON "DT_node_lookup_238".node_id_2 = "DT_node_data_238".node_id), 
"GB_Tree_23_8" AS 
(SELECT "DT_Output_238"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3", 0.0 AS "Score_4", 0.0 AS "Score_5", 0.0 AS "Score_6", 0.0 AS "Score_7", "DT_Output_238"."Estimator" AS "Score_8", 0.0 AS "Score_9" 
FROM "DT_Output_238"), 
"DT_node_lookup_239" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_21" <= 9.5) THEN CASE WHEN ("ADS"."Feature_62" <= 5.5) THEN CASE WHEN ("ADS"."Feature_17" <= 14.5) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_51" <= 8.5) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_27" <= 10.5) THEN CASE WHEN ("ADS"."Feature_44" <= 5.5) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_35" <= 10.5) THEN 13 ELSE 14 END END END AS node_id_2 
FROM digits AS "ADS"), 
"DT_node_data_239" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 616 AS count, 3 AS depth, 2 AS parent_id, -0.8652282037737427 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 6 AS count, 3 AS depth, 2 AS parent_id, 0.982782133216287 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 18 AS count, 3 AS depth, 5 AS parent_id, 1.2649277962653005 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 136 AS count, 3 AS depth, 5 AS parent_id, -0.9436067856023159 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 171 AS count, 3 AS depth, 9 AS parent_id, 0.3184115932993514 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 201 AS count, 3 AS depth, 9 AS parent_id, -0.8830853737841278 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 147 AS count, 3 AS depth, 12 AS parent_id, 0.8940882178301259 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 142 AS count, 3 AS depth, 12 AS parent_id, -0.4332694575446868 AS "Estimator") AS "Values"), 
"DT_Output_239" AS 
(SELECT "DT_node_lookup_239"."KEY" AS "KEY", "DT_node_lookup_239".node_id_2 AS node_id_2, "DT_node_data_239".node_id AS node_id, "DT_node_data_239".feature AS feature, "DT_node_data_239".threshold AS threshold, "DT_node_data_239".count AS count, "DT_node_data_239".depth AS depth, "DT_node_data_239".parent_id AS parent_id, "DT_node_data_239"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_239" LEFT OUTER JOIN "DT_node_data_239" ON "DT_node_lookup_239".node_id_2 = "DT_node_data_239".node_id), 
"GB_Tree_23_9" AS 
(SELECT "DT_Output_239"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3", 0.0 AS "Score_4", 0.0 AS "Score_5", 0.0 AS "Score_6", 0.0 AS "Score_7", 0.0 AS "Score_8", "DT_Output_239"."Estimator" AS "Score_9" 
FROM "DT_Output_239")
 SELECT "Score_Union_CTE_esu_29"."KEY", "Score_Union_CTE_esu_29"."Score_0", "Score_Union_CTE_esu_29"."Score_1", "Score_Union_CTE_esu_29"."Score_2", "Score_Union_CTE_esu_29"."Score_3", "Score_Union_CTE_esu_29"."Score_4", "Score_Union_CTE_esu_29"."Score_5", "Score_Union_CTE_esu_29"."Score_6", "Score_Union_CTE_esu_29"."Score_7", "Score_Union_CTE_esu_29"."Score_8", "Score_Union_CTE_esu_29"."Score_9" 
FROM (SELECT "GB_Tree_23_2"."KEY" AS "KEY", "GB_Tree_23_2"."Score_0" AS "Score_0", "GB_Tree_23_2"."Score_1" AS "Score_1", "GB_Tree_23_2"."Score_2" AS "Score_2", "GB_Tree_23_2"."Score_3" AS "Score_3", "GB_Tree_23_2"."Score_4" AS "Score_4", "GB_Tree_23_2"."Score_5" AS "Score_5", "GB_Tree_23_2"."Score_6" AS "Score_6", "GB_Tree_23_2"."Score_7" AS "Score_7", "GB_Tree_23_2"."Score_8" AS "Score_8", "GB_Tree_23_2"."Score_9" AS "Score_9" 
FROM "GB_Tree_23_2" UNION ALL SELECT "GB_Tree_23_3"."KEY" AS "KEY", "GB_Tree_23_3"."Score_0" AS "Score_0", "GB_Tree_23_3"."Score_1" AS "Score_1", "GB_Tree_23_3"."Score_2" AS "Score_2", "GB_Tree_23_3"."Score_3" AS "Score_3", "GB_Tree_23_3"."Score_4" AS "Score_4", "GB_Tree_23_3"."Score_5" AS "Score_5", "GB_Tree_23_3"."Score_6" AS "Score_6", "GB_Tree_23_3"."Score_7" AS "Score_7", "GB_Tree_23_3"."Score_8" AS "Score_8", "GB_Tree_23_3"."Score_9" AS "Score_9" 
FROM "GB_Tree_23_3" UNION ALL SELECT "GB_Tree_23_4"."KEY" AS "KEY", "GB_Tree_23_4"."Score_0" AS "Score_0", "GB_Tree_23_4"."Score_1" AS "Score_1", "GB_Tree_23_4"."Score_2" AS "Score_2", "GB_Tree_23_4"."Score_3" AS "Score_3", "GB_Tree_23_4"."Score_4" AS "Score_4", "GB_Tree_23_4"."Score_5" AS "Score_5", "GB_Tree_23_4"."Score_6" AS "Score_6", "GB_Tree_23_4"."Score_7" AS "Score_7", "GB_Tree_23_4"."Score_8" AS "Score_8", "GB_Tree_23_4"."Score_9" AS "Score_9" 
FROM "GB_Tree_23_4" UNION ALL SELECT "GB_Tree_23_5"."KEY" AS "KEY", "GB_Tree_23_5"."Score_0" AS "Score_0", "GB_Tree_23_5"."Score_1" AS "Score_1", "GB_Tree_23_5"."Score_2" AS "Score_2", "GB_Tree_23_5"."Score_3" AS "Score_3", "GB_Tree_23_5"."Score_4" AS "Score_4", "GB_Tree_23_5"."Score_5" AS "Score_5", "GB_Tree_23_5"."Score_6" AS "Score_6", "GB_Tree_23_5"."Score_7" AS "Score_7", "GB_Tree_23_5"."Score_8" AS "Score_8", "GB_Tree_23_5"."Score_9" AS "Score_9" 
FROM "GB_Tree_23_5" UNION ALL SELECT "GB_Tree_23_6"."KEY" AS "KEY", "GB_Tree_23_6"."Score_0" AS "Score_0", "GB_Tree_23_6"."Score_1" AS "Score_1", "GB_Tree_23_6"."Score_2" AS "Score_2", "GB_Tree_23_6"."Score_3" AS "Score_3", "GB_Tree_23_6"."Score_4" AS "Score_4", "GB_Tree_23_6"."Score_5" AS "Score_5", "GB_Tree_23_6"."Score_6" AS "Score_6", "GB_Tree_23_6"."Score_7" AS "Score_7", "GB_Tree_23_6"."Score_8" AS "Score_8", "GB_Tree_23_6"."Score_9" AS "Score_9" 
FROM "GB_Tree_23_6" UNION ALL SELECT "GB_Tree_23_7"."KEY" AS "KEY", "GB_Tree_23_7"."Score_0" AS "Score_0", "GB_Tree_23_7"."Score_1" AS "Score_1", "GB_Tree_23_7"."Score_2" AS "Score_2", "GB_Tree_23_7"."Score_3" AS "Score_3", "GB_Tree_23_7"."Score_4" AS "Score_4", "GB_Tree_23_7"."Score_5" AS "Score_5", "GB_Tree_23_7"."Score_6" AS "Score_6", "GB_Tree_23_7"."Score_7" AS "Score_7", "GB_Tree_23_7"."Score_8" AS "Score_8", "GB_Tree_23_7"."Score_9" AS "Score_9" 
FROM "GB_Tree_23_7" UNION ALL SELECT "GB_Tree_23_8"."KEY" AS "KEY", "GB_Tree_23_8"."Score_0" AS "Score_0", "GB_Tree_23_8"."Score_1" AS "Score_1", "GB_Tree_23_8"."Score_2" AS "Score_2", "GB_Tree_23_8"."Score_3" AS "Score_3", "GB_Tree_23_8"."Score_4" AS "Score_4", "GB_Tree_23_8"."Score_5" AS "Score_5", "GB_Tree_23_8"."Score_6" AS "Score_6", "GB_Tree_23_8"."Score_7" AS "Score_7", "GB_Tree_23_8"."Score_8" AS "Score_8", "GB_Tree_23_8"."Score_9" AS "Score_9" 
FROM "GB_Tree_23_8" UNION ALL SELECT "GB_Tree_23_9"."KEY" AS "KEY", "GB_Tree_23_9"."Score_0" AS "Score_0", "GB_Tree_23_9"."Score_1" AS "Score_1", "GB_Tree_23_9"."Score_2" AS "Score_2", "GB_Tree_23_9"."Score_3" AS "Score_3", "GB_Tree_23_9"."Score_4" AS "Score_4", "GB_Tree_23_9"."Score_5" AS "Score_5", "GB_Tree_23_9"."Score_6" AS "Score_6", "GB_Tree_23_9"."Score_7" AS "Score_7", "GB_Tree_23_9"."Score_8" AS "Score_8", "GB_Tree_23_9"."Score_9" AS "Score_9" 
FROM "GB_Tree_23_9") AS "Score_Union_CTE_esu_29"), 
"Score_Union_CTE_30" AS 
(WITH "DT_node_lookup_240" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_28" <= 0.5) THEN CASE WHEN ("ADS"."Feature_13" <= 4.5) THEN CASE WHEN ("ADS"."Feature_21" <= 10.0) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_34" <= 3.0) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_33" <= 3.5) THEN CASE WHEN ("ADS"."Feature_18" <= 6.5) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_35" <= 0.5) THEN 13 ELSE 14 END END END AS node_id_2 
FROM digits AS "ADS"), 
"DT_node_data_240" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 98 AS count, 3 AS depth, 2 AS parent_id, -0.9289925710264814 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS count, 3 AS depth, 2 AS parent_id, 0.9291247096900284 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS count, 3 AS depth, 5 AS parent_id, -0.9722715339273129 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 138 AS count, 3 AS depth, 5 AS parent_id, 0.8921548232380832 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 339 AS count, 3 AS depth, 9 AS parent_id, -0.9074729356441185 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 603 AS count, 3 AS depth, 9 AS parent_id, -0.916074276539824 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 16 AS count, 3 AS depth, 12 AS parent_id, 0.880455908694748 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 233 AS count, 3 AS depth, 12 AS parent_id, -0.726050580726726 AS "Estimator") AS "Values"), 
"DT_Output_240" AS 
(SELECT "DT_node_lookup_240"."KEY" AS "KEY", "DT_node_lookup_240".node_id_2 AS node_id_2, "DT_node_data_240".node_id AS node_id, "DT_node_data_240".feature AS feature, "DT_node_data_240".threshold AS threshold, "DT_node_data_240".count AS count, "DT_node_data_240".depth AS depth, "DT_node_data_240".parent_id AS parent_id, "DT_node_data_240"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_240" LEFT OUTER JOIN "DT_node_data_240" ON "DT_node_lookup_240".node_id_2 = "DT_node_data_240".node_id), 
"GB_Tree_24_0" AS 
(SELECT "DT_Output_240"."KEY" AS "KEY", "DT_Output_240"."Estimator" AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3", 0.0 AS "Score_4", 0.0 AS "Score_5", 0.0 AS "Score_6", 0.0 AS "Score_7", 0.0 AS "Score_8", 0.0 AS "Score_9" 
FROM "DT_Output_240"), 
"DT_node_lookup_241" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_19" <= 10.5) THEN CASE WHEN ("ADS"."Feature_3" <= 1.5) THEN CASE WHEN ("ADS"."Feature_35" <= 2.5) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_42" <= 11.5) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_45" <= 4.5) THEN CASE WHEN ("ADS"."Feature_9" <= 2.5) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_13" <= 15.5) THEN 13 ELSE 14 END END END AS node_id_2 
FROM digits AS "ADS"), 
"DT_node_data_241" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 3 AS depth, 2 AS parent_id, 1.5471861094046686 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 13 AS count, 3 AS depth, 2 AS parent_id, 0.28741526911685733 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 667 AS count, 3 AS depth, 5 AS parent_id, -0.921147202642225 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 292 AS count, 3 AS depth, 5 AS parent_id, -0.9095454798975037 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 115 AS count, 3 AS depth, 9 AS parent_id, 0.9155874627138237 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 29 AS count, 3 AS depth, 9 AS parent_id, -0.993192716594554 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 280 AS count, 3 AS depth, 12 AS parent_id, -0.3211289434355468 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 39 AS count, 3 AS depth, 12 AS parent_id, 0.8834006754248459 AS "Estimator") AS "Values"), 
"DT_Output_241" AS 
(SELECT "DT_node_lookup_241"."KEY" AS "KEY", "DT_node_lookup_241".node_id_2 AS node_id_2, "DT_node_data_241".node_id AS node_id, "DT_node_data_241".feature AS feature, "DT_node_data_241".threshold AS threshold, "DT_node_data_241".count AS count, "DT_node_data_241".depth AS depth, "DT_node_data_241".parent_id AS parent_id, "DT_node_data_241"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_241" LEFT OUTER JOIN "DT_node_data_241" ON "DT_node_lookup_241".node_id_2 = "DT_node_data_241".node_id), 
"GB_Tree_24_1" AS 
(SELECT "DT_Output_241"."KEY" AS "KEY", 0.0 AS "Score_0", "DT_Output_241"."Estimator" AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3", 0.0 AS "Score_4", 0.0 AS "Score_5", 0.0 AS "Score_6", 0.0 AS "Score_7", 0.0 AS "Score_8", 0.0 AS "Score_9" 
FROM "DT_Output_241"), 
"DT_node_lookup_242" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_9" <= 4.5) THEN CASE WHEN ("ADS"."Feature_27" <= 0.5) THEN CASE WHEN ("ADS"."Feature_45" <= 0.5) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_27" <= 9.5) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_5" <= 0.5) THEN CASE WHEN ("ADS"."Feature_19" <= 13.5) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_42" <= 4.5) THEN 13 ELSE 14 END END END AS node_id_2 
FROM digits AS "ADS"), 
"DT_node_data_242" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 16 AS count, 3 AS depth, 2 AS parent_id, 1.315846916815343 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 161 AS count, 3 AS depth, 2 AS parent_id, 0.23432360426567678 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 403 AS count, 3 AS depth, 5 AS parent_id, -0.17669618736973638 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 595 AS count, 3 AS depth, 5 AS parent_id, -0.7925616060598998 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 66 AS count, 3 AS depth, 9 AS parent_id, 0.8644764745619529 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 10 AS count, 3 AS depth, 9 AS parent_id, 1.1516878419217753 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 140 AS count, 3 AS depth, 12 AS parent_id, -0.4977231549811836 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 46 AS count, 3 AS depth, 12 AS parent_id, 0.7215526961101505 AS "Estimator") AS "Values"), 
"DT_Output_242" AS 
(SELECT "DT_node_lookup_242"."KEY" AS "KEY", "DT_node_lookup_242".node_id_2 AS node_id_2, "DT_node_data_242".node_id AS node_id, "DT_node_data_242".feature AS feature, "DT_node_data_242".threshold AS threshold, "DT_node_data_242".count AS count, "DT_node_data_242".depth AS depth, "DT_node_data_242".parent_id AS parent_id, "DT_node_data_242"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_242" LEFT OUTER JOIN "DT_node_data_242" ON "DT_node_lookup_242".node_id_2 = "DT_node_data_242".node_id), 
"GB_Tree_24_2" AS 
(SELECT "DT_Output_242"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", "DT_Output_242"."Estimator" AS "Score_2", 0.0 AS "Score_3", 0.0 AS "Score_4", 0.0 AS "Score_5", 0.0 AS "Score_6", 0.0 AS "Score_7", 0.0 AS "Score_8", 0.0 AS "Score_9" 
FROM "DT_Output_242"), 
"DT_node_lookup_243" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_43" <= 1.5) THEN CASE WHEN ("ADS"."Feature_36" <= 4.5) THEN CASE WHEN ("ADS"."Feature_18" <= 0.5) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_46" <= 0.5) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_18" <= 0.5) THEN CASE WHEN ("ADS"."Feature_37" <= 1.5) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_34" <= 7.5) THEN 13 ELSE 14 END END END AS node_id_2 
FROM digits AS "ADS"), 
"DT_node_data_243" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 7 AS count, 3 AS depth, 2 AS parent_id, 1.0038882410066916 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 230 AS count, 3 AS depth, 2 AS parent_id, -0.8363064780856155 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 110 AS count, 3 AS depth, 5 AS parent_id, -0.15635594573541012 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 178 AS count, 3 AS depth, 5 AS parent_id, 0.9073641758498414 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 26 AS count, 3 AS depth, 9 AS parent_id, 1.0171163795007452 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 81 AS count, 3 AS depth, 9 AS parent_id, -0.4899889348807336 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 334 AS count, 3 AS depth, 12 AS parent_id, -0.78792744701721 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 471 AS count, 3 AS depth, 12 AS parent_id, -0.593099906237617 AS "Estimator") AS "Values"), 
"DT_Output_243" AS 
(SELECT "DT_node_lookup_243"."KEY" AS "KEY", "DT_node_lookup_243".node_id_2 AS node_id_2, "DT_node_data_243".node_id AS node_id, "DT_node_data_243".feature AS feature, "DT_node_data_243".threshold AS threshold, "DT_node_data_243".count AS count, "DT_node_data_243".depth AS depth, "DT_node_data_243".parent_id AS parent_id, "DT_node_data_243"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_243" LEFT OUTER JOIN "DT_node_data_243" ON "DT_node_lookup_243".node_id_2 = "DT_node_data_243".node_id), 
"GB_Tree_24_3" AS 
(SELECT "DT_Output_243"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", "DT_Output_243"."Estimator" AS "Score_3", 0.0 AS "Score_4", 0.0 AS "Score_5", 0.0 AS "Score_6", 0.0 AS "Score_7", 0.0 AS "Score_8", 0.0 AS "Score_9" 
FROM "DT_Output_243"), 
"DT_node_lookup_244" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_3" <= 5.5) THEN CASE WHEN ("ADS"."Feature_13" <= 6.5) THEN CASE WHEN ("ADS"."Feature_10" <= 0.5) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_33" <= 10.5) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_5" <= 0.5) THEN CASE WHEN ("ADS"."Feature_53" <= 0.5) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_24" <= 0.5) THEN 13 ELSE 14 END END END AS node_id_2 
FROM digits AS "ADS"), 
"DT_node_data_244" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 46 AS count, 3 AS depth, 2 AS parent_id, 1.0782864447439287 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 23 AS count, 3 AS depth, 2 AS parent_id, 0.5713975045096745 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 79 AS count, 3 AS depth, 5 AS parent_id, -0.49943536479553163 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 5 AS parent_id, 1.1450699886841336 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 65 AS count, 3 AS depth, 9 AS parent_id, 1.0247455695457766 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 310 AS count, 3 AS depth, 9 AS parent_id, -0.15403262644258064 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 912 AS count, 3 AS depth, 12 AS parent_id, -0.745551843391786 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 12 AS parent_id, 1.1344663690983499 AS "Estimator") AS "Values"), 
"DT_Output_244" AS 
(SELECT "DT_node_lookup_244"."KEY" AS "KEY", "DT_node_lookup_244".node_id_2 AS node_id_2, "DT_node_data_244".node_id AS node_id, "DT_node_data_244".feature AS feature, "DT_node_data_244".threshold AS threshold, "DT_node_data_244".count AS count, "DT_node_data_244".depth AS depth, "DT_node_data_244".parent_id AS parent_id, "DT_node_data_244"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_244" LEFT OUTER JOIN "DT_node_data_244" ON "DT_node_lookup_244".node_id_2 = "DT_node_data_244".node_id), 
"GB_Tree_24_4" AS 
(SELECT "DT_Output_244"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3", "DT_Output_244"."Estimator" AS "Score_4", 0.0 AS "Score_5", 0.0 AS "Score_6", 0.0 AS "Score_7", 0.0 AS "Score_8", 0.0 AS "Score_9" 
FROM "DT_Output_244"), 
"DT_node_lookup_245" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_2" <= 6.5) THEN CASE WHEN ("ADS"."Feature_9" <= 9.5) THEN CASE WHEN ("ADS"."Feature_1" <= 0.5) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_25" <= 8.5) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_25" <= 2.5) THEN CASE WHEN ("ADS"."Feature_20" <= 3.5) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_5" <= 3.5) THEN 13 ELSE 14 END END END AS node_id_2 
FROM digits AS "ADS"), 
"DT_node_data_245" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 912 AS count, 3 AS depth, 2 AS parent_id, -0.5336281772572714 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 3 AS depth, 2 AS parent_id, -0.5151192102094073 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 3 AS depth, 5 AS parent_id, -0.9435323275625407 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 3 AS depth, 5 AS parent_id, 1.2479577745876058 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 46 AS count, 3 AS depth, 9 AS parent_id, 0.7615721092152037 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 315 AS count, 3 AS depth, 9 AS parent_id, -0.853564860062297 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 48 AS count, 3 AS depth, 12 AS parent_id, -0.09553045839083776 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 109 AS count, 3 AS depth, 12 AS parent_id, 1.0422874383499487 AS "Estimator") AS "Values"), 
"DT_Output_245" AS 
(SELECT "DT_node_lookup_245"."KEY" AS "KEY", "DT_node_lookup_245".node_id_2 AS node_id_2, "DT_node_data_245".node_id AS node_id, "DT_node_data_245".feature AS feature, "DT_node_data_245".threshold AS threshold, "DT_node_data_245".count AS count, "DT_node_data_245".depth AS depth, "DT_node_data_245".parent_id AS parent_id, "DT_node_data_245"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_245" LEFT OUTER JOIN "DT_node_data_245" ON "DT_node_lookup_245".node_id_2 = "DT_node_data_245".node_id), 
"GB_Tree_24_5" AS 
(SELECT "DT_Output_245"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3", 0.0 AS "Score_4", "DT_Output_245"."Estimator" AS "Score_5", 0.0 AS "Score_6", 0.0 AS "Score_7", 0.0 AS "Score_8", 0.0 AS "Score_9" 
FROM "DT_Output_245"), 
"DT_node_lookup_246" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_42" <= 14.5) THEN CASE WHEN ("ADS"."Feature_46" <= 12.5) THEN CASE WHEN ("ADS"."Feature_43" <= 14.5) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_10" <= 0.5) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_29" <= 0.5) THEN CASE WHEN ("ADS"."Feature_22" <= 0.5) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_4" <= 3.5) THEN 13 ELSE 14 END END END AS node_id_2 
FROM digits AS "ADS"), 
"DT_node_data_246" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 878 AS count, 3 AS depth, 2 AS parent_id, -0.7889764295405151 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 205 AS count, 3 AS depth, 2 AS parent_id, 0.032146367242964546 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 3 AS depth, 5 AS parent_id, 1.1332728467398945 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 37 AS count, 3 AS depth, 5 AS parent_id, 0.4273170030088343 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 78 AS count, 3 AS depth, 9 AS parent_id, 0.7028794758081951 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 9 AS parent_id, 2.394065280146253 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 17 AS count, 3 AS depth, 12 AS parent_id, 1.0340712912154384 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 218 AS count, 3 AS depth, 12 AS parent_id, -0.13694629041935982 AS "Estimator") AS "Values"), 
"DT_Output_246" AS 
(SELECT "DT_node_lookup_246"."KEY" AS "KEY", "DT_node_lookup_246".node_id_2 AS node_id_2, "DT_node_data_246".node_id AS node_id, "DT_node_data_246".feature AS feature, "DT_node_data_246".threshold AS threshold, "DT_node_data_246".count AS count, "DT_node_data_246".depth AS depth, "DT_node_data_246".parent_id AS parent_id, "DT_node_data_246"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_246" LEFT OUTER JOIN "DT_node_data_246" ON "DT_node_lookup_246".node_id_2 = "DT_node_data_246".node_id), 
"GB_Tree_24_6" AS 
(SELECT "DT_Output_246"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3", 0.0 AS "Score_4", 0.0 AS "Score_5", "DT_Output_246"."Estimator" AS "Score_6", 0.0 AS "Score_7", 0.0 AS "Score_8", 0.0 AS "Score_9" 
FROM "DT_Output_246"), 
"DT_node_lookup_247" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_60" <= 0.5) THEN CASE WHEN ("ADS"."Feature_59" <= 5.5) THEN CASE WHEN ("ADS"."Feature_21" <= 13.5) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_18" <= 14.5) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_50" <= 0.5) THEN CASE WHEN ("ADS"."Feature_13" <= 13.5) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_6" <= 15.5) THEN 13 ELSE 14 END END END AS node_id_2 
FROM digits AS "ADS"), 
"DT_node_data_247" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 12 AS count, 3 AS depth, 2 AS parent_id, 1.0226623949307336 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 3 AS depth, 2 AS parent_id, 1.411536708978393 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 52 AS count, 3 AS depth, 5 AS parent_id, 0.8557523764554716 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 20 AS count, 3 AS depth, 5 AS parent_id, -0.5141110220319152 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 194 AS count, 3 AS depth, 9 AS parent_id, -0.2741911251578521 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 92 AS count, 3 AS depth, 9 AS parent_id, 1.0352683612432123 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1061 AS count, 3 AS depth, 12 AS parent_id, -0.7232202895700413 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS count, 3 AS depth, 12 AS parent_id, 1.009152101065012 AS "Estimator") AS "Values"), 
"DT_Output_247" AS 
(SELECT "DT_node_lookup_247"."KEY" AS "KEY", "DT_node_lookup_247".node_id_2 AS node_id_2, "DT_node_data_247".node_id AS node_id, "DT_node_data_247".feature AS feature, "DT_node_data_247".threshold AS threshold, "DT_node_data_247".count AS count, "DT_node_data_247".depth AS depth, "DT_node_data_247".parent_id AS parent_id, "DT_node_data_247"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_247" LEFT OUTER JOIN "DT_node_data_247" ON "DT_node_lookup_247".node_id_2 = "DT_node_data_247".node_id), 
"GB_Tree_24_7" AS 
(SELECT "DT_Output_247"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3", 0.0 AS "Score_4", 0.0 AS "Score_5", 0.0 AS "Score_6", "DT_Output_247"."Estimator" AS "Score_7", 0.0 AS "Score_8", 0.0 AS "Score_9" 
FROM "DT_Output_247")
 SELECT "Score_Union_CTE_esu_30"."KEY", "Score_Union_CTE_esu_30"."Score_0", "Score_Union_CTE_esu_30"."Score_1", "Score_Union_CTE_esu_30"."Score_2", "Score_Union_CTE_esu_30"."Score_3", "Score_Union_CTE_esu_30"."Score_4", "Score_Union_CTE_esu_30"."Score_5", "Score_Union_CTE_esu_30"."Score_6", "Score_Union_CTE_esu_30"."Score_7", "Score_Union_CTE_esu_30"."Score_8", "Score_Union_CTE_esu_30"."Score_9" 
FROM (SELECT "GB_Tree_24_0"."KEY" AS "KEY", "GB_Tree_24_0"."Score_0" AS "Score_0", "GB_Tree_24_0"."Score_1" AS "Score_1", "GB_Tree_24_0"."Score_2" AS "Score_2", "GB_Tree_24_0"."Score_3" AS "Score_3", "GB_Tree_24_0"."Score_4" AS "Score_4", "GB_Tree_24_0"."Score_5" AS "Score_5", "GB_Tree_24_0"."Score_6" AS "Score_6", "GB_Tree_24_0"."Score_7" AS "Score_7", "GB_Tree_24_0"."Score_8" AS "Score_8", "GB_Tree_24_0"."Score_9" AS "Score_9" 
FROM "GB_Tree_24_0" UNION ALL SELECT "GB_Tree_24_1"."KEY" AS "KEY", "GB_Tree_24_1"."Score_0" AS "Score_0", "GB_Tree_24_1"."Score_1" AS "Score_1", "GB_Tree_24_1"."Score_2" AS "Score_2", "GB_Tree_24_1"."Score_3" AS "Score_3", "GB_Tree_24_1"."Score_4" AS "Score_4", "GB_Tree_24_1"."Score_5" AS "Score_5", "GB_Tree_24_1"."Score_6" AS "Score_6", "GB_Tree_24_1"."Score_7" AS "Score_7", "GB_Tree_24_1"."Score_8" AS "Score_8", "GB_Tree_24_1"."Score_9" AS "Score_9" 
FROM "GB_Tree_24_1" UNION ALL SELECT "GB_Tree_24_2"."KEY" AS "KEY", "GB_Tree_24_2"."Score_0" AS "Score_0", "GB_Tree_24_2"."Score_1" AS "Score_1", "GB_Tree_24_2"."Score_2" AS "Score_2", "GB_Tree_24_2"."Score_3" AS "Score_3", "GB_Tree_24_2"."Score_4" AS "Score_4", "GB_Tree_24_2"."Score_5" AS "Score_5", "GB_Tree_24_2"."Score_6" AS "Score_6", "GB_Tree_24_2"."Score_7" AS "Score_7", "GB_Tree_24_2"."Score_8" AS "Score_8", "GB_Tree_24_2"."Score_9" AS "Score_9" 
FROM "GB_Tree_24_2" UNION ALL SELECT "GB_Tree_24_3"."KEY" AS "KEY", "GB_Tree_24_3"."Score_0" AS "Score_0", "GB_Tree_24_3"."Score_1" AS "Score_1", "GB_Tree_24_3"."Score_2" AS "Score_2", "GB_Tree_24_3"."Score_3" AS "Score_3", "GB_Tree_24_3"."Score_4" AS "Score_4", "GB_Tree_24_3"."Score_5" AS "Score_5", "GB_Tree_24_3"."Score_6" AS "Score_6", "GB_Tree_24_3"."Score_7" AS "Score_7", "GB_Tree_24_3"."Score_8" AS "Score_8", "GB_Tree_24_3"."Score_9" AS "Score_9" 
FROM "GB_Tree_24_3" UNION ALL SELECT "GB_Tree_24_4"."KEY" AS "KEY", "GB_Tree_24_4"."Score_0" AS "Score_0", "GB_Tree_24_4"."Score_1" AS "Score_1", "GB_Tree_24_4"."Score_2" AS "Score_2", "GB_Tree_24_4"."Score_3" AS "Score_3", "GB_Tree_24_4"."Score_4" AS "Score_4", "GB_Tree_24_4"."Score_5" AS "Score_5", "GB_Tree_24_4"."Score_6" AS "Score_6", "GB_Tree_24_4"."Score_7" AS "Score_7", "GB_Tree_24_4"."Score_8" AS "Score_8", "GB_Tree_24_4"."Score_9" AS "Score_9" 
FROM "GB_Tree_24_4" UNION ALL SELECT "GB_Tree_24_5"."KEY" AS "KEY", "GB_Tree_24_5"."Score_0" AS "Score_0", "GB_Tree_24_5"."Score_1" AS "Score_1", "GB_Tree_24_5"."Score_2" AS "Score_2", "GB_Tree_24_5"."Score_3" AS "Score_3", "GB_Tree_24_5"."Score_4" AS "Score_4", "GB_Tree_24_5"."Score_5" AS "Score_5", "GB_Tree_24_5"."Score_6" AS "Score_6", "GB_Tree_24_5"."Score_7" AS "Score_7", "GB_Tree_24_5"."Score_8" AS "Score_8", "GB_Tree_24_5"."Score_9" AS "Score_9" 
FROM "GB_Tree_24_5" UNION ALL SELECT "GB_Tree_24_6"."KEY" AS "KEY", "GB_Tree_24_6"."Score_0" AS "Score_0", "GB_Tree_24_6"."Score_1" AS "Score_1", "GB_Tree_24_6"."Score_2" AS "Score_2", "GB_Tree_24_6"."Score_3" AS "Score_3", "GB_Tree_24_6"."Score_4" AS "Score_4", "GB_Tree_24_6"."Score_5" AS "Score_5", "GB_Tree_24_6"."Score_6" AS "Score_6", "GB_Tree_24_6"."Score_7" AS "Score_7", "GB_Tree_24_6"."Score_8" AS "Score_8", "GB_Tree_24_6"."Score_9" AS "Score_9" 
FROM "GB_Tree_24_6" UNION ALL SELECT "GB_Tree_24_7"."KEY" AS "KEY", "GB_Tree_24_7"."Score_0" AS "Score_0", "GB_Tree_24_7"."Score_1" AS "Score_1", "GB_Tree_24_7"."Score_2" AS "Score_2", "GB_Tree_24_7"."Score_3" AS "Score_3", "GB_Tree_24_7"."Score_4" AS "Score_4", "GB_Tree_24_7"."Score_5" AS "Score_5", "GB_Tree_24_7"."Score_6" AS "Score_6", "GB_Tree_24_7"."Score_7" AS "Score_7", "GB_Tree_24_7"."Score_8" AS "Score_8", "GB_Tree_24_7"."Score_9" AS "Score_9" 
FROM "GB_Tree_24_7") AS "Score_Union_CTE_esu_30"), 
"Score_Union_CTE_31" AS 
(WITH "DT_node_lookup_248" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_50" <= 3.5) THEN CASE WHEN ("ADS"."Feature_54" <= 1.5) THEN CASE WHEN ("ADS"."Feature_37" <= 2.5) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_22" <= 3.5) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_27" <= 13.5) THEN CASE WHEN ("ADS"."Feature_22" <= 0.5) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_42" <= 1.5) THEN 13 ELSE 14 END END END AS node_id_2 
FROM digits AS "ADS"), 
"DT_node_data_248" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 41 AS count, 3 AS depth, 2 AS parent_id, -1.049275801232545 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 300 AS count, 3 AS depth, 2 AS parent_id, -0.7497896598089443 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 104 AS count, 3 AS depth, 5 AS parent_id, -0.2749841237574992 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 20 AS count, 3 AS depth, 5 AS parent_id, 0.8786541783748602 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 427 AS count, 3 AS depth, 9 AS parent_id, -0.3981602528837527 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 222 AS count, 3 AS depth, 9 AS parent_id, 0.2733226179808724 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 105 AS count, 3 AS depth, 12 AS parent_id, -0.7074290293601789 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 218 AS count, 3 AS depth, 12 AS parent_id, 0.5352980379683469 AS "Estimator") AS "Values"), 
"DT_Output_248" AS 
(SELECT "DT_node_lookup_248"."KEY" AS "KEY", "DT_node_lookup_248".node_id_2 AS node_id_2, "DT_node_data_248".node_id AS node_id, "DT_node_data_248".feature AS feature, "DT_node_data_248".threshold AS threshold, "DT_node_data_248".count AS count, "DT_node_data_248".depth AS depth, "DT_node_data_248".parent_id AS parent_id, "DT_node_data_248"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_248" LEFT OUTER JOIN "DT_node_data_248" ON "DT_node_lookup_248".node_id_2 = "DT_node_data_248".node_id), 
"GB_Tree_24_8" AS 
(SELECT "DT_Output_248"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3", 0.0 AS "Score_4", 0.0 AS "Score_5", 0.0 AS "Score_6", 0.0 AS "Score_7", "DT_Output_248"."Estimator" AS "Score_8", 0.0 AS "Score_9" 
FROM "DT_Output_248"), 
"DT_node_lookup_249" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_43" <= 6.5) THEN CASE WHEN ("ADS"."Feature_21" <= 8.5) THEN CASE WHEN ("ADS"."Feature_54" <= 13.5) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_27" <= 10.5) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_17" <= 14.5) THEN CASE WHEN ("ADS"."Feature_60" <= 1.5) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_19" <= 14.0) THEN 13 ELSE 14 END END END AS node_id_2 
FROM digits AS "ADS"), 
"DT_node_data_249" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 257 AS count, 3 AS depth, 2 AS parent_id, -0.8628090762524909 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 19 AS count, 3 AS depth, 2 AS parent_id, 0.7052252311583223 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 239 AS count, 3 AS depth, 5 AS parent_id, -0.008333914583269148 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 183 AS count, 3 AS depth, 5 AS parent_id, 0.737881379635333 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 94 AS count, 3 AS depth, 9 AS parent_id, 0.059218424862538886 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 638 AS count, 3 AS depth, 9 AS parent_id, -0.9256586747814373 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 6 AS count, 3 AS depth, 12 AS parent_id, -0.9301015930648199 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 12 AS parent_id, 1.7093663023331007 AS "Estimator") AS "Values"), 
"DT_Output_249" AS 
(SELECT "DT_node_lookup_249"."KEY" AS "KEY", "DT_node_lookup_249".node_id_2 AS node_id_2, "DT_node_data_249".node_id AS node_id, "DT_node_data_249".feature AS feature, "DT_node_data_249".threshold AS threshold, "DT_node_data_249".count AS count, "DT_node_data_249".depth AS depth, "DT_node_data_249".parent_id AS parent_id, "DT_node_data_249"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_249" LEFT OUTER JOIN "DT_node_data_249" ON "DT_node_lookup_249".node_id_2 = "DT_node_data_249".node_id), 
"GB_Tree_24_9" AS 
(SELECT "DT_Output_249"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3", 0.0 AS "Score_4", 0.0 AS "Score_5", 0.0 AS "Score_6", 0.0 AS "Score_7", 0.0 AS "Score_8", "DT_Output_249"."Estimator" AS "Score_9" 
FROM "DT_Output_249"), 
"DT_node_lookup_250" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_36" <= 0.5) THEN CASE WHEN ("ADS"."Feature_33" <= 0.5) THEN CASE WHEN ("ADS"."Feature_59" <= 4.5) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_14" <= 7.5) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_42" <= 13.5) THEN CASE WHEN ("ADS"."Feature_58" <= 9.5) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_29" <= 14.5) THEN 13 ELSE 14 END END END AS node_id_2 
FROM digits AS "ADS"), 
"DT_node_data_250" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 3 AS depth, 2 AS parent_id, -0.9683162895933065 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 64 AS count, 3 AS depth, 2 AS parent_id, -0.7720546679479836 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 149 AS count, 3 AS depth, 5 AS parent_id, 0.7187615667143179 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS count, 3 AS depth, 5 AS parent_id, 1.319023219943831 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 619 AS count, 3 AS depth, 9 AS parent_id, -0.8660732042748157 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 296 AS count, 3 AS depth, 9 AS parent_id, -0.9072631020088225 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 270 AS count, 3 AS depth, 12 AS parent_id, -0.9082309806235699 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 33 AS count, 3 AS depth, 12 AS parent_id, 0.5289808493590156 AS "Estimator") AS "Values"), 
"DT_Output_250" AS 
(SELECT "DT_node_lookup_250"."KEY" AS "KEY", "DT_node_lookup_250".node_id_2 AS node_id_2, "DT_node_data_250".node_id AS node_id, "DT_node_data_250".feature AS feature, "DT_node_data_250".threshold AS threshold, "DT_node_data_250".count AS count, "DT_node_data_250".depth AS depth, "DT_node_data_250".parent_id AS parent_id, "DT_node_data_250"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_250" LEFT OUTER JOIN "DT_node_data_250" ON "DT_node_lookup_250".node_id_2 = "DT_node_data_250".node_id), 
"GB_Tree_25_0" AS 
(SELECT "DT_Output_250"."KEY" AS "KEY", "DT_Output_250"."Estimator" AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3", 0.0 AS "Score_4", 0.0 AS "Score_5", 0.0 AS "Score_6", 0.0 AS "Score_7", 0.0 AS "Score_8", 0.0 AS "Score_9" 
FROM "DT_Output_250"), 
"DT_node_lookup_251" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_27" <= 15.5) THEN CASE WHEN ("ADS"."Feature_59" <= 0.5) THEN CASE WHEN ("ADS"."Feature_17" <= 2.5) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_19" <= 15.5) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_51" <= 15.5) THEN CASE WHEN ("ADS"."Feature_63" <= 1.5) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_26" <= 1.5) THEN 13 ELSE 14 END END END AS node_id_2 
FROM digits AS "ADS"), 
"DT_node_data_251" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 33 AS count, 3 AS depth, 2 AS parent_id, 0.0034324710420484362 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 8 AS count, 3 AS depth, 2 AS parent_id, 1.3086449789444647 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1038 AS count, 3 AS depth, 5 AS parent_id, -0.5338967170813081 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 62 AS count, 3 AS depth, 5 AS parent_id, -0.5759841841299614 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 194 AS count, 3 AS depth, 9 AS parent_id, -0.3599771880937429 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 19 AS count, 3 AS depth, 9 AS parent_id, 1.0597358858598935 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS count, 3 AS depth, 12 AS parent_id, 1.3632224083637297 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 79 AS count, 3 AS depth, 12 AS parent_id, 0.8702125938298283 AS "Estimator") AS "Values"), 
"DT_Output_251" AS 
(SELECT "DT_node_lookup_251"."KEY" AS "KEY", "DT_node_lookup_251".node_id_2 AS node_id_2, "DT_node_data_251".node_id AS node_id, "DT_node_data_251".feature AS feature, "DT_node_data_251".threshold AS threshold, "DT_node_data_251".count AS count, "DT_node_data_251".depth AS depth, "DT_node_data_251".parent_id AS parent_id, "DT_node_data_251"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_251" LEFT OUTER JOIN "DT_node_data_251" ON "DT_node_lookup_251".node_id_2 = "DT_node_data_251".node_id), 
"GB_Tree_25_1" AS 
(SELECT "DT_Output_251"."KEY" AS "KEY", 0.0 AS "Score_0", "DT_Output_251"."Estimator" AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3", 0.0 AS "Score_4", 0.0 AS "Score_5", 0.0 AS "Score_6", 0.0 AS "Score_7", 0.0 AS "Score_8", 0.0 AS "Score_9" 
FROM "DT_Output_251"), 
"DT_node_lookup_252" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_45" <= 6.5) THEN CASE WHEN ("ADS"."Feature_54" <= 0.5) THEN CASE WHEN ("ADS"."Feature_61" <= 15.5) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_38" <= 0.5) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_63" <= 2.5) THEN CASE WHEN ("ADS"."Feature_33" <= 1.5) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_29" <= 8.0) THEN 13 ELSE 14 END END END AS node_id_2 
FROM digits AS "ADS"), 
"DT_node_data_252" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 329 AS count, 3 AS depth, 2 AS parent_id, -0.5521363254757118 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 3 AS depth, 2 AS parent_id, 1.259210426134033 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 137 AS count, 3 AS depth, 5 AS parent_id, 0.8770313725017229 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 73 AS count, 3 AS depth, 5 AS parent_id, -0.9149443019424647 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 481 AS count, 3 AS depth, 9 AS parent_id, -0.7478475274247035 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 393 AS count, 3 AS depth, 9 AS parent_id, -0.9127377509175372 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 15 AS count, 3 AS depth, 12 AS parent_id, -0.5449356237941553 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 6 AS count, 3 AS depth, 12 AS parent_id, 1.0751770158298697 AS "Estimator") AS "Values"), 
"DT_Output_252" AS 
(SELECT "DT_node_lookup_252"."KEY" AS "KEY", "DT_node_lookup_252".node_id_2 AS node_id_2, "DT_node_data_252".node_id AS node_id, "DT_node_data_252".feature AS feature, "DT_node_data_252".threshold AS threshold, "DT_node_data_252".count AS count, "DT_node_data_252".depth AS depth, "DT_node_data_252".parent_id AS parent_id, "DT_node_data_252"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_252" LEFT OUTER JOIN "DT_node_data_252" ON "DT_node_lookup_252".node_id_2 = "DT_node_data_252".node_id), 
"GB_Tree_25_2" AS 
(SELECT "DT_Output_252"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", "DT_Output_252"."Estimator" AS "Score_2", 0.0 AS "Score_3", 0.0 AS "Score_4", 0.0 AS "Score_5", 0.0 AS "Score_6", 0.0 AS "Score_7", 0.0 AS "Score_8", 0.0 AS "Score_9" 
FROM "DT_Output_252"), 
"DT_node_lookup_253" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_43" <= 4.5) THEN CASE WHEN ("ADS"."Feature_26" <= 7.5) THEN CASE WHEN ("ADS"."Feature_19" <= 10.5) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_12" <= 15.5) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_51" <= 7.5) THEN CASE WHEN ("ADS"."Feature_4" <= 15.5) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_11" <= 7.5) THEN 13 ELSE 14 END END END AS node_id_2 
FROM digits AS "ADS"), 
"DT_node_data_253" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 186 AS count, 3 AS depth, 2 AS parent_id, 0.7827237266810048 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 48 AS count, 3 AS depth, 2 AS parent_id, -0.6029096281860614 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 343 AS count, 3 AS depth, 5 AS parent_id, -0.933998470566661 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 55 AS count, 3 AS depth, 5 AS parent_id, 1.0159693673530432 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 106 AS count, 3 AS depth, 9 AS parent_id, -0.9309124124329481 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 37 AS count, 3 AS depth, 9 AS parent_id, 1.1207865400357324 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 34 AS count, 3 AS depth, 12 AS parent_id, 0.24401199473368462 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 628 AS count, 3 AS depth, 12 AS parent_id, -0.9282995547707601 AS "Estimator") AS "Values"), 
"DT_Output_253" AS 
(SELECT "DT_node_lookup_253"."KEY" AS "KEY", "DT_node_lookup_253".node_id_2 AS node_id_2, "DT_node_data_253".node_id AS node_id, "DT_node_data_253".feature AS feature, "DT_node_data_253".threshold AS threshold, "DT_node_data_253".count AS count, "DT_node_data_253".depth AS depth, "DT_node_data_253".parent_id AS parent_id, "DT_node_data_253"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_253" LEFT OUTER JOIN "DT_node_data_253" ON "DT_node_lookup_253".node_id_2 = "DT_node_data_253".node_id), 
"GB_Tree_25_3" AS 
(SELECT "DT_Output_253"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", "DT_Output_253"."Estimator" AS "Score_3", 0.0 AS "Score_4", 0.0 AS "Score_5", 0.0 AS "Score_6", 0.0 AS "Score_7", 0.0 AS "Score_8", 0.0 AS "Score_9" 
FROM "DT_Output_253"), 
"DT_node_lookup_254" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_30" <= 8.5) THEN CASE WHEN ("ADS"."Feature_41" <= 5.5) THEN CASE WHEN ("ADS"."Feature_5" <= 0.5) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_19" <= 13.5) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_29" <= 4.0) THEN 9 ELSE CASE WHEN ("ADS"."Feature_4" <= 8.5) THEN 11 ELSE 12 END END END AS node_id_2 
FROM digits AS "ADS"), 
"DT_node_data_254" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 311 AS count, 3 AS depth, 2 AS parent_id, 0.2568062933110861 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 890 AS count, 3 AS depth, 2 AS parent_id, -0.7433233027858576 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 82 AS count, 3 AS depth, 5 AS parent_id, 0.2822842727913241 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 30 AS count, 3 AS depth, 5 AS parent_id, 1.0464307228139276 AS "Estimator" UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 2 AS depth, 8 AS parent_id, 1.481557635251046 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 20 AS count, 3 AS depth, 10 AS parent_id, 1.0618981668827563 AS "Estimator" UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 103 AS count, 3 AS depth, 10 AS parent_id, 0.5148157222919778 AS "Estimator") AS "Values"), 
"DT_Output_254" AS 
(SELECT "DT_node_lookup_254"."KEY" AS "KEY", "DT_node_lookup_254".node_id_2 AS node_id_2, "DT_node_data_254".node_id AS node_id, "DT_node_data_254".feature AS feature, "DT_node_data_254".threshold AS threshold, "DT_node_data_254".count AS count, "DT_node_data_254".depth AS depth, "DT_node_data_254".parent_id AS parent_id, "DT_node_data_254"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_254" LEFT OUTER JOIN "DT_node_data_254" ON "DT_node_lookup_254".node_id_2 = "DT_node_data_254".node_id), 
"GB_Tree_25_4" AS 
(SELECT "DT_Output_254"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3", "DT_Output_254"."Estimator" AS "Score_4", 0.0 AS "Score_5", 0.0 AS "Score_6", 0.0 AS "Score_7", 0.0 AS "Score_8", 0.0 AS "Score_9" 
FROM "DT_Output_254"), 
"DT_node_lookup_255" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_21" <= 3.5) THEN CASE WHEN ("ADS"."Feature_5" <= 8.5) THEN CASE WHEN ("ADS"."Feature_42" <= 0.5) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_38" <= 10.5) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_36" <= 0.5) THEN CASE WHEN ("ADS"."Feature_6" <= 1.5) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_1" <= 5.0) THEN 13 ELSE 14 END END END AS node_id_2 
FROM digits AS "ADS"), 
"DT_node_data_255" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 79 AS count, 3 AS depth, 2 AS parent_id, 0.40245744085618473 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 298 AS count, 3 AS depth, 2 AS parent_id, -0.6837980698567556 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 126 AS count, 3 AS depth, 5 AS parent_id, 0.8159898327505138 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 5 AS parent_id, 1.4044208808322667 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 176 AS count, 3 AS depth, 9 AS parent_id, -0.9179287064820782 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 13 AS count, 3 AS depth, 9 AS parent_id, 1.0934935316638805 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 741 AS count, 3 AS depth, 12 AS parent_id, -0.9152177239944572 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 3 AS depth, 12 AS parent_id, 0.7013538548759461 AS "Estimator") AS "Values"), 
"DT_Output_255" AS 
(SELECT "DT_node_lookup_255"."KEY" AS "KEY", "DT_node_lookup_255".node_id_2 AS node_id_2, "DT_node_data_255".node_id AS node_id, "DT_node_data_255".feature AS feature, "DT_node_data_255".threshold AS threshold, "DT_node_data_255".count AS count, "DT_node_data_255".depth AS depth, "DT_node_data_255".parent_id AS parent_id, "DT_node_data_255"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_255" LEFT OUTER JOIN "DT_node_data_255" ON "DT_node_lookup_255".node_id_2 = "DT_node_data_255".node_id), 
"GB_Tree_25_5" AS 
(SELECT "DT_Output_255"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3", 0.0 AS "Score_4", "DT_Output_255"."Estimator" AS "Score_5", 0.0 AS "Score_6", 0.0 AS "Score_7", 0.0 AS "Score_8", 0.0 AS "Score_9" 
FROM "DT_Output_255")
 SELECT "Score_Union_CTE_esu_31"."KEY", "Score_Union_CTE_esu_31"."Score_0", "Score_Union_CTE_esu_31"."Score_1", "Score_Union_CTE_esu_31"."Score_2", "Score_Union_CTE_esu_31"."Score_3", "Score_Union_CTE_esu_31"."Score_4", "Score_Union_CTE_esu_31"."Score_5", "Score_Union_CTE_esu_31"."Score_6", "Score_Union_CTE_esu_31"."Score_7", "Score_Union_CTE_esu_31"."Score_8", "Score_Union_CTE_esu_31"."Score_9" 
FROM (SELECT "GB_Tree_24_8"."KEY" AS "KEY", "GB_Tree_24_8"."Score_0" AS "Score_0", "GB_Tree_24_8"."Score_1" AS "Score_1", "GB_Tree_24_8"."Score_2" AS "Score_2", "GB_Tree_24_8"."Score_3" AS "Score_3", "GB_Tree_24_8"."Score_4" AS "Score_4", "GB_Tree_24_8"."Score_5" AS "Score_5", "GB_Tree_24_8"."Score_6" AS "Score_6", "GB_Tree_24_8"."Score_7" AS "Score_7", "GB_Tree_24_8"."Score_8" AS "Score_8", "GB_Tree_24_8"."Score_9" AS "Score_9" 
FROM "GB_Tree_24_8" UNION ALL SELECT "GB_Tree_24_9"."KEY" AS "KEY", "GB_Tree_24_9"."Score_0" AS "Score_0", "GB_Tree_24_9"."Score_1" AS "Score_1", "GB_Tree_24_9"."Score_2" AS "Score_2", "GB_Tree_24_9"."Score_3" AS "Score_3", "GB_Tree_24_9"."Score_4" AS "Score_4", "GB_Tree_24_9"."Score_5" AS "Score_5", "GB_Tree_24_9"."Score_6" AS "Score_6", "GB_Tree_24_9"."Score_7" AS "Score_7", "GB_Tree_24_9"."Score_8" AS "Score_8", "GB_Tree_24_9"."Score_9" AS "Score_9" 
FROM "GB_Tree_24_9" UNION ALL SELECT "GB_Tree_25_0"."KEY" AS "KEY", "GB_Tree_25_0"."Score_0" AS "Score_0", "GB_Tree_25_0"."Score_1" AS "Score_1", "GB_Tree_25_0"."Score_2" AS "Score_2", "GB_Tree_25_0"."Score_3" AS "Score_3", "GB_Tree_25_0"."Score_4" AS "Score_4", "GB_Tree_25_0"."Score_5" AS "Score_5", "GB_Tree_25_0"."Score_6" AS "Score_6", "GB_Tree_25_0"."Score_7" AS "Score_7", "GB_Tree_25_0"."Score_8" AS "Score_8", "GB_Tree_25_0"."Score_9" AS "Score_9" 
FROM "GB_Tree_25_0" UNION ALL SELECT "GB_Tree_25_1"."KEY" AS "KEY", "GB_Tree_25_1"."Score_0" AS "Score_0", "GB_Tree_25_1"."Score_1" AS "Score_1", "GB_Tree_25_1"."Score_2" AS "Score_2", "GB_Tree_25_1"."Score_3" AS "Score_3", "GB_Tree_25_1"."Score_4" AS "Score_4", "GB_Tree_25_1"."Score_5" AS "Score_5", "GB_Tree_25_1"."Score_6" AS "Score_6", "GB_Tree_25_1"."Score_7" AS "Score_7", "GB_Tree_25_1"."Score_8" AS "Score_8", "GB_Tree_25_1"."Score_9" AS "Score_9" 
FROM "GB_Tree_25_1" UNION ALL SELECT "GB_Tree_25_2"."KEY" AS "KEY", "GB_Tree_25_2"."Score_0" AS "Score_0", "GB_Tree_25_2"."Score_1" AS "Score_1", "GB_Tree_25_2"."Score_2" AS "Score_2", "GB_Tree_25_2"."Score_3" AS "Score_3", "GB_Tree_25_2"."Score_4" AS "Score_4", "GB_Tree_25_2"."Score_5" AS "Score_5", "GB_Tree_25_2"."Score_6" AS "Score_6", "GB_Tree_25_2"."Score_7" AS "Score_7", "GB_Tree_25_2"."Score_8" AS "Score_8", "GB_Tree_25_2"."Score_9" AS "Score_9" 
FROM "GB_Tree_25_2" UNION ALL SELECT "GB_Tree_25_3"."KEY" AS "KEY", "GB_Tree_25_3"."Score_0" AS "Score_0", "GB_Tree_25_3"."Score_1" AS "Score_1", "GB_Tree_25_3"."Score_2" AS "Score_2", "GB_Tree_25_3"."Score_3" AS "Score_3", "GB_Tree_25_3"."Score_4" AS "Score_4", "GB_Tree_25_3"."Score_5" AS "Score_5", "GB_Tree_25_3"."Score_6" AS "Score_6", "GB_Tree_25_3"."Score_7" AS "Score_7", "GB_Tree_25_3"."Score_8" AS "Score_8", "GB_Tree_25_3"."Score_9" AS "Score_9" 
FROM "GB_Tree_25_3" UNION ALL SELECT "GB_Tree_25_4"."KEY" AS "KEY", "GB_Tree_25_4"."Score_0" AS "Score_0", "GB_Tree_25_4"."Score_1" AS "Score_1", "GB_Tree_25_4"."Score_2" AS "Score_2", "GB_Tree_25_4"."Score_3" AS "Score_3", "GB_Tree_25_4"."Score_4" AS "Score_4", "GB_Tree_25_4"."Score_5" AS "Score_5", "GB_Tree_25_4"."Score_6" AS "Score_6", "GB_Tree_25_4"."Score_7" AS "Score_7", "GB_Tree_25_4"."Score_8" AS "Score_8", "GB_Tree_25_4"."Score_9" AS "Score_9" 
FROM "GB_Tree_25_4" UNION ALL SELECT "GB_Tree_25_5"."KEY" AS "KEY", "GB_Tree_25_5"."Score_0" AS "Score_0", "GB_Tree_25_5"."Score_1" AS "Score_1", "GB_Tree_25_5"."Score_2" AS "Score_2", "GB_Tree_25_5"."Score_3" AS "Score_3", "GB_Tree_25_5"."Score_4" AS "Score_4", "GB_Tree_25_5"."Score_5" AS "Score_5", "GB_Tree_25_5"."Score_6" AS "Score_6", "GB_Tree_25_5"."Score_7" AS "Score_7", "GB_Tree_25_5"."Score_8" AS "Score_8", "GB_Tree_25_5"."Score_9" AS "Score_9" 
FROM "GB_Tree_25_5") AS "Score_Union_CTE_esu_31"), 
"Score_Union_CTE_32" AS 
(WITH "DT_node_lookup_256" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_28" <= 5.5) THEN CASE WHEN ("ADS"."Feature_29" <= 2.5) THEN CASE WHEN ("ADS"."Feature_59" <= 2.5) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_21" <= 0.5) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_46" <= 11.5) THEN CASE WHEN ("ADS"."Feature_29" <= 0.5) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_43" <= 2.5) THEN 13 ELSE 14 END END END AS node_id_2 
FROM digits AS "ADS"), 
"DT_node_data_256" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 2 AS parent_id, 1.7026837983396377 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 161 AS count, 3 AS depth, 2 AS parent_id, 0.8476694771590004 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 22 AS count, 3 AS depth, 5 AS parent_id, -0.7147635143362654 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 214 AS count, 3 AS depth, 5 AS parent_id, -0.9091989158693375 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 141 AS count, 3 AS depth, 9 AS parent_id, -0.9539201561687637 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 830 AS count, 3 AS depth, 9 AS parent_id, -0.5345457440185609 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 45 AS count, 3 AS depth, 12 AS parent_id, -0.8031093331614468 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 23 AS count, 3 AS depth, 12 AS parent_id, 0.9605495469346161 AS "Estimator") AS "Values"), 
"DT_Output_256" AS 
(SELECT "DT_node_lookup_256"."KEY" AS "KEY", "DT_node_lookup_256".node_id_2 AS node_id_2, "DT_node_data_256".node_id AS node_id, "DT_node_data_256".feature AS feature, "DT_node_data_256".threshold AS threshold, "DT_node_data_256".count AS count, "DT_node_data_256".depth AS depth, "DT_node_data_256".parent_id AS parent_id, "DT_node_data_256"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_256" LEFT OUTER JOIN "DT_node_data_256" ON "DT_node_lookup_256".node_id_2 = "DT_node_data_256".node_id), 
"GB_Tree_25_6" AS 
(SELECT "DT_Output_256"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3", 0.0 AS "Score_4", 0.0 AS "Score_5", "DT_Output_256"."Estimator" AS "Score_6", 0.0 AS "Score_7", 0.0 AS "Score_8", 0.0 AS "Score_9" 
FROM "DT_Output_256"), 
"DT_node_lookup_257" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_61" <= 0.5) THEN CASE WHEN ("ADS"."Feature_26" <= 9.5) THEN CASE WHEN ("ADS"."Feature_38" <= 0.5) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_18" <= 5.0) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_33" <= 7.5) THEN CASE WHEN ("ADS"."Feature_22" <= 13.5) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_14" <= 10.0) THEN 13 ELSE 14 END END END AS node_id_2 
FROM digits AS "ADS"), 
"DT_node_data_257" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 60 AS count, 3 AS depth, 2 AS parent_id, -0.05894664174755544 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 112 AS count, 3 AS depth, 2 AS parent_id, 1.0523988778635194 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 12 AS count, 3 AS depth, 5 AS parent_id, 0.7852405472716896 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 206 AS count, 3 AS depth, 5 AS parent_id, -0.3360144313273976 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 945 AS count, 3 AS depth, 9 AS parent_id, -0.8924335685783817 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 6 AS count, 3 AS depth, 9 AS parent_id, -1.028005347737688 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 95 AS count, 3 AS depth, 12 AS parent_id, -0.9072770034781726 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 12 AS parent_id, 2.851629126399298 AS "Estimator") AS "Values"), 
"DT_Output_257" AS 
(SELECT "DT_node_lookup_257"."KEY" AS "KEY", "DT_node_lookup_257".node_id_2 AS node_id_2, "DT_node_data_257".node_id AS node_id, "DT_node_data_257".feature AS feature, "DT_node_data_257".threshold AS threshold, "DT_node_data_257".count AS count, "DT_node_data_257".depth AS depth, "DT_node_data_257".parent_id AS parent_id, "DT_node_data_257"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_257" LEFT OUTER JOIN "DT_node_data_257" ON "DT_node_lookup_257".node_id_2 = "DT_node_data_257".node_id), 
"GB_Tree_25_7" AS 
(SELECT "DT_Output_257"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3", 0.0 AS "Score_4", 0.0 AS "Score_5", 0.0 AS "Score_6", "DT_Output_257"."Estimator" AS "Score_7", 0.0 AS "Score_8", 0.0 AS "Score_9" 
FROM "DT_Output_257"), 
"DT_node_lookup_258" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_50" <= 3.5) THEN CASE WHEN ("ADS"."Feature_60" <= 12.5) THEN CASE WHEN ("ADS"."Feature_38" <= 0.5) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_18" <= 10.5) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_27" <= 12.5) THEN CASE WHEN ("ADS"."Feature_12" <= 5.5) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_21" <= 1.5) THEN 13 ELSE 14 END END END AS node_id_2 
FROM digits AS "ADS"), 
"DT_node_data_258" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 82 AS count, 3 AS depth, 2 AS parent_id, -0.9961459773592052 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 159 AS count, 3 AS depth, 2 AS parent_id, -0.9282582661002977 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 110 AS count, 3 AS depth, 5 AS parent_id, -0.9823315463212923 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 114 AS count, 3 AS depth, 5 AS parent_id, 0.5037013915810153 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 124 AS count, 3 AS depth, 9 AS parent_id, 0.3766362449806553 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 476 AS count, 3 AS depth, 9 AS parent_id, -0.41380675642340065 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 130 AS count, 3 AS depth, 12 AS parent_id, -0.4542745192089986 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 242 AS count, 3 AS depth, 12 AS parent_id, 0.5142821797248014 AS "Estimator") AS "Values"), 
"DT_Output_258" AS 
(SELECT "DT_node_lookup_258"."KEY" AS "KEY", "DT_node_lookup_258".node_id_2 AS node_id_2, "DT_node_data_258".node_id AS node_id, "DT_node_data_258".feature AS feature, "DT_node_data_258".threshold AS threshold, "DT_node_data_258".count AS count, "DT_node_data_258".depth AS depth, "DT_node_data_258".parent_id AS parent_id, "DT_node_data_258"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_258" LEFT OUTER JOIN "DT_node_data_258" ON "DT_node_lookup_258".node_id_2 = "DT_node_data_258".node_id), 
"GB_Tree_25_8" AS 
(SELECT "DT_Output_258"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3", 0.0 AS "Score_4", 0.0 AS "Score_5", 0.0 AS "Score_6", 0.0 AS "Score_7", "DT_Output_258"."Estimator" AS "Score_8", 0.0 AS "Score_9" 
FROM "DT_Output_258"), 
"DT_node_lookup_259" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_44" <= 1.5) THEN CASE WHEN ("ADS"."Feature_22" <= 10.5) THEN CASE WHEN ("ADS"."Feature_29" <= 9.5) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_35" <= 8.0) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_60" <= 4.5) THEN CASE WHEN ("ADS"."Feature_34" <= 2.5) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_13" <= 15.5) THEN 13 ELSE 14 END END END AS node_id_2 
FROM digits AS "ADS"), 
"DT_node_data_259" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 233 AS count, 3 AS depth, 2 AS parent_id, -0.3274132329864959 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 187 AS count, 3 AS depth, 2 AS parent_id, 0.66351895849276 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 5 AS parent_id, 1.2156005508587873 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 5 AS parent_id, 1.58384737158011 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 47 AS count, 3 AS depth, 9 AS parent_id, 1.0735586227348515 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 117 AS count, 3 AS depth, 9 AS parent_id, -0.6938286788136788 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 731 AS count, 3 AS depth, 12 AS parent_id, -0.290589906761889 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 120 AS count, 3 AS depth, 12 AS parent_id, -0.6325323963452436 AS "Estimator") AS "Values"), 
"DT_Output_259" AS 
(SELECT "DT_node_lookup_259"."KEY" AS "KEY", "DT_node_lookup_259".node_id_2 AS node_id_2, "DT_node_data_259".node_id AS node_id, "DT_node_data_259".feature AS feature, "DT_node_data_259".threshold AS threshold, "DT_node_data_259".count AS count, "DT_node_data_259".depth AS depth, "DT_node_data_259".parent_id AS parent_id, "DT_node_data_259"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_259" LEFT OUTER JOIN "DT_node_data_259" ON "DT_node_lookup_259".node_id_2 = "DT_node_data_259".node_id), 
"GB_Tree_25_9" AS 
(SELECT "DT_Output_259"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3", 0.0 AS "Score_4", 0.0 AS "Score_5", 0.0 AS "Score_6", 0.0 AS "Score_7", 0.0 AS "Score_8", "DT_Output_259"."Estimator" AS "Score_9" 
FROM "DT_Output_259"), 
"DT_node_lookup_260" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_28" <= 0.5) THEN CASE WHEN ("ADS"."Feature_13" <= 4.5) THEN CASE WHEN ("ADS"."Feature_21" <= 10.0) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_42" <= 3.0) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_28" <= 4.5) THEN CASE WHEN ("ADS"."Feature_12" <= 15.5) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_18" <= 6.5) THEN 13 ELSE 14 END END END AS node_id_2 
FROM digits AS "ADS"), 
"DT_node_data_260" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 98 AS count, 3 AS depth, 2 AS parent_id, -0.9243336208364533 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS count, 3 AS depth, 2 AS parent_id, 0.9174054036707774 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 14 AS count, 3 AS depth, 5 AS parent_id, -0.9329839962020429 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 129 AS count, 3 AS depth, 5 AS parent_id, 0.8635206132476461 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 113 AS count, 3 AS depth, 9 AS parent_id, -0.46229216041830556 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 7 AS count, 3 AS depth, 9 AS parent_id, 0.9368770907133156 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 374 AS count, 3 AS depth, 12 AS parent_id, -0.9059827427168895 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 697 AS count, 3 AS depth, 12 AS parent_id, -0.9136383226557782 AS "Estimator") AS "Values"), 
"DT_Output_260" AS 
(SELECT "DT_node_lookup_260"."KEY" AS "KEY", "DT_node_lookup_260".node_id_2 AS node_id_2, "DT_node_data_260".node_id AS node_id, "DT_node_data_260".feature AS feature, "DT_node_data_260".threshold AS threshold, "DT_node_data_260".count AS count, "DT_node_data_260".depth AS depth, "DT_node_data_260".parent_id AS parent_id, "DT_node_data_260"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_260" LEFT OUTER JOIN "DT_node_data_260" ON "DT_node_lookup_260".node_id_2 = "DT_node_data_260".node_id), 
"GB_Tree_26_0" AS 
(SELECT "DT_Output_260"."KEY" AS "KEY", "DT_Output_260"."Estimator" AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3", 0.0 AS "Score_4", 0.0 AS "Score_5", 0.0 AS "Score_6", 0.0 AS "Score_7", 0.0 AS "Score_8", 0.0 AS "Score_9" 
FROM "DT_Output_260"), 
"DT_node_lookup_261" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_20" <= 15.5) THEN CASE WHEN ("ADS"."Feature_63" <= 4.5) THEN CASE WHEN ("ADS"."Feature_59" <= 0.5) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_19" <= 13.0) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_44" <= 9.5) THEN CASE WHEN ("ADS"."Feature_12" <= 8.5) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_21" <= 11.5) THEN 13 ELSE 14 END END END AS node_id_2 
FROM digits AS "ADS"), 
"DT_node_data_261" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 37 AS count, 3 AS depth, 2 AS parent_id, 0.31711328565230557 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1116 AS count, 3 AS depth, 2 AS parent_id, -0.5295403036273902 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 24 AS count, 3 AS depth, 5 AS parent_id, -0.9074964166021304 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 20 AS count, 3 AS depth, 5 AS parent_id, 1.0329988529951148 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 9 AS parent_id, -1.253541265228162 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 96 AS count, 3 AS depth, 9 AS parent_id, -0.3936567655605704 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 98 AS count, 3 AS depth, 12 AS parent_id, 0.49245423172377245 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 45 AS count, 3 AS depth, 12 AS parent_id, 0.987670510161967 AS "Estimator") AS "Values"), 
"DT_Output_261" AS 
(SELECT "DT_node_lookup_261"."KEY" AS "KEY", "DT_node_lookup_261".node_id_2 AS node_id_2, "DT_node_data_261".node_id AS node_id, "DT_node_data_261".feature AS feature, "DT_node_data_261".threshold AS threshold, "DT_node_data_261".count AS count, "DT_node_data_261".depth AS depth, "DT_node_data_261".parent_id AS parent_id, "DT_node_data_261"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_261" LEFT OUTER JOIN "DT_node_data_261" ON "DT_node_lookup_261".node_id_2 = "DT_node_data_261".node_id), 
"GB_Tree_26_1" AS 
(SELECT "DT_Output_261"."KEY" AS "KEY", 0.0 AS "Score_0", "DT_Output_261"."Estimator" AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3", 0.0 AS "Score_4", 0.0 AS "Score_5", 0.0 AS "Score_6", 0.0 AS "Score_7", 0.0 AS "Score_8", 0.0 AS "Score_9" 
FROM "DT_Output_261"), 
"DT_node_lookup_262" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_26" <= 6.5) THEN CASE WHEN ("ADS"."Feature_51" <= 13.5) THEN CASE WHEN ("ADS"."Feature_49" <= 3.5) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_53" <= 3.5) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_63" <= 3.5) THEN CASE WHEN ("ADS"."Feature_33" <= 1.5) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_19" <= 13.5) THEN 13 ELSE 14 END END END AS node_id_2 
FROM digits AS "ADS"), 
"DT_node_data_262" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 296 AS count, 3 AS depth, 2 AS parent_id, -0.41612663998592103 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 39 AS count, 3 AS depth, 2 AS parent_id, 0.8530370965359066 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 75 AS count, 3 AS depth, 5 AS parent_id, -0.5237189769388974 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 116 AS count, 3 AS depth, 5 AS parent_id, 0.9082625824961051 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 407 AS count, 3 AS depth, 9 AS parent_id, -0.754019534708622 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 484 AS count, 3 AS depth, 9 AS parent_id, -0.9096973278425773 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 8 AS count, 3 AS depth, 12 AS parent_id, 1.0163107931008188 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 12 AS count, 3 AS depth, 12 AS parent_id, -0.9454488591659186 AS "Estimator") AS "Values"), 
"DT_Output_262" AS 
(SELECT "DT_node_lookup_262"."KEY" AS "KEY", "DT_node_lookup_262".node_id_2 AS node_id_2, "DT_node_data_262".node_id AS node_id, "DT_node_data_262".feature AS feature, "DT_node_data_262".threshold AS threshold, "DT_node_data_262".count AS count, "DT_node_data_262".depth AS depth, "DT_node_data_262".parent_id AS parent_id, "DT_node_data_262"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_262" LEFT OUTER JOIN "DT_node_data_262" ON "DT_node_lookup_262".node_id_2 = "DT_node_data_262".node_id), 
"GB_Tree_26_2" AS 
(SELECT "DT_Output_262"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", "DT_Output_262"."Estimator" AS "Score_2", 0.0 AS "Score_3", 0.0 AS "Score_4", 0.0 AS "Score_5", 0.0 AS "Score_6", 0.0 AS "Score_7", 0.0 AS "Score_8", 0.0 AS "Score_9" 
FROM "DT_Output_262"), 
"DT_node_lookup_263" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_26" <= 0.5) THEN CASE WHEN ("ADS"."Feature_43" <= 4.5) THEN CASE WHEN ("ADS"."Feature_60" <= 3.0) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_13" <= 14.5) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_29" <= 10.5) THEN CASE WHEN ("ADS"."Feature_42" <= 1.5) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_54" <= 5.5) THEN 13 ELSE 14 END END END AS node_id_2 
FROM digits AS "ADS"), 
"DT_node_data_263" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 2 AS parent_id, 1.618559283872478 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 112 AS count, 3 AS depth, 2 AS parent_id, 0.688954909625445 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 110 AS count, 3 AS depth, 5 AS parent_id, -0.8682580179551439 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 40 AS count, 3 AS depth, 5 AS parent_id, 0.7164513841569212 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 218 AS count, 3 AS depth, 9 AS parent_id, 0.5690295156753222 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 505 AS count, 3 AS depth, 9 AS parent_id, -0.4832402192870552 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 364 AS count, 3 AS depth, 12 AS parent_id, -0.8728446086636361 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 87 AS count, 3 AS depth, 12 AS parent_id, -0.9530001038228404 AS "Estimator") AS "Values"), 
"DT_Output_263" AS 
(SELECT "DT_node_lookup_263"."KEY" AS "KEY", "DT_node_lookup_263".node_id_2 AS node_id_2, "DT_node_data_263".node_id AS node_id, "DT_node_data_263".feature AS feature, "DT_node_data_263".threshold AS threshold, "DT_node_data_263".count AS count, "DT_node_data_263".depth AS depth, "DT_node_data_263".parent_id AS parent_id, "DT_node_data_263"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_263" LEFT OUTER JOIN "DT_node_data_263" ON "DT_node_lookup_263".node_id_2 = "DT_node_data_263".node_id), 
"GB_Tree_26_3" AS 
(SELECT "DT_Output_263"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", "DT_Output_263"."Estimator" AS "Score_3", 0.0 AS "Score_4", 0.0 AS "Score_5", 0.0 AS "Score_6", 0.0 AS "Score_7", 0.0 AS "Score_8", 0.0 AS "Score_9" 
FROM "DT_Output_263")
 SELECT "Score_Union_CTE_esu_32"."KEY", "Score_Union_CTE_esu_32"."Score_0", "Score_Union_CTE_esu_32"."Score_1", "Score_Union_CTE_esu_32"."Score_2", "Score_Union_CTE_esu_32"."Score_3", "Score_Union_CTE_esu_32"."Score_4", "Score_Union_CTE_esu_32"."Score_5", "Score_Union_CTE_esu_32"."Score_6", "Score_Union_CTE_esu_32"."Score_7", "Score_Union_CTE_esu_32"."Score_8", "Score_Union_CTE_esu_32"."Score_9" 
FROM (SELECT "GB_Tree_25_6"."KEY" AS "KEY", "GB_Tree_25_6"."Score_0" AS "Score_0", "GB_Tree_25_6"."Score_1" AS "Score_1", "GB_Tree_25_6"."Score_2" AS "Score_2", "GB_Tree_25_6"."Score_3" AS "Score_3", "GB_Tree_25_6"."Score_4" AS "Score_4", "GB_Tree_25_6"."Score_5" AS "Score_5", "GB_Tree_25_6"."Score_6" AS "Score_6", "GB_Tree_25_6"."Score_7" AS "Score_7", "GB_Tree_25_6"."Score_8" AS "Score_8", "GB_Tree_25_6"."Score_9" AS "Score_9" 
FROM "GB_Tree_25_6" UNION ALL SELECT "GB_Tree_25_7"."KEY" AS "KEY", "GB_Tree_25_7"."Score_0" AS "Score_0", "GB_Tree_25_7"."Score_1" AS "Score_1", "GB_Tree_25_7"."Score_2" AS "Score_2", "GB_Tree_25_7"."Score_3" AS "Score_3", "GB_Tree_25_7"."Score_4" AS "Score_4", "GB_Tree_25_7"."Score_5" AS "Score_5", "GB_Tree_25_7"."Score_6" AS "Score_6", "GB_Tree_25_7"."Score_7" AS "Score_7", "GB_Tree_25_7"."Score_8" AS "Score_8", "GB_Tree_25_7"."Score_9" AS "Score_9" 
FROM "GB_Tree_25_7" UNION ALL SELECT "GB_Tree_25_8"."KEY" AS "KEY", "GB_Tree_25_8"."Score_0" AS "Score_0", "GB_Tree_25_8"."Score_1" AS "Score_1", "GB_Tree_25_8"."Score_2" AS "Score_2", "GB_Tree_25_8"."Score_3" AS "Score_3", "GB_Tree_25_8"."Score_4" AS "Score_4", "GB_Tree_25_8"."Score_5" AS "Score_5", "GB_Tree_25_8"."Score_6" AS "Score_6", "GB_Tree_25_8"."Score_7" AS "Score_7", "GB_Tree_25_8"."Score_8" AS "Score_8", "GB_Tree_25_8"."Score_9" AS "Score_9" 
FROM "GB_Tree_25_8" UNION ALL SELECT "GB_Tree_25_9"."KEY" AS "KEY", "GB_Tree_25_9"."Score_0" AS "Score_0", "GB_Tree_25_9"."Score_1" AS "Score_1", "GB_Tree_25_9"."Score_2" AS "Score_2", "GB_Tree_25_9"."Score_3" AS "Score_3", "GB_Tree_25_9"."Score_4" AS "Score_4", "GB_Tree_25_9"."Score_5" AS "Score_5", "GB_Tree_25_9"."Score_6" AS "Score_6", "GB_Tree_25_9"."Score_7" AS "Score_7", "GB_Tree_25_9"."Score_8" AS "Score_8", "GB_Tree_25_9"."Score_9" AS "Score_9" 
FROM "GB_Tree_25_9" UNION ALL SELECT "GB_Tree_26_0"."KEY" AS "KEY", "GB_Tree_26_0"."Score_0" AS "Score_0", "GB_Tree_26_0"."Score_1" AS "Score_1", "GB_Tree_26_0"."Score_2" AS "Score_2", "GB_Tree_26_0"."Score_3" AS "Score_3", "GB_Tree_26_0"."Score_4" AS "Score_4", "GB_Tree_26_0"."Score_5" AS "Score_5", "GB_Tree_26_0"."Score_6" AS "Score_6", "GB_Tree_26_0"."Score_7" AS "Score_7", "GB_Tree_26_0"."Score_8" AS "Score_8", "GB_Tree_26_0"."Score_9" AS "Score_9" 
FROM "GB_Tree_26_0" UNION ALL SELECT "GB_Tree_26_1"."KEY" AS "KEY", "GB_Tree_26_1"."Score_0" AS "Score_0", "GB_Tree_26_1"."Score_1" AS "Score_1", "GB_Tree_26_1"."Score_2" AS "Score_2", "GB_Tree_26_1"."Score_3" AS "Score_3", "GB_Tree_26_1"."Score_4" AS "Score_4", "GB_Tree_26_1"."Score_5" AS "Score_5", "GB_Tree_26_1"."Score_6" AS "Score_6", "GB_Tree_26_1"."Score_7" AS "Score_7", "GB_Tree_26_1"."Score_8" AS "Score_8", "GB_Tree_26_1"."Score_9" AS "Score_9" 
FROM "GB_Tree_26_1" UNION ALL SELECT "GB_Tree_26_2"."KEY" AS "KEY", "GB_Tree_26_2"."Score_0" AS "Score_0", "GB_Tree_26_2"."Score_1" AS "Score_1", "GB_Tree_26_2"."Score_2" AS "Score_2", "GB_Tree_26_2"."Score_3" AS "Score_3", "GB_Tree_26_2"."Score_4" AS "Score_4", "GB_Tree_26_2"."Score_5" AS "Score_5", "GB_Tree_26_2"."Score_6" AS "Score_6", "GB_Tree_26_2"."Score_7" AS "Score_7", "GB_Tree_26_2"."Score_8" AS "Score_8", "GB_Tree_26_2"."Score_9" AS "Score_9" 
FROM "GB_Tree_26_2" UNION ALL SELECT "GB_Tree_26_3"."KEY" AS "KEY", "GB_Tree_26_3"."Score_0" AS "Score_0", "GB_Tree_26_3"."Score_1" AS "Score_1", "GB_Tree_26_3"."Score_2" AS "Score_2", "GB_Tree_26_3"."Score_3" AS "Score_3", "GB_Tree_26_3"."Score_4" AS "Score_4", "GB_Tree_26_3"."Score_5" AS "Score_5", "GB_Tree_26_3"."Score_6" AS "Score_6", "GB_Tree_26_3"."Score_7" AS "Score_7", "GB_Tree_26_3"."Score_8" AS "Score_8", "GB_Tree_26_3"."Score_9" AS "Score_9" 
FROM "GB_Tree_26_3") AS "Score_Union_CTE_esu_32"), 
"Score_Union_CTE_33" AS 
(WITH "DT_node_lookup_264" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_33" <= 1.5) THEN CASE WHEN ("ADS"."Feature_4" <= 0.5) THEN CASE WHEN ("ADS"."Feature_53" <= 1.5) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_49" <= 10.5) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_50" <= 0.5) THEN CASE WHEN ("ADS"."Feature_5" <= 11.5) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_3" <= 5.5) THEN 13 ELSE 14 END END END AS node_id_2 
FROM digits AS "ADS"), 
"DT_node_data_264" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 3 AS depth, 2 AS parent_id, 1.6866284077500504 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 18 AS count, 3 AS depth, 2 AS parent_id, -0.9093224314730507 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 887 AS count, 3 AS depth, 5 AS parent_id, -0.8204922415772062 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS count, 3 AS depth, 5 AS parent_id, 1.0553133077224242 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 102 AS count, 3 AS depth, 9 AS parent_id, 0.9245427914508023 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 40 AS count, 3 AS depth, 9 AS parent_id, -0.7737875998521486 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 25 AS count, 3 AS depth, 12 AS parent_id, 1.0015889783226153 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 358 AS count, 3 AS depth, 12 AS parent_id, -0.34527546189304026 AS "Estimator") AS "Values"), 
"DT_Output_264" AS 
(SELECT "DT_node_lookup_264"."KEY" AS "KEY", "DT_node_lookup_264".node_id_2 AS node_id_2, "DT_node_data_264".node_id AS node_id, "DT_node_data_264".feature AS feature, "DT_node_data_264".threshold AS threshold, "DT_node_data_264".count AS count, "DT_node_data_264".depth AS depth, "DT_node_data_264".parent_id AS parent_id, "DT_node_data_264"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_264" LEFT OUTER JOIN "DT_node_data_264" ON "DT_node_lookup_264".node_id_2 = "DT_node_data_264".node_id), 
"GB_Tree_26_4" AS 
(SELECT "DT_Output_264"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3", "DT_Output_264"."Estimator" AS "Score_4", 0.0 AS "Score_5", 0.0 AS "Score_6", 0.0 AS "Score_7", 0.0 AS "Score_8", 0.0 AS "Score_9" 
FROM "DT_Output_264"), 
"DT_node_lookup_265" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_20" <= 9.5) THEN CASE WHEN ("ADS"."Feature_2" <= 4.5) THEN CASE WHEN ("ADS"."Feature_17" <= 15.5) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_21" <= 8.5) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_28" <= 2.5) THEN CASE WHEN ("ADS"."Feature_54" <= 6.5) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_21" <= 0.5) THEN 13 ELSE 14 END END END AS node_id_2 
FROM digits AS "ADS"), 
"DT_node_data_265" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 528 AS count, 3 AS depth, 2 AS parent_id, -0.48436646102257724 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 2 AS parent_id, 1.0839068722946616 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 174 AS count, 3 AS depth, 5 AS parent_id, 0.9255657912896388 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 159 AS count, 3 AS depth, 5 AS parent_id, -0.5119370709744064 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 11 AS count, 3 AS depth, 9 AS parent_id, -0.9165105196890461 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 3 AS depth, 9 AS parent_id, -1.3341794338574642 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 71 AS count, 3 AS depth, 12 AS parent_id, -0.8408094461348871 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 491 AS count, 3 AS depth, 12 AS parent_id, -0.7334289795173166 AS "Estimator") AS "Values"), 
"DT_Output_265" AS 
(SELECT "DT_node_lookup_265"."KEY" AS "KEY", "DT_node_lookup_265".node_id_2 AS node_id_2, "DT_node_data_265".node_id AS node_id, "DT_node_data_265".feature AS feature, "DT_node_data_265".threshold AS threshold, "DT_node_data_265".count AS count, "DT_node_data_265".depth AS depth, "DT_node_data_265".parent_id AS parent_id, "DT_node_data_265"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_265" LEFT OUTER JOIN "DT_node_data_265" ON "DT_node_lookup_265".node_id_2 = "DT_node_data_265".node_id), 
"GB_Tree_26_5" AS 
(SELECT "DT_Output_265"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3", 0.0 AS "Score_4", "DT_Output_265"."Estimator" AS "Score_5", 0.0 AS "Score_6", 0.0 AS "Score_7", 0.0 AS "Score_8", 0.0 AS "Score_9" 
FROM "DT_Output_265"), 
"DT_node_lookup_266" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_34" <= 13.5) THEN CASE WHEN ("ADS"."Feature_59" <= 7.5) THEN CASE WHEN ("ADS"."Feature_5" <= 1.5) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_28" <= 0.5) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_61" <= 7.5) THEN CASE WHEN ("ADS"."Feature_4" <= 0.5) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_20" <= 8.5) THEN 13 ELSE 14 END END END AS node_id_2 
FROM digits AS "ADS"), 
"DT_node_data_266" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 15 AS count, 3 AS depth, 2 AS parent_id, 1.15495417162986 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 94 AS count, 3 AS depth, 2 AS parent_id, -0.8482474617889391 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 120 AS count, 3 AS depth, 5 AS parent_id, -0.036312966881333314 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 809 AS count, 3 AS depth, 5 AS parent_id, -0.8773259777023863 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 9 AS parent_id, 1.2166697770349717 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 246 AS count, 3 AS depth, 9 AS parent_id, -0.3873695329923059 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 133 AS count, 3 AS depth, 12 AS parent_id, 0.9436107971988347 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 19 AS count, 3 AS depth, 12 AS parent_id, -1.001109018378262 AS "Estimator") AS "Values"), 
"DT_Output_266" AS 
(SELECT "DT_node_lookup_266"."KEY" AS "KEY", "DT_node_lookup_266".node_id_2 AS node_id_2, "DT_node_data_266".node_id AS node_id, "DT_node_data_266".feature AS feature, "DT_node_data_266".threshold AS threshold, "DT_node_data_266".count AS count, "DT_node_data_266".depth AS depth, "DT_node_data_266".parent_id AS parent_id, "DT_node_data_266"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_266" LEFT OUTER JOIN "DT_node_data_266" ON "DT_node_lookup_266".node_id_2 = "DT_node_data_266".node_id), 
"GB_Tree_26_6" AS 
(SELECT "DT_Output_266"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3", 0.0 AS "Score_4", 0.0 AS "Score_5", "DT_Output_266"."Estimator" AS "Score_6", 0.0 AS "Score_7", 0.0 AS "Score_8", 0.0 AS "Score_9" 
FROM "DT_Output_266"), 
"DT_node_lookup_267" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_60" <= 0.5) THEN CASE WHEN ("ADS"."Feature_51" <= 9.5) THEN CASE WHEN ("ADS"."Feature_33" <= 0.5) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_17" <= 1.5) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_7" <= 1.5) THEN CASE WHEN ("ADS"."Feature_38" <= 4.5) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_27" <= 7.5) THEN 13 ELSE 14 END END END AS node_id_2 
FROM digits AS "ADS"), 
"DT_node_data_267" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 3 AS depth, 2 AS parent_id, 1.3764427469818228 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 7 AS count, 3 AS depth, 2 AS parent_id, 1.0166073184116577 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 53 AS count, 3 AS depth, 5 AS parent_id, 0.903611410279291 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 24 AS count, 3 AS depth, 5 AS parent_id, -0.39242171256049874 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 913 AS count, 3 AS depth, 9 AS parent_id, -0.6505729178405167 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 414 AS count, 3 AS depth, 9 AS parent_id, 0.4344841602773328 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 14 AS count, 3 AS depth, 12 AS parent_id, 1.0164042432304115 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 10 AS count, 3 AS depth, 12 AS parent_id, -0.1320367234344587 AS "Estimator") AS "Values"), 
"DT_Output_267" AS 
(SELECT "DT_node_lookup_267"."KEY" AS "KEY", "DT_node_lookup_267".node_id_2 AS node_id_2, "DT_node_data_267".node_id AS node_id, "DT_node_data_267".feature AS feature, "DT_node_data_267".threshold AS threshold, "DT_node_data_267".count AS count, "DT_node_data_267".depth AS depth, "DT_node_data_267".parent_id AS parent_id, "DT_node_data_267"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_267" LEFT OUTER JOIN "DT_node_data_267" ON "DT_node_lookup_267".node_id_2 = "DT_node_data_267".node_id), 
"GB_Tree_26_7" AS 
(SELECT "DT_Output_267"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3", 0.0 AS "Score_4", 0.0 AS "Score_5", 0.0 AS "Score_6", "DT_Output_267"."Estimator" AS "Score_7", 0.0 AS "Score_8", 0.0 AS "Score_9" 
FROM "DT_Output_267"), 
"DT_node_lookup_268" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_35" <= 5.5) THEN CASE WHEN ("ADS"."Feature_38" <= 0.5) THEN CASE WHEN ("ADS"."Feature_42" <= 9.5) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_36" <= 14.5) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_13" <= 8.5) THEN CASE WHEN ("ADS"."Feature_16" <= 0.5) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_12" <= 6.5) THEN 13 ELSE 14 END END END AS node_id_2 
FROM digits AS "ADS"), 
"DT_node_data_268" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 143 AS count, 3 AS depth, 2 AS parent_id, -0.9451350148859701 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 12 AS count, 3 AS depth, 2 AS parent_id, -1.291359546245158 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 322 AS count, 3 AS depth, 5 AS parent_id, -0.9155016914455275 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 13 AS count, 3 AS depth, 5 AS parent_id, 0.353303203020321 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 530 AS count, 3 AS depth, 9 AS parent_id, -0.2618150082746684 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 9 AS parent_id, 1.192709815727057 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 55 AS count, 3 AS depth, 12 AS parent_id, 0.8852692049191511 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 361 AS count, 3 AS depth, 12 AS parent_id, 0.1487330462313568 AS "Estimator") AS "Values"), 
"DT_Output_268" AS 
(SELECT "DT_node_lookup_268"."KEY" AS "KEY", "DT_node_lookup_268".node_id_2 AS node_id_2, "DT_node_data_268".node_id AS node_id, "DT_node_data_268".feature AS feature, "DT_node_data_268".threshold AS threshold, "DT_node_data_268".count AS count, "DT_node_data_268".depth AS depth, "DT_node_data_268".parent_id AS parent_id, "DT_node_data_268"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_268" LEFT OUTER JOIN "DT_node_data_268" ON "DT_node_lookup_268".node_id_2 = "DT_node_data_268".node_id), 
"GB_Tree_26_8" AS 
(SELECT "DT_Output_268"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3", 0.0 AS "Score_4", 0.0 AS "Score_5", 0.0 AS "Score_6", 0.0 AS "Score_7", "DT_Output_268"."Estimator" AS "Score_8", 0.0 AS "Score_9" 
FROM "DT_Output_268"), 
"DT_node_lookup_269" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_43" <= 4.5) THEN CASE WHEN ("ADS"."Feature_21" <= 8.5) THEN CASE WHEN ("ADS"."Feature_54" <= 13.5) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_27" <= 7.5) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_60" <= 1.5) THEN CASE WHEN ("ADS"."Feature_17" <= 6.5) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_38" <= 13.0) THEN 13 ELSE 14 END END END AS node_id_2 
FROM digits AS "ADS"), 
"DT_node_data_269" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 233 AS count, 3 AS depth, 2 AS parent_id, -0.8458072999719394 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 15 AS count, 3 AS depth, 2 AS parent_id, 0.6761221426185029 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 173 AS count, 3 AS depth, 5 AS parent_id, -0.20716911756196402 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 211 AS count, 3 AS depth, 5 AS parent_id, 0.6445883611219572 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 84 AS count, 3 AS depth, 9 AS parent_id, -0.9538418110371804 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 15 AS count, 3 AS depth, 9 AS parent_id, 1.075182161948577 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 703 AS count, 3 AS depth, 12 AS parent_id, -0.9224309169031839 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 3 AS depth, 12 AS parent_id, 0.8678630819194069 AS "Estimator") AS "Values"), 
"DT_Output_269" AS 
(SELECT "DT_node_lookup_269"."KEY" AS "KEY", "DT_node_lookup_269".node_id_2 AS node_id_2, "DT_node_data_269".node_id AS node_id, "DT_node_data_269".feature AS feature, "DT_node_data_269".threshold AS threshold, "DT_node_data_269".count AS count, "DT_node_data_269".depth AS depth, "DT_node_data_269".parent_id AS parent_id, "DT_node_data_269"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_269" LEFT OUTER JOIN "DT_node_data_269" ON "DT_node_lookup_269".node_id_2 = "DT_node_data_269".node_id), 
"GB_Tree_26_9" AS 
(SELECT "DT_Output_269"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3", 0.0 AS "Score_4", 0.0 AS "Score_5", 0.0 AS "Score_6", 0.0 AS "Score_7", 0.0 AS "Score_8", "DT_Output_269"."Estimator" AS "Score_9" 
FROM "DT_Output_269"), 
"DT_node_lookup_270" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_28" <= 0.5) THEN CASE WHEN ("ADS"."Feature_13" <= 4.5) THEN CASE WHEN ("ADS"."Feature_21" <= 10.0) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_42" <= 6.0) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_28" <= 4.5) THEN CASE WHEN ("ADS"."Feature_12" <= 15.5) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_18" <= 6.5) THEN 13 ELSE 14 END END END AS node_id_2 
FROM digits AS "ADS"), 
"DT_node_data_270" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 98 AS count, 3 AS depth, 2 AS parent_id, -0.9206821822418254 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS count, 3 AS depth, 2 AS parent_id, 0.9103364079796955 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 18 AS count, 3 AS depth, 5 AS parent_id, -0.43322481653862216 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 125 AS count, 3 AS depth, 5 AS parent_id, 0.8759521413833385 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 113 AS count, 3 AS depth, 9 AS parent_id, -0.4312805720973277 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 7 AS count, 3 AS depth, 9 AS parent_id, 0.9133067516865415 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 374 AS count, 3 AS depth, 12 AS parent_id, -0.9053587253069436 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 697 AS count, 3 AS depth, 12 AS parent_id, -0.9124782786948081 AS "Estimator") AS "Values"), 
"DT_Output_270" AS 
(SELECT "DT_node_lookup_270"."KEY" AS "KEY", "DT_node_lookup_270".node_id_2 AS node_id_2, "DT_node_data_270".node_id AS node_id, "DT_node_data_270".feature AS feature, "DT_node_data_270".threshold AS threshold, "DT_node_data_270".count AS count, "DT_node_data_270".depth AS depth, "DT_node_data_270".parent_id AS parent_id, "DT_node_data_270"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_270" LEFT OUTER JOIN "DT_node_data_270" ON "DT_node_lookup_270".node_id_2 = "DT_node_data_270".node_id), 
"GB_Tree_27_0" AS 
(SELECT "DT_Output_270"."KEY" AS "KEY", "DT_Output_270"."Estimator" AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3", 0.0 AS "Score_4", 0.0 AS "Score_5", 0.0 AS "Score_6", 0.0 AS "Score_7", 0.0 AS "Score_8", 0.0 AS "Score_9" 
FROM "DT_Output_270"), 
"DT_node_lookup_271" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_10" <= 5.5) THEN CASE WHEN ("ADS"."Feature_20" <= 12.5) THEN CASE WHEN ("ADS"."Feature_4" <= 3.5) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_41" <= 3.5) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_3" <= 1.5) THEN 9 ELSE CASE WHEN ("ADS"."Feature_52" <= 15.5) THEN 11 ELSE 12 END END END AS node_id_2 
FROM digits AS "ADS"), 
"DT_node_data_271" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 8 AS count, 3 AS depth, 2 AS parent_id, 1.0099550689988555 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 202 AS count, 3 AS depth, 2 AS parent_id, -0.5034902867036448 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 93 AS count, 3 AS depth, 5 AS parent_id, 0.9978172232239108 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 20 AS count, 3 AS depth, 5 AS parent_id, -0.3528185686965063 AS "Estimator" UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 2 AS depth, 8 AS parent_id, 1.1899347804487441 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 964 AS count, 3 AS depth, 10 AS parent_id, -0.5615420474754328 AS "Estimator" UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 149 AS count, 3 AS depth, 10 AS parent_id, 0.3541289647721858 AS "Estimator") AS "Values"), 
"DT_Output_271" AS 
(SELECT "DT_node_lookup_271"."KEY" AS "KEY", "DT_node_lookup_271".node_id_2 AS node_id_2, "DT_node_data_271".node_id AS node_id, "DT_node_data_271".feature AS feature, "DT_node_data_271".threshold AS threshold, "DT_node_data_271".count AS count, "DT_node_data_271".depth AS depth, "DT_node_data_271".parent_id AS parent_id, "DT_node_data_271"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_271" LEFT OUTER JOIN "DT_node_data_271" ON "DT_node_lookup_271".node_id_2 = "DT_node_data_271".node_id), 
"GB_Tree_27_1" AS 
(SELECT "DT_Output_271"."KEY" AS "KEY", 0.0 AS "Score_0", "DT_Output_271"."Estimator" AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3", 0.0 AS "Score_4", 0.0 AS "Score_5", 0.0 AS "Score_6", 0.0 AS "Score_7", 0.0 AS "Score_8", 0.0 AS "Score_9" 
FROM "DT_Output_271")
 SELECT "Score_Union_CTE_esu_33"."KEY", "Score_Union_CTE_esu_33"."Score_0", "Score_Union_CTE_esu_33"."Score_1", "Score_Union_CTE_esu_33"."Score_2", "Score_Union_CTE_esu_33"."Score_3", "Score_Union_CTE_esu_33"."Score_4", "Score_Union_CTE_esu_33"."Score_5", "Score_Union_CTE_esu_33"."Score_6", "Score_Union_CTE_esu_33"."Score_7", "Score_Union_CTE_esu_33"."Score_8", "Score_Union_CTE_esu_33"."Score_9" 
FROM (SELECT "GB_Tree_26_4"."KEY" AS "KEY", "GB_Tree_26_4"."Score_0" AS "Score_0", "GB_Tree_26_4"."Score_1" AS "Score_1", "GB_Tree_26_4"."Score_2" AS "Score_2", "GB_Tree_26_4"."Score_3" AS "Score_3", "GB_Tree_26_4"."Score_4" AS "Score_4", "GB_Tree_26_4"."Score_5" AS "Score_5", "GB_Tree_26_4"."Score_6" AS "Score_6", "GB_Tree_26_4"."Score_7" AS "Score_7", "GB_Tree_26_4"."Score_8" AS "Score_8", "GB_Tree_26_4"."Score_9" AS "Score_9" 
FROM "GB_Tree_26_4" UNION ALL SELECT "GB_Tree_26_5"."KEY" AS "KEY", "GB_Tree_26_5"."Score_0" AS "Score_0", "GB_Tree_26_5"."Score_1" AS "Score_1", "GB_Tree_26_5"."Score_2" AS "Score_2", "GB_Tree_26_5"."Score_3" AS "Score_3", "GB_Tree_26_5"."Score_4" AS "Score_4", "GB_Tree_26_5"."Score_5" AS "Score_5", "GB_Tree_26_5"."Score_6" AS "Score_6", "GB_Tree_26_5"."Score_7" AS "Score_7", "GB_Tree_26_5"."Score_8" AS "Score_8", "GB_Tree_26_5"."Score_9" AS "Score_9" 
FROM "GB_Tree_26_5" UNION ALL SELECT "GB_Tree_26_6"."KEY" AS "KEY", "GB_Tree_26_6"."Score_0" AS "Score_0", "GB_Tree_26_6"."Score_1" AS "Score_1", "GB_Tree_26_6"."Score_2" AS "Score_2", "GB_Tree_26_6"."Score_3" AS "Score_3", "GB_Tree_26_6"."Score_4" AS "Score_4", "GB_Tree_26_6"."Score_5" AS "Score_5", "GB_Tree_26_6"."Score_6" AS "Score_6", "GB_Tree_26_6"."Score_7" AS "Score_7", "GB_Tree_26_6"."Score_8" AS "Score_8", "GB_Tree_26_6"."Score_9" AS "Score_9" 
FROM "GB_Tree_26_6" UNION ALL SELECT "GB_Tree_26_7"."KEY" AS "KEY", "GB_Tree_26_7"."Score_0" AS "Score_0", "GB_Tree_26_7"."Score_1" AS "Score_1", "GB_Tree_26_7"."Score_2" AS "Score_2", "GB_Tree_26_7"."Score_3" AS "Score_3", "GB_Tree_26_7"."Score_4" AS "Score_4", "GB_Tree_26_7"."Score_5" AS "Score_5", "GB_Tree_26_7"."Score_6" AS "Score_6", "GB_Tree_26_7"."Score_7" AS "Score_7", "GB_Tree_26_7"."Score_8" AS "Score_8", "GB_Tree_26_7"."Score_9" AS "Score_9" 
FROM "GB_Tree_26_7" UNION ALL SELECT "GB_Tree_26_8"."KEY" AS "KEY", "GB_Tree_26_8"."Score_0" AS "Score_0", "GB_Tree_26_8"."Score_1" AS "Score_1", "GB_Tree_26_8"."Score_2" AS "Score_2", "GB_Tree_26_8"."Score_3" AS "Score_3", "GB_Tree_26_8"."Score_4" AS "Score_4", "GB_Tree_26_8"."Score_5" AS "Score_5", "GB_Tree_26_8"."Score_6" AS "Score_6", "GB_Tree_26_8"."Score_7" AS "Score_7", "GB_Tree_26_8"."Score_8" AS "Score_8", "GB_Tree_26_8"."Score_9" AS "Score_9" 
FROM "GB_Tree_26_8" UNION ALL SELECT "GB_Tree_26_9"."KEY" AS "KEY", "GB_Tree_26_9"."Score_0" AS "Score_0", "GB_Tree_26_9"."Score_1" AS "Score_1", "GB_Tree_26_9"."Score_2" AS "Score_2", "GB_Tree_26_9"."Score_3" AS "Score_3", "GB_Tree_26_9"."Score_4" AS "Score_4", "GB_Tree_26_9"."Score_5" AS "Score_5", "GB_Tree_26_9"."Score_6" AS "Score_6", "GB_Tree_26_9"."Score_7" AS "Score_7", "GB_Tree_26_9"."Score_8" AS "Score_8", "GB_Tree_26_9"."Score_9" AS "Score_9" 
FROM "GB_Tree_26_9" UNION ALL SELECT "GB_Tree_27_0"."KEY" AS "KEY", "GB_Tree_27_0"."Score_0" AS "Score_0", "GB_Tree_27_0"."Score_1" AS "Score_1", "GB_Tree_27_0"."Score_2" AS "Score_2", "GB_Tree_27_0"."Score_3" AS "Score_3", "GB_Tree_27_0"."Score_4" AS "Score_4", "GB_Tree_27_0"."Score_5" AS "Score_5", "GB_Tree_27_0"."Score_6" AS "Score_6", "GB_Tree_27_0"."Score_7" AS "Score_7", "GB_Tree_27_0"."Score_8" AS "Score_8", "GB_Tree_27_0"."Score_9" AS "Score_9" 
FROM "GB_Tree_27_0" UNION ALL SELECT "GB_Tree_27_1"."KEY" AS "KEY", "GB_Tree_27_1"."Score_0" AS "Score_0", "GB_Tree_27_1"."Score_1" AS "Score_1", "GB_Tree_27_1"."Score_2" AS "Score_2", "GB_Tree_27_1"."Score_3" AS "Score_3", "GB_Tree_27_1"."Score_4" AS "Score_4", "GB_Tree_27_1"."Score_5" AS "Score_5", "GB_Tree_27_1"."Score_6" AS "Score_6", "GB_Tree_27_1"."Score_7" AS "Score_7", "GB_Tree_27_1"."Score_8" AS "Score_8", "GB_Tree_27_1"."Score_9" AS "Score_9" 
FROM "GB_Tree_27_1") AS "Score_Union_CTE_esu_33"), 
"Score_Union_CTE_34" AS 
(WITH "DT_node_lookup_272" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_26" <= 1.5) THEN CASE WHEN ("ADS"."Feature_61" <= 2.5) THEN CASE WHEN ("ADS"."Feature_27" <= 11.5) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_28" <= 3.5) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_2" <= 14.5) THEN CASE WHEN ("ADS"."Feature_55" <= 8.5) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_44" <= 0.5) THEN 13 ELSE 14 END END END AS node_id_2 
FROM digits AS "ADS"), 
"DT_node_data_272" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 73 AS count, 3 AS depth, 2 AS parent_id, -0.5456065991752231 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 18 AS count, 3 AS depth, 2 AS parent_id, -0.9787920831571689 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 6 AS count, 3 AS depth, 5 AS parent_id, 1.167382600453936 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 210 AS count, 3 AS depth, 5 AS parent_id, 0.6163500983827457 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1088 AS count, 3 AS depth, 9 AS parent_id, -0.4689967251124811 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 3 AS depth, 9 AS parent_id, -1.0673682552156507 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 8 AS count, 3 AS depth, 12 AS parent_id, 1.0837686170894782 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 32 AS count, 3 AS depth, 12 AS parent_id, 0.055995966005727225 AS "Estimator") AS "Values"), 
"DT_Output_272" AS 
(SELECT "DT_node_lookup_272"."KEY" AS "KEY", "DT_node_lookup_272".node_id_2 AS node_id_2, "DT_node_data_272".node_id AS node_id, "DT_node_data_272".feature AS feature, "DT_node_data_272".threshold AS threshold, "DT_node_data_272".count AS count, "DT_node_data_272".depth AS depth, "DT_node_data_272".parent_id AS parent_id, "DT_node_data_272"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_272" LEFT OUTER JOIN "DT_node_data_272" ON "DT_node_lookup_272".node_id_2 = "DT_node_data_272".node_id), 
"GB_Tree_27_2" AS 
(SELECT "DT_Output_272"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", "DT_Output_272"."Estimator" AS "Score_2", 0.0 AS "Score_3", 0.0 AS "Score_4", 0.0 AS "Score_5", 0.0 AS "Score_6", 0.0 AS "Score_7", 0.0 AS "Score_8", 0.0 AS "Score_9" 
FROM "DT_Output_272"), 
"DT_node_lookup_273" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_18" <= 10.5) THEN CASE WHEN ("ADS"."Feature_4" <= 15.5) THEN CASE WHEN ("ADS"."Feature_46" <= 6.5) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_29" <= 6.5) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_27" <= 9.5) THEN CASE WHEN ("ADS"."Feature_26" <= 6.5) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_21" <= 1.5) THEN 13 ELSE 14 END END END AS node_id_2 
FROM digits AS "ADS"), 
"DT_node_data_273" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 363 AS count, 3 AS depth, 2 AS parent_id, -0.48974741705298563 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 95 AS count, 3 AS depth, 2 AS parent_id, 0.5747603169813046 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 56 AS count, 3 AS depth, 5 AS parent_id, 1.1757610116100177 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 116 AS count, 3 AS depth, 5 AS parent_id, 0.2717278834738624 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 71 AS count, 3 AS depth, 9 AS parent_id, 0.6335805483732052 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 341 AS count, 3 AS depth, 9 AS parent_id, -0.9134469842611084 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 160 AS count, 3 AS depth, 12 AS parent_id, -0.24930310749837112 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 235 AS count, 3 AS depth, 12 AS parent_id, -0.9226131844302411 AS "Estimator") AS "Values"), 
"DT_Output_273" AS 
(SELECT "DT_node_lookup_273"."KEY" AS "KEY", "DT_node_lookup_273".node_id_2 AS node_id_2, "DT_node_data_273".node_id AS node_id, "DT_node_data_273".feature AS feature, "DT_node_data_273".threshold AS threshold, "DT_node_data_273".count AS count, "DT_node_data_273".depth AS depth, "DT_node_data_273".parent_id AS parent_id, "DT_node_data_273"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_273" LEFT OUTER JOIN "DT_node_data_273" ON "DT_node_lookup_273".node_id_2 = "DT_node_data_273".node_id), 
"GB_Tree_27_3" AS 
(SELECT "DT_Output_273"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", "DT_Output_273"."Estimator" AS "Score_3", 0.0 AS "Score_4", 0.0 AS "Score_5", 0.0 AS "Score_6", 0.0 AS "Score_7", 0.0 AS "Score_8", 0.0 AS "Score_9" 
FROM "DT_Output_273"), 
"DT_node_lookup_274" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_59" <= 4.5) THEN CASE WHEN ("ADS"."Feature_13" <= 7.5) THEN CASE WHEN ("ADS"."Feature_25" <= 9.0) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_38" <= 7.5) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_12" <= 3.5) THEN CASE WHEN ("ADS"."Feature_53" <= 0.5) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_24" <= 0.5) THEN 13 ELSE 14 END END END AS node_id_2 
FROM digits AS "ADS"), 
"DT_node_data_274" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 64 AS count, 3 AS depth, 2 AS parent_id, 0.8896977149637227 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 2 AS parent_id, 1.6089981218741742 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 68 AS count, 3 AS depth, 5 AS parent_id, -0.8769774910468181 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS count, 3 AS depth, 5 AS parent_id, 1.015606746500191 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 36 AS count, 3 AS depth, 9 AS parent_id, 1.1009366554877629 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 110 AS count, 3 AS depth, 9 AS parent_id, -0.2231666519095119 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1152 AS count, 3 AS depth, 12 AS parent_id, -0.4499930985138749 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 12 AS parent_id, 1.075018226376268 AS "Estimator") AS "Values"), 
"DT_Output_274" AS 
(SELECT "DT_node_lookup_274"."KEY" AS "KEY", "DT_node_lookup_274".node_id_2 AS node_id_2, "DT_node_data_274".node_id AS node_id, "DT_node_data_274".feature AS feature, "DT_node_data_274".threshold AS threshold, "DT_node_data_274".count AS count, "DT_node_data_274".depth AS depth, "DT_node_data_274".parent_id AS parent_id, "DT_node_data_274"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_274" LEFT OUTER JOIN "DT_node_data_274" ON "DT_node_lookup_274".node_id_2 = "DT_node_data_274".node_id), 
"GB_Tree_27_4" AS 
(SELECT "DT_Output_274"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3", "DT_Output_274"."Estimator" AS "Score_4", 0.0 AS "Score_5", 0.0 AS "Score_6", 0.0 AS "Score_7", 0.0 AS "Score_8", 0.0 AS "Score_9" 
FROM "DT_Output_274"), 
"DT_node_lookup_275" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_6" <= 1.5) THEN CASE WHEN ("ADS"."Feature_20" <= 8.5) THEN CASE WHEN ("ADS"."Feature_42" <= 1.5) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_21" <= 1.5) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_21" <= 8.5) THEN CASE WHEN ("ADS"."Feature_38" <= 10.5) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_13" <= 0.5) THEN 13 ELSE 14 END END END AS node_id_2 
FROM digits AS "ADS"), 
"DT_node_data_275" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 160 AS count, 3 AS depth, 2 AS parent_id, 0.5446062211340447 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 465 AS count, 3 AS depth, 2 AS parent_id, -0.6424698768898521 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 90 AS count, 3 AS depth, 5 AS parent_id, -0.9549271979528322 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 445 AS count, 3 AS depth, 5 AS parent_id, -0.9165178219930068 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 107 AS count, 3 AS depth, 9 AS parent_id, 0.8357081584654663 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 9 AS parent_id, 1.3293126761015785 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 12 AS parent_id, 1.361566661891983 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 168 AS count, 3 AS depth, 12 AS parent_id, -0.912860562047928 AS "Estimator") AS "Values"), 
"DT_Output_275" AS 
(SELECT "DT_node_lookup_275"."KEY" AS "KEY", "DT_node_lookup_275".node_id_2 AS node_id_2, "DT_node_data_275".node_id AS node_id, "DT_node_data_275".feature AS feature, "DT_node_data_275".threshold AS threshold, "DT_node_data_275".count AS count, "DT_node_data_275".depth AS depth, "DT_node_data_275".parent_id AS parent_id, "DT_node_data_275"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_275" LEFT OUTER JOIN "DT_node_data_275" ON "DT_node_lookup_275".node_id_2 = "DT_node_data_275".node_id), 
"GB_Tree_27_5" AS 
(SELECT "DT_Output_275"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3", 0.0 AS "Score_4", "DT_Output_275"."Estimator" AS "Score_5", 0.0 AS "Score_6", 0.0 AS "Score_7", 0.0 AS "Score_8", 0.0 AS "Score_9" 
FROM "DT_Output_275"), 
"DT_node_lookup_276" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_42" <= 14.5) THEN CASE WHEN ("ADS"."Feature_46" <= 12.5) THEN CASE WHEN ("ADS"."Feature_46" <= 7.5) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_10" <= 0.5) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_29" <= 0.5) THEN CASE WHEN ("ADS"."Feature_13" <= 15.0) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_4" <= 3.5) THEN 13 ELSE 14 END END END AS node_id_2 
FROM digits AS "ADS"), 
"DT_node_data_276" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 913 AS count, 3 AS depth, 2 AS parent_id, -0.7064597268003339 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 170 AS count, 3 AS depth, 2 AS parent_id, 0.12338859840220735 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 3 AS depth, 5 AS parent_id, 1.0610638026384003 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 37 AS count, 3 AS depth, 5 AS parent_id, 0.398159059295096 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 78 AS count, 3 AS depth, 9 AS parent_id, 0.6338905527837746 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 9 AS parent_id, 1.9381318440288833 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 17 AS count, 3 AS depth, 12 AS parent_id, 0.9734938935153868 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 218 AS count, 3 AS depth, 12 AS parent_id, -0.1197786364717643 AS "Estimator") AS "Values"), 
"DT_Output_276" AS 
(SELECT "DT_node_lookup_276"."KEY" AS "KEY", "DT_node_lookup_276".node_id_2 AS node_id_2, "DT_node_data_276".node_id AS node_id, "DT_node_data_276".feature AS feature, "DT_node_data_276".threshold AS threshold, "DT_node_data_276".count AS count, "DT_node_data_276".depth AS depth, "DT_node_data_276".parent_id AS parent_id, "DT_node_data_276"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_276" LEFT OUTER JOIN "DT_node_data_276" ON "DT_node_lookup_276".node_id_2 = "DT_node_data_276".node_id), 
"GB_Tree_27_6" AS 
(SELECT "DT_Output_276"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3", 0.0 AS "Score_4", 0.0 AS "Score_5", "DT_Output_276"."Estimator" AS "Score_6", 0.0 AS "Score_7", 0.0 AS "Score_8", 0.0 AS "Score_9" 
FROM "DT_Output_276"), 
"DT_node_lookup_277" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_61" <= 1.5) THEN CASE WHEN ("ADS"."Feature_26" <= 9.5) THEN CASE WHEN ("ADS"."Feature_34" <= 15.5) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_15" <= 2.5) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_14" <= 9.5) THEN CASE WHEN ("ADS"."Feature_42" <= 10.5) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_53" <= 5.5) THEN 13 ELSE 14 END END END AS node_id_2 
FROM digits AS "ADS"), 
"DT_node_data_277" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 174 AS count, 3 AS depth, 2 AS parent_id, 0.4972654769605929 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 25 AS count, 3 AS depth, 2 AS parent_id, 1.2803101514428046 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 248 AS count, 3 AS depth, 5 AS parent_id, -0.3502855789160173 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 14 AS count, 3 AS depth, 5 AS parent_id, 0.9204447591750395 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 547 AS count, 3 AS depth, 9 AS parent_id, -0.915594375676764 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 402 AS count, 3 AS depth, 9 AS parent_id, -0.9065192711234932 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 12 AS parent_id, -1.0243695130040582 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 26 AS count, 3 AS depth, 12 AS parent_id, -0.9340951574824246 AS "Estimator") AS "Values"), 
"DT_Output_277" AS 
(SELECT "DT_node_lookup_277"."KEY" AS "KEY", "DT_node_lookup_277".node_id_2 AS node_id_2, "DT_node_data_277".node_id AS node_id, "DT_node_data_277".feature AS feature, "DT_node_data_277".threshold AS threshold, "DT_node_data_277".count AS count, "DT_node_data_277".depth AS depth, "DT_node_data_277".parent_id AS parent_id, "DT_node_data_277"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_277" LEFT OUTER JOIN "DT_node_data_277" ON "DT_node_lookup_277".node_id_2 = "DT_node_data_277".node_id), 
"GB_Tree_27_7" AS 
(SELECT "DT_Output_277"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3", 0.0 AS "Score_4", 0.0 AS "Score_5", 0.0 AS "Score_6", "DT_Output_277"."Estimator" AS "Score_7", 0.0 AS "Score_8", 0.0 AS "Score_9" 
FROM "DT_Output_277"), 
"DT_node_lookup_278" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_20" <= 15.5) THEN CASE WHEN ("ADS"."Feature_27" <= 12.5) THEN CASE WHEN ("ADS"."Feature_45" <= 11.5) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_42" <= 1.5) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_12" <= 9.5) THEN CASE WHEN ("ADS"."Feature_44" <= 8.0) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_29" <= 1.5) THEN 13 ELSE 14 END END END AS node_id_2 
FROM digits AS "ADS"), 
"DT_node_data_278" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 500 AS count, 3 AS depth, 2 AS parent_id, -0.45798695378617316 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 309 AS count, 3 AS depth, 2 AS parent_id, 0.2061503769817857 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 200 AS count, 3 AS depth, 5 AS parent_id, -0.4324752755707851 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 188 AS count, 3 AS depth, 5 AS parent_id, 0.6768161190745434 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 3 AS depth, 9 AS parent_id, 1.480001785427377 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 8 AS count, 3 AS depth, 9 AS parent_id, 0.5446619119751761 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 63 AS count, 3 AS depth, 12 AS parent_id, -0.012658299871208298 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 167 AS count, 3 AS depth, 12 AS parent_id, -0.9378338098491649 AS "Estimator") AS "Values"), 
"DT_Output_278" AS 
(SELECT "DT_node_lookup_278"."KEY" AS "KEY", "DT_node_lookup_278".node_id_2 AS node_id_2, "DT_node_data_278".node_id AS node_id, "DT_node_data_278".feature AS feature, "DT_node_data_278".threshold AS threshold, "DT_node_data_278".count AS count, "DT_node_data_278".depth AS depth, "DT_node_data_278".parent_id AS parent_id, "DT_node_data_278"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_278" LEFT OUTER JOIN "DT_node_data_278" ON "DT_node_lookup_278".node_id_2 = "DT_node_data_278".node_id), 
"GB_Tree_27_8" AS 
(SELECT "DT_Output_278"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3", 0.0 AS "Score_4", 0.0 AS "Score_5", 0.0 AS "Score_6", 0.0 AS "Score_7", "DT_Output_278"."Estimator" AS "Score_8", 0.0 AS "Score_9" 
FROM "DT_Output_278"), 
"DT_node_lookup_279" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_44" <= 7.5) THEN CASE WHEN ("ADS"."Feature_29" <= 14.5) THEN CASE WHEN ("ADS"."Feature_20" <= 13.5) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_28" <= 6.5) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_60" <= 4.5) THEN CASE WHEN ("ADS"."Feature_26" <= 12.5) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_49" <= 7.5) THEN 13 ELSE 14 END END END AS node_id_2 
FROM digits AS "ADS"), 
"DT_node_data_279" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 440 AS count, 3 AS depth, 2 AS parent_id, -0.29518023993601417 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 126 AS count, 3 AS depth, 2 AS parent_id, 0.7343822260534365 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 15 AS count, 3 AS depth, 5 AS parent_id, -1.057158787419645 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 127 AS count, 3 AS depth, 5 AS parent_id, 0.8368516019893045 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 83 AS count, 3 AS depth, 9 AS parent_id, -0.9467020960343306 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 42 AS count, 3 AS depth, 9 AS parent_id, 0.9637295137771836 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 597 AS count, 3 AS depth, 12 AS parent_id, -0.7346567896254892 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 7 AS count, 3 AS depth, 12 AS parent_id, 1.2572597708221651 AS "Estimator") AS "Values"), 
"DT_Output_279" AS 
(SELECT "DT_node_lookup_279"."KEY" AS "KEY", "DT_node_lookup_279".node_id_2 AS node_id_2, "DT_node_data_279".node_id AS node_id, "DT_node_data_279".feature AS feature, "DT_node_data_279".threshold AS threshold, "DT_node_data_279".count AS count, "DT_node_data_279".depth AS depth, "DT_node_data_279".parent_id AS parent_id, "DT_node_data_279"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_279" LEFT OUTER JOIN "DT_node_data_279" ON "DT_node_lookup_279".node_id_2 = "DT_node_data_279".node_id), 
"GB_Tree_27_9" AS 
(SELECT "DT_Output_279"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3", 0.0 AS "Score_4", 0.0 AS "Score_5", 0.0 AS "Score_6", 0.0 AS "Score_7", 0.0 AS "Score_8", "DT_Output_279"."Estimator" AS "Score_9" 
FROM "DT_Output_279")
 SELECT "Score_Union_CTE_esu_34"."KEY", "Score_Union_CTE_esu_34"."Score_0", "Score_Union_CTE_esu_34"."Score_1", "Score_Union_CTE_esu_34"."Score_2", "Score_Union_CTE_esu_34"."Score_3", "Score_Union_CTE_esu_34"."Score_4", "Score_Union_CTE_esu_34"."Score_5", "Score_Union_CTE_esu_34"."Score_6", "Score_Union_CTE_esu_34"."Score_7", "Score_Union_CTE_esu_34"."Score_8", "Score_Union_CTE_esu_34"."Score_9" 
FROM (SELECT "GB_Tree_27_2"."KEY" AS "KEY", "GB_Tree_27_2"."Score_0" AS "Score_0", "GB_Tree_27_2"."Score_1" AS "Score_1", "GB_Tree_27_2"."Score_2" AS "Score_2", "GB_Tree_27_2"."Score_3" AS "Score_3", "GB_Tree_27_2"."Score_4" AS "Score_4", "GB_Tree_27_2"."Score_5" AS "Score_5", "GB_Tree_27_2"."Score_6" AS "Score_6", "GB_Tree_27_2"."Score_7" AS "Score_7", "GB_Tree_27_2"."Score_8" AS "Score_8", "GB_Tree_27_2"."Score_9" AS "Score_9" 
FROM "GB_Tree_27_2" UNION ALL SELECT "GB_Tree_27_3"."KEY" AS "KEY", "GB_Tree_27_3"."Score_0" AS "Score_0", "GB_Tree_27_3"."Score_1" AS "Score_1", "GB_Tree_27_3"."Score_2" AS "Score_2", "GB_Tree_27_3"."Score_3" AS "Score_3", "GB_Tree_27_3"."Score_4" AS "Score_4", "GB_Tree_27_3"."Score_5" AS "Score_5", "GB_Tree_27_3"."Score_6" AS "Score_6", "GB_Tree_27_3"."Score_7" AS "Score_7", "GB_Tree_27_3"."Score_8" AS "Score_8", "GB_Tree_27_3"."Score_9" AS "Score_9" 
FROM "GB_Tree_27_3" UNION ALL SELECT "GB_Tree_27_4"."KEY" AS "KEY", "GB_Tree_27_4"."Score_0" AS "Score_0", "GB_Tree_27_4"."Score_1" AS "Score_1", "GB_Tree_27_4"."Score_2" AS "Score_2", "GB_Tree_27_4"."Score_3" AS "Score_3", "GB_Tree_27_4"."Score_4" AS "Score_4", "GB_Tree_27_4"."Score_5" AS "Score_5", "GB_Tree_27_4"."Score_6" AS "Score_6", "GB_Tree_27_4"."Score_7" AS "Score_7", "GB_Tree_27_4"."Score_8" AS "Score_8", "GB_Tree_27_4"."Score_9" AS "Score_9" 
FROM "GB_Tree_27_4" UNION ALL SELECT "GB_Tree_27_5"."KEY" AS "KEY", "GB_Tree_27_5"."Score_0" AS "Score_0", "GB_Tree_27_5"."Score_1" AS "Score_1", "GB_Tree_27_5"."Score_2" AS "Score_2", "GB_Tree_27_5"."Score_3" AS "Score_3", "GB_Tree_27_5"."Score_4" AS "Score_4", "GB_Tree_27_5"."Score_5" AS "Score_5", "GB_Tree_27_5"."Score_6" AS "Score_6", "GB_Tree_27_5"."Score_7" AS "Score_7", "GB_Tree_27_5"."Score_8" AS "Score_8", "GB_Tree_27_5"."Score_9" AS "Score_9" 
FROM "GB_Tree_27_5" UNION ALL SELECT "GB_Tree_27_6"."KEY" AS "KEY", "GB_Tree_27_6"."Score_0" AS "Score_0", "GB_Tree_27_6"."Score_1" AS "Score_1", "GB_Tree_27_6"."Score_2" AS "Score_2", "GB_Tree_27_6"."Score_3" AS "Score_3", "GB_Tree_27_6"."Score_4" AS "Score_4", "GB_Tree_27_6"."Score_5" AS "Score_5", "GB_Tree_27_6"."Score_6" AS "Score_6", "GB_Tree_27_6"."Score_7" AS "Score_7", "GB_Tree_27_6"."Score_8" AS "Score_8", "GB_Tree_27_6"."Score_9" AS "Score_9" 
FROM "GB_Tree_27_6" UNION ALL SELECT "GB_Tree_27_7"."KEY" AS "KEY", "GB_Tree_27_7"."Score_0" AS "Score_0", "GB_Tree_27_7"."Score_1" AS "Score_1", "GB_Tree_27_7"."Score_2" AS "Score_2", "GB_Tree_27_7"."Score_3" AS "Score_3", "GB_Tree_27_7"."Score_4" AS "Score_4", "GB_Tree_27_7"."Score_5" AS "Score_5", "GB_Tree_27_7"."Score_6" AS "Score_6", "GB_Tree_27_7"."Score_7" AS "Score_7", "GB_Tree_27_7"."Score_8" AS "Score_8", "GB_Tree_27_7"."Score_9" AS "Score_9" 
FROM "GB_Tree_27_7" UNION ALL SELECT "GB_Tree_27_8"."KEY" AS "KEY", "GB_Tree_27_8"."Score_0" AS "Score_0", "GB_Tree_27_8"."Score_1" AS "Score_1", "GB_Tree_27_8"."Score_2" AS "Score_2", "GB_Tree_27_8"."Score_3" AS "Score_3", "GB_Tree_27_8"."Score_4" AS "Score_4", "GB_Tree_27_8"."Score_5" AS "Score_5", "GB_Tree_27_8"."Score_6" AS "Score_6", "GB_Tree_27_8"."Score_7" AS "Score_7", "GB_Tree_27_8"."Score_8" AS "Score_8", "GB_Tree_27_8"."Score_9" AS "Score_9" 
FROM "GB_Tree_27_8" UNION ALL SELECT "GB_Tree_27_9"."KEY" AS "KEY", "GB_Tree_27_9"."Score_0" AS "Score_0", "GB_Tree_27_9"."Score_1" AS "Score_1", "GB_Tree_27_9"."Score_2" AS "Score_2", "GB_Tree_27_9"."Score_3" AS "Score_3", "GB_Tree_27_9"."Score_4" AS "Score_4", "GB_Tree_27_9"."Score_5" AS "Score_5", "GB_Tree_27_9"."Score_6" AS "Score_6", "GB_Tree_27_9"."Score_7" AS "Score_7", "GB_Tree_27_9"."Score_8" AS "Score_8", "GB_Tree_27_9"."Score_9" AS "Score_9" 
FROM "GB_Tree_27_9") AS "Score_Union_CTE_esu_34"), 
"Score_Union_CTE_35" AS 
(WITH "DT_node_lookup_280" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_36" <= 0.5) THEN CASE WHEN ("ADS"."Feature_28" <= 4.5) THEN CASE WHEN ("ADS"."Feature_14" <= 6.5) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_34" <= 15.5) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_42" <= 13.5) THEN CASE WHEN ("ADS"."Feature_2" <= 7.5) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_29" <= 14.5) THEN 13 ELSE 14 END END END AS node_id_2 
FROM digits AS "ADS"), 
"DT_node_data_280" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 144 AS count, 3 AS depth, 2 AS parent_id, 0.6559978836299558 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 6 AS count, 3 AS depth, 2 AS parent_id, 1.1292077035775734 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 67 AS count, 3 AS depth, 5 AS parent_id, -0.9108849413915481 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 3 AS depth, 5 AS parent_id, -0.9514234298327697 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 577 AS count, 3 AS depth, 9 AS parent_id, -0.8553164862902402 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 338 AS count, 3 AS depth, 9 AS parent_id, -0.905633430303515 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 270 AS count, 3 AS depth, 12 AS parent_id, -0.9067037462731845 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 33 AS count, 3 AS depth, 12 AS parent_id, 0.48104757582455115 AS "Estimator") AS "Values"), 
"DT_Output_280" AS 
(SELECT "DT_node_lookup_280"."KEY" AS "KEY", "DT_node_lookup_280".node_id_2 AS node_id_2, "DT_node_data_280".node_id AS node_id, "DT_node_data_280".feature AS feature, "DT_node_data_280".threshold AS threshold, "DT_node_data_280".count AS count, "DT_node_data_280".depth AS depth, "DT_node_data_280".parent_id AS parent_id, "DT_node_data_280"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_280" LEFT OUTER JOIN "DT_node_data_280" ON "DT_node_lookup_280".node_id_2 = "DT_node_data_280".node_id), 
"GB_Tree_28_0" AS 
(SELECT "DT_Output_280"."KEY" AS "KEY", "DT_Output_280"."Estimator" AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3", 0.0 AS "Score_4", 0.0 AS "Score_5", 0.0 AS "Score_6", 0.0 AS "Score_7", 0.0 AS "Score_8", 0.0 AS "Score_9" 
FROM "DT_Output_280"), 
"DT_node_lookup_281" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_12" <= 14.5) THEN CASE WHEN ("ADS"."Feature_63" <= 4.5) THEN CASE WHEN ("ADS"."Feature_55" <= 4.5) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_19" <= 13.0) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_58" <= 2.5) THEN CASE WHEN ("ADS"."Feature_38" <= 0.5) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_51" <= 15.5) THEN 13 ELSE 14 END END END AS node_id_2 
FROM digits AS "ADS"), 
"DT_node_data_281" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1007 AS count, 3 AS depth, 2 AS parent_id, -0.6742905927472082 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 10 AS count, 3 AS depth, 2 AS parent_id, 0.9185207981964761 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 17 AS count, 3 AS depth, 5 AS parent_id, -0.904218470217604 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 20 AS count, 3 AS depth, 5 AS parent_id, 1.009705531753107 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 99 AS count, 3 AS depth, 9 AS parent_id, 0.9463937742875768 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 60 AS count, 3 AS depth, 9 AS parent_id, -0.03876007503481851 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 157 AS count, 3 AS depth, 12 AS parent_id, -1.1506481579777537 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 67 AS count, 3 AS depth, 12 AS parent_id, 0.7338358682595111 AS "Estimator") AS "Values"), 
"DT_Output_281" AS 
(SELECT "DT_node_lookup_281"."KEY" AS "KEY", "DT_node_lookup_281".node_id_2 AS node_id_2, "DT_node_data_281".node_id AS node_id, "DT_node_data_281".feature AS feature, "DT_node_data_281".threshold AS threshold, "DT_node_data_281".count AS count, "DT_node_data_281".depth AS depth, "DT_node_data_281".parent_id AS parent_id, "DT_node_data_281"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_281" LEFT OUTER JOIN "DT_node_data_281" ON "DT_node_lookup_281".node_id_2 = "DT_node_data_281".node_id), 
"GB_Tree_28_1" AS 
(SELECT "DT_Output_281"."KEY" AS "KEY", 0.0 AS "Score_0", "DT_Output_281"."Estimator" AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3", 0.0 AS "Score_4", 0.0 AS "Score_5", 0.0 AS "Score_6", 0.0 AS "Score_7", 0.0 AS "Score_8", 0.0 AS "Score_9" 
FROM "DT_Output_281"), 
"DT_node_lookup_282" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_45" <= 6.5) THEN CASE WHEN ("ADS"."Feature_54" <= 0.5) THEN CASE WHEN ("ADS"."Feature_61" <= 15.5) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_38" <= 0.5) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_63" <= 2.5) THEN CASE WHEN ("ADS"."Feature_33" <= 1.5) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_29" <= 8.0) THEN 13 ELSE 14 END END END AS node_id_2 
FROM digits AS "ADS"), 
"DT_node_data_282" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 329 AS count, 3 AS depth, 2 AS parent_id, -0.5233310843939678 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 3 AS depth, 2 AS parent_id, 1.0891844457453872 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 137 AS count, 3 AS depth, 5 AS parent_id, 0.8361409054412116 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 73 AS count, 3 AS depth, 5 AS parent_id, -0.9114384553677378 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 481 AS count, 3 AS depth, 9 AS parent_id, -0.7364276968493121 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 393 AS count, 3 AS depth, 9 AS parent_id, -0.9104122017443558 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 15 AS count, 3 AS depth, 12 AS parent_id, -0.5089047107834528 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 6 AS count, 3 AS depth, 12 AS parent_id, 1.0345362310683572 AS "Estimator") AS "Values"), 
"DT_Output_282" AS 
(SELECT "DT_node_lookup_282"."KEY" AS "KEY", "DT_node_lookup_282".node_id_2 AS node_id_2, "DT_node_data_282".node_id AS node_id, "DT_node_data_282".feature AS feature, "DT_node_data_282".threshold AS threshold, "DT_node_data_282".count AS count, "DT_node_data_282".depth AS depth, "DT_node_data_282".parent_id AS parent_id, "DT_node_data_282"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_282" LEFT OUTER JOIN "DT_node_data_282" ON "DT_node_lookup_282".node_id_2 = "DT_node_data_282".node_id), 
"GB_Tree_28_2" AS 
(SELECT "DT_Output_282"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", "DT_Output_282"."Estimator" AS "Score_2", 0.0 AS "Score_3", 0.0 AS "Score_4", 0.0 AS "Score_5", 0.0 AS "Score_6", 0.0 AS "Score_7", 0.0 AS "Score_8", 0.0 AS "Score_9" 
FROM "DT_Output_282"), 
"DT_node_lookup_283" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_43" <= 1.5) THEN CASE WHEN ("ADS"."Feature_36" <= 4.5) THEN CASE WHEN ("ADS"."Feature_18" <= 0.5) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_34" <= 4.5) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_18" <= 0.5) THEN CASE WHEN ("ADS"."Feature_37" <= 1.5) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_34" <= 7.5) THEN 13 ELSE 14 END END END AS node_id_2 
FROM digits AS "ADS"), 
"DT_node_data_283" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 7 AS count, 3 AS depth, 2 AS parent_id, 0.956174057965822 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 230 AS count, 3 AS depth, 2 AS parent_id, -0.8150268533820236 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 179 AS count, 3 AS depth, 5 AS parent_id, 0.7554372051918823 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 109 AS count, 3 AS depth, 5 AS parent_id, -0.23559506638367922 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 26 AS count, 3 AS depth, 9 AS parent_id, 0.8806599493384117 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 81 AS count, 3 AS depth, 9 AS parent_id, -0.45971192763190166 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 334 AS count, 3 AS depth, 12 AS parent_id, -0.764294279669734 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 471 AS count, 3 AS depth, 12 AS parent_id, -0.5420377895983415 AS "Estimator") AS "Values"), 
"DT_Output_283" AS 
(SELECT "DT_node_lookup_283"."KEY" AS "KEY", "DT_node_lookup_283".node_id_2 AS node_id_2, "DT_node_data_283".node_id AS node_id, "DT_node_data_283".feature AS feature, "DT_node_data_283".threshold AS threshold, "DT_node_data_283".count AS count, "DT_node_data_283".depth AS depth, "DT_node_data_283".parent_id AS parent_id, "DT_node_data_283"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_283" LEFT OUTER JOIN "DT_node_data_283" ON "DT_node_lookup_283".node_id_2 = "DT_node_data_283".node_id), 
"GB_Tree_28_3" AS 
(SELECT "DT_Output_283"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", "DT_Output_283"."Estimator" AS "Score_3", 0.0 AS "Score_4", 0.0 AS "Score_5", 0.0 AS "Score_6", 0.0 AS "Score_7", 0.0 AS "Score_8", 0.0 AS "Score_9" 
FROM "DT_Output_283"), 
"DT_node_lookup_284" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_33" <= 1.5) THEN CASE WHEN ("ADS"."Feature_4" <= 0.5) THEN CASE WHEN ("ADS"."Feature_52" <= 3.0) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_22" <= 14.5) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_44" <= 12.5) THEN CASE WHEN ("ADS"."Feature_30" <= 11.5) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_5" <= 11.5) THEN 13 ELSE 14 END END END AS node_id_2 
FROM digits AS "ADS"), 
"DT_node_data_284" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 3 AS depth, 2 AS parent_id, 1.4643605518162095 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 18 AS count, 3 AS depth, 2 AS parent_id, -0.9082987365092083 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 888 AS count, 3 AS depth, 5 AS parent_id, -0.8118918564388518 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS count, 3 AS depth, 5 AS parent_id, 0.8347024758100822 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 314 AS count, 3 AS depth, 9 AS parent_id, -0.4843106119122396 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 17 AS count, 3 AS depth, 9 AS parent_id, 0.8748572995793512 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 162 AS count, 3 AS depth, 12 AS parent_id, 0.7973527323217878 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 32 AS count, 3 AS depth, 12 AS parent_id, -0.6181146441044519 AS "Estimator") AS "Values"), 
"DT_Output_284" AS 
(SELECT "DT_node_lookup_284"."KEY" AS "KEY", "DT_node_lookup_284".node_id_2 AS node_id_2, "DT_node_data_284".node_id AS node_id, "DT_node_data_284".feature AS feature, "DT_node_data_284".threshold AS threshold, "DT_node_data_284".count AS count, "DT_node_data_284".depth AS depth, "DT_node_data_284".parent_id AS parent_id, "DT_node_data_284"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_284" LEFT OUTER JOIN "DT_node_data_284" ON "DT_node_lookup_284".node_id_2 = "DT_node_data_284".node_id), 
"GB_Tree_28_4" AS 
(SELECT "DT_Output_284"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3", "DT_Output_284"."Estimator" AS "Score_4", 0.0 AS "Score_5", 0.0 AS "Score_6", 0.0 AS "Score_7", 0.0 AS "Score_8", 0.0 AS "Score_9" 
FROM "DT_Output_284"), 
"DT_node_lookup_285" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_26" <= 14.5) THEN CASE WHEN ("ADS"."Feature_25" <= 9.5) THEN CASE WHEN ("ADS"."Feature_2" <= 6.5) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_52" <= 3.5) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_43" <= 0.5) THEN CASE WHEN ("ADS"."Feature_21" <= 8.5) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_57" <= 0.5) THEN 13 ELSE 14 END END END AS node_id_2 
FROM digits AS "ADS"), 
"DT_node_data_285" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 565 AS count, 3 AS depth, 2 AS parent_id, -0.8769445065343185 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 401 AS count, 3 AS depth, 2 AS parent_id, -0.09420986145993325 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 5 AS parent_id, 1.16177987234889 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 17 AS count, 3 AS depth, 5 AS parent_id, 0.4386245358175483 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 74 AS count, 3 AS depth, 9 AS parent_id, 0.9409912593560271 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 51 AS count, 3 AS depth, 9 AS parent_id, 0.031505351380759314 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 310 AS count, 3 AS depth, 12 AS parent_id, -0.3235912823926522 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 18 AS count, 3 AS depth, 12 AS parent_id, 0.8848688929225494 AS "Estimator") AS "Values"), 
"DT_Output_285" AS 
(SELECT "DT_node_lookup_285"."KEY" AS "KEY", "DT_node_lookup_285".node_id_2 AS node_id_2, "DT_node_data_285".node_id AS node_id, "DT_node_data_285".feature AS feature, "DT_node_data_285".threshold AS threshold, "DT_node_data_285".count AS count, "DT_node_data_285".depth AS depth, "DT_node_data_285".parent_id AS parent_id, "DT_node_data_285"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_285" LEFT OUTER JOIN "DT_node_data_285" ON "DT_node_lookup_285".node_id_2 = "DT_node_data_285".node_id), 
"GB_Tree_28_5" AS 
(SELECT "DT_Output_285"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3", 0.0 AS "Score_4", "DT_Output_285"."Estimator" AS "Score_5", 0.0 AS "Score_6", 0.0 AS "Score_7", 0.0 AS "Score_8", 0.0 AS "Score_9" 
FROM "DT_Output_285"), 
"DT_node_lookup_286" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_2" <= 1.5) THEN CASE WHEN ("ADS"."Feature_29" <= 1.5) THEN CASE WHEN ("ADS"."Feature_5" <= 11.0) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_46" <= 5.5) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_42" <= 15.5) THEN CASE WHEN ("ADS"."Feature_58" <= 1.5) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_20" <= 4.5) THEN 13 ELSE 14 END END END AS node_id_2 
FROM digits AS "ADS"), 
"DT_node_data_286" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 96 AS count, 3 AS depth, 2 AS parent_id, 0.8783740109001162 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 2 AS parent_id, 1.7132206588716525 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 301 AS count, 3 AS depth, 5 AS parent_id, -0.921778069793827 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 60 AS count, 3 AS depth, 5 AS parent_id, 0.8302257703703305 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 46 AS count, 3 AS depth, 9 AS parent_id, -0.9589555036156422 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 828 AS count, 3 AS depth, 9 AS parent_id, -0.8491800697590338 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 69 AS count, 3 AS depth, 12 AS parent_id, 0.7375246230638329 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 36 AS count, 3 AS depth, 12 AS parent_id, -0.9720556481150728 AS "Estimator") AS "Values"), 
"DT_Output_286" AS 
(SELECT "DT_node_lookup_286"."KEY" AS "KEY", "DT_node_lookup_286".node_id_2 AS node_id_2, "DT_node_data_286".node_id AS node_id, "DT_node_data_286".feature AS feature, "DT_node_data_286".threshold AS threshold, "DT_node_data_286".count AS count, "DT_node_data_286".depth AS depth, "DT_node_data_286".parent_id AS parent_id, "DT_node_data_286"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_286" LEFT OUTER JOIN "DT_node_data_286" ON "DT_node_lookup_286".node_id_2 = "DT_node_data_286".node_id), 
"GB_Tree_28_6" AS 
(SELECT "DT_Output_286"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3", 0.0 AS "Score_4", 0.0 AS "Score_5", "DT_Output_286"."Estimator" AS "Score_6", 0.0 AS "Score_7", 0.0 AS "Score_8", 0.0 AS "Score_9" 
FROM "DT_Output_286"), 
"DT_node_lookup_287" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_60" <= 0.5) THEN CASE WHEN ("ADS"."Feature_50" <= 9.5) THEN CASE WHEN ("ADS"."Feature_17" <= 1.5) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_27" <= 15.5) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_14" <= 6.5) THEN CASE WHEN ("ADS"."Feature_38" <= 0.5) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_20" <= 1.5) THEN 13 ELSE 14 END END END AS node_id_2 
FROM digits AS "ADS"), 
"DT_node_data_287" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 50 AS count, 3 AS depth, 2 AS parent_id, 0.8651178937911308 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 20 AS count, 3 AS depth, 2 AS parent_id, -0.5685883806619535 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 10 AS count, 3 AS depth, 5 AS parent_id, 0.9172870787119196 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 6 AS count, 3 AS depth, 5 AS parent_id, 1.14176345436555 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 564 AS count, 3 AS depth, 9 AS parent_id, -0.9384799146894 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 620 AS count, 3 AS depth, 9 AS parent_id, -0.12174332269051316 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 67 AS count, 3 AS depth, 12 AS parent_id, 0.8713380310732636 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 100 AS count, 3 AS depth, 12 AS parent_id, -0.3983989701222752 AS "Estimator") AS "Values"), 
"DT_Output_287" AS 
(SELECT "DT_node_lookup_287"."KEY" AS "KEY", "DT_node_lookup_287".node_id_2 AS node_id_2, "DT_node_data_287".node_id AS node_id, "DT_node_data_287".feature AS feature, "DT_node_data_287".threshold AS threshold, "DT_node_data_287".count AS count, "DT_node_data_287".depth AS depth, "DT_node_data_287".parent_id AS parent_id, "DT_node_data_287"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_287" LEFT OUTER JOIN "DT_node_data_287" ON "DT_node_lookup_287".node_id_2 = "DT_node_data_287".node_id), 
"GB_Tree_28_7" AS 
(SELECT "DT_Output_287"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3", 0.0 AS "Score_4", 0.0 AS "Score_5", 0.0 AS "Score_6", "DT_Output_287"."Estimator" AS "Score_7", 0.0 AS "Score_8", 0.0 AS "Score_9" 
FROM "DT_Output_287")
 SELECT "Score_Union_CTE_esu_35"."KEY", "Score_Union_CTE_esu_35"."Score_0", "Score_Union_CTE_esu_35"."Score_1", "Score_Union_CTE_esu_35"."Score_2", "Score_Union_CTE_esu_35"."Score_3", "Score_Union_CTE_esu_35"."Score_4", "Score_Union_CTE_esu_35"."Score_5", "Score_Union_CTE_esu_35"."Score_6", "Score_Union_CTE_esu_35"."Score_7", "Score_Union_CTE_esu_35"."Score_8", "Score_Union_CTE_esu_35"."Score_9" 
FROM (SELECT "GB_Tree_28_0"."KEY" AS "KEY", "GB_Tree_28_0"."Score_0" AS "Score_0", "GB_Tree_28_0"."Score_1" AS "Score_1", "GB_Tree_28_0"."Score_2" AS "Score_2", "GB_Tree_28_0"."Score_3" AS "Score_3", "GB_Tree_28_0"."Score_4" AS "Score_4", "GB_Tree_28_0"."Score_5" AS "Score_5", "GB_Tree_28_0"."Score_6" AS "Score_6", "GB_Tree_28_0"."Score_7" AS "Score_7", "GB_Tree_28_0"."Score_8" AS "Score_8", "GB_Tree_28_0"."Score_9" AS "Score_9" 
FROM "GB_Tree_28_0" UNION ALL SELECT "GB_Tree_28_1"."KEY" AS "KEY", "GB_Tree_28_1"."Score_0" AS "Score_0", "GB_Tree_28_1"."Score_1" AS "Score_1", "GB_Tree_28_1"."Score_2" AS "Score_2", "GB_Tree_28_1"."Score_3" AS "Score_3", "GB_Tree_28_1"."Score_4" AS "Score_4", "GB_Tree_28_1"."Score_5" AS "Score_5", "GB_Tree_28_1"."Score_6" AS "Score_6", "GB_Tree_28_1"."Score_7" AS "Score_7", "GB_Tree_28_1"."Score_8" AS "Score_8", "GB_Tree_28_1"."Score_9" AS "Score_9" 
FROM "GB_Tree_28_1" UNION ALL SELECT "GB_Tree_28_2"."KEY" AS "KEY", "GB_Tree_28_2"."Score_0" AS "Score_0", "GB_Tree_28_2"."Score_1" AS "Score_1", "GB_Tree_28_2"."Score_2" AS "Score_2", "GB_Tree_28_2"."Score_3" AS "Score_3", "GB_Tree_28_2"."Score_4" AS "Score_4", "GB_Tree_28_2"."Score_5" AS "Score_5", "GB_Tree_28_2"."Score_6" AS "Score_6", "GB_Tree_28_2"."Score_7" AS "Score_7", "GB_Tree_28_2"."Score_8" AS "Score_8", "GB_Tree_28_2"."Score_9" AS "Score_9" 
FROM "GB_Tree_28_2" UNION ALL SELECT "GB_Tree_28_3"."KEY" AS "KEY", "GB_Tree_28_3"."Score_0" AS "Score_0", "GB_Tree_28_3"."Score_1" AS "Score_1", "GB_Tree_28_3"."Score_2" AS "Score_2", "GB_Tree_28_3"."Score_3" AS "Score_3", "GB_Tree_28_3"."Score_4" AS "Score_4", "GB_Tree_28_3"."Score_5" AS "Score_5", "GB_Tree_28_3"."Score_6" AS "Score_6", "GB_Tree_28_3"."Score_7" AS "Score_7", "GB_Tree_28_3"."Score_8" AS "Score_8", "GB_Tree_28_3"."Score_9" AS "Score_9" 
FROM "GB_Tree_28_3" UNION ALL SELECT "GB_Tree_28_4"."KEY" AS "KEY", "GB_Tree_28_4"."Score_0" AS "Score_0", "GB_Tree_28_4"."Score_1" AS "Score_1", "GB_Tree_28_4"."Score_2" AS "Score_2", "GB_Tree_28_4"."Score_3" AS "Score_3", "GB_Tree_28_4"."Score_4" AS "Score_4", "GB_Tree_28_4"."Score_5" AS "Score_5", "GB_Tree_28_4"."Score_6" AS "Score_6", "GB_Tree_28_4"."Score_7" AS "Score_7", "GB_Tree_28_4"."Score_8" AS "Score_8", "GB_Tree_28_4"."Score_9" AS "Score_9" 
FROM "GB_Tree_28_4" UNION ALL SELECT "GB_Tree_28_5"."KEY" AS "KEY", "GB_Tree_28_5"."Score_0" AS "Score_0", "GB_Tree_28_5"."Score_1" AS "Score_1", "GB_Tree_28_5"."Score_2" AS "Score_2", "GB_Tree_28_5"."Score_3" AS "Score_3", "GB_Tree_28_5"."Score_4" AS "Score_4", "GB_Tree_28_5"."Score_5" AS "Score_5", "GB_Tree_28_5"."Score_6" AS "Score_6", "GB_Tree_28_5"."Score_7" AS "Score_7", "GB_Tree_28_5"."Score_8" AS "Score_8", "GB_Tree_28_5"."Score_9" AS "Score_9" 
FROM "GB_Tree_28_5" UNION ALL SELECT "GB_Tree_28_6"."KEY" AS "KEY", "GB_Tree_28_6"."Score_0" AS "Score_0", "GB_Tree_28_6"."Score_1" AS "Score_1", "GB_Tree_28_6"."Score_2" AS "Score_2", "GB_Tree_28_6"."Score_3" AS "Score_3", "GB_Tree_28_6"."Score_4" AS "Score_4", "GB_Tree_28_6"."Score_5" AS "Score_5", "GB_Tree_28_6"."Score_6" AS "Score_6", "GB_Tree_28_6"."Score_7" AS "Score_7", "GB_Tree_28_6"."Score_8" AS "Score_8", "GB_Tree_28_6"."Score_9" AS "Score_9" 
FROM "GB_Tree_28_6" UNION ALL SELECT "GB_Tree_28_7"."KEY" AS "KEY", "GB_Tree_28_7"."Score_0" AS "Score_0", "GB_Tree_28_7"."Score_1" AS "Score_1", "GB_Tree_28_7"."Score_2" AS "Score_2", "GB_Tree_28_7"."Score_3" AS "Score_3", "GB_Tree_28_7"."Score_4" AS "Score_4", "GB_Tree_28_7"."Score_5" AS "Score_5", "GB_Tree_28_7"."Score_6" AS "Score_6", "GB_Tree_28_7"."Score_7" AS "Score_7", "GB_Tree_28_7"."Score_8" AS "Score_8", "GB_Tree_28_7"."Score_9" AS "Score_9" 
FROM "GB_Tree_28_7") AS "Score_Union_CTE_esu_35"), 
"Score_Union_CTE_36" AS 
(WITH "DT_node_lookup_288" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_60" <= 1.5) THEN CASE WHEN ("ADS"."Feature_37" <= 1.5) THEN CASE WHEN ("ADS"."Feature_21" <= 1.0) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_38" <= 0.5) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_35" <= 8.5) THEN CASE WHEN ("ADS"."Feature_43" <= 7.5) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_13" <= 9.5) THEN 13 ELSE 14 END END END AS node_id_2 
FROM digits AS "ADS"), 
"DT_node_data_288" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 13 AS count, 3 AS depth, 2 AS parent_id, -0.9154534544310043 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 14 AS count, 3 AS depth, 2 AS parent_id, -1.0324466172479718 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 18 AS count, 3 AS depth, 5 AS parent_id, -0.9462351107923561 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 63 AS count, 3 AS depth, 5 AS parent_id, -0.915893928482726 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 490 AS count, 3 AS depth, 9 AS parent_id, -0.8428426057225249 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 134 AS count, 3 AS depth, 9 AS parent_id, 0.14138422137465062 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 440 AS count, 3 AS depth, 12 AS parent_id, -0.14432369131213207 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 265 AS count, 3 AS depth, 12 AS parent_id, 0.43492281671949024 AS "Estimator") AS "Values"), 
"DT_Output_288" AS 
(SELECT "DT_node_lookup_288"."KEY" AS "KEY", "DT_node_lookup_288".node_id_2 AS node_id_2, "DT_node_data_288".node_id AS node_id, "DT_node_data_288".feature AS feature, "DT_node_data_288".threshold AS threshold, "DT_node_data_288".count AS count, "DT_node_data_288".depth AS depth, "DT_node_data_288".parent_id AS parent_id, "DT_node_data_288"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_288" LEFT OUTER JOIN "DT_node_data_288" ON "DT_node_lookup_288".node_id_2 = "DT_node_data_288".node_id), 
"GB_Tree_28_8" AS 
(SELECT "DT_Output_288"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3", 0.0 AS "Score_4", 0.0 AS "Score_5", 0.0 AS "Score_6", 0.0 AS "Score_7", "DT_Output_288"."Estimator" AS "Score_8", 0.0 AS "Score_9" 
FROM "DT_Output_288"), 
"DT_node_lookup_289" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_43" <= 4.5) THEN CASE WHEN ("ADS"."Feature_18" <= 4.5) THEN CASE WHEN ("ADS"."Feature_29" <= 12.5) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_21" <= 9.5) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_60" <= 1.5) THEN CASE WHEN ("ADS"."Feature_17" <= 6.5) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_38" <= 13.0) THEN 13 ELSE 14 END END END AS node_id_2 
FROM digits AS "ADS"), 
"DT_node_data_289" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 103 AS count, 3 AS depth, 2 AS parent_id, -0.5584186592879654 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 27 AS count, 3 AS depth, 2 AS parent_id, -0.8781029008362542 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 217 AS count, 3 AS depth, 5 AS parent_id, -0.28524693365567666 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 285 AS count, 3 AS depth, 5 AS parent_id, 0.5834121740159923 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 84 AS count, 3 AS depth, 9 AS parent_id, -0.9418863763800993 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 15 AS count, 3 AS depth, 9 AS parent_id, 0.918155062136783 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 703 AS count, 3 AS depth, 12 AS parent_id, -0.9196007495646682 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 3 AS depth, 12 AS parent_id, 0.8111025494207992 AS "Estimator") AS "Values"), 
"DT_Output_289" AS 
(SELECT "DT_node_lookup_289"."KEY" AS "KEY", "DT_node_lookup_289".node_id_2 AS node_id_2, "DT_node_data_289".node_id AS node_id, "DT_node_data_289".feature AS feature, "DT_node_data_289".threshold AS threshold, "DT_node_data_289".count AS count, "DT_node_data_289".depth AS depth, "DT_node_data_289".parent_id AS parent_id, "DT_node_data_289"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_289" LEFT OUTER JOIN "DT_node_data_289" ON "DT_node_lookup_289".node_id_2 = "DT_node_data_289".node_id), 
"GB_Tree_28_9" AS 
(SELECT "DT_Output_289"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3", 0.0 AS "Score_4", 0.0 AS "Score_5", 0.0 AS "Score_6", 0.0 AS "Score_7", 0.0 AS "Score_8", "DT_Output_289"."Estimator" AS "Score_9" 
FROM "DT_Output_289"), 
"DT_node_lookup_290" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_28" <= 0.5) THEN CASE WHEN ("ADS"."Feature_13" <= 4.5) THEN CASE WHEN ("ADS"."Feature_26" <= 7.5) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_34" <= 1.0) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_28" <= 2.5) THEN CASE WHEN ("ADS"."Feature_21" <= 10.5) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_18" <= 6.5) THEN 13 ELSE 14 END END END AS node_id_2 
FROM digits AS "ADS"), 
"DT_node_data_290" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 3 AS depth, 2 AS parent_id, -0.9419392801024062 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 100 AS count, 3 AS depth, 2 AS parent_id, -0.39624971896371447 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS count, 3 AS depth, 5 AS parent_id, -0.9503147745727475 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 139 AS count, 3 AS depth, 5 AS parent_id, 0.8201358558475853 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 54 AS count, 3 AS depth, 9 AS parent_id, -0.9066141605558495 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 11 AS count, 3 AS depth, 9 AS parent_id, 0.8908476080745316 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 382 AS count, 3 AS depth, 12 AS parent_id, -0.9044521241347713 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 744 AS count, 3 AS depth, 12 AS parent_id, -0.8295097649526714 AS "Estimator") AS "Values"), 
"DT_Output_290" AS 
(SELECT "DT_node_lookup_290"."KEY" AS "KEY", "DT_node_lookup_290".node_id_2 AS node_id_2, "DT_node_data_290".node_id AS node_id, "DT_node_data_290".feature AS feature, "DT_node_data_290".threshold AS threshold, "DT_node_data_290".count AS count, "DT_node_data_290".depth AS depth, "DT_node_data_290".parent_id AS parent_id, "DT_node_data_290"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_290" LEFT OUTER JOIN "DT_node_data_290" ON "DT_node_lookup_290".node_id_2 = "DT_node_data_290".node_id), 
"GB_Tree_29_0" AS 
(SELECT "DT_Output_290"."KEY" AS "KEY", "DT_Output_290"."Estimator" AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3", 0.0 AS "Score_4", 0.0 AS "Score_5", 0.0 AS "Score_6", 0.0 AS "Score_7", 0.0 AS "Score_8", 0.0 AS "Score_9" 
FROM "DT_Output_290"), 
"DT_node_lookup_291" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_10" <= 5.5) THEN CASE WHEN ("ADS"."Feature_34" <= 2.5) THEN CASE WHEN ("ADS"."Feature_51" <= 1.0) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_20" <= 14.5) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_3" <= 1.5) THEN 9 ELSE CASE WHEN ("ADS"."Feature_51" <= 14.5) THEN 11 ELSE 12 END END END AS node_id_2 
FROM digits AS "ADS"), 
"DT_node_data_291" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 7 AS count, 3 AS depth, 2 AS parent_id, 1.1940162700327346 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 45 AS count, 3 AS depth, 2 AS parent_id, 1.0602455421649148 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 198 AS count, 3 AS depth, 5 AS parent_id, -0.6103134216131093 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 73 AS count, 3 AS depth, 5 AS parent_id, 0.6432203129832464 AS "Estimator" UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 2 AS depth, 8 AS parent_id, 1.1228966118711978 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 852 AS count, 3 AS depth, 10 AS parent_id, -0.6424605282407273 AS "Estimator" UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 261 AS count, 3 AS depth, 10 AS parent_id, 0.2608678724340068 AS "Estimator") AS "Values"), 
"DT_Output_291" AS 
(SELECT "DT_node_lookup_291"."KEY" AS "KEY", "DT_node_lookup_291".node_id_2 AS node_id_2, "DT_node_data_291".node_id AS node_id, "DT_node_data_291".feature AS feature, "DT_node_data_291".threshold AS threshold, "DT_node_data_291".count AS count, "DT_node_data_291".depth AS depth, "DT_node_data_291".parent_id AS parent_id, "DT_node_data_291"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_291" LEFT OUTER JOIN "DT_node_data_291" ON "DT_node_lookup_291".node_id_2 = "DT_node_data_291".node_id), 
"GB_Tree_29_1" AS 
(SELECT "DT_Output_291"."KEY" AS "KEY", 0.0 AS "Score_0", "DT_Output_291"."Estimator" AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3", 0.0 AS "Score_4", 0.0 AS "Score_5", 0.0 AS "Score_6", 0.0 AS "Score_7", 0.0 AS "Score_8", 0.0 AS "Score_9" 
FROM "DT_Output_291"), 
"DT_node_lookup_292" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_51" <= 13.5) THEN CASE WHEN ("ADS"."Feature_49" <= 3.5) THEN CASE WHEN ("ADS"."Feature_27" <= 11.5) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_37" <= 0.5) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_34" <= 1.5) THEN CASE WHEN ("ADS"."Feature_27" <= 13.5) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_9" <= 4.5) THEN 13 ELSE 14 END END END AS node_id_2 
FROM digits AS "ADS"), 
"DT_node_data_292" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 528 AS count, 3 AS depth, 2 AS parent_id, -0.31684171266505984 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 393 AS count, 3 AS depth, 2 AS parent_id, -0.9365355682100943 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 18 AS count, 3 AS depth, 5 AS parent_id, 1.0267830955770016 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 57 AS count, 3 AS depth, 5 AS parent_id, -0.9113242268700528 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 113 AS count, 3 AS depth, 9 AS parent_id, 0.8819220310307095 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 21 AS count, 3 AS depth, 9 AS parent_id, -0.9483736786906058 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 283 AS count, 3 AS depth, 12 AS parent_id, -0.5320542827483279 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 24 AS count, 3 AS depth, 12 AS parent_id, 0.8982748053143311 AS "Estimator") AS "Values"), 
"DT_Output_292" AS 
(SELECT "DT_node_lookup_292"."KEY" AS "KEY", "DT_node_lookup_292".node_id_2 AS node_id_2, "DT_node_data_292".node_id AS node_id, "DT_node_data_292".feature AS feature, "DT_node_data_292".threshold AS threshold, "DT_node_data_292".count AS count, "DT_node_data_292".depth AS depth, "DT_node_data_292".parent_id AS parent_id, "DT_node_data_292"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_292" LEFT OUTER JOIN "DT_node_data_292" ON "DT_node_lookup_292".node_id_2 = "DT_node_data_292".node_id), 
"GB_Tree_29_2" AS 
(SELECT "DT_Output_292"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", "DT_Output_292"."Estimator" AS "Score_2", 0.0 AS "Score_3", 0.0 AS "Score_4", 0.0 AS "Score_5", 0.0 AS "Score_6", 0.0 AS "Score_7", 0.0 AS "Score_8", 0.0 AS "Score_9" 
FROM "DT_Output_292"), 
"DT_node_lookup_293" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_26" <= 0.5) THEN CASE WHEN ("ADS"."Feature_51" <= 11.5) THEN CASE WHEN ("ADS"."Feature_2" <= 2.5) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_58" <= 14.5) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_53" <= 15.5) THEN CASE WHEN ("ADS"."Feature_27" <= 7.5) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_1" <= 3.5) THEN 13 ELSE 14 END END END AS node_id_2 
FROM digits AS "ADS"), 
"DT_node_data_293" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 24 AS count, 3 AS depth, 2 AS parent_id, -0.5045183269194078 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 115 AS count, 3 AS depth, 2 AS parent_id, 0.8701501466927019 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 103 AS count, 3 AS depth, 5 AS parent_id, -0.8130278092807105 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 21 AS count, 3 AS depth, 5 AS parent_id, 1.060983468450018 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 371 AS count, 3 AS depth, 9 AS parent_id, 0.04457165718309991 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 627 AS count, 3 AS depth, 9 AS parent_id, -0.5110329840827567 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 175 AS count, 3 AS depth, 12 AS parent_id, 0.37348316193586434 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 12 AS parent_id, 1.359591216061661 AS "Estimator") AS "Values"), 
"DT_Output_293" AS 
(SELECT "DT_node_lookup_293"."KEY" AS "KEY", "DT_node_lookup_293".node_id_2 AS node_id_2, "DT_node_data_293".node_id AS node_id, "DT_node_data_293".feature AS feature, "DT_node_data_293".threshold AS threshold, "DT_node_data_293".count AS count, "DT_node_data_293".depth AS depth, "DT_node_data_293".parent_id AS parent_id, "DT_node_data_293"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_293" LEFT OUTER JOIN "DT_node_data_293" ON "DT_node_lookup_293".node_id_2 = "DT_node_data_293".node_id), 
"GB_Tree_29_3" AS 
(SELECT "DT_Output_293"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", "DT_Output_293"."Estimator" AS "Score_3", 0.0 AS "Score_4", 0.0 AS "Score_5", 0.0 AS "Score_6", 0.0 AS "Score_7", 0.0 AS "Score_8", 0.0 AS "Score_9" 
FROM "DT_Output_293"), 
"DT_node_lookup_294" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_3" <= 5.5) THEN CASE WHEN ("ADS"."Feature_13" <= 6.5) THEN CASE WHEN ("ADS"."Feature_20" <= 12.5) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_33" <= 10.5) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_25" <= 3.5) THEN CASE WHEN ("ADS"."Feature_58" <= 0.5) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_59" <= 4.5) THEN 13 ELSE 14 END END END AS node_id_2 
FROM digits AS "ADS"), 
"DT_node_data_294" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 55 AS count, 3 AS depth, 2 AS parent_id, 0.8350307115860329 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 14 AS count, 3 AS depth, 2 AS parent_id, 1.0288079512275927 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 79 AS count, 3 AS depth, 5 AS parent_id, -0.4442305870690705 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 5 AS parent_id, 1.0790512757642778 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 116 AS count, 3 AS depth, 9 AS parent_id, -0.6213563762347849 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 759 AS count, 3 AS depth, 9 AS parent_id, -0.7945347820830639 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 12 AS parent_id, 1.412118507559554 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 412 AS count, 3 AS depth, 12 AS parent_id, 0.3294018086070576 AS "Estimator") AS "Values"), 
"DT_Output_294" AS 
(SELECT "DT_node_lookup_294"."KEY" AS "KEY", "DT_node_lookup_294".node_id_2 AS node_id_2, "DT_node_data_294".node_id AS node_id, "DT_node_data_294".feature AS feature, "DT_node_data_294".threshold AS threshold, "DT_node_data_294".count AS count, "DT_node_data_294".depth AS depth, "DT_node_data_294".parent_id AS parent_id, "DT_node_data_294"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_294" LEFT OUTER JOIN "DT_node_data_294" ON "DT_node_lookup_294".node_id_2 = "DT_node_data_294".node_id), 
"GB_Tree_29_4" AS 
(SELECT "DT_Output_294"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3", "DT_Output_294"."Estimator" AS "Score_4", 0.0 AS "Score_5", 0.0 AS "Score_6", 0.0 AS "Score_7", 0.0 AS "Score_8", 0.0 AS "Score_9" 
FROM "DT_Output_294"), 
"DT_node_lookup_295" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_6" <= 1.5) THEN CASE WHEN ("ADS"."Feature_20" <= 4.5) THEN CASE WHEN ("ADS"."Feature_42" <= 4.5) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_21" <= 1.5) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_38" <= 10.5) THEN CASE WHEN ("ADS"."Feature_36" <= 0.5) THEN 10 ELSE 11 END ELSE 12 END END AS node_id_2 
FROM digits AS "ADS"), 
"DT_node_data_295" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 124 AS count, 3 AS depth, 2 AS parent_id, 0.5491689799171963 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 341 AS count, 3 AS depth, 2 AS parent_id, -0.679118359640158 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 121 AS count, 3 AS depth, 5 AS parent_id, -0.8917948904014636 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 574 AS count, 3 AS depth, 5 AS parent_id, -0.5933532428480727 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 22 AS count, 3 AS depth, 9 AS parent_id, 0.980186152154738 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 254 AS count, 3 AS depth, 9 AS parent_id, 0.31342257392982453 AS "Estimator" UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 2 AS depth, 8 AS parent_id, 1.283237703452152 AS "Estimator") AS "Values"), 
"DT_Output_295" AS 
(SELECT "DT_node_lookup_295"."KEY" AS "KEY", "DT_node_lookup_295".node_id_2 AS node_id_2, "DT_node_data_295".node_id AS node_id, "DT_node_data_295".feature AS feature, "DT_node_data_295".threshold AS threshold, "DT_node_data_295".count AS count, "DT_node_data_295".depth AS depth, "DT_node_data_295".parent_id AS parent_id, "DT_node_data_295"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_295" LEFT OUTER JOIN "DT_node_data_295" ON "DT_node_lookup_295".node_id_2 = "DT_node_data_295".node_id), 
"GB_Tree_29_5" AS 
(SELECT "DT_Output_295"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3", 0.0 AS "Score_4", "DT_Output_295"."Estimator" AS "Score_5", 0.0 AS "Score_6", 0.0 AS "Score_7", 0.0 AS "Score_8", 0.0 AS "Score_9" 
FROM "DT_Output_295")
 SELECT "Score_Union_CTE_esu_36"."KEY", "Score_Union_CTE_esu_36"."Score_0", "Score_Union_CTE_esu_36"."Score_1", "Score_Union_CTE_esu_36"."Score_2", "Score_Union_CTE_esu_36"."Score_3", "Score_Union_CTE_esu_36"."Score_4", "Score_Union_CTE_esu_36"."Score_5", "Score_Union_CTE_esu_36"."Score_6", "Score_Union_CTE_esu_36"."Score_7", "Score_Union_CTE_esu_36"."Score_8", "Score_Union_CTE_esu_36"."Score_9" 
FROM (SELECT "GB_Tree_28_8"."KEY" AS "KEY", "GB_Tree_28_8"."Score_0" AS "Score_0", "GB_Tree_28_8"."Score_1" AS "Score_1", "GB_Tree_28_8"."Score_2" AS "Score_2", "GB_Tree_28_8"."Score_3" AS "Score_3", "GB_Tree_28_8"."Score_4" AS "Score_4", "GB_Tree_28_8"."Score_5" AS "Score_5", "GB_Tree_28_8"."Score_6" AS "Score_6", "GB_Tree_28_8"."Score_7" AS "Score_7", "GB_Tree_28_8"."Score_8" AS "Score_8", "GB_Tree_28_8"."Score_9" AS "Score_9" 
FROM "GB_Tree_28_8" UNION ALL SELECT "GB_Tree_28_9"."KEY" AS "KEY", "GB_Tree_28_9"."Score_0" AS "Score_0", "GB_Tree_28_9"."Score_1" AS "Score_1", "GB_Tree_28_9"."Score_2" AS "Score_2", "GB_Tree_28_9"."Score_3" AS "Score_3", "GB_Tree_28_9"."Score_4" AS "Score_4", "GB_Tree_28_9"."Score_5" AS "Score_5", "GB_Tree_28_9"."Score_6" AS "Score_6", "GB_Tree_28_9"."Score_7" AS "Score_7", "GB_Tree_28_9"."Score_8" AS "Score_8", "GB_Tree_28_9"."Score_9" AS "Score_9" 
FROM "GB_Tree_28_9" UNION ALL SELECT "GB_Tree_29_0"."KEY" AS "KEY", "GB_Tree_29_0"."Score_0" AS "Score_0", "GB_Tree_29_0"."Score_1" AS "Score_1", "GB_Tree_29_0"."Score_2" AS "Score_2", "GB_Tree_29_0"."Score_3" AS "Score_3", "GB_Tree_29_0"."Score_4" AS "Score_4", "GB_Tree_29_0"."Score_5" AS "Score_5", "GB_Tree_29_0"."Score_6" AS "Score_6", "GB_Tree_29_0"."Score_7" AS "Score_7", "GB_Tree_29_0"."Score_8" AS "Score_8", "GB_Tree_29_0"."Score_9" AS "Score_9" 
FROM "GB_Tree_29_0" UNION ALL SELECT "GB_Tree_29_1"."KEY" AS "KEY", "GB_Tree_29_1"."Score_0" AS "Score_0", "GB_Tree_29_1"."Score_1" AS "Score_1", "GB_Tree_29_1"."Score_2" AS "Score_2", "GB_Tree_29_1"."Score_3" AS "Score_3", "GB_Tree_29_1"."Score_4" AS "Score_4", "GB_Tree_29_1"."Score_5" AS "Score_5", "GB_Tree_29_1"."Score_6" AS "Score_6", "GB_Tree_29_1"."Score_7" AS "Score_7", "GB_Tree_29_1"."Score_8" AS "Score_8", "GB_Tree_29_1"."Score_9" AS "Score_9" 
FROM "GB_Tree_29_1" UNION ALL SELECT "GB_Tree_29_2"."KEY" AS "KEY", "GB_Tree_29_2"."Score_0" AS "Score_0", "GB_Tree_29_2"."Score_1" AS "Score_1", "GB_Tree_29_2"."Score_2" AS "Score_2", "GB_Tree_29_2"."Score_3" AS "Score_3", "GB_Tree_29_2"."Score_4" AS "Score_4", "GB_Tree_29_2"."Score_5" AS "Score_5", "GB_Tree_29_2"."Score_6" AS "Score_6", "GB_Tree_29_2"."Score_7" AS "Score_7", "GB_Tree_29_2"."Score_8" AS "Score_8", "GB_Tree_29_2"."Score_9" AS "Score_9" 
FROM "GB_Tree_29_2" UNION ALL SELECT "GB_Tree_29_3"."KEY" AS "KEY", "GB_Tree_29_3"."Score_0" AS "Score_0", "GB_Tree_29_3"."Score_1" AS "Score_1", "GB_Tree_29_3"."Score_2" AS "Score_2", "GB_Tree_29_3"."Score_3" AS "Score_3", "GB_Tree_29_3"."Score_4" AS "Score_4", "GB_Tree_29_3"."Score_5" AS "Score_5", "GB_Tree_29_3"."Score_6" AS "Score_6", "GB_Tree_29_3"."Score_7" AS "Score_7", "GB_Tree_29_3"."Score_8" AS "Score_8", "GB_Tree_29_3"."Score_9" AS "Score_9" 
FROM "GB_Tree_29_3" UNION ALL SELECT "GB_Tree_29_4"."KEY" AS "KEY", "GB_Tree_29_4"."Score_0" AS "Score_0", "GB_Tree_29_4"."Score_1" AS "Score_1", "GB_Tree_29_4"."Score_2" AS "Score_2", "GB_Tree_29_4"."Score_3" AS "Score_3", "GB_Tree_29_4"."Score_4" AS "Score_4", "GB_Tree_29_4"."Score_5" AS "Score_5", "GB_Tree_29_4"."Score_6" AS "Score_6", "GB_Tree_29_4"."Score_7" AS "Score_7", "GB_Tree_29_4"."Score_8" AS "Score_8", "GB_Tree_29_4"."Score_9" AS "Score_9" 
FROM "GB_Tree_29_4" UNION ALL SELECT "GB_Tree_29_5"."KEY" AS "KEY", "GB_Tree_29_5"."Score_0" AS "Score_0", "GB_Tree_29_5"."Score_1" AS "Score_1", "GB_Tree_29_5"."Score_2" AS "Score_2", "GB_Tree_29_5"."Score_3" AS "Score_3", "GB_Tree_29_5"."Score_4" AS "Score_4", "GB_Tree_29_5"."Score_5" AS "Score_5", "GB_Tree_29_5"."Score_6" AS "Score_6", "GB_Tree_29_5"."Score_7" AS "Score_7", "GB_Tree_29_5"."Score_8" AS "Score_8", "GB_Tree_29_5"."Score_9" AS "Score_9" 
FROM "GB_Tree_29_5") AS "Score_Union_CTE_esu_36"), 
"Score_Union_CTE_37" AS 
(WITH "DT_node_lookup_296" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_28" <= 5.5) THEN CASE WHEN ("ADS"."Feature_29" <= 2.5) THEN CASE WHEN ("ADS"."Feature_59" <= 2.5) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_21" <= 0.5) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_46" <= 11.5) THEN CASE WHEN ("ADS"."Feature_29" <= 0.5) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_43" <= 2.5) THEN 13 ELSE 14 END END END AS node_id_2 
FROM digits AS "ADS"), 
"DT_node_data_296" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 2 AS parent_id, 1.4301569164115775 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 161 AS count, 3 AS depth, 2 AS parent_id, 0.7872962399299668 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 22 AS count, 3 AS depth, 5 AS parent_id, -0.6774280957287039 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 214 AS count, 3 AS depth, 5 AS parent_id, -0.9064815654703319 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 141 AS count, 3 AS depth, 9 AS parent_id, -0.9449017357089474 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 830 AS count, 3 AS depth, 9 AS parent_id, -0.489238149387355 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 45 AS count, 3 AS depth, 12 AS parent_id, -0.7843378721967451 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 23 AS count, 3 AS depth, 12 AS parent_id, 0.921906601032342 AS "Estimator") AS "Values"), 
"DT_Output_296" AS 
(SELECT "DT_node_lookup_296"."KEY" AS "KEY", "DT_node_lookup_296".node_id_2 AS node_id_2, "DT_node_data_296".node_id AS node_id, "DT_node_data_296".feature AS feature, "DT_node_data_296".threshold AS threshold, "DT_node_data_296".count AS count, "DT_node_data_296".depth AS depth, "DT_node_data_296".parent_id AS parent_id, "DT_node_data_296"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_296" LEFT OUTER JOIN "DT_node_data_296" ON "DT_node_lookup_296".node_id_2 = "DT_node_data_296".node_id), 
"GB_Tree_29_6" AS 
(SELECT "DT_Output_296"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3", 0.0 AS "Score_4", 0.0 AS "Score_5", "DT_Output_296"."Estimator" AS "Score_6", 0.0 AS "Score_7", 0.0 AS "Score_8", 0.0 AS "Score_9" 
FROM "DT_Output_296"), 
"DT_node_lookup_297" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_61" <= 1.5) THEN CASE WHEN ("ADS"."Feature_13" <= 12.5) THEN CASE WHEN ("ADS"."Feature_52" <= 1.5) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_58" <= 0.5) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_14" <= 9.5) THEN CASE WHEN ("ADS"."Feature_42" <= 10.5) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_28" <= 5.5) THEN 13 ELSE 14 END END END AS node_id_2 
FROM digits AS "ADS"), 
"DT_node_data_297" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 24 AS count, 3 AS depth, 2 AS parent_id, 0.9322134174633043 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 265 AS count, 3 AS depth, 2 AS parent_id, -0.41490080291172293 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 23 AS count, 3 AS depth, 5 AS parent_id, 1.1941465673990073 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 149 AS count, 3 AS depth, 5 AS parent_id, 0.4521137376937967 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 547 AS count, 3 AS depth, 9 AS parent_id, -0.9133924873320992 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 402 AS count, 3 AS depth, 9 AS parent_id, -0.9058456624225885 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 12 AS parent_id, -1.022032452490266 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 26 AS count, 3 AS depth, 12 AS parent_id, -0.9350774501750165 AS "Estimator") AS "Values"), 
"DT_Output_297" AS 
(SELECT "DT_node_lookup_297"."KEY" AS "KEY", "DT_node_lookup_297".node_id_2 AS node_id_2, "DT_node_data_297".node_id AS node_id, "DT_node_data_297".feature AS feature, "DT_node_data_297".threshold AS threshold, "DT_node_data_297".count AS count, "DT_node_data_297".depth AS depth, "DT_node_data_297".parent_id AS parent_id, "DT_node_data_297"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_297" LEFT OUTER JOIN "DT_node_data_297" ON "DT_node_lookup_297".node_id_2 = "DT_node_data_297".node_id), 
"GB_Tree_29_7" AS 
(SELECT "DT_Output_297"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3", 0.0 AS "Score_4", 0.0 AS "Score_5", 0.0 AS "Score_6", "DT_Output_297"."Estimator" AS "Score_7", 0.0 AS "Score_8", 0.0 AS "Score_9" 
FROM "DT_Output_297"), 
"DT_node_lookup_298" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_50" <= 3.5) THEN CASE WHEN ("ADS"."Feature_26" <= 12.5) THEN CASE WHEN ("ADS"."Feature_38" <= 0.5) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_54" <= 2.5) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_35" <= 5.5) THEN CASE WHEN ("ADS"."Feature_38" <= 0.5) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_51" <= 13.5) THEN 13 ELSE 14 END END END AS node_id_2 
FROM digits AS "ADS"), 
"DT_node_data_298" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 86 AS count, 3 AS depth, 2 AS parent_id, -0.9972405699266126 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 150 AS count, 3 AS depth, 2 AS parent_id, -0.745591741149564 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 196 AS count, 3 AS depth, 5 AS parent_id, -0.47265210656042833 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 33 AS count, 3 AS depth, 5 AS parent_id, 0.6749725582386151 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 95 AS count, 3 AS depth, 9 AS parent_id, -1.0270791485352087 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 265 AS count, 3 AS depth, 9 AS parent_id, -0.9144255675298312 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 347 AS count, 3 AS depth, 12 AS parent_id, 0.47705706494246175 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 265 AS count, 3 AS depth, 12 AS parent_id, -0.25536579954481803 AS "Estimator") AS "Values"), 
"DT_Output_298" AS 
(SELECT "DT_node_lookup_298"."KEY" AS "KEY", "DT_node_lookup_298".node_id_2 AS node_id_2, "DT_node_data_298".node_id AS node_id, "DT_node_data_298".feature AS feature, "DT_node_data_298".threshold AS threshold, "DT_node_data_298".count AS count, "DT_node_data_298".depth AS depth, "DT_node_data_298".parent_id AS parent_id, "DT_node_data_298"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_298" LEFT OUTER JOIN "DT_node_data_298" ON "DT_node_lookup_298".node_id_2 = "DT_node_data_298".node_id), 
"GB_Tree_29_8" AS 
(SELECT "DT_Output_298"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3", 0.0 AS "Score_4", 0.0 AS "Score_5", 0.0 AS "Score_6", 0.0 AS "Score_7", "DT_Output_298"."Estimator" AS "Score_8", 0.0 AS "Score_9" 
FROM "DT_Output_298"), 
"DT_node_lookup_299" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_42" <= 4.5) THEN CASE WHEN ("ADS"."Feature_36" <= 10.5) THEN CASE WHEN ("ADS"."Feature_21" <= 9.5) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_26" <= 12.5) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_34" <= 0.5) THEN CASE WHEN ("ADS"."Feature_19" <= 14.5) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_26" <= 11.5) THEN 13 ELSE 14 END END END AS node_id_2 
FROM digits AS "ADS"), 
"DT_node_data_299" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 124 AS count, 3 AS depth, 2 AS parent_id, -0.05435389115062805 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 150 AS count, 3 AS depth, 2 AS parent_id, 0.6400417809221771 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 275 AS count, 3 AS depth, 5 AS parent_id, -0.7342223201468685 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 142 AS count, 3 AS depth, 5 AS parent_id, 0.3050112008408712 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 46 AS count, 3 AS depth, 9 AS parent_id, -0.6686619490954386 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 9 AS parent_id, 3.521092389850288 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 298 AS count, 3 AS depth, 12 AS parent_id, -0.9274527364448417 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 401 AS count, 3 AS depth, 12 AS parent_id, -0.6697796364711207 AS "Estimator") AS "Values"), 
"DT_Output_299" AS 
(SELECT "DT_node_lookup_299"."KEY" AS "KEY", "DT_node_lookup_299".node_id_2 AS node_id_2, "DT_node_data_299".node_id AS node_id, "DT_node_data_299".feature AS feature, "DT_node_data_299".threshold AS threshold, "DT_node_data_299".count AS count, "DT_node_data_299".depth AS depth, "DT_node_data_299".parent_id AS parent_id, "DT_node_data_299"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_299" LEFT OUTER JOIN "DT_node_data_299" ON "DT_node_lookup_299".node_id_2 = "DT_node_data_299".node_id), 
"GB_Tree_29_9" AS 
(SELECT "DT_Output_299"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3", 0.0 AS "Score_4", 0.0 AS "Score_5", 0.0 AS "Score_6", 0.0 AS "Score_7", 0.0 AS "Score_8", "DT_Output_299"."Estimator" AS "Score_9" 
FROM "DT_Output_299"), 
"DT_node_lookup_300" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_28" <= 0.5) THEN CASE WHEN ("ADS"."Feature_21" <= 3.5) THEN CASE WHEN ("ADS"."Feature_43" <= 0.5) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_34" <= 3.0) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_33" <= 3.5) THEN CASE WHEN ("ADS"."Feature_18" <= 6.5) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_35" <= 0.5) THEN 13 ELSE 14 END END END AS node_id_2 
FROM digits AS "ADS"), 
"DT_node_data_300" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS count, 3 AS depth, 2 AS parent_id, 1.0415060718036373 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 107 AS count, 3 AS depth, 2 AS parent_id, -0.8736120647340836 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS count, 3 AS depth, 5 AS parent_id, -0.9399477466124949 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 130 AS count, 3 AS depth, 5 AS parent_id, 0.8919259429382297 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 339 AS count, 3 AS depth, 9 AS parent_id, -0.9041215968388572 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 603 AS count, 3 AS depth, 9 AS parent_id, -0.9101705294932808 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 16 AS count, 3 AS depth, 12 AS parent_id, 0.8517253193313477 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 233 AS count, 3 AS depth, 12 AS parent_id, -0.6866745951621782 AS "Estimator") AS "Values"), 
"DT_Output_300" AS 
(SELECT "DT_node_lookup_300"."KEY" AS "KEY", "DT_node_lookup_300".node_id_2 AS node_id_2, "DT_node_data_300".node_id AS node_id, "DT_node_data_300".feature AS feature, "DT_node_data_300".threshold AS threshold, "DT_node_data_300".count AS count, "DT_node_data_300".depth AS depth, "DT_node_data_300".parent_id AS parent_id, "DT_node_data_300"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_300" LEFT OUTER JOIN "DT_node_data_300" ON "DT_node_lookup_300".node_id_2 = "DT_node_data_300".node_id), 
"GB_Tree_30_0" AS 
(SELECT "DT_Output_300"."KEY" AS "KEY", "DT_Output_300"."Estimator" AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3", 0.0 AS "Score_4", 0.0 AS "Score_5", 0.0 AS "Score_6", 0.0 AS "Score_7", 0.0 AS "Score_8", 0.0 AS "Score_9" 
FROM "DT_Output_300"), 
"DT_node_lookup_301" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_19" <= 10.5) THEN CASE WHEN ("ADS"."Feature_3" <= 1.5) THEN CASE WHEN ("ADS"."Feature_35" <= 2.5) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_28" <= 1.5) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_45" <= 4.5) THEN CASE WHEN ("ADS"."Feature_9" <= 2.5) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_13" <= 15.5) THEN 13 ELSE 14 END END END AS node_id_2 
FROM digits AS "ADS"), 
"DT_node_data_301" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 3 AS depth, 2 AS parent_id, 1.2641691953142564 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 13 AS count, 3 AS depth, 2 AS parent_id, 0.20532297422137324 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 195 AS count, 3 AS depth, 5 AS parent_id, -0.9057343015199859 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 764 AS count, 3 AS depth, 5 AS parent_id, -0.9151157498431876 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 115 AS count, 3 AS depth, 9 AS parent_id, 0.8170413265865591 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 29 AS count, 3 AS depth, 9 AS parent_id, -0.9611691784636919 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 280 AS count, 3 AS depth, 12 AS parent_id, -0.331170288032906 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 39 AS count, 3 AS depth, 12 AS parent_id, 0.784636214377948 AS "Estimator") AS "Values"), 
"DT_Output_301" AS 
(SELECT "DT_node_lookup_301"."KEY" AS "KEY", "DT_node_lookup_301".node_id_2 AS node_id_2, "DT_node_data_301".node_id AS node_id, "DT_node_data_301".feature AS feature, "DT_node_data_301".threshold AS threshold, "DT_node_data_301".count AS count, "DT_node_data_301".depth AS depth, "DT_node_data_301".parent_id AS parent_id, "DT_node_data_301"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_301" LEFT OUTER JOIN "DT_node_data_301" ON "DT_node_lookup_301".node_id_2 = "DT_node_data_301".node_id), 
"GB_Tree_30_1" AS 
(SELECT "DT_Output_301"."KEY" AS "KEY", 0.0 AS "Score_0", "DT_Output_301"."Estimator" AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3", 0.0 AS "Score_4", 0.0 AS "Score_5", 0.0 AS "Score_6", 0.0 AS "Score_7", 0.0 AS "Score_8", 0.0 AS "Score_9" 
FROM "DT_Output_301"), 
"DT_node_lookup_302" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_26" <= 1.5) THEN CASE WHEN ("ADS"."Feature_61" <= 2.5) THEN CASE WHEN ("ADS"."Feature_27" <= 11.5) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_28" <= 3.5) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_2" <= 14.5) THEN CASE WHEN ("ADS"."Feature_55" <= 8.5) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_44" <= 0.5) THEN 13 ELSE 14 END END END AS node_id_2 
FROM digits AS "ADS"), 
"DT_node_data_302" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 73 AS count, 3 AS depth, 2 AS parent_id, -0.504084335697534 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 18 AS count, 3 AS depth, 2 AS parent_id, -0.9622480536975674 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 6 AS count, 3 AS depth, 5 AS parent_id, 1.1071938076102714 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 210 AS count, 3 AS depth, 5 AS parent_id, 0.5736083206623261 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1088 AS count, 3 AS depth, 9 AS parent_id, -0.44773329264181005 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 3 AS depth, 9 AS parent_id, -1.0342823646203902 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 8 AS count, 3 AS depth, 12 AS parent_id, 1.0135530152424523 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 32 AS count, 3 AS depth, 12 AS parent_id, 0.02175927719626002 AS "Estimator") AS "Values"), 
"DT_Output_302" AS 
(SELECT "DT_node_lookup_302"."KEY" AS "KEY", "DT_node_lookup_302".node_id_2 AS node_id_2, "DT_node_data_302".node_id AS node_id, "DT_node_data_302".feature AS feature, "DT_node_data_302".threshold AS threshold, "DT_node_data_302".count AS count, "DT_node_data_302".depth AS depth, "DT_node_data_302".parent_id AS parent_id, "DT_node_data_302"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_302" LEFT OUTER JOIN "DT_node_data_302" ON "DT_node_lookup_302".node_id_2 = "DT_node_data_302".node_id), 
"GB_Tree_30_2" AS 
(SELECT "DT_Output_302"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", "DT_Output_302"."Estimator" AS "Score_2", 0.0 AS "Score_3", 0.0 AS "Score_4", 0.0 AS "Score_5", 0.0 AS "Score_6", 0.0 AS "Score_7", 0.0 AS "Score_8", 0.0 AS "Score_9" 
FROM "DT_Output_302"), 
"DT_node_lookup_303" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_29" <= 10.5) THEN CASE WHEN ("ADS"."Feature_42" <= 6.5) THEN CASE WHEN ("ADS"."Feature_51" <= 10.5) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_14" <= 11.0) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_62" <= 9.5) THEN CASE WHEN ("ADS"."Feature_26" <= 1.5) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_13" <= 1.0) THEN 13 ELSE 14 END END END AS node_id_2 
FROM digits AS "ADS"), 
"DT_node_data_303" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 218 AS count, 3 AS depth, 2 AS parent_id, 0.7624774373207313 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 202 AS count, 3 AS depth, 2 AS parent_id, -0.1060323204727191 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 484 AS count, 3 AS depth, 5 AS parent_id, -0.6761389384085845 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS count, 3 AS depth, 5 AS parent_id, 1.1636111807362683 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 81 AS count, 3 AS depth, 9 AS parent_id, 0.17472257778620062 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 423 AS count, 3 AS depth, 9 AS parent_id, -0.9234635407174836 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 12 AS parent_id, -1.024996132091816 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 24 AS count, 3 AS depth, 12 AS parent_id, -0.9391454177805428 AS "Estimator") AS "Values"), 
"DT_Output_303" AS 
(SELECT "DT_node_lookup_303"."KEY" AS "KEY", "DT_node_lookup_303".node_id_2 AS node_id_2, "DT_node_data_303".node_id AS node_id, "DT_node_data_303".feature AS feature, "DT_node_data_303".threshold AS threshold, "DT_node_data_303".count AS count, "DT_node_data_303".depth AS depth, "DT_node_data_303".parent_id AS parent_id, "DT_node_data_303"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_303" LEFT OUTER JOIN "DT_node_data_303" ON "DT_node_lookup_303".node_id_2 = "DT_node_data_303".node_id), 
"GB_Tree_30_3" AS 
(SELECT "DT_Output_303"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", "DT_Output_303"."Estimator" AS "Score_3", 0.0 AS "Score_4", 0.0 AS "Score_5", 0.0 AS "Score_6", 0.0 AS "Score_7", 0.0 AS "Score_8", 0.0 AS "Score_9" 
FROM "DT_Output_303")
 SELECT "Score_Union_CTE_esu_37"."KEY", "Score_Union_CTE_esu_37"."Score_0", "Score_Union_CTE_esu_37"."Score_1", "Score_Union_CTE_esu_37"."Score_2", "Score_Union_CTE_esu_37"."Score_3", "Score_Union_CTE_esu_37"."Score_4", "Score_Union_CTE_esu_37"."Score_5", "Score_Union_CTE_esu_37"."Score_6", "Score_Union_CTE_esu_37"."Score_7", "Score_Union_CTE_esu_37"."Score_8", "Score_Union_CTE_esu_37"."Score_9" 
FROM (SELECT "GB_Tree_29_6"."KEY" AS "KEY", "GB_Tree_29_6"."Score_0" AS "Score_0", "GB_Tree_29_6"."Score_1" AS "Score_1", "GB_Tree_29_6"."Score_2" AS "Score_2", "GB_Tree_29_6"."Score_3" AS "Score_3", "GB_Tree_29_6"."Score_4" AS "Score_4", "GB_Tree_29_6"."Score_5" AS "Score_5", "GB_Tree_29_6"."Score_6" AS "Score_6", "GB_Tree_29_6"."Score_7" AS "Score_7", "GB_Tree_29_6"."Score_8" AS "Score_8", "GB_Tree_29_6"."Score_9" AS "Score_9" 
FROM "GB_Tree_29_6" UNION ALL SELECT "GB_Tree_29_7"."KEY" AS "KEY", "GB_Tree_29_7"."Score_0" AS "Score_0", "GB_Tree_29_7"."Score_1" AS "Score_1", "GB_Tree_29_7"."Score_2" AS "Score_2", "GB_Tree_29_7"."Score_3" AS "Score_3", "GB_Tree_29_7"."Score_4" AS "Score_4", "GB_Tree_29_7"."Score_5" AS "Score_5", "GB_Tree_29_7"."Score_6" AS "Score_6", "GB_Tree_29_7"."Score_7" AS "Score_7", "GB_Tree_29_7"."Score_8" AS "Score_8", "GB_Tree_29_7"."Score_9" AS "Score_9" 
FROM "GB_Tree_29_7" UNION ALL SELECT "GB_Tree_29_8"."KEY" AS "KEY", "GB_Tree_29_8"."Score_0" AS "Score_0", "GB_Tree_29_8"."Score_1" AS "Score_1", "GB_Tree_29_8"."Score_2" AS "Score_2", "GB_Tree_29_8"."Score_3" AS "Score_3", "GB_Tree_29_8"."Score_4" AS "Score_4", "GB_Tree_29_8"."Score_5" AS "Score_5", "GB_Tree_29_8"."Score_6" AS "Score_6", "GB_Tree_29_8"."Score_7" AS "Score_7", "GB_Tree_29_8"."Score_8" AS "Score_8", "GB_Tree_29_8"."Score_9" AS "Score_9" 
FROM "GB_Tree_29_8" UNION ALL SELECT "GB_Tree_29_9"."KEY" AS "KEY", "GB_Tree_29_9"."Score_0" AS "Score_0", "GB_Tree_29_9"."Score_1" AS "Score_1", "GB_Tree_29_9"."Score_2" AS "Score_2", "GB_Tree_29_9"."Score_3" AS "Score_3", "GB_Tree_29_9"."Score_4" AS "Score_4", "GB_Tree_29_9"."Score_5" AS "Score_5", "GB_Tree_29_9"."Score_6" AS "Score_6", "GB_Tree_29_9"."Score_7" AS "Score_7", "GB_Tree_29_9"."Score_8" AS "Score_8", "GB_Tree_29_9"."Score_9" AS "Score_9" 
FROM "GB_Tree_29_9" UNION ALL SELECT "GB_Tree_30_0"."KEY" AS "KEY", "GB_Tree_30_0"."Score_0" AS "Score_0", "GB_Tree_30_0"."Score_1" AS "Score_1", "GB_Tree_30_0"."Score_2" AS "Score_2", "GB_Tree_30_0"."Score_3" AS "Score_3", "GB_Tree_30_0"."Score_4" AS "Score_4", "GB_Tree_30_0"."Score_5" AS "Score_5", "GB_Tree_30_0"."Score_6" AS "Score_6", "GB_Tree_30_0"."Score_7" AS "Score_7", "GB_Tree_30_0"."Score_8" AS "Score_8", "GB_Tree_30_0"."Score_9" AS "Score_9" 
FROM "GB_Tree_30_0" UNION ALL SELECT "GB_Tree_30_1"."KEY" AS "KEY", "GB_Tree_30_1"."Score_0" AS "Score_0", "GB_Tree_30_1"."Score_1" AS "Score_1", "GB_Tree_30_1"."Score_2" AS "Score_2", "GB_Tree_30_1"."Score_3" AS "Score_3", "GB_Tree_30_1"."Score_4" AS "Score_4", "GB_Tree_30_1"."Score_5" AS "Score_5", "GB_Tree_30_1"."Score_6" AS "Score_6", "GB_Tree_30_1"."Score_7" AS "Score_7", "GB_Tree_30_1"."Score_8" AS "Score_8", "GB_Tree_30_1"."Score_9" AS "Score_9" 
FROM "GB_Tree_30_1" UNION ALL SELECT "GB_Tree_30_2"."KEY" AS "KEY", "GB_Tree_30_2"."Score_0" AS "Score_0", "GB_Tree_30_2"."Score_1" AS "Score_1", "GB_Tree_30_2"."Score_2" AS "Score_2", "GB_Tree_30_2"."Score_3" AS "Score_3", "GB_Tree_30_2"."Score_4" AS "Score_4", "GB_Tree_30_2"."Score_5" AS "Score_5", "GB_Tree_30_2"."Score_6" AS "Score_6", "GB_Tree_30_2"."Score_7" AS "Score_7", "GB_Tree_30_2"."Score_8" AS "Score_8", "GB_Tree_30_2"."Score_9" AS "Score_9" 
FROM "GB_Tree_30_2" UNION ALL SELECT "GB_Tree_30_3"."KEY" AS "KEY", "GB_Tree_30_3"."Score_0" AS "Score_0", "GB_Tree_30_3"."Score_1" AS "Score_1", "GB_Tree_30_3"."Score_2" AS "Score_2", "GB_Tree_30_3"."Score_3" AS "Score_3", "GB_Tree_30_3"."Score_4" AS "Score_4", "GB_Tree_30_3"."Score_5" AS "Score_5", "GB_Tree_30_3"."Score_6" AS "Score_6", "GB_Tree_30_3"."Score_7" AS "Score_7", "GB_Tree_30_3"."Score_8" AS "Score_8", "GB_Tree_30_3"."Score_9" AS "Score_9" 
FROM "GB_Tree_30_3") AS "Score_Union_CTE_esu_37"), 
"Score_Union_CTE_38" AS 
(WITH "DT_node_lookup_304" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_30" <= 8.5) THEN CASE WHEN ("ADS"."Feature_41" <= 6.5) THEN CASE WHEN ("ADS"."Feature_22" <= 14.5) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_19" <= 13.5) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_29" <= 4.0) THEN 9 ELSE CASE WHEN ("ADS"."Feature_19" <= 3.5) THEN 11 ELSE 12 END END END AS node_id_2 
FROM digits AS "ADS"), 
"DT_node_data_304" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1221 AS count, 3 AS depth, 2 AS parent_id, -0.35706562027201644 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS count, 3 AS depth, 2 AS parent_id, 0.8787360791516657 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 61 AS count, 3 AS depth, 5 AS parent_id, 0.4007192408797064 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 26 AS count, 3 AS depth, 5 AS parent_id, 0.9824057393342569 AS "Estimator" UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 2 AS depth, 8 AS parent_id, 1.213478103614901 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 48 AS count, 3 AS depth, 10 AS parent_id, -0.9199573995373433 AS "Estimator" UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 75 AS count, 3 AS depth, 10 AS parent_id, 0.9094870789994204 AS "Estimator") AS "Values"), 
"DT_Output_304" AS 
(SELECT "DT_node_lookup_304"."KEY" AS "KEY", "DT_node_lookup_304".node_id_2 AS node_id_2, "DT_node_data_304".node_id AS node_id, "DT_node_data_304".feature AS feature, "DT_node_data_304".threshold AS threshold, "DT_node_data_304".count AS count, "DT_node_data_304".depth AS depth, "DT_node_data_304".parent_id AS parent_id, "DT_node_data_304"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_304" LEFT OUTER JOIN "DT_node_data_304" ON "DT_node_lookup_304".node_id_2 = "DT_node_data_304".node_id), 
"GB_Tree_30_4" AS 
(SELECT "DT_Output_304"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3", "DT_Output_304"."Estimator" AS "Score_4", 0.0 AS "Score_5", 0.0 AS "Score_6", 0.0 AS "Score_7", 0.0 AS "Score_8", 0.0 AS "Score_9" 
FROM "DT_Output_304"), 
"DT_node_lookup_305" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_21" <= 0.5) THEN CASE WHEN ("ADS"."Feature_5" <= 1.5) THEN CASE WHEN ("ADS"."Feature_9" <= 13.5) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_2" <= 1.5) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_36" <= 1.5) THEN CASE WHEN ("ADS"."Feature_13" <= 6.5) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_2" <= 11.5) THEN 13 ELSE 14 END END END AS node_id_2 
FROM digits AS "ADS"), 
"DT_node_data_305" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 204 AS count, 3 AS depth, 2 AS parent_id, -0.6885420908246211 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 2 AS parent_id, 1.1098251119146694 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 50 AS count, 3 AS depth, 5 AS parent_id, -0.4732302130917547 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 138 AS count, 3 AS depth, 5 AS parent_id, 0.7866579002354807 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 34 AS count, 3 AS depth, 9 AS parent_id, 0.6903954530247179 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 189 AS count, 3 AS depth, 9 AS parent_id, -0.745731318472279 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 728 AS count, 3 AS depth, 12 AS parent_id, -0.870988593611714 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 93 AS count, 3 AS depth, 12 AS parent_id, 0.005696434480295903 AS "Estimator") AS "Values"), 
"DT_Output_305" AS 
(SELECT "DT_node_lookup_305"."KEY" AS "KEY", "DT_node_lookup_305".node_id_2 AS node_id_2, "DT_node_data_305".node_id AS node_id, "DT_node_data_305".feature AS feature, "DT_node_data_305".threshold AS threshold, "DT_node_data_305".count AS count, "DT_node_data_305".depth AS depth, "DT_node_data_305".parent_id AS parent_id, "DT_node_data_305"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_305" LEFT OUTER JOIN "DT_node_data_305" ON "DT_node_lookup_305".node_id_2 = "DT_node_data_305".node_id), 
"GB_Tree_30_5" AS 
(SELECT "DT_Output_305"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3", 0.0 AS "Score_4", "DT_Output_305"."Estimator" AS "Score_5", 0.0 AS "Score_6", 0.0 AS "Score_7", 0.0 AS "Score_8", 0.0 AS "Score_9" 
FROM "DT_Output_305"), 
"DT_node_lookup_306" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_34" <= 13.5) THEN CASE WHEN ("ADS"."Feature_59" <= 7.5) THEN CASE WHEN ("ADS"."Feature_13" <= 0.5) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_27" <= 11.5) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_61" <= 6.5) THEN CASE WHEN ("ADS"."Feature_4" <= 0.5) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_12" <= 13.5) THEN 13 ELSE 14 END END END AS node_id_2 
FROM digits AS "ADS"), 
"DT_node_data_306" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 11 AS count, 3 AS depth, 2 AS parent_id, 1.0663357787616619 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 98 AS count, 3 AS depth, 2 AS parent_id, -0.43485111182576336 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 501 AS count, 3 AS depth, 5 AS parent_id, -0.6060481551218356 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 428 AS count, 3 AS depth, 5 AS parent_id, -0.8705476247323731 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 9 AS parent_id, 1.135830685151215 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 235 AS count, 3 AS depth, 9 AS parent_id, -0.4509319385402797 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 131 AS count, 3 AS depth, 12 AS parent_id, 0.9263549547136437 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 32 AS count, 3 AS depth, 12 AS parent_id, -0.41758006605287606 AS "Estimator") AS "Values"), 
"DT_Output_306" AS 
(SELECT "DT_node_lookup_306"."KEY" AS "KEY", "DT_node_lookup_306".node_id_2 AS node_id_2, "DT_node_data_306".node_id AS node_id, "DT_node_data_306".feature AS feature, "DT_node_data_306".threshold AS threshold, "DT_node_data_306".count AS count, "DT_node_data_306".depth AS depth, "DT_node_data_306".parent_id AS parent_id, "DT_node_data_306"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_306" LEFT OUTER JOIN "DT_node_data_306" ON "DT_node_lookup_306".node_id_2 = "DT_node_data_306".node_id), 
"GB_Tree_30_6" AS 
(SELECT "DT_Output_306"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3", 0.0 AS "Score_4", 0.0 AS "Score_5", "DT_Output_306"."Estimator" AS "Score_6", 0.0 AS "Score_7", 0.0 AS "Score_8", 0.0 AS "Score_9" 
FROM "DT_Output_306"), 
"DT_node_lookup_307" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_60" <= 0.5) THEN CASE WHEN ("ADS"."Feature_50" <= 9.5) THEN CASE WHEN ("ADS"."Feature_17" <= 1.5) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_27" <= 15.5) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_5" <= 11.5) THEN CASE WHEN ("ADS"."Feature_38" <= 4.5) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_27" <= 11.5) THEN 13 ELSE 14 END END END AS node_id_2 
FROM digits AS "ADS"), 
"DT_node_data_307" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 50 AS count, 3 AS depth, 2 AS parent_id, 0.8200737811167081 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 20 AS count, 3 AS depth, 2 AS parent_id, -0.5523875756553838 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 10 AS count, 3 AS depth, 5 AS parent_id, 0.8881492934023344 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 6 AS count, 3 AS depth, 5 AS parent_id, 1.0899860258871825 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 720 AS count, 3 AS depth, 9 AS parent_id, -0.8453011797389198 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 342 AS count, 3 AS depth, 9 AS parent_id, -0.07614391000569574 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 146 AS count, 3 AS depth, 12 AS parent_id, 0.8129704634634831 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 143 AS count, 3 AS depth, 12 AS parent_id, -0.7640105252957284 AS "Estimator") AS "Values"), 
"DT_Output_307" AS 
(SELECT "DT_node_lookup_307"."KEY" AS "KEY", "DT_node_lookup_307".node_id_2 AS node_id_2, "DT_node_data_307".node_id AS node_id, "DT_node_data_307".feature AS feature, "DT_node_data_307".threshold AS threshold, "DT_node_data_307".count AS count, "DT_node_data_307".depth AS depth, "DT_node_data_307".parent_id AS parent_id, "DT_node_data_307"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_307" LEFT OUTER JOIN "DT_node_data_307" ON "DT_node_lookup_307".node_id_2 = "DT_node_data_307".node_id), 
"GB_Tree_30_7" AS 
(SELECT "DT_Output_307"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3", 0.0 AS "Score_4", 0.0 AS "Score_5", 0.0 AS "Score_6", "DT_Output_307"."Estimator" AS "Score_7", 0.0 AS "Score_8", 0.0 AS "Score_9" 
FROM "DT_Output_307"), 
"DT_node_lookup_308" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_58" <= 6.5) THEN CASE WHEN ("ADS"."Feature_34" <= 8.5) THEN CASE WHEN ("ADS"."Feature_35" <= 11.5) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_10" <= 15.5) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_42" <= 11.5) THEN CASE WHEN ("ADS"."Feature_59" <= 1.5) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_12" <= 15.5) THEN 13 ELSE 14 END END END AS node_id_2 
FROM digits AS "ADS"), 
"DT_node_data_308" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 240 AS count, 3 AS depth, 2 AS parent_id, -0.10699654741886448 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 127 AS count, 3 AS depth, 2 AS parent_id, 0.8244517789393773 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 494 AS count, 3 AS depth, 5 AS parent_id, -0.4016861430163977 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 31 AS count, 3 AS depth, 5 AS parent_id, 0.5780246777797584 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 9 AS parent_id, -1.1004014040455905 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 443 AS count, 3 AS depth, 9 AS parent_id, -0.6759261667629411 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 71 AS count, 3 AS depth, 12 AS parent_id, 0.6876616222504468 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 30 AS count, 3 AS depth, 12 AS parent_id, -0.8534601783135576 AS "Estimator") AS "Values"), 
"DT_Output_308" AS 
(SELECT "DT_node_lookup_308"."KEY" AS "KEY", "DT_node_lookup_308".node_id_2 AS node_id_2, "DT_node_data_308".node_id AS node_id, "DT_node_data_308".feature AS feature, "DT_node_data_308".threshold AS threshold, "DT_node_data_308".count AS count, "DT_node_data_308".depth AS depth, "DT_node_data_308".parent_id AS parent_id, "DT_node_data_308"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_308" LEFT OUTER JOIN "DT_node_data_308" ON "DT_node_lookup_308".node_id_2 = "DT_node_data_308".node_id), 
"GB_Tree_30_8" AS 
(SELECT "DT_Output_308"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3", 0.0 AS "Score_4", 0.0 AS "Score_5", 0.0 AS "Score_6", 0.0 AS "Score_7", "DT_Output_308"."Estimator" AS "Score_8", 0.0 AS "Score_9" 
FROM "DT_Output_308"), 
"DT_node_lookup_309" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_44" <= 1.5) THEN CASE WHEN ("ADS"."Feature_22" <= 10.5) THEN CASE WHEN ("ADS"."Feature_42" <= 1.5) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_25" <= 2.5) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_11" <= 6.5) THEN CASE WHEN ("ADS"."Feature_4" <= 5.5) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_21" <= 11.5) THEN 13 ELSE 14 END END END AS node_id_2 
FROM digits AS "ADS"), 
"DT_node_data_309" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 174 AS count, 3 AS depth, 2 AS parent_id, 0.5407521753147536 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 246 AS count, 3 AS depth, 2 AS parent_id, -0.3469313596281648 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 5 AS parent_id, 1.105845647142413 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 5 AS parent_id, 1.2978026074054623 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 9 AS count, 3 AS depth, 9 AS parent_id, -1.0294790608602646 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 67 AS count, 3 AS depth, 9 AS parent_id, -0.6215034718124388 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 616 AS count, 3 AS depth, 12 AS parent_id, -0.7273474413887497 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 323 AS count, 3 AS depth, 12 AS parent_id, 0.22950187314671255 AS "Estimator") AS "Values"), 
"DT_Output_309" AS 
(SELECT "DT_node_lookup_309"."KEY" AS "KEY", "DT_node_lookup_309".node_id_2 AS node_id_2, "DT_node_data_309".node_id AS node_id, "DT_node_data_309".feature AS feature, "DT_node_data_309".threshold AS threshold, "DT_node_data_309".count AS count, "DT_node_data_309".depth AS depth, "DT_node_data_309".parent_id AS parent_id, "DT_node_data_309"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_309" LEFT OUTER JOIN "DT_node_data_309" ON "DT_node_lookup_309".node_id_2 = "DT_node_data_309".node_id), 
"GB_Tree_30_9" AS 
(SELECT "DT_Output_309"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3", 0.0 AS "Score_4", 0.0 AS "Score_5", 0.0 AS "Score_6", 0.0 AS "Score_7", 0.0 AS "Score_8", "DT_Output_309"."Estimator" AS "Score_9" 
FROM "DT_Output_309"), 
"DT_node_lookup_310" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_36" <= 0.5) THEN CASE WHEN ("ADS"."Feature_33" <= 0.5) THEN CASE WHEN ("ADS"."Feature_59" <= 4.5) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_43" <= 13.5) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_42" <= 9.5) THEN CASE WHEN ("ADS"."Feature_28" <= 0.5) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_36" <= 3.5) THEN 13 ELSE 14 END END END AS node_id_2 
FROM digits AS "ADS"), 
"DT_node_data_310" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 3 AS depth, 2 AS parent_id, -0.9393383615899763 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 64 AS count, 3 AS depth, 2 AS parent_id, -0.7548727231699945 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 146 AS count, 3 AS depth, 5 AS parent_id, 0.8138028481512184 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 7 AS count, 3 AS depth, 5 AS parent_id, -0.946891194508681 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 28 AS count, 3 AS depth, 9 AS parent_id, -0.9222062654494148 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 742 AS count, 3 AS depth, 9 AS parent_id, -0.9068499439601688 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 24 AS count, 3 AS depth, 12 AS parent_id, 0.40181193247774094 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 424 AS count, 3 AS depth, 12 AS parent_id, -0.904486641637312 AS "Estimator") AS "Values"), 
"DT_Output_310" AS 
(SELECT "DT_node_lookup_310"."KEY" AS "KEY", "DT_node_lookup_310".node_id_2 AS node_id_2, "DT_node_data_310".node_id AS node_id, "DT_node_data_310".feature AS feature, "DT_node_data_310".threshold AS threshold, "DT_node_data_310".count AS count, "DT_node_data_310".depth AS depth, "DT_node_data_310".parent_id AS parent_id, "DT_node_data_310"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_310" LEFT OUTER JOIN "DT_node_data_310" ON "DT_node_lookup_310".node_id_2 = "DT_node_data_310".node_id), 
"GB_Tree_31_0" AS 
(SELECT "DT_Output_310"."KEY" AS "KEY", "DT_Output_310"."Estimator" AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3", 0.0 AS "Score_4", 0.0 AS "Score_5", 0.0 AS "Score_6", 0.0 AS "Score_7", 0.0 AS "Score_8", 0.0 AS "Score_9" 
FROM "DT_Output_310"), 
"DT_node_lookup_311" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_27" <= 15.5) THEN CASE WHEN ("ADS"."Feature_59" <= 0.5) THEN CASE WHEN ("ADS"."Feature_17" <= 2.5) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_19" <= 15.5) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_51" <= 15.5) THEN CASE WHEN ("ADS"."Feature_63" <= 1.5) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_20" <= 9.0) THEN 13 ELSE 14 END END END AS node_id_2 
FROM digits AS "ADS"), 
"DT_node_data_311" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 33 AS count, 3 AS depth, 2 AS parent_id, -0.0457108055139495 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 8 AS count, 3 AS depth, 2 AS parent_id, 1.127730420105932 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1038 AS count, 3 AS depth, 5 AS parent_id, -0.4711760755989708 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 62 AS count, 3 AS depth, 5 AS parent_id, -0.5333292409571774 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 194 AS count, 3 AS depth, 9 AS parent_id, -0.3896660277765817 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 19 AS count, 3 AS depth, 9 AS parent_id, 1.0022424711242586 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 13 AS count, 3 AS depth, 12 AS parent_id, -0.490381703125061 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 70 AS count, 3 AS depth, 12 AS parent_id, 0.9743206829803157 AS "Estimator") AS "Values"), 
"DT_Output_311" AS 
(SELECT "DT_node_lookup_311"."KEY" AS "KEY", "DT_node_lookup_311".node_id_2 AS node_id_2, "DT_node_data_311".node_id AS node_id, "DT_node_data_311".feature AS feature, "DT_node_data_311".threshold AS threshold, "DT_node_data_311".count AS count, "DT_node_data_311".depth AS depth, "DT_node_data_311".parent_id AS parent_id, "DT_node_data_311"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_311" LEFT OUTER JOIN "DT_node_data_311" ON "DT_node_lookup_311".node_id_2 = "DT_node_data_311".node_id), 
"GB_Tree_31_1" AS 
(SELECT "DT_Output_311"."KEY" AS "KEY", 0.0 AS "Score_0", "DT_Output_311"."Estimator" AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3", 0.0 AS "Score_4", 0.0 AS "Score_5", 0.0 AS "Score_6", 0.0 AS "Score_7", 0.0 AS "Score_8", 0.0 AS "Score_9" 
FROM "DT_Output_311")
 SELECT "Score_Union_CTE_esu_38"."KEY", "Score_Union_CTE_esu_38"."Score_0", "Score_Union_CTE_esu_38"."Score_1", "Score_Union_CTE_esu_38"."Score_2", "Score_Union_CTE_esu_38"."Score_3", "Score_Union_CTE_esu_38"."Score_4", "Score_Union_CTE_esu_38"."Score_5", "Score_Union_CTE_esu_38"."Score_6", "Score_Union_CTE_esu_38"."Score_7", "Score_Union_CTE_esu_38"."Score_8", "Score_Union_CTE_esu_38"."Score_9" 
FROM (SELECT "GB_Tree_30_4"."KEY" AS "KEY", "GB_Tree_30_4"."Score_0" AS "Score_0", "GB_Tree_30_4"."Score_1" AS "Score_1", "GB_Tree_30_4"."Score_2" AS "Score_2", "GB_Tree_30_4"."Score_3" AS "Score_3", "GB_Tree_30_4"."Score_4" AS "Score_4", "GB_Tree_30_4"."Score_5" AS "Score_5", "GB_Tree_30_4"."Score_6" AS "Score_6", "GB_Tree_30_4"."Score_7" AS "Score_7", "GB_Tree_30_4"."Score_8" AS "Score_8", "GB_Tree_30_4"."Score_9" AS "Score_9" 
FROM "GB_Tree_30_4" UNION ALL SELECT "GB_Tree_30_5"."KEY" AS "KEY", "GB_Tree_30_5"."Score_0" AS "Score_0", "GB_Tree_30_5"."Score_1" AS "Score_1", "GB_Tree_30_5"."Score_2" AS "Score_2", "GB_Tree_30_5"."Score_3" AS "Score_3", "GB_Tree_30_5"."Score_4" AS "Score_4", "GB_Tree_30_5"."Score_5" AS "Score_5", "GB_Tree_30_5"."Score_6" AS "Score_6", "GB_Tree_30_5"."Score_7" AS "Score_7", "GB_Tree_30_5"."Score_8" AS "Score_8", "GB_Tree_30_5"."Score_9" AS "Score_9" 
FROM "GB_Tree_30_5" UNION ALL SELECT "GB_Tree_30_6"."KEY" AS "KEY", "GB_Tree_30_6"."Score_0" AS "Score_0", "GB_Tree_30_6"."Score_1" AS "Score_1", "GB_Tree_30_6"."Score_2" AS "Score_2", "GB_Tree_30_6"."Score_3" AS "Score_3", "GB_Tree_30_6"."Score_4" AS "Score_4", "GB_Tree_30_6"."Score_5" AS "Score_5", "GB_Tree_30_6"."Score_6" AS "Score_6", "GB_Tree_30_6"."Score_7" AS "Score_7", "GB_Tree_30_6"."Score_8" AS "Score_8", "GB_Tree_30_6"."Score_9" AS "Score_9" 
FROM "GB_Tree_30_6" UNION ALL SELECT "GB_Tree_30_7"."KEY" AS "KEY", "GB_Tree_30_7"."Score_0" AS "Score_0", "GB_Tree_30_7"."Score_1" AS "Score_1", "GB_Tree_30_7"."Score_2" AS "Score_2", "GB_Tree_30_7"."Score_3" AS "Score_3", "GB_Tree_30_7"."Score_4" AS "Score_4", "GB_Tree_30_7"."Score_5" AS "Score_5", "GB_Tree_30_7"."Score_6" AS "Score_6", "GB_Tree_30_7"."Score_7" AS "Score_7", "GB_Tree_30_7"."Score_8" AS "Score_8", "GB_Tree_30_7"."Score_9" AS "Score_9" 
FROM "GB_Tree_30_7" UNION ALL SELECT "GB_Tree_30_8"."KEY" AS "KEY", "GB_Tree_30_8"."Score_0" AS "Score_0", "GB_Tree_30_8"."Score_1" AS "Score_1", "GB_Tree_30_8"."Score_2" AS "Score_2", "GB_Tree_30_8"."Score_3" AS "Score_3", "GB_Tree_30_8"."Score_4" AS "Score_4", "GB_Tree_30_8"."Score_5" AS "Score_5", "GB_Tree_30_8"."Score_6" AS "Score_6", "GB_Tree_30_8"."Score_7" AS "Score_7", "GB_Tree_30_8"."Score_8" AS "Score_8", "GB_Tree_30_8"."Score_9" AS "Score_9" 
FROM "GB_Tree_30_8" UNION ALL SELECT "GB_Tree_30_9"."KEY" AS "KEY", "GB_Tree_30_9"."Score_0" AS "Score_0", "GB_Tree_30_9"."Score_1" AS "Score_1", "GB_Tree_30_9"."Score_2" AS "Score_2", "GB_Tree_30_9"."Score_3" AS "Score_3", "GB_Tree_30_9"."Score_4" AS "Score_4", "GB_Tree_30_9"."Score_5" AS "Score_5", "GB_Tree_30_9"."Score_6" AS "Score_6", "GB_Tree_30_9"."Score_7" AS "Score_7", "GB_Tree_30_9"."Score_8" AS "Score_8", "GB_Tree_30_9"."Score_9" AS "Score_9" 
FROM "GB_Tree_30_9" UNION ALL SELECT "GB_Tree_31_0"."KEY" AS "KEY", "GB_Tree_31_0"."Score_0" AS "Score_0", "GB_Tree_31_0"."Score_1" AS "Score_1", "GB_Tree_31_0"."Score_2" AS "Score_2", "GB_Tree_31_0"."Score_3" AS "Score_3", "GB_Tree_31_0"."Score_4" AS "Score_4", "GB_Tree_31_0"."Score_5" AS "Score_5", "GB_Tree_31_0"."Score_6" AS "Score_6", "GB_Tree_31_0"."Score_7" AS "Score_7", "GB_Tree_31_0"."Score_8" AS "Score_8", "GB_Tree_31_0"."Score_9" AS "Score_9" 
FROM "GB_Tree_31_0" UNION ALL SELECT "GB_Tree_31_1"."KEY" AS "KEY", "GB_Tree_31_1"."Score_0" AS "Score_0", "GB_Tree_31_1"."Score_1" AS "Score_1", "GB_Tree_31_1"."Score_2" AS "Score_2", "GB_Tree_31_1"."Score_3" AS "Score_3", "GB_Tree_31_1"."Score_4" AS "Score_4", "GB_Tree_31_1"."Score_5" AS "Score_5", "GB_Tree_31_1"."Score_6" AS "Score_6", "GB_Tree_31_1"."Score_7" AS "Score_7", "GB_Tree_31_1"."Score_8" AS "Score_8", "GB_Tree_31_1"."Score_9" AS "Score_9" 
FROM "GB_Tree_31_1") AS "Score_Union_CTE_esu_38"), 
"Score_Union_CTE_39" AS 
(WITH "DT_node_lookup_312" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_45" <= 6.5) THEN CASE WHEN ("ADS"."Feature_53" <= 3.5) THEN CASE WHEN ("ADS"."Feature_34" <= 2.5) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_26" <= 8.5) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_55" <= 0.5) THEN CASE WHEN ("ADS"."Feature_33" <= 1.5) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_52" <= 15.0) THEN 13 ELSE 14 END END END AS node_id_2 
FROM digits AS "ADS"), 
"DT_node_data_312" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 72 AS count, 3 AS depth, 2 AS parent_id, -0.7808984037586307 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 211 AS count, 3 AS depth, 2 AS parent_id, -0.9105171920401783 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 165 AS count, 3 AS depth, 5 AS parent_id, 0.7630009913176006 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 94 AS count, 3 AS depth, 5 AS parent_id, -0.30261715794110716 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 466 AS count, 3 AS depth, 9 AS parent_id, -0.778804809693568 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 390 AS count, 3 AS depth, 9 AS parent_id, -0.9083159377117785 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 28 AS count, 3 AS depth, 12 AS parent_id, -0.921493745707339 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 11 AS count, 3 AS depth, 12 AS parent_id, 0.9365955195164645 AS "Estimator") AS "Values"), 
"DT_Output_312" AS 
(SELECT "DT_node_lookup_312"."KEY" AS "KEY", "DT_node_lookup_312".node_id_2 AS node_id_2, "DT_node_data_312".node_id AS node_id, "DT_node_data_312".feature AS feature, "DT_node_data_312".threshold AS threshold, "DT_node_data_312".count AS count, "DT_node_data_312".depth AS depth, "DT_node_data_312".parent_id AS parent_id, "DT_node_data_312"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_312" LEFT OUTER JOIN "DT_node_data_312" ON "DT_node_lookup_312".node_id_2 = "DT_node_data_312".node_id), 
"GB_Tree_31_2" AS 
(SELECT "DT_Output_312"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", "DT_Output_312"."Estimator" AS "Score_2", 0.0 AS "Score_3", 0.0 AS "Score_4", 0.0 AS "Score_5", 0.0 AS "Score_6", 0.0 AS "Score_7", 0.0 AS "Score_8", 0.0 AS "Score_9" 
FROM "DT_Output_312"), 
"DT_node_lookup_313" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_18" <= 10.5) THEN CASE WHEN ("ADS"."Feature_4" <= 15.5) THEN CASE WHEN ("ADS"."Feature_46" <= 6.5) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_29" <= 6.5) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_27" <= 9.5) THEN CASE WHEN ("ADS"."Feature_26" <= 6.5) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_37" <= 15.5) THEN 13 ELSE 14 END END END AS node_id_2 
FROM digits AS "ADS"), 
"DT_node_data_313" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 363 AS count, 3 AS depth, 2 AS parent_id, -0.47502907082323803 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 95 AS count, 3 AS depth, 2 AS parent_id, 0.5261907164274282 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 56 AS count, 3 AS depth, 5 AS parent_id, 1.0810069006227347 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 116 AS count, 3 AS depth, 5 AS parent_id, 0.2522775180397245 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 71 AS count, 3 AS depth, 9 AS parent_id, 0.5687668605062498 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 341 AS count, 3 AS depth, 9 AS parent_id, -0.911370583739455 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 337 AS count, 3 AS depth, 12 AS parent_id, -0.9545093079535056 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 58 AS count, 3 AS depth, 12 AS parent_id, 0.21760027619014274 AS "Estimator") AS "Values"), 
"DT_Output_313" AS 
(SELECT "DT_node_lookup_313"."KEY" AS "KEY", "DT_node_lookup_313".node_id_2 AS node_id_2, "DT_node_data_313".node_id AS node_id, "DT_node_data_313".feature AS feature, "DT_node_data_313".threshold AS threshold, "DT_node_data_313".count AS count, "DT_node_data_313".depth AS depth, "DT_node_data_313".parent_id AS parent_id, "DT_node_data_313"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_313" LEFT OUTER JOIN "DT_node_data_313" ON "DT_node_lookup_313".node_id_2 = "DT_node_data_313".node_id), 
"GB_Tree_31_3" AS 
(SELECT "DT_Output_313"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", "DT_Output_313"."Estimator" AS "Score_3", 0.0 AS "Score_4", 0.0 AS "Score_5", 0.0 AS "Score_6", 0.0 AS "Score_7", 0.0 AS "Score_8", 0.0 AS "Score_9" 
FROM "DT_Output_313"), 
"DT_node_lookup_314" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_2" <= 0.5) THEN CASE WHEN ("ADS"."Feature_38" <= 0.5) THEN CASE WHEN ("ADS"."Feature_30" <= 10.5) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_44" <= 10.5) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_22" <= 14.5) THEN CASE WHEN ("ADS"."Feature_4" <= 0.5) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_22" <= 15.5) THEN 13 ELSE 14 END END END AS node_id_2 
FROM digits AS "ADS"), 
"DT_node_data_314" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 141 AS count, 3 AS depth, 2 AS parent_id, -0.4915528218373837 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 2 AS parent_id, 1.0347795028375546 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 85 AS count, 3 AS depth, 5 AS parent_id, -0.17898036157355054 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 127 AS count, 3 AS depth, 5 AS parent_id, 0.8826339931641336 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 31 AS count, 3 AS depth, 9 AS parent_id, 0.849459073965013 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1048 AS count, 3 AS depth, 9 AS parent_id, -0.5634704953676197 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 12 AS parent_id, 1.2069419830264134 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 3 AS depth, 12 AS parent_id, 0.14254630778514243 AS "Estimator") AS "Values"), 
"DT_Output_314" AS 
(SELECT "DT_node_lookup_314"."KEY" AS "KEY", "DT_node_lookup_314".node_id_2 AS node_id_2, "DT_node_data_314".node_id AS node_id, "DT_node_data_314".feature AS feature, "DT_node_data_314".threshold AS threshold, "DT_node_data_314".count AS count, "DT_node_data_314".depth AS depth, "DT_node_data_314".parent_id AS parent_id, "DT_node_data_314"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_314" LEFT OUTER JOIN "DT_node_data_314" ON "DT_node_lookup_314".node_id_2 = "DT_node_data_314".node_id), 
"GB_Tree_31_4" AS 
(SELECT "DT_Output_314"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3", "DT_Output_314"."Estimator" AS "Score_4", 0.0 AS "Score_5", 0.0 AS "Score_6", 0.0 AS "Score_7", 0.0 AS "Score_8", 0.0 AS "Score_9" 
FROM "DT_Output_314"), 
"DT_node_lookup_315" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_21" <= 3.5) THEN CASE WHEN ("ADS"."Feature_5" <= 2.5) THEN CASE WHEN ("ADS"."Feature_9" <= 13.5) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_2" <= 1.5) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_36" <= 0.5) THEN CASE WHEN ("ADS"."Feature_6" <= 1.5) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_1" <= 5.0) THEN 13 ELSE 14 END END END AS node_id_2 
FROM digits AS "ADS"), 
"DT_node_data_315" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 286 AS count, 3 AS depth, 2 AS parent_id, -0.5931543069813758 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 3 AS depth, 2 AS parent_id, 0.7559337101121889 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 57 AS count, 3 AS depth, 5 AS parent_id, -0.49582940925347563 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 158 AS count, 3 AS depth, 5 AS parent_id, 0.7078820163286051 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 176 AS count, 3 AS depth, 9 AS parent_id, -0.9150513839617492 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 13 AS count, 3 AS depth, 9 AS parent_id, 0.8874994659584294 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 741 AS count, 3 AS depth, 12 AS parent_id, -0.9115946025312996 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 3 AS depth, 12 AS parent_id, 0.6932660262048611 AS "Estimator") AS "Values"), 
"DT_Output_315" AS 
(SELECT "DT_node_lookup_315"."KEY" AS "KEY", "DT_node_lookup_315".node_id_2 AS node_id_2, "DT_node_data_315".node_id AS node_id, "DT_node_data_315".feature AS feature, "DT_node_data_315".threshold AS threshold, "DT_node_data_315".count AS count, "DT_node_data_315".depth AS depth, "DT_node_data_315".parent_id AS parent_id, "DT_node_data_315"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_315" LEFT OUTER JOIN "DT_node_data_315" ON "DT_node_lookup_315".node_id_2 = "DT_node_data_315".node_id), 
"GB_Tree_31_5" AS 
(SELECT "DT_Output_315"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3", 0.0 AS "Score_4", "DT_Output_315"."Estimator" AS "Score_5", 0.0 AS "Score_6", 0.0 AS "Score_7", 0.0 AS "Score_8", 0.0 AS "Score_9" 
FROM "DT_Output_315"), 
"DT_node_lookup_316" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_2" <= 1.5) THEN CASE WHEN ("ADS"."Feature_29" <= 1.5) THEN CASE WHEN ("ADS"."Feature_5" <= 11.0) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_46" <= 5.5) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_42" <= 15.5) THEN CASE WHEN ("ADS"."Feature_58" <= 1.5) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_20" <= 4.5) THEN 13 ELSE 14 END END END AS node_id_2 
FROM digits AS "ADS"), 
"DT_node_data_316" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 96 AS count, 3 AS depth, 2 AS parent_id, 0.8133594401189256 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 2 AS parent_id, 1.5235728594021118 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 301 AS count, 3 AS depth, 5 AS parent_id, -0.9154573917442719 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 60 AS count, 3 AS depth, 5 AS parent_id, 0.8009825643860143 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 46 AS count, 3 AS depth, 9 AS parent_id, -0.9485429856124946 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 828 AS count, 3 AS depth, 9 AS parent_id, -0.8344224505399721 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 69 AS count, 3 AS depth, 12 AS parent_id, 0.7120053035820735 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 36 AS count, 3 AS depth, 12 AS parent_id, -0.9493768798383915 AS "Estimator") AS "Values"), 
"DT_Output_316" AS 
(SELECT "DT_node_lookup_316"."KEY" AS "KEY", "DT_node_lookup_316".node_id_2 AS node_id_2, "DT_node_data_316".node_id AS node_id, "DT_node_data_316".feature AS feature, "DT_node_data_316".threshold AS threshold, "DT_node_data_316".count AS count, "DT_node_data_316".depth AS depth, "DT_node_data_316".parent_id AS parent_id, "DT_node_data_316"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_316" LEFT OUTER JOIN "DT_node_data_316" ON "DT_node_lookup_316".node_id_2 = "DT_node_data_316".node_id), 
"GB_Tree_31_6" AS 
(SELECT "DT_Output_316"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3", 0.0 AS "Score_4", 0.0 AS "Score_5", "DT_Output_316"."Estimator" AS "Score_6", 0.0 AS "Score_7", 0.0 AS "Score_8", 0.0 AS "Score_9" 
FROM "DT_Output_316"), 
"DT_node_lookup_317" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_61" <= 1.5) THEN CASE WHEN ("ADS"."Feature_19" <= 3.5) THEN CASE WHEN ("ADS"."Feature_58" <= 0.5) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_52" <= 0.5) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_14" <= 9.5) THEN CASE WHEN ("ADS"."Feature_42" <= 10.5) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_53" <= 5.5) THEN 13 ELSE 14 END END END AS node_id_2 
FROM digits AS "ADS"), 
"DT_node_data_317" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 21 AS count, 3 AS depth, 2 AS parent_id, 1.1071490031776154 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 160 AS count, 3 AS depth, 2 AS parent_id, 0.4667473405687296 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 11 AS count, 3 AS depth, 5 AS parent_id, 0.9174014825303276 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 269 AS count, 3 AS depth, 5 AS parent_id, -0.2962214918349659 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 547 AS count, 3 AS depth, 9 AS parent_id, -0.9113843017830002 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 402 AS count, 3 AS depth, 9 AS parent_id, -0.9049720112644639 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 12 AS parent_id, -1.0045700622526588 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 26 AS count, 3 AS depth, 12 AS parent_id, -0.9325145187216618 AS "Estimator") AS "Values"), 
"DT_Output_317" AS 
(SELECT "DT_node_lookup_317"."KEY" AS "KEY", "DT_node_lookup_317".node_id_2 AS node_id_2, "DT_node_data_317".node_id AS node_id, "DT_node_data_317".feature AS feature, "DT_node_data_317".threshold AS threshold, "DT_node_data_317".count AS count, "DT_node_data_317".depth AS depth, "DT_node_data_317".parent_id AS parent_id, "DT_node_data_317"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_317" LEFT OUTER JOIN "DT_node_data_317" ON "DT_node_lookup_317".node_id_2 = "DT_node_data_317".node_id), 
"GB_Tree_31_7" AS 
(SELECT "DT_Output_317"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3", 0.0 AS "Score_4", 0.0 AS "Score_5", 0.0 AS "Score_6", "DT_Output_317"."Estimator" AS "Score_7", 0.0 AS "Score_8", 0.0 AS "Score_9" 
FROM "DT_Output_317"), 
"DT_node_lookup_318" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_50" <= 3.5) THEN CASE WHEN ("ADS"."Feature_26" <= 12.5) THEN CASE WHEN ("ADS"."Feature_38" <= 0.5) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_54" <= 2.5) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_27" <= 13.5) THEN CASE WHEN ("ADS"."Feature_12" <= 5.5) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_51" <= 15.5) THEN 13 ELSE 14 END END END AS node_id_2 
FROM digits AS "ADS"), 
"DT_node_data_318" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 86 AS count, 3 AS depth, 2 AS parent_id, -0.9846651441180003 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 150 AS count, 3 AS depth, 2 AS parent_id, -0.7260143408980082 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 196 AS count, 3 AS depth, 5 AS parent_id, -0.45127606938712445 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 33 AS count, 3 AS depth, 5 AS parent_id, 0.6111693736317135 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 132 AS count, 3 AS depth, 9 AS parent_id, 0.3726104614248044 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 517 AS count, 3 AS depth, 9 AS parent_id, -0.2971626697815876 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 236 AS count, 3 AS depth, 12 AS parent_id, 0.529487378006867 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 87 AS count, 3 AS depth, 12 AS parent_id, -0.3752442091409623 AS "Estimator") AS "Values"), 
"DT_Output_318" AS 
(SELECT "DT_node_lookup_318"."KEY" AS "KEY", "DT_node_lookup_318".node_id_2 AS node_id_2, "DT_node_data_318".node_id AS node_id, "DT_node_data_318".feature AS feature, "DT_node_data_318".threshold AS threshold, "DT_node_data_318".count AS count, "DT_node_data_318".depth AS depth, "DT_node_data_318".parent_id AS parent_id, "DT_node_data_318"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_318" LEFT OUTER JOIN "DT_node_data_318" ON "DT_node_lookup_318".node_id_2 = "DT_node_data_318".node_id), 
"GB_Tree_31_8" AS 
(SELECT "DT_Output_318"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3", 0.0 AS "Score_4", 0.0 AS "Score_5", 0.0 AS "Score_6", 0.0 AS "Score_7", "DT_Output_318"."Estimator" AS "Score_8", 0.0 AS "Score_9" 
FROM "DT_Output_318"), 
"DT_node_lookup_319" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_43" <= 6.5) THEN CASE WHEN ("ADS"."Feature_60" <= 4.5) THEN CASE WHEN ("ADS"."Feature_2" <= 0.5) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_18" <= 4.5) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_17" <= 14.5) THEN CASE WHEN ("ADS"."Feature_42" <= 2.5) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_19" <= 14.0) THEN 13 ELSE 14 END END END AS node_id_2 
FROM digits AS "ADS"), 
"DT_node_data_319" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS count, 3 AS depth, 2 AS parent_id, 1.269567894639038 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 31 AS count, 3 AS depth, 2 AS parent_id, 0.5573713109819354 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 140 AS count, 3 AS depth, 5 AS parent_id, -0.8744913672313398 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 522 AS count, 3 AS depth, 5 AS parent_id, 0.2828272436539239 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 176 AS count, 3 AS depth, 9 AS parent_id, -0.631961989855387 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 556 AS count, 3 AS depth, 9 AS parent_id, -0.6715533351006296 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 6 AS count, 3 AS depth, 12 AS parent_id, -0.9152459322184637 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 12 AS parent_id, 1.2686074489188017 AS "Estimator") AS "Values"), 
"DT_Output_319" AS 
(SELECT "DT_node_lookup_319"."KEY" AS "KEY", "DT_node_lookup_319".node_id_2 AS node_id_2, "DT_node_data_319".node_id AS node_id, "DT_node_data_319".feature AS feature, "DT_node_data_319".threshold AS threshold, "DT_node_data_319".count AS count, "DT_node_data_319".depth AS depth, "DT_node_data_319".parent_id AS parent_id, "DT_node_data_319"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_319" LEFT OUTER JOIN "DT_node_data_319" ON "DT_node_lookup_319".node_id_2 = "DT_node_data_319".node_id), 
"GB_Tree_31_9" AS 
(SELECT "DT_Output_319"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3", 0.0 AS "Score_4", 0.0 AS "Score_5", 0.0 AS "Score_6", 0.0 AS "Score_7", 0.0 AS "Score_8", "DT_Output_319"."Estimator" AS "Score_9" 
FROM "DT_Output_319")
 SELECT "Score_Union_CTE_esu_39"."KEY", "Score_Union_CTE_esu_39"."Score_0", "Score_Union_CTE_esu_39"."Score_1", "Score_Union_CTE_esu_39"."Score_2", "Score_Union_CTE_esu_39"."Score_3", "Score_Union_CTE_esu_39"."Score_4", "Score_Union_CTE_esu_39"."Score_5", "Score_Union_CTE_esu_39"."Score_6", "Score_Union_CTE_esu_39"."Score_7", "Score_Union_CTE_esu_39"."Score_8", "Score_Union_CTE_esu_39"."Score_9" 
FROM (SELECT "GB_Tree_31_2"."KEY" AS "KEY", "GB_Tree_31_2"."Score_0" AS "Score_0", "GB_Tree_31_2"."Score_1" AS "Score_1", "GB_Tree_31_2"."Score_2" AS "Score_2", "GB_Tree_31_2"."Score_3" AS "Score_3", "GB_Tree_31_2"."Score_4" AS "Score_4", "GB_Tree_31_2"."Score_5" AS "Score_5", "GB_Tree_31_2"."Score_6" AS "Score_6", "GB_Tree_31_2"."Score_7" AS "Score_7", "GB_Tree_31_2"."Score_8" AS "Score_8", "GB_Tree_31_2"."Score_9" AS "Score_9" 
FROM "GB_Tree_31_2" UNION ALL SELECT "GB_Tree_31_3"."KEY" AS "KEY", "GB_Tree_31_3"."Score_0" AS "Score_0", "GB_Tree_31_3"."Score_1" AS "Score_1", "GB_Tree_31_3"."Score_2" AS "Score_2", "GB_Tree_31_3"."Score_3" AS "Score_3", "GB_Tree_31_3"."Score_4" AS "Score_4", "GB_Tree_31_3"."Score_5" AS "Score_5", "GB_Tree_31_3"."Score_6" AS "Score_6", "GB_Tree_31_3"."Score_7" AS "Score_7", "GB_Tree_31_3"."Score_8" AS "Score_8", "GB_Tree_31_3"."Score_9" AS "Score_9" 
FROM "GB_Tree_31_3" UNION ALL SELECT "GB_Tree_31_4"."KEY" AS "KEY", "GB_Tree_31_4"."Score_0" AS "Score_0", "GB_Tree_31_4"."Score_1" AS "Score_1", "GB_Tree_31_4"."Score_2" AS "Score_2", "GB_Tree_31_4"."Score_3" AS "Score_3", "GB_Tree_31_4"."Score_4" AS "Score_4", "GB_Tree_31_4"."Score_5" AS "Score_5", "GB_Tree_31_4"."Score_6" AS "Score_6", "GB_Tree_31_4"."Score_7" AS "Score_7", "GB_Tree_31_4"."Score_8" AS "Score_8", "GB_Tree_31_4"."Score_9" AS "Score_9" 
FROM "GB_Tree_31_4" UNION ALL SELECT "GB_Tree_31_5"."KEY" AS "KEY", "GB_Tree_31_5"."Score_0" AS "Score_0", "GB_Tree_31_5"."Score_1" AS "Score_1", "GB_Tree_31_5"."Score_2" AS "Score_2", "GB_Tree_31_5"."Score_3" AS "Score_3", "GB_Tree_31_5"."Score_4" AS "Score_4", "GB_Tree_31_5"."Score_5" AS "Score_5", "GB_Tree_31_5"."Score_6" AS "Score_6", "GB_Tree_31_5"."Score_7" AS "Score_7", "GB_Tree_31_5"."Score_8" AS "Score_8", "GB_Tree_31_5"."Score_9" AS "Score_9" 
FROM "GB_Tree_31_5" UNION ALL SELECT "GB_Tree_31_6"."KEY" AS "KEY", "GB_Tree_31_6"."Score_0" AS "Score_0", "GB_Tree_31_6"."Score_1" AS "Score_1", "GB_Tree_31_6"."Score_2" AS "Score_2", "GB_Tree_31_6"."Score_3" AS "Score_3", "GB_Tree_31_6"."Score_4" AS "Score_4", "GB_Tree_31_6"."Score_5" AS "Score_5", "GB_Tree_31_6"."Score_6" AS "Score_6", "GB_Tree_31_6"."Score_7" AS "Score_7", "GB_Tree_31_6"."Score_8" AS "Score_8", "GB_Tree_31_6"."Score_9" AS "Score_9" 
FROM "GB_Tree_31_6" UNION ALL SELECT "GB_Tree_31_7"."KEY" AS "KEY", "GB_Tree_31_7"."Score_0" AS "Score_0", "GB_Tree_31_7"."Score_1" AS "Score_1", "GB_Tree_31_7"."Score_2" AS "Score_2", "GB_Tree_31_7"."Score_3" AS "Score_3", "GB_Tree_31_7"."Score_4" AS "Score_4", "GB_Tree_31_7"."Score_5" AS "Score_5", "GB_Tree_31_7"."Score_6" AS "Score_6", "GB_Tree_31_7"."Score_7" AS "Score_7", "GB_Tree_31_7"."Score_8" AS "Score_8", "GB_Tree_31_7"."Score_9" AS "Score_9" 
FROM "GB_Tree_31_7" UNION ALL SELECT "GB_Tree_31_8"."KEY" AS "KEY", "GB_Tree_31_8"."Score_0" AS "Score_0", "GB_Tree_31_8"."Score_1" AS "Score_1", "GB_Tree_31_8"."Score_2" AS "Score_2", "GB_Tree_31_8"."Score_3" AS "Score_3", "GB_Tree_31_8"."Score_4" AS "Score_4", "GB_Tree_31_8"."Score_5" AS "Score_5", "GB_Tree_31_8"."Score_6" AS "Score_6", "GB_Tree_31_8"."Score_7" AS "Score_7", "GB_Tree_31_8"."Score_8" AS "Score_8", "GB_Tree_31_8"."Score_9" AS "Score_9" 
FROM "GB_Tree_31_8" UNION ALL SELECT "GB_Tree_31_9"."KEY" AS "KEY", "GB_Tree_31_9"."Score_0" AS "Score_0", "GB_Tree_31_9"."Score_1" AS "Score_1", "GB_Tree_31_9"."Score_2" AS "Score_2", "GB_Tree_31_9"."Score_3" AS "Score_3", "GB_Tree_31_9"."Score_4" AS "Score_4", "GB_Tree_31_9"."Score_5" AS "Score_5", "GB_Tree_31_9"."Score_6" AS "Score_6", "GB_Tree_31_9"."Score_7" AS "Score_7", "GB_Tree_31_9"."Score_8" AS "Score_8", "GB_Tree_31_9"."Score_9" AS "Score_9" 
FROM "GB_Tree_31_9") AS "Score_Union_CTE_esu_39"), 
"Score_Union_CTE" AS 
(SELECT "Score_Union_CTEbig_esu"."KEY" AS "KEY", "Score_Union_CTEbig_esu"."Score_0" AS "Score_0", "Score_Union_CTEbig_esu"."Score_1" AS "Score_1", "Score_Union_CTEbig_esu"."Score_2" AS "Score_2", "Score_Union_CTEbig_esu"."Score_3" AS "Score_3", "Score_Union_CTEbig_esu"."Score_4" AS "Score_4", "Score_Union_CTEbig_esu"."Score_5" AS "Score_5", "Score_Union_CTEbig_esu"."Score_6" AS "Score_6", "Score_Union_CTEbig_esu"."Score_7" AS "Score_7", "Score_Union_CTEbig_esu"."Score_8" AS "Score_8", "Score_Union_CTEbig_esu"."Score_9" AS "Score_9" 
FROM (SELECT "Score_Union_CTE_0"."KEY" AS "KEY", "Score_Union_CTE_0"."Score_0" AS "Score_0", "Score_Union_CTE_0"."Score_1" AS "Score_1", "Score_Union_CTE_0"."Score_2" AS "Score_2", "Score_Union_CTE_0"."Score_3" AS "Score_3", "Score_Union_CTE_0"."Score_4" AS "Score_4", "Score_Union_CTE_0"."Score_5" AS "Score_5", "Score_Union_CTE_0"."Score_6" AS "Score_6", "Score_Union_CTE_0"."Score_7" AS "Score_7", "Score_Union_CTE_0"."Score_8" AS "Score_8", "Score_Union_CTE_0"."Score_9" AS "Score_9" 
FROM "Score_Union_CTE_0" UNION ALL SELECT "Score_Union_CTE_1"."KEY" AS "KEY", "Score_Union_CTE_1"."Score_0" AS "Score_0", "Score_Union_CTE_1"."Score_1" AS "Score_1", "Score_Union_CTE_1"."Score_2" AS "Score_2", "Score_Union_CTE_1"."Score_3" AS "Score_3", "Score_Union_CTE_1"."Score_4" AS "Score_4", "Score_Union_CTE_1"."Score_5" AS "Score_5", "Score_Union_CTE_1"."Score_6" AS "Score_6", "Score_Union_CTE_1"."Score_7" AS "Score_7", "Score_Union_CTE_1"."Score_8" AS "Score_8", "Score_Union_CTE_1"."Score_9" AS "Score_9" 
FROM "Score_Union_CTE_1" UNION ALL SELECT "Score_Union_CTE_2"."KEY" AS "KEY", "Score_Union_CTE_2"."Score_0" AS "Score_0", "Score_Union_CTE_2"."Score_1" AS "Score_1", "Score_Union_CTE_2"."Score_2" AS "Score_2", "Score_Union_CTE_2"."Score_3" AS "Score_3", "Score_Union_CTE_2"."Score_4" AS "Score_4", "Score_Union_CTE_2"."Score_5" AS "Score_5", "Score_Union_CTE_2"."Score_6" AS "Score_6", "Score_Union_CTE_2"."Score_7" AS "Score_7", "Score_Union_CTE_2"."Score_8" AS "Score_8", "Score_Union_CTE_2"."Score_9" AS "Score_9" 
FROM "Score_Union_CTE_2" UNION ALL SELECT "Score_Union_CTE_3"."KEY" AS "KEY", "Score_Union_CTE_3"."Score_0" AS "Score_0", "Score_Union_CTE_3"."Score_1" AS "Score_1", "Score_Union_CTE_3"."Score_2" AS "Score_2", "Score_Union_CTE_3"."Score_3" AS "Score_3", "Score_Union_CTE_3"."Score_4" AS "Score_4", "Score_Union_CTE_3"."Score_5" AS "Score_5", "Score_Union_CTE_3"."Score_6" AS "Score_6", "Score_Union_CTE_3"."Score_7" AS "Score_7", "Score_Union_CTE_3"."Score_8" AS "Score_8", "Score_Union_CTE_3"."Score_9" AS "Score_9" 
FROM "Score_Union_CTE_3" UNION ALL SELECT "Score_Union_CTE_4"."KEY" AS "KEY", "Score_Union_CTE_4"."Score_0" AS "Score_0", "Score_Union_CTE_4"."Score_1" AS "Score_1", "Score_Union_CTE_4"."Score_2" AS "Score_2", "Score_Union_CTE_4"."Score_3" AS "Score_3", "Score_Union_CTE_4"."Score_4" AS "Score_4", "Score_Union_CTE_4"."Score_5" AS "Score_5", "Score_Union_CTE_4"."Score_6" AS "Score_6", "Score_Union_CTE_4"."Score_7" AS "Score_7", "Score_Union_CTE_4"."Score_8" AS "Score_8", "Score_Union_CTE_4"."Score_9" AS "Score_9" 
FROM "Score_Union_CTE_4" UNION ALL SELECT "Score_Union_CTE_5"."KEY" AS "KEY", "Score_Union_CTE_5"."Score_0" AS "Score_0", "Score_Union_CTE_5"."Score_1" AS "Score_1", "Score_Union_CTE_5"."Score_2" AS "Score_2", "Score_Union_CTE_5"."Score_3" AS "Score_3", "Score_Union_CTE_5"."Score_4" AS "Score_4", "Score_Union_CTE_5"."Score_5" AS "Score_5", "Score_Union_CTE_5"."Score_6" AS "Score_6", "Score_Union_CTE_5"."Score_7" AS "Score_7", "Score_Union_CTE_5"."Score_8" AS "Score_8", "Score_Union_CTE_5"."Score_9" AS "Score_9" 
FROM "Score_Union_CTE_5" UNION ALL SELECT "Score_Union_CTE_6"."KEY" AS "KEY", "Score_Union_CTE_6"."Score_0" AS "Score_0", "Score_Union_CTE_6"."Score_1" AS "Score_1", "Score_Union_CTE_6"."Score_2" AS "Score_2", "Score_Union_CTE_6"."Score_3" AS "Score_3", "Score_Union_CTE_6"."Score_4" AS "Score_4", "Score_Union_CTE_6"."Score_5" AS "Score_5", "Score_Union_CTE_6"."Score_6" AS "Score_6", "Score_Union_CTE_6"."Score_7" AS "Score_7", "Score_Union_CTE_6"."Score_8" AS "Score_8", "Score_Union_CTE_6"."Score_9" AS "Score_9" 
FROM "Score_Union_CTE_6" UNION ALL SELECT "Score_Union_CTE_7"."KEY" AS "KEY", "Score_Union_CTE_7"."Score_0" AS "Score_0", "Score_Union_CTE_7"."Score_1" AS "Score_1", "Score_Union_CTE_7"."Score_2" AS "Score_2", "Score_Union_CTE_7"."Score_3" AS "Score_3", "Score_Union_CTE_7"."Score_4" AS "Score_4", "Score_Union_CTE_7"."Score_5" AS "Score_5", "Score_Union_CTE_7"."Score_6" AS "Score_6", "Score_Union_CTE_7"."Score_7" AS "Score_7", "Score_Union_CTE_7"."Score_8" AS "Score_8", "Score_Union_CTE_7"."Score_9" AS "Score_9" 
FROM "Score_Union_CTE_7" UNION ALL SELECT "Score_Union_CTE_8"."KEY" AS "KEY", "Score_Union_CTE_8"."Score_0" AS "Score_0", "Score_Union_CTE_8"."Score_1" AS "Score_1", "Score_Union_CTE_8"."Score_2" AS "Score_2", "Score_Union_CTE_8"."Score_3" AS "Score_3", "Score_Union_CTE_8"."Score_4" AS "Score_4", "Score_Union_CTE_8"."Score_5" AS "Score_5", "Score_Union_CTE_8"."Score_6" AS "Score_6", "Score_Union_CTE_8"."Score_7" AS "Score_7", "Score_Union_CTE_8"."Score_8" AS "Score_8", "Score_Union_CTE_8"."Score_9" AS "Score_9" 
FROM "Score_Union_CTE_8" UNION ALL SELECT "Score_Union_CTE_9"."KEY" AS "KEY", "Score_Union_CTE_9"."Score_0" AS "Score_0", "Score_Union_CTE_9"."Score_1" AS "Score_1", "Score_Union_CTE_9"."Score_2" AS "Score_2", "Score_Union_CTE_9"."Score_3" AS "Score_3", "Score_Union_CTE_9"."Score_4" AS "Score_4", "Score_Union_CTE_9"."Score_5" AS "Score_5", "Score_Union_CTE_9"."Score_6" AS "Score_6", "Score_Union_CTE_9"."Score_7" AS "Score_7", "Score_Union_CTE_9"."Score_8" AS "Score_8", "Score_Union_CTE_9"."Score_9" AS "Score_9" 
FROM "Score_Union_CTE_9" UNION ALL SELECT "Score_Union_CTE_10"."KEY" AS "KEY", "Score_Union_CTE_10"."Score_0" AS "Score_0", "Score_Union_CTE_10"."Score_1" AS "Score_1", "Score_Union_CTE_10"."Score_2" AS "Score_2", "Score_Union_CTE_10"."Score_3" AS "Score_3", "Score_Union_CTE_10"."Score_4" AS "Score_4", "Score_Union_CTE_10"."Score_5" AS "Score_5", "Score_Union_CTE_10"."Score_6" AS "Score_6", "Score_Union_CTE_10"."Score_7" AS "Score_7", "Score_Union_CTE_10"."Score_8" AS "Score_8", "Score_Union_CTE_10"."Score_9" AS "Score_9" 
FROM "Score_Union_CTE_10" UNION ALL SELECT "Score_Union_CTE_11"."KEY" AS "KEY", "Score_Union_CTE_11"."Score_0" AS "Score_0", "Score_Union_CTE_11"."Score_1" AS "Score_1", "Score_Union_CTE_11"."Score_2" AS "Score_2", "Score_Union_CTE_11"."Score_3" AS "Score_3", "Score_Union_CTE_11"."Score_4" AS "Score_4", "Score_Union_CTE_11"."Score_5" AS "Score_5", "Score_Union_CTE_11"."Score_6" AS "Score_6", "Score_Union_CTE_11"."Score_7" AS "Score_7", "Score_Union_CTE_11"."Score_8" AS "Score_8", "Score_Union_CTE_11"."Score_9" AS "Score_9" 
FROM "Score_Union_CTE_11" UNION ALL SELECT "Score_Union_CTE_12"."KEY" AS "KEY", "Score_Union_CTE_12"."Score_0" AS "Score_0", "Score_Union_CTE_12"."Score_1" AS "Score_1", "Score_Union_CTE_12"."Score_2" AS "Score_2", "Score_Union_CTE_12"."Score_3" AS "Score_3", "Score_Union_CTE_12"."Score_4" AS "Score_4", "Score_Union_CTE_12"."Score_5" AS "Score_5", "Score_Union_CTE_12"."Score_6" AS "Score_6", "Score_Union_CTE_12"."Score_7" AS "Score_7", "Score_Union_CTE_12"."Score_8" AS "Score_8", "Score_Union_CTE_12"."Score_9" AS "Score_9" 
FROM "Score_Union_CTE_12" UNION ALL SELECT "Score_Union_CTE_13"."KEY" AS "KEY", "Score_Union_CTE_13"."Score_0" AS "Score_0", "Score_Union_CTE_13"."Score_1" AS "Score_1", "Score_Union_CTE_13"."Score_2" AS "Score_2", "Score_Union_CTE_13"."Score_3" AS "Score_3", "Score_Union_CTE_13"."Score_4" AS "Score_4", "Score_Union_CTE_13"."Score_5" AS "Score_5", "Score_Union_CTE_13"."Score_6" AS "Score_6", "Score_Union_CTE_13"."Score_7" AS "Score_7", "Score_Union_CTE_13"."Score_8" AS "Score_8", "Score_Union_CTE_13"."Score_9" AS "Score_9" 
FROM "Score_Union_CTE_13" UNION ALL SELECT "Score_Union_CTE_14"."KEY" AS "KEY", "Score_Union_CTE_14"."Score_0" AS "Score_0", "Score_Union_CTE_14"."Score_1" AS "Score_1", "Score_Union_CTE_14"."Score_2" AS "Score_2", "Score_Union_CTE_14"."Score_3" AS "Score_3", "Score_Union_CTE_14"."Score_4" AS "Score_4", "Score_Union_CTE_14"."Score_5" AS "Score_5", "Score_Union_CTE_14"."Score_6" AS "Score_6", "Score_Union_CTE_14"."Score_7" AS "Score_7", "Score_Union_CTE_14"."Score_8" AS "Score_8", "Score_Union_CTE_14"."Score_9" AS "Score_9" 
FROM "Score_Union_CTE_14" UNION ALL SELECT "Score_Union_CTE_15"."KEY" AS "KEY", "Score_Union_CTE_15"."Score_0" AS "Score_0", "Score_Union_CTE_15"."Score_1" AS "Score_1", "Score_Union_CTE_15"."Score_2" AS "Score_2", "Score_Union_CTE_15"."Score_3" AS "Score_3", "Score_Union_CTE_15"."Score_4" AS "Score_4", "Score_Union_CTE_15"."Score_5" AS "Score_5", "Score_Union_CTE_15"."Score_6" AS "Score_6", "Score_Union_CTE_15"."Score_7" AS "Score_7", "Score_Union_CTE_15"."Score_8" AS "Score_8", "Score_Union_CTE_15"."Score_9" AS "Score_9" 
FROM "Score_Union_CTE_15" UNION ALL SELECT "Score_Union_CTE_16"."KEY" AS "KEY", "Score_Union_CTE_16"."Score_0" AS "Score_0", "Score_Union_CTE_16"."Score_1" AS "Score_1", "Score_Union_CTE_16"."Score_2" AS "Score_2", "Score_Union_CTE_16"."Score_3" AS "Score_3", "Score_Union_CTE_16"."Score_4" AS "Score_4", "Score_Union_CTE_16"."Score_5" AS "Score_5", "Score_Union_CTE_16"."Score_6" AS "Score_6", "Score_Union_CTE_16"."Score_7" AS "Score_7", "Score_Union_CTE_16"."Score_8" AS "Score_8", "Score_Union_CTE_16"."Score_9" AS "Score_9" 
FROM "Score_Union_CTE_16" UNION ALL SELECT "Score_Union_CTE_17"."KEY" AS "KEY", "Score_Union_CTE_17"."Score_0" AS "Score_0", "Score_Union_CTE_17"."Score_1" AS "Score_1", "Score_Union_CTE_17"."Score_2" AS "Score_2", "Score_Union_CTE_17"."Score_3" AS "Score_3", "Score_Union_CTE_17"."Score_4" AS "Score_4", "Score_Union_CTE_17"."Score_5" AS "Score_5", "Score_Union_CTE_17"."Score_6" AS "Score_6", "Score_Union_CTE_17"."Score_7" AS "Score_7", "Score_Union_CTE_17"."Score_8" AS "Score_8", "Score_Union_CTE_17"."Score_9" AS "Score_9" 
FROM "Score_Union_CTE_17" UNION ALL SELECT "Score_Union_CTE_18"."KEY" AS "KEY", "Score_Union_CTE_18"."Score_0" AS "Score_0", "Score_Union_CTE_18"."Score_1" AS "Score_1", "Score_Union_CTE_18"."Score_2" AS "Score_2", "Score_Union_CTE_18"."Score_3" AS "Score_3", "Score_Union_CTE_18"."Score_4" AS "Score_4", "Score_Union_CTE_18"."Score_5" AS "Score_5", "Score_Union_CTE_18"."Score_6" AS "Score_6", "Score_Union_CTE_18"."Score_7" AS "Score_7", "Score_Union_CTE_18"."Score_8" AS "Score_8", "Score_Union_CTE_18"."Score_9" AS "Score_9" 
FROM "Score_Union_CTE_18" UNION ALL SELECT "Score_Union_CTE_19"."KEY" AS "KEY", "Score_Union_CTE_19"."Score_0" AS "Score_0", "Score_Union_CTE_19"."Score_1" AS "Score_1", "Score_Union_CTE_19"."Score_2" AS "Score_2", "Score_Union_CTE_19"."Score_3" AS "Score_3", "Score_Union_CTE_19"."Score_4" AS "Score_4", "Score_Union_CTE_19"."Score_5" AS "Score_5", "Score_Union_CTE_19"."Score_6" AS "Score_6", "Score_Union_CTE_19"."Score_7" AS "Score_7", "Score_Union_CTE_19"."Score_8" AS "Score_8", "Score_Union_CTE_19"."Score_9" AS "Score_9" 
FROM "Score_Union_CTE_19" UNION ALL SELECT "Score_Union_CTE_20"."KEY" AS "KEY", "Score_Union_CTE_20"."Score_0" AS "Score_0", "Score_Union_CTE_20"."Score_1" AS "Score_1", "Score_Union_CTE_20"."Score_2" AS "Score_2", "Score_Union_CTE_20"."Score_3" AS "Score_3", "Score_Union_CTE_20"."Score_4" AS "Score_4", "Score_Union_CTE_20"."Score_5" AS "Score_5", "Score_Union_CTE_20"."Score_6" AS "Score_6", "Score_Union_CTE_20"."Score_7" AS "Score_7", "Score_Union_CTE_20"."Score_8" AS "Score_8", "Score_Union_CTE_20"."Score_9" AS "Score_9" 
FROM "Score_Union_CTE_20" UNION ALL SELECT "Score_Union_CTE_21"."KEY" AS "KEY", "Score_Union_CTE_21"."Score_0" AS "Score_0", "Score_Union_CTE_21"."Score_1" AS "Score_1", "Score_Union_CTE_21"."Score_2" AS "Score_2", "Score_Union_CTE_21"."Score_3" AS "Score_3", "Score_Union_CTE_21"."Score_4" AS "Score_4", "Score_Union_CTE_21"."Score_5" AS "Score_5", "Score_Union_CTE_21"."Score_6" AS "Score_6", "Score_Union_CTE_21"."Score_7" AS "Score_7", "Score_Union_CTE_21"."Score_8" AS "Score_8", "Score_Union_CTE_21"."Score_9" AS "Score_9" 
FROM "Score_Union_CTE_21" UNION ALL SELECT "Score_Union_CTE_22"."KEY" AS "KEY", "Score_Union_CTE_22"."Score_0" AS "Score_0", "Score_Union_CTE_22"."Score_1" AS "Score_1", "Score_Union_CTE_22"."Score_2" AS "Score_2", "Score_Union_CTE_22"."Score_3" AS "Score_3", "Score_Union_CTE_22"."Score_4" AS "Score_4", "Score_Union_CTE_22"."Score_5" AS "Score_5", "Score_Union_CTE_22"."Score_6" AS "Score_6", "Score_Union_CTE_22"."Score_7" AS "Score_7", "Score_Union_CTE_22"."Score_8" AS "Score_8", "Score_Union_CTE_22"."Score_9" AS "Score_9" 
FROM "Score_Union_CTE_22" UNION ALL SELECT "Score_Union_CTE_23"."KEY" AS "KEY", "Score_Union_CTE_23"."Score_0" AS "Score_0", "Score_Union_CTE_23"."Score_1" AS "Score_1", "Score_Union_CTE_23"."Score_2" AS "Score_2", "Score_Union_CTE_23"."Score_3" AS "Score_3", "Score_Union_CTE_23"."Score_4" AS "Score_4", "Score_Union_CTE_23"."Score_5" AS "Score_5", "Score_Union_CTE_23"."Score_6" AS "Score_6", "Score_Union_CTE_23"."Score_7" AS "Score_7", "Score_Union_CTE_23"."Score_8" AS "Score_8", "Score_Union_CTE_23"."Score_9" AS "Score_9" 
FROM "Score_Union_CTE_23" UNION ALL SELECT "Score_Union_CTE_24"."KEY" AS "KEY", "Score_Union_CTE_24"."Score_0" AS "Score_0", "Score_Union_CTE_24"."Score_1" AS "Score_1", "Score_Union_CTE_24"."Score_2" AS "Score_2", "Score_Union_CTE_24"."Score_3" AS "Score_3", "Score_Union_CTE_24"."Score_4" AS "Score_4", "Score_Union_CTE_24"."Score_5" AS "Score_5", "Score_Union_CTE_24"."Score_6" AS "Score_6", "Score_Union_CTE_24"."Score_7" AS "Score_7", "Score_Union_CTE_24"."Score_8" AS "Score_8", "Score_Union_CTE_24"."Score_9" AS "Score_9" 
FROM "Score_Union_CTE_24" UNION ALL SELECT "Score_Union_CTE_25"."KEY" AS "KEY", "Score_Union_CTE_25"."Score_0" AS "Score_0", "Score_Union_CTE_25"."Score_1" AS "Score_1", "Score_Union_CTE_25"."Score_2" AS "Score_2", "Score_Union_CTE_25"."Score_3" AS "Score_3", "Score_Union_CTE_25"."Score_4" AS "Score_4", "Score_Union_CTE_25"."Score_5" AS "Score_5", "Score_Union_CTE_25"."Score_6" AS "Score_6", "Score_Union_CTE_25"."Score_7" AS "Score_7", "Score_Union_CTE_25"."Score_8" AS "Score_8", "Score_Union_CTE_25"."Score_9" AS "Score_9" 
FROM "Score_Union_CTE_25" UNION ALL SELECT "Score_Union_CTE_26"."KEY" AS "KEY", "Score_Union_CTE_26"."Score_0" AS "Score_0", "Score_Union_CTE_26"."Score_1" AS "Score_1", "Score_Union_CTE_26"."Score_2" AS "Score_2", "Score_Union_CTE_26"."Score_3" AS "Score_3", "Score_Union_CTE_26"."Score_4" AS "Score_4", "Score_Union_CTE_26"."Score_5" AS "Score_5", "Score_Union_CTE_26"."Score_6" AS "Score_6", "Score_Union_CTE_26"."Score_7" AS "Score_7", "Score_Union_CTE_26"."Score_8" AS "Score_8", "Score_Union_CTE_26"."Score_9" AS "Score_9" 
FROM "Score_Union_CTE_26" UNION ALL SELECT "Score_Union_CTE_27"."KEY" AS "KEY", "Score_Union_CTE_27"."Score_0" AS "Score_0", "Score_Union_CTE_27"."Score_1" AS "Score_1", "Score_Union_CTE_27"."Score_2" AS "Score_2", "Score_Union_CTE_27"."Score_3" AS "Score_3", "Score_Union_CTE_27"."Score_4" AS "Score_4", "Score_Union_CTE_27"."Score_5" AS "Score_5", "Score_Union_CTE_27"."Score_6" AS "Score_6", "Score_Union_CTE_27"."Score_7" AS "Score_7", "Score_Union_CTE_27"."Score_8" AS "Score_8", "Score_Union_CTE_27"."Score_9" AS "Score_9" 
FROM "Score_Union_CTE_27" UNION ALL SELECT "Score_Union_CTE_28"."KEY" AS "KEY", "Score_Union_CTE_28"."Score_0" AS "Score_0", "Score_Union_CTE_28"."Score_1" AS "Score_1", "Score_Union_CTE_28"."Score_2" AS "Score_2", "Score_Union_CTE_28"."Score_3" AS "Score_3", "Score_Union_CTE_28"."Score_4" AS "Score_4", "Score_Union_CTE_28"."Score_5" AS "Score_5", "Score_Union_CTE_28"."Score_6" AS "Score_6", "Score_Union_CTE_28"."Score_7" AS "Score_7", "Score_Union_CTE_28"."Score_8" AS "Score_8", "Score_Union_CTE_28"."Score_9" AS "Score_9" 
FROM "Score_Union_CTE_28" UNION ALL SELECT "Score_Union_CTE_29"."KEY" AS "KEY", "Score_Union_CTE_29"."Score_0" AS "Score_0", "Score_Union_CTE_29"."Score_1" AS "Score_1", "Score_Union_CTE_29"."Score_2" AS "Score_2", "Score_Union_CTE_29"."Score_3" AS "Score_3", "Score_Union_CTE_29"."Score_4" AS "Score_4", "Score_Union_CTE_29"."Score_5" AS "Score_5", "Score_Union_CTE_29"."Score_6" AS "Score_6", "Score_Union_CTE_29"."Score_7" AS "Score_7", "Score_Union_CTE_29"."Score_8" AS "Score_8", "Score_Union_CTE_29"."Score_9" AS "Score_9" 
FROM "Score_Union_CTE_29" UNION ALL SELECT "Score_Union_CTE_30"."KEY" AS "KEY", "Score_Union_CTE_30"."Score_0" AS "Score_0", "Score_Union_CTE_30"."Score_1" AS "Score_1", "Score_Union_CTE_30"."Score_2" AS "Score_2", "Score_Union_CTE_30"."Score_3" AS "Score_3", "Score_Union_CTE_30"."Score_4" AS "Score_4", "Score_Union_CTE_30"."Score_5" AS "Score_5", "Score_Union_CTE_30"."Score_6" AS "Score_6", "Score_Union_CTE_30"."Score_7" AS "Score_7", "Score_Union_CTE_30"."Score_8" AS "Score_8", "Score_Union_CTE_30"."Score_9" AS "Score_9" 
FROM "Score_Union_CTE_30" UNION ALL SELECT "Score_Union_CTE_31"."KEY" AS "KEY", "Score_Union_CTE_31"."Score_0" AS "Score_0", "Score_Union_CTE_31"."Score_1" AS "Score_1", "Score_Union_CTE_31"."Score_2" AS "Score_2", "Score_Union_CTE_31"."Score_3" AS "Score_3", "Score_Union_CTE_31"."Score_4" AS "Score_4", "Score_Union_CTE_31"."Score_5" AS "Score_5", "Score_Union_CTE_31"."Score_6" AS "Score_6", "Score_Union_CTE_31"."Score_7" AS "Score_7", "Score_Union_CTE_31"."Score_8" AS "Score_8", "Score_Union_CTE_31"."Score_9" AS "Score_9" 
FROM "Score_Union_CTE_31" UNION ALL SELECT "Score_Union_CTE_32"."KEY" AS "KEY", "Score_Union_CTE_32"."Score_0" AS "Score_0", "Score_Union_CTE_32"."Score_1" AS "Score_1", "Score_Union_CTE_32"."Score_2" AS "Score_2", "Score_Union_CTE_32"."Score_3" AS "Score_3", "Score_Union_CTE_32"."Score_4" AS "Score_4", "Score_Union_CTE_32"."Score_5" AS "Score_5", "Score_Union_CTE_32"."Score_6" AS "Score_6", "Score_Union_CTE_32"."Score_7" AS "Score_7", "Score_Union_CTE_32"."Score_8" AS "Score_8", "Score_Union_CTE_32"."Score_9" AS "Score_9" 
FROM "Score_Union_CTE_32" UNION ALL SELECT "Score_Union_CTE_33"."KEY" AS "KEY", "Score_Union_CTE_33"."Score_0" AS "Score_0", "Score_Union_CTE_33"."Score_1" AS "Score_1", "Score_Union_CTE_33"."Score_2" AS "Score_2", "Score_Union_CTE_33"."Score_3" AS "Score_3", "Score_Union_CTE_33"."Score_4" AS "Score_4", "Score_Union_CTE_33"."Score_5" AS "Score_5", "Score_Union_CTE_33"."Score_6" AS "Score_6", "Score_Union_CTE_33"."Score_7" AS "Score_7", "Score_Union_CTE_33"."Score_8" AS "Score_8", "Score_Union_CTE_33"."Score_9" AS "Score_9" 
FROM "Score_Union_CTE_33" UNION ALL SELECT "Score_Union_CTE_34"."KEY" AS "KEY", "Score_Union_CTE_34"."Score_0" AS "Score_0", "Score_Union_CTE_34"."Score_1" AS "Score_1", "Score_Union_CTE_34"."Score_2" AS "Score_2", "Score_Union_CTE_34"."Score_3" AS "Score_3", "Score_Union_CTE_34"."Score_4" AS "Score_4", "Score_Union_CTE_34"."Score_5" AS "Score_5", "Score_Union_CTE_34"."Score_6" AS "Score_6", "Score_Union_CTE_34"."Score_7" AS "Score_7", "Score_Union_CTE_34"."Score_8" AS "Score_8", "Score_Union_CTE_34"."Score_9" AS "Score_9" 
FROM "Score_Union_CTE_34" UNION ALL SELECT "Score_Union_CTE_35"."KEY" AS "KEY", "Score_Union_CTE_35"."Score_0" AS "Score_0", "Score_Union_CTE_35"."Score_1" AS "Score_1", "Score_Union_CTE_35"."Score_2" AS "Score_2", "Score_Union_CTE_35"."Score_3" AS "Score_3", "Score_Union_CTE_35"."Score_4" AS "Score_4", "Score_Union_CTE_35"."Score_5" AS "Score_5", "Score_Union_CTE_35"."Score_6" AS "Score_6", "Score_Union_CTE_35"."Score_7" AS "Score_7", "Score_Union_CTE_35"."Score_8" AS "Score_8", "Score_Union_CTE_35"."Score_9" AS "Score_9" 
FROM "Score_Union_CTE_35" UNION ALL SELECT "Score_Union_CTE_36"."KEY" AS "KEY", "Score_Union_CTE_36"."Score_0" AS "Score_0", "Score_Union_CTE_36"."Score_1" AS "Score_1", "Score_Union_CTE_36"."Score_2" AS "Score_2", "Score_Union_CTE_36"."Score_3" AS "Score_3", "Score_Union_CTE_36"."Score_4" AS "Score_4", "Score_Union_CTE_36"."Score_5" AS "Score_5", "Score_Union_CTE_36"."Score_6" AS "Score_6", "Score_Union_CTE_36"."Score_7" AS "Score_7", "Score_Union_CTE_36"."Score_8" AS "Score_8", "Score_Union_CTE_36"."Score_9" AS "Score_9" 
FROM "Score_Union_CTE_36" UNION ALL SELECT "Score_Union_CTE_37"."KEY" AS "KEY", "Score_Union_CTE_37"."Score_0" AS "Score_0", "Score_Union_CTE_37"."Score_1" AS "Score_1", "Score_Union_CTE_37"."Score_2" AS "Score_2", "Score_Union_CTE_37"."Score_3" AS "Score_3", "Score_Union_CTE_37"."Score_4" AS "Score_4", "Score_Union_CTE_37"."Score_5" AS "Score_5", "Score_Union_CTE_37"."Score_6" AS "Score_6", "Score_Union_CTE_37"."Score_7" AS "Score_7", "Score_Union_CTE_37"."Score_8" AS "Score_8", "Score_Union_CTE_37"."Score_9" AS "Score_9" 
FROM "Score_Union_CTE_37" UNION ALL SELECT "Score_Union_CTE_38"."KEY" AS "KEY", "Score_Union_CTE_38"."Score_0" AS "Score_0", "Score_Union_CTE_38"."Score_1" AS "Score_1", "Score_Union_CTE_38"."Score_2" AS "Score_2", "Score_Union_CTE_38"."Score_3" AS "Score_3", "Score_Union_CTE_38"."Score_4" AS "Score_4", "Score_Union_CTE_38"."Score_5" AS "Score_5", "Score_Union_CTE_38"."Score_6" AS "Score_6", "Score_Union_CTE_38"."Score_7" AS "Score_7", "Score_Union_CTE_38"."Score_8" AS "Score_8", "Score_Union_CTE_38"."Score_9" AS "Score_9" 
FROM "Score_Union_CTE_38" UNION ALL SELECT "Score_Union_CTE_39"."KEY" AS "KEY", "Score_Union_CTE_39"."Score_0" AS "Score_0", "Score_Union_CTE_39"."Score_1" AS "Score_1", "Score_Union_CTE_39"."Score_2" AS "Score_2", "Score_Union_CTE_39"."Score_3" AS "Score_3", "Score_Union_CTE_39"."Score_4" AS "Score_4", "Score_Union_CTE_39"."Score_5" AS "Score_5", "Score_Union_CTE_39"."Score_6" AS "Score_6", "Score_Union_CTE_39"."Score_7" AS "Score_7", "Score_Union_CTE_39"."Score_8" AS "Score_8", "Score_Union_CTE_39"."Score_9" AS "Score_9" 
FROM "Score_Union_CTE_39") AS "Score_Union_CTEbig_esu"), 
"GradBoost_Sum_Scores" AS 
(SELECT "T"."KEY" AS "KEY", "T"."Score_0" AS "Score_0", "T"."Score_1" AS "Score_1", "T"."Score_2" AS "Score_2", "T"."Score_3" AS "Score_3", "T"."Score_4" AS "Score_4", "T"."Score_5" AS "Score_5", "T"."Score_6" AS "Score_6", "T"."Score_7" AS "Score_7", "T"."Score_8" AS "Score_8", "T"."Score_9" AS "Score_9" 
FROM (SELECT "Score_Union_CTE"."KEY" AS "KEY", sum("Score_Union_CTE"."Score_0") AS "Score_0", sum("Score_Union_CTE"."Score_1") AS "Score_1", sum("Score_Union_CTE"."Score_2") AS "Score_2", sum("Score_Union_CTE"."Score_3") AS "Score_3", sum("Score_Union_CTE"."Score_4") AS "Score_4", sum("Score_Union_CTE"."Score_5") AS "Score_5", sum("Score_Union_CTE"."Score_6") AS "Score_6", sum("Score_Union_CTE"."Score_7") AS "Score_7", sum("Score_Union_CTE"."Score_8") AS "Score_8", sum("Score_Union_CTE"."Score_9") AS "Score_9" 
FROM "Score_Union_CTE" GROUP BY "Score_Union_CTE"."KEY") AS "T"), 
orig_cte AS 
(SELECT "GradBoost_Sum_Scores"."KEY" AS "KEY", 0.0960334029228 + 0.1 * "GradBoost_Sum_Scores"."Score_0" AS "Score_0", 0.102296450939 + 0.1 * "GradBoost_Sum_Scores"."Score_1" AS "Score_1", 0.102992345164 + 0.1 * "GradBoost_Sum_Scores"."Score_2" AS "Score_2", 0.100904662491 + 0.1 * "GradBoost_Sum_Scores"."Score_3" AS "Score_3", 0.105080027836 + 0.1 * "GradBoost_Sum_Scores"."Score_4" AS "Score_4", 0.100208768267 + 0.1 * "GradBoost_Sum_Scores"."Score_5" AS "Score_5", 0.0988169798191 + 0.1 * "GradBoost_Sum_Scores"."Score_6" AS "Score_6", 0.0974251913709 + 0.1 * "GradBoost_Sum_Scores"."Score_7" AS "Score_7", 0.0939457202505 + 0.1 * "GradBoost_Sum_Scores"."Score_8" AS "Score_8", 0.102296450939 + 0.1 * "GradBoost_Sum_Scores"."Score_9" AS "Score_9", CAST(NULL AS FLOAT) AS "Proba_0", CAST(NULL AS FLOAT) AS "Proba_1", CAST(NULL AS FLOAT) AS "Proba_2", CAST(NULL AS FLOAT) AS "Proba_3", CAST(NULL AS FLOAT) AS "Proba_4", CAST(NULL AS FLOAT) AS "Proba_5", CAST(NULL AS FLOAT) AS "Proba_6", CAST(NULL AS FLOAT) AS "Proba_7", CAST(NULL AS FLOAT) AS "Proba_8", CAST(NULL AS FLOAT) AS "Proba_9", CAST(NULL AS FLOAT) AS "LogProba_0", CAST(NULL AS FLOAT) AS "LogProba_1", CAST(NULL AS FLOAT) AS "LogProba_2", CAST(NULL AS FLOAT) AS "LogProba_3", CAST(NULL AS FLOAT) AS "LogProba_4", CAST(NULL AS FLOAT) AS "LogProba_5", CAST(NULL AS FLOAT) AS "LogProba_6", CAST(NULL AS FLOAT) AS "LogProba_7", CAST(NULL AS FLOAT) AS "LogProba_8", CAST(NULL AS FLOAT) AS "LogProba_9", CAST(NULL AS INTEGER) AS "Decision", CAST(NULL AS FLOAT) AS "DecisionProba" 
FROM "GradBoost_Sum_Scores"), 
score_class_union AS 
(SELECT scu."KEY_u" AS "KEY_u", scu.class AS class, scu."LogProba" AS "LogProba", scu."Proba" AS "Proba", scu."Score" AS "Score" 
FROM (SELECT orig_cte."KEY" AS "KEY_u", 0 AS class, orig_cte."LogProba_0" AS "LogProba", orig_cte."Proba_0" AS "Proba", orig_cte."Score_0" AS "Score" 
FROM orig_cte UNION ALL SELECT orig_cte."KEY" AS "KEY_u", 1 AS class, orig_cte."LogProba_1" AS "LogProba", orig_cte."Proba_1" AS "Proba", orig_cte."Score_1" AS "Score" 
FROM orig_cte UNION ALL SELECT orig_cte."KEY" AS "KEY_u", 2 AS class, orig_cte."LogProba_2" AS "LogProba", orig_cte."Proba_2" AS "Proba", orig_cte."Score_2" AS "Score" 
FROM orig_cte UNION ALL SELECT orig_cte."KEY" AS "KEY_u", 3 AS class, orig_cte."LogProba_3" AS "LogProba", orig_cte."Proba_3" AS "Proba", orig_cte."Score_3" AS "Score" 
FROM orig_cte UNION ALL SELECT orig_cte."KEY" AS "KEY_u", 4 AS class, orig_cte."LogProba_4" AS "LogProba", orig_cte."Proba_4" AS "Proba", orig_cte."Score_4" AS "Score" 
FROM orig_cte UNION ALL SELECT orig_cte."KEY" AS "KEY_u", 5 AS class, orig_cte."LogProba_5" AS "LogProba", orig_cte."Proba_5" AS "Proba", orig_cte."Score_5" AS "Score" 
FROM orig_cte UNION ALL SELECT orig_cte."KEY" AS "KEY_u", 6 AS class, orig_cte."LogProba_6" AS "LogProba", orig_cte."Proba_6" AS "Proba", orig_cte."Score_6" AS "Score" 
FROM orig_cte UNION ALL SELECT orig_cte."KEY" AS "KEY_u", 7 AS class, orig_cte."LogProba_7" AS "LogProba", orig_cte."Proba_7" AS "Proba", orig_cte."Score_7" AS "Score" 
FROM orig_cte UNION ALL SELECT orig_cte."KEY" AS "KEY_u", 8 AS class, orig_cte."LogProba_8" AS "LogProba", orig_cte."Proba_8" AS "Proba", orig_cte."Score_8" AS "Score" 
FROM orig_cte UNION ALL SELECT orig_cte."KEY" AS "KEY_u", 9 AS class, orig_cte."LogProba_9" AS "LogProba", orig_cte."Proba_9" AS "Proba", orig_cte."Score_9" AS "Score" 
FROM orig_cte) AS scu), 
score_max AS 
(SELECT orig_cte."KEY" AS "KEY", orig_cte."Score_0" AS "Score_0", orig_cte."Score_1" AS "Score_1", orig_cte."Score_2" AS "Score_2", orig_cte."Score_3" AS "Score_3", orig_cte."Score_4" AS "Score_4", orig_cte."Score_5" AS "Score_5", orig_cte."Score_6" AS "Score_6", orig_cte."Score_7" AS "Score_7", orig_cte."Score_8" AS "Score_8", orig_cte."Score_9" AS "Score_9", orig_cte."Proba_0" AS "Proba_0", orig_cte."Proba_1" AS "Proba_1", orig_cte."Proba_2" AS "Proba_2", orig_cte."Proba_3" AS "Proba_3", orig_cte."Proba_4" AS "Proba_4", orig_cte."Proba_5" AS "Proba_5", orig_cte."Proba_6" AS "Proba_6", orig_cte."Proba_7" AS "Proba_7", orig_cte."Proba_8" AS "Proba_8", orig_cte."Proba_9" AS "Proba_9", orig_cte."LogProba_0" AS "LogProba_0", orig_cte."LogProba_1" AS "LogProba_1", orig_cte."LogProba_2" AS "LogProba_2", orig_cte."LogProba_3" AS "LogProba_3", orig_cte."LogProba_4" AS "LogProba_4", orig_cte."LogProba_5" AS "LogProba_5", orig_cte."LogProba_6" AS "LogProba_6", orig_cte."LogProba_7" AS "LogProba_7", orig_cte."LogProba_8" AS "LogProba_8", orig_cte."LogProba_9" AS "LogProba_9", orig_cte."Decision" AS "Decision", orig_cte."DecisionProba" AS "DecisionProba", max_select."KEY_m" AS "KEY_m", max_select."max_Score" AS "max_Score" 
FROM orig_cte LEFT OUTER JOIN (SELECT score_class_union."KEY_u" AS "KEY_m", max(score_class_union."Score") AS "max_Score" 
FROM score_class_union GROUP BY score_class_union."KEY_u") AS max_select ON orig_cte."KEY" = max_select."KEY_m"), 
score_soft_max_deltas AS 
(SELECT score_max."KEY" AS "KEY", score_max."Score_0" AS "Score_0", score_max."Score_1" AS "Score_1", score_max."Score_2" AS "Score_2", score_max."Score_3" AS "Score_3", score_max."Score_4" AS "Score_4", score_max."Score_5" AS "Score_5", score_max."Score_6" AS "Score_6", score_max."Score_7" AS "Score_7", score_max."Score_8" AS "Score_8", score_max."Score_9" AS "Score_9", score_max."Proba_0" AS "Proba_0", score_max."Proba_1" AS "Proba_1", score_max."Proba_2" AS "Proba_2", score_max."Proba_3" AS "Proba_3", score_max."Proba_4" AS "Proba_4", score_max."Proba_5" AS "Proba_5", score_max."Proba_6" AS "Proba_6", score_max."Proba_7" AS "Proba_7", score_max."Proba_8" AS "Proba_8", score_max."Proba_9" AS "Proba_9", score_max."LogProba_0" AS "LogProba_0", score_max."LogProba_1" AS "LogProba_1", score_max."LogProba_2" AS "LogProba_2", score_max."LogProba_3" AS "LogProba_3", score_max."LogProba_4" AS "LogProba_4", score_max."LogProba_5" AS "LogProba_5", score_max."LogProba_6" AS "LogProba_6", score_max."LogProba_7" AS "LogProba_7", score_max."LogProba_8" AS "LogProba_8", score_max."LogProba_9" AS "LogProba_9", score_max."Decision" AS "Decision", score_max."DecisionProba" AS "DecisionProba", score_max."KEY_m" AS "KEY_m", score_max."max_Score" AS "max_Score", exp(CASE WHEN (score_max."Score_0" - score_max."max_Score" >= -709.782712893) THEN score_max."Score_0" - score_max."max_Score" ELSE -709.782712893 END) AS "exp_delta_Score_0", exp(CASE WHEN (score_max."Score_1" - score_max."max_Score" >= -709.782712893) THEN score_max."Score_1" - score_max."max_Score" ELSE -709.782712893 END) AS "exp_delta_Score_1", exp(CASE WHEN (score_max."Score_2" - score_max."max_Score" >= -709.782712893) THEN score_max."Score_2" - score_max."max_Score" ELSE -709.782712893 END) AS "exp_delta_Score_2", exp(CASE WHEN (score_max."Score_3" - score_max."max_Score" >= -709.782712893) THEN score_max."Score_3" - score_max."max_Score" ELSE -709.782712893 END) AS "exp_delta_Score_3", exp(CASE WHEN (score_max."Score_4" - score_max."max_Score" >= -709.782712893) THEN score_max."Score_4" - score_max."max_Score" ELSE -709.782712893 END) AS "exp_delta_Score_4", exp(CASE WHEN (score_max."Score_5" - score_max."max_Score" >= -709.782712893) THEN score_max."Score_5" - score_max."max_Score" ELSE -709.782712893 END) AS "exp_delta_Score_5", exp(CASE WHEN (score_max."Score_6" - score_max."max_Score" >= -709.782712893) THEN score_max."Score_6" - score_max."max_Score" ELSE -709.782712893 END) AS "exp_delta_Score_6", exp(CASE WHEN (score_max."Score_7" - score_max."max_Score" >= -709.782712893) THEN score_max."Score_7" - score_max."max_Score" ELSE -709.782712893 END) AS "exp_delta_Score_7", exp(CASE WHEN (score_max."Score_8" - score_max."max_Score" >= -709.782712893) THEN score_max."Score_8" - score_max."max_Score" ELSE -709.782712893 END) AS "exp_delta_Score_8", exp(CASE WHEN (score_max."Score_9" - score_max."max_Score" >= -709.782712893) THEN score_max."Score_9" - score_max."max_Score" ELSE -709.782712893 END) AS "exp_delta_Score_9" 
FROM score_max), 
score_class_union_soft AS 
(SELECT soft_scu."KEY" AS "KEY", soft_scu.class AS class, soft_scu."exp_delta_Score" AS "exp_delta_Score" 
FROM (SELECT score_soft_max_deltas."KEY" AS "KEY", 0 AS class, score_soft_max_deltas."exp_delta_Score_0" AS "exp_delta_Score" 
FROM score_soft_max_deltas UNION ALL SELECT score_soft_max_deltas."KEY" AS "KEY", 1 AS class, score_soft_max_deltas."exp_delta_Score_1" AS "exp_delta_Score" 
FROM score_soft_max_deltas UNION ALL SELECT score_soft_max_deltas."KEY" AS "KEY", 2 AS class, score_soft_max_deltas."exp_delta_Score_2" AS "exp_delta_Score" 
FROM score_soft_max_deltas UNION ALL SELECT score_soft_max_deltas."KEY" AS "KEY", 3 AS class, score_soft_max_deltas."exp_delta_Score_3" AS "exp_delta_Score" 
FROM score_soft_max_deltas UNION ALL SELECT score_soft_max_deltas."KEY" AS "KEY", 4 AS class, score_soft_max_deltas."exp_delta_Score_4" AS "exp_delta_Score" 
FROM score_soft_max_deltas UNION ALL SELECT score_soft_max_deltas."KEY" AS "KEY", 5 AS class, score_soft_max_deltas."exp_delta_Score_5" AS "exp_delta_Score" 
FROM score_soft_max_deltas UNION ALL SELECT score_soft_max_deltas."KEY" AS "KEY", 6 AS class, score_soft_max_deltas."exp_delta_Score_6" AS "exp_delta_Score" 
FROM score_soft_max_deltas UNION ALL SELECT score_soft_max_deltas."KEY" AS "KEY", 7 AS class, score_soft_max_deltas."exp_delta_Score_7" AS "exp_delta_Score" 
FROM score_soft_max_deltas UNION ALL SELECT score_soft_max_deltas."KEY" AS "KEY", 8 AS class, score_soft_max_deltas."exp_delta_Score_8" AS "exp_delta_Score" 
FROM score_soft_max_deltas UNION ALL SELECT score_soft_max_deltas."KEY" AS "KEY", 9 AS class, score_soft_max_deltas."exp_delta_Score_9" AS "exp_delta_Score" 
FROM score_soft_max_deltas) AS soft_scu), 
score_soft_max AS 
(SELECT score_soft_max_deltas."KEY" AS "KEY", score_soft_max_deltas."Score_0" AS "Score_0", score_soft_max_deltas."Score_1" AS "Score_1", score_soft_max_deltas."Score_2" AS "Score_2", score_soft_max_deltas."Score_3" AS "Score_3", score_soft_max_deltas."Score_4" AS "Score_4", score_soft_max_deltas."Score_5" AS "Score_5", score_soft_max_deltas."Score_6" AS "Score_6", score_soft_max_deltas."Score_7" AS "Score_7", score_soft_max_deltas."Score_8" AS "Score_8", score_soft_max_deltas."Score_9" AS "Score_9", score_soft_max_deltas."Proba_0" AS "Proba_0", score_soft_max_deltas."Proba_1" AS "Proba_1", score_soft_max_deltas."Proba_2" AS "Proba_2", score_soft_max_deltas."Proba_3" AS "Proba_3", score_soft_max_deltas."Proba_4" AS "Proba_4", score_soft_max_deltas."Proba_5" AS "Proba_5", score_soft_max_deltas."Proba_6" AS "Proba_6", score_soft_max_deltas."Proba_7" AS "Proba_7", score_soft_max_deltas."Proba_8" AS "Proba_8", score_soft_max_deltas."Proba_9" AS "Proba_9", score_soft_max_deltas."LogProba_0" AS "LogProba_0", score_soft_max_deltas."LogProba_1" AS "LogProba_1", score_soft_max_deltas."LogProba_2" AS "LogProba_2", score_soft_max_deltas."LogProba_3" AS "LogProba_3", score_soft_max_deltas."LogProba_4" AS "LogProba_4", score_soft_max_deltas."LogProba_5" AS "LogProba_5", score_soft_max_deltas."LogProba_6" AS "LogProba_6", score_soft_max_deltas."LogProba_7" AS "LogProba_7", score_soft_max_deltas."LogProba_8" AS "LogProba_8", score_soft_max_deltas."LogProba_9" AS "LogProba_9", score_soft_max_deltas."Decision" AS "Decision", score_soft_max_deltas."DecisionProba" AS "DecisionProba", score_soft_max_deltas."KEY_m" AS "KEY_m", score_soft_max_deltas."max_Score" AS "max_Score", score_soft_max_deltas."exp_delta_Score_0" AS "exp_delta_Score_0", score_soft_max_deltas."exp_delta_Score_1" AS "exp_delta_Score_1", score_soft_max_deltas."exp_delta_Score_2" AS "exp_delta_Score_2", score_soft_max_deltas."exp_delta_Score_3" AS "exp_delta_Score_3", score_soft_max_deltas."exp_delta_Score_4" AS "exp_delta_Score_4", score_soft_max_deltas."exp_delta_Score_5" AS "exp_delta_Score_5", score_soft_max_deltas."exp_delta_Score_6" AS "exp_delta_Score_6", score_soft_max_deltas."exp_delta_Score_7" AS "exp_delta_Score_7", score_soft_max_deltas."exp_delta_Score_8" AS "exp_delta_Score_8", score_soft_max_deltas."exp_delta_Score_9" AS "exp_delta_Score_9", sum_exp_t."KEY_sum" AS "KEY_sum", sum_exp_t."sum_ExpDeltaScore" AS "sum_ExpDeltaScore" 
FROM score_soft_max_deltas LEFT OUTER JOIN (SELECT score_class_union_soft."KEY" AS "KEY_sum", sum(score_class_union_soft."exp_delta_Score") AS "sum_ExpDeltaScore" 
FROM score_class_union_soft GROUP BY score_class_union_soft."KEY") AS sum_exp_t ON score_soft_max_deltas."KEY" = sum_exp_t."KEY_sum"), 
union_with_max AS 
(SELECT score_class_union."KEY_u" AS "KEY_u", score_class_union.class AS class, score_class_union."LogProba" AS "LogProba", score_class_union."Proba" AS "Proba", score_class_union."Score" AS "Score", score_soft_max."KEY" AS "KEY", score_soft_max."Score_0" AS "Score_0", score_soft_max."Score_1" AS "Score_1", score_soft_max."Score_2" AS "Score_2", score_soft_max."Score_3" AS "Score_3", score_soft_max."Score_4" AS "Score_4", score_soft_max."Score_5" AS "Score_5", score_soft_max."Score_6" AS "Score_6", score_soft_max."Score_7" AS "Score_7", score_soft_max."Score_8" AS "Score_8", score_soft_max."Score_9" AS "Score_9", score_soft_max."Proba_0" AS "Proba_0", score_soft_max."Proba_1" AS "Proba_1", score_soft_max."Proba_2" AS "Proba_2", score_soft_max."Proba_3" AS "Proba_3", score_soft_max."Proba_4" AS "Proba_4", score_soft_max."Proba_5" AS "Proba_5", score_soft_max."Proba_6" AS "Proba_6", score_soft_max."Proba_7" AS "Proba_7", score_soft_max."Proba_8" AS "Proba_8", score_soft_max."Proba_9" AS "Proba_9", score_soft_max."LogProba_0" AS "LogProba_0", score_soft_max."LogProba_1" AS "LogProba_1", score_soft_max."LogProba_2" AS "LogProba_2", score_soft_max."LogProba_3" AS "LogProba_3", score_soft_max."LogProba_4" AS "LogProba_4", score_soft_max."LogProba_5" AS "LogProba_5", score_soft_max."LogProba_6" AS "LogProba_6", score_soft_max."LogProba_7" AS "LogProba_7", score_soft_max."LogProba_8" AS "LogProba_8", score_soft_max."LogProba_9" AS "LogProba_9", score_soft_max."Decision" AS "Decision", score_soft_max."DecisionProba" AS "DecisionProba", score_soft_max."KEY_m" AS "KEY_m", score_soft_max."max_Score" AS "max_Score", score_soft_max."exp_delta_Score_0" AS "exp_delta_Score_0", score_soft_max."exp_delta_Score_1" AS "exp_delta_Score_1", score_soft_max."exp_delta_Score_2" AS "exp_delta_Score_2", score_soft_max."exp_delta_Score_3" AS "exp_delta_Score_3", score_soft_max."exp_delta_Score_4" AS "exp_delta_Score_4", score_soft_max."exp_delta_Score_5" AS "exp_delta_Score_5", score_soft_max."exp_delta_Score_6" AS "exp_delta_Score_6", score_soft_max."exp_delta_Score_7" AS "exp_delta_Score_7", score_soft_max."exp_delta_Score_8" AS "exp_delta_Score_8", score_soft_max."exp_delta_Score_9" AS "exp_delta_Score_9", score_soft_max."KEY_sum" AS "KEY_sum", score_soft_max."sum_ExpDeltaScore" AS "sum_ExpDeltaScore" 
FROM score_class_union LEFT OUTER JOIN score_soft_max ON score_class_union."KEY_u" = score_soft_max."KEY"), 
arg_max_cte AS 
(SELECT score_soft_max."KEY" AS "KEY", score_soft_max."Score_0" AS "Score_0", score_soft_max."Score_1" AS "Score_1", score_soft_max."Score_2" AS "Score_2", score_soft_max."Score_3" AS "Score_3", score_soft_max."Score_4" AS "Score_4", score_soft_max."Score_5" AS "Score_5", score_soft_max."Score_6" AS "Score_6", score_soft_max."Score_7" AS "Score_7", score_soft_max."Score_8" AS "Score_8", score_soft_max."Score_9" AS "Score_9", score_soft_max."Proba_0" AS "Proba_0", score_soft_max."Proba_1" AS "Proba_1", score_soft_max."Proba_2" AS "Proba_2", score_soft_max."Proba_3" AS "Proba_3", score_soft_max."Proba_4" AS "Proba_4", score_soft_max."Proba_5" AS "Proba_5", score_soft_max."Proba_6" AS "Proba_6", score_soft_max."Proba_7" AS "Proba_7", score_soft_max."Proba_8" AS "Proba_8", score_soft_max."Proba_9" AS "Proba_9", score_soft_max."LogProba_0" AS "LogProba_0", score_soft_max."LogProba_1" AS "LogProba_1", score_soft_max."LogProba_2" AS "LogProba_2", score_soft_max."LogProba_3" AS "LogProba_3", score_soft_max."LogProba_4" AS "LogProba_4", score_soft_max."LogProba_5" AS "LogProba_5", score_soft_max."LogProba_6" AS "LogProba_6", score_soft_max."LogProba_7" AS "LogProba_7", score_soft_max."LogProba_8" AS "LogProba_8", score_soft_max."LogProba_9" AS "LogProba_9", score_soft_max."Decision" AS "Decision", score_soft_max."DecisionProba" AS "DecisionProba", score_soft_max."KEY_m" AS "KEY_m", score_soft_max."max_Score" AS "max_Score", score_soft_max."exp_delta_Score_0" AS "exp_delta_Score_0", score_soft_max."exp_delta_Score_1" AS "exp_delta_Score_1", score_soft_max."exp_delta_Score_2" AS "exp_delta_Score_2", score_soft_max."exp_delta_Score_3" AS "exp_delta_Score_3", score_soft_max."exp_delta_Score_4" AS "exp_delta_Score_4", score_soft_max."exp_delta_Score_5" AS "exp_delta_Score_5", score_soft_max."exp_delta_Score_6" AS "exp_delta_Score_6", score_soft_max."exp_delta_Score_7" AS "exp_delta_Score_7", score_soft_max."exp_delta_Score_8" AS "exp_delta_Score_8", score_soft_max."exp_delta_Score_9" AS "exp_delta_Score_9", score_soft_max."KEY_sum" AS "KEY_sum", score_soft_max."sum_ExpDeltaScore" AS "sum_ExpDeltaScore", "arg_max_t_Score"."KEY_Score" AS "KEY_Score", "arg_max_t_Score"."arg_max_Score" AS "arg_max_Score", soft_max_comp."KEY_softmax" AS "KEY_softmax", soft_max_comp."SoftProba_0" AS "SoftProba_0", soft_max_comp."SoftProba_1" AS "SoftProba_1", soft_max_comp."SoftProba_2" AS "SoftProba_2", soft_max_comp."SoftProba_3" AS "SoftProba_3", soft_max_comp."SoftProba_4" AS "SoftProba_4", soft_max_comp."SoftProba_5" AS "SoftProba_5", soft_max_comp."SoftProba_6" AS "SoftProba_6", soft_max_comp."SoftProba_7" AS "SoftProba_7", soft_max_comp."SoftProba_8" AS "SoftProba_8", soft_max_comp."SoftProba_9" AS "SoftProba_9" 
FROM score_soft_max LEFT OUTER JOIN (SELECT union_with_max."KEY" AS "KEY_Score", min(union_with_max.class) AS "arg_max_Score" 
FROM union_with_max 
WHERE union_with_max."max_Score" <= union_with_max."Score" GROUP BY union_with_max."KEY") AS "arg_max_t_Score" ON score_soft_max."KEY" = "arg_max_t_Score"."KEY_Score" LEFT OUTER JOIN (SELECT score_soft_max."KEY" AS "KEY_softmax", score_soft_max."exp_delta_Score_0" / score_soft_max."sum_ExpDeltaScore" AS "SoftProba_0", score_soft_max."exp_delta_Score_1" / score_soft_max."sum_ExpDeltaScore" AS "SoftProba_1", score_soft_max."exp_delta_Score_2" / score_soft_max."sum_ExpDeltaScore" AS "SoftProba_2", score_soft_max."exp_delta_Score_3" / score_soft_max."sum_ExpDeltaScore" AS "SoftProba_3", score_soft_max."exp_delta_Score_4" / score_soft_max."sum_ExpDeltaScore" AS "SoftProba_4", score_soft_max."exp_delta_Score_5" / score_soft_max."sum_ExpDeltaScore" AS "SoftProba_5", score_soft_max."exp_delta_Score_6" / score_soft_max."sum_ExpDeltaScore" AS "SoftProba_6", score_soft_max."exp_delta_Score_7" / score_soft_max."sum_ExpDeltaScore" AS "SoftProba_7", score_soft_max."exp_delta_Score_8" / score_soft_max."sum_ExpDeltaScore" AS "SoftProba_8", score_soft_max."exp_delta_Score_9" / score_soft_max."sum_ExpDeltaScore" AS "SoftProba_9" 
FROM score_soft_max) AS soft_max_comp ON soft_max_comp."KEY_softmax" = "arg_max_t_Score"."KEY_Score")
 SELECT arg_max_cte."KEY" AS "KEY", arg_max_cte."Score_0" AS "Score_0", arg_max_cte."Score_1" AS "Score_1", arg_max_cte."Score_2" AS "Score_2", arg_max_cte."Score_3" AS "Score_3", arg_max_cte."Score_4" AS "Score_4", arg_max_cte."Score_5" AS "Score_5", arg_max_cte."Score_6" AS "Score_6", arg_max_cte."Score_7" AS "Score_7", arg_max_cte."Score_8" AS "Score_8", arg_max_cte."Score_9" AS "Score_9", arg_max_cte."SoftProba_0" AS "Proba_0", arg_max_cte."SoftProba_1" AS "Proba_1", arg_max_cte."SoftProba_2" AS "Proba_2", arg_max_cte."SoftProba_3" AS "Proba_3", arg_max_cte."SoftProba_4" AS "Proba_4", arg_max_cte."SoftProba_5" AS "Proba_5", arg_max_cte."SoftProba_6" AS "Proba_6", arg_max_cte."SoftProba_7" AS "Proba_7", arg_max_cte."SoftProba_8" AS "Proba_8", arg_max_cte."SoftProba_9" AS "Proba_9", CASE WHEN (arg_max_cte."SoftProba_0" IS NULL OR arg_max_cte."SoftProba_0" > 0.0) THEN ln(arg_max_cte."SoftProba_0") ELSE -1.79769313486231e+308 END AS "LogProba_0", CASE WHEN (arg_max_cte."SoftProba_1" IS NULL OR arg_max_cte."SoftProba_1" > 0.0) THEN ln(arg_max_cte."SoftProba_1") ELSE -1.79769313486231e+308 END AS "LogProba_1", CASE WHEN (arg_max_cte."SoftProba_2" IS NULL OR arg_max_cte."SoftProba_2" > 0.0) THEN ln(arg_max_cte."SoftProba_2") ELSE -1.79769313486231e+308 END AS "LogProba_2", CASE WHEN (arg_max_cte."SoftProba_3" IS NULL OR arg_max_cte."SoftProba_3" > 0.0) THEN ln(arg_max_cte."SoftProba_3") ELSE -1.79769313486231e+308 END AS "LogProba_3", CASE WHEN (arg_max_cte."SoftProba_4" IS NULL OR arg_max_cte."SoftProba_4" > 0.0) THEN ln(arg_max_cte."SoftProba_4") ELSE -1.79769313486231e+308 END AS "LogProba_4", CASE WHEN (arg_max_cte."SoftProba_5" IS NULL OR arg_max_cte."SoftProba_5" > 0.0) THEN ln(arg_max_cte."SoftProba_5") ELSE -1.79769313486231e+308 END AS "LogProba_5", CASE WHEN (arg_max_cte."SoftProba_6" IS NULL OR arg_max_cte."SoftProba_6" > 0.0) THEN ln(arg_max_cte."SoftProba_6") ELSE -1.79769313486231e+308 END AS "LogProba_6", CASE WHEN (arg_max_cte."SoftProba_7" IS NULL OR arg_max_cte."SoftProba_7" > 0.0) THEN ln(arg_max_cte."SoftProba_7") ELSE -1.79769313486231e+308 END AS "LogProba_7", CASE WHEN (arg_max_cte."SoftProba_8" IS NULL OR arg_max_cte."SoftProba_8" > 0.0) THEN ln(arg_max_cte."SoftProba_8") ELSE -1.79769313486231e+308 END AS "LogProba_8", CASE WHEN (arg_max_cte."SoftProba_9" IS NULL OR arg_max_cte."SoftProba_9" > 0.0) THEN ln(arg_max_cte."SoftProba_9") ELSE -1.79769313486231e+308 END AS "LogProba_9", arg_max_cte."arg_max_Score" AS "Decision", CASE WHEN (arg_max_cte."SoftProba_0" <= CASE WHEN (arg_max_cte."SoftProba_1" <= CASE WHEN (arg_max_cte."SoftProba_2" <= CASE WHEN (arg_max_cte."SoftProba_3" <= CASE WHEN (arg_max_cte."SoftProba_4" <= CASE WHEN (arg_max_cte."SoftProba_5" <= CASE WHEN (arg_max_cte."SoftProba_6" <= CASE WHEN (arg_max_cte."SoftProba_7" <= CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END) THEN CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END ELSE arg_max_cte."SoftProba_7" END) THEN CASE WHEN (arg_max_cte."SoftProba_7" <= CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END) THEN CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END ELSE arg_max_cte."SoftProba_7" END ELSE arg_max_cte."SoftProba_6" END) THEN CASE WHEN (arg_max_cte."SoftProba_6" <= CASE WHEN (arg_max_cte."SoftProba_7" <= CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END) THEN CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END ELSE arg_max_cte."SoftProba_7" END) THEN CASE WHEN (arg_max_cte."SoftProba_7" <= CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END) THEN CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END ELSE arg_max_cte."SoftProba_7" END ELSE arg_max_cte."SoftProba_6" END ELSE arg_max_cte."SoftProba_5" END) THEN CASE WHEN (arg_max_cte."SoftProba_5" <= CASE WHEN (arg_max_cte."SoftProba_6" <= CASE WHEN (arg_max_cte."SoftProba_7" <= CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END) THEN CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END ELSE arg_max_cte."SoftProba_7" END) THEN CASE WHEN (arg_max_cte."SoftProba_7" <= CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END) THEN CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END ELSE arg_max_cte."SoftProba_7" END ELSE arg_max_cte."SoftProba_6" END) THEN CASE WHEN (arg_max_cte."SoftProba_6" <= CASE WHEN (arg_max_cte."SoftProba_7" <= CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END) THEN CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END ELSE arg_max_cte."SoftProba_7" END) THEN CASE WHEN (arg_max_cte."SoftProba_7" <= CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END) THEN CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END ELSE arg_max_cte."SoftProba_7" END ELSE arg_max_cte."SoftProba_6" END ELSE arg_max_cte."SoftProba_5" END ELSE arg_max_cte."SoftProba_4" END) THEN CASE WHEN (arg_max_cte."SoftProba_4" <= CASE WHEN (arg_max_cte."SoftProba_5" <= CASE WHEN (arg_max_cte."SoftProba_6" <= CASE WHEN (arg_max_cte."SoftProba_7" <= CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END) THEN CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END ELSE arg_max_cte."SoftProba_7" END) THEN CASE WHEN (arg_max_cte."SoftProba_7" <= CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END) THEN CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END ELSE arg_max_cte."SoftProba_7" END ELSE arg_max_cte."SoftProba_6" END) THEN CASE WHEN (arg_max_cte."SoftProba_6" <= CASE WHEN (arg_max_cte."SoftProba_7" <= CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END) THEN CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END ELSE arg_max_cte."SoftProba_7" END) THEN CASE WHEN (arg_max_cte."SoftProba_7" <= CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END) THEN CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END ELSE arg_max_cte."SoftProba_7" END ELSE arg_max_cte."SoftProba_6" END ELSE arg_max_cte."SoftProba_5" END) THEN CASE WHEN (arg_max_cte."SoftProba_5" <= CASE WHEN (arg_max_cte."SoftProba_6" <= CASE WHEN (arg_max_cte."SoftProba_7" <= CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END) THEN CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END ELSE arg_max_cte."SoftProba_7" END) THEN CASE WHEN (arg_max_cte."SoftProba_7" <= CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END) THEN CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END ELSE arg_max_cte."SoftProba_7" END ELSE arg_max_cte."SoftProba_6" END) THEN CASE WHEN (arg_max_cte."SoftProba_6" <= CASE WHEN (arg_max_cte."SoftProba_7" <= CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END) THEN CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END ELSE arg_max_cte."SoftProba_7" END) THEN CASE WHEN (arg_max_cte."SoftProba_7" <= CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END) THEN CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END ELSE arg_max_cte."SoftProba_7" END ELSE arg_max_cte."SoftProba_6" END ELSE arg_max_cte."SoftProba_5" END ELSE arg_max_cte."SoftProba_4" END ELSE arg_max_cte."SoftProba_3" END) THEN CASE WHEN (arg_max_cte."SoftProba_3" <= CASE WHEN (arg_max_cte."SoftProba_4" <= CASE WHEN (arg_max_cte."SoftProba_5" <= CASE WHEN (arg_max_cte."SoftProba_6" <= CASE WHEN (arg_max_cte."SoftProba_7" <= CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END) THEN CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END ELSE arg_max_cte."SoftProba_7" END) THEN CASE WHEN (arg_max_cte."SoftProba_7" <= CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END) THEN CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END ELSE arg_max_cte."SoftProba_7" END ELSE arg_max_cte."SoftProba_6" END) THEN CASE WHEN (arg_max_cte."SoftProba_6" <= CASE WHEN (arg_max_cte."SoftProba_7" <= CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END) THEN CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END ELSE arg_max_cte."SoftProba_7" END) THEN CASE WHEN (arg_max_cte."SoftProba_7" <= CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END) THEN CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END ELSE arg_max_cte."SoftProba_7" END ELSE arg_max_cte."SoftProba_6" END ELSE arg_max_cte."SoftProba_5" END) THEN CASE WHEN (arg_max_cte."SoftProba_5" <= CASE WHEN (arg_max_cte."SoftProba_6" <= CASE WHEN (arg_max_cte."SoftProba_7" <= CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END) THEN CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END ELSE arg_max_cte."SoftProba_7" END) THEN CASE WHEN (arg_max_cte."SoftProba_7" <= CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END) THEN CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END ELSE arg_max_cte."SoftProba_7" END ELSE arg_max_cte."SoftProba_6" END) THEN CASE WHEN (arg_max_cte."SoftProba_6" <= CASE WHEN (arg_max_cte."SoftProba_7" <= CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END) THEN CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END ELSE arg_max_cte."SoftProba_7" END) THEN CASE WHEN (arg_max_cte."SoftProba_7" <= CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END) THEN CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END ELSE arg_max_cte."SoftProba_7" END ELSE arg_max_cte."SoftProba_6" END ELSE arg_max_cte."SoftProba_5" END ELSE arg_max_cte."SoftProba_4" END) THEN CASE WHEN (arg_max_cte."SoftProba_4" <= CASE WHEN (arg_max_cte."SoftProba_5" <= CASE WHEN (arg_max_cte."SoftProba_6" <= CASE WHEN (arg_max_cte."SoftProba_7" <= CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END) THEN CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END ELSE arg_max_cte."SoftProba_7" END) THEN CASE WHEN (arg_max_cte."SoftProba_7" <= CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END) THEN CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END ELSE arg_max_cte."SoftProba_7" END ELSE arg_max_cte."SoftProba_6" END) THEN CASE WHEN (arg_max_cte."SoftProba_6" <= CASE WHEN (arg_max_cte."SoftProba_7" <= CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END) THEN CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END ELSE arg_max_cte."SoftProba_7" END) THEN CASE WHEN (arg_max_cte."SoftProba_7" <= CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END) THEN CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END ELSE arg_max_cte."SoftProba_7" END ELSE arg_max_cte."SoftProba_6" END ELSE arg_max_cte."SoftProba_5" END) THEN CASE WHEN (arg_max_cte."SoftProba_5" <= CASE WHEN (arg_max_cte."SoftProba_6" <= CASE WHEN (arg_max_cte."SoftProba_7" <= CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END) THEN CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END ELSE arg_max_cte."SoftProba_7" END) THEN CASE WHEN (arg_max_cte."SoftProba_7" <= CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END) THEN CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END ELSE arg_max_cte."SoftProba_7" END ELSE arg_max_cte."SoftProba_6" END) THEN CASE WHEN (arg_max_cte."SoftProba_6" <= CASE WHEN (arg_max_cte."SoftProba_7" <= CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END) THEN CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END ELSE arg_max_cte."SoftProba_7" END) THEN CASE WHEN (arg_max_cte."SoftProba_7" <= CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END) THEN CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END ELSE arg_max_cte."SoftProba_7" END ELSE arg_max_cte."SoftProba_6" END ELSE arg_max_cte."SoftProba_5" END ELSE arg_max_cte."SoftProba_4" END ELSE arg_max_cte."SoftProba_3" END ELSE arg_max_cte."SoftProba_2" END) THEN CASE WHEN (arg_max_cte."SoftProba_2" <= CASE WHEN (arg_max_cte."SoftProba_3" <= CASE WHEN (arg_max_cte."SoftProba_4" <= CASE WHEN (arg_max_cte."SoftProba_5" <= CASE WHEN (arg_max_cte."SoftProba_6" <= CASE WHEN (arg_max_cte."SoftProba_7" <= CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END) THEN CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END ELSE arg_max_cte."SoftProba_7" END) THEN CASE WHEN (arg_max_cte."SoftProba_7" <= CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END) THEN CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END ELSE arg_max_cte."SoftProba_7" END ELSE arg_max_cte."SoftProba_6" END) THEN CASE WHEN (arg_max_cte."SoftProba_6" <= CASE WHEN (arg_max_cte."SoftProba_7" <= CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END) THEN CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END ELSE arg_max_cte."SoftProba_7" END) THEN CASE WHEN (arg_max_cte."SoftProba_7" <= CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END) THEN CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END ELSE arg_max_cte."SoftProba_7" END ELSE arg_max_cte."SoftProba_6" END ELSE arg_max_cte."SoftProba_5" END) THEN CASE WHEN (arg_max_cte."SoftProba_5" <= CASE WHEN (arg_max_cte."SoftProba_6" <= CASE WHEN (arg_max_cte."SoftProba_7" <= CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END) THEN CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END ELSE arg_max_cte."SoftProba_7" END) THEN CASE WHEN (arg_max_cte."SoftProba_7" <= CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END) THEN CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END ELSE arg_max_cte."SoftProba_7" END ELSE arg_max_cte."SoftProba_6" END) THEN CASE WHEN (arg_max_cte."SoftProba_6" <= CASE WHEN (arg_max_cte."SoftProba_7" <= CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END) THEN CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END ELSE arg_max_cte."SoftProba_7" END) THEN CASE WHEN (arg_max_cte."SoftProba_7" <= CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END) THEN CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END ELSE arg_max_cte."SoftProba_7" END ELSE arg_max_cte."SoftProba_6" END ELSE arg_max_cte."SoftProba_5" END ELSE arg_max_cte."SoftProba_4" END) THEN CASE WHEN (arg_max_cte."SoftProba_4" <= CASE WHEN (arg_max_cte."SoftProba_5" <= CASE WHEN (arg_max_cte."SoftProba_6" <= CASE WHEN (arg_max_cte."SoftProba_7" <= CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END) THEN CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END ELSE arg_max_cte."SoftProba_7" END) THEN CASE WHEN (arg_max_cte."SoftProba_7" <= CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END) THEN CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END ELSE arg_max_cte."SoftProba_7" END ELSE arg_max_cte."SoftProba_6" END) THEN CASE WHEN (arg_max_cte."SoftProba_6" <= CASE WHEN (arg_max_cte."SoftProba_7" <= CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END) THEN CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END ELSE arg_max_cte."SoftProba_7" END) THEN CASE WHEN (arg_max_cte."SoftProba_7" <= CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END) THEN CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END ELSE arg_max_cte."SoftProba_7" END ELSE arg_max_cte."SoftProba_6" END ELSE arg_max_cte."SoftProba_5" END) THEN CASE WHEN (arg_max_cte."SoftProba_5" <= CASE WHEN (arg_max_cte."SoftProba_6" <= CASE WHEN (arg_max_cte."SoftProba_7" <= CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END) THEN CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END ELSE arg_max_cte."SoftProba_7" END) THEN CASE WHEN (arg_max_cte."SoftProba_7" <= CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END) THEN CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END ELSE arg_max_cte."SoftProba_7" END ELSE arg_max_cte."SoftProba_6" END) THEN CASE WHEN (arg_max_cte."SoftProba_6" <= CASE WHEN (arg_max_cte."SoftProba_7" <= CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END) THEN CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END ELSE arg_max_cte."SoftProba_7" END) THEN CASE WHEN (arg_max_cte."SoftProba_7" <= CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END) THEN CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END ELSE arg_max_cte."SoftProba_7" END ELSE arg_max_cte."SoftProba_6" END ELSE arg_max_cte."SoftProba_5" END ELSE arg_max_cte."SoftProba_4" END ELSE arg_max_cte."SoftProba_3" END) THEN CASE WHEN (arg_max_cte."SoftProba_3" <= CASE WHEN (arg_max_cte."SoftProba_4" <= CASE WHEN (arg_max_cte."SoftProba_5" <= CASE WHEN (arg_max_cte."SoftProba_6" <= CASE WHEN (arg_max_cte."SoftProba_7" <= CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END) THEN CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END ELSE arg_max_cte."SoftProba_7" END) THEN CASE WHEN (arg_max_cte."SoftProba_7" <= CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END) THEN CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END ELSE arg_max_cte."SoftProba_7" END ELSE arg_max_cte."SoftProba_6" END) THEN CASE WHEN (arg_max_cte."SoftProba_6" <= CASE WHEN (arg_max_cte."SoftProba_7" <= CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END) THEN CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END ELSE arg_max_cte."SoftProba_7" END) THEN CASE WHEN (arg_max_cte."SoftProba_7" <= CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END) THEN CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END ELSE arg_max_cte."SoftProba_7" END ELSE arg_max_cte."SoftProba_6" END ELSE arg_max_cte."SoftProba_5" END) THEN CASE WHEN (arg_max_cte."SoftProba_5" <= CASE WHEN (arg_max_cte."SoftProba_6" <= CASE WHEN (arg_max_cte."SoftProba_7" <= CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END) THEN CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END ELSE arg_max_cte."SoftProba_7" END) THEN CASE WHEN (arg_max_cte."SoftProba_7" <= CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END) THEN CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END ELSE arg_max_cte."SoftProba_7" END ELSE arg_max_cte."SoftProba_6" END) THEN CASE WHEN (arg_max_cte."SoftProba_6" <= CASE WHEN (arg_max_cte."SoftProba_7" <= CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END) THEN CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END ELSE arg_max_cte."SoftProba_7" END) THEN CASE WHEN (arg_max_cte."SoftProba_7" <= CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END) THEN CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END ELSE arg_max_cte."SoftProba_7" END ELSE arg_max_cte."SoftProba_6" END ELSE arg_max_cte."SoftProba_5" END ELSE arg_max_cte."SoftProba_4" END) THEN CASE WHEN (arg_max_cte."SoftProba_4" <= CASE WHEN (arg_max_cte."SoftProba_5" <= CASE WHEN (arg_max_cte."SoftProba_6" <= CASE WHEN (arg_max_cte."SoftProba_7" <= CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END) THEN CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END ELSE arg_max_cte."SoftProba_7" END) THEN CASE WHEN (arg_max_cte."SoftProba_7" <= CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END) THEN CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END ELSE arg_max_cte."SoftProba_7" END ELSE arg_max_cte."SoftProba_6" END) THEN CASE WHEN (arg_max_cte."SoftProba_6" <= CASE WHEN (arg_max_cte."SoftProba_7" <= CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END) THEN CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END ELSE arg_max_cte."SoftProba_7" END) THEN CASE WHEN (arg_max_cte."SoftProba_7" <= CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END) THEN CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END ELSE arg_max_cte."SoftProba_7" END ELSE arg_max_cte."SoftProba_6" END ELSE arg_max_cte."SoftProba_5" END) THEN CASE WHEN (arg_max_cte."SoftProba_5" <= CASE WHEN (arg_max_cte."SoftProba_6" <= CASE WHEN (arg_max_cte."SoftProba_7" <= CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END) THEN CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END ELSE arg_max_cte."SoftProba_7" END) THEN CASE WHEN (arg_max_cte."SoftProba_7" <= CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END) THEN CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END ELSE arg_max_cte."SoftProba_7" END ELSE arg_max_cte."SoftProba_6" END) THEN CASE WHEN (arg_max_cte."SoftProba_6" <= CASE WHEN (arg_max_cte."SoftProba_7" <= CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END) THEN CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END ELSE arg_max_cte."SoftProba_7" END) THEN CASE WHEN (arg_max_cte."SoftProba_7" <= CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END) THEN CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END ELSE arg_max_cte."SoftProba_7" END ELSE arg_max_cte."SoftProba_6" END ELSE arg_max_cte."SoftProba_5" END ELSE arg_max_cte."SoftProba_4" END ELSE arg_max_cte."SoftProba_3" END ELSE arg_max_cte."SoftProba_2" END ELSE arg_max_cte."SoftProba_1" END) THEN CASE WHEN (arg_max_cte."SoftProba_1" <= CASE WHEN (arg_max_cte."SoftProba_2" <= CASE WHEN (arg_max_cte."SoftProba_3" <= CASE WHEN (arg_max_cte."SoftProba_4" <= CASE WHEN (arg_max_cte."SoftProba_5" <= CASE WHEN (arg_max_cte."SoftProba_6" <= CASE WHEN (arg_max_cte."SoftProba_7" <= CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END) THEN CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END ELSE arg_max_cte."SoftProba_7" END) THEN CASE WHEN (arg_max_cte."SoftProba_7" <= CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END) THEN CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END ELSE arg_max_cte."SoftProba_7" END ELSE arg_max_cte."SoftProba_6" END) THEN CASE WHEN (arg_max_cte."SoftProba_6" <= CASE WHEN (arg_max_cte."SoftProba_7" <= CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END) THEN CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END ELSE arg_max_cte."SoftProba_7" END) THEN CASE WHEN (arg_max_cte."SoftProba_7" <= CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END) THEN CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END ELSE arg_max_cte."SoftProba_7" END ELSE arg_max_cte."SoftProba_6" END ELSE arg_max_cte."SoftProba_5" END) THEN CASE WHEN (arg_max_cte."SoftProba_5" <= CASE WHEN (arg_max_cte."SoftProba_6" <= CASE WHEN (arg_max_cte."SoftProba_7" <= CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END) THEN CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END ELSE arg_max_cte."SoftProba_7" END) THEN CASE WHEN (arg_max_cte."SoftProba_7" <= CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END) THEN CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END ELSE arg_max_cte."SoftProba_7" END ELSE arg_max_cte."SoftProba_6" END) THEN CASE WHEN (arg_max_cte."SoftProba_6" <= CASE WHEN (arg_max_cte."SoftProba_7" <= CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END) THEN CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END ELSE arg_max_cte."SoftProba_7" END) THEN CASE WHEN (arg_max_cte."SoftProba_7" <= CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END) THEN CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END ELSE arg_max_cte."SoftProba_7" END ELSE arg_max_cte."SoftProba_6" END ELSE arg_max_cte."SoftProba_5" END ELSE arg_max_cte."SoftProba_4" END) THEN CASE WHEN (arg_max_cte."SoftProba_4" <= CASE WHEN (arg_max_cte."SoftProba_5" <= CASE WHEN (arg_max_cte."SoftProba_6" <= CASE WHEN (arg_max_cte."SoftProba_7" <= CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END) THEN CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END ELSE arg_max_cte."SoftProba_7" END) THEN CASE WHEN (arg_max_cte."SoftProba_7" <= CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END) THEN CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END ELSE arg_max_cte."SoftProba_7" END ELSE arg_max_cte."SoftProba_6" END) THEN CASE WHEN (arg_max_cte."SoftProba_6" <= CASE WHEN (arg_max_cte."SoftProba_7" <= CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END) THEN CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END ELSE arg_max_cte."SoftProba_7" END) THEN CASE WHEN (arg_max_cte."SoftProba_7" <= CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END) THEN CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END ELSE arg_max_cte."SoftProba_7" END ELSE arg_max_cte."SoftProba_6" END ELSE arg_max_cte."SoftProba_5" END) THEN CASE WHEN (arg_max_cte."SoftProba_5" <= CASE WHEN (arg_max_cte."SoftProba_6" <= CASE WHEN (arg_max_cte."SoftProba_7" <= CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END) THEN CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END ELSE arg_max_cte."SoftProba_7" END) THEN CASE WHEN (arg_max_cte."SoftProba_7" <= CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END) THEN CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END ELSE arg_max_cte."SoftProba_7" END ELSE arg_max_cte."SoftProba_6" END) THEN CASE WHEN (arg_max_cte."SoftProba_6" <= CASE WHEN (arg_max_cte."SoftProba_7" <= CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END) THEN CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END ELSE arg_max_cte."SoftProba_7" END) THEN CASE WHEN (arg_max_cte."SoftProba_7" <= CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END) THEN CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END ELSE arg_max_cte."SoftProba_7" END ELSE arg_max_cte."SoftProba_6" END ELSE arg_max_cte."SoftProba_5" END ELSE arg_max_cte."SoftProba_4" END ELSE arg_max_cte."SoftProba_3" END) THEN CASE WHEN (arg_max_cte."SoftProba_3" <= CASE WHEN (arg_max_cte."SoftProba_4" <= CASE WHEN (arg_max_cte."SoftProba_5" <= CASE WHEN (arg_max_cte."SoftProba_6" <= CASE WHEN (arg_max_cte."SoftProba_7" <= CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END) THEN CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END ELSE arg_max_cte."SoftProba_7" END) THEN CASE WHEN (arg_max_cte."SoftProba_7" <= CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END) THEN CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END ELSE arg_max_cte."SoftProba_7" END ELSE arg_max_cte."SoftProba_6" END) THEN CASE WHEN (arg_max_cte."SoftProba_6" <= CASE WHEN (arg_max_cte."SoftProba_7" <= CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END) THEN CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END ELSE arg_max_cte."SoftProba_7" END) THEN CASE WHEN (arg_max_cte."SoftProba_7" <= CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END) THEN CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END ELSE arg_max_cte."SoftProba_7" END ELSE arg_max_cte."SoftProba_6" END ELSE arg_max_cte."SoftProba_5" END) THEN CASE WHEN (arg_max_cte."SoftProba_5" <= CASE WHEN (arg_max_cte."SoftProba_6" <= CASE WHEN (arg_max_cte."SoftProba_7" <= CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END) THEN CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END ELSE arg_max_cte."SoftProba_7" END) THEN CASE WHEN (arg_max_cte."SoftProba_7" <= CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END) THEN CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END ELSE arg_max_cte."SoftProba_7" END ELSE arg_max_cte."SoftProba_6" END) THEN CASE WHEN (arg_max_cte."SoftProba_6" <= CASE WHEN (arg_max_cte."SoftProba_7" <= CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END) THEN CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END ELSE arg_max_cte."SoftProba_7" END) THEN CASE WHEN (arg_max_cte."SoftProba_7" <= CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END) THEN CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END ELSE arg_max_cte."SoftProba_7" END ELSE arg_max_cte."SoftProba_6" END ELSE arg_max_cte."SoftProba_5" END ELSE arg_max_cte."SoftProba_4" END) THEN CASE WHEN (arg_max_cte."SoftProba_4" <= CASE WHEN (arg_max_cte."SoftProba_5" <= CASE WHEN (arg_max_cte."SoftProba_6" <= CASE WHEN (arg_max_cte."SoftProba_7" <= CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END) THEN CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END ELSE arg_max_cte."SoftProba_7" END) THEN CASE WHEN (arg_max_cte."SoftProba_7" <= CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END) THEN CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END ELSE arg_max_cte."SoftProba_7" END ELSE arg_max_cte."SoftProba_6" END) THEN CASE WHEN (arg_max_cte."SoftProba_6" <= CASE WHEN (arg_max_cte."SoftProba_7" <= CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END) THEN CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END ELSE arg_max_cte."SoftProba_7" END) THEN CASE WHEN (arg_max_cte."SoftProba_7" <= CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END) THEN CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END ELSE arg_max_cte."SoftProba_7" END ELSE arg_max_cte."SoftProba_6" END ELSE arg_max_cte."SoftProba_5" END) THEN CASE WHEN (arg_max_cte."SoftProba_5" <= CASE WHEN (arg_max_cte."SoftProba_6" <= CASE WHEN (arg_max_cte."SoftProba_7" <= CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END) THEN CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END ELSE arg_max_cte."SoftProba_7" END) THEN CASE WHEN (arg_max_cte."SoftProba_7" <= CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END) THEN CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END ELSE arg_max_cte."SoftProba_7" END ELSE arg_max_cte."SoftProba_6" END) THEN CASE WHEN (arg_max_cte."SoftProba_6" <= CASE WHEN (arg_max_cte."SoftProba_7" <= CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END) THEN CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END ELSE arg_max_cte."SoftProba_7" END) THEN CASE WHEN (arg_max_cte."SoftProba_7" <= CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END) THEN CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END ELSE arg_max_cte."SoftProba_7" END ELSE arg_max_cte."SoftProba_6" END ELSE arg_max_cte."SoftProba_5" END ELSE arg_max_cte."SoftProba_4" END ELSE arg_max_cte."SoftProba_3" END ELSE arg_max_cte."SoftProba_2" END) THEN CASE WHEN (arg_max_cte."SoftProba_2" <= CASE WHEN (arg_max_cte."SoftProba_3" <= CASE WHEN (arg_max_cte."SoftProba_4" <= CASE WHEN (arg_max_cte."SoftProba_5" <= CASE WHEN (arg_max_cte."SoftProba_6" <= CASE WHEN (arg_max_cte."SoftProba_7" <= CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END) THEN CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END ELSE arg_max_cte."SoftProba_7" END) THEN CASE WHEN (arg_max_cte."SoftProba_7" <= CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END) THEN CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END ELSE arg_max_cte."SoftProba_7" END ELSE arg_max_cte."SoftProba_6" END) THEN CASE WHEN (arg_max_cte."SoftProba_6" <= CASE WHEN (arg_max_cte."SoftProba_7" <= CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END) THEN CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END ELSE arg_max_cte."SoftProba_7" END) THEN CASE WHEN (arg_max_cte."SoftProba_7" <= CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END) THEN CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END ELSE arg_max_cte."SoftProba_7" END ELSE arg_max_cte."SoftProba_6" END ELSE arg_max_cte."SoftProba_5" END) THEN CASE WHEN (arg_max_cte."SoftProba_5" <= CASE WHEN (arg_max_cte."SoftProba_6" <= CASE WHEN (arg_max_cte."SoftProba_7" <= CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END) THEN CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END ELSE arg_max_cte."SoftProba_7" END) THEN CASE WHEN (arg_max_cte."SoftProba_7" <= CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END) THEN CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END ELSE arg_max_cte."SoftProba_7" END ELSE arg_max_cte."SoftProba_6" END) THEN CASE WHEN (arg_max_cte."SoftProba_6" <= CASE WHEN (arg_max_cte."SoftProba_7" <= CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END) THEN CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END ELSE arg_max_cte."SoftProba_7" END) THEN CASE WHEN (arg_max_cte."SoftProba_7" <= CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END) THEN CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END ELSE arg_max_cte."SoftProba_7" END ELSE arg_max_cte."SoftProba_6" END ELSE arg_max_cte."SoftProba_5" END ELSE arg_max_cte."SoftProba_4" END) THEN CASE WHEN (arg_max_cte."SoftProba_4" <= CASE WHEN (arg_max_cte."SoftProba_5" <= CASE WHEN (arg_max_cte."SoftProba_6" <= CASE WHEN (arg_max_cte."SoftProba_7" <= CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END) THEN CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END ELSE arg_max_cte."SoftProba_7" END) THEN CASE WHEN (arg_max_cte."SoftProba_7" <= CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END) THEN CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END ELSE arg_max_cte."SoftProba_7" END ELSE arg_max_cte."SoftProba_6" END) THEN CASE WHEN (arg_max_cte."SoftProba_6" <= CASE WHEN (arg_max_cte."SoftProba_7" <= CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END) THEN CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END ELSE arg_max_cte."SoftProba_7" END) THEN CASE WHEN (arg_max_cte."SoftProba_7" <= CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END) THEN CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END ELSE arg_max_cte."SoftProba_7" END ELSE arg_max_cte."SoftProba_6" END ELSE arg_max_cte."SoftProba_5" END) THEN CASE WHEN (arg_max_cte."SoftProba_5" <= CASE WHEN (arg_max_cte."SoftProba_6" <= CASE WHEN (arg_max_cte."SoftProba_7" <= CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END) THEN CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END ELSE arg_max_cte."SoftProba_7" END) THEN CASE WHEN (arg_max_cte."SoftProba_7" <= CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END) THEN CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END ELSE arg_max_cte."SoftProba_7" END ELSE arg_max_cte."SoftProba_6" END) THEN CASE WHEN (arg_max_cte."SoftProba_6" <= CASE WHEN (arg_max_cte."SoftProba_7" <= CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END) THEN CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END ELSE arg_max_cte."SoftProba_7" END) THEN CASE WHEN (arg_max_cte."SoftProba_7" <= CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END) THEN CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END ELSE arg_max_cte."SoftProba_7" END ELSE arg_max_cte."SoftProba_6" END ELSE arg_max_cte."SoftProba_5" END ELSE arg_max_cte."SoftProba_4" END ELSE arg_max_cte."SoftProba_3" END) THEN CASE WHEN (arg_max_cte."SoftProba_3" <= CASE WHEN (arg_max_cte."SoftProba_4" <= CASE WHEN (arg_max_cte."SoftProba_5" <= CASE WHEN (arg_max_cte."SoftProba_6" <= CASE WHEN (arg_max_cte."SoftProba_7" <= CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END) THEN CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END ELSE arg_max_cte."SoftProba_7" END) THEN CASE WHEN (arg_max_cte."SoftProba_7" <= CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END) THEN CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END ELSE arg_max_cte."SoftProba_7" END ELSE arg_max_cte."SoftProba_6" END) THEN CASE WHEN (arg_max_cte."SoftProba_6" <= CASE WHEN (arg_max_cte."SoftProba_7" <= CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END) THEN CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END ELSE arg_max_cte."SoftProba_7" END) THEN CASE WHEN (arg_max_cte."SoftProba_7" <= CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END) THEN CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END ELSE arg_max_cte."SoftProba_7" END ELSE arg_max_cte."SoftProba_6" END ELSE arg_max_cte."SoftProba_5" END) THEN CASE WHEN (arg_max_cte."SoftProba_5" <= CASE WHEN (arg_max_cte."SoftProba_6" <= CASE WHEN (arg_max_cte."SoftProba_7" <= CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END) THEN CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END ELSE arg_max_cte."SoftProba_7" END) THEN CASE WHEN (arg_max_cte."SoftProba_7" <= CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END) THEN CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END ELSE arg_max_cte."SoftProba_7" END ELSE arg_max_cte."SoftProba_6" END) THEN CASE WHEN (arg_max_cte."SoftProba_6" <= CASE WHEN (arg_max_cte."SoftProba_7" <= CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END) THEN CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END ELSE arg_max_cte."SoftProba_7" END) THEN CASE WHEN (arg_max_cte."SoftProba_7" <= CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END) THEN CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END ELSE arg_max_cte."SoftProba_7" END ELSE arg_max_cte."SoftProba_6" END ELSE arg_max_cte."SoftProba_5" END ELSE arg_max_cte."SoftProba_4" END) THEN CASE WHEN (arg_max_cte."SoftProba_4" <= CASE WHEN (arg_max_cte."SoftProba_5" <= CASE WHEN (arg_max_cte."SoftProba_6" <= CASE WHEN (arg_max_cte."SoftProba_7" <= CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END) THEN CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END ELSE arg_max_cte."SoftProba_7" END) THEN CASE WHEN (arg_max_cte."SoftProba_7" <= CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END) THEN CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END ELSE arg_max_cte."SoftProba_7" END ELSE arg_max_cte."SoftProba_6" END) THEN CASE WHEN (arg_max_cte."SoftProba_6" <= CASE WHEN (arg_max_cte."SoftProba_7" <= CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END) THEN CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END ELSE arg_max_cte."SoftProba_7" END) THEN CASE WHEN (arg_max_cte."SoftProba_7" <= CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END) THEN CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END ELSE arg_max_cte."SoftProba_7" END ELSE arg_max_cte."SoftProba_6" END ELSE arg_max_cte."SoftProba_5" END) THEN CASE WHEN (arg_max_cte."SoftProba_5" <= CASE WHEN (arg_max_cte."SoftProba_6" <= CASE WHEN (arg_max_cte."SoftProba_7" <= CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END) THEN CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END ELSE arg_max_cte."SoftProba_7" END) THEN CASE WHEN (arg_max_cte."SoftProba_7" <= CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END) THEN CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END ELSE arg_max_cte."SoftProba_7" END ELSE arg_max_cte."SoftProba_6" END) THEN CASE WHEN (arg_max_cte."SoftProba_6" <= CASE WHEN (arg_max_cte."SoftProba_7" <= CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END) THEN CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END ELSE arg_max_cte."SoftProba_7" END) THEN CASE WHEN (arg_max_cte."SoftProba_7" <= CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END) THEN CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END ELSE arg_max_cte."SoftProba_7" END ELSE arg_max_cte."SoftProba_6" END ELSE arg_max_cte."SoftProba_5" END ELSE arg_max_cte."SoftProba_4" END ELSE arg_max_cte."SoftProba_3" END ELSE arg_max_cte."SoftProba_2" END ELSE arg_max_cte."SoftProba_1" END ELSE arg_max_cte."SoftProba_0" END AS "DecisionProba" 
FROM arg_max_cte