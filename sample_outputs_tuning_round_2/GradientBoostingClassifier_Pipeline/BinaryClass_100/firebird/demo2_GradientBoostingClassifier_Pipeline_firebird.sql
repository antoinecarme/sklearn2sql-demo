-- This SQL code was generated by sklearn2sql (development version).
-- Copyright 2017

WITH "ADS_imp_1_OUT" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_0" IS NULL) THEN 0.149034408453 ELSE "ADS"."Feature_0" END AS impter_2, CASE WHEN ("ADS"."Feature_1" IS NULL) THEN -0.0336763649303 ELSE "ADS"."Feature_1" END AS impter_3, CASE WHEN ("ADS"."Feature_2" IS NULL) THEN 0.119333163556 ELSE "ADS"."Feature_2" END AS impter_4, CASE WHEN ("ADS"."Feature_3" IS NULL) THEN -0.173692031302 ELSE "ADS"."Feature_3" END AS impter_5, CASE WHEN ("ADS"."Feature_4" IS NULL) THEN 0.0653435549211 ELSE "ADS"."Feature_4" END AS impter_6, CASE WHEN ("ADS"."Feature_5" IS NULL) THEN 0.243622899376 ELSE "ADS"."Feature_5" END AS impter_7, CASE WHEN ("ADS"."Feature_6" IS NULL) THEN -0.113673579111 ELSE "ADS"."Feature_6" END AS impter_8, CASE WHEN ("ADS"."Feature_7" IS NULL) THEN -0.211764438767 ELSE "ADS"."Feature_7" END AS impter_9, CASE WHEN ("ADS"."Feature_8" IS NULL) THEN 0.115139799146 ELSE "ADS"."Feature_8" END AS impter_10, CASE WHEN ("ADS"."Feature_9" IS NULL) THEN 0.0291119249386 ELSE "ADS"."Feature_9" END AS impter_11, CASE WHEN ("ADS"."Feature_10" IS NULL) THEN 0.110771892686 ELSE "ADS"."Feature_10" END AS impter_12, CASE WHEN ("ADS"."Feature_11" IS NULL) THEN 0.00145803754246 ELSE "ADS"."Feature_11" END AS impter_13, CASE WHEN ("ADS"."Feature_12" IS NULL) THEN -0.0773739291867 ELSE "ADS"."Feature_12" END AS impter_14, CASE WHEN ("ADS"."Feature_13" IS NULL) THEN -0.113957287588 ELSE "ADS"."Feature_13" END AS impter_15, CASE WHEN ("ADS"."Feature_14" IS NULL) THEN -0.12567631285 ELSE "ADS"."Feature_14" END AS impter_16, CASE WHEN ("ADS"."Feature_15" IS NULL) THEN -0.0579959783399 ELSE "ADS"."Feature_15" END AS impter_17, CASE WHEN ("ADS"."Feature_16" IS NULL) THEN -0.141812641745 ELSE "ADS"."Feature_16" END AS impter_18, CASE WHEN ("ADS"."Feature_17" IS NULL) THEN -0.12654542869 ELSE "ADS"."Feature_17" END AS impter_19, CASE WHEN ("ADS"."Feature_18" IS NULL) THEN -0.0781224868352 ELSE "ADS"."Feature_18" END AS impter_20, CASE WHEN ("ADS"."Feature_19" IS NULL) THEN -0.0764873768302 ELSE "ADS"."Feature_19" END AS impter_21, CASE WHEN ("ADS"."Feature_20" IS NULL) THEN 0.0586426242787 ELSE "ADS"."Feature_20" END AS impter_22, CASE WHEN ("ADS"."Feature_21" IS NULL) THEN 0.108440370746 ELSE "ADS"."Feature_21" END AS impter_23, CASE WHEN ("ADS"."Feature_22" IS NULL) THEN 0.0600659693334 ELSE "ADS"."Feature_22" END AS impter_24, CASE WHEN ("ADS"."Feature_23" IS NULL) THEN 0.152557712719 ELSE "ADS"."Feature_23" END AS impter_25, CASE WHEN ("ADS"."Feature_24" IS NULL) THEN -0.047123256878 ELSE "ADS"."Feature_24" END AS impter_26, CASE WHEN ("ADS"."Feature_25" IS NULL) THEN -0.0569629691409 ELSE "ADS"."Feature_25" END AS impter_27, CASE WHEN ("ADS"."Feature_26" IS NULL) THEN 0.0961468409994 ELSE "ADS"."Feature_26" END AS impter_28, CASE WHEN ("ADS"."Feature_27" IS NULL) THEN 0.104338334098 ELSE "ADS"."Feature_27" END AS impter_29, CASE WHEN ("ADS"."Feature_28" IS NULL) THEN 0.0325771619196 ELSE "ADS"."Feature_28" END AS impter_30, CASE WHEN ("ADS"."Feature_29" IS NULL) THEN 0.0614290574937 ELSE "ADS"."Feature_29" END AS impter_31, CASE WHEN ("ADS"."Feature_30" IS NULL) THEN -0.0145404234607 ELSE "ADS"."Feature_30" END AS impter_32, CASE WHEN ("ADS"."Feature_31" IS NULL) THEN -0.112338009994 ELSE "ADS"."Feature_31" END AS impter_33, CASE WHEN ("ADS"."Feature_32" IS NULL) THEN 0.118912844605 ELSE "ADS"."Feature_32" END AS impter_34, CASE WHEN ("ADS"."Feature_33" IS NULL) THEN 0.228686493008 ELSE "ADS"."Feature_33" END AS impter_35, CASE WHEN ("ADS"."Feature_34" IS NULL) THEN 0.235661815499 ELSE "ADS"."Feature_34" END AS impter_36, CASE WHEN ("ADS"."Feature_35" IS NULL) THEN 0.0731697039996 ELSE "ADS"."Feature_35" END AS impter_37, CASE WHEN ("ADS"."Feature_36" IS NULL) THEN -0.0331940982747 ELSE "ADS"."Feature_36" END AS impter_38, CASE WHEN ("ADS"."Feature_37" IS NULL) THEN 0.273493877418 ELSE "ADS"."Feature_37" END AS impter_39, CASE WHEN ("ADS"."Feature_38" IS NULL) THEN -0.0232895677422 ELSE "ADS"."Feature_38" END AS impter_40, CASE WHEN ("ADS"."Feature_39" IS NULL) THEN 0.0302883792606 ELSE "ADS"."Feature_39" END AS impter_41, CASE WHEN ("ADS"."Feature_40" IS NULL) THEN -0.107368262331 ELSE "ADS"."Feature_40" END AS impter_42, CASE WHEN ("ADS"."Feature_41" IS NULL) THEN 0.0264029500979 ELSE "ADS"."Feature_41" END AS impter_43, CASE WHEN ("ADS"."Feature_42" IS NULL) THEN -0.0967714665491 ELSE "ADS"."Feature_42" END AS impter_44, CASE WHEN ("ADS"."Feature_43" IS NULL) THEN 0.00597424834297 ELSE "ADS"."Feature_43" END AS impter_45, CASE WHEN ("ADS"."Feature_44" IS NULL) THEN 0.0369172681271 ELSE "ADS"."Feature_44" END AS impter_46, CASE WHEN ("ADS"."Feature_45" IS NULL) THEN -0.145257173824 ELSE "ADS"."Feature_45" END AS impter_47, CASE WHEN ("ADS"."Feature_46" IS NULL) THEN -0.166752698812 ELSE "ADS"."Feature_46" END AS impter_48, CASE WHEN ("ADS"."Feature_47" IS NULL) THEN 0.250844656957 ELSE "ADS"."Feature_47" END AS impter_49, CASE WHEN ("ADS"."Feature_48" IS NULL) THEN 0.146233983223 ELSE "ADS"."Feature_48" END AS impter_50, CASE WHEN ("ADS"."Feature_49" IS NULL) THEN 0.101854311334 ELSE "ADS"."Feature_49" END AS impter_51, CASE WHEN ("ADS"."Feature_50" IS NULL) THEN -0.132925609451 ELSE "ADS"."Feature_50" END AS impter_52, CASE WHEN ("ADS"."Feature_51" IS NULL) THEN -0.0421917913654 ELSE "ADS"."Feature_51" END AS impter_53, CASE WHEN ("ADS"."Feature_52" IS NULL) THEN 0.152140284047 ELSE "ADS"."Feature_52" END AS impter_54, CASE WHEN ("ADS"."Feature_53" IS NULL) THEN -0.158213723143 ELSE "ADS"."Feature_53" END AS impter_55, CASE WHEN ("ADS"."Feature_54" IS NULL) THEN 0.179262605358 ELSE "ADS"."Feature_54" END AS impter_56, CASE WHEN ("ADS"."Feature_55" IS NULL) THEN 0.0507753321044 ELSE "ADS"."Feature_55" END AS impter_57, CASE WHEN ("ADS"."Feature_56" IS NULL) THEN -0.0118845513623 ELSE "ADS"."Feature_56" END AS impter_58, CASE WHEN ("ADS"."Feature_57" IS NULL) THEN -0.0494874506914 ELSE "ADS"."Feature_57" END AS impter_59, CASE WHEN ("ADS"."Feature_58" IS NULL) THEN -0.132567335525 ELSE "ADS"."Feature_58" END AS impter_60, CASE WHEN ("ADS"."Feature_59" IS NULL) THEN 0.118662382025 ELSE "ADS"."Feature_59" END AS impter_61, CASE WHEN ("ADS"."Feature_60" IS NULL) THEN -0.0659082852023 ELSE "ADS"."Feature_60" END AS impter_62, CASE WHEN ("ADS"."Feature_61" IS NULL) THEN 0.155485733887 ELSE "ADS"."Feature_61" END AS impter_63, CASE WHEN ("ADS"."Feature_62" IS NULL) THEN -0.00660830149098 ELSE "ADS"."Feature_62" END AS impter_64, CASE WHEN ("ADS"."Feature_63" IS NULL) THEN -0.0182758014849 ELSE "ADS"."Feature_63" END AS impter_65, CASE WHEN ("ADS"."Feature_64" IS NULL) THEN -0.0273663174287 ELSE "ADS"."Feature_64" END AS impter_66, CASE WHEN ("ADS"."Feature_65" IS NULL) THEN 0.0143662500367 ELSE "ADS"."Feature_65" END AS impter_67, CASE WHEN ("ADS"."Feature_66" IS NULL) THEN 0.0540753000896 ELSE "ADS"."Feature_66" END AS impter_68, CASE WHEN ("ADS"."Feature_67" IS NULL) THEN -0.230852733839 ELSE "ADS"."Feature_67" END AS impter_69, CASE WHEN ("ADS"."Feature_68" IS NULL) THEN -0.243965288084 ELSE "ADS"."Feature_68" END AS impter_70, CASE WHEN ("ADS"."Feature_69" IS NULL) THEN 0.0654506578766 ELSE "ADS"."Feature_69" END AS impter_71, CASE WHEN ("ADS"."Feature_70" IS NULL) THEN 0.0426651830202 ELSE "ADS"."Feature_70" END AS impter_72, CASE WHEN ("ADS"."Feature_71" IS NULL) THEN -0.154045182035 ELSE "ADS"."Feature_71" END AS impter_73, CASE WHEN ("ADS"."Feature_72" IS NULL) THEN -0.222235256457 ELSE "ADS"."Feature_72" END AS impter_74, CASE WHEN ("ADS"."Feature_73" IS NULL) THEN 0.0685606372973 ELSE "ADS"."Feature_73" END AS impter_75, CASE WHEN ("ADS"."Feature_74" IS NULL) THEN -0.0963959208539 ELSE "ADS"."Feature_74" END AS impter_76, CASE WHEN ("ADS"."Feature_75" IS NULL) THEN 0.207475189275 ELSE "ADS"."Feature_75" END AS impter_77, CASE WHEN ("ADS"."Feature_76" IS NULL) THEN -0.139452563671 ELSE "ADS"."Feature_76" END AS impter_78, CASE WHEN ("ADS"."Feature_77" IS NULL) THEN 0.0219542087737 ELSE "ADS"."Feature_77" END AS impter_79, CASE WHEN ("ADS"."Feature_78" IS NULL) THEN 0.0703351703703 ELSE "ADS"."Feature_78" END AS impter_80, CASE WHEN ("ADS"."Feature_79" IS NULL) THEN 0.120624721907 ELSE "ADS"."Feature_79" END AS impter_81, CASE WHEN ("ADS"."Feature_80" IS NULL) THEN -0.0337659474425 ELSE "ADS"."Feature_80" END AS impter_82, CASE WHEN ("ADS"."Feature_81" IS NULL) THEN -0.110635213133 ELSE "ADS"."Feature_81" END AS impter_83, CASE WHEN ("ADS"."Feature_82" IS NULL) THEN 0.0402642804367 ELSE "ADS"."Feature_82" END AS impter_84, CASE WHEN ("ADS"."Feature_83" IS NULL) THEN 0.0476196986347 ELSE "ADS"."Feature_83" END AS impter_85, CASE WHEN ("ADS"."Feature_84" IS NULL) THEN 0.102945428966 ELSE "ADS"."Feature_84" END AS impter_86, CASE WHEN ("ADS"."Feature_85" IS NULL) THEN 0.0354313908654 ELSE "ADS"."Feature_85" END AS impter_87, CASE WHEN ("ADS"."Feature_86" IS NULL) THEN 0.158126749954 ELSE "ADS"."Feature_86" END AS impter_88, CASE WHEN ("ADS"."Feature_87" IS NULL) THEN -0.093706792025 ELSE "ADS"."Feature_87" END AS impter_89, CASE WHEN ("ADS"."Feature_88" IS NULL) THEN -0.0535217413313 ELSE "ADS"."Feature_88" END AS impter_90, CASE WHEN ("ADS"."Feature_89" IS NULL) THEN -0.0567114213575 ELSE "ADS"."Feature_89" END AS impter_91, CASE WHEN ("ADS"."Feature_90" IS NULL) THEN 0.168350191992 ELSE "ADS"."Feature_90" END AS impter_92, CASE WHEN ("ADS"."Feature_91" IS NULL) THEN -0.0801468778596 ELSE "ADS"."Feature_91" END AS impter_93, CASE WHEN ("ADS"."Feature_92" IS NULL) THEN 0.0673275172113 ELSE "ADS"."Feature_92" END AS impter_94, CASE WHEN ("ADS"."Feature_93" IS NULL) THEN -0.00888651681787 ELSE "ADS"."Feature_93" END AS impter_95, CASE WHEN ("ADS"."Feature_94" IS NULL) THEN 0.0260953855178 ELSE "ADS"."Feature_94" END AS impter_96, CASE WHEN ("ADS"."Feature_95" IS NULL) THEN 0.04435425201 ELSE "ADS"."Feature_95" END AS impter_97, CASE WHEN ("ADS"."Feature_96" IS NULL) THEN 0.0268954080706 ELSE "ADS"."Feature_96" END AS impter_98, CASE WHEN ("ADS"."Feature_97" IS NULL) THEN 0.182329715391 ELSE "ADS"."Feature_97" END AS impter_99, CASE WHEN ("ADS"."Feature_98" IS NULL) THEN -0.12132540363 ELSE "ADS"."Feature_98" END AS impter_100, CASE WHEN ("ADS"."Feature_99" IS NULL) THEN 0.00442013252429 ELSE "ADS"."Feature_99" END AS impter_101 
FROM "BinaryClass_100" AS "ADS"), 
"ADS_sca_2_OUT" AS 
(SELECT "ADS_imp_1_OUT"."KEY" AS "KEY", (CAST("ADS_imp_1_OUT".impter_2 AS DOUBLE) - 0.149034408453) / 0.863660967893 AS scaler_2, (CAST("ADS_imp_1_OUT".impter_3 AS DOUBLE) - -0.0336763649303) / 0.957846118882 AS scaler_3, (CAST("ADS_imp_1_OUT".impter_4 AS DOUBLE) - 0.119333163556) / 0.988940710895 AS scaler_4, (CAST("ADS_imp_1_OUT".impter_5 AS DOUBLE) - -0.173692031302) / 0.925555542437 AS scaler_5, (CAST("ADS_imp_1_OUT".impter_6 AS DOUBLE) - 0.0653435549211) / 1.25490665905 AS scaler_6, (CAST("ADS_imp_1_OUT".impter_7 AS DOUBLE) - 0.243622899376) / 1.02899858975 AS scaler_7, (CAST("ADS_imp_1_OUT".impter_8 AS DOUBLE) - -0.113673579111) / 0.892313689578 AS scaler_8, (CAST("ADS_imp_1_OUT".impter_9 AS DOUBLE) - -0.211764438767) / 0.900298899995 AS scaler_9, (CAST("ADS_imp_1_OUT".impter_10 AS DOUBLE) - 0.115139799146) / 1.04079311782 AS scaler_10, (CAST("ADS_imp_1_OUT".impter_11 AS DOUBLE) - 0.0291119249386) / 0.819188267775 AS scaler_11, (CAST("ADS_imp_1_OUT".impter_12 AS DOUBLE) - 0.110771892686) / 1.1250344343 AS scaler_12, (CAST("ADS_imp_1_OUT".impter_13 AS DOUBLE) - 0.00145803754246) / 1.05817527823 AS scaler_13, (CAST("ADS_imp_1_OUT".impter_14 AS DOUBLE) - -0.0773739291867) / 0.941909260462 AS scaler_14, (CAST("ADS_imp_1_OUT".impter_15 AS DOUBLE) - -0.113957287588) / 0.984434017257 AS scaler_15, (CAST("ADS_imp_1_OUT".impter_16 AS DOUBLE) - -0.12567631285) / 1.06969606599 AS scaler_16, (CAST("ADS_imp_1_OUT".impter_17 AS DOUBLE) - -0.0579959783399) / 0.957224686977 AS scaler_17, (CAST("ADS_imp_1_OUT".impter_18 AS DOUBLE) - -0.141812641745) / 0.940278231802 AS scaler_18, (CAST("ADS_imp_1_OUT".impter_19 AS DOUBLE) - -0.12654542869) / 1.03940757746 AS scaler_19, (CAST("ADS_imp_1_OUT".impter_20 AS DOUBLE) - -0.0781224868352) / 1.32237602306 AS scaler_20, (CAST("ADS_imp_1_OUT".impter_21 AS DOUBLE) - -0.0764873768302) / 0.948894937925 AS scaler_21, (CAST("ADS_imp_1_OUT".impter_22 AS DOUBLE) - 0.0586426242787) / 0.953858142664 AS scaler_22, (CAST("ADS_imp_1_OUT".impter_23 AS DOUBLE) - 0.108440370746) / 1.21093008257 AS scaler_23, (CAST("ADS_imp_1_OUT".impter_24 AS DOUBLE) - 0.0600659693334) / 0.919150215651 AS scaler_24, (CAST("ADS_imp_1_OUT".impter_25 AS DOUBLE) - 0.152557712719) / 0.929957615475 AS scaler_25, (CAST("ADS_imp_1_OUT".impter_26 AS DOUBLE) - -0.047123256878) / 0.772185544077 AS scaler_26, (CAST("ADS_imp_1_OUT".impter_27 AS DOUBLE) - -0.0569629691409) / 0.865508439351 AS scaler_27, (CAST("ADS_imp_1_OUT".impter_28 AS DOUBLE) - 0.0961468409994) / 0.96937898079 AS scaler_28, (CAST("ADS_imp_1_OUT".impter_29 AS DOUBLE) - 0.104338334098) / 1.09747315088 AS scaler_29, (CAST("ADS_imp_1_OUT".impter_30 AS DOUBLE) - 0.0325771619196) / 0.943506396878 AS scaler_30, (CAST("ADS_imp_1_OUT".impter_31 AS DOUBLE) - 0.0614290574937) / 1.11707327333 AS scaler_31, (CAST("ADS_imp_1_OUT".impter_32 AS DOUBLE) - -0.0145404234607) / 1.05731681973 AS scaler_32, (CAST("ADS_imp_1_OUT".impter_33 AS DOUBLE) - -0.112338009994) / 0.978615165975 AS scaler_33, (CAST("ADS_imp_1_OUT".impter_34 AS DOUBLE) - 0.118912844605) / 1.00635634008 AS scaler_34, (CAST("ADS_imp_1_OUT".impter_35 AS DOUBLE) - 0.228686493008) / 0.99875178991 AS scaler_35, (CAST("ADS_imp_1_OUT".impter_36 AS DOUBLE) - 0.235661815499) / 0.889212557545 AS scaler_36, (CAST("ADS_imp_1_OUT".impter_37 AS DOUBLE) - 0.0731697039996) / 0.847859331458 AS scaler_37, (CAST("ADS_imp_1_OUT".impter_38 AS DOUBLE) - -0.0331940982747) / 0.941776159176 AS scaler_38, (CAST("ADS_imp_1_OUT".impter_39 AS DOUBLE) - 0.273493877418) / 0.88427109411 AS scaler_39, (CAST("ADS_imp_1_OUT".impter_40 AS DOUBLE) - -0.0232895677422) / 0.994764574925 AS scaler_40, (CAST("ADS_imp_1_OUT".impter_41 AS DOUBLE) - 0.0302883792606) / 1.03853940215 AS scaler_41, (CAST("ADS_imp_1_OUT".impter_42 AS DOUBLE) - -0.107368262331) / 0.983011795115 AS scaler_42, (CAST("ADS_imp_1_OUT".impter_43 AS DOUBLE) - 0.0264029500979) / 1.03982875397 AS scaler_43, (CAST("ADS_imp_1_OUT".impter_44 AS DOUBLE) - -0.0967714665491) / 1.00152255641 AS scaler_44, (CAST("ADS_imp_1_OUT".impter_45 AS DOUBLE) - 0.00597424834297) / 0.919224835729 AS scaler_45, (CAST("ADS_imp_1_OUT".impter_46 AS DOUBLE) - 0.0369172681271) / 1.06975493897 AS scaler_46, (CAST("ADS_imp_1_OUT".impter_47 AS DOUBLE) - -0.145257173824) / 1.0022143023 AS scaler_47, (CAST("ADS_imp_1_OUT".impter_48 AS DOUBLE) - -0.166752698812) / 1.02649761736 AS scaler_48, (CAST("ADS_imp_1_OUT".impter_49 AS DOUBLE) - 0.250844656957) / 1.01763512955 AS scaler_49, (CAST("ADS_imp_1_OUT".impter_50 AS DOUBLE) - 0.146233983223) / 0.949901088245 AS scaler_50, (CAST("ADS_imp_1_OUT".impter_51 AS DOUBLE) - 0.101854311334) / 1.08349130232 AS scaler_51, (CAST("ADS_imp_1_OUT".impter_52 AS DOUBLE) - -0.132925609451) / 1.20304301294 AS scaler_52, (CAST("ADS_imp_1_OUT".impter_53 AS DOUBLE) - -0.0421917913654) / 1.0890718482 AS scaler_53, (CAST("ADS_imp_1_OUT".impter_54 AS DOUBLE) - 0.152140284047) / 1.03559281627 AS scaler_54, (CAST("ADS_imp_1_OUT".impter_55 AS DOUBLE) - -0.158213723143) / 0.813084857359 AS scaler_55, (CAST("ADS_imp_1_OUT".impter_56 AS DOUBLE) - 0.179262605358) / 1.07046714633 AS scaler_56, (CAST("ADS_imp_1_OUT".impter_57 AS DOUBLE) - 0.0507753321044) / 1.00525649412 AS scaler_57, (CAST("ADS_imp_1_OUT".impter_58 AS DOUBLE) - -0.0118845513623) / 0.969141309787 AS scaler_58, (CAST("ADS_imp_1_OUT".impter_59 AS DOUBLE) - -0.0494874506914) / 1.26097682699 AS scaler_59, (CAST("ADS_imp_1_OUT".impter_60 AS DOUBLE) - -0.132567335525) / 0.868625102233 AS scaler_60, (CAST("ADS_imp_1_OUT".impter_61 AS DOUBLE) - 0.118662382025) / 1.06316548496 AS scaler_61, (CAST("ADS_imp_1_OUT".impter_62 AS DOUBLE) - -0.0659082852023) / 1.04187279083 AS scaler_62, (CAST("ADS_imp_1_OUT".impter_63 AS DOUBLE) - 0.155485733887) / 0.894651979404 AS scaler_63, (CAST("ADS_imp_1_OUT".impter_64 AS DOUBLE) - -0.00660830149098) / 0.916615314172 AS scaler_64, (CAST("ADS_imp_1_OUT".impter_65 AS DOUBLE) - -0.0182758014849) / 1.0372814666 AS scaler_65, (CAST("ADS_imp_1_OUT".impter_66 AS DOUBLE) - -0.0273663174287) / 0.887668072204 AS scaler_66, (CAST("ADS_imp_1_OUT".impter_67 AS DOUBLE) - 0.0143662500367) / 0.918497664595 AS scaler_67, (CAST("ADS_imp_1_OUT".impter_68 AS DOUBLE) - 0.0540753000896) / 0.92958848937 AS scaler_68, (CAST("ADS_imp_1_OUT".impter_69 AS DOUBLE) - -0.230852733839) / 0.944088767881 AS scaler_69, (CAST("ADS_imp_1_OUT".impter_70 AS DOUBLE) - -0.243965288084) / 1.04592379692 AS scaler_70, (CAST("ADS_imp_1_OUT".impter_71 AS DOUBLE) - 0.0654506578766) / 0.896770163985 AS scaler_71, (CAST("ADS_imp_1_OUT".impter_72 AS DOUBLE) - 0.0426651830202) / 0.883539188169 AS scaler_72, (CAST("ADS_imp_1_OUT".impter_73 AS DOUBLE) - -0.154045182035) / 0.986979156102 AS scaler_73, (CAST("ADS_imp_1_OUT".impter_74 AS DOUBLE) - -0.222235256457) / 0.953792741196 AS scaler_74, (CAST("ADS_imp_1_OUT".impter_75 AS DOUBLE) - 0.0685606372973) / 0.953717717146 AS scaler_75, (CAST("ADS_imp_1_OUT".impter_76 AS DOUBLE) - -0.0963959208539) / 1.03587753203 AS scaler_76, (CAST("ADS_imp_1_OUT".impter_77 AS DOUBLE) - 0.207475189275) / 1.06110762223 AS scaler_77, (CAST("ADS_imp_1_OUT".impter_78 AS DOUBLE) - -0.139452563671) / 1.02237005332 AS scaler_78, (CAST("ADS_imp_1_OUT".impter_79 AS DOUBLE) - 0.0219542087737) / 0.48752447533 AS scaler_79, (CAST("ADS_imp_1_OUT".impter_80 AS DOUBLE) - 0.0703351703703) / 0.998427876189 AS scaler_80, (CAST("ADS_imp_1_OUT".impter_81 AS DOUBLE) - 0.120624721907) / 1.04829143705 AS scaler_81, (CAST("ADS_imp_1_OUT".impter_82 AS DOUBLE) - -0.0337659474425) / 1.01203950398 AS scaler_82, (CAST("ADS_imp_1_OUT".impter_83 AS DOUBLE) - -0.110635213133) / 0.848796528198 AS scaler_83, (CAST("ADS_imp_1_OUT".impter_84 AS DOUBLE) - 0.0402642804367) / 0.927886551998 AS scaler_84, (CAST("ADS_imp_1_OUT".impter_85 AS DOUBLE) - 0.0476196986347) / 1.01736816768 AS scaler_85, (CAST("ADS_imp_1_OUT".impter_86 AS DOUBLE) - 0.102945428966) / 0.936375113827 AS scaler_86, (CAST("ADS_imp_1_OUT".impter_87 AS DOUBLE) - 0.0354313908654) / 0.976657395204 AS scaler_87, (CAST("ADS_imp_1_OUT".impter_88 AS DOUBLE) - 0.158126749954) / 1.00656799984 AS scaler_88, (CAST("ADS_imp_1_OUT".impter_89 AS DOUBLE) - -0.093706792025) / 0.952144160924 AS scaler_89, (CAST("ADS_imp_1_OUT".impter_90 AS DOUBLE) - -0.0535217413313) / 1.03366798768 AS scaler_90, (CAST("ADS_imp_1_OUT".impter_91 AS DOUBLE) - -0.0567114213575) / 1.08511078116 AS scaler_91, (CAST("ADS_imp_1_OUT".impter_92 AS DOUBLE) - 0.168350191992) / 0.828654443272 AS scaler_92, (CAST("ADS_imp_1_OUT".impter_93 AS DOUBLE) - -0.0801468778596) / 1.07042043255 AS scaler_93, (CAST("ADS_imp_1_OUT".impter_94 AS DOUBLE) - 0.0673275172113) / 1.17497921998 AS scaler_94, (CAST("ADS_imp_1_OUT".impter_95 AS DOUBLE) - -0.00888651681787) / 1.07500733772 AS scaler_95, (CAST("ADS_imp_1_OUT".impter_96 AS DOUBLE) - 0.0260953855178) / 1.10781838782 AS scaler_96, (CAST("ADS_imp_1_OUT".impter_97 AS DOUBLE) - 0.04435425201) / 0.88613754112 AS scaler_97, (CAST("ADS_imp_1_OUT".impter_98 AS DOUBLE) - 0.0268954080706) / 1.00952888239 AS scaler_98, (CAST("ADS_imp_1_OUT".impter_99 AS DOUBLE) - 0.182329715391) / 0.955138205624 AS scaler_99, (CAST("ADS_imp_1_OUT".impter_100 AS DOUBLE) - -0.12132540363) / 0.925885755687 AS scaler_100, (CAST("ADS_imp_1_OUT".impter_101 AS DOUBLE) - 0.00442013252429) / 0.937196598221 AS scaler_101 
FROM "ADS_imp_1_OUT"), 
"DT_node_lookup" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_59 <= 0.06653057038784027) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_19 <= 1.1668860912322998) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_11 <= 2.114020586013794) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_21 <= 1.1025973558425903) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_85 <= 2.2016701698303223) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_72 <= -1.8241477012634277) THEN 10 ELSE 11 END ELSE 12 END END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values"."count" AS "count", "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 42 AS "count", 3 AS depth, 2 AS parent_id, -1.6183315431435734 AS "Estimator" FROM rdb$database UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS "count", 3 AS depth, 2 AS parent_id, 2.1052631578947363 AS "Estimator" FROM rdb$database UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS "count", 3 AS depth, 5 AS parent_id, 2.1052631578947363 AS "Estimator" FROM rdb$database UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 3 AS depth, 5 AS parent_id, -1.904761904761905 AS "Estimator" FROM rdb$database UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 3 AS depth, 9 AS parent_id, -1.904761904761905 AS "Estimator" FROM rdb$database UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 30 AS "count", 3 AS depth, 9 AS parent_id, 2.105263157894737 AS "Estimator" FROM rdb$database UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 2 AS depth, 8 AS parent_id, -1.904761904761905 AS "Estimator" FROM rdb$database) AS "Values"), 
"DT_Output" AS 
(SELECT "DT_node_lookup"."KEY" AS "KEY", "DT_node_lookup".node_id_2 AS node_id_2, "DT_node_data".node_id AS node_id, "DT_node_data".feature AS feature, "DT_node_data".threshold AS threshold, "DT_node_data"."count" AS "count", "DT_node_data".depth AS depth, "DT_node_data".parent_id AS parent_id, "DT_node_data"."Estimator" AS "Estimator" 
FROM "DT_node_lookup" LEFT OUTER JOIN "DT_node_data" ON "DT_node_lookup".node_id_2 = "DT_node_data".node_id), 
"GB_Tree_0_0" AS 
(SELECT "DT_Output"."KEY" AS "KEY", -"DT_Output"."Estimator" AS "Score_0", 0.0 AS "Score_1" 
FROM "DT_Output"), 
"GB_Tree_0_1" AS 
(SELECT "DT_Output"."KEY" AS "KEY", 0.0 AS "Score_0", "DT_Output"."Estimator" AS "Score_1" 
FROM "DT_Output"), 
"DT_node_lookup_1" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_59 <= 0.06653057038784027) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_39 <= 1.5735666751861572) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_62 <= -2.1253793239593506) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_96 <= -0.9484713077545166) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_20 <= 1.5954883098602295) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_19 <= 1.990046501159668) THEN 10 ELSE 11 END ELSE 12 END END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_1" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values"."count" AS "count", "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS "count", 3 AS depth, 2 AS parent_id, 2.096008535366903 AS "Estimator" FROM rdb$database UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 44 AS "count", 3 AS depth, 2 AS parent_id, -1.4234854473404777 AS "Estimator" FROM rdb$database UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 3 AS depth, 5 AS parent_id, 1.895437496504261 AS "Estimator" FROM rdb$database UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 3 AS depth, 5 AS parent_id, 2.2994181831603377 AS "Estimator" FROM rdb$database UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 30 AS "count", 3 AS depth, 9 AS parent_id, 1.8954374965042624 AS "Estimator" FROM rdb$database UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 3 AS depth, 9 AS parent_id, -1.7478449197552628 AS "Estimator" FROM rdb$database UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 2 AS depth, 8 AS parent_id, -1.7478449197552628 AS "Estimator" FROM rdb$database) AS "Values"), 
"DT_Output_1" AS 
(SELECT "DT_node_lookup_1"."KEY" AS "KEY", "DT_node_lookup_1".node_id_2 AS node_id_2, "DT_node_data_1".node_id AS node_id, "DT_node_data_1".feature AS feature, "DT_node_data_1".threshold AS threshold, "DT_node_data_1"."count" AS "count", "DT_node_data_1".depth AS depth, "DT_node_data_1".parent_id AS parent_id, "DT_node_data_1"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_1" LEFT OUTER JOIN "DT_node_data_1" ON "DT_node_lookup_1".node_id_2 = "DT_node_data_1".node_id), 
"GB_Tree_1_0" AS 
(SELECT "DT_Output_1"."KEY" AS "KEY", -"DT_Output_1"."Estimator" AS "Score_0", 0.0 AS "Score_1" 
FROM "DT_Output_1"), 
"GB_Tree_1_1" AS 
(SELECT "DT_Output_1"."KEY" AS "KEY", 0.0 AS "Score_0", "DT_Output_1"."Estimator" AS "Score_1" 
FROM "DT_Output_1"), 
"DT_node_lookup_2" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_59 <= 0.06653057038784027) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_73 <= -2.0547890663146973) THEN 2 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_11 <= 2.114020586013794) THEN 4 ELSE 5 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_49 <= -1.5966084003448486) THEN 7 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_74 <= -1.8504893779754639) THEN 9 ELSE 10 END END END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_2" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values"."count" AS "count", "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 2 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS "count", 2 AS depth, 1 AS parent_id, 2.0324558055611313 AS "Estimator" FROM rdb$database UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 44 AS "count", 3 AS depth, 3 AS parent_id, -1.3276995551562458 AS "Estimator" FROM rdb$database UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS "count", 3 AS depth, 3 AS parent_id, 2.0324201305914054 AS "Estimator" FROM rdb$database UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 2 AS depth, 6 AS parent_id, -1.6279189753326482 AS "Estimator" FROM rdb$database UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 3 AS depth, 8 AS parent_id, -1.6279189753326482 AS "Estimator" FROM rdb$database UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 30 AS "count", 3 AS depth, 8 AS parent_id, 1.7408281426133267 AS "Estimator" FROM rdb$database) AS "Values"), 
"DT_Output_2" AS 
(SELECT "DT_node_lookup_2"."KEY" AS "KEY", "DT_node_lookup_2".node_id_2 AS node_id_2, "DT_node_data_2".node_id AS node_id, "DT_node_data_2".feature AS feature, "DT_node_data_2".threshold AS threshold, "DT_node_data_2"."count" AS "count", "DT_node_data_2".depth AS depth, "DT_node_data_2".parent_id AS parent_id, "DT_node_data_2"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_2" LEFT OUTER JOIN "DT_node_data_2" ON "DT_node_lookup_2".node_id_2 = "DT_node_data_2".node_id), 
"GB_Tree_2_0" AS 
(SELECT "DT_Output_2"."KEY" AS "KEY", -"DT_Output_2"."Estimator" AS "Score_0", 0.0 AS "Score_1" 
FROM "DT_Output_2"), 
"GB_Tree_2_1" AS 
(SELECT "DT_Output_2"."KEY" AS "KEY", 0.0 AS "Score_0", "DT_Output_2"."Estimator" AS "Score_1" 
FROM "DT_Output_2"), 
"DT_node_lookup_3" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_59 <= 0.06653057038784027) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_62 <= -2.1253793239593506) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_27 <= 0.16263672709465027) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_39 <= 1.5735666751861572) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_74 <= -1.8504893779754639) THEN 9 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_12 <= 1.962590217590332) THEN 11 ELSE 12 END END END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_3" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values"."count" AS "count", "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 3 AS depth, 2 AS parent_id, 2.2033215782363085 AS "Estimator" FROM rdb$database UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 3 AS depth, 2 AS parent_id, 1.8292167028822635 AS "Estimator" FROM rdb$database UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 44 AS "count", 3 AS depth, 5 AS parent_id, -1.2388948754014388 AS "Estimator" FROM rdb$database UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS "count", 3 AS depth, 5 AS parent_id, 1.8443051333640834 AS "Estimator" FROM rdb$database UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 2 AS depth, 8 AS parent_id, -1.5335854573777359 AS "Estimator" FROM rdb$database UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 30 AS "count", 3 AS depth, 10 AS parent_id, 1.6224640389018972 AS "Estimator" FROM rdb$database UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 3 AS depth, 10 AS parent_id, -1.5335854573777359 AS "Estimator" FROM rdb$database) AS "Values"), 
"DT_Output_3" AS 
(SELECT "DT_node_lookup_3"."KEY" AS "KEY", "DT_node_lookup_3".node_id_2 AS node_id_2, "DT_node_data_3".node_id AS node_id, "DT_node_data_3".feature AS feature, "DT_node_data_3".threshold AS threshold, "DT_node_data_3"."count" AS "count", "DT_node_data_3".depth AS depth, "DT_node_data_3".parent_id AS parent_id, "DT_node_data_3"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_3" LEFT OUTER JOIN "DT_node_data_3" ON "DT_node_lookup_3".node_id_2 = "DT_node_data_3".node_id), 
"GB_Tree_3_0" AS 
(SELECT "DT_Output_3"."KEY" AS "KEY", -"DT_Output_3"."Estimator" AS "Score_0", 0.0 AS "Score_1" 
FROM "DT_Output_3"), 
"GB_Tree_3_1" AS 
(SELECT "DT_Output_3"."KEY" AS "KEY", 0.0 AS "Score_0", "DT_Output_3"."Estimator" AS "Score_1" 
FROM "DT_Output_3"), 
"DT_node_lookup_4" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_59 <= -0.11623701453208923) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_19 <= 0.878835916519165) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_45 <= 1.391965389251709) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_35 <= -0.14811989665031433) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_50 <= 1.4252889156341553) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_74 <= -1.8504893779754639) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_2 <= 0.18246357142925262) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_4" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values"."count" AS "count", "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 36 AS "count", 3 AS depth, 2 AS parent_id, -1.4201836338413583 AS "Estimator" FROM rdb$database UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS "count", 3 AS depth, 2 AS parent_id, 0.8818891509469176 AS "Estimator" FROM rdb$database UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS "count", 3 AS depth, 5 AS parent_id, 2.0543740519216325 AS "Estimator" FROM rdb$database UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS "count", 3 AS depth, 5 AS parent_id, -1.5115435903792729 AS "Estimator" FROM rdb$database UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 3 AS depth, 9 AS parent_id, -1.4577213966216014 AS "Estimator" FROM rdb$database UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 30 AS "count", 3 AS depth, 9 AS parent_id, 1.5448043165070784 AS "Estimator" FROM rdb$database UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS "count", 3 AS depth, 12 AS parent_id, -1.4876585385597692 AS "Estimator" FROM rdb$database UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 3 AS depth, 12 AS parent_id, 1.529238644498216 AS "Estimator" FROM rdb$database) AS "Values"), 
"DT_Output_4" AS 
(SELECT "DT_node_lookup_4"."KEY" AS "KEY", "DT_node_lookup_4".node_id_2 AS node_id_2, "DT_node_data_4".node_id AS node_id, "DT_node_data_4".feature AS feature, "DT_node_data_4".threshold AS threshold, "DT_node_data_4"."count" AS "count", "DT_node_data_4".depth AS depth, "DT_node_data_4".parent_id AS parent_id, "DT_node_data_4"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_4" LEFT OUTER JOIN "DT_node_data_4" ON "DT_node_lookup_4".node_id_2 = "DT_node_data_4".node_id), 
"GB_Tree_4_0" AS 
(SELECT "DT_Output_4"."KEY" AS "KEY", -"DT_Output_4"."Estimator" AS "Score_0", 0.0 AS "Score_1" 
FROM "DT_Output_4"), 
"GB_Tree_4_1" AS 
(SELECT "DT_Output_4"."KEY" AS "KEY", 0.0 AS "Score_0", "DT_Output_4"."Estimator" AS "Score_1" 
FROM "DT_Output_4"), 
"DT_node_lookup_5" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_59 <= -0.11623701453208923) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_62 <= -0.5680299997329712) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_75 <= -0.01915532350540161) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_19 <= 1.1668860912322998) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_50 <= 1.4252889156341553) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_74 <= -1.8504893779754639) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_20 <= 0.5471101999282837) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_5" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values"."count" AS "count", "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS "count", 3 AS depth, 2 AS parent_id, 1.958202526870995 AS "Estimator" FROM rdb$database UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS "count", 3 AS depth, 2 AS parent_id, -1.448008549051362 AS "Estimator" FROM rdb$database UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 36 AS "count", 3 AS depth, 5 AS parent_id, -1.3444944167722634 AS "Estimator" FROM rdb$database UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS "count", 3 AS depth, 5 AS parent_id, 0.7265051857481474 AS "Estimator" FROM rdb$database UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 3 AS depth, 9 AS parent_id, -1.395633609741032 AS "Estimator" FROM rdb$database UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 30 AS "count", 3 AS depth, 9 AS parent_id, 1.4673881774513675 AS "Estimator" FROM rdb$database UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 3 AS depth, 12 AS parent_id, 1.4541899894634762 AS "Estimator" FROM rdb$database UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS "count", 3 AS depth, 12 AS parent_id, -1.4203469592033384 AS "Estimator" FROM rdb$database) AS "Values"), 
"DT_Output_5" AS 
(SELECT "DT_node_lookup_5"."KEY" AS "KEY", "DT_node_lookup_5".node_id_2 AS node_id_2, "DT_node_data_5".node_id AS node_id, "DT_node_data_5".feature AS feature, "DT_node_data_5".threshold AS threshold, "DT_node_data_5"."count" AS "count", "DT_node_data_5".depth AS depth, "DT_node_data_5".parent_id AS parent_id, "DT_node_data_5"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_5" LEFT OUTER JOIN "DT_node_data_5" ON "DT_node_lookup_5".node_id_2 = "DT_node_data_5".node_id), 
"GB_Tree_5_0" AS 
(SELECT "DT_Output_5"."KEY" AS "KEY", -"DT_Output_5"."Estimator" AS "Score_0", 0.0 AS "Score_1" 
FROM "DT_Output_5"), 
"GB_Tree_5_1" AS 
(SELECT "DT_Output_5"."KEY" AS "KEY", 0.0 AS "Score_0", "DT_Output_5"."Estimator" AS "Score_1" 
FROM "DT_Output_5"), 
"DT_node_lookup_6" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_59 <= -0.11623701453208923) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_37 <= 0.5512429475784302) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_19 <= 1.3340132236480713) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_23 <= -0.333732932806015) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_50 <= 1.4252889156341553) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_74 <= -1.8504893779754639) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_78 <= 1.8757691383361816) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_6" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values"."count" AS "count", "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 32 AS "count", 3 AS depth, 2 AS parent_id, -1.3946185074449031 AS "Estimator" FROM rdb$database UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS "count", 3 AS depth, 2 AS parent_id, 0.525957561992705 AS "Estimator" FROM rdb$database UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS "count", 3 AS depth, 5 AS parent_id, 1.937257098415046 AS "Estimator" FROM rdb$database UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 7 AS "count", 3 AS depth, 5 AS parent_id, -0.8866233396726353 AS "Estimator" FROM rdb$database UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 3 AS depth, 9 AS parent_id, -1.344097550451214 AS "Estimator" FROM rdb$database UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 30 AS "count", 3 AS depth, 9 AS parent_id, 1.4040651025086777 AS "Estimator" FROM rdb$database UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS "count", 3 AS depth, 12 AS parent_id, -1.3647650410708272 AS "Estimator" FROM rdb$database UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 3 AS depth, 12 AS parent_id, 1.3927198824988734 AS "Estimator" FROM rdb$database) AS "Values"), 
"DT_Output_6" AS 
(SELECT "DT_node_lookup_6"."KEY" AS "KEY", "DT_node_lookup_6".node_id_2 AS node_id_2, "DT_node_data_6".node_id AS node_id, "DT_node_data_6".feature AS feature, "DT_node_data_6".threshold AS threshold, "DT_node_data_6"."count" AS "count", "DT_node_data_6".depth AS depth, "DT_node_data_6".parent_id AS parent_id, "DT_node_data_6"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_6" LEFT OUTER JOIN "DT_node_data_6" ON "DT_node_lookup_6".node_id_2 = "DT_node_data_6".node_id), 
"GB_Tree_6_0" AS 
(SELECT "DT_Output_6"."KEY" AS "KEY", -"DT_Output_6"."Estimator" AS "Score_0", 0.0 AS "Score_1" 
FROM "DT_Output_6"), 
"GB_Tree_6_1" AS 
(SELECT "DT_Output_6"."KEY" AS "KEY", 0.0 AS "Score_0", "DT_Output_6"."Estimator" AS "Score_1" 
FROM "DT_Output_6"), 
"DT_node_lookup_7" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_59 <= -0.11623701453208923) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_62 <= -0.5680299997329712) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_78 <= 0.17603853344917297) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_37 <= 2.1503937244415283) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_50 <= 1.4252889156341553) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_74 <= -1.8504893779754639) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_68 <= 0.29374879598617554) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_7" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values"."count" AS "count", "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS "count", 3 AS depth, 2 AS parent_id, -1.337157307504241 AS "Estimator" FROM rdb$database UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS "count", 3 AS depth, 2 AS parent_id, 1.720271726539447 AS "Estimator" FROM rdb$database UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 38 AS "count", 3 AS depth, 5 AS parent_id, -1.170701604442776 AS "Estimator" FROM rdb$database UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 3 AS depth, 5 AS parent_id, 1.8229070531835285 AS "Estimator" FROM rdb$database UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 3 AS depth, 9 AS parent_id, -1.300821010694913 AS "Estimator" FROM rdb$database UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 30 AS "count", 3 AS depth, 9 AS parent_id, 1.3515189609079086 AS "Estimator" FROM rdb$database UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS "count", 3 AS depth, 12 AS parent_id, -1.3182902998610377 AS "Estimator" FROM rdb$database UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 3 AS depth, 12 AS parent_id, 1.3416629081480635 AS "Estimator" FROM rdb$database) AS "Values"), 
"DT_Output_7" AS 
(SELECT "DT_node_lookup_7"."KEY" AS "KEY", "DT_node_lookup_7".node_id_2 AS node_id_2, "DT_node_data_7".node_id AS node_id, "DT_node_data_7".feature AS feature, "DT_node_data_7".threshold AS threshold, "DT_node_data_7"."count" AS "count", "DT_node_data_7".depth AS depth, "DT_node_data_7".parent_id AS parent_id, "DT_node_data_7"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_7" LEFT OUTER JOIN "DT_node_data_7" ON "DT_node_lookup_7".node_id_2 = "DT_node_data_7".node_id), 
"GB_Tree_7_0" AS 
(SELECT "DT_Output_7"."KEY" AS "KEY", -"DT_Output_7"."Estimator" AS "Score_0", 0.0 AS "Score_1" 
FROM "DT_Output_7"), 
"GB_Tree_7_1" AS 
(SELECT "DT_Output_7"."KEY" AS "KEY", 0.0 AS "Score_0", "DT_Output_7"."Estimator" AS "Score_1" 
FROM "DT_Output_7"), 
"DT_node_lookup_8" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_59 <= -0.11623701453208923) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_73 <= -2.0547890663146973) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_7 <= 0.3425602614879608) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_37 <= 1.2283591032028198) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_50 <= 1.4252889156341553) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_20 <= 1.5954883098602295) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_62 <= -1.2847321033477783) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_8" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values"."count" AS "count", "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 3 AS depth, 2 AS parent_id, 1.6108718821416377 AS "Estimator" FROM rdb$database UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 3 AS depth, 2 AS parent_id, 1.6688510571596784 AS "Estimator" FROM rdb$database UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 41 AS "count", 3 AS depth, 5 AS parent_id, -1.068080084295244 AS "Estimator" FROM rdb$database UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS "count", 3 AS depth, 5 AS parent_id, 0.9475315093373128 AS "Estimator" FROM rdb$database UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 30 AS "count", 3 AS depth, 9 AS parent_id, 1.307398426483107 AS "Estimator" FROM rdb$database UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 3 AS depth, 9 AS parent_id, -1.264127868945373 AS "Estimator" FROM rdb$database UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 3 AS depth, 12 AS parent_id, 1.298765298853743 AS "Estimator" FROM rdb$database UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS "count", 3 AS depth, 12 AS parent_id, -1.279025518068119 AS "Estimator" FROM rdb$database) AS "Values"), 
"DT_Output_8" AS 
(SELECT "DT_node_lookup_8"."KEY" AS "KEY", "DT_node_lookup_8".node_id_2 AS node_id_2, "DT_node_data_8".node_id AS node_id, "DT_node_data_8".feature AS feature, "DT_node_data_8".threshold AS threshold, "DT_node_data_8"."count" AS "count", "DT_node_data_8".depth AS depth, "DT_node_data_8".parent_id AS parent_id, "DT_node_data_8"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_8" LEFT OUTER JOIN "DT_node_data_8" ON "DT_node_lookup_8".node_id_2 = "DT_node_data_8".node_id), 
"GB_Tree_8_0" AS 
(SELECT "DT_Output_8"."KEY" AS "KEY", -"DT_Output_8"."Estimator" AS "Score_0", 0.0 AS "Score_1" 
FROM "DT_Output_8"), 
"GB_Tree_8_1" AS 
(SELECT "DT_Output_8"."KEY" AS "KEY", 0.0 AS "Score_0", "DT_Output_8"."Estimator" AS "Score_1" 
FROM "DT_Output_8"), 
"DT_node_lookup_9" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_59 <= -0.11623701453208923) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_20 <= 1.9128592014312744) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_62 <= -2.1253793239593506) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_8 <= -0.653716504573822) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_50 <= 1.4252889156341553) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_74 <= -1.8504893779754639) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_24 <= 0.4188730716705322) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_9" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values"."count" AS "count", "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS "count", 3 AS depth, 2 AS parent_id, 1.4900163352519837 AS "Estimator" FROM rdb$database UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 42 AS "count", 3 AS depth, 2 AS parent_id, -0.9948753872812511 AS "Estimator" FROM rdb$database UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 3 AS depth, 5 AS parent_id, 1.632261202074544 AS "Estimator" FROM rdb$database UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 3 AS depth, 5 AS parent_id, 1.519985051185009 AS "Estimator" FROM rdb$database UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 3 AS depth, 9 AS parent_id, -1.2327629493831462 AS "Estimator" FROM rdb$database UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 30 AS "count", 3 AS depth, 9 AS parent_id, 1.2699877686233394 AS "Estimator" FROM rdb$database UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS "count", 3 AS depth, 12 AS parent_id, -1.245562745293807 AS "Estimator" FROM rdb$database UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 3 AS depth, 12 AS parent_id, 1.262376837539426 AS "Estimator" FROM rdb$database) AS "Values"), 
"DT_Output_9" AS 
(SELECT "DT_node_lookup_9"."KEY" AS "KEY", "DT_node_lookup_9".node_id_2 AS node_id_2, "DT_node_data_9".node_id AS node_id, "DT_node_data_9".feature AS feature, "DT_node_data_9".threshold AS threshold, "DT_node_data_9"."count" AS "count", "DT_node_data_9".depth AS depth, "DT_node_data_9".parent_id AS parent_id, "DT_node_data_9"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_9" LEFT OUTER JOIN "DT_node_data_9" ON "DT_node_lookup_9".node_id_2 = "DT_node_data_9".node_id), 
"GB_Tree_9_0" AS 
(SELECT "DT_Output_9"."KEY" AS "KEY", -"DT_Output_9"."Estimator" AS "Score_0", 0.0 AS "Score_1" 
FROM "DT_Output_9"), 
"GB_Tree_9_1" AS 
(SELECT "DT_Output_9"."KEY" AS "KEY", 0.0 AS "Score_0", "DT_Output_9"."Estimator" AS "Score_1" 
FROM "DT_Output_9"), 
"DT_node_lookup_10" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_59 <= -0.1771824061870575) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_19 <= 0.878835916519165) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_73 <= -2.0547890663146973) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_6 <= 0.7380362749099731) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_20 <= 1.5777688026428223) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_86 <= 1.5461716651916504) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_73 <= 0.41944313049316406) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_10" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values"."count" AS "count", "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 3 AS depth, 2 AS parent_id, 1.446661732834358 AS "Estimator" FROM rdb$database UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 33 AS "count", 3 AS depth, 2 AS parent_id, -1.2499360133065067 AS "Estimator" FROM rdb$database UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS "count", 3 AS depth, 5 AS parent_id, 1.6219351936501099 AS "Estimator" FROM rdb$database UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS "count", 3 AS depth, 5 AS parent_id, -1.2895245850004842 AS "Estimator" FROM rdb$database UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 33 AS "count", 3 AS depth, 9 AS parent_id, 1.1975528332766405 AS "Estimator" FROM rdb$database UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS "count", 3 AS depth, 9 AS parent_id, -0.6151746918646214 AS "Estimator" FROM rdb$database UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 3 AS depth, 12 AS parent_id, -1.317315323569 AS "Estimator" FROM rdb$database UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 3 AS depth, 12 AS parent_id, -1.2057669579063237 AS "Estimator" FROM rdb$database) AS "Values"), 
"DT_Output_10" AS 
(SELECT "DT_node_lookup_10"."KEY" AS "KEY", "DT_node_lookup_10".node_id_2 AS node_id_2, "DT_node_data_10".node_id AS node_id, "DT_node_data_10".feature AS feature, "DT_node_data_10".threshold AS threshold, "DT_node_data_10"."count" AS "count", "DT_node_data_10".depth AS depth, "DT_node_data_10".parent_id AS parent_id, "DT_node_data_10"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_10" LEFT OUTER JOIN "DT_node_data_10" ON "DT_node_lookup_10".node_id_2 = "DT_node_data_10".node_id), 
"GB_Tree_10_0" AS 
(SELECT "DT_Output_10"."KEY" AS "KEY", -"DT_Output_10"."Estimator" AS "Score_0", 0.0 AS "Score_1" 
FROM "DT_Output_10"), 
"GB_Tree_10_1" AS 
(SELECT "DT_Output_10"."KEY" AS "KEY", 0.0 AS "Score_0", "DT_Output_10"."Estimator" AS "Score_1" 
FROM "DT_Output_10"), 
"DT_node_lookup_11" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_59 <= -0.1771824061870575) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_19 <= 0.878835916519165) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_90 <= 2.070770263671875) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_6 <= 0.7380362749099731) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_99 <= -1.8769221305847168) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_96 <= -1.1359070539474487) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_20 <= 1.0198101997375488) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_11" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values"."count" AS "count", "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 33 AS "count", 3 AS depth, 2 AS parent_id, -1.220589039043774 AS "Estimator" FROM rdb$database UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 3 AS depth, 2 AS parent_id, 1.3865013593274123 AS "Estimator" FROM rdb$database UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS "count", 3 AS depth, 5 AS parent_id, 1.5327998769743132 AS "Estimator" FROM rdb$database UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS "count", 3 AS depth, 5 AS parent_id, -1.2548231207419789 AS "Estimator" FROM rdb$database UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 3 AS depth, 9 AS parent_id, -1.2256580639543597 AS "Estimator" FROM rdb$database UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 3 AS depth, 9 AS parent_id, -1.2318331300228573 AS "Estimator" FROM rdb$database UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 29 AS "count", 3 AS depth, 12 AS parent_id, 1.2459403972282284 AS "Estimator" FROM rdb$database UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 8 AS "count", 3 AS depth, 12 AS parent_id, -0.05217530635323901 AS "Estimator" FROM rdb$database) AS "Values"), 
"DT_Output_11" AS 
(SELECT "DT_node_lookup_11"."KEY" AS "KEY", "DT_node_lookup_11".node_id_2 AS node_id_2, "DT_node_data_11".node_id AS node_id, "DT_node_data_11".feature AS feature, "DT_node_data_11".threshold AS threshold, "DT_node_data_11"."count" AS "count", "DT_node_data_11".depth AS depth, "DT_node_data_11".parent_id AS parent_id, "DT_node_data_11"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_11" LEFT OUTER JOIN "DT_node_data_11" ON "DT_node_lookup_11".node_id_2 = "DT_node_data_11".node_id), 
"GB_Tree_11_0" AS 
(SELECT "DT_Output_11"."KEY" AS "KEY", -"DT_Output_11"."Estimator" AS "Score_0", 0.0 AS "Score_1" 
FROM "DT_Output_11"), 
"GB_Tree_11_1" AS 
(SELECT "DT_Output_11"."KEY" AS "KEY", 0.0 AS "Score_0", "DT_Output_11"."Estimator" AS "Score_1" 
FROM "DT_Output_11"), 
"DT_node_lookup_12" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_59 <= -0.1771824061870575) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_19 <= 0.878835916519165) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_73 <= -2.0547890663146973) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_6 <= 0.7380362749099731) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_20 <= 1.5777688026428223) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_86 <= 1.5461716651916504) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_100 <= -0.4960653781890869) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_12" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values"."count" AS "count", "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 3 AS depth, 2 AS parent_id, 1.336462011301788 AS "Estimator" FROM rdb$database UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 33 AS "count", 3 AS depth, 2 AS parent_id, -1.195258567601929 AS "Estimator" FROM rdb$database UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS "count", 3 AS depth, 5 AS parent_id, 1.460157504031824 AS "Estimator" FROM rdb$database UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS "count", 3 AS depth, 5 AS parent_id, -1.225033227714185 AS "Estimator" FROM rdb$database UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 33 AS "count", 3 AS depth, 9 AS parent_id, 1.1286854488179339 AS "Estimator" FROM rdb$database UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS "count", 3 AS depth, 9 AS parent_id, -0.5693352361704495 AS "Estimator" FROM rdb$database UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 3 AS depth, 12 AS parent_id, -1.2767036085425458 AS "Estimator" FROM rdb$database UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 3 AS depth, 12 AS parent_id, -1.1814445377175218 AS "Estimator" FROM rdb$database) AS "Values"), 
"DT_Output_12" AS 
(SELECT "DT_node_lookup_12"."KEY" AS "KEY", "DT_node_lookup_12".node_id_2 AS node_id_2, "DT_node_data_12".node_id AS node_id, "DT_node_data_12".feature AS feature, "DT_node_data_12".threshold AS threshold, "DT_node_data_12"."count" AS "count", "DT_node_data_12".depth AS depth, "DT_node_data_12".parent_id AS parent_id, "DT_node_data_12"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_12" LEFT OUTER JOIN "DT_node_data_12" ON "DT_node_lookup_12".node_id_2 = "DT_node_data_12".node_id), 
"GB_Tree_12_0" AS 
(SELECT "DT_Output_12"."KEY" AS "KEY", -"DT_Output_12"."Estimator" AS "Score_0", 0.0 AS "Score_1" 
FROM "DT_Output_12"), 
"GB_Tree_12_1" AS 
(SELECT "DT_Output_12"."KEY" AS "KEY", 0.0 AS "Score_0", "DT_Output_12"."Estimator" AS "Score_1" 
FROM "DT_Output_12"), 
"DT_node_lookup_13" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_59 <= 0.06653057038784027) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_11 <= 2.114020586013794) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_19 <= 0.878835916519165) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_75 <= -0.337843656539917) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_12 <= 1.962590217590332) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_56 <= 1.2069389820098877) THEN 10 ELSE 11 END ELSE 12 END END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_13" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values"."count" AS "count", "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 39 AS "count", 3 AS depth, 2 AS parent_id, -1.0027112222309909 AS "Estimator" FROM rdb$database UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 7 AS "count", 3 AS depth, 2 AS parent_id, 0.5020490769066449 AS "Estimator" FROM rdb$database UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 3 AS depth, 5 AS parent_id, 1.4820602336151274 AS "Estimator" FROM rdb$database UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 3 AS depth, 5 AS parent_id, 1.289621326139366 AS "Estimator" FROM rdb$database UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 30 AS "count", 3 AS depth, 9 AS parent_id, 1.1667450118563434 AS "Estimator" FROM rdb$database UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 3 AS depth, 9 AS parent_id, -1.1612257530876875 AS "Estimator" FROM rdb$database UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 2 AS depth, 8 AS parent_id, -1.1796530087132728 AS "Estimator" FROM rdb$database) AS "Values"), 
"DT_Output_13" AS 
(SELECT "DT_node_lookup_13"."KEY" AS "KEY", "DT_node_lookup_13".node_id_2 AS node_id_2, "DT_node_data_13".node_id AS node_id, "DT_node_data_13".feature AS feature, "DT_node_data_13".threshold AS threshold, "DT_node_data_13"."count" AS "count", "DT_node_data_13".depth AS depth, "DT_node_data_13".parent_id AS parent_id, "DT_node_data_13"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_13" LEFT OUTER JOIN "DT_node_data_13" ON "DT_node_lookup_13".node_id_2 = "DT_node_data_13".node_id), 
"GB_Tree_13_0" AS 
(SELECT "DT_Output_13"."KEY" AS "KEY", -"DT_Output_13"."Estimator" AS "Score_0", 0.0 AS "Score_1" 
FROM "DT_Output_13"), 
"GB_Tree_13_1" AS 
(SELECT "DT_Output_13"."KEY" AS "KEY", 0.0 AS "Score_0", "DT_Output_13"."Estimator" AS "Score_1" 
FROM "DT_Output_13"), 
"DT_node_lookup_14" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_59 <= -0.1771824061870575) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_73 <= -2.0547890663146973) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_89 <= -0.3544124364852905) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_21 <= -1.6406481266021729) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_20 <= 1.5777688026428223) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_99 <= -1.8769221305847168) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_2 <= -0.44649940729141235) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_14" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values"."count" AS "count", "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 3 AS depth, 2 AS parent_id, 1.3748289048641364 AS "Estimator" FROM rdb$database UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 3 AS depth, 2 AS parent_id, 1.3254178894915882 AS "Estimator" FROM rdb$database UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 3 AS depth, 5 AS parent_id, 1.5416984936659368 AS "Estimator" FROM rdb$database UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 38 AS "count", 3 AS depth, 5 AS parent_id, -0.9882844135467986 AS "Estimator" FROM rdb$database UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS "count", 3 AS depth, 9 AS parent_id, -1.1728890055441057 AS "Estimator" FROM rdb$database UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 35 AS "count", 3 AS depth, 9 AS parent_id, 1.017348509871444 AS "Estimator" FROM rdb$database UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 3 AS depth, 12 AS parent_id, -1.1435499417251889 AS "Estimator" FROM rdb$database UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 3 AS depth, 12 AS parent_id, -1.2203033466414503 AS "Estimator" FROM rdb$database) AS "Values"), 
"DT_Output_14" AS 
(SELECT "DT_node_lookup_14"."KEY" AS "KEY", "DT_node_lookup_14".node_id_2 AS node_id_2, "DT_node_data_14".node_id AS node_id, "DT_node_data_14".feature AS feature, "DT_node_data_14".threshold AS threshold, "DT_node_data_14"."count" AS "count", "DT_node_data_14".depth AS depth, "DT_node_data_14".parent_id AS parent_id, "DT_node_data_14"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_14" LEFT OUTER JOIN "DT_node_data_14" ON "DT_node_lookup_14".node_id_2 = "DT_node_data_14".node_id), 
"GB_Tree_14_0" AS 
(SELECT "DT_Output_14"."KEY" AS "KEY", -"DT_Output_14"."Estimator" AS "Score_0", 0.0 AS "Score_1" 
FROM "DT_Output_14"), 
"GB_Tree_14_1" AS 
(SELECT "DT_Output_14"."KEY" AS "KEY", 0.0 AS "Score_0", "DT_Output_14"."Estimator" AS "Score_1" 
FROM "DT_Output_14"), 
"DT_node_lookup_15" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_79 <= 0.6556057929992676) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_61 <= -1.5158387422561646) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_59 <= -0.20308691263198853) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_50 <= 1.142817497253418) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_65 <= -1.2290515899658203) THEN 9 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_12 <= -0.9596459865570068) THEN 11 ELSE 12 END END END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_15" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values"."count" AS "count", "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS "count", 3 AS depth, 2 AS parent_id, -1.1408123626661393 AS "Estimator" FROM rdb$database UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 3 AS depth, 2 AS parent_id, -1.1949952326507387 AS "Estimator" FROM rdb$database UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 43 AS "count", 3 AS depth, 5 AS parent_id, 0.8502158462658079 AS "Estimator" FROM rdb$database UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 7 AS "count", 3 AS depth, 5 AS parent_id, -0.5955307623945251 AS "Estimator" FROM rdb$database UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 2 AS depth, 8 AS parent_id, -1.2312159733472068 AS "Estimator" FROM rdb$database UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS "count", 3 AS depth, 10 AS parent_id, -1.1721830246591496 AS "Estimator" FROM rdb$database UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 21 AS "count", 3 AS depth, 10 AS parent_id, -1.1415942686578024 AS "Estimator" FROM rdb$database) AS "Values"), 
"DT_Output_15" AS 
(SELECT "DT_node_lookup_15"."KEY" AS "KEY", "DT_node_lookup_15".node_id_2 AS node_id_2, "DT_node_data_15".node_id AS node_id, "DT_node_data_15".feature AS feature, "DT_node_data_15".threshold AS threshold, "DT_node_data_15"."count" AS "count", "DT_node_data_15".depth AS depth, "DT_node_data_15".parent_id AS parent_id, "DT_node_data_15"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_15" LEFT OUTER JOIN "DT_node_data_15" ON "DT_node_lookup_15".node_id_2 = "DT_node_data_15".node_id), 
"GB_Tree_15_0" AS 
(SELECT "DT_Output_15"."KEY" AS "KEY", -"DT_Output_15"."Estimator" AS "Score_0", 0.0 AS "Score_1" 
FROM "DT_Output_15"), 
"GB_Tree_15_1" AS 
(SELECT "DT_Output_15"."KEY" AS "KEY", 0.0 AS "Score_0", "DT_Output_15"."Estimator" AS "Score_1" 
FROM "DT_Output_15"), 
"DT_node_lookup_16" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_59 <= 0.06653057038784027) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_39 <= 1.5735666751861572) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_11 <= 2.114020586013794) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_36 <= -0.031628429889678955) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_24 <= -1.679437279701233) THEN 9 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_74 <= -1.8504893779754639) THEN 11 ELSE 12 END END END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_16" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values"."count" AS "count", "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 44 AS "count", 3 AS depth, 2 AS parent_id, -0.7900259985446844 AS "Estimator" FROM rdb$database UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS "count", 3 AS depth, 2 AS parent_id, 1.2873542463373742 AS "Estimator" FROM rdb$database UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 3 AS depth, 5 AS parent_id, 1.2617910840679236 AS "Estimator" FROM rdb$database UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 3 AS depth, 5 AS parent_id, 1.326421396697957 AS "Estimator" FROM rdb$database UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 2 AS depth, 8 AS parent_id, -1.1665413679862573 AS "Estimator" FROM rdb$database UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 3 AS depth, 10 AS parent_id, -1.1394002917282378 AS "Estimator" FROM rdb$database UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 30 AS "count", 3 AS depth, 10 AS parent_id, 1.12471335145982 AS "Estimator" FROM rdb$database) AS "Values"), 
"DT_Output_16" AS 
(SELECT "DT_node_lookup_16"."KEY" AS "KEY", "DT_node_lookup_16".node_id_2 AS node_id_2, "DT_node_data_16".node_id AS node_id, "DT_node_data_16".feature AS feature, "DT_node_data_16".threshold AS threshold, "DT_node_data_16"."count" AS "count", "DT_node_data_16".depth AS depth, "DT_node_data_16".parent_id AS parent_id, "DT_node_data_16"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_16" LEFT OUTER JOIN "DT_node_data_16" ON "DT_node_lookup_16".node_id_2 = "DT_node_data_16".node_id), 
"GB_Tree_16_0" AS 
(SELECT "DT_Output_16"."KEY" AS "KEY", -"DT_Output_16"."Estimator" AS "Score_0", 0.0 AS "Score_1" 
FROM "DT_Output_16"), 
"GB_Tree_16_1" AS 
(SELECT "DT_Output_16"."KEY" AS "KEY", 0.0 AS "Score_0", "DT_Output_16"."Estimator" AS "Score_1" 
FROM "DT_Output_16"), 
"DT_node_lookup_17" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_79 <= 0.6556057929992676) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_61 <= -1.5158387422561646) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_96 <= 0.8277240991592407) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_56 <= 1.2069389820098877) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_19 <= 1.621483564376831) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_12 <= -0.9596459865570068) THEN 10 ELSE 11 END ELSE 12 END END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_17" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values"."count" AS "count", "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS "count", 3 AS depth, 2 AS parent_id, -1.1160905007372646 AS "Estimator" FROM rdb$database UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 3 AS depth, 2 AS parent_id, -1.1598879067982717 AS "Estimator" FROM rdb$database UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 46 AS "count", 3 AS depth, 5 AS parent_id, 0.7499408790504456 AS "Estimator" FROM rdb$database UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS "count", 3 AS depth, 5 AS parent_id, -1.1370595623128352 AS "Estimator" FROM rdb$database UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS "count", 3 AS depth, 9 AS parent_id, -1.1415090895326174 AS "Estimator" FROM rdb$database UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 21 AS "count", 3 AS depth, 9 AS parent_id, -1.1167282818236544 AS "Estimator" FROM rdb$database UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 2 AS depth, 8 AS parent_id, -1.1889019365347193 AS "Estimator" FROM rdb$database) AS "Values"), 
"DT_Output_17" AS 
(SELECT "DT_node_lookup_17"."KEY" AS "KEY", "DT_node_lookup_17".node_id_2 AS node_id_2, "DT_node_data_17".node_id AS node_id, "DT_node_data_17".feature AS feature, "DT_node_data_17".threshold AS threshold, "DT_node_data_17"."count" AS "count", "DT_node_data_17".depth AS depth, "DT_node_data_17".parent_id AS parent_id, "DT_node_data_17"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_17" LEFT OUTER JOIN "DT_node_data_17" ON "DT_node_lookup_17".node_id_2 = "DT_node_data_17".node_id), 
"GB_Tree_17_0" AS 
(SELECT "DT_Output_17"."KEY" AS "KEY", -"DT_Output_17"."Estimator" AS "Score_0", 0.0 AS "Score_1" 
FROM "DT_Output_17"), 
"GB_Tree_17_1" AS 
(SELECT "DT_Output_17"."KEY" AS "KEY", 0.0 AS "Score_0", "DT_Output_17"."Estimator" AS "Score_1" 
FROM "DT_Output_17"), 
"DT_node_lookup_18" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_59 <= 0.06653057038784027) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_19 <= 0.878835916519165) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_11 <= 2.114020586013794) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_59 <= -0.8758586645126343) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_12 <= 1.962590217590332) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_74 <= -1.8504893779754639) THEN 10 ELSE 11 END ELSE 12 END END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_18" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values"."count" AS "count", "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 39 AS "count", 3 AS depth, 2 AS parent_id, -0.9190813593617149 AS "Estimator" FROM rdb$database UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS "count", 3 AS depth, 2 AS parent_id, 1.2352296180865485 AS "Estimator" FROM rdb$database UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS "count", 3 AS depth, 5 AS parent_id, -1.1389257054605448 AS "Estimator" FROM rdb$database UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS "count", 3 AS depth, 5 AS parent_id, 1.3130139356087283 AS "Estimator" FROM rdb$database UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 3 AS depth, 9 AS parent_id, -1.1110192495517592 AS "Estimator" FROM rdb$database UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 30 AS "count", 3 AS depth, 9 AS parent_id, 1.10343186643359 AS "Estimator" FROM rdb$database UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 2 AS depth, 8 AS parent_id, -1.1597457815027867 AS "Estimator" FROM rdb$database) AS "Values"), 
"DT_Output_18" AS 
(SELECT "DT_node_lookup_18"."KEY" AS "KEY", "DT_node_lookup_18".node_id_2 AS node_id_2, "DT_node_data_18".node_id AS node_id, "DT_node_data_18".feature AS feature, "DT_node_data_18".threshold AS threshold, "DT_node_data_18"."count" AS "count", "DT_node_data_18".depth AS depth, "DT_node_data_18".parent_id AS parent_id, "DT_node_data_18"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_18" LEFT OUTER JOIN "DT_node_data_18" ON "DT_node_lookup_18".node_id_2 = "DT_node_data_18".node_id), 
"GB_Tree_18_0" AS 
(SELECT "DT_Output_18"."KEY" AS "KEY", -"DT_Output_18"."Estimator" AS "Score_0", 0.0 AS "Score_1" 
FROM "DT_Output_18"), 
"GB_Tree_18_1" AS 
(SELECT "DT_Output_18"."KEY" AS "KEY", 0.0 AS "Score_0", "DT_Output_18"."Estimator" AS "Score_1" 
FROM "DT_Output_18"), 
"DT_node_lookup_19" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_59 <= 0.06653057038784027) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_62 <= -2.1253793239593506) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_101 <= -0.4183192849159241) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_73 <= -2.0547890663146973) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_19 <= 1.990046501159668) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_20 <= 1.5954883098602295) THEN 10 ELSE 11 END ELSE 12 END END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_19" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values"."count" AS "count", "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 3 AS depth, 2 AS parent_id, 1.1894841635877476 AS "Estimator" FROM rdb$database UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 3 AS depth, 2 AS parent_id, 1.3413016284437604 AS "Estimator" FROM rdb$database UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS "count", 3 AS depth, 5 AS parent_id, 1.249967024616362 AS "Estimator" FROM rdb$database UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 44 AS "count", 3 AS depth, 5 AS parent_id, -0.7550989039127227 AS "Estimator" FROM rdb$database UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 30 AS "count", 3 AS depth, 9 AS parent_id, 1.092643575272686 AS "Estimator" FROM rdb$database UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 3 AS depth, 9 AS parent_id, -1.0993453020193844 AS "Estimator" FROM rdb$database UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 2 AS depth, 8 AS parent_id, -1.1422532767499802 AS "Estimator" FROM rdb$database) AS "Values"), 
"DT_Output_19" AS 
(SELECT "DT_node_lookup_19"."KEY" AS "KEY", "DT_node_lookup_19".node_id_2 AS node_id_2, "DT_node_data_19".node_id AS node_id, "DT_node_data_19".feature AS feature, "DT_node_data_19".threshold AS threshold, "DT_node_data_19"."count" AS "count", "DT_node_data_19".depth AS depth, "DT_node_data_19".parent_id AS parent_id, "DT_node_data_19"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_19" LEFT OUTER JOIN "DT_node_data_19" ON "DT_node_lookup_19".node_id_2 = "DT_node_data_19".node_id), 
"GB_Tree_19_0" AS 
(SELECT "DT_Output_19"."KEY" AS "KEY", -"DT_Output_19"."Estimator" AS "Score_0", 0.0 AS "Score_1" 
FROM "DT_Output_19"), 
"GB_Tree_19_1" AS 
(SELECT "DT_Output_19"."KEY" AS "KEY", 0.0 AS "Score_0", "DT_Output_19"."Estimator" AS "Score_1" 
FROM "DT_Output_19"), 
"DT_node_lookup_20" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_79 <= 0.6556057929992676) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_69 <= -0.061353132128715515) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_59 <= 0.06653057038784027) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_61 <= -0.7611225843429565) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_85 <= -1.5804882049560547) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_11 <= 1.0894875526428223) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_90 <= -0.9434733390808105) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_20" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values"."count" AS "count", "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 10 AS "count", 3 AS depth, 2 AS parent_id, -1.1309440848946717 AS "Estimator" FROM rdb$database UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 14 AS "count", 3 AS depth, 2 AS parent_id, 0.70043474856491 AS "Estimator" FROM rdb$database UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 6 AS "count", 3 AS depth, 5 AS parent_id, -0.8108054231133907 AS "Estimator" FROM rdb$database UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 26 AS "count", 3 AS depth, 5 AS parent_id, 1.089409118787778 AS "Estimator" FROM rdb$database UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 3 AS depth, 9 AS parent_id, -1.1387863043679538 AS "Estimator" FROM rdb$database UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 3 AS depth, 9 AS parent_id, -1.1093195046894826 AS "Estimator" FROM rdb$database UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS "count", 3 AS depth, 12 AS parent_id, -1.0996742026635598 AS "Estimator" FROM rdb$database UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 20 AS "count", 3 AS depth, 12 AS parent_id, -1.087682125468712 AS "Estimator" FROM rdb$database) AS "Values"), 
"DT_Output_20" AS 
(SELECT "DT_node_lookup_20"."KEY" AS "KEY", "DT_node_lookup_20".node_id_2 AS node_id_2, "DT_node_data_20".node_id AS node_id, "DT_node_data_20".feature AS feature, "DT_node_data_20".threshold AS threshold, "DT_node_data_20"."count" AS "count", "DT_node_data_20".depth AS depth, "DT_node_data_20".parent_id AS parent_id, "DT_node_data_20"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_20" LEFT OUTER JOIN "DT_node_data_20" ON "DT_node_lookup_20".node_id_2 = "DT_node_data_20".node_id), 
"GB_Tree_20_0" AS 
(SELECT "DT_Output_20"."KEY" AS "KEY", -"DT_Output_20"."Estimator" AS "Score_0", 0.0 AS "Score_1" 
FROM "DT_Output_20"), 
"GB_Tree_20_1" AS 
(SELECT "DT_Output_20"."KEY" AS "KEY", 0.0 AS "Score_0", "DT_Output_20"."Estimator" AS "Score_1" 
FROM "DT_Output_20"), 
"DT_node_lookup_21" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_79 <= 0.6556057929992676) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_20 <= -0.6857923269271851) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_59 <= -0.014942582696676254) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_59 <= -0.6528651118278503) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_97 <= -1.0876049995422363) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_78 <= -0.4472762942314148) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_3 <= 1.6051325798034668) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_21" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values"."count" AS "count", "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS "count", 3 AS depth, 2 AS parent_id, 1.2106816088329435 AS "Estimator" FROM rdb$database UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 9 AS "count", 3 AS depth, 2 AS parent_id, 1.0717860027975257 AS "Estimator" FROM rdb$database UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS "count", 3 AS depth, 5 AS parent_id, 1.270661939999293 AS "Estimator" FROM rdb$database UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 39 AS "count", 3 AS depth, 5 AS parent_id, -0.07778693377945774 AS "Estimator" FROM rdb$database UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 3 AS depth, 9 AS parent_id, -1.1238482147314093 AS "Estimator" FROM rdb$database UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 3 AS depth, 9 AS parent_id, -1.0978409185624398 AS "Estimator" FROM rdb$database UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 20 AS "count", 3 AS depth, 12 AS parent_id, -1.0786458155596725 AS "Estimator" FROM rdb$database UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS "count", 3 AS depth, 12 AS parent_id, -1.0892952537375042 AS "Estimator" FROM rdb$database) AS "Values"), 
"DT_Output_21" AS 
(SELECT "DT_node_lookup_21"."KEY" AS "KEY", "DT_node_lookup_21".node_id_2 AS node_id_2, "DT_node_data_21".node_id AS node_id, "DT_node_data_21".feature AS feature, "DT_node_data_21".threshold AS threshold, "DT_node_data_21"."count" AS "count", "DT_node_data_21".depth AS depth, "DT_node_data_21".parent_id AS parent_id, "DT_node_data_21"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_21" LEFT OUTER JOIN "DT_node_data_21" ON "DT_node_lookup_21".node_id_2 = "DT_node_data_21".node_id), 
"GB_Tree_21_0" AS 
(SELECT "DT_Output_21"."KEY" AS "KEY", -"DT_Output_21"."Estimator" AS "Score_0", 0.0 AS "Score_1" 
FROM "DT_Output_21"), 
"GB_Tree_21_1" AS 
(SELECT "DT_Output_21"."KEY" AS "KEY", 0.0 AS "Score_0", "DT_Output_21"."Estimator" AS "Score_1" 
FROM "DT_Output_21"), 
"DT_node_lookup_22" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_59 <= 0.06653057038784027) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_19 <= 0.878835916519165) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_11 <= 2.114020586013794) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_79 <= 0.790464460849762) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_19 <= 1.990046501159668) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_20 <= 1.5954883098602295) THEN 10 ELSE 11 END ELSE 12 END END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_22" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values"."count" AS "count", "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 39 AS "count", 3 AS depth, 2 AS parent_id, -0.877214243129436 AS "Estimator" FROM rdb$database UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS "count", 3 AS depth, 2 AS parent_id, 1.1788751341103194 AS "Estimator" FROM rdb$database UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS "count", 3 AS depth, 5 AS parent_id, 1.2231211286257453 AS "Estimator" FROM rdb$database UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS "count", 3 AS depth, 5 AS parent_id, -1.092178525156618 AS "Estimator" FROM rdb$database UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 30 AS "count", 3 AS depth, 9 AS parent_id, 1.074797076317314 AS "Estimator" FROM rdb$database UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 3 AS depth, 9 AS parent_id, -1.0947206403896763 AS "Estimator" FROM rdb$database UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 2 AS depth, 8 AS parent_id, -1.1350504701713573 AS "Estimator" FROM rdb$database) AS "Values"), 
"DT_Output_22" AS 
(SELECT "DT_node_lookup_22"."KEY" AS "KEY", "DT_node_lookup_22".node_id_2 AS node_id_2, "DT_node_data_22".node_id AS node_id, "DT_node_data_22".feature AS feature, "DT_node_data_22".threshold AS threshold, "DT_node_data_22"."count" AS "count", "DT_node_data_22".depth AS depth, "DT_node_data_22".parent_id AS parent_id, "DT_node_data_22"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_22" LEFT OUTER JOIN "DT_node_data_22" ON "DT_node_lookup_22".node_id_2 = "DT_node_data_22".node_id), 
"GB_Tree_22_0" AS 
(SELECT "DT_Output_22"."KEY" AS "KEY", -"DT_Output_22"."Estimator" AS "Score_0", 0.0 AS "Score_1" 
FROM "DT_Output_22"), 
"GB_Tree_22_1" AS 
(SELECT "DT_Output_22"."KEY" AS "KEY", 0.0 AS "Score_0", "DT_Output_22"."Estimator" AS "Score_1" 
FROM "DT_Output_22"), 
"DT_node_lookup_23" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_59 <= 0.06653057038784027) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_37 <= 0.5512429475784302) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_39 <= 2.0146632194519043) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_62 <= 0.3664056658744812) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_24 <= -1.679437279701233) THEN 9 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_85 <= 2.2016701698303223) THEN 11 ELSE 12 END END END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_23" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values"."count" AS "count", "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 36 AS "count", 3 AS depth, 2 AS parent_id, -0.9162039068508739 AS "Estimator" FROM rdb$database UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 3 AS depth, 2 AS parent_id, 1.1752900841094502 AS "Estimator" FROM rdb$database UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS "count", 3 AS depth, 5 AS parent_id, 1.232964235533209 AS "Estimator" FROM rdb$database UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 7 AS "count", 3 AS depth, 5 AS parent_id, -0.5810736582136669 AS "Estimator" FROM rdb$database UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 2 AS depth, 8 AS parent_id, -1.1205595129818111 AS "Estimator" FROM rdb$database UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 30 AS "count", 3 AS depth, 10 AS parent_id, 1.0671900749549748 AS "Estimator" FROM rdb$database UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 3 AS depth, 10 AS parent_id, -1.0848987922744489 AS "Estimator" FROM rdb$database) AS "Values"), 
"DT_Output_23" AS 
(SELECT "DT_node_lookup_23"."KEY" AS "KEY", "DT_node_lookup_23".node_id_2 AS node_id_2, "DT_node_data_23".node_id AS node_id, "DT_node_data_23".feature AS feature, "DT_node_data_23".threshold AS threshold, "DT_node_data_23"."count" AS "count", "DT_node_data_23".depth AS depth, "DT_node_data_23".parent_id AS parent_id, "DT_node_data_23"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_23" LEFT OUTER JOIN "DT_node_data_23" ON "DT_node_lookup_23".node_id_2 = "DT_node_data_23".node_id), 
"GB_Tree_23_0" AS 
(SELECT "DT_Output_23"."KEY" AS "KEY", -"DT_Output_23"."Estimator" AS "Score_0", 0.0 AS "Score_1" 
FROM "DT_Output_23"), 
"GB_Tree_23_1" AS 
(SELECT "DT_Output_23"."KEY" AS "KEY", 0.0 AS "Score_0", "DT_Output_23"."Estimator" AS "Score_1" 
FROM "DT_Output_23"), 
"DT_node_lookup_24" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_59 <= 0.06653057038784027) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_62 <= -2.1253793239593506) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_72 <= 1.1118524074554443) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_73 <= -2.0547890663146973) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_53 <= -1.6125049591064453) THEN 9 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_74 <= -1.8504893779754639) THEN 11 ELSE 12 END END END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_24" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values"."count" AS "count", "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 3 AS depth, 2 AS parent_id, 1.228846710362582 AS "Estimator" FROM rdb$database UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 3 AS depth, 2 AS parent_id, 1.1296263706262895 AS "Estimator" FROM rdb$database UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS "count", 3 AS depth, 5 AS parent_id, 1.1660627620673931 AS "Estimator" FROM rdb$database UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 44 AS "count", 3 AS depth, 5 AS parent_id, -0.7006872378577831 AS "Estimator" FROM rdb$database UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 2 AS depth, 8 AS parent_id, -1.1077795096962353 AS "Estimator" FROM rdb$database UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 3 AS depth, 10 AS parent_id, -1.0761701755212065 AS "Estimator" FROM rdb$database UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 30 AS "count", 3 AS depth, 10 AS parent_id, 1.060401372914973 AS "Estimator" FROM rdb$database) AS "Values"), 
"DT_Output_24" AS 
(SELECT "DT_node_lookup_24"."KEY" AS "KEY", "DT_node_lookup_24".node_id_2 AS node_id_2, "DT_node_data_24".node_id AS node_id, "DT_node_data_24".feature AS feature, "DT_node_data_24".threshold AS threshold, "DT_node_data_24"."count" AS "count", "DT_node_data_24".depth AS depth, "DT_node_data_24".parent_id AS parent_id, "DT_node_data_24"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_24" LEFT OUTER JOIN "DT_node_data_24" ON "DT_node_lookup_24".node_id_2 = "DT_node_data_24".node_id), 
"GB_Tree_24_0" AS 
(SELECT "DT_Output_24"."KEY" AS "KEY", -"DT_Output_24"."Estimator" AS "Score_0", 0.0 AS "Score_1" 
FROM "DT_Output_24"), 
"GB_Tree_24_1" AS 
(SELECT "DT_Output_24"."KEY" AS "KEY", 0.0 AS "Score_0", "DT_Output_24"."Estimator" AS "Score_1" 
FROM "DT_Output_24"), 
"DT_node_lookup_25" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_79 <= 0.6556057929992676) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_59 <= -0.6528651118278503) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_23 <= -0.5581667423248291) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_20 <= -0.6857923269271851) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_85 <= -1.5804882049560547) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_75 <= -0.30356359481811523) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_90 <= -0.8752791881561279) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_25" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values"."count" AS "count", "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 3 AS depth, 2 AS parent_id, 1.2683221251322265 AS "Estimator" FROM rdb$database UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS "count", 3 AS depth, 2 AS parent_id, 1.1546749624293828 AS "Estimator" FROM rdb$database UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 14 AS "count", 3 AS depth, 5 AS parent_id, 1.116303940293556 AS "Estimator" FROM rdb$database UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 39 AS "count", 3 AS depth, 5 AS parent_id, -0.10575753054715527 AS "Estimator" FROM rdb$database UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 3 AS depth, 9 AS parent_id, -1.0844166749518729 AS "Estimator" FROM rdb$database UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 3 AS depth, 9 AS parent_id, -1.0683162902993475 AS "Estimator" FROM rdb$database UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS "count", 3 AS depth, 12 AS parent_id, -1.0613572055216591 AS "Estimator" FROM rdb$database UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 19 AS "count", 3 AS depth, 12 AS parent_id, -1.0549908905743144 AS "Estimator" FROM rdb$database) AS "Values"), 
"DT_Output_25" AS 
(SELECT "DT_node_lookup_25"."KEY" AS "KEY", "DT_node_lookup_25".node_id_2 AS node_id_2, "DT_node_data_25".node_id AS node_id, "DT_node_data_25".feature AS feature, "DT_node_data_25".threshold AS threshold, "DT_node_data_25"."count" AS "count", "DT_node_data_25".depth AS depth, "DT_node_data_25".parent_id AS parent_id, "DT_node_data_25"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_25" LEFT OUTER JOIN "DT_node_data_25" ON "DT_node_lookup_25".node_id_2 = "DT_node_data_25".node_id), 
"GB_Tree_25_0" AS 
(SELECT "DT_Output_25"."KEY" AS "KEY", -"DT_Output_25"."Estimator" AS "Score_0", 0.0 AS "Score_1" 
FROM "DT_Output_25"), 
"GB_Tree_25_1" AS 
(SELECT "DT_Output_25"."KEY" AS "KEY", 0.0 AS "Score_0", "DT_Output_25"."Estimator" AS "Score_1" 
FROM "DT_Output_25"), 
"DT_node_lookup_26" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_59 <= 0.06653057038784027) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_19 <= 0.878835916519165) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_11 <= 2.114020586013794) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_79 <= 0.790464460849762) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_49 <= -1.5966084003448486) THEN 9 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_85 <= 2.2016701698303223) THEN 11 ELSE 12 END END END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_26" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values"."count" AS "count", "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 39 AS "count", 3 AS depth, 2 AS parent_id, -0.848040591553799 AS "Estimator" FROM rdb$database UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS "count", 3 AS depth, 2 AS parent_id, 1.143228247261414 AS "Estimator" FROM rdb$database UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS "count", 3 AS depth, 5 AS parent_id, 1.1674920321085973 AS "Estimator" FROM rdb$database UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS "count", 3 AS depth, 5 AS parent_id, -1.0637616455941372 AS "Estimator" FROM rdb$database UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 2 AS depth, 8 AS parent_id, -1.0954625342843867 AS "Estimator" FROM rdb$database UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 30 AS "count", 3 AS depth, 10 AS parent_id, 1.0537994406927356 AS "Estimator" FROM rdb$database UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 3 AS depth, 10 AS parent_id, -1.0676790865165056 AS "Estimator" FROM rdb$database) AS "Values"), 
"DT_Output_26" AS 
(SELECT "DT_node_lookup_26"."KEY" AS "KEY", "DT_node_lookup_26".node_id_2 AS node_id_2, "DT_node_data_26".node_id AS node_id, "DT_node_data_26".feature AS feature, "DT_node_data_26".threshold AS threshold, "DT_node_data_26"."count" AS "count", "DT_node_data_26".depth AS depth, "DT_node_data_26".parent_id AS parent_id, "DT_node_data_26"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_26" LEFT OUTER JOIN "DT_node_data_26" ON "DT_node_lookup_26".node_id_2 = "DT_node_data_26".node_id), 
"GB_Tree_26_0" AS 
(SELECT "DT_Output_26"."KEY" AS "KEY", -"DT_Output_26"."Estimator" AS "Score_0", 0.0 AS "Score_1" 
FROM "DT_Output_26"), 
"GB_Tree_26_1" AS 
(SELECT "DT_Output_26"."KEY" AS "KEY", 0.0 AS "Score_0", "DT_Output_26"."Estimator" AS "Score_1" 
FROM "DT_Output_26"), 
"DT_node_lookup_27" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_59 <= 0.06653057038784027) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_62 <= -2.1253793239593506) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_95 <= 0.9043038487434387) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_20 <= 1.9128592014312744) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_19 <= 1.990046501159668) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_85 <= 2.2016701698303223) THEN 10 ELSE 11 END ELSE 12 END END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_27" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values"."count" AS "count", "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 3 AS depth, 2 AS parent_id, 1.0921404465542395 AS "Estimator" FROM rdb$database UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 3 AS depth, 2 AS parent_id, 1.1970271204342164 AS "Estimator" FROM rdb$database UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 44 AS "count", 3 AS depth, 5 AS parent_id, -0.6753549569321617 AS "Estimator" FROM rdb$database UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS "count", 3 AS depth, 5 AS parent_id, 1.1344027552747624 AS "Estimator" FROM rdb$database UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 30 AS "count", 3 AS depth, 9 AS parent_id, 1.048431240567795 AS "Estimator" FROM rdb$database UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 3 AS depth, 9 AS parent_id, -1.0608255121966532 AS "Estimator" FROM rdb$database UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 2 AS depth, 8 AS parent_id, -1.0855574094288665 AS "Estimator" FROM rdb$database) AS "Values"), 
"DT_Output_27" AS 
(SELECT "DT_node_lookup_27"."KEY" AS "KEY", "DT_node_lookup_27".node_id_2 AS node_id_2, "DT_node_data_27".node_id AS node_id, "DT_node_data_27".feature AS feature, "DT_node_data_27".threshold AS threshold, "DT_node_data_27"."count" AS "count", "DT_node_data_27".depth AS depth, "DT_node_data_27".parent_id AS parent_id, "DT_node_data_27"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_27" LEFT OUTER JOIN "DT_node_data_27" ON "DT_node_lookup_27".node_id_2 = "DT_node_data_27".node_id), 
"GB_Tree_27_0" AS 
(SELECT "DT_Output_27"."KEY" AS "KEY", -"DT_Output_27"."Estimator" AS "Score_0", 0.0 AS "Score_1" 
FROM "DT_Output_27"), 
"GB_Tree_27_1" AS 
(SELECT "DT_Output_27"."KEY" AS "KEY", 0.0 AS "Score_0", "DT_Output_27"."Estimator" AS "Score_1" 
FROM "DT_Output_27"), 
"DT_node_lookup_28" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_59 <= -0.1771824061870575) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_19 <= 0.878835916519165) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_20 <= 1.9961984157562256) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_59 <= -0.8758586645126343) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_79 <= 0.19056035578250885) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_59 <= 0.06653057038784027) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_31 <= -0.2605673670768738) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_28" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values"."count" AS "count", "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 33 AS "count", 3 AS depth, 2 AS parent_id, -1.052483812514589 AS "Estimator" FROM rdb$database UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 3 AS depth, 2 AS parent_id, 1.1216311299741126 AS "Estimator" FROM rdb$database UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS "count", 3 AS depth, 5 AS parent_id, -1.0536065337464005 AS "Estimator" FROM rdb$database UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS "count", 3 AS depth, 5 AS parent_id, 1.1538564243577436 AS "Estimator" FROM rdb$database UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS "count", 3 AS depth, 9 AS parent_id, -1.0987449225397583 AS "Estimator" FROM rdb$database UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 32 AS "count", 3 AS depth, 9 AS parent_id, 0.8544912014533056 AS "Estimator" FROM rdb$database UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS "count", 3 AS depth, 12 AS parent_id, 1.1645164554948981 AS "Estimator" FROM rdb$database UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 3 AS depth, 12 AS parent_id, 1.1163366276260627 AS "Estimator" FROM rdb$database) AS "Values"), 
"DT_Output_28" AS 
(SELECT "DT_node_lookup_28"."KEY" AS "KEY", "DT_node_lookup_28".node_id_2 AS node_id_2, "DT_node_data_28".node_id AS node_id, "DT_node_data_28".feature AS feature, "DT_node_data_28".threshold AS threshold, "DT_node_data_28"."count" AS "count", "DT_node_data_28".depth AS depth, "DT_node_data_28".parent_id AS parent_id, "DT_node_data_28"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_28" LEFT OUTER JOIN "DT_node_data_28" ON "DT_node_lookup_28".node_id_2 = "DT_node_data_28".node_id), 
"GB_Tree_28_0" AS 
(SELECT "DT_Output_28"."KEY" AS "KEY", -"DT_Output_28"."Estimator" AS "Score_0", 0.0 AS "Score_1" 
FROM "DT_Output_28"), 
"GB_Tree_28_1" AS 
(SELECT "DT_Output_28"."KEY" AS "KEY", 0.0 AS "Score_0", "DT_Output_28"."Estimator" AS "Score_1" 
FROM "DT_Output_28"), 
"DT_node_lookup_29" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_59 <= -0.1771824061870575) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_19 <= 0.878835916519165) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_90 <= 2.070770263671875) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_59 <= -0.8758586645126343) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_79 <= 0.19056035578250885) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_59 <= 0.06653057038784027) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_58 <= 1.440373182296753) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_29" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values"."count" AS "count", "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 33 AS "count", 3 AS depth, 2 AS parent_id, -1.0472675207159643 AS "Estimator" FROM rdb$database UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 3 AS depth, 2 AS parent_id, 1.108725877236452 AS "Estimator" FROM rdb$database UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS "count", 3 AS depth, 5 AS parent_id, -1.048256986548671 AS "Estimator" FROM rdb$database UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS "count", 3 AS depth, 5 AS parent_id, 1.1375407397820856 AS "Estimator" FROM rdb$database UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS "count", 3 AS depth, 9 AS parent_id, -1.0885716738647226 AS "Estimator" FROM rdb$database UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 32 AS "count", 3 AS depth, 9 AS parent_id, 0.8226569108799275 AS "Estimator" FROM rdb$database UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS "count", 3 AS depth, 12 AS parent_id, 1.1464487299934143 AS "Estimator" FROM rdb$database UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 3 AS depth, 12 AS parent_id, 1.1040482036165709 AS "Estimator" FROM rdb$database) AS "Values"), 
"DT_Output_29" AS 
(SELECT "DT_node_lookup_29"."KEY" AS "KEY", "DT_node_lookup_29".node_id_2 AS node_id_2, "DT_node_data_29".node_id AS node_id, "DT_node_data_29".feature AS feature, "DT_node_data_29".threshold AS threshold, "DT_node_data_29"."count" AS "count", "DT_node_data_29".depth AS depth, "DT_node_data_29".parent_id AS parent_id, "DT_node_data_29"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_29" LEFT OUTER JOIN "DT_node_data_29" ON "DT_node_lookup_29".node_id_2 = "DT_node_data_29".node_id), 
"GB_Tree_29_0" AS 
(SELECT "DT_Output_29"."KEY" AS "KEY", -"DT_Output_29"."Estimator" AS "Score_0", 0.0 AS "Score_1" 
FROM "DT_Output_29"), 
"GB_Tree_29_1" AS 
(SELECT "DT_Output_29"."KEY" AS "KEY", 0.0 AS "Score_0", "DT_Output_29"."Estimator" AS "Score_1" 
FROM "DT_Output_29"), 
"DT_node_lookup_30" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_59 <= -0.1771824061870575) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_19 <= 0.878835916519165) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_39 <= 1.5735666751861572) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_35 <= -0.14811989665031433) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_51 <= 0.5268082022666931) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_6 <= 0.22579698264598846) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_79 <= -0.5293741822242737) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_30" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values"."count" AS "count", "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 33 AS "count", 3 AS depth, 2 AS parent_id, -1.0425896338901561 AS "Estimator" FROM rdb$database UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 3 AS depth, 2 AS parent_id, 1.0973153989368345 AS "Estimator" FROM rdb$database UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS "count", 3 AS depth, 5 AS parent_id, 1.1231171612798976 AS "Estimator" FROM rdb$database UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS "count", 3 AS depth, 5 AS parent_id, -1.0434635782595776 AS "Estimator" FROM rdb$database UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 24 AS "count", 3 AS depth, 9 AS parent_id, 0.9052107286764953 AS "Estimator" FROM rdb$database UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS "count", 3 AS depth, 9 AS parent_id, 1.1202375963142148 AS "Estimator" FROM rdb$database UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 6 AS "count", 3 AS depth, 12 AS parent_id, 1.0369582625364562 AS "Estimator" FROM rdb$database UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 6 AS "count", 3 AS depth, 12 AS parent_id, -0.9232040532471109 AS "Estimator" FROM rdb$database) AS "Values"), 
"DT_Output_30" AS 
(SELECT "DT_node_lookup_30"."KEY" AS "KEY", "DT_node_lookup_30".node_id_2 AS node_id_2, "DT_node_data_30".node_id AS node_id, "DT_node_data_30".feature AS feature, "DT_node_data_30".threshold AS threshold, "DT_node_data_30"."count" AS "count", "DT_node_data_30".depth AS depth, "DT_node_data_30".parent_id AS parent_id, "DT_node_data_30"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_30" LEFT OUTER JOIN "DT_node_data_30" ON "DT_node_lookup_30".node_id_2 = "DT_node_data_30".node_id), 
"GB_Tree_30_0" AS 
(SELECT "DT_Output_30"."KEY" AS "KEY", -"DT_Output_30"."Estimator" AS "Score_0", 0.0 AS "Score_1" 
FROM "DT_Output_30"), 
"GB_Tree_30_1" AS 
(SELECT "DT_Output_30"."KEY" AS "KEY", 0.0 AS "Score_0", "DT_Output_30"."Estimator" AS "Score_1" 
FROM "DT_Output_30"), 
"DT_node_lookup_31" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_59 <= -0.1771824061870575) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_19 <= 0.878835916519165) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_90 <= 2.070770263671875) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_59 <= -0.8758586645126343) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_79 <= 0.19056035578250885) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_59 <= 0.06653057038784027) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_20 <= -1.4660048484802246) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_31" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values"."count" AS "count", "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 33 AS "count", 3 AS depth, 2 AS parent_id, -1.038390814683828 AS "Estimator" FROM rdb$database UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 3 AS depth, 2 AS parent_id, 1.0872018633370442 AS "Estimator" FROM rdb$database UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS "count", 3 AS depth, 5 AS parent_id, -1.0391642954404154 AS "Estimator" FROM rdb$database UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS "count", 3 AS depth, 5 AS parent_id, 1.1103337390945127 AS "Estimator" FROM rdb$database UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS "count", 3 AS depth, 9 AS parent_id, -1.074371571657915 AS "Estimator" FROM rdb$database UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 32 AS "count", 3 AS depth, 9 AS parent_id, 0.7863527790577488 AS "Estimator" FROM rdb$database UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 3 AS depth, 12 AS parent_id, 1.0832980973587192 AS "Estimator" FROM rdb$database UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS "count", 3 AS depth, 12 AS parent_id, 1.1167699867774976 AS "Estimator" FROM rdb$database) AS "Values"), 
"DT_Output_31" AS 
(SELECT "DT_node_lookup_31"."KEY" AS "KEY", "DT_node_lookup_31".node_id_2 AS node_id_2, "DT_node_data_31".node_id AS node_id, "DT_node_data_31".feature AS feature, "DT_node_data_31".threshold AS threshold, "DT_node_data_31"."count" AS "count", "DT_node_data_31".depth AS depth, "DT_node_data_31".parent_id AS parent_id, "DT_node_data_31"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_31" LEFT OUTER JOIN "DT_node_data_31" ON "DT_node_lookup_31".node_id_2 = "DT_node_data_31".node_id), 
"GB_Tree_31_0" AS 
(SELECT "DT_Output_31"."KEY" AS "KEY", -"DT_Output_31"."Estimator" AS "Score_0", 0.0 AS "Score_1" 
FROM "DT_Output_31"), 
"GB_Tree_31_1" AS 
(SELECT "DT_Output_31"."KEY" AS "KEY", 0.0 AS "Score_0", "DT_Output_31"."Estimator" AS "Score_1" 
FROM "DT_Output_31"), 
"Score_Union_CTE" AS 
(SELECT ensemble_score_union."KEY" AS "KEY", ensemble_score_union."Score_0" AS "Score_0", ensemble_score_union."Score_1" AS "Score_1" 
FROM (SELECT "GB_Tree_0_0"."KEY" AS "KEY", "GB_Tree_0_0"."Score_0" AS "Score_0", "GB_Tree_0_0"."Score_1" AS "Score_1" 
FROM "GB_Tree_0_0" UNION ALL SELECT "GB_Tree_0_1"."KEY" AS "KEY", "GB_Tree_0_1"."Score_0" AS "Score_0", "GB_Tree_0_1"."Score_1" AS "Score_1" 
FROM "GB_Tree_0_1" UNION ALL SELECT "GB_Tree_1_0"."KEY" AS "KEY", "GB_Tree_1_0"."Score_0" AS "Score_0", "GB_Tree_1_0"."Score_1" AS "Score_1" 
FROM "GB_Tree_1_0" UNION ALL SELECT "GB_Tree_1_1"."KEY" AS "KEY", "GB_Tree_1_1"."Score_0" AS "Score_0", "GB_Tree_1_1"."Score_1" AS "Score_1" 
FROM "GB_Tree_1_1" UNION ALL SELECT "GB_Tree_2_0"."KEY" AS "KEY", "GB_Tree_2_0"."Score_0" AS "Score_0", "GB_Tree_2_0"."Score_1" AS "Score_1" 
FROM "GB_Tree_2_0" UNION ALL SELECT "GB_Tree_2_1"."KEY" AS "KEY", "GB_Tree_2_1"."Score_0" AS "Score_0", "GB_Tree_2_1"."Score_1" AS "Score_1" 
FROM "GB_Tree_2_1" UNION ALL SELECT "GB_Tree_3_0"."KEY" AS "KEY", "GB_Tree_3_0"."Score_0" AS "Score_0", "GB_Tree_3_0"."Score_1" AS "Score_1" 
FROM "GB_Tree_3_0" UNION ALL SELECT "GB_Tree_3_1"."KEY" AS "KEY", "GB_Tree_3_1"."Score_0" AS "Score_0", "GB_Tree_3_1"."Score_1" AS "Score_1" 
FROM "GB_Tree_3_1" UNION ALL SELECT "GB_Tree_4_0"."KEY" AS "KEY", "GB_Tree_4_0"."Score_0" AS "Score_0", "GB_Tree_4_0"."Score_1" AS "Score_1" 
FROM "GB_Tree_4_0" UNION ALL SELECT "GB_Tree_4_1"."KEY" AS "KEY", "GB_Tree_4_1"."Score_0" AS "Score_0", "GB_Tree_4_1"."Score_1" AS "Score_1" 
FROM "GB_Tree_4_1" UNION ALL SELECT "GB_Tree_5_0"."KEY" AS "KEY", "GB_Tree_5_0"."Score_0" AS "Score_0", "GB_Tree_5_0"."Score_1" AS "Score_1" 
FROM "GB_Tree_5_0" UNION ALL SELECT "GB_Tree_5_1"."KEY" AS "KEY", "GB_Tree_5_1"."Score_0" AS "Score_0", "GB_Tree_5_1"."Score_1" AS "Score_1" 
FROM "GB_Tree_5_1" UNION ALL SELECT "GB_Tree_6_0"."KEY" AS "KEY", "GB_Tree_6_0"."Score_0" AS "Score_0", "GB_Tree_6_0"."Score_1" AS "Score_1" 
FROM "GB_Tree_6_0" UNION ALL SELECT "GB_Tree_6_1"."KEY" AS "KEY", "GB_Tree_6_1"."Score_0" AS "Score_0", "GB_Tree_6_1"."Score_1" AS "Score_1" 
FROM "GB_Tree_6_1" UNION ALL SELECT "GB_Tree_7_0"."KEY" AS "KEY", "GB_Tree_7_0"."Score_0" AS "Score_0", "GB_Tree_7_0"."Score_1" AS "Score_1" 
FROM "GB_Tree_7_0" UNION ALL SELECT "GB_Tree_7_1"."KEY" AS "KEY", "GB_Tree_7_1"."Score_0" AS "Score_0", "GB_Tree_7_1"."Score_1" AS "Score_1" 
FROM "GB_Tree_7_1" UNION ALL SELECT "GB_Tree_8_0"."KEY" AS "KEY", "GB_Tree_8_0"."Score_0" AS "Score_0", "GB_Tree_8_0"."Score_1" AS "Score_1" 
FROM "GB_Tree_8_0" UNION ALL SELECT "GB_Tree_8_1"."KEY" AS "KEY", "GB_Tree_8_1"."Score_0" AS "Score_0", "GB_Tree_8_1"."Score_1" AS "Score_1" 
FROM "GB_Tree_8_1" UNION ALL SELECT "GB_Tree_9_0"."KEY" AS "KEY", "GB_Tree_9_0"."Score_0" AS "Score_0", "GB_Tree_9_0"."Score_1" AS "Score_1" 
FROM "GB_Tree_9_0" UNION ALL SELECT "GB_Tree_9_1"."KEY" AS "KEY", "GB_Tree_9_1"."Score_0" AS "Score_0", "GB_Tree_9_1"."Score_1" AS "Score_1" 
FROM "GB_Tree_9_1" UNION ALL SELECT "GB_Tree_10_0"."KEY" AS "KEY", "GB_Tree_10_0"."Score_0" AS "Score_0", "GB_Tree_10_0"."Score_1" AS "Score_1" 
FROM "GB_Tree_10_0" UNION ALL SELECT "GB_Tree_10_1"."KEY" AS "KEY", "GB_Tree_10_1"."Score_0" AS "Score_0", "GB_Tree_10_1"."Score_1" AS "Score_1" 
FROM "GB_Tree_10_1" UNION ALL SELECT "GB_Tree_11_0"."KEY" AS "KEY", "GB_Tree_11_0"."Score_0" AS "Score_0", "GB_Tree_11_0"."Score_1" AS "Score_1" 
FROM "GB_Tree_11_0" UNION ALL SELECT "GB_Tree_11_1"."KEY" AS "KEY", "GB_Tree_11_1"."Score_0" AS "Score_0", "GB_Tree_11_1"."Score_1" AS "Score_1" 
FROM "GB_Tree_11_1" UNION ALL SELECT "GB_Tree_12_0"."KEY" AS "KEY", "GB_Tree_12_0"."Score_0" AS "Score_0", "GB_Tree_12_0"."Score_1" AS "Score_1" 
FROM "GB_Tree_12_0" UNION ALL SELECT "GB_Tree_12_1"."KEY" AS "KEY", "GB_Tree_12_1"."Score_0" AS "Score_0", "GB_Tree_12_1"."Score_1" AS "Score_1" 
FROM "GB_Tree_12_1" UNION ALL SELECT "GB_Tree_13_0"."KEY" AS "KEY", "GB_Tree_13_0"."Score_0" AS "Score_0", "GB_Tree_13_0"."Score_1" AS "Score_1" 
FROM "GB_Tree_13_0" UNION ALL SELECT "GB_Tree_13_1"."KEY" AS "KEY", "GB_Tree_13_1"."Score_0" AS "Score_0", "GB_Tree_13_1"."Score_1" AS "Score_1" 
FROM "GB_Tree_13_1" UNION ALL SELECT "GB_Tree_14_0"."KEY" AS "KEY", "GB_Tree_14_0"."Score_0" AS "Score_0", "GB_Tree_14_0"."Score_1" AS "Score_1" 
FROM "GB_Tree_14_0" UNION ALL SELECT "GB_Tree_14_1"."KEY" AS "KEY", "GB_Tree_14_1"."Score_0" AS "Score_0", "GB_Tree_14_1"."Score_1" AS "Score_1" 
FROM "GB_Tree_14_1" UNION ALL SELECT "GB_Tree_15_0"."KEY" AS "KEY", "GB_Tree_15_0"."Score_0" AS "Score_0", "GB_Tree_15_0"."Score_1" AS "Score_1" 
FROM "GB_Tree_15_0" UNION ALL SELECT "GB_Tree_15_1"."KEY" AS "KEY", "GB_Tree_15_1"."Score_0" AS "Score_0", "GB_Tree_15_1"."Score_1" AS "Score_1" 
FROM "GB_Tree_15_1" UNION ALL SELECT "GB_Tree_16_0"."KEY" AS "KEY", "GB_Tree_16_0"."Score_0" AS "Score_0", "GB_Tree_16_0"."Score_1" AS "Score_1" 
FROM "GB_Tree_16_0" UNION ALL SELECT "GB_Tree_16_1"."KEY" AS "KEY", "GB_Tree_16_1"."Score_0" AS "Score_0", "GB_Tree_16_1"."Score_1" AS "Score_1" 
FROM "GB_Tree_16_1" UNION ALL SELECT "GB_Tree_17_0"."KEY" AS "KEY", "GB_Tree_17_0"."Score_0" AS "Score_0", "GB_Tree_17_0"."Score_1" AS "Score_1" 
FROM "GB_Tree_17_0" UNION ALL SELECT "GB_Tree_17_1"."KEY" AS "KEY", "GB_Tree_17_1"."Score_0" AS "Score_0", "GB_Tree_17_1"."Score_1" AS "Score_1" 
FROM "GB_Tree_17_1" UNION ALL SELECT "GB_Tree_18_0"."KEY" AS "KEY", "GB_Tree_18_0"."Score_0" AS "Score_0", "GB_Tree_18_0"."Score_1" AS "Score_1" 
FROM "GB_Tree_18_0" UNION ALL SELECT "GB_Tree_18_1"."KEY" AS "KEY", "GB_Tree_18_1"."Score_0" AS "Score_0", "GB_Tree_18_1"."Score_1" AS "Score_1" 
FROM "GB_Tree_18_1" UNION ALL SELECT "GB_Tree_19_0"."KEY" AS "KEY", "GB_Tree_19_0"."Score_0" AS "Score_0", "GB_Tree_19_0"."Score_1" AS "Score_1" 
FROM "GB_Tree_19_0" UNION ALL SELECT "GB_Tree_19_1"."KEY" AS "KEY", "GB_Tree_19_1"."Score_0" AS "Score_0", "GB_Tree_19_1"."Score_1" AS "Score_1" 
FROM "GB_Tree_19_1" UNION ALL SELECT "GB_Tree_20_0"."KEY" AS "KEY", "GB_Tree_20_0"."Score_0" AS "Score_0", "GB_Tree_20_0"."Score_1" AS "Score_1" 
FROM "GB_Tree_20_0" UNION ALL SELECT "GB_Tree_20_1"."KEY" AS "KEY", "GB_Tree_20_1"."Score_0" AS "Score_0", "GB_Tree_20_1"."Score_1" AS "Score_1" 
FROM "GB_Tree_20_1" UNION ALL SELECT "GB_Tree_21_0"."KEY" AS "KEY", "GB_Tree_21_0"."Score_0" AS "Score_0", "GB_Tree_21_0"."Score_1" AS "Score_1" 
FROM "GB_Tree_21_0" UNION ALL SELECT "GB_Tree_21_1"."KEY" AS "KEY", "GB_Tree_21_1"."Score_0" AS "Score_0", "GB_Tree_21_1"."Score_1" AS "Score_1" 
FROM "GB_Tree_21_1" UNION ALL SELECT "GB_Tree_22_0"."KEY" AS "KEY", "GB_Tree_22_0"."Score_0" AS "Score_0", "GB_Tree_22_0"."Score_1" AS "Score_1" 
FROM "GB_Tree_22_0" UNION ALL SELECT "GB_Tree_22_1"."KEY" AS "KEY", "GB_Tree_22_1"."Score_0" AS "Score_0", "GB_Tree_22_1"."Score_1" AS "Score_1" 
FROM "GB_Tree_22_1" UNION ALL SELECT "GB_Tree_23_0"."KEY" AS "KEY", "GB_Tree_23_0"."Score_0" AS "Score_0", "GB_Tree_23_0"."Score_1" AS "Score_1" 
FROM "GB_Tree_23_0" UNION ALL SELECT "GB_Tree_23_1"."KEY" AS "KEY", "GB_Tree_23_1"."Score_0" AS "Score_0", "GB_Tree_23_1"."Score_1" AS "Score_1" 
FROM "GB_Tree_23_1" UNION ALL SELECT "GB_Tree_24_0"."KEY" AS "KEY", "GB_Tree_24_0"."Score_0" AS "Score_0", "GB_Tree_24_0"."Score_1" AS "Score_1" 
FROM "GB_Tree_24_0" UNION ALL SELECT "GB_Tree_24_1"."KEY" AS "KEY", "GB_Tree_24_1"."Score_0" AS "Score_0", "GB_Tree_24_1"."Score_1" AS "Score_1" 
FROM "GB_Tree_24_1" UNION ALL SELECT "GB_Tree_25_0"."KEY" AS "KEY", "GB_Tree_25_0"."Score_0" AS "Score_0", "GB_Tree_25_0"."Score_1" AS "Score_1" 
FROM "GB_Tree_25_0" UNION ALL SELECT "GB_Tree_25_1"."KEY" AS "KEY", "GB_Tree_25_1"."Score_0" AS "Score_0", "GB_Tree_25_1"."Score_1" AS "Score_1" 
FROM "GB_Tree_25_1" UNION ALL SELECT "GB_Tree_26_0"."KEY" AS "KEY", "GB_Tree_26_0"."Score_0" AS "Score_0", "GB_Tree_26_0"."Score_1" AS "Score_1" 
FROM "GB_Tree_26_0" UNION ALL SELECT "GB_Tree_26_1"."KEY" AS "KEY", "GB_Tree_26_1"."Score_0" AS "Score_0", "GB_Tree_26_1"."Score_1" AS "Score_1" 
FROM "GB_Tree_26_1" UNION ALL SELECT "GB_Tree_27_0"."KEY" AS "KEY", "GB_Tree_27_0"."Score_0" AS "Score_0", "GB_Tree_27_0"."Score_1" AS "Score_1" 
FROM "GB_Tree_27_0" UNION ALL SELECT "GB_Tree_27_1"."KEY" AS "KEY", "GB_Tree_27_1"."Score_0" AS "Score_0", "GB_Tree_27_1"."Score_1" AS "Score_1" 
FROM "GB_Tree_27_1" UNION ALL SELECT "GB_Tree_28_0"."KEY" AS "KEY", "GB_Tree_28_0"."Score_0" AS "Score_0", "GB_Tree_28_0"."Score_1" AS "Score_1" 
FROM "GB_Tree_28_0" UNION ALL SELECT "GB_Tree_28_1"."KEY" AS "KEY", "GB_Tree_28_1"."Score_0" AS "Score_0", "GB_Tree_28_1"."Score_1" AS "Score_1" 
FROM "GB_Tree_28_1" UNION ALL SELECT "GB_Tree_29_0"."KEY" AS "KEY", "GB_Tree_29_0"."Score_0" AS "Score_0", "GB_Tree_29_0"."Score_1" AS "Score_1" 
FROM "GB_Tree_29_0" UNION ALL SELECT "GB_Tree_29_1"."KEY" AS "KEY", "GB_Tree_29_1"."Score_0" AS "Score_0", "GB_Tree_29_1"."Score_1" AS "Score_1" 
FROM "GB_Tree_29_1" UNION ALL SELECT "GB_Tree_30_0"."KEY" AS "KEY", "GB_Tree_30_0"."Score_0" AS "Score_0", "GB_Tree_30_0"."Score_1" AS "Score_1" 
FROM "GB_Tree_30_0" UNION ALL SELECT "GB_Tree_30_1"."KEY" AS "KEY", "GB_Tree_30_1"."Score_0" AS "Score_0", "GB_Tree_30_1"."Score_1" AS "Score_1" 
FROM "GB_Tree_30_1" UNION ALL SELECT "GB_Tree_31_0"."KEY" AS "KEY", "GB_Tree_31_0"."Score_0" AS "Score_0", "GB_Tree_31_0"."Score_1" AS "Score_1" 
FROM "GB_Tree_31_0" UNION ALL SELECT "GB_Tree_31_1"."KEY" AS "KEY", "GB_Tree_31_1"."Score_0" AS "Score_0", "GB_Tree_31_1"."Score_1" AS "Score_1" 
FROM "GB_Tree_31_1") AS ensemble_score_union), 
"GradBoost_Sum_Scores" AS 
(SELECT "T"."KEY" AS "KEY", "T"."Score_0" AS "Score_0", "T"."Score_1" AS "Score_1" 
FROM (SELECT "Score_Union_CTE"."KEY" AS "KEY", sum("Score_Union_CTE"."Score_0") AS "Score_0", sum("Score_Union_CTE"."Score_1") AS "Score_1" 
FROM "Score_Union_CTE" GROUP BY "Score_Union_CTE"."KEY") AS "T"), 
orig_cte AS 
(SELECT "GradBoost_Sum_Scores"."KEY" AS "KEY", -(-0.100083458557 + 0.1 * "GradBoost_Sum_Scores"."Score_1") AS "Score_0", -0.100083458557 + 0.1 * "GradBoost_Sum_Scores"."Score_1" AS "Score_1", 1.0 - 1.0 / (1.0 + exp(CASE WHEN (CASE WHEN (CASE WHEN (-(-0.100083458557 + 0.1 * "GradBoost_Sum_Scores"."Score_1") <= -100.0) THEN -100.0 ELSE -(-0.100083458557 + 0.1 * "GradBoost_Sum_Scores"."Score_1") END >= 100.0) THEN 100.0 ELSE CASE WHEN (-(-0.100083458557 + 0.1 * "GradBoost_Sum_Scores"."Score_1") <= -100.0) THEN -100.0 ELSE -(-0.100083458557 + 0.1 * "GradBoost_Sum_Scores"."Score_1") END END >= -709.782712893) THEN CASE WHEN (CASE WHEN (-(-0.100083458557 + 0.1 * "GradBoost_Sum_Scores"."Score_1") <= -100.0) THEN -100.0 ELSE -(-0.100083458557 + 0.1 * "GradBoost_Sum_Scores"."Score_1") END >= 100.0) THEN 100.0 ELSE CASE WHEN (-(-0.100083458557 + 0.1 * "GradBoost_Sum_Scores"."Score_1") <= -100.0) THEN -100.0 ELSE -(-0.100083458557 + 0.1 * "GradBoost_Sum_Scores"."Score_1") END END ELSE -709.782712893 END)) AS "Proba_0", 1.0 / (1.0 + exp(CASE WHEN (CASE WHEN (CASE WHEN (-(-0.100083458557 + 0.1 * "GradBoost_Sum_Scores"."Score_1") <= -100.0) THEN -100.0 ELSE -(-0.100083458557 + 0.1 * "GradBoost_Sum_Scores"."Score_1") END >= 100.0) THEN 100.0 ELSE CASE WHEN (-(-0.100083458557 + 0.1 * "GradBoost_Sum_Scores"."Score_1") <= -100.0) THEN -100.0 ELSE -(-0.100083458557 + 0.1 * "GradBoost_Sum_Scores"."Score_1") END END >= -709.782712893) THEN CASE WHEN (CASE WHEN (-(-0.100083458557 + 0.1 * "GradBoost_Sum_Scores"."Score_1") <= -100.0) THEN -100.0 ELSE -(-0.100083458557 + 0.1 * "GradBoost_Sum_Scores"."Score_1") END >= 100.0) THEN 100.0 ELSE CASE WHEN (-(-0.100083458557 + 0.1 * "GradBoost_Sum_Scores"."Score_1") <= -100.0) THEN -100.0 ELSE -(-0.100083458557 + 0.1 * "GradBoost_Sum_Scores"."Score_1") END END ELSE -709.782712893 END)) AS "Proba_1", CAST(NULL AS FLOAT) AS "LogProba_0", CAST(NULL AS FLOAT) AS "LogProba_1", CAST(NULL AS INTEGER) AS "Decision", CAST(NULL AS FLOAT) AS "DecisionProba" 
FROM "GradBoost_Sum_Scores"), 
score_class_union AS 
(SELECT scu."KEY_u" AS "KEY_u", scu.class AS class, scu."LogProba" AS "LogProba", scu."Proba" AS "Proba", scu."Score" AS "Score" 
FROM (SELECT orig_cte."KEY" AS "KEY_u", 0 AS class, orig_cte."LogProba_0" AS "LogProba", orig_cte."Proba_0" AS "Proba", orig_cte."Score_0" AS "Score" 
FROM orig_cte UNION ALL SELECT orig_cte."KEY" AS "KEY_u", 1 AS class, orig_cte."LogProba_1" AS "LogProba", orig_cte."Proba_1" AS "Proba", orig_cte."Score_1" AS "Score" 
FROM orig_cte) AS scu), 
score_max AS 
(SELECT orig_cte."KEY" AS "KEY", orig_cte."Score_0" AS "Score_0", orig_cte."Score_1" AS "Score_1", orig_cte."Proba_0" AS "Proba_0", orig_cte."Proba_1" AS "Proba_1", orig_cte."LogProba_0" AS "LogProba_0", orig_cte."LogProba_1" AS "LogProba_1", orig_cte."Decision" AS "Decision", orig_cte."DecisionProba" AS "DecisionProba", max_select."KEY_m" AS "KEY_m", max_select."max_Proba" AS "max_Proba" 
FROM orig_cte LEFT OUTER JOIN (SELECT score_class_union."KEY_u" AS "KEY_m", max(score_class_union."Proba") AS "max_Proba" 
FROM score_class_union GROUP BY score_class_union."KEY_u") AS max_select ON orig_cte."KEY" = max_select."KEY_m"), 
union_with_max AS 
(SELECT score_class_union."KEY_u" AS "KEY_u", score_class_union.class AS class, score_class_union."LogProba" AS "LogProba", score_class_union."Proba" AS "Proba", score_class_union."Score" AS "Score", score_max."KEY" AS "KEY", score_max."Score_0" AS "Score_0", score_max."Score_1" AS "Score_1", score_max."Proba_0" AS "Proba_0", score_max."Proba_1" AS "Proba_1", score_max."LogProba_0" AS "LogProba_0", score_max."LogProba_1" AS "LogProba_1", score_max."Decision" AS "Decision", score_max."DecisionProba" AS "DecisionProba", score_max."KEY_m" AS "KEY_m", score_max."max_Proba" AS "max_Proba" 
FROM score_class_union LEFT OUTER JOIN score_max ON score_class_union."KEY_u" = score_max."KEY"), 
arg_max_cte AS 
(SELECT score_max."KEY" AS "KEY", score_max."Score_0" AS "Score_0", score_max."Score_1" AS "Score_1", score_max."Proba_0" AS "Proba_0", score_max."Proba_1" AS "Proba_1", score_max."LogProba_0" AS "LogProba_0", score_max."LogProba_1" AS "LogProba_1", score_max."Decision" AS "Decision", score_max."DecisionProba" AS "DecisionProba", score_max."KEY_m" AS "KEY_m", score_max."max_Proba" AS "max_Proba", "arg_max_t_Proba"."KEY_Proba" AS "KEY_Proba", "arg_max_t_Proba"."arg_max_Proba" AS "arg_max_Proba" 
FROM score_max LEFT OUTER JOIN (SELECT union_with_max."KEY" AS "KEY_Proba", min(union_with_max.class) AS "arg_max_Proba" 
FROM union_with_max 
WHERE union_with_max."max_Proba" <= union_with_max."Proba" GROUP BY union_with_max."KEY") AS "arg_max_t_Proba" ON score_max."KEY" = "arg_max_t_Proba"."KEY_Proba")
 SELECT arg_max_cte."KEY" AS "KEY", arg_max_cte."Score_0" AS "Score_0", arg_max_cte."Score_1" AS "Score_1", arg_max_cte."Proba_0" AS "Proba_0", arg_max_cte."Proba_1" AS "Proba_1", CASE WHEN (arg_max_cte."Proba_0" IS NULL OR arg_max_cte."Proba_0" > 0.0) THEN ln(arg_max_cte."Proba_0") ELSE -1.79769313486231e+308 END AS "LogProba_0", CASE WHEN (arg_max_cte."Proba_1" IS NULL OR arg_max_cte."Proba_1" > 0.0) THEN ln(arg_max_cte."Proba_1") ELSE -1.79769313486231e+308 END AS "LogProba_1", arg_max_cte."arg_max_Proba" AS "Decision", arg_max_cte."max_Proba" AS "DecisionProba" 
FROM arg_max_cte