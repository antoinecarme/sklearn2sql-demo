-- This SQL code was generated by sklearn2sql (development version).
-- Copyright 2017

WITH "DT_node_lookup" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_27" <= 0.14545000000000002) THEN CASE WHEN ("ADS"."Feature_0" <= 15.475000000000001) THEN CASE WHEN ("ADS"."Feature_13" <= 32.85) THEN CASE WHEN ("ADS"."Feature_1" <= 24.355) THEN 16 ELSE 17 END ELSE 9 END ELSE 5 END ELSE CASE WHEN ("ADS"."Feature_23" <= 822.85) THEN 6 ELSE 7 END END AS node_id_2 
FROM "BreastCancer" "ADS"), 
"DT_node_data" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Score" AS "Score" 
FROM (SELECT 5 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, 2 AS parent_id, -0.04000000000000001 AS "Score" FROM DUAL UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, 3 AS parent_id, -0.04000000000000001 AS "Score" FROM DUAL UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, 3 AS parent_id, -0.1 AS "Score" FROM DUAL UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, 4 AS parent_id, 0.06774193548387096 AS "Score" FROM DUAL UNION ALL SELECT 16 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS depth, 8 AS parent_id, 0.1 AS "Score" FROM DUAL UNION ALL SELECT 17 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS depth, 8 AS parent_id, 0.09000000000000001 AS "Score" FROM DUAL) "Values"), 
"DT_Output" AS 
(SELECT "DT_node_lookup"."KEY" AS "KEY", "DT_node_lookup".node_id_2 AS node_id_2, "DT_node_data".node_id AS node_id, "DT_node_data".feature AS feature, "DT_node_data".threshold AS threshold, "DT_node_data".depth AS depth, "DT_node_data".parent_id AS parent_id, "DT_node_data"."Score" AS "Score" 
FROM "DT_node_lookup" LEFT OUTER JOIN "DT_node_data" ON "DT_node_lookup".node_id_2 = "DT_node_data".node_id), 
"LGBM_Tree_0_0" AS 
(SELECT "DT_Output"."KEY" AS "KEY", "DT_Output"."Score" AS "Score_0" 
FROM "DT_Output"), 
"DT_node_lookup_1" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_27" <= 0.14545000000000002) THEN CASE WHEN ("ADS"."Feature_20" <= 17.145) THEN CASE WHEN ("ADS"."Feature_13" <= 32.85) THEN CASE WHEN ("ADS"."Feature_19" <= 0.001604) THEN 16 ELSE CASE WHEN ("ADS"."Feature_2" <= 89.785) THEN CASE WHEN ("ADS"."Feature_1" <= 22.415) THEN CASE WHEN ("ADS"."Feature_0" <= 13.274999999999999) THEN 136 ELSE 137 END ELSE 69 END ELSE 35 END END ELSE 9 END ELSE 5 END ELSE CASE WHEN ("ADS"."Feature_22" <= 112.8) THEN 6 ELSE CASE WHEN ("ADS"."Feature_0" <= 15.31) THEN 14 ELSE CASE WHEN ("ADS"."Feature_0" <= 19.990000000000002) THEN 30 ELSE 31 END END END END AS node_id_2 
FROM "BreastCancer" "ADS"), 
"DT_node_data_1" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Score" AS "Score" 
FROM (SELECT 5 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, 2 AS parent_id, -0.03235559123733114 AS "Score" FROM DUAL UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, 3 AS parent_id, -0.04045768523484709 AS "Score" FROM DUAL UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, 4 AS parent_id, 0.0644299954082741 AS "Score" FROM DUAL UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, 7 AS parent_id, -0.09550881644102747 AS "Score" FROM DUAL UNION ALL SELECT 16 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS depth, 8 AS parent_id, 0.08575986223738637 AS "Score" FROM DUAL UNION ALL SELECT 30 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS depth, 15 AS parent_id, -0.09524187224606032 AS "Score" FROM DUAL UNION ALL SELECT 31 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS depth, 15 AS parent_id, -0.09524187224606034 AS "Score" FROM DUAL UNION ALL SELECT 35 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS depth, 17 AS parent_id, 0.09595551943550558 AS "Score" FROM DUAL UNION ALL SELECT 69 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 6 AS depth, 34 AS parent_id, 0.09553126647552246 AS "Score" FROM DUAL UNION ALL SELECT 136 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 7 AS depth, 68 AS parent_id, 0.09524187224606034 AS "Score" FROM DUAL UNION ALL SELECT 137 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 7 AS depth, 68 AS parent_id, 0.09524187224606034 AS "Score" FROM DUAL) "Values"), 
"DT_Output_1" AS 
(SELECT "DT_node_lookup_1"."KEY" AS "KEY", "DT_node_lookup_1".node_id_2 AS node_id_2, "DT_node_data_1".node_id AS node_id, "DT_node_data_1".feature AS feature, "DT_node_data_1".threshold AS threshold, "DT_node_data_1".depth AS depth, "DT_node_data_1".parent_id AS parent_id, "DT_node_data_1"."Score" AS "Score" 
FROM "DT_node_lookup_1" LEFT OUTER JOIN "DT_node_data_1" ON "DT_node_lookup_1".node_id_2 = "DT_node_data_1".node_id), 
"LGBM_Tree_0_1" AS 
(SELECT "DT_Output_1"."KEY" AS "KEY", "DT_Output_1"."Score" AS "Score_0" 
FROM "DT_Output_1"), 
"DT_node_lookup_2" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_27" <= 0.14545000000000002) THEN CASE WHEN ("ADS"."Feature_20" <= 16.875) THEN CASE WHEN ("ADS"."Feature_13" <= 32.85) THEN CASE WHEN ("ADS"."Feature_19" <= 0.001628) THEN 16 ELSE CASE WHEN ("ADS"."Feature_1" <= 23.075) THEN CASE WHEN ("ADS"."Feature_2" <= 88.85) THEN CASE WHEN ("ADS"."Feature_21" <= 27.975) THEN 136 ELSE 137 END ELSE 69 END ELSE 35 END END ELSE 9 END ELSE 5 END ELSE CASE WHEN ("ADS"."Feature_20" <= 16.4) THEN 6 ELSE CASE WHEN ("ADS"."Feature_20" <= 18.53) THEN 14 ELSE CASE WHEN ("ADS"."Feature_3" <= 908.6500000000001) THEN 30 ELSE 31 END END END END AS node_id_2 
FROM "BreastCancer" "ADS"), 
"DT_node_data_2" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Score" AS "Score" 
FROM (SELECT 5 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, 2 AS parent_id, -0.02334400373179567 AS "Score" FROM DUAL UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, 3 AS parent_id, -0.038378655240370325 AS "Score" FROM DUAL UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, 4 AS parent_id, 0.061410364362711356 AS "Score" FROM DUAL UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, 7 AS parent_id, -0.0914675298879022 AS "Score" FROM DUAL UNION ALL SELECT 16 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS depth, 8 AS parent_id, 0.09152602883180712 AS "Score" FROM DUAL UNION ALL SELECT 30 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS depth, 15 AS parent_id, -0.09112916702291603 AS "Score" FROM DUAL UNION ALL SELECT 31 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS depth, 15 AS parent_id, -0.09113178077572359 AS "Score" FROM DUAL UNION ALL SELECT 35 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS depth, 17 AS parent_id, 0.09145196833074745 AS "Score" FROM DUAL UNION ALL SELECT 69 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 6 AS depth, 34 AS parent_id, 0.0911094267032699 AS "Score" FROM DUAL UNION ALL SELECT 136 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 7 AS depth, 68 AS parent_id, 0.09113178077572359 AS "Score" FROM DUAL UNION ALL SELECT 137 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 7 AS depth, 68 AS parent_id, 0.09112951418794211 AS "Score" FROM DUAL) "Values"), 
"DT_Output_2" AS 
(SELECT "DT_node_lookup_2"."KEY" AS "KEY", "DT_node_lookup_2".node_id_2 AS node_id_2, "DT_node_data_2".node_id AS node_id, "DT_node_data_2".feature AS feature, "DT_node_data_2".threshold AS threshold, "DT_node_data_2".depth AS depth, "DT_node_data_2".parent_id AS parent_id, "DT_node_data_2"."Score" AS "Score" 
FROM "DT_node_lookup_2" LEFT OUTER JOIN "DT_node_data_2" ON "DT_node_lookup_2".node_id_2 = "DT_node_data_2".node_id), 
"LGBM_Tree_0_2" AS 
(SELECT "DT_Output_2"."KEY" AS "KEY", "DT_Output_2"."Score" AS "Score_0" 
FROM "DT_Output_2"), 
"DT_node_lookup_3" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_27" <= 0.14545000000000002) THEN CASE WHEN ("ADS"."Feature_2" <= 99.155) THEN CASE WHEN ("ADS"."Feature_13" <= 32.85) THEN CASE WHEN ("ADS"."Feature_26" <= 0.3387) THEN CASE WHEN ("ADS"."Feature_0" <= 14.045) THEN CASE WHEN ("ADS"."Feature_21" <= 30.200000000000003) THEN CASE WHEN ("ADS"."Feature_19" <= 0.001772) THEN 128 ELSE CASE WHEN ("ADS"."Feature_1" <= 19.995) THEN CASE WHEN ("ADS"."Feature_0" <= 13.225000000000001) THEN CASE WHEN ("ADS"."Feature_21" <= 25.265) THEN CASE WHEN ("ADS"."Feature_0" <= 9.7485) THEN 2064 ELSE 2065 END ELSE 1033 END ELSE 517 END ELSE 259 END END ELSE 65 END ELSE 33 END ELSE 17 END ELSE 9 END ELSE 5 END ELSE CASE WHEN ("ADS"."Feature_22" <= 112.8) THEN 6 ELSE CASE WHEN ("ADS"."Feature_3" <= 716.75) THEN 14 ELSE CASE WHEN ("ADS"."Feature_13" <= 52.415000000000006) THEN 30 ELSE CASE WHEN ("ADS"."Feature_0" <= 18.235) THEN 62 ELSE 63 END END END END END AS node_id_2 
FROM "BreastCancer" "ADS"), 
"DT_node_data_3" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Score" AS "Score" 
FROM (SELECT 5 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, 2 AS parent_id, -0.029922464340614432 AS "Score" FROM DUAL UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, 3 AS parent_id, -0.03641594600491139 AS "Score" FROM DUAL UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, 4 AS parent_id, 0.0575535048050114 AS "Score" FROM DUAL UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, 7 AS parent_id, -0.08795547956102948 AS "Score" FROM DUAL UNION ALL SELECT 17 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS depth, 8 AS parent_id, 0.07812223100797512 AS "Score" FROM DUAL UNION ALL SELECT 30 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS depth, 15 AS parent_id, -0.08754578098786996 AS "Score" FROM DUAL UNION ALL SELECT 33 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS depth, 16 AS parent_id, 0.08914306612556912 AS "Score" FROM DUAL UNION ALL SELECT 62 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS depth, 31 AS parent_id, -0.08754914179513162 AS "Score" FROM DUAL UNION ALL SELECT 63 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS depth, 31 AS parent_id, -0.08754910073915209 AS "Score" FROM DUAL UNION ALL SELECT 65 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 6 AS depth, 32 AS parent_id, 0.0878257478936722 AS "Score" FROM DUAL UNION ALL SELECT 128 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 7 AS depth, 64 AS parent_id, 0.08774367707696351 AS "Score" FROM DUAL UNION ALL SELECT 259 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 8 AS depth, 129 AS parent_id, 0.08754545224159099 AS "Score" FROM DUAL UNION ALL SELECT 517 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 9 AS depth, 258 AS parent_id, 0.08754922416067425 AS "Score" FROM DUAL UNION ALL SELECT 1033 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 10 AS depth, 516 AS parent_id, 0.08754910863180301 AS "Score" FROM DUAL UNION ALL SELECT 2064 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 11 AS depth, 1032 AS parent_id, 0.08754910073915197 AS "Score" FROM DUAL UNION ALL SELECT 2065 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 11 AS depth, 1032 AS parent_id, 0.08754910073915209 AS "Score" FROM DUAL) "Values"), 
"DT_Output_3" AS 
(SELECT "DT_node_lookup_3"."KEY" AS "KEY", "DT_node_lookup_3".node_id_2 AS node_id_2, "DT_node_data_3".node_id AS node_id, "DT_node_data_3".feature AS feature, "DT_node_data_3".threshold AS threshold, "DT_node_data_3".depth AS depth, "DT_node_data_3".parent_id AS parent_id, "DT_node_data_3"."Score" AS "Score" 
FROM "DT_node_lookup_3" LEFT OUTER JOIN "DT_node_data_3" ON "DT_node_lookup_3".node_id_2 = "DT_node_data_3".node_id), 
"LGBM_Tree_0_3" AS 
(SELECT "DT_Output_3"."KEY" AS "KEY", "DT_Output_3"."Score" AS "Score_0" 
FROM "DT_Output_3"), 
"DT_node_lookup_4" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_27" <= 0.14545000000000002) THEN CASE WHEN ("ADS"."Feature_20" <= 17.145) THEN CASE WHEN ("ADS"."Feature_27" <= 0.12229999999999999) THEN CASE WHEN ("ADS"."Feature_28" <= 0.21285) THEN 16 ELSE CASE WHEN ("ADS"."Feature_13" <= 32.85) THEN CASE WHEN ("ADS"."Feature_1" <= 22.645) THEN CASE WHEN ("ADS"."Feature_19" <= 0.0016575000000000001) THEN 136 ELSE CASE WHEN ("ADS"."Feature_26" <= 0.26415) THEN CASE WHEN ("ADS"."Feature_20" <= 15.04) THEN CASE WHEN ("ADS"."Feature_21" <= 26.490000000000002) THEN CASE WHEN ("ADS"."Feature_19" <= 0.0021374999999999996) THEN 2192 ELSE CASE WHEN ("ADS"."Feature_1" <= 18.310000000000002) THEN CASE WHEN ("ADS"."Feature_1" <= 14.125) THEN 8772 ELSE 8773 END ELSE 4387 END END ELSE 1097 END ELSE 549 END ELSE 275 END END ELSE 69 END ELSE 35 END END ELSE 9 END ELSE 5 END ELSE CASE WHEN ("ADS"."Feature_20" <= 16.4) THEN 6 ELSE CASE WHEN ("ADS"."Feature_20" <= 18.53) THEN 14 ELSE CASE WHEN ("ADS"."Feature_20" <= 20.384999999999998) THEN 30 ELSE CASE WHEN ("ADS"."Feature_13" <= 68.75999999999999) THEN 62 ELSE CASE WHEN ("ADS"."Feature_0" <= 19.185000000000002) THEN 126 ELSE 127 END END END END END END AS node_id_2 
FROM "BreastCancer" "ADS"), 
"DT_node_data_4" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Score" AS "Score" 
FROM (SELECT 5 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, 2 AS parent_id, -0.02902465141445277 AS "Score" FROM DUAL UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, 3 AS parent_id, -0.034593370376945626 AS "Score" FROM DUAL UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, 4 AS parent_id, 0.049845869071429676 AS "Score" FROM DUAL UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, 7 AS parent_id, -0.08484733668374422 AS "Score" FROM DUAL UNION ALL SELECT 16 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS depth, 8 AS parent_id, 0.06588079907230135 AS "Score" FROM DUAL UNION ALL SELECT 30 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS depth, 15 AS parent_id, -0.08439677650212797 AS "Score" FROM DUAL UNION ALL SELECT 35 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS depth, 17 AS parent_id, 0.08889583390476828 AS "Score" FROM DUAL UNION ALL SELECT 62 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS depth, 31 AS parent_id, -0.0844015531676878 AS "Score" FROM DUAL UNION ALL SELECT 69 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 6 AS depth, 34 AS parent_id, 0.08472839975776815 AS "Score" FROM DUAL UNION ALL SELECT 126 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 6 AS depth, 63 AS parent_id, -0.08440151080154196 AS "Score" FROM DUAL UNION ALL SELECT 127 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 6 AS depth, 63 AS parent_id, -0.0844015024275224 AS "Score" FROM DUAL UNION ALL SELECT 136 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 7 AS depth, 68 AS parent_id, 0.08465103202763423 AS "Score" FROM DUAL UNION ALL SELECT 275 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 8 AS depth, 137 AS parent_id, 0.08453969934623895 AS "Score" FROM DUAL UNION ALL SELECT 549 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 9 AS depth, 274 AS parent_id, 0.08436949104393338 AS "Score" FROM DUAL UNION ALL SELECT 1097 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 10 AS depth, 548 AS parent_id, 0.0843982281034584 AS "Score" FROM DUAL UNION ALL SELECT 2192 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 11 AS depth, 1096 AS parent_id, 0.08440058320352335 AS "Score" FROM DUAL UNION ALL SELECT 4387 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 12 AS depth, 2193 AS parent_id, 0.08440153148264701 AS "Score" FROM DUAL UNION ALL SELECT 8772 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 13 AS depth, 4386 AS parent_id, 0.08440150238741304 AS "Score" FROM DUAL UNION ALL SELECT 8773 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 13 AS depth, 4386 AS parent_id, 0.08440150238823169 AS "Score" FROM DUAL) "Values"), 
"DT_Output_4" AS 
(SELECT "DT_node_lookup_4"."KEY" AS "KEY", "DT_node_lookup_4".node_id_2 AS node_id_2, "DT_node_data_4".node_id AS node_id, "DT_node_data_4".feature AS feature, "DT_node_data_4".threshold AS threshold, "DT_node_data_4".depth AS depth, "DT_node_data_4".parent_id AS parent_id, "DT_node_data_4"."Score" AS "Score" 
FROM "DT_node_lookup_4" LEFT OUTER JOIN "DT_node_data_4" ON "DT_node_lookup_4".node_id_2 = "DT_node_data_4".node_id), 
"LGBM_Tree_0_4" AS 
(SELECT "DT_Output_4"."KEY" AS "KEY", "DT_Output_4"."Score" AS "Score_0" 
FROM "DT_Output_4"), 
"DT_node_lookup_5" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_27" <= 0.14545000000000002) THEN CASE WHEN ("ADS"."Feature_22" <= 112.8) THEN CASE WHEN ("ADS"."Feature_13" <= 32.85) THEN CASE WHEN ("ADS"."Feature_27" <= 0.11325) THEN CASE WHEN ("ADS"."Feature_28" <= 0.22139999999999999) THEN 32 ELSE CASE WHEN ("ADS"."Feature_19" <= 0.001628) THEN 66 ELSE CASE WHEN ("ADS"."Feature_1" <= 21.58) THEN CASE WHEN ("ADS"."Feature_26" <= 0.23004999999999998) THEN CASE WHEN ("ADS"."Feature_20" <= 14.815000000000001) THEN CASE WHEN ("ADS"."Feature_19" <= 0.0021374999999999996) THEN 1072 ELSE CASE WHEN ("ADS"."Feature_24" <= 0.14265) THEN CASE WHEN ("ADS"."Feature_21" <= 24.595) THEN CASE WHEN ("ADS"."Feature_3" <= 343.65) THEN 8584 ELSE 8585 END ELSE 4293 END ELSE 2147 END END ELSE 537 END ELSE 269 END ELSE 135 END END END ELSE 17 END ELSE 9 END ELSE 5 END ELSE CASE WHEN ("ADS"."Feature_22" <= 112.8) THEN 6 ELSE CASE WHEN ("ADS"."Feature_13" <= 40.855) THEN 14 ELSE CASE WHEN ("ADS"."Feature_0" <= 16.4) THEN 30 ELSE CASE WHEN ("ADS"."Feature_13" <= 69.875) THEN 62 ELSE CASE WHEN ("ADS"."Feature_2" <= 130.45) THEN 126 ELSE 127 END END END END END END AS node_id_2 
FROM "BreastCancer" "ADS"), 
"DT_node_data_5" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Score" AS "Score" 
FROM (SELECT 5 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, 2 AS parent_id, -0.01922714099830725 AS "Score" FROM DUAL UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, 3 AS parent_id, -0.03286091876382174 AS "Score" FROM DUAL UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, 4 AS parent_id, 0.051787190253267605 AS "Score" FROM DUAL UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, 7 AS parent_id, -0.0821007705538509 AS "Score" FROM DUAL UNION ALL SELECT 17 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS depth, 8 AS parent_id, 0.08450179593943613 AS "Score" FROM DUAL UNION ALL SELECT 30 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS depth, 15 AS parent_id, -0.0816001296347823 AS "Score" FROM DUAL UNION ALL SELECT 32 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS depth, 16 AS parent_id, 0.0820795697996469 AS "Score" FROM DUAL UNION ALL SELECT 62 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS depth, 31 AS parent_id, -0.08161718326630642 AS "Score" FROM DUAL UNION ALL SELECT 66 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 6 AS depth, 33 AS parent_id, 0.08188277077976341 AS "Score" FROM DUAL UNION ALL SELECT 126 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 6 AS depth, 63 AS parent_id, -0.0816171252556378 AS "Score" FROM DUAL UNION ALL SELECT 127 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 6 AS depth, 63 AS parent_id, -0.08161712202378635 AS "Score" FROM DUAL UNION ALL SELECT 135 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 7 AS depth, 67 AS parent_id, 0.08178841421502347 AS "Score" FROM DUAL UNION ALL SELECT 269 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 8 AS depth, 134 AS parent_id, 0.08170856666194067 AS "Score" FROM DUAL UNION ALL SELECT 537 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 9 AS depth, 268 AS parent_id, 0.08159295989980735 AS "Score" FROM DUAL UNION ALL SELECT 1072 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 10 AS depth, 536 AS parent_id, 0.08161530807890327 AS "Score" FROM DUAL UNION ALL SELECT 2147 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 11 AS depth, 1073 AS parent_id, 0.08161673749352966 AS "Score" FROM DUAL UNION ALL SELECT 4293 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 12 AS depth, 2146 AS parent_id, 0.08161719509082739 AS "Score" FROM DUAL UNION ALL SELECT 8584 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 13 AS depth, 4292 AS parent_id, 0.08161712727239309 AS "Score" FROM DUAL UNION ALL SELECT 8585 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 13 AS depth, 4292 AS parent_id, 0.08161712181448641 AS "Score" FROM DUAL) "Values"), 
"DT_Output_5" AS 
(SELECT "DT_node_lookup_5"."KEY" AS "KEY", "DT_node_lookup_5".node_id_2 AS node_id_2, "DT_node_data_5".node_id AS node_id, "DT_node_data_5".feature AS feature, "DT_node_data_5".threshold AS threshold, "DT_node_data_5".depth AS depth, "DT_node_data_5".parent_id AS parent_id, "DT_node_data_5"."Score" AS "Score" 
FROM "DT_node_lookup_5" LEFT OUTER JOIN "DT_node_data_5" ON "DT_node_lookup_5".node_id_2 = "DT_node_data_5".node_id), 
"LGBM_Tree_0_5" AS 
(SELECT "DT_Output_5"."KEY" AS "KEY", "DT_Output_5"."Score" AS "Score_0" 
FROM "DT_Output_5"), 
"DT_node_lookup_6" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_27" <= 0.14545000000000002) THEN CASE WHEN ("ADS"."Feature_2" <= 99.155) THEN CASE WHEN ("ADS"."Feature_13" <= 32.85) THEN CASE WHEN ("ADS"."Feature_28" <= 0.32955) THEN CASE WHEN ("ADS"."Feature_22" <= 101.80000000000001) THEN CASE WHEN ("ADS"."Feature_7" <= 0.037335) THEN CASE WHEN ("ADS"."Feature_28" <= 0.2234) THEN 128 ELSE CASE WHEN ("ADS"."Feature_21" <= 28.895000000000003) THEN CASE WHEN ("ADS"."Feature_19" <= 0.0018075) THEN 516 ELSE CASE WHEN ("ADS"."Feature_6" <= 0.05269) THEN CASE WHEN ("ADS"."Feature_17" <= 0.0095635) THEN CASE WHEN ("ADS"."Feature_0" <= 12.625) THEN CASE WHEN ("ADS"."Feature_14" <= 0.006531) THEN 8272 ELSE 8273 END ELSE 4137 END ELSE 2069 END ELSE 1035 END END ELSE 259 END END ELSE 65 END ELSE 33 END ELSE 17 END ELSE 9 END ELSE 5 END ELSE CASE WHEN ("ADS"."Feature_23" <= 830.55) THEN 6 ELSE CASE WHEN ("ADS"."Feature_3" <= 729.75) THEN 14 ELSE CASE WHEN ("ADS"."Feature_13" <= 53.405) THEN 30 ELSE CASE WHEN ("ADS"."Feature_2" <= 121.1) THEN 62 ELSE CASE WHEN ("ADS"."Feature_17" <= 0.018125) THEN 126 ELSE 127 END END END END END END AS node_id_2 
FROM "BreastCancer" "ADS"), 
"DT_node_data_6" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Score" AS "Score" 
FROM (SELECT 5 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, 2 AS parent_id, -0.027376749613626267 AS "Score" FROM DUAL UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, 3 AS parent_id, -0.03115938624310451 AS "Score" FROM DUAL UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, 4 AS parent_id, 0.04957711506058346 AS "Score" FROM DUAL UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, 7 AS parent_id, -0.079701410500042 AS "Score" FROM DUAL UNION ALL SELECT 17 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS depth, 8 AS parent_id, 0.06997502546445275 AS "Score" FROM DUAL UNION ALL SELECT 30 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS depth, 15 AS parent_id, -0.07912955007227838 AS "Score" FROM DUAL UNION ALL SELECT 33 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS depth, 16 AS parent_id, 0.08198718731999971 AS "Score" FROM DUAL UNION ALL SELECT 62 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS depth, 31 AS parent_id, -0.07913934417172501 AS "Score" FROM DUAL UNION ALL SELECT 65 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 6 AS depth, 32 AS parent_id, 0.07960788940906505 AS "Score" FROM DUAL UNION ALL SELECT 126 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 6 AS depth, 63 AS parent_id, -0.07913912237635887 AS "Score" FROM DUAL UNION ALL SELECT 127 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 6 AS depth, 63 AS parent_id, -0.0791391297736674 AS "Score" FROM DUAL UNION ALL SELECT 128 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 7 AS depth, 64 AS parent_id, 0.07942907019601997 AS "Score" FROM DUAL UNION ALL SELECT 259 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 8 AS depth, 129 AS parent_id, 0.07934957814555511 AS "Score" FROM DUAL UNION ALL SELECT 516 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 9 AS depth, 258 AS parent_id, 0.079259220603431 AS "Score" FROM DUAL UNION ALL SELECT 1035 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 10 AS depth, 517 AS parent_id, 0.07919442385552194 AS "Score" FROM DUAL UNION ALL SELECT 2069 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 11 AS depth, 1034 AS parent_id, 0.07913437382859 AS "Score" FROM DUAL UNION ALL SELECT 4137 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 12 AS depth, 2068 AS parent_id, 0.07913991321276194 AS "Score" FROM DUAL UNION ALL SELECT 8272 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 13 AS depth, 4136 AS parent_id, 0.07913851200458205 AS "Score" FROM DUAL UNION ALL SELECT 8273 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 13 AS depth, 4136 AS parent_id, 0.07913915415092236 AS "Score" FROM DUAL) "Values"), 
"DT_Output_6" AS 
(SELECT "DT_node_lookup_6"."KEY" AS "KEY", "DT_node_lookup_6".node_id_2 AS node_id_2, "DT_node_data_6".node_id AS node_id, "DT_node_data_6".feature AS feature, "DT_node_data_6".threshold AS threshold, "DT_node_data_6".depth AS depth, "DT_node_data_6".parent_id AS parent_id, "DT_node_data_6"."Score" AS "Score" 
FROM "DT_node_lookup_6" LEFT OUTER JOIN "DT_node_data_6" ON "DT_node_lookup_6".node_id_2 = "DT_node_data_6".node_id), 
"LGBM_Tree_0_6" AS 
(SELECT "DT_Output_6"."KEY" AS "KEY", "DT_Output_6"."Score" AS "Score_0" 
FROM "DT_Output_6"), 
"DT_node_lookup_7" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_27" <= 0.14545000000000002) THEN CASE WHEN ("ADS"."Feature_13" <= 39.965) THEN CASE WHEN ("ADS"."Feature_22" <= 107.19999999999999) THEN CASE WHEN ("ADS"."Feature_9" <= 0.055834999999999996) THEN 16 ELSE CASE WHEN ("ADS"."Feature_13" <= 29.735) THEN CASE WHEN ("ADS"."Feature_27" <= 0.10975) THEN CASE WHEN ("ADS"."Feature_28" <= 0.2234) THEN 136 ELSE CASE WHEN ("ADS"."Feature_28" <= 0.32189999999999996) THEN CASE WHEN ("ADS"."Feature_21" <= 28.240000000000002) THEN CASE WHEN ("ADS"."Feature_10" <= 0.18535000000000001) THEN 1096 ELSE CASE WHEN ("ADS"."Feature_18" <= 0.02423) THEN CASE WHEN ("ADS"."Feature_16" <= 0.016315) THEN 4388 ELSE 4389 END ELSE 2195 END END ELSE 549 END ELSE 275 END END ELSE 69 END ELSE 35 END END ELSE 9 END ELSE 5 END ELSE CASE WHEN ("ADS"."Feature_22" <= 112.8) THEN 6 ELSE CASE WHEN ("ADS"."Feature_13" <= 40.855) THEN 14 ELSE CASE WHEN ("ADS"."Feature_23" <= 1293.5) THEN 30 ELSE CASE WHEN ("ADS"."Feature_13" <= 69.875) THEN 62 ELSE CASE WHEN ("ADS"."Feature_4" <= 0.10830000000000001) THEN 126 ELSE 127 END END END END END END AS node_id_2 
FROM "BreastCancer" "ADS"), 
"DT_node_data_7" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Score" AS "Score" 
FROM (SELECT 5 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, 2 AS parent_id, -0.021516900627419767 AS "Score" FROM DUAL UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, 3 AS parent_id, -0.029703539390224118 AS "Score" FROM DUAL UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, 4 AS parent_id, 0.043474686932370284 AS "Score" FROM DUAL UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, 7 AS parent_id, -0.07745972538532013 AS "Score" FROM DUAL UNION ALL SELECT 16 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS depth, 8 AS parent_id, 0.0682589076687765 AS "Score" FROM DUAL UNION ALL SELECT 30 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS depth, 15 AS parent_id, -0.0769010939577731 AS "Score" FROM DUAL UNION ALL SELECT 35 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS depth, 17 AS parent_id, 0.08033356791440699 AS "Score" FROM DUAL UNION ALL SELECT 62 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS depth, 31 AS parent_id, -0.07692212428299194 AS "Score" FROM DUAL UNION ALL SELECT 69 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 6 AS depth, 34 AS parent_id, 0.07733381507348938 AS "Score" FROM DUAL UNION ALL SELECT 126 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 6 AS depth, 63 AS parent_id, -0.07692196635726888 AS "Score" FROM DUAL UNION ALL SELECT 127 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 6 AS depth, 63 AS parent_id, -0.0769219928684887 AS "Score" FROM DUAL UNION ALL SELECT 136 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 7 AS depth, 68 AS parent_id, 0.07721321763129932 AS "Score" FROM DUAL UNION ALL SELECT 275 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 8 AS depth, 137 AS parent_id, 0.0771424632910353 AS "Score" FROM DUAL UNION ALL SELECT 549 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 9 AS depth, 274 AS parent_id, 0.07703294121186816 AS "Score" FROM DUAL UNION ALL SELECT 1096 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 10 AS depth, 548 AS parent_id, 0.07698851540611082 AS "Score" FROM DUAL UNION ALL SELECT 2195 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 11 AS depth, 1097 AS parent_id, 0.07694637604982468 AS "Score" FROM DUAL UNION ALL SELECT 4388 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 12 AS depth, 2194 AS parent_id, 0.0769024334999773 AS "Score" FROM DUAL UNION ALL SELECT 4389 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 12 AS depth, 2194 AS parent_id, 0.07692636321075857 AS "Score" FROM DUAL) "Values"), 
"DT_Output_7" AS 
(SELECT "DT_node_lookup_7"."KEY" AS "KEY", "DT_node_lookup_7".node_id_2 AS node_id_2, "DT_node_data_7".node_id AS node_id, "DT_node_data_7".feature AS feature, "DT_node_data_7".threshold AS threshold, "DT_node_data_7".depth AS depth, "DT_node_data_7".parent_id AS parent_id, "DT_node_data_7"."Score" AS "Score" 
FROM "DT_node_lookup_7" LEFT OUTER JOIN "DT_node_data_7" ON "DT_node_lookup_7".node_id_2 = "DT_node_data_7".node_id), 
"LGBM_Tree_0_7" AS 
(SELECT "DT_Output_7"."KEY" AS "KEY", "DT_Output_7"."Score" AS "Score_0" 
FROM "DT_Output_7"), 
"DT_node_lookup_8" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_22" <= 114.4) THEN CASE WHEN ("ADS"."Feature_27" <= 0.14545000000000002) THEN CASE WHEN ("ADS"."Feature_13" <= 32.85) THEN CASE WHEN ("ADS"."Feature_19" <= 0.001628) THEN 16 ELSE CASE WHEN ("ADS"."Feature_2" <= 91.3) THEN CASE WHEN ("ADS"."Feature_27" <= 0.10975) THEN CASE WHEN ("ADS"."Feature_28" <= 0.22265000000000001) THEN 136 ELSE CASE WHEN ("ADS"."Feature_28" <= 0.3204) THEN CASE WHEN ("ADS"."Feature_10" <= 0.25525) THEN CASE WHEN ("ADS"."Feature_4" <= 0.090755) THEN 1096 ELSE 1097 END ELSE CASE WHEN ("ADS"."Feature_11" <= 1.472) THEN 1098 ELSE 1099 END END ELSE 275 END END ELSE 69 END ELSE 35 END END ELSE 9 END ELSE 5 END ELSE CASE WHEN ("ADS"."Feature_20" <= 18.53) THEN 6 ELSE CASE WHEN ("ADS"."Feature_27" <= 0.1538) THEN 14 ELSE CASE WHEN ("ADS"."Feature_13" <= 55.935) THEN 30 ELSE CASE WHEN ("ADS"."Feature_21" <= 26.435000000000002) THEN 62 ELSE CASE WHEN ("ADS"."Feature_0" <= 19.57) THEN 126 ELSE 127 END END END END END END AS node_id_2 
FROM "BreastCancer" "ADS"), 
"DT_node_data_8" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Score" AS "Score" 
FROM (SELECT 5 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, 2 AS parent_id, -0.0336880151046248 AS "Score" FROM DUAL UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, 3 AS parent_id, -0.04315203772243979 AS "Score" FROM DUAL UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, 4 AS parent_id, 0.04303098565257661 AS "Score" FROM DUAL UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, 7 AS parent_id, -0.08368301930092503 AS "Score" FROM DUAL UNION ALL SELECT 16 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS depth, 8 AS parent_id, 0.06591310969230744 AS "Score" FROM DUAL UNION ALL SELECT 30 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS depth, 15 AS parent_id, -0.07491776981881774 AS "Score" FROM DUAL UNION ALL SELECT 35 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS depth, 17 AS parent_id, 0.08104282277549789 AS "Score" FROM DUAL UNION ALL SELECT 62 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS depth, 31 AS parent_id, -0.07492742793294802 AS "Score" FROM DUAL UNION ALL SELECT 69 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 6 AS depth, 34 AS parent_id, 0.0753607354878754 AS "Score" FROM DUAL UNION ALL SELECT 126 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 6 AS depth, 63 AS parent_id, -0.07492889007289477 AS "Score" FROM DUAL UNION ALL SELECT 127 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 6 AS depth, 63 AS parent_id, -0.07492871696436758 AS "Score" FROM DUAL UNION ALL SELECT 136 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 7 AS depth, 68 AS parent_id, 0.07523807714362639 AS "Score" FROM DUAL UNION ALL SELECT 275 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 8 AS depth, 137 AS parent_id, 0.07510337075540478 AS "Score" FROM DUAL UNION ALL SELECT 1096 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 10 AS depth, 548 AS parent_id, 0.07500581456271418 AS "Score" FROM DUAL UNION ALL SELECT 1097 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 10 AS depth, 548 AS parent_id, 0.074934442508808 AS "Score" FROM DUAL UNION ALL SELECT 1098 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 10 AS depth, 549 AS parent_id, 0.07491370185018909 AS "Score" FROM DUAL UNION ALL SELECT 1099 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 10 AS depth, 549 AS parent_id, 0.07494379304210934 AS "Score" FROM DUAL) "Values"), 
"DT_Output_8" AS 
(SELECT "DT_node_lookup_8"."KEY" AS "KEY", "DT_node_lookup_8".node_id_2 AS node_id_2, "DT_node_data_8".node_id AS node_id, "DT_node_data_8".feature AS feature, "DT_node_data_8".threshold AS threshold, "DT_node_data_8".depth AS depth, "DT_node_data_8".parent_id AS parent_id, "DT_node_data_8"."Score" AS "Score" 
FROM "DT_node_lookup_8" LEFT OUTER JOIN "DT_node_data_8" ON "DT_node_lookup_8".node_id_2 = "DT_node_data_8".node_id), 
"LGBM_Tree_0_8" AS 
(SELECT "DT_Output_8"."KEY" AS "KEY", "DT_Output_8"."Score" AS "Score_0" 
FROM "DT_Output_8"), 
"DT_node_lookup_9" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_27" <= 0.14545000000000002) THEN CASE WHEN ("ADS"."Feature_13" <= 35.185) THEN CASE WHEN ("ADS"."Feature_21" <= 31.630000000000003) THEN CASE WHEN ("ADS"."Feature_4" <= 0.07589499999999999) THEN 16 ELSE CASE WHEN ("ADS"."Feature_22" <= 103.80000000000001) THEN CASE WHEN ("ADS"."Feature_13" <= 28.310000000000002) THEN CASE WHEN ("ADS"."Feature_5" <= 0.11095) THEN CASE WHEN ("ADS"."Feature_19" <= 0.0018575) THEN 272 ELSE CASE WHEN ("ADS"."Feature_8" <= 0.1572) THEN 546 ELSE CASE WHEN ("ADS"."Feature_28" <= 0.29725) THEN CASE WHEN ("ADS"."Feature_10" <= 0.26555) THEN 2188 ELSE 2189 END ELSE 1095 END END END ELSE 137 END ELSE 69 END ELSE 35 END END ELSE 9 END ELSE 5 END ELSE CASE WHEN ("ADS"."Feature_20" <= 16.4) THEN 6 ELSE CASE WHEN ("ADS"."Feature_20" <= 18.775) THEN 14 ELSE CASE WHEN ("ADS"."Feature_27" <= 0.17025) THEN 30 ELSE CASE WHEN ("ADS"."Feature_13" <= 67.50999999999999) THEN 62 ELSE CASE WHEN ("ADS"."Feature_24" <= 0.14875) THEN 126 ELSE 127 END END END END END END AS node_id_2 
FROM "BreastCancer" "ADS"), 
"DT_node_data_9" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Score" AS "Score" 
FROM (SELECT 5 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, 2 AS parent_id, -0.008320177906528111 AS "Score" FROM DUAL UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, 3 AS parent_id, -0.02659440259703402 AS "Score" FROM DUAL UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, 4 AS parent_id, 0.050751474147216015 AS "Score" FROM DUAL UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, 7 AS parent_id, -0.07437451089288634 AS "Score" FROM DUAL UNION ALL SELECT 16 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS depth, 8 AS parent_id, 0.06533747136152376 AS "Score" FROM DUAL UNION ALL SELECT 30 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS depth, 15 AS parent_id, -0.07304245154754761 AS "Score" FROM DUAL UNION ALL SELECT 35 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS depth, 17 AS parent_id, 0.08286180457041742 AS "Score" FROM DUAL UNION ALL SELECT 62 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS depth, 31 AS parent_id, -0.07312320420926142 AS "Score" FROM DUAL UNION ALL SELECT 69 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 6 AS depth, 34 AS parent_id, 0.07546232064220676 AS "Score" FROM DUAL UNION ALL SELECT 126 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 6 AS depth, 63 AS parent_id, -0.07312911437702294 AS "Score" FROM DUAL UNION ALL SELECT 127 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 6 AS depth, 63 AS parent_id, -0.07312917980111977 AS "Score" FROM DUAL UNION ALL SELECT 137 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 7 AS depth, 68 AS parent_id, 0.07340506263620368 AS "Score" FROM DUAL UNION ALL SELECT 272 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 8 AS depth, 136 AS parent_id, 0.07336249876250432 AS "Score" FROM DUAL UNION ALL SELECT 546 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 9 AS depth, 273 AS parent_id, 0.07322487011592836 AS "Score" FROM DUAL UNION ALL SELECT 1095 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 10 AS depth, 547 AS parent_id, 0.0732080204416775 AS "Score" FROM DUAL UNION ALL SELECT 2188 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 11 AS depth, 1094 AS parent_id, 0.07312914606538448 AS "Score" FROM DUAL UNION ALL SELECT 2189 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 11 AS depth, 1094 AS parent_id, 0.07308036691938034 AS "Score" FROM DUAL) "Values"), 
"DT_Output_9" AS 
(SELECT "DT_node_lookup_9"."KEY" AS "KEY", "DT_node_lookup_9".node_id_2 AS node_id_2, "DT_node_data_9".node_id AS node_id, "DT_node_data_9".feature AS feature, "DT_node_data_9".threshold AS threshold, "DT_node_data_9".depth AS depth, "DT_node_data_9".parent_id AS parent_id, "DT_node_data_9"."Score" AS "Score" 
FROM "DT_node_lookup_9" LEFT OUTER JOIN "DT_node_data_9" ON "DT_node_lookup_9".node_id_2 = "DT_node_data_9".node_id), 
"LGBM_Tree_0_9" AS 
(SELECT "DT_Output_9"."KEY" AS "KEY", "DT_Output_9"."Score" AS "Score_0" 
FROM "DT_Output_9"), 
"Score_Union_CTE" AS 
(SELECT ensemble_score_union."KEY" AS "KEY", ensemble_score_union."Score_0" AS "Score_0" 
FROM (SELECT "LGBM_Tree_0_0"."KEY" AS "KEY", "LGBM_Tree_0_0"."Score_0" AS "Score_0" 
FROM "LGBM_Tree_0_0" UNION ALL SELECT "LGBM_Tree_0_1"."KEY" AS "KEY", "LGBM_Tree_0_1"."Score_0" AS "Score_0" 
FROM "LGBM_Tree_0_1" UNION ALL SELECT "LGBM_Tree_0_2"."KEY" AS "KEY", "LGBM_Tree_0_2"."Score_0" AS "Score_0" 
FROM "LGBM_Tree_0_2" UNION ALL SELECT "LGBM_Tree_0_3"."KEY" AS "KEY", "LGBM_Tree_0_3"."Score_0" AS "Score_0" 
FROM "LGBM_Tree_0_3" UNION ALL SELECT "LGBM_Tree_0_4"."KEY" AS "KEY", "LGBM_Tree_0_4"."Score_0" AS "Score_0" 
FROM "LGBM_Tree_0_4" UNION ALL SELECT "LGBM_Tree_0_5"."KEY" AS "KEY", "LGBM_Tree_0_5"."Score_0" AS "Score_0" 
FROM "LGBM_Tree_0_5" UNION ALL SELECT "LGBM_Tree_0_6"."KEY" AS "KEY", "LGBM_Tree_0_6"."Score_0" AS "Score_0" 
FROM "LGBM_Tree_0_6" UNION ALL SELECT "LGBM_Tree_0_7"."KEY" AS "KEY", "LGBM_Tree_0_7"."Score_0" AS "Score_0" 
FROM "LGBM_Tree_0_7" UNION ALL SELECT "LGBM_Tree_0_8"."KEY" AS "KEY", "LGBM_Tree_0_8"."Score_0" AS "Score_0" 
FROM "LGBM_Tree_0_8" UNION ALL SELECT "LGBM_Tree_0_9"."KEY" AS "KEY", "LGBM_Tree_0_9"."Score_0" AS "Score_0" 
FROM "LGBM_Tree_0_9") ensemble_score_union), 
"LGBM_Sum_Scores" AS 
(SELECT "T"."KEY" AS "KEY", "T"."Score_0" AS "Score_0" 
FROM (SELECT "Score_Union_CTE"."KEY" AS "KEY", sum("Score_Union_CTE"."Score_0") AS "Score_0" 
FROM "Score_Union_CTE" GROUP BY "Score_Union_CTE"."KEY") "T"), 
orig_cte AS 
(SELECT "LGBM_Sum_Scores"."KEY" AS "KEY", "LGBM_Sum_Scores"."Score_0" AS "Score_0", CAST(NULL AS FLOAT) AS "Score_1", 1.0 - 1.0 / (1.0 + exp(CASE WHEN (CASE WHEN (-"LGBM_Sum_Scores"."Score_0" <= -100.0) THEN -100.0 ELSE -"LGBM_Sum_Scores"."Score_0" END >= 100.0) THEN 100.0 ELSE CASE WHEN (-"LGBM_Sum_Scores"."Score_0" <= -100.0) THEN -100.0 ELSE -"LGBM_Sum_Scores"."Score_0" END END)) AS "Proba_0", 1.0 / (1.0 + exp(CASE WHEN (CASE WHEN (-"LGBM_Sum_Scores"."Score_0" <= -100.0) THEN -100.0 ELSE -"LGBM_Sum_Scores"."Score_0" END >= 100.0) THEN 100.0 ELSE CASE WHEN (-"LGBM_Sum_Scores"."Score_0" <= -100.0) THEN -100.0 ELSE -"LGBM_Sum_Scores"."Score_0" END END)) AS "Proba_1", CAST(NULL AS FLOAT) AS "LogProba_0", CAST(NULL AS FLOAT) AS "LogProba_1", CAST(NULL AS INTEGER) AS "Decision", CAST(NULL AS FLOAT) AS "DecisionProba" 
FROM "LGBM_Sum_Scores"), 
score_class_union AS 
(SELECT scu."KEY_u" AS "KEY_u", scu.class AS class, scu."LogProba" AS "LogProba", scu."Proba" AS "Proba", scu."Score" AS "Score" 
FROM (SELECT orig_cte."KEY" AS "KEY_u", 0 AS class, orig_cte."LogProba_0" AS "LogProba", orig_cte."Proba_0" AS "Proba", orig_cte."Score_0" AS "Score" 
FROM orig_cte UNION ALL SELECT orig_cte."KEY" AS "KEY_u", 1 AS class, orig_cte."LogProba_1" AS "LogProba", orig_cte."Proba_1" AS "Proba", orig_cte."Score_1" AS "Score" 
FROM orig_cte) scu), 
score_max AS 
(SELECT orig_cte."KEY" AS "KEY", orig_cte."Score_0" AS "Score_0", orig_cte."Score_1" AS "Score_1", orig_cte."Proba_0" AS "Proba_0", orig_cte."Proba_1" AS "Proba_1", orig_cte."LogProba_0" AS "LogProba_0", orig_cte."LogProba_1" AS "LogProba_1", orig_cte."Decision" AS "Decision", orig_cte."DecisionProba" AS "DecisionProba", max_select."KEY_m" AS "KEY_m", max_select."max_Proba" AS "max_Proba" 
FROM orig_cte LEFT OUTER JOIN (SELECT score_class_union."KEY_u" AS "KEY_m", max(score_class_union."Proba") AS "max_Proba" 
FROM score_class_union GROUP BY score_class_union."KEY_u") max_select ON orig_cte."KEY" = max_select."KEY_m"), 
union_with_max AS 
(SELECT score_class_union."KEY_u" AS "KEY_u", score_class_union.class AS class, score_class_union."LogProba" AS "LogProba", score_class_union."Proba" AS "Proba", score_class_union."Score" AS "Score", score_max."KEY" AS "KEY", score_max."Score_0" AS "Score_0", score_max."Score_1" AS "Score_1", score_max."Proba_0" AS "Proba_0", score_max."Proba_1" AS "Proba_1", score_max."LogProba_0" AS "LogProba_0", score_max."LogProba_1" AS "LogProba_1", score_max."Decision" AS "Decision", score_max."DecisionProba" AS "DecisionProba", score_max."KEY_m" AS "KEY_m", score_max."max_Proba" AS "max_Proba" 
FROM score_class_union LEFT OUTER JOIN score_max ON score_class_union."KEY_u" = score_max."KEY"), 
arg_max_cte AS 
(SELECT score_max."KEY" AS "KEY", score_max."Score_0" AS "Score_0", score_max."Score_1" AS "Score_1", score_max."Proba_0" AS "Proba_0", score_max."Proba_1" AS "Proba_1", score_max."LogProba_0" AS "LogProba_0", score_max."LogProba_1" AS "LogProba_1", score_max."Decision" AS "Decision", score_max."DecisionProba" AS "DecisionProba", score_max."KEY_m" AS "KEY_m", score_max."max_Proba" AS "max_Proba", "arg_max_t_Proba"."KEY_Proba" AS "KEY_Proba", "arg_max_t_Proba"."arg_max_Proba" AS "arg_max_Proba" 
FROM score_max LEFT OUTER JOIN (SELECT union_with_max."KEY" AS "KEY_Proba", min(union_with_max.class) AS "arg_max_Proba" 
FROM union_with_max 
WHERE union_with_max."max_Proba" <= union_with_max."Proba" GROUP BY union_with_max."KEY") "arg_max_t_Proba" ON score_max."KEY" = "arg_max_t_Proba"."KEY_Proba")
 SELECT arg_max_cte."KEY" AS "KEY", CAST(NULL AS FLOAT) AS "Score_0", CAST(NULL AS FLOAT) AS "Score_1", arg_max_cte."Proba_0" AS "Proba_0", arg_max_cte."Proba_1" AS "Proba_1", CASE WHEN (arg_max_cte."Proba_0" IS NULL OR arg_max_cte."Proba_0" > 0.0) THEN ln(arg_max_cte."Proba_0") ELSE -BINARY_FLOAT_INFINITY END AS "LogProba_0", CASE WHEN (arg_max_cte."Proba_1" IS NULL OR arg_max_cte."Proba_1" > 0.0) THEN ln(arg_max_cte."Proba_1") ELSE -BINARY_FLOAT_INFINITY END AS "LogProba_1", arg_max_cte."arg_max_Proba" AS "Decision", arg_max_cte."max_Proba" AS "DecisionProba" 
FROM arg_max_cte