-- This SQL code was generated by sklearn2sql (development version).
-- Copyright 2017

WITH `Score_Union_CTE_0` AS 
(WITH `DT_node_lookup` AS 
(SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_2` <= 3.15) THEN CASE WHEN (`ADS`.`Feature_2` <= 1.55) THEN CASE WHEN (`ADS`.`Feature_0` <= 4.95) THEN 8 ELSE 9 END ELSE 5 END ELSE CASE WHEN (`ADS`.`Feature_1` <= 2.55) THEN 6 ELSE 7 END END AS node_id_2 
FROM iris AS `ADS`), 
`DT_node_data` AS 
(SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 5 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, 2 AS parent_id, 0.06562500146683305 AS `Score` UNION ALL SELECT 6 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, 3 AS parent_id, -0.037500000838190314 AS `Score` UNION ALL SELECT 7 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, 3 AS parent_id, -0.037500000838190314 AS `Score` UNION ALL SELECT 8 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 4 AS parent_id, 0.07500000167638059 AS `Score` UNION ALL SELECT 9 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 4 AS parent_id, 0.07500000167638061 AS `Score`) AS `Values`), 
`DT_Output` AS 
(SELECT `DT_node_lookup`.`KEY` AS `KEY`, `DT_node_lookup`.node_id_2 AS node_id_2, `DT_node_data`.node_id AS node_id, `DT_node_data`.feature AS feature, `DT_node_data`.threshold AS threshold, `DT_node_data`.depth AS depth, `DT_node_data`.parent_id AS parent_id, `DT_node_data`.`Score` AS `Score` 
FROM `DT_node_lookup` LEFT OUTER JOIN `DT_node_data` ON `DT_node_lookup`.node_id_2 = `DT_node_data`.node_id), 
`LGBM_Tree_0_0` AS 
(SELECT `DT_Output`.`KEY` AS `KEY`, `DT_Output`.`Score` AS `Score_0`, 0.0 AS `Score_1`, 0.0 AS `Score_2` 
FROM `DT_Output`), 
`DT_node_lookup_1` AS 
(SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_2` <= 5.05) THEN CASE WHEN (`ADS`.`Feature_2` <= 3.15) THEN CASE WHEN (`ADS`.`Feature_2` <= 1.55) THEN CASE WHEN (`ADS`.`Feature_0` <= 4.95) THEN 16 ELSE 17 END ELSE 9 END ELSE CASE WHEN (`ADS`.`Feature_2` <= 4.75) THEN CASE WHEN (`ADS`.`Feature_2` <= 4.45) THEN 20 ELSE 21 END ELSE 11 END END ELSE 3 END AS node_id_2 
FROM iris AS `ADS`), 
`DT_node_data_1` AS 
(SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, 1 AS parent_id, -0.037500000838190314 AS `Score` UNION ALL SELECT 9 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 4 AS parent_id, -0.028125000628642732 AS `Score` UNION ALL SELECT 11 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 5 AS parent_id, 0.009375000209547579 AS `Score` UNION ALL SELECT 16 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 4 AS depth, 8 AS parent_id, -0.037500000838190294 AS `Score` UNION ALL SELECT 17 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 4 AS depth, 8 AS parent_id, -0.03750000083819031 AS `Score` UNION ALL SELECT 20 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 4 AS depth, 10 AS parent_id, 0.0750000016763806 AS `Score` UNION ALL SELECT 21 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 4 AS depth, 10 AS parent_id, 0.06634615532910594 AS `Score`) AS `Values`), 
`DT_Output_1` AS 
(SELECT `DT_node_lookup_1`.`KEY` AS `KEY`, `DT_node_lookup_1`.node_id_2 AS node_id_2, `DT_node_data_1`.node_id AS node_id, `DT_node_data_1`.feature AS feature, `DT_node_data_1`.threshold AS threshold, `DT_node_data_1`.depth AS depth, `DT_node_data_1`.parent_id AS parent_id, `DT_node_data_1`.`Score` AS `Score` 
FROM `DT_node_lookup_1` LEFT OUTER JOIN `DT_node_data_1` ON `DT_node_lookup_1`.node_id_2 = `DT_node_data_1`.node_id), 
`LGBM_Tree_1_0` AS 
(SELECT `DT_Output_1`.`KEY` AS `KEY`, 0.0 AS `Score_0`, `DT_Output_1`.`Score` AS `Score_1`, 0.0 AS `Score_2` 
FROM `DT_Output_1`), 
`DT_node_lookup_2` AS 
(SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_2` <= 4.85) THEN CASE WHEN (`ADS`.`Feature_3` <= 1.45) THEN 4 ELSE 5 END ELSE CASE WHEN (`ADS`.`Feature_2` <= 5.15) THEN 6 ELSE 7 END END AS node_id_2 
FROM iris AS `ADS`), 
`DT_node_data_2` AS 
(SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, 2 AS parent_id, -0.037500000838190314 AS `Score` UNION ALL SELECT 5 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, 2 AS parent_id, -0.018750000419095157 AS `Score` UNION ALL SELECT 6 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, 3 AS parent_id, 0.052500001173466405 AS `Score` UNION ALL SELECT 7 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, 3 AS parent_id, 0.07500000167638063 AS `Score`) AS `Values`), 
`DT_Output_2` AS 
(SELECT `DT_node_lookup_2`.`KEY` AS `KEY`, `DT_node_lookup_2`.node_id_2 AS node_id_2, `DT_node_data_2`.node_id AS node_id, `DT_node_data_2`.feature AS feature, `DT_node_data_2`.threshold AS threshold, `DT_node_data_2`.depth AS depth, `DT_node_data_2`.parent_id AS parent_id, `DT_node_data_2`.`Score` AS `Score` 
FROM `DT_node_lookup_2` LEFT OUTER JOIN `DT_node_data_2` ON `DT_node_lookup_2`.node_id_2 = `DT_node_data_2`.node_id), 
`LGBM_Tree_2_0` AS 
(SELECT `DT_Output_2`.`KEY` AS `KEY`, 0.0 AS `Score_0`, 0.0 AS `Score_1`, `DT_Output_2`.`Score` AS `Score_2` 
FROM `DT_Output_2`), 
`DT_node_lookup_3` AS 
(SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_2` <= 3.15) THEN CASE WHEN (`ADS`.`Feature_2` <= 1.55) THEN CASE WHEN (`ADS`.`Feature_0` <= 4.95) THEN 8 ELSE 9 END ELSE 5 END ELSE CASE WHEN (`ADS`.`Feature_1` <= 2.55) THEN 6 ELSE CASE WHEN (`ADS`.`Feature_2` <= 4.6) THEN 14 ELSE CASE WHEN (`ADS`.`Feature_2` <= 5.15) THEN 30 ELSE 31 END END END END AS node_id_2 
FROM iris AS `ADS`), 
`DT_node_data_3` AS 
(SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 5 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, 2 AS parent_id, 0.061220947351419114 AS `Score` UNION ALL SELECT 6 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, 3 AS parent_id, -0.03675947896867884 AS `Score` UNION ALL SELECT 8 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 4 AS parent_id, 0.0696798702604222 AS `Score` UNION ALL SELECT 9 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 4 AS parent_id, 0.06967987026042222 AS `Score` UNION ALL SELECT 14 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 7 AS parent_id, -0.036781451062137184 AS `Score` UNION ALL SELECT 30 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 4 AS depth, 15 AS parent_id, -0.036865169883747016 AS `Score` UNION ALL SELECT 31 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 4 AS depth, 15 AS parent_id, -0.036797618562227505 AS `Score`) AS `Values`), 
`DT_Output_3` AS 
(SELECT `DT_node_lookup_3`.`KEY` AS `KEY`, `DT_node_lookup_3`.node_id_2 AS node_id_2, `DT_node_data_3`.node_id AS node_id, `DT_node_data_3`.feature AS feature, `DT_node_data_3`.threshold AS threshold, `DT_node_data_3`.depth AS depth, `DT_node_data_3`.parent_id AS parent_id, `DT_node_data_3`.`Score` AS `Score` 
FROM `DT_node_lookup_3` LEFT OUTER JOIN `DT_node_data_3` ON `DT_node_lookup_3`.node_id_2 = `DT_node_data_3`.node_id), 
`LGBM_Tree_0_1` AS 
(SELECT `DT_Output_3`.`KEY` AS `KEY`, `DT_Output_3`.`Score` AS `Score_0`, 0.0 AS `Score_1`, 0.0 AS `Score_2` 
FROM `DT_Output_3`), 
`DT_node_lookup_4` AS 
(SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_2` <= 1.7999999999999998) THEN CASE WHEN (`ADS`.`Feature_2` <= 1.45) THEN 4 ELSE 5 END ELSE CASE WHEN (`ADS`.`Feature_2` <= 4.85) THEN CASE WHEN (`ADS`.`Feature_0` <= 5.55) THEN 12 ELSE CASE WHEN (`ADS`.`Feature_1` <= 2.95) THEN 26 ELSE 27 END END ELSE CASE WHEN (`ADS`.`Feature_3` <= 1.85) THEN 14 ELSE CASE WHEN (`ADS`.`Feature_2` <= 5.55) THEN 30 ELSE 31 END END END END AS node_id_2 
FROM iris AS `ADS`), 
`DT_node_data_4` AS 
(SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, 2 AS parent_id, -0.036797618562227505 AS `Score` UNION ALL SELECT 5 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, 2 AS parent_id, -0.03687840554140479 AS `Score` UNION ALL SELECT 12 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 6 AS parent_id, 0.04780512168511966 AS `Score` UNION ALL SELECT 14 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 7 AS parent_id, -0.014349430020637145 AS `Score` UNION ALL SELECT 26 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 4 AS depth, 13 AS parent_id, 0.07006450237580834 AS `Score` UNION ALL SELECT 27 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 4 AS depth, 13 AS parent_id, 0.0615456597595325 AS `Score` UNION ALL SELECT 30 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 4 AS depth, 15 AS parent_id, -0.03699272663306963 AS `Score` UNION ALL SELECT 31 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 4 AS depth, 15 AS parent_id, -0.0367976185622275 AS `Score`) AS `Values`), 
`DT_Output_4` AS 
(SELECT `DT_node_lookup_4`.`KEY` AS `KEY`, `DT_node_lookup_4`.node_id_2 AS node_id_2, `DT_node_data_4`.node_id AS node_id, `DT_node_data_4`.feature AS feature, `DT_node_data_4`.threshold AS threshold, `DT_node_data_4`.depth AS depth, `DT_node_data_4`.parent_id AS parent_id, `DT_node_data_4`.`Score` AS `Score` 
FROM `DT_node_lookup_4` LEFT OUTER JOIN `DT_node_data_4` ON `DT_node_lookup_4`.node_id_2 = `DT_node_data_4`.node_id), 
`LGBM_Tree_1_1` AS 
(SELECT `DT_Output_4`.`KEY` AS `KEY`, 0.0 AS `Score_0`, `DT_Output_4`.`Score` AS `Score_1`, 0.0 AS `Score_2` 
FROM `DT_Output_4`), 
`DT_node_lookup_5` AS 
(SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_2` <= 4.85) THEN CASE WHEN (`ADS`.`Feature_3` <= 1.45) THEN CASE WHEN (`ADS`.`Feature_2` <= 4.05) THEN CASE WHEN (`ADS`.`Feature_2` <= 1.55) THEN 16 ELSE CASE WHEN (`ADS`.`Feature_2` <= 3.15) THEN 34 ELSE 35 END END ELSE 9 END ELSE 5 END ELSE CASE WHEN (`ADS`.`Feature_3` <= 1.85) THEN 6 ELSE CASE WHEN (`ADS`.`Feature_2` <= 5.35) THEN 14 ELSE 15 END END END AS node_id_2 
FROM iris AS `ADS`), 
`DT_node_data_5` AS 
(SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 5 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, 2 AS parent_id, -0.018189754477848763 AS `Score` UNION ALL SELECT 6 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, 3 AS parent_id, 0.04878442694306881 AS `Score` UNION ALL SELECT 9 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 4 AS parent_id, -0.036846045689796984 AS `Score` UNION ALL SELECT 14 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 7 AS parent_id, 0.07062142939354275 AS `Score` UNION ALL SELECT 15 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 7 AS parent_id, 0.06967987026042223 AS `Score` UNION ALL SELECT 16 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 4 AS depth, 8 AS parent_id, -0.036797618562227484 AS `Score` UNION ALL SELECT 34 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 5 AS depth, 17 AS parent_id, -0.03680331562961075 AS `Score` UNION ALL SELECT 35 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 5 AS depth, 17 AS parent_id, -0.0367976185622275 AS `Score`) AS `Values`), 
`DT_Output_5` AS 
(SELECT `DT_node_lookup_5`.`KEY` AS `KEY`, `DT_node_lookup_5`.node_id_2 AS node_id_2, `DT_node_data_5`.node_id AS node_id, `DT_node_data_5`.feature AS feature, `DT_node_data_5`.threshold AS threshold, `DT_node_data_5`.depth AS depth, `DT_node_data_5`.parent_id AS parent_id, `DT_node_data_5`.`Score` AS `Score` 
FROM `DT_node_lookup_5` LEFT OUTER JOIN `DT_node_data_5` ON `DT_node_lookup_5`.node_id_2 = `DT_node_data_5`.node_id), 
`LGBM_Tree_2_1` AS 
(SELECT `DT_Output_5`.`KEY` AS `KEY`, 0.0 AS `Score_0`, 0.0 AS `Score_1`, `DT_Output_5`.`Score` AS `Score_2` 
FROM `DT_Output_5`), 
`DT_node_lookup_6` AS 
(SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_2` <= 3.15) THEN CASE WHEN (`ADS`.`Feature_1` <= 3.25) THEN 4 ELSE CASE WHEN (`ADS`.`Feature_3` <= 0.25) THEN 10 ELSE 11 END END ELSE CASE WHEN (`ADS`.`Feature_3` <= 1.45) THEN CASE WHEN (`ADS`.`Feature_0` <= 5.75) THEN 12 ELSE 13 END ELSE CASE WHEN (`ADS`.`Feature_2` <= 5.05) THEN 14 ELSE CASE WHEN (`ADS`.`Feature_2` <= 5.55) THEN 30 ELSE 31 END END END END AS node_id_2 
FROM iris AS `ADS`), 
`DT_node_data_6` AS 
(SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, 2 AS parent_id, 0.05792295292897365 AS `Score` UNION ALL SELECT 10 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 5 AS parent_id, 0.06566060959776546 AS `Score` UNION ALL SELECT 11 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 5 AS parent_id, 0.06565462609485141 AS `Score` UNION ALL SELECT 12 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 6 AS parent_id, -0.03623101552725499 AS `Score` UNION ALL SELECT 13 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 6 AS parent_id, -0.03619200127116164 AS `Score` UNION ALL SELECT 14 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 7 AS parent_id, -0.036079813855756544 AS `Score` UNION ALL SELECT 30 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 4 AS depth, 15 AS parent_id, -0.03619660578817953 AS `Score` UNION ALL SELECT 31 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 4 AS depth, 15 AS parent_id, -0.03614063143034853 AS `Score`) AS `Values`), 
`DT_Output_6` AS 
(SELECT `DT_node_lookup_6`.`KEY` AS `KEY`, `DT_node_lookup_6`.node_id_2 AS node_id_2, `DT_node_data_6`.node_id AS node_id, `DT_node_data_6`.feature AS feature, `DT_node_data_6`.threshold AS threshold, `DT_node_data_6`.depth AS depth, `DT_node_data_6`.parent_id AS parent_id, `DT_node_data_6`.`Score` AS `Score` 
FROM `DT_node_lookup_6` LEFT OUTER JOIN `DT_node_data_6` ON `DT_node_lookup_6`.node_id_2 = `DT_node_data_6`.node_id), 
`LGBM_Tree_0_2` AS 
(SELECT `DT_Output_6`.`KEY` AS `KEY`, `DT_Output_6`.`Score` AS `Score_0`, 0.0 AS `Score_1`, 0.0 AS `Score_2` 
FROM `DT_Output_6`), 
`DT_node_lookup_7` AS 
(SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_2` <= 5.05) THEN CASE WHEN (`ADS`.`Feature_2` <= 3.15) THEN CASE WHEN (`ADS`.`Feature_2` <= 1.55) THEN CASE WHEN (`ADS`.`Feature_0` <= 4.95) THEN 16 ELSE 17 END ELSE 9 END ELSE CASE WHEN (`ADS`.`Feature_2` <= 4.75) THEN CASE WHEN (`ADS`.`Feature_1` <= 2.55) THEN 20 ELSE CASE WHEN (`ADS`.`Feature_3` <= 1.35) THEN 42 ELSE 43 END END ELSE 11 END END ELSE CASE WHEN (`ADS`.`Feature_3` <= 1.95) THEN 6 ELSE 7 END END AS node_id_2 
FROM iris AS `ADS`), 
`DT_node_data_7` AS 
(SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 6 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, 3 AS parent_id, -0.03644591344606654 AS `Score` UNION ALL SELECT 7 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, 3 AS parent_id, -0.03614744799411162 AS `Score` UNION ALL SELECT 9 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 4 AS parent_id, -0.026981882631515276 AS `Score` UNION ALL SELECT 11 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 5 AS parent_id, 0.009122721204057034 AS `Score` UNION ALL SELECT 16 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 4 AS depth, 8 AS parent_id, -0.03613660986354021 AS `Score` UNION ALL SELECT 17 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 4 AS depth, 8 AS parent_id, -0.03613638461180132 AS `Score` UNION ALL SELECT 20 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 4 AS depth, 10 AS parent_id, 0.05635426406383372 AS `Score` UNION ALL SELECT 42 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 5 AS depth, 21 AS parent_id, 0.06532748858928439 AS `Score` UNION ALL SELECT 43 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 5 AS depth, 21 AS parent_id, 0.0662480832905319 AS `Score`) AS `Values`), 
`DT_Output_7` AS 
(SELECT `DT_node_lookup_7`.`KEY` AS `KEY`, `DT_node_lookup_7`.node_id_2 AS node_id_2, `DT_node_data_7`.node_id AS node_id, `DT_node_data_7`.feature AS feature, `DT_node_data_7`.threshold AS threshold, `DT_node_data_7`.depth AS depth, `DT_node_data_7`.parent_id AS parent_id, `DT_node_data_7`.`Score` AS `Score` 
FROM `DT_node_lookup_7` LEFT OUTER JOIN `DT_node_data_7` ON `DT_node_lookup_7`.node_id_2 = `DT_node_data_7`.node_id), 
`LGBM_Tree_1_2` AS 
(SELECT `DT_Output_7`.`KEY` AS `KEY`, 0.0 AS `Score_0`, `DT_Output_7`.`Score` AS `Score_1`, 0.0 AS `Score_2` 
FROM `DT_Output_7`)
 SELECT `Score_Union_CTE_esu_0`.`KEY`, `Score_Union_CTE_esu_0`.`Score_0`, `Score_Union_CTE_esu_0`.`Score_1`, `Score_Union_CTE_esu_0`.`Score_2` 
FROM (SELECT `LGBM_Tree_0_0`.`KEY` AS `KEY`, `LGBM_Tree_0_0`.`Score_0` AS `Score_0`, `LGBM_Tree_0_0`.`Score_1` AS `Score_1`, `LGBM_Tree_0_0`.`Score_2` AS `Score_2` 
FROM `LGBM_Tree_0_0` UNION ALL SELECT `LGBM_Tree_1_0`.`KEY` AS `KEY`, `LGBM_Tree_1_0`.`Score_0` AS `Score_0`, `LGBM_Tree_1_0`.`Score_1` AS `Score_1`, `LGBM_Tree_1_0`.`Score_2` AS `Score_2` 
FROM `LGBM_Tree_1_0` UNION ALL SELECT `LGBM_Tree_2_0`.`KEY` AS `KEY`, `LGBM_Tree_2_0`.`Score_0` AS `Score_0`, `LGBM_Tree_2_0`.`Score_1` AS `Score_1`, `LGBM_Tree_2_0`.`Score_2` AS `Score_2` 
FROM `LGBM_Tree_2_0` UNION ALL SELECT `LGBM_Tree_0_1`.`KEY` AS `KEY`, `LGBM_Tree_0_1`.`Score_0` AS `Score_0`, `LGBM_Tree_0_1`.`Score_1` AS `Score_1`, `LGBM_Tree_0_1`.`Score_2` AS `Score_2` 
FROM `LGBM_Tree_0_1` UNION ALL SELECT `LGBM_Tree_1_1`.`KEY` AS `KEY`, `LGBM_Tree_1_1`.`Score_0` AS `Score_0`, `LGBM_Tree_1_1`.`Score_1` AS `Score_1`, `LGBM_Tree_1_1`.`Score_2` AS `Score_2` 
FROM `LGBM_Tree_1_1` UNION ALL SELECT `LGBM_Tree_2_1`.`KEY` AS `KEY`, `LGBM_Tree_2_1`.`Score_0` AS `Score_0`, `LGBM_Tree_2_1`.`Score_1` AS `Score_1`, `LGBM_Tree_2_1`.`Score_2` AS `Score_2` 
FROM `LGBM_Tree_2_1` UNION ALL SELECT `LGBM_Tree_0_2`.`KEY` AS `KEY`, `LGBM_Tree_0_2`.`Score_0` AS `Score_0`, `LGBM_Tree_0_2`.`Score_1` AS `Score_1`, `LGBM_Tree_0_2`.`Score_2` AS `Score_2` 
FROM `LGBM_Tree_0_2` UNION ALL SELECT `LGBM_Tree_1_2`.`KEY` AS `KEY`, `LGBM_Tree_1_2`.`Score_0` AS `Score_0`, `LGBM_Tree_1_2`.`Score_1` AS `Score_1`, `LGBM_Tree_1_2`.`Score_2` AS `Score_2` 
FROM `LGBM_Tree_1_2`) AS `Score_Union_CTE_esu_0`), 
`Score_Union_CTE_1` AS 
(WITH `DT_node_lookup_8` AS 
(SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_2` <= 4.85) THEN CASE WHEN (`ADS`.`Feature_3` <= 1.45) THEN CASE WHEN (`ADS`.`Feature_2` <= 3.15) THEN CASE WHEN (`ADS`.`Feature_2` <= 1.55) THEN CASE WHEN (`ADS`.`Feature_0` <= 4.95) THEN 32 ELSE 33 END ELSE 17 END ELSE CASE WHEN (`ADS`.`Feature_0` <= 5.75) THEN 18 ELSE 19 END END ELSE 5 END ELSE CASE WHEN (`ADS`.`Feature_2` <= 5.15) THEN 6 ELSE CASE WHEN (`ADS`.`Feature_3` <= 2.05) THEN 14 ELSE 15 END END END AS node_id_2 
FROM iris AS `ADS`), 
`DT_node_data_8` AS 
(SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 5 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, 2 AS parent_id, -0.0175619789645018 AS `Score` UNION ALL SELECT 6 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, 3 AS parent_id, 0.04595260653092162 AS `Score` UNION ALL SELECT 14 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 7 AS parent_id, 0.06599303860135175 AS `Score` UNION ALL SELECT 15 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 7 AS parent_id, 0.0651617028330994 AS `Score` UNION ALL SELECT 17 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 4 AS depth, 8 AS parent_id, -0.03609359849712385 AS `Score` UNION ALL SELECT 18 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 4 AS depth, 9 AS parent_id, -0.036230322425771934 AS `Score` UNION ALL SELECT 19 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 4 AS depth, 9 AS parent_id, -0.03619491393195055 AS `Score` UNION ALL SELECT 32 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 5 AS depth, 16 AS parent_id, -0.03613693461651505 AS `Score` UNION ALL SELECT 33 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 5 AS depth, 16 AS parent_id, -0.03613703412054963 AS `Score`) AS `Values`), 
`DT_Output_8` AS 
(SELECT `DT_node_lookup_8`.`KEY` AS `KEY`, `DT_node_lookup_8`.node_id_2 AS node_id_2, `DT_node_data_8`.node_id AS node_id, `DT_node_data_8`.feature AS feature, `DT_node_data_8`.threshold AS threshold, `DT_node_data_8`.depth AS depth, `DT_node_data_8`.parent_id AS parent_id, `DT_node_data_8`.`Score` AS `Score` 
FROM `DT_node_lookup_8` LEFT OUTER JOIN `DT_node_data_8` ON `DT_node_lookup_8`.node_id_2 = `DT_node_data_8`.node_id), 
`LGBM_Tree_2_2` AS 
(SELECT `DT_Output_8`.`KEY` AS `KEY`, 0.0 AS `Score_0`, 0.0 AS `Score_1`, `DT_Output_8`.`Score` AS `Score_2` 
FROM `DT_Output_8`), 
`DT_node_lookup_9` AS 
(SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_2` <= 3.15) THEN CASE WHEN (`ADS`.`Feature_1` <= 3.25) THEN 4 ELSE CASE WHEN (`ADS`.`Feature_3` <= 0.25) THEN 10 ELSE 11 END END ELSE CASE WHEN (`ADS`.`Feature_3` <= 1.45) THEN CASE WHEN (`ADS`.`Feature_0` <= 5.75) THEN 12 ELSE 13 END ELSE CASE WHEN (`ADS`.`Feature_2` <= 5.05) THEN 14 ELSE CASE WHEN (`ADS`.`Feature_2` <= 5.55) THEN 30 ELSE 31 END END END END AS node_id_2 
FROM iris AS `ADS`), 
`DT_node_data_9` AS 
(SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, 2 AS parent_id, 0.054475768067759035 AS `Score` UNION ALL SELECT 10 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 5 AS parent_id, 0.061789269764456714 AS `Score` UNION ALL SELECT 11 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 5 AS parent_id, 0.06178744514369693 AS `Score` UNION ALL SELECT 12 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 6 AS parent_id, -0.035637607154484566 AS `Score` UNION ALL SELECT 13 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 6 AS parent_id, -0.03559910402815203 AS `Score` UNION ALL SELECT 14 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 7 AS parent_id, -0.03542433598705649 AS `Score` UNION ALL SELECT 30 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 4 AS depth, 15 AS parent_id, -0.03562600526421191 AS `Score` UNION ALL SELECT 31 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 4 AS depth, 15 AS parent_id, -0.035520304193693536 AS `Score`) AS `Values`), 
`DT_Output_9` AS 
(SELECT `DT_node_lookup_9`.`KEY` AS `KEY`, `DT_node_lookup_9`.node_id_2 AS node_id_2, `DT_node_data_9`.node_id AS node_id, `DT_node_data_9`.feature AS feature, `DT_node_data_9`.threshold AS threshold, `DT_node_data_9`.depth AS depth, `DT_node_data_9`.parent_id AS parent_id, `DT_node_data_9`.`Score` AS `Score` 
FROM `DT_node_lookup_9` LEFT OUTER JOIN `DT_node_data_9` ON `DT_node_lookup_9`.node_id_2 = `DT_node_data_9`.node_id), 
`LGBM_Tree_0_3` AS 
(SELECT `DT_Output_9`.`KEY` AS `KEY`, `DT_Output_9`.`Score` AS `Score_0`, 0.0 AS `Score_1`, 0.0 AS `Score_2` 
FROM `DT_Output_9`), 
`DT_node_lookup_10` AS 
(SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_3` <= 0.45) THEN CASE WHEN (`ADS`.`Feature_2` <= 1.45) THEN 4 ELSE 5 END ELSE CASE WHEN (`ADS`.`Feature_2` <= 4.85) THEN CASE WHEN (`ADS`.`Feature_0` <= 5.55) THEN 12 ELSE CASE WHEN (`ADS`.`Feature_1` <= 2.95) THEN 26 ELSE 27 END END ELSE CASE WHEN (`ADS`.`Feature_3` <= 1.85) THEN 14 ELSE CASE WHEN (`ADS`.`Feature_2` <= 5.55) THEN 30 ELSE 31 END END END END AS node_id_2 
FROM iris AS `ADS`), 
`DT_node_data_10` AS 
(SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, 2 AS parent_id, -0.03553579007271022 AS `Score` UNION ALL SELECT 5 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, 2 AS parent_id, -0.035774918497012795 AS `Score` UNION ALL SELECT 12 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 6 AS parent_id, 0.04331685519030595 AS `Score` UNION ALL SELECT 14 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 7 AS parent_id, -0.0132317639640159 AS `Score` UNION ALL SELECT 26 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 4 AS depth, 13 AS parent_id, 0.061887650106413575 AS `Score` UNION ALL SELECT 27 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 4 AS depth, 13 AS parent_id, 0.054498276751801515 AS `Score` UNION ALL SELECT 30 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 4 AS depth, 15 AS parent_id, -0.03586621044007176 AS `Score` UNION ALL SELECT 31 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 4 AS depth, 15 AS parent_id, -0.035514232307976096 AS `Score`) AS `Values`), 
`DT_Output_10` AS 
(SELECT `DT_node_lookup_10`.`KEY` AS `KEY`, `DT_node_lookup_10`.node_id_2 AS node_id_2, `DT_node_data_10`.node_id AS node_id, `DT_node_data_10`.feature AS feature, `DT_node_data_10`.threshold AS threshold, `DT_node_data_10`.depth AS depth, `DT_node_data_10`.parent_id AS parent_id, `DT_node_data_10`.`Score` AS `Score` 
FROM `DT_node_lookup_10` LEFT OUTER JOIN `DT_node_data_10` ON `DT_node_lookup_10`.node_id_2 = `DT_node_data_10`.node_id), 
`LGBM_Tree_1_3` AS 
(SELECT `DT_Output_10`.`KEY` AS `KEY`, 0.0 AS `Score_0`, `DT_Output_10`.`Score` AS `Score_1`, 0.0 AS `Score_2` 
FROM `DT_Output_10`), 
`DT_node_lookup_11` AS 
(SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_2` <= 4.85) THEN CASE WHEN (`ADS`.`Feature_3` <= 1.45) THEN CASE WHEN (`ADS`.`Feature_2` <= 3.15) THEN CASE WHEN (`ADS`.`Feature_0` <= 5.05) THEN 16 ELSE 17 END ELSE CASE WHEN (`ADS`.`Feature_1` <= 2.6500000000000004) THEN 18 ELSE 19 END END ELSE 5 END ELSE CASE WHEN (`ADS`.`Feature_3` <= 1.85) THEN 6 ELSE CASE WHEN (`ADS`.`Feature_2` <= 5.35) THEN 14 ELSE 15 END END END AS node_id_2 
FROM iris AS `ADS`), 
`DT_node_data_11` AS 
(SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 5 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, 2 AS parent_id, -0.016956797568005635 AS `Score` UNION ALL SELECT 6 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, 3 AS parent_id, 0.04304687239816127 AS `Score` UNION ALL SELECT 14 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 7 AS parent_id, 0.0627222137913103 AS `Score` UNION ALL SELECT 15 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 7 AS parent_id, 0.06129275565713077 AS `Score` UNION ALL SELECT 16 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 4 AS depth, 8 AS parent_id, -0.0355307233363504 AS `Score` UNION ALL SELECT 17 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 4 AS depth, 8 AS parent_id, -0.0354791507290709 AS `Score` UNION ALL SELECT 18 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 4 AS depth, 9 AS parent_id, -0.03564300812043989 AS `Score` UNION ALL SELECT 19 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 4 AS depth, 9 AS parent_id, -0.035603410949028684 AS `Score`) AS `Values`), 
`DT_Output_11` AS 
(SELECT `DT_node_lookup_11`.`KEY` AS `KEY`, `DT_node_lookup_11`.node_id_2 AS node_id_2, `DT_node_data_11`.node_id AS node_id, `DT_node_data_11`.feature AS feature, `DT_node_data_11`.threshold AS threshold, `DT_node_data_11`.depth AS depth, `DT_node_data_11`.parent_id AS parent_id, `DT_node_data_11`.`Score` AS `Score` 
FROM `DT_node_lookup_11` LEFT OUTER JOIN `DT_node_data_11` ON `DT_node_lookup_11`.node_id_2 = `DT_node_data_11`.node_id), 
`LGBM_Tree_2_3` AS 
(SELECT `DT_Output_11`.`KEY` AS `KEY`, 0.0 AS `Score_0`, 0.0 AS `Score_1`, `DT_Output_11`.`Score` AS `Score_2` 
FROM `DT_Output_11`), 
`DT_node_lookup_12` AS 
(SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_2` <= 3.15) THEN CASE WHEN (`ADS`.`Feature_1` <= 3.25) THEN 4 ELSE CASE WHEN (`ADS`.`Feature_3` <= 0.25) THEN 10 ELSE 11 END END ELSE CASE WHEN (`ADS`.`Feature_3` <= 1.45) THEN CASE WHEN (`ADS`.`Feature_0` <= 5.75) THEN 12 ELSE 13 END ELSE CASE WHEN (`ADS`.`Feature_3` <= 1.65) THEN 14 ELSE CASE WHEN (`ADS`.`Feature_2` <= 5.15) THEN 30 ELSE CASE WHEN (`ADS`.`Feature_3` <= 2.1500000000000004) THEN 62 ELSE 63 END END END END END AS node_id_2 
FROM iris AS `ADS`), 
`DT_node_data_12` AS 
(SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, 2 AS parent_id, 0.05151544143727952 AS `Score` UNION ALL SELECT 10 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 5 AS parent_id, 0.05837625592181557 AS `Score` UNION ALL SELECT 11 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 5 AS parent_id, 0.05858843076750734 AS `Score` UNION ALL SELECT 12 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 6 AS parent_id, -0.03512192164262361 AS `Score` UNION ALL SELECT 13 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 6 AS parent_id, -0.035021405580452976 AS `Score` UNION ALL SELECT 14 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 7 AS parent_id, -0.03482156247517217 AS `Score` UNION ALL SELECT 30 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 4 AS depth, 15 AS parent_id, -0.03503741864762107 AS `Score` UNION ALL SELECT 62 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 5 AS depth, 31 AS parent_id, -0.03494355598706175 AS `Score` UNION ALL SELECT 63 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 5 AS depth, 31 AS parent_id, -0.03492826261728372 AS `Score`) AS `Values`), 
`DT_Output_12` AS 
(SELECT `DT_node_lookup_12`.`KEY` AS `KEY`, `DT_node_lookup_12`.node_id_2 AS node_id_2, `DT_node_data_12`.node_id AS node_id, `DT_node_data_12`.feature AS feature, `DT_node_data_12`.threshold AS threshold, `DT_node_data_12`.depth AS depth, `DT_node_data_12`.parent_id AS parent_id, `DT_node_data_12`.`Score` AS `Score` 
FROM `DT_node_lookup_12` LEFT OUTER JOIN `DT_node_data_12` ON `DT_node_lookup_12`.node_id_2 = `DT_node_data_12`.node_id), 
`LGBM_Tree_0_4` AS 
(SELECT `DT_Output_12`.`KEY` AS `KEY`, `DT_Output_12`.`Score` AS `Score_0`, 0.0 AS `Score_1`, 0.0 AS `Score_2` 
FROM `DT_Output_12`), 
`DT_node_lookup_13` AS 
(SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_2` <= 5.05) THEN CASE WHEN (`ADS`.`Feature_2` <= 3.15) THEN CASE WHEN (`ADS`.`Feature_2` <= 1.55) THEN 8 ELSE 9 END ELSE CASE WHEN (`ADS`.`Feature_2` <= 4.75) THEN CASE WHEN (`ADS`.`Feature_1` <= 2.55) THEN 20 ELSE CASE WHEN (`ADS`.`Feature_3` <= 1.35) THEN 42 ELSE 43 END END ELSE 11 END END ELSE CASE WHEN (`ADS`.`Feature_3` <= 1.95) THEN 6 ELSE 7 END END AS node_id_2 
FROM iris AS `ADS`), 
`DT_node_data_13` AS 
(SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 6 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, 3 AS parent_id, -0.0354875127902387 AS `Score` UNION ALL SELECT 7 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, 3 AS parent_id, -0.03494788373913557 AS `Score` UNION ALL SELECT 8 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 4 AS parent_id, -0.034961230915922896 AS `Score` UNION ALL SELECT 9 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 4 AS parent_id, -0.02575179283015381 AS `Score` UNION ALL SELECT 11 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 5 AS parent_id, 0.008944323411775588 AS `Score` UNION ALL SELECT 20 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 4 AS depth, 10 AS parent_id, 0.0501704264196072 AS `Score` UNION ALL SELECT 42 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 5 AS depth, 21 AS parent_id, 0.05812840328273927 AS `Score` UNION ALL SELECT 43 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 5 AS depth, 21 AS parent_id, 0.05945519657921953 AS `Score`) AS `Values`), 
`DT_Output_13` AS 
(SELECT `DT_node_lookup_13`.`KEY` AS `KEY`, `DT_node_lookup_13`.node_id_2 AS node_id_2, `DT_node_data_13`.node_id AS node_id, `DT_node_data_13`.feature AS feature, `DT_node_data_13`.threshold AS threshold, `DT_node_data_13`.depth AS depth, `DT_node_data_13`.parent_id AS parent_id, `DT_node_data_13`.`Score` AS `Score` 
FROM `DT_node_lookup_13` LEFT OUTER JOIN `DT_node_data_13` ON `DT_node_lookup_13`.node_id_2 = `DT_node_data_13`.node_id), 
`LGBM_Tree_1_4` AS 
(SELECT `DT_Output_13`.`KEY` AS `KEY`, 0.0 AS `Score_0`, `DT_Output_13`.`Score` AS `Score_1`, 0.0 AS `Score_2` 
FROM `DT_Output_13`), 
`DT_node_lookup_14` AS 
(SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_2` <= 4.85) THEN CASE WHEN (`ADS`.`Feature_3` <= 1.45) THEN CASE WHEN (`ADS`.`Feature_2` <= 3.15) THEN CASE WHEN (`ADS`.`Feature_0` <= 4.95) THEN 16 ELSE 17 END ELSE CASE WHEN (`ADS`.`Feature_2` <= 4.05) THEN 18 ELSE 19 END END ELSE 5 END ELSE CASE WHEN (`ADS`.`Feature_2` <= 5.15) THEN 6 ELSE CASE WHEN (`ADS`.`Feature_3` <= 2.05) THEN 14 ELSE 15 END END END AS node_id_2 
FROM iris AS `ADS`), 
`DT_node_data_14` AS 
(SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 5 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, 2 AS parent_id, -0.016334006110747687 AS `Score` UNION ALL SELECT 6 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, 3 AS parent_id, 0.04077895620099417 AS `Score` UNION ALL SELECT 14 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 7 AS parent_id, 0.05922944045625759 AS `Score` UNION ALL SELECT 15 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 7 AS parent_id, 0.05793606147033516 AS `Score` UNION ALL SELECT 16 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 4 AS depth, 8 AS parent_id, -0.03498512334643852 AS `Score` UNION ALL SELECT 17 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 4 AS depth, 8 AS parent_id, -0.0348666408454289 AS `Score` UNION ALL SELECT 18 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 4 AS depth, 9 AS parent_id, -0.035106810627660565 AS `Score` UNION ALL SELECT 19 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 4 AS depth, 9 AS parent_id, -0.03504686903116427 AS `Score`) AS `Values`), 
`DT_Output_14` AS 
(SELECT `DT_node_lookup_14`.`KEY` AS `KEY`, `DT_node_lookup_14`.node_id_2 AS node_id_2, `DT_node_data_14`.node_id AS node_id, `DT_node_data_14`.feature AS feature, `DT_node_data_14`.threshold AS threshold, `DT_node_data_14`.depth AS depth, `DT_node_data_14`.parent_id AS parent_id, `DT_node_data_14`.`Score` AS `Score` 
FROM `DT_node_lookup_14` LEFT OUTER JOIN `DT_node_data_14` ON `DT_node_lookup_14`.node_id_2 = `DT_node_data_14`.node_id), 
`LGBM_Tree_2_4` AS 
(SELECT `DT_Output_14`.`KEY` AS `KEY`, 0.0 AS `Score_0`, 0.0 AS `Score_1`, `DT_Output_14`.`Score` AS `Score_2` 
FROM `DT_Output_14`), 
`DT_node_lookup_15` AS 
(SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_2` <= 3.15) THEN CASE WHEN (`ADS`.`Feature_1` <= 3.25) THEN 4 ELSE CASE WHEN (`ADS`.`Feature_3` <= 0.25) THEN 10 ELSE 11 END END ELSE CASE WHEN (`ADS`.`Feature_3` <= 1.45) THEN CASE WHEN (`ADS`.`Feature_0` <= 5.75) THEN 12 ELSE 13 END ELSE CASE WHEN (`ADS`.`Feature_3` <= 1.65) THEN 14 ELSE CASE WHEN (`ADS`.`Feature_2` <= 5.15) THEN 30 ELSE CASE WHEN (`ADS`.`Feature_3` <= 2.1500000000000004) THEN 62 ELSE 63 END END END END END AS node_id_2 
FROM iris AS `ADS`), 
`DT_node_data_15` AS 
(SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, 2 AS parent_id, 0.04882708273952228 AS `Score` UNION ALL SELECT 10 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 5 AS parent_id, 0.05545685715227089 AS `Score` UNION ALL SELECT 11 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 5 AS parent_id, 0.05564881077771483 AS `Score` UNION ALL SELECT 12 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 6 AS parent_id, -0.03459210573219973 AS `Score` UNION ALL SELECT 13 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 6 AS parent_id, -0.034494467413793355 AS `Score` UNION ALL SELECT 14 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 7 AS parent_id, -0.03424710204063069 AS `Score` UNION ALL SELECT 30 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 4 AS depth, 15 AS parent_id, -0.03453925489289249 AS `Score` UNION ALL SELECT 62 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 5 AS depth, 31 AS parent_id, -0.03439475680992898 AS `Score` UNION ALL SELECT 63 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 5 AS depth, 31 AS parent_id, -0.034378119995331746 AS `Score`) AS `Values`), 
`DT_Output_15` AS 
(SELECT `DT_node_lookup_15`.`KEY` AS `KEY`, `DT_node_lookup_15`.node_id_2 AS node_id_2, `DT_node_data_15`.node_id AS node_id, `DT_node_data_15`.feature AS feature, `DT_node_data_15`.threshold AS threshold, `DT_node_data_15`.depth AS depth, `DT_node_data_15`.parent_id AS parent_id, `DT_node_data_15`.`Score` AS `Score` 
FROM `DT_node_lookup_15` LEFT OUTER JOIN `DT_node_data_15` ON `DT_node_lookup_15`.node_id_2 = `DT_node_data_15`.node_id), 
`LGBM_Tree_0_5` AS 
(SELECT `DT_Output_15`.`KEY` AS `KEY`, `DT_Output_15`.`Score` AS `Score_0`, 0.0 AS `Score_1`, 0.0 AS `Score_2` 
FROM `DT_Output_15`)
 SELECT `Score_Union_CTE_esu_1`.`KEY`, `Score_Union_CTE_esu_1`.`Score_0`, `Score_Union_CTE_esu_1`.`Score_1`, `Score_Union_CTE_esu_1`.`Score_2` 
FROM (SELECT `LGBM_Tree_2_2`.`KEY` AS `KEY`, `LGBM_Tree_2_2`.`Score_0` AS `Score_0`, `LGBM_Tree_2_2`.`Score_1` AS `Score_1`, `LGBM_Tree_2_2`.`Score_2` AS `Score_2` 
FROM `LGBM_Tree_2_2` UNION ALL SELECT `LGBM_Tree_0_3`.`KEY` AS `KEY`, `LGBM_Tree_0_3`.`Score_0` AS `Score_0`, `LGBM_Tree_0_3`.`Score_1` AS `Score_1`, `LGBM_Tree_0_3`.`Score_2` AS `Score_2` 
FROM `LGBM_Tree_0_3` UNION ALL SELECT `LGBM_Tree_1_3`.`KEY` AS `KEY`, `LGBM_Tree_1_3`.`Score_0` AS `Score_0`, `LGBM_Tree_1_3`.`Score_1` AS `Score_1`, `LGBM_Tree_1_3`.`Score_2` AS `Score_2` 
FROM `LGBM_Tree_1_3` UNION ALL SELECT `LGBM_Tree_2_3`.`KEY` AS `KEY`, `LGBM_Tree_2_3`.`Score_0` AS `Score_0`, `LGBM_Tree_2_3`.`Score_1` AS `Score_1`, `LGBM_Tree_2_3`.`Score_2` AS `Score_2` 
FROM `LGBM_Tree_2_3` UNION ALL SELECT `LGBM_Tree_0_4`.`KEY` AS `KEY`, `LGBM_Tree_0_4`.`Score_0` AS `Score_0`, `LGBM_Tree_0_4`.`Score_1` AS `Score_1`, `LGBM_Tree_0_4`.`Score_2` AS `Score_2` 
FROM `LGBM_Tree_0_4` UNION ALL SELECT `LGBM_Tree_1_4`.`KEY` AS `KEY`, `LGBM_Tree_1_4`.`Score_0` AS `Score_0`, `LGBM_Tree_1_4`.`Score_1` AS `Score_1`, `LGBM_Tree_1_4`.`Score_2` AS `Score_2` 
FROM `LGBM_Tree_1_4` UNION ALL SELECT `LGBM_Tree_2_4`.`KEY` AS `KEY`, `LGBM_Tree_2_4`.`Score_0` AS `Score_0`, `LGBM_Tree_2_4`.`Score_1` AS `Score_1`, `LGBM_Tree_2_4`.`Score_2` AS `Score_2` 
FROM `LGBM_Tree_2_4` UNION ALL SELECT `LGBM_Tree_0_5`.`KEY` AS `KEY`, `LGBM_Tree_0_5`.`Score_0` AS `Score_0`, `LGBM_Tree_0_5`.`Score_1` AS `Score_1`, `LGBM_Tree_0_5`.`Score_2` AS `Score_2` 
FROM `LGBM_Tree_0_5`) AS `Score_Union_CTE_esu_1`), 
`Score_Union_CTE_2` AS 
(WITH `DT_node_lookup_16` AS 
(SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_2` <= 5.05) THEN CASE WHEN (`ADS`.`Feature_2` <= 3.15) THEN CASE WHEN (`ADS`.`Feature_1` <= 3.25) THEN 8 ELSE 9 END ELSE CASE WHEN (`ADS`.`Feature_3` <= 1.55) THEN CASE WHEN (`ADS`.`Feature_0` <= 6.15) THEN CASE WHEN (`ADS`.`Feature_0` <= 5.65) THEN 40 ELSE 41 END ELSE 21 END ELSE 11 END END ELSE CASE WHEN (`ADS`.`Feature_3` <= 1.95) THEN 6 ELSE 7 END END AS node_id_2 
FROM iris AS `ADS`), 
`DT_node_data_16` AS 
(SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 6 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, 3 AS parent_id, -0.03493681004032273 AS `Score` UNION ALL SELECT 7 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, 3 AS parent_id, -0.03440602136271121 AS `Score` UNION ALL SELECT 8 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 4 AS parent_id, -0.02584355051840219 AS `Score` UNION ALL SELECT 9 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 4 AS parent_id, -0.03465439782701464 AS `Score` UNION ALL SELECT 11 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 5 AS parent_id, 0.00010822738549660109 AS `Score` UNION ALL SELECT 21 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 4 AS depth, 10 AS parent_id, 0.05998074390405583 AS `Score` UNION ALL SELECT 40 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 5 AS depth, 20 AS parent_id, 0.056557788687336186 AS `Score` UNION ALL SELECT 41 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 5 AS depth, 20 AS parent_id, 0.04854574576885921 AS `Score`) AS `Values`), 
`DT_Output_16` AS 
(SELECT `DT_node_lookup_16`.`KEY` AS `KEY`, `DT_node_lookup_16`.node_id_2 AS node_id_2, `DT_node_data_16`.node_id AS node_id, `DT_node_data_16`.feature AS feature, `DT_node_data_16`.threshold AS threshold, `DT_node_data_16`.depth AS depth, `DT_node_data_16`.parent_id AS parent_id, `DT_node_data_16`.`Score` AS `Score` 
FROM `DT_node_lookup_16` LEFT OUTER JOIN `DT_node_data_16` ON `DT_node_lookup_16`.node_id_2 = `DT_node_data_16`.node_id), 
`LGBM_Tree_1_5` AS 
(SELECT `DT_Output_16`.`KEY` AS `KEY`, 0.0 AS `Score_0`, `DT_Output_16`.`Score` AS `Score_1`, 0.0 AS `Score_2` 
FROM `DT_Output_16`), 
`DT_node_lookup_17` AS 
(SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_2` <= 4.85) THEN CASE WHEN (`ADS`.`Feature_3` <= 1.45) THEN CASE WHEN (`ADS`.`Feature_1` <= 3.25) THEN CASE WHEN (`ADS`.`Feature_2` <= 3.15) THEN 16 ELSE CASE WHEN (`ADS`.`Feature_2` <= 4.05) THEN 34 ELSE 35 END END ELSE 9 END ELSE 5 END ELSE CASE WHEN (`ADS`.`Feature_3` <= 1.85) THEN 6 ELSE CASE WHEN (`ADS`.`Feature_2` <= 5.35) THEN 14 ELSE 15 END END END AS node_id_2 
FROM iris AS `ADS`), 
`DT_node_data_17` AS 
(SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 5 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, 2 AS parent_id, -0.01573322081099447 AS `Score` UNION ALL SELECT 6 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, 3 AS parent_id, 0.038437406813490504 AS `Score` UNION ALL SELECT 9 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 4 AS parent_id, -0.03432538435833885 AS `Score` UNION ALL SELECT 14 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 7 AS parent_id, 0.05670487060786438 AS `Score` UNION ALL SELECT 15 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 7 AS parent_id, 0.055016118352597225 AS `Score` UNION ALL SELECT 16 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 4 AS depth, 8 AS parent_id, -0.03445829584854655 AS `Score` UNION ALL SELECT 34 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 5 AS depth, 17 AS parent_id, -0.03457960889221311 AS `Score` UNION ALL SELECT 35 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 5 AS depth, 17 AS parent_id, -0.0345182572892783 AS `Score`) AS `Values`), 
`DT_Output_17` AS 
(SELECT `DT_node_lookup_17`.`KEY` AS `KEY`, `DT_node_lookup_17`.node_id_2 AS node_id_2, `DT_node_data_17`.node_id AS node_id, `DT_node_data_17`.feature AS feature, `DT_node_data_17`.threshold AS threshold, `DT_node_data_17`.depth AS depth, `DT_node_data_17`.parent_id AS parent_id, `DT_node_data_17`.`Score` AS `Score` 
FROM `DT_node_lookup_17` LEFT OUTER JOIN `DT_node_data_17` ON `DT_node_lookup_17`.node_id_2 = `DT_node_data_17`.node_id), 
`LGBM_Tree_2_5` AS 
(SELECT `DT_Output_17`.`KEY` AS `KEY`, 0.0 AS `Score_0`, 0.0 AS `Score_1`, `DT_Output_17`.`Score` AS `Score_2` 
FROM `DT_Output_17`), 
`DT_node_lookup_18` AS 
(SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_2` <= 3.15) THEN CASE WHEN (`ADS`.`Feature_2` <= 1.55) THEN CASE WHEN (`ADS`.`Feature_1` <= 3.3499999999999996) THEN 8 ELSE 9 END ELSE 5 END ELSE CASE WHEN (`ADS`.`Feature_3` <= 1.45) THEN CASE WHEN (`ADS`.`Feature_1` <= 2.6500000000000004) THEN 12 ELSE 13 END ELSE CASE WHEN (`ADS`.`Feature_3` <= 1.65) THEN 14 ELSE CASE WHEN (`ADS`.`Feature_3` <= 1.95) THEN 30 ELSE 31 END END END END AS node_id_2 
FROM iris AS `ADS`), 
`DT_node_data_18` AS 
(SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 5 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, 2 AS parent_id, 0.045758306581583 AS `Score` UNION ALL SELECT 8 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 4 AS parent_id, 0.05331737372667022 AS `Score` UNION ALL SELECT 9 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 4 AS parent_id, 0.052396568941985903 AS `Score` UNION ALL SELECT 12 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 6 AS parent_id, -0.034075102462161354 AS `Score` UNION ALL SELECT 13 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 6 AS parent_id, -0.033986070393288416 AS `Score` UNION ALL SELECT 14 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 7 AS parent_id, -0.03372563950751737 AS `Score` UNION ALL SELECT 30 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 4 AS depth, 15 AS parent_id, -0.034067909595931416 AS `Score` UNION ALL SELECT 31 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 4 AS depth, 15 AS parent_id, -0.03386291942177113 AS `Score`) AS `Values`), 
`DT_Output_18` AS 
(SELECT `DT_node_lookup_18`.`KEY` AS `KEY`, `DT_node_lookup_18`.node_id_2 AS node_id_2, `DT_node_data_18`.node_id AS node_id, `DT_node_data_18`.feature AS feature, `DT_node_data_18`.threshold AS threshold, `DT_node_data_18`.depth AS depth, `DT_node_data_18`.parent_id AS parent_id, `DT_node_data_18`.`Score` AS `Score` 
FROM `DT_node_lookup_18` LEFT OUTER JOIN `DT_node_data_18` ON `DT_node_lookup_18`.node_id_2 = `DT_node_data_18`.node_id), 
`LGBM_Tree_0_6` AS 
(SELECT `DT_Output_18`.`KEY` AS `KEY`, `DT_Output_18`.`Score` AS `Score_0`, 0.0 AS `Score_1`, 0.0 AS `Score_2` 
FROM `DT_Output_18`), 
`DT_node_lookup_19` AS 
(SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_2` <= 5.05) THEN CASE WHEN (`ADS`.`Feature_3` <= 0.45) THEN CASE WHEN (`ADS`.`Feature_0` <= 4.85) THEN 8 ELSE 9 END ELSE CASE WHEN (`ADS`.`Feature_3` <= 1.55) THEN CASE WHEN (`ADS`.`Feature_0` <= 6.05) THEN CASE WHEN (`ADS`.`Feature_1` <= 2.6500000000000004) THEN 40 ELSE 41 END ELSE 21 END ELSE 11 END END ELSE CASE WHEN (`ADS`.`Feature_3` <= 1.95) THEN 6 ELSE 7 END END AS node_id_2 
FROM iris AS `ADS`), 
`DT_node_data_19` AS 
(SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 6 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, 3 AS parent_id, -0.034460868083324186 AS `Score` UNION ALL SELECT 7 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, 3 AS parent_id, -0.03388532230964591 AS `Score` UNION ALL SELECT 8 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 4 AS parent_id, -0.03420318163352048 AS `Score` UNION ALL SELECT 9 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 4 AS parent_id, -0.03399510257106118 AS `Score` UNION ALL SELECT 11 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 5 AS parent_id, 1.3321436498061203e-05 AS `Score` UNION ALL SELECT 21 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 4 AS depth, 10 AS parent_id, 0.056298658896131254 AS `Score` UNION ALL SELECT 40 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 5 AS depth, 20 AS parent_id, 0.04907951825864342 AS `Score` UNION ALL SELECT 41 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 5 AS depth, 20 AS parent_id, 0.04113595083813428 AS `Score`) AS `Values`), 
`DT_Output_19` AS 
(SELECT `DT_node_lookup_19`.`KEY` AS `KEY`, `DT_node_lookup_19`.node_id_2 AS node_id_2, `DT_node_data_19`.node_id AS node_id, `DT_node_data_19`.feature AS feature, `DT_node_data_19`.threshold AS threshold, `DT_node_data_19`.depth AS depth, `DT_node_data_19`.parent_id AS parent_id, `DT_node_data_19`.`Score` AS `Score` 
FROM `DT_node_lookup_19` LEFT OUTER JOIN `DT_node_data_19` ON `DT_node_lookup_19`.node_id_2 = `DT_node_data_19`.node_id), 
`LGBM_Tree_1_6` AS 
(SELECT `DT_Output_19`.`KEY` AS `KEY`, 0.0 AS `Score_0`, `DT_Output_19`.`Score` AS `Score_1`, 0.0 AS `Score_2` 
FROM `DT_Output_19`), 
`DT_node_lookup_20` AS 
(SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_2` <= 4.85) THEN CASE WHEN (`ADS`.`Feature_2` <= 4.45) THEN CASE WHEN (`ADS`.`Feature_1` <= 3.25) THEN CASE WHEN (`ADS`.`Feature_2` <= 3.15) THEN 16 ELSE 17 END ELSE 9 END ELSE 5 END ELSE CASE WHEN (`ADS`.`Feature_3` <= 1.85) THEN 6 ELSE CASE WHEN (`ADS`.`Feature_2` <= 5.35) THEN 14 ELSE 15 END END END AS node_id_2 
FROM iris AS `ADS`), 
`DT_node_data_20` AS 
(SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 5 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, 2 AS parent_id, -0.019716730551531194 AS `Score` UNION ALL SELECT 6 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, 3 AS parent_id, 0.036674273723307844 AS `Score` UNION ALL SELECT 9 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 4 AS parent_id, -0.03381409997004127 AS `Score` UNION ALL SELECT 14 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 7 AS parent_id, 0.05410081373298157 AS `Score` UNION ALL SELECT 15 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 7 AS parent_id, 0.05244841383121473 AS `Score` UNION ALL SELECT 16 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 4 AS depth, 8 AS parent_id, -0.033950279523537095 AS `Score` UNION ALL SELECT 17 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 4 AS depth, 8 AS parent_id, -0.03405529679826036 AS `Score`) AS `Values`), 
`DT_Output_20` AS 
(SELECT `DT_node_lookup_20`.`KEY` AS `KEY`, `DT_node_lookup_20`.node_id_2 AS node_id_2, `DT_node_data_20`.node_id AS node_id, `DT_node_data_20`.feature AS feature, `DT_node_data_20`.threshold AS threshold, `DT_node_data_20`.depth AS depth, `DT_node_data_20`.parent_id AS parent_id, `DT_node_data_20`.`Score` AS `Score` 
FROM `DT_node_lookup_20` LEFT OUTER JOIN `DT_node_data_20` ON `DT_node_lookup_20`.node_id_2 = `DT_node_data_20`.node_id), 
`LGBM_Tree_2_6` AS 
(SELECT `DT_Output_20`.`KEY` AS `KEY`, 0.0 AS `Score_0`, 0.0 AS `Score_1`, `DT_Output_20`.`Score` AS `Score_2` 
FROM `DT_Output_20`), 
`DT_node_lookup_21` AS 
(SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_2` <= 3.15) THEN CASE WHEN (`ADS`.`Feature_1` <= 3.25) THEN 4 ELSE CASE WHEN (`ADS`.`Feature_3` <= 0.25) THEN 10 ELSE 11 END END ELSE CASE WHEN (`ADS`.`Feature_0` <= 6.05) THEN CASE WHEN (`ADS`.`Feature_1` <= 2.6500000000000004) THEN 12 ELSE 13 END ELSE CASE WHEN (`ADS`.`Feature_2` <= 5.05) THEN 14 ELSE CASE WHEN (`ADS`.`Feature_3` <= 2.1500000000000004) THEN 30 ELSE 31 END END END END AS node_id_2 
FROM iris AS `ADS`), 
`DT_node_data_21` AS 
(SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, 2 AS parent_id, 0.04429081608330859 AS `Score` UNION ALL SELECT 10 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 5 AS parent_id, 0.05059946405699502 AS `Score` UNION ALL SELECT 11 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 5 AS parent_id, 0.05093204251190019 AS `Score` UNION ALL SELECT 12 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 6 AS parent_id, -0.033551942402910956 AS `Score` UNION ALL SELECT 13 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 6 AS parent_id, -0.033597599129120886 AS `Score` UNION ALL SELECT 14 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 7 AS parent_id, -0.03330914730828918 AS `Score` UNION ALL SELECT 30 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 4 AS depth, 15 AS parent_id, -0.033520525622979615 AS `Score` UNION ALL SELECT 31 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 4 AS depth, 15 AS parent_id, -0.03339215219125982 AS `Score`) AS `Values`), 
`DT_Output_21` AS 
(SELECT `DT_node_lookup_21`.`KEY` AS `KEY`, `DT_node_lookup_21`.node_id_2 AS node_id_2, `DT_node_data_21`.node_id AS node_id, `DT_node_data_21`.feature AS feature, `DT_node_data_21`.threshold AS threshold, `DT_node_data_21`.depth AS depth, `DT_node_data_21`.parent_id AS parent_id, `DT_node_data_21`.`Score` AS `Score` 
FROM `DT_node_lookup_21` LEFT OUTER JOIN `DT_node_data_21` ON `DT_node_lookup_21`.node_id_2 = `DT_node_data_21`.node_id), 
`LGBM_Tree_0_7` AS 
(SELECT `DT_Output_21`.`KEY` AS `KEY`, `DT_Output_21`.`Score` AS `Score_0`, 0.0 AS `Score_1`, 0.0 AS `Score_2` 
FROM `DT_Output_21`), 
`DT_node_lookup_22` AS 
(SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_2` <= 1.7999999999999998) THEN CASE WHEN (`ADS`.`Feature_2` <= 1.45) THEN 4 ELSE 5 END ELSE CASE WHEN (`ADS`.`Feature_3` <= 1.65) THEN CASE WHEN (`ADS`.`Feature_2` <= 4.6) THEN CASE WHEN (`ADS`.`Feature_1` <= 2.8499999999999996) THEN 24 ELSE 25 END ELSE 13 END ELSE CASE WHEN (`ADS`.`Feature_3` <= 1.85) THEN 14 ELSE CASE WHEN (`ADS`.`Feature_2` <= 5.55) THEN 30 ELSE 31 END END END END AS node_id_2 
FROM iris AS `ADS`), 
`DT_node_data_22` AS 
(SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, 2 AS parent_id, -0.03347519570683937 AS `Score` UNION ALL SELECT 5 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, 2 AS parent_id, -0.03376439127229044 AS `Score` UNION ALL SELECT 13 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 6 AS parent_id, 0.02979090768241951 AS `Score` UNION ALL SELECT 14 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 7 AS parent_id, -0.01785883703470513 AS `Score` UNION ALL SELECT 24 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 4 AS depth, 12 AS parent_id, 0.05234185547807092 AS `Score` UNION ALL SELECT 25 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 4 AS depth, 12 AS parent_id, 0.040094631955517 AS `Score` UNION ALL SELECT 30 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 4 AS depth, 15 AS parent_id, -0.03396679668956259 AS `Score` UNION ALL SELECT 31 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 4 AS depth, 15 AS parent_id, -0.03337178375960518 AS `Score`) AS `Values`), 
`DT_Output_22` AS 
(SELECT `DT_node_lookup_22`.`KEY` AS `KEY`, `DT_node_lookup_22`.node_id_2 AS node_id_2, `DT_node_data_22`.node_id AS node_id, `DT_node_data_22`.feature AS feature, `DT_node_data_22`.threshold AS threshold, `DT_node_data_22`.depth AS depth, `DT_node_data_22`.parent_id AS parent_id, `DT_node_data_22`.`Score` AS `Score` 
FROM `DT_node_lookup_22` LEFT OUTER JOIN `DT_node_data_22` ON `DT_node_lookup_22`.node_id_2 = `DT_node_data_22`.node_id), 
`LGBM_Tree_1_7` AS 
(SELECT `DT_Output_22`.`KEY` AS `KEY`, 0.0 AS `Score_0`, `DT_Output_22`.`Score` AS `Score_1`, 0.0 AS `Score_2` 
FROM `DT_Output_22`), 
`DT_node_lookup_23` AS 
(SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_3` <= 1.65) THEN CASE WHEN (`ADS`.`Feature_2` <= 4.6) THEN CASE WHEN (`ADS`.`Feature_3` <= 1.25) THEN CASE WHEN (`ADS`.`Feature_1` <= 3.25) THEN 16 ELSE 17 END ELSE 9 END ELSE 5 END ELSE CASE WHEN (`ADS`.`Feature_1` <= 2.95) THEN 6 ELSE CASE WHEN (`ADS`.`Feature_2` <= 5.55) THEN 14 ELSE 15 END END END AS node_id_2 
FROM iris AS `ADS`), 
`DT_node_data_23` AS 
(SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 5 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, 2 AS parent_id, -0.0025493157009180163 AS `Score` UNION ALL SELECT 6 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, 3 AS parent_id, 0.05440541428036519 AS `Score` UNION ALL SELECT 9 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 4 AS parent_id, -0.034032537524411016 AS `Score` UNION ALL SELECT 14 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 7 AS parent_id, 0.04099709637488363 AS `Score` UNION ALL SELECT 15 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 7 AS parent_id, 0.05036662048593582 AS `Score` UNION ALL SELECT 16 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 4 AS depth, 8 AS parent_id, -0.03350915488901198 AS `Score` UNION ALL SELECT 17 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 4 AS depth, 8 AS parent_id, -0.03333011369294997 AS `Score`) AS `Values`), 
`DT_Output_23` AS 
(SELECT `DT_node_lookup_23`.`KEY` AS `KEY`, `DT_node_lookup_23`.node_id_2 AS node_id_2, `DT_node_data_23`.node_id AS node_id, `DT_node_data_23`.feature AS feature, `DT_node_data_23`.threshold AS threshold, `DT_node_data_23`.depth AS depth, `DT_node_data_23`.parent_id AS parent_id, `DT_node_data_23`.`Score` AS `Score` 
FROM `DT_node_lookup_23` LEFT OUTER JOIN `DT_node_data_23` ON `DT_node_lookup_23`.node_id_2 = `DT_node_data_23`.node_id), 
`LGBM_Tree_2_7` AS 
(SELECT `DT_Output_23`.`KEY` AS `KEY`, 0.0 AS `Score_0`, 0.0 AS `Score_1`, `DT_Output_23`.`Score` AS `Score_2` 
FROM `DT_Output_23`)
 SELECT `Score_Union_CTE_esu_2`.`KEY`, `Score_Union_CTE_esu_2`.`Score_0`, `Score_Union_CTE_esu_2`.`Score_1`, `Score_Union_CTE_esu_2`.`Score_2` 
FROM (SELECT `LGBM_Tree_1_5`.`KEY` AS `KEY`, `LGBM_Tree_1_5`.`Score_0` AS `Score_0`, `LGBM_Tree_1_5`.`Score_1` AS `Score_1`, `LGBM_Tree_1_5`.`Score_2` AS `Score_2` 
FROM `LGBM_Tree_1_5` UNION ALL SELECT `LGBM_Tree_2_5`.`KEY` AS `KEY`, `LGBM_Tree_2_5`.`Score_0` AS `Score_0`, `LGBM_Tree_2_5`.`Score_1` AS `Score_1`, `LGBM_Tree_2_5`.`Score_2` AS `Score_2` 
FROM `LGBM_Tree_2_5` UNION ALL SELECT `LGBM_Tree_0_6`.`KEY` AS `KEY`, `LGBM_Tree_0_6`.`Score_0` AS `Score_0`, `LGBM_Tree_0_6`.`Score_1` AS `Score_1`, `LGBM_Tree_0_6`.`Score_2` AS `Score_2` 
FROM `LGBM_Tree_0_6` UNION ALL SELECT `LGBM_Tree_1_6`.`KEY` AS `KEY`, `LGBM_Tree_1_6`.`Score_0` AS `Score_0`, `LGBM_Tree_1_6`.`Score_1` AS `Score_1`, `LGBM_Tree_1_6`.`Score_2` AS `Score_2` 
FROM `LGBM_Tree_1_6` UNION ALL SELECT `LGBM_Tree_2_6`.`KEY` AS `KEY`, `LGBM_Tree_2_6`.`Score_0` AS `Score_0`, `LGBM_Tree_2_6`.`Score_1` AS `Score_1`, `LGBM_Tree_2_6`.`Score_2` AS `Score_2` 
FROM `LGBM_Tree_2_6` UNION ALL SELECT `LGBM_Tree_0_7`.`KEY` AS `KEY`, `LGBM_Tree_0_7`.`Score_0` AS `Score_0`, `LGBM_Tree_0_7`.`Score_1` AS `Score_1`, `LGBM_Tree_0_7`.`Score_2` AS `Score_2` 
FROM `LGBM_Tree_0_7` UNION ALL SELECT `LGBM_Tree_1_7`.`KEY` AS `KEY`, `LGBM_Tree_1_7`.`Score_0` AS `Score_0`, `LGBM_Tree_1_7`.`Score_1` AS `Score_1`, `LGBM_Tree_1_7`.`Score_2` AS `Score_2` 
FROM `LGBM_Tree_1_7` UNION ALL SELECT `LGBM_Tree_2_7`.`KEY` AS `KEY`, `LGBM_Tree_2_7`.`Score_0` AS `Score_0`, `LGBM_Tree_2_7`.`Score_1` AS `Score_1`, `LGBM_Tree_2_7`.`Score_2` AS `Score_2` 
FROM `LGBM_Tree_2_7`) AS `Score_Union_CTE_esu_2`), 
`Score_Union_CTE_3` AS 
(WITH `DT_node_lookup_24` AS 
(SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_2` <= 3.15) THEN CASE WHEN (`ADS`.`Feature_1` <= 3.25) THEN 4 ELSE CASE WHEN (`ADS`.`Feature_3` <= 0.25) THEN 10 ELSE 11 END END ELSE CASE WHEN (`ADS`.`Feature_0` <= 6.05) THEN CASE WHEN (`ADS`.`Feature_2` <= 4.45) THEN 12 ELSE 13 END ELSE CASE WHEN (`ADS`.`Feature_2` <= 5.05) THEN 14 ELSE CASE WHEN (`ADS`.`Feature_3` <= 2.1500000000000004) THEN 30 ELSE 31 END END END END AS node_id_2 
FROM iris AS `ADS`), 
`DT_node_data_24` AS 
(SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, 2 AS parent_id, 0.042417504122344116 AS `Score` UNION ALL SELECT 10 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 5 AS parent_id, 0.04862759213799361 AS `Score` UNION ALL SELECT 11 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 5 AS parent_id, 0.04891230446313999 AS `Score` UNION ALL SELECT 12 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 6 AS parent_id, -0.03309499224165096 AS `Score` UNION ALL SELECT 13 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 6 AS parent_id, -0.033181242705844376 AS `Score` UNION ALL SELECT 14 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 7 AS parent_id, -0.032892912726030586 AS `Score` UNION ALL SELECT 30 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 4 AS depth, 15 AS parent_id, -0.033071457047793844 AS `Score` UNION ALL SELECT 31 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 4 AS depth, 15 AS parent_id, -0.032945320527295645 AS `Score`) AS `Values`), 
`DT_Output_24` AS 
(SELECT `DT_node_lookup_24`.`KEY` AS `KEY`, `DT_node_lookup_24`.node_id_2 AS node_id_2, `DT_node_data_24`.node_id AS node_id, `DT_node_data_24`.feature AS feature, `DT_node_data_24`.threshold AS threshold, `DT_node_data_24`.depth AS depth, `DT_node_data_24`.parent_id AS parent_id, `DT_node_data_24`.`Score` AS `Score` 
FROM `DT_node_lookup_24` LEFT OUTER JOIN `DT_node_data_24` ON `DT_node_lookup_24`.node_id_2 = `DT_node_data_24`.node_id), 
`LGBM_Tree_0_8` AS 
(SELECT `DT_Output_24`.`KEY` AS `KEY`, `DT_Output_24`.`Score` AS `Score_0`, 0.0 AS `Score_1`, 0.0 AS `Score_2` 
FROM `DT_Output_24`), 
`DT_node_lookup_25` AS 
(SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_2` <= 5.05) THEN CASE WHEN (`ADS`.`Feature_3` <= 0.45) THEN CASE WHEN (`ADS`.`Feature_2` <= 1.45) THEN 8 ELSE 9 END ELSE CASE WHEN (`ADS`.`Feature_2` <= 4.75) THEN CASE WHEN (`ADS`.`Feature_0` <= 5.55) THEN 20 ELSE CASE WHEN (`ADS`.`Feature_2` <= 4.45) THEN 42 ELSE 43 END END ELSE 11 END END ELSE CASE WHEN (`ADS`.`Feature_3` <= 2.05) THEN 6 ELSE 7 END END AS node_id_2 
FROM iris AS `ADS`), 
`DT_node_data_25` AS 
(SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 6 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, 3 AS parent_id, -0.03366622666833539 AS `Score` UNION ALL SELECT 7 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, 3 AS parent_id, -0.03293827231108526 AS `Score` UNION ALL SELECT 8 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 4 AS parent_id, -0.033027027411268305 AS `Score` UNION ALL SELECT 9 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 4 AS parent_id, -0.03329583034415464 AS `Score` UNION ALL SELECT 11 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 5 AS parent_id, 0.00817429960972705 AS `Score` UNION ALL SELECT 20 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 4 AS depth, 10 AS parent_id, 0.034549253061916106 AS `Score` UNION ALL SELECT 42 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 5 AS depth, 21 AS parent_id, 0.048577491056250796 AS `Score` UNION ALL SELECT 43 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 5 AS depth, 21 AS parent_id, 0.050657635210230124 AS `Score`) AS `Values`), 
`DT_Output_25` AS 
(SELECT `DT_node_lookup_25`.`KEY` AS `KEY`, `DT_node_lookup_25`.node_id_2 AS node_id_2, `DT_node_data_25`.node_id AS node_id, `DT_node_data_25`.feature AS feature, `DT_node_data_25`.threshold AS threshold, `DT_node_data_25`.depth AS depth, `DT_node_data_25`.parent_id AS parent_id, `DT_node_data_25`.`Score` AS `Score` 
FROM `DT_node_lookup_25` LEFT OUTER JOIN `DT_node_data_25` ON `DT_node_lookup_25`.node_id_2 = `DT_node_data_25`.node_id), 
`LGBM_Tree_1_8` AS 
(SELECT `DT_Output_25`.`KEY` AS `KEY`, 0.0 AS `Score_0`, `DT_Output_25`.`Score` AS `Score_1`, 0.0 AS `Score_2` 
FROM `DT_Output_25`), 
`DT_node_lookup_26` AS 
(SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_2` <= 4.85) THEN CASE WHEN (`ADS`.`Feature_2` <= 4.45) THEN CASE WHEN (`ADS`.`Feature_1` <= 3.25) THEN CASE WHEN (`ADS`.`Feature_1` <= 2.95) THEN 16 ELSE 17 END ELSE 9 END ELSE 5 END ELSE CASE WHEN (`ADS`.`Feature_2` <= 5.15) THEN 6 ELSE CASE WHEN (`ADS`.`Feature_3` <= 2.05) THEN 14 ELSE 15 END END END AS node_id_2 
FROM iris AS `ADS`), 
`DT_node_data_26` AS 
(SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 5 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, 2 AS parent_id, -0.019059990413341263 AS `Score` UNION ALL SELECT 6 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, 3 AS parent_id, 0.0336453648219278 AS `Score` UNION ALL SELECT 9 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 4 AS parent_id, -0.03286080315013184 AS `Score` UNION ALL SELECT 14 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 7 AS parent_id, 0.05001641435790253 AS `Score` UNION ALL SELECT 15 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 7 AS parent_id, 0.048194137389534764 AS `Score` UNION ALL SELECT 16 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 4 AS depth, 8 AS parent_id, -0.033033970758000485 AS `Score` UNION ALL SELECT 17 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 4 AS depth, 8 AS parent_id, -0.033139714107894985 AS `Score`) AS `Values`), 
`DT_Output_26` AS 
(SELECT `DT_node_lookup_26`.`KEY` AS `KEY`, `DT_node_lookup_26`.node_id_2 AS node_id_2, `DT_node_data_26`.node_id AS node_id, `DT_node_data_26`.feature AS feature, `DT_node_data_26`.threshold AS threshold, `DT_node_data_26`.depth AS depth, `DT_node_data_26`.parent_id AS parent_id, `DT_node_data_26`.`Score` AS `Score` 
FROM `DT_node_lookup_26` LEFT OUTER JOIN `DT_node_data_26` ON `DT_node_lookup_26`.node_id_2 = `DT_node_data_26`.node_id), 
`LGBM_Tree_2_8` AS 
(SELECT `DT_Output_26`.`KEY` AS `KEY`, 0.0 AS `Score_0`, 0.0 AS `Score_1`, `DT_Output_26`.`Score` AS `Score_2` 
FROM `DT_Output_26`), 
`DT_node_lookup_27` AS 
(SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_2` <= 3.15) THEN CASE WHEN (`ADS`.`Feature_1` <= 3.25) THEN 4 ELSE CASE WHEN (`ADS`.`Feature_3` <= 0.25) THEN 10 ELSE 11 END END ELSE CASE WHEN (`ADS`.`Feature_0` <= 6.05) THEN CASE WHEN (`ADS`.`Feature_2` <= 4.25) THEN 12 ELSE 13 END ELSE CASE WHEN (`ADS`.`Feature_2` <= 5.05) THEN 14 ELSE CASE WHEN (`ADS`.`Feature_2` <= 5.65) THEN 30 ELSE 31 END END END END AS node_id_2 
FROM iris AS `ADS`), 
`DT_node_data_27` AS 
(SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, 2 AS parent_id, 0.0406975382879471 AS `Score` UNION ALL SELECT 10 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 5 AS parent_id, 0.04677599690762868 AS `Score` UNION ALL SELECT 11 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 5 AS parent_id, 0.04717480621856278 AS `Score` UNION ALL SELECT 12 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 6 AS parent_id, -0.032692405941088555 AS `Score` UNION ALL SELECT 13 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 6 AS parent_id, -0.03279245344706372 AS `Score` UNION ALL SELECT 14 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 7 AS parent_id, -0.03246497531574342 AS `Score` UNION ALL SELECT 30 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 4 AS depth, 15 AS parent_id, -0.03264155728282917 AS `Score` UNION ALL SELECT 31 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 4 AS depth, 15 AS parent_id, -0.032538418119902636 AS `Score`) AS `Values`), 
`DT_Output_27` AS 
(SELECT `DT_node_lookup_27`.`KEY` AS `KEY`, `DT_node_lookup_27`.node_id_2 AS node_id_2, `DT_node_data_27`.node_id AS node_id, `DT_node_data_27`.feature AS feature, `DT_node_data_27`.threshold AS threshold, `DT_node_data_27`.depth AS depth, `DT_node_data_27`.parent_id AS parent_id, `DT_node_data_27`.`Score` AS `Score` 
FROM `DT_node_lookup_27` LEFT OUTER JOIN `DT_node_data_27` ON `DT_node_lookup_27`.node_id_2 = `DT_node_data_27`.node_id), 
`LGBM_Tree_0_9` AS 
(SELECT `DT_Output_27`.`KEY` AS `KEY`, `DT_Output_27`.`Score` AS `Score_0`, 0.0 AS `Score_1`, 0.0 AS `Score_2` 
FROM `DT_Output_27`), 
`DT_node_lookup_28` AS 
(SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_2` <= 5.05) THEN CASE WHEN (`ADS`.`Feature_2` <= 1.7999999999999998) THEN CASE WHEN (`ADS`.`Feature_2` <= 1.45) THEN 8 ELSE 9 END ELSE CASE WHEN (`ADS`.`Feature_2` <= 4.75) THEN CASE WHEN (`ADS`.`Feature_0` <= 5.55) THEN 20 ELSE CASE WHEN (`ADS`.`Feature_2` <= 4.45) THEN 42 ELSE 43 END END ELSE 11 END END ELSE CASE WHEN (`ADS`.`Feature_3` <= 2.05) THEN 6 ELSE 7 END END AS node_id_2 
FROM iris AS `ADS`), 
`DT_node_data_28` AS 
(SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 6 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, 3 AS parent_id, -0.03321806511406723 AS `Score` UNION ALL SELECT 7 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, 3 AS parent_id, -0.03250987705779451 AS `Score` UNION ALL SELECT 8 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 4 AS parent_id, -0.03260451748649296 AS `Score` UNION ALL SELECT 9 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 4 AS parent_id, -0.03292313978665267 AS `Score` UNION ALL SELECT 11 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 5 AS parent_id, 0.007994550049678887 AS `Score` UNION ALL SELECT 20 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 4 AS depth, 10 AS parent_id, 0.03343009815757802 AS `Score` UNION ALL SELECT 42 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 5 AS depth, 21 AS parent_id, 0.046730117824245215 AS `Score` UNION ALL SELECT 43 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 5 AS depth, 21 AS parent_id, 0.04877592813911532 AS `Score`) AS `Values`), 
`DT_Output_28` AS 
(SELECT `DT_node_lookup_28`.`KEY` AS `KEY`, `DT_node_lookup_28`.node_id_2 AS node_id_2, `DT_node_data_28`.node_id AS node_id, `DT_node_data_28`.feature AS feature, `DT_node_data_28`.threshold AS threshold, `DT_node_data_28`.depth AS depth, `DT_node_data_28`.parent_id AS parent_id, `DT_node_data_28`.`Score` AS `Score` 
FROM `DT_node_lookup_28` LEFT OUTER JOIN `DT_node_data_28` ON `DT_node_lookup_28`.node_id_2 = `DT_node_data_28`.node_id), 
`LGBM_Tree_1_9` AS 
(SELECT `DT_Output_28`.`KEY` AS `KEY`, 0.0 AS `Score_0`, `DT_Output_28`.`Score` AS `Score_1`, 0.0 AS `Score_2` 
FROM `DT_Output_28`), 
`DT_node_lookup_29` AS 
(SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_3` <= 1.65) THEN CASE WHEN (`ADS`.`Feature_2` <= 4.6) THEN CASE WHEN (`ADS`.`Feature_3` <= 1.25) THEN CASE WHEN (`ADS`.`Feature_1` <= 3.25) THEN 16 ELSE 17 END ELSE 9 END ELSE 5 END ELSE CASE WHEN (`ADS`.`Feature_1` <= 2.95) THEN 6 ELSE CASE WHEN (`ADS`.`Feature_2` <= 5.55) THEN 14 ELSE 15 END END END AS node_id_2 
FROM iris AS `ADS`), 
`DT_node_data_29` AS 
(SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 5 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, 2 AS parent_id, -0.0028143584028675773 AS `Score` UNION ALL SELECT 6 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, 3 AS parent_id, 0.05063058042004551 AS `Score` UNION ALL SELECT 9 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 4 AS parent_id, -0.03316871587158221 AS `Score` UNION ALL SELECT 14 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 7 AS parent_id, 0.03760774637449852 AS `Score` UNION ALL SELECT 15 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 7 AS parent_id, 0.04651780861496339 AS `Score` UNION ALL SELECT 16 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 4 AS depth, 8 AS parent_id, -0.032648636435285185 AS `Score` UNION ALL SELECT 17 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 4 AS depth, 8 AS parent_id, -0.03242176893146917 AS `Score`) AS `Values`), 
`DT_Output_29` AS 
(SELECT `DT_node_lookup_29`.`KEY` AS `KEY`, `DT_node_lookup_29`.node_id_2 AS node_id_2, `DT_node_data_29`.node_id AS node_id, `DT_node_data_29`.feature AS feature, `DT_node_data_29`.threshold AS threshold, `DT_node_data_29`.depth AS depth, `DT_node_data_29`.parent_id AS parent_id, `DT_node_data_29`.`Score` AS `Score` 
FROM `DT_node_lookup_29` LEFT OUTER JOIN `DT_node_data_29` ON `DT_node_lookup_29`.node_id_2 = `DT_node_data_29`.node_id), 
`LGBM_Tree_2_9` AS 
(SELECT `DT_Output_29`.`KEY` AS `KEY`, 0.0 AS `Score_0`, 0.0 AS `Score_1`, `DT_Output_29`.`Score` AS `Score_2` 
FROM `DT_Output_29`)
 SELECT `Score_Union_CTE_esu_3`.`KEY`, `Score_Union_CTE_esu_3`.`Score_0`, `Score_Union_CTE_esu_3`.`Score_1`, `Score_Union_CTE_esu_3`.`Score_2` 
FROM (SELECT `LGBM_Tree_0_8`.`KEY` AS `KEY`, `LGBM_Tree_0_8`.`Score_0` AS `Score_0`, `LGBM_Tree_0_8`.`Score_1` AS `Score_1`, `LGBM_Tree_0_8`.`Score_2` AS `Score_2` 
FROM `LGBM_Tree_0_8` UNION ALL SELECT `LGBM_Tree_1_8`.`KEY` AS `KEY`, `LGBM_Tree_1_8`.`Score_0` AS `Score_0`, `LGBM_Tree_1_8`.`Score_1` AS `Score_1`, `LGBM_Tree_1_8`.`Score_2` AS `Score_2` 
FROM `LGBM_Tree_1_8` UNION ALL SELECT `LGBM_Tree_2_8`.`KEY` AS `KEY`, `LGBM_Tree_2_8`.`Score_0` AS `Score_0`, `LGBM_Tree_2_8`.`Score_1` AS `Score_1`, `LGBM_Tree_2_8`.`Score_2` AS `Score_2` 
FROM `LGBM_Tree_2_8` UNION ALL SELECT `LGBM_Tree_0_9`.`KEY` AS `KEY`, `LGBM_Tree_0_9`.`Score_0` AS `Score_0`, `LGBM_Tree_0_9`.`Score_1` AS `Score_1`, `LGBM_Tree_0_9`.`Score_2` AS `Score_2` 
FROM `LGBM_Tree_0_9` UNION ALL SELECT `LGBM_Tree_1_9`.`KEY` AS `KEY`, `LGBM_Tree_1_9`.`Score_0` AS `Score_0`, `LGBM_Tree_1_9`.`Score_1` AS `Score_1`, `LGBM_Tree_1_9`.`Score_2` AS `Score_2` 
FROM `LGBM_Tree_1_9` UNION ALL SELECT `LGBM_Tree_2_9`.`KEY` AS `KEY`, `LGBM_Tree_2_9`.`Score_0` AS `Score_0`, `LGBM_Tree_2_9`.`Score_1` AS `Score_1`, `LGBM_Tree_2_9`.`Score_2` AS `Score_2` 
FROM `LGBM_Tree_2_9`) AS `Score_Union_CTE_esu_3`), 
`Score_Union_CTE` AS 
(SELECT `Score_Union_CTEbig_esu`.`KEY` AS `KEY`, `Score_Union_CTEbig_esu`.`Score_0` AS `Score_0`, `Score_Union_CTEbig_esu`.`Score_1` AS `Score_1`, `Score_Union_CTEbig_esu`.`Score_2` AS `Score_2` 
FROM (SELECT `Score_Union_CTE_0`.`KEY` AS `KEY`, `Score_Union_CTE_0`.`Score_0` AS `Score_0`, `Score_Union_CTE_0`.`Score_1` AS `Score_1`, `Score_Union_CTE_0`.`Score_2` AS `Score_2` 
FROM `Score_Union_CTE_0` UNION ALL SELECT `Score_Union_CTE_1`.`KEY` AS `KEY`, `Score_Union_CTE_1`.`Score_0` AS `Score_0`, `Score_Union_CTE_1`.`Score_1` AS `Score_1`, `Score_Union_CTE_1`.`Score_2` AS `Score_2` 
FROM `Score_Union_CTE_1` UNION ALL SELECT `Score_Union_CTE_2`.`KEY` AS `KEY`, `Score_Union_CTE_2`.`Score_0` AS `Score_0`, `Score_Union_CTE_2`.`Score_1` AS `Score_1`, `Score_Union_CTE_2`.`Score_2` AS `Score_2` 
FROM `Score_Union_CTE_2` UNION ALL SELECT `Score_Union_CTE_3`.`KEY` AS `KEY`, `Score_Union_CTE_3`.`Score_0` AS `Score_0`, `Score_Union_CTE_3`.`Score_1` AS `Score_1`, `Score_Union_CTE_3`.`Score_2` AS `Score_2` 
FROM `Score_Union_CTE_3`) AS `Score_Union_CTEbig_esu`), 
`LGBM_Sum_Scores` AS 
(SELECT `T`.`KEY` AS `KEY`, `T`.`Score_0` AS `Score_0`, `T`.`Score_1` AS `Score_1`, `T`.`Score_2` AS `Score_2` 
FROM (SELECT `Score_Union_CTE`.`KEY` AS `KEY`, sum(`Score_Union_CTE`.`Score_0`) AS `Score_0`, sum(`Score_Union_CTE`.`Score_1`) AS `Score_1`, sum(`Score_Union_CTE`.`Score_2`) AS `Score_2` 
FROM `Score_Union_CTE` GROUP BY `Score_Union_CTE`.`KEY`) AS `T`), 
orig_cte AS 
(SELECT `LGBM_Sum_Scores`.`KEY` AS `KEY`, `LGBM_Sum_Scores`.`Score_0` AS `Score_0`, `LGBM_Sum_Scores`.`Score_1` AS `Score_1`, `LGBM_Sum_Scores`.`Score_2` AS `Score_2`, NULL AS `Proba_0`, NULL AS `Proba_1`, NULL AS `Proba_2`, NULL AS `LogProba_0`, NULL AS `LogProba_1`, NULL AS `LogProba_2`, CAST(NULL AS SIGNED INTEGER) AS `Decision`, NULL AS `DecisionProba` 
FROM `LGBM_Sum_Scores`), 
score_class_union AS 
(SELECT scu.`KEY_u` AS `KEY_u`, scu.class AS class, scu.`LogProba` AS `LogProba`, scu.`Proba` AS `Proba`, scu.`Score` AS `Score` 
FROM (SELECT orig_cte.`KEY` AS `KEY_u`, 0 AS class, orig_cte.`LogProba_0` AS `LogProba`, orig_cte.`Proba_0` AS `Proba`, orig_cte.`Score_0` AS `Score` 
FROM orig_cte UNION ALL SELECT orig_cte.`KEY` AS `KEY_u`, 1 AS class, orig_cte.`LogProba_1` AS `LogProba`, orig_cte.`Proba_1` AS `Proba`, orig_cte.`Score_1` AS `Score` 
FROM orig_cte UNION ALL SELECT orig_cte.`KEY` AS `KEY_u`, 2 AS class, orig_cte.`LogProba_2` AS `LogProba`, orig_cte.`Proba_2` AS `Proba`, orig_cte.`Score_2` AS `Score` 
FROM orig_cte) AS scu), 
score_max AS 
(SELECT orig_cte.`KEY` AS `KEY`, orig_cte.`Score_0` AS `Score_0`, orig_cte.`Score_1` AS `Score_1`, orig_cte.`Score_2` AS `Score_2`, orig_cte.`Proba_0` AS `Proba_0`, orig_cte.`Proba_1` AS `Proba_1`, orig_cte.`Proba_2` AS `Proba_2`, orig_cte.`LogProba_0` AS `LogProba_0`, orig_cte.`LogProba_1` AS `LogProba_1`, orig_cte.`LogProba_2` AS `LogProba_2`, orig_cte.`Decision` AS `Decision`, orig_cte.`DecisionProba` AS `DecisionProba`, max_select.`KEY_m` AS `KEY_m`, max_select.`max_Score` AS `max_Score` 
FROM orig_cte LEFT OUTER JOIN (SELECT score_class_union.`KEY_u` AS `KEY_m`, max(score_class_union.`Score`) AS `max_Score` 
FROM score_class_union GROUP BY score_class_union.`KEY_u`) AS max_select ON orig_cte.`KEY` = max_select.`KEY_m`), 
score_soft_max_deltas AS 
(SELECT score_max.`KEY` AS `KEY`, score_max.`Score_0` AS `Score_0`, score_max.`Score_1` AS `Score_1`, score_max.`Score_2` AS `Score_2`, score_max.`Proba_0` AS `Proba_0`, score_max.`Proba_1` AS `Proba_1`, score_max.`Proba_2` AS `Proba_2`, score_max.`LogProba_0` AS `LogProba_0`, score_max.`LogProba_1` AS `LogProba_1`, score_max.`LogProba_2` AS `LogProba_2`, score_max.`Decision` AS `Decision`, score_max.`DecisionProba` AS `DecisionProba`, score_max.`KEY_m` AS `KEY_m`, score_max.`max_Score` AS `max_Score`, exp(score_max.`Score_0` - score_max.`max_Score`) AS `exp_delta_Score_0`, exp(score_max.`Score_1` - score_max.`max_Score`) AS `exp_delta_Score_1`, exp(score_max.`Score_2` - score_max.`max_Score`) AS `exp_delta_Score_2` 
FROM score_max), 
score_class_union_soft AS 
(SELECT soft_scu.`KEY` AS `KEY`, soft_scu.class AS class, soft_scu.`exp_delta_Score` AS `exp_delta_Score` 
FROM (SELECT score_soft_max_deltas.`KEY` AS `KEY`, 0 AS class, score_soft_max_deltas.`exp_delta_Score_0` AS `exp_delta_Score` 
FROM score_soft_max_deltas UNION ALL SELECT score_soft_max_deltas.`KEY` AS `KEY`, 1 AS class, score_soft_max_deltas.`exp_delta_Score_1` AS `exp_delta_Score` 
FROM score_soft_max_deltas UNION ALL SELECT score_soft_max_deltas.`KEY` AS `KEY`, 2 AS class, score_soft_max_deltas.`exp_delta_Score_2` AS `exp_delta_Score` 
FROM score_soft_max_deltas) AS soft_scu), 
score_soft_max AS 
(SELECT score_soft_max_deltas.`KEY` AS `KEY`, score_soft_max_deltas.`Score_0` AS `Score_0`, score_soft_max_deltas.`Score_1` AS `Score_1`, score_soft_max_deltas.`Score_2` AS `Score_2`, score_soft_max_deltas.`Proba_0` AS `Proba_0`, score_soft_max_deltas.`Proba_1` AS `Proba_1`, score_soft_max_deltas.`Proba_2` AS `Proba_2`, score_soft_max_deltas.`LogProba_0` AS `LogProba_0`, score_soft_max_deltas.`LogProba_1` AS `LogProba_1`, score_soft_max_deltas.`LogProba_2` AS `LogProba_2`, score_soft_max_deltas.`Decision` AS `Decision`, score_soft_max_deltas.`DecisionProba` AS `DecisionProba`, score_soft_max_deltas.`KEY_m` AS `KEY_m`, score_soft_max_deltas.`max_Score` AS `max_Score`, score_soft_max_deltas.`exp_delta_Score_0` AS `exp_delta_Score_0`, score_soft_max_deltas.`exp_delta_Score_1` AS `exp_delta_Score_1`, score_soft_max_deltas.`exp_delta_Score_2` AS `exp_delta_Score_2`, sum_exp_t.`KEY_sum` AS `KEY_sum`, sum_exp_t.`sum_ExpDeltaScore` AS `sum_ExpDeltaScore` 
FROM score_soft_max_deltas LEFT OUTER JOIN (SELECT score_class_union_soft.`KEY` AS `KEY_sum`, sum(score_class_union_soft.`exp_delta_Score`) AS `sum_ExpDeltaScore` 
FROM score_class_union_soft GROUP BY score_class_union_soft.`KEY`) AS sum_exp_t ON score_soft_max_deltas.`KEY` = sum_exp_t.`KEY_sum`), 
union_with_max AS 
(SELECT score_class_union.`KEY_u` AS `KEY_u`, score_class_union.class AS class, score_class_union.`LogProba` AS `LogProba`, score_class_union.`Proba` AS `Proba`, score_class_union.`Score` AS `Score`, score_soft_max.`KEY` AS `KEY`, score_soft_max.`Score_0` AS `Score_0`, score_soft_max.`Score_1` AS `Score_1`, score_soft_max.`Score_2` AS `Score_2`, score_soft_max.`Proba_0` AS `Proba_0`, score_soft_max.`Proba_1` AS `Proba_1`, score_soft_max.`Proba_2` AS `Proba_2`, score_soft_max.`LogProba_0` AS `LogProba_0`, score_soft_max.`LogProba_1` AS `LogProba_1`, score_soft_max.`LogProba_2` AS `LogProba_2`, score_soft_max.`Decision` AS `Decision`, score_soft_max.`DecisionProba` AS `DecisionProba`, score_soft_max.`KEY_m` AS `KEY_m`, score_soft_max.`max_Score` AS `max_Score`, score_soft_max.`exp_delta_Score_0` AS `exp_delta_Score_0`, score_soft_max.`exp_delta_Score_1` AS `exp_delta_Score_1`, score_soft_max.`exp_delta_Score_2` AS `exp_delta_Score_2`, score_soft_max.`KEY_sum` AS `KEY_sum`, score_soft_max.`sum_ExpDeltaScore` AS `sum_ExpDeltaScore` 
FROM score_class_union LEFT OUTER JOIN score_soft_max ON score_class_union.`KEY_u` = score_soft_max.`KEY`), 
arg_max_cte AS 
(SELECT score_soft_max.`KEY` AS `KEY`, score_soft_max.`Score_0` AS `Score_0`, score_soft_max.`Score_1` AS `Score_1`, score_soft_max.`Score_2` AS `Score_2`, score_soft_max.`Proba_0` AS `Proba_0`, score_soft_max.`Proba_1` AS `Proba_1`, score_soft_max.`Proba_2` AS `Proba_2`, score_soft_max.`LogProba_0` AS `LogProba_0`, score_soft_max.`LogProba_1` AS `LogProba_1`, score_soft_max.`LogProba_2` AS `LogProba_2`, score_soft_max.`Decision` AS `Decision`, score_soft_max.`DecisionProba` AS `DecisionProba`, score_soft_max.`KEY_m` AS `KEY_m`, score_soft_max.`max_Score` AS `max_Score`, score_soft_max.`exp_delta_Score_0` AS `exp_delta_Score_0`, score_soft_max.`exp_delta_Score_1` AS `exp_delta_Score_1`, score_soft_max.`exp_delta_Score_2` AS `exp_delta_Score_2`, score_soft_max.`KEY_sum` AS `KEY_sum`, score_soft_max.`sum_ExpDeltaScore` AS `sum_ExpDeltaScore`, `arg_max_t_Score`.`KEY_Score` AS `KEY_Score`, `arg_max_t_Score`.`arg_max_Score` AS `arg_max_Score`, soft_max_comp.`KEY_softmax` AS `KEY_softmax`, soft_max_comp.`SoftProba_0` AS `SoftProba_0`, soft_max_comp.`SoftProba_1` AS `SoftProba_1`, soft_max_comp.`SoftProba_2` AS `SoftProba_2` 
FROM score_soft_max LEFT OUTER JOIN (SELECT union_with_max.`KEY` AS `KEY_Score`, min(union_with_max.class) AS `arg_max_Score` 
FROM union_with_max 
WHERE union_with_max.`max_Score` <= union_with_max.`Score` GROUP BY union_with_max.`KEY`) AS `arg_max_t_Score` ON score_soft_max.`KEY` = `arg_max_t_Score`.`KEY_Score` LEFT OUTER JOIN (SELECT score_soft_max.`KEY` AS `KEY_softmax`, score_soft_max.`exp_delta_Score_0` / score_soft_max.`sum_ExpDeltaScore` AS `SoftProba_0`, score_soft_max.`exp_delta_Score_1` / score_soft_max.`sum_ExpDeltaScore` AS `SoftProba_1`, score_soft_max.`exp_delta_Score_2` / score_soft_max.`sum_ExpDeltaScore` AS `SoftProba_2` 
FROM score_soft_max) AS soft_max_comp ON soft_max_comp.`KEY_softmax` = `arg_max_t_Score`.`KEY_Score`)
 SELECT arg_max_cte.`KEY` AS `KEY`, NULL AS `Score_0`, NULL AS `Score_1`, NULL AS `Score_2`, arg_max_cte.`SoftProba_0` AS `Proba_0`, arg_max_cte.`SoftProba_1` AS `Proba_1`, arg_max_cte.`SoftProba_2` AS `Proba_2`, CASE WHEN (arg_max_cte.`SoftProba_0` IS NULL OR arg_max_cte.`SoftProba_0` > 0.0) THEN ln(arg_max_cte.`SoftProba_0`) ELSE -1.79769313486231e+308 END AS `LogProba_0`, CASE WHEN (arg_max_cte.`SoftProba_1` IS NULL OR arg_max_cte.`SoftProba_1` > 0.0) THEN ln(arg_max_cte.`SoftProba_1`) ELSE -1.79769313486231e+308 END AS `LogProba_1`, CASE WHEN (arg_max_cte.`SoftProba_2` IS NULL OR arg_max_cte.`SoftProba_2` > 0.0) THEN ln(arg_max_cte.`SoftProba_2`) ELSE -1.79769313486231e+308 END AS `LogProba_2`, arg_max_cte.`arg_max_Score` AS `Decision`, CASE WHEN (arg_max_cte.`SoftProba_0` <= CASE WHEN (arg_max_cte.`SoftProba_1` <= arg_max_cte.`SoftProba_2`) THEN arg_max_cte.`SoftProba_2` ELSE arg_max_cte.`SoftProba_1` END) THEN CASE WHEN (arg_max_cte.`SoftProba_1` <= arg_max_cte.`SoftProba_2`) THEN arg_max_cte.`SoftProba_2` ELSE arg_max_cte.`SoftProba_1` END ELSE arg_max_cte.`SoftProba_0` END AS `DecisionProba` 
FROM arg_max_cte