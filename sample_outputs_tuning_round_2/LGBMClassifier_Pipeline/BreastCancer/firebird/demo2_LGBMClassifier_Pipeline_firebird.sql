-- This SQL code was generated by sklearn2sql (development version).
-- Copyright 2017

WITH "ADS_imp_1_OUT" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_0" IS NULL) THEN 14.0777120879 ELSE "ADS"."Feature_0" END AS impter_2, CASE WHEN ("ADS"."Feature_1" IS NULL) THEN 19.0390549451 ELSE "ADS"."Feature_1" END AS impter_3, CASE WHEN ("ADS"."Feature_2" IS NULL) THEN 91.6617802198 ELSE "ADS"."Feature_2" END AS impter_4, CASE WHEN ("ADS"."Feature_3" IS NULL) THEN 650.967692308 ELSE "ADS"."Feature_3" END AS impter_5, CASE WHEN ("ADS"."Feature_4" IS NULL) THEN 0.0964218461538 ELSE "ADS"."Feature_4" END AS impter_6, CASE WHEN ("ADS"."Feature_5" IS NULL) THEN 0.104416131868 ELSE "ADS"."Feature_5" END AS impter_7, CASE WHEN ("ADS"."Feature_6" IS NULL) THEN 0.0882623268132 ELSE "ADS"."Feature_6" END AS impter_8, CASE WHEN ("ADS"."Feature_7" IS NULL) THEN 0.0485164 ELSE "ADS"."Feature_7" END AS impter_9, CASE WHEN ("ADS"."Feature_8" IS NULL) THEN 0.181588571429 ELSE "ADS"."Feature_8" END AS impter_10, CASE WHEN ("ADS"."Feature_9" IS NULL) THEN 0.0629403076923 ELSE "ADS"."Feature_9" END AS impter_11, CASE WHEN ("ADS"."Feature_10" IS NULL) THEN 0.409917362637 ELSE "ADS"."Feature_10" END AS impter_12, CASE WHEN ("ADS"."Feature_11" IS NULL) THEN 1.21706945055 ELSE "ADS"."Feature_11" END AS impter_13, CASE WHEN ("ADS"."Feature_12" IS NULL) THEN 2.90524901099 ELSE "ADS"."Feature_12" END AS impter_14, CASE WHEN ("ADS"."Feature_13" IS NULL) THEN 40.8798857143 ELSE "ADS"."Feature_13" END AS impter_15, CASE WHEN ("ADS"."Feature_14" IS NULL) THEN 0.00705597142857 ELSE "ADS"."Feature_14" END AS impter_16, CASE WHEN ("ADS"."Feature_15" IS NULL) THEN 0.0255678307692 ELSE "ADS"."Feature_15" END AS impter_17, CASE WHEN ("ADS"."Feature_16" IS NULL) THEN 0.0319992562637 ELSE "ADS"."Feature_16" END AS impter_18, CASE WHEN ("ADS"."Feature_17" IS NULL) THEN 0.0119723692308 ELSE "ADS"."Feature_17" END AS impter_19, CASE WHEN ("ADS"."Feature_18" IS NULL) THEN 0.0208962 ELSE "ADS"."Feature_18" END AS impter_20, CASE WHEN ("ADS"."Feature_19" IS NULL) THEN 0.00384655186813 ELSE "ADS"."Feature_19" END AS impter_21, CASE WHEN ("ADS"."Feature_20" IS NULL) THEN 16.1777648352 ELSE "ADS"."Feature_20" END AS impter_22, CASE WHEN ("ADS"."Feature_21" IS NULL) THEN 25.2650549451 ELSE "ADS"."Feature_21" END AS impter_23, CASE WHEN ("ADS"."Feature_22" IS NULL) THEN 106.68156044 ELSE "ADS"."Feature_22" END AS impter_24, CASE WHEN ("ADS"."Feature_23" IS NULL) THEN 870.863956044 ELSE "ADS"."Feature_23" END AS impter_25, CASE WHEN ("ADS"."Feature_24" IS NULL) THEN 0.13182756044 ELSE "ADS"."Feature_24" END AS impter_26, CASE WHEN ("ADS"."Feature_25" IS NULL) THEN 0.249918065934 ELSE "ADS"."Feature_25" END AS impter_27, CASE WHEN ("ADS"."Feature_26" IS NULL) THEN 0.265461593407 ELSE "ADS"."Feature_26" END AS impter_28, CASE WHEN ("ADS"."Feature_27" IS NULL) THEN 0.11348798022 ELSE "ADS"."Feature_27" END AS impter_29, CASE WHEN ("ADS"."Feature_28" IS NULL) THEN 0.289788131868 ELSE "ADS"."Feature_28" END AS impter_30, CASE WHEN ("ADS"."Feature_29" IS NULL) THEN 0.0836414505495 ELSE "ADS"."Feature_29" END AS impter_31 
FROM "BreastCancer" AS "ADS"), 
"ADS_sca_2_OUT" AS 
(SELECT "ADS_imp_1_OUT"."KEY" AS "KEY", (CAST("ADS_imp_1_OUT".impter_2 AS DOUBLE) - 14.0777120879) / 3.5451492987 AS scaler_2, (CAST("ADS_imp_1_OUT".impter_3 AS DOUBLE) - 19.0390549451) / 4.16229715042 AS scaler_3, (CAST("ADS_imp_1_OUT".impter_4 AS DOUBLE) - 91.6617802198) / 24.5039719435 AS scaler_4, (CAST("ADS_imp_1_OUT".impter_5 AS DOUBLE) - 650.967692308) / 355.702823164 AS scaler_5, (CAST("ADS_imp_1_OUT".impter_6 AS DOUBLE) - 0.0964218461538) / 0.0141978196631 AS scaler_6, (CAST("ADS_imp_1_OUT".impter_7 AS DOUBLE) - 0.104416131868) / 0.0534036946697 AS scaler_7, (CAST("ADS_imp_1_OUT".impter_8 AS DOUBLE) - 0.0882623268132) / 0.0819120016263 AS scaler_8, (CAST("ADS_imp_1_OUT".impter_9 AS DOUBLE) - 0.0485164) / 0.0393731173967 AS scaler_9, (CAST("ADS_imp_1_OUT".impter_10 AS DOUBLE) - 0.181588571429) / 0.0277900583287 AS scaler_10, (CAST("ADS_imp_1_OUT".impter_11 AS DOUBLE) - 0.0629403076923) / 0.00701935458617 AS scaler_11, (CAST("ADS_imp_1_OUT".impter_12 AS DOUBLE) - 0.409917362637) / 0.291204008368 AS scaler_12, (CAST("ADS_imp_1_OUT".impter_13 AS DOUBLE) - 1.21706945055) / 0.536389639634 AS scaler_13, (CAST("ADS_imp_1_OUT".impter_14 AS DOUBLE) - 2.90524901099) / 2.14249442998 AS scaler_14, (CAST("ADS_imp_1_OUT".impter_15 AS DOUBLE) - 40.8798857143) / 48.2247544796 AS scaler_15, (CAST("ADS_imp_1_OUT".impter_16 AS DOUBLE) - 0.00705597142857) / 0.00286365165657 AS scaler_16, (CAST("ADS_imp_1_OUT".impter_17 AS DOUBLE) - 0.0255678307692) / 0.017947013631 AS scaler_17, (CAST("ADS_imp_1_OUT".impter_18 AS DOUBLE) - 0.0319992562637) / 0.0316649367214 AS scaler_18, (CAST("ADS_imp_1_OUT".impter_19 AS DOUBLE) - 0.0119723692308) / 0.0063920055894 AS scaler_19, (CAST("ADS_imp_1_OUT".impter_20 AS DOUBLE) - 0.0208962) / 0.00858291007987 AS scaler_20, (CAST("ADS_imp_1_OUT".impter_21 AS DOUBLE) - 0.00384655186813) / 0.00274360758662 AS scaler_21, (CAST("ADS_imp_1_OUT".impter_22 AS DOUBLE) - 16.1777648352) / 4.8174588162 AS scaler_22, (CAST("ADS_imp_1_OUT".impter_23 AS DOUBLE) - 25.2650549451) / 5.92332412867 AS scaler_23, (CAST("ADS_imp_1_OUT".impter_24 AS DOUBLE) - 106.68156044) / 33.7038583761 AS scaler_24, (CAST("ADS_imp_1_OUT".impter_25 AS DOUBLE) - 870.863956044) / 566.995055987 AS scaler_25, (CAST("ADS_imp_1_OUT".impter_26 AS DOUBLE) - 0.13182756044) / 0.0227482075223 AS scaler_26, (CAST("ADS_imp_1_OUT".impter_27 AS DOUBLE) - 0.249918065934) / 0.152468936443 AS scaler_27, (CAST("ADS_imp_1_OUT".impter_28 AS DOUBLE) - 0.265461593407) / 0.206925686782 AS scaler_28, (CAST("ADS_imp_1_OUT".impter_29 AS DOUBLE) - 0.11348798022) / 0.0663814127852 AS scaler_29, (CAST("ADS_imp_1_OUT".impter_30 AS DOUBLE) - 0.289788131868) / 0.0622047066505 AS scaler_30, (CAST("ADS_imp_1_OUT".impter_31 AS DOUBLE) - 0.0836414505495) / 0.0170651458069 AS scaler_31 
FROM "ADS_imp_1_OUT"), 
"DT_node_lookup" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_29 <= 0.4814905022229726) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_2 <= 0.3941407806436441) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_15 <= -0.1222377548190969) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_29 <= 0.12370962647016473) THEN 16 ELSE 17 END ELSE 9 END ELSE 5 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_25 <= -0.08468143687840855) THEN 6 ELSE 7 END END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Score" AS "Score" 
FROM (SELECT 5 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, 2 AS parent_id, -0.04000000000000001 AS "Score" FROM rdb$database UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, 3 AS parent_id, -0.04000000000000001 AS "Score" FROM rdb$database UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, 3 AS parent_id, -0.1 AS "Score" FROM rdb$database UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, 4 AS parent_id, 0.06 AS "Score" FROM rdb$database UNION ALL SELECT 16 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS depth, 8 AS parent_id, 0.1 AS "Score" FROM rdb$database UNION ALL SELECT 17 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS depth, 8 AS parent_id, 0.08095238095238096 AS "Score" FROM rdb$database) AS "Values"), 
"DT_Output" AS 
(SELECT "DT_node_lookup"."KEY" AS "KEY", "DT_node_lookup".node_id_2 AS node_id_2, "DT_node_data".node_id AS node_id, "DT_node_data".feature AS feature, "DT_node_data".threshold AS threshold, "DT_node_data".depth AS depth, "DT_node_data".parent_id AS parent_id, "DT_node_data"."Score" AS "Score" 
FROM "DT_node_lookup" LEFT OUTER JOIN "DT_node_data" ON "DT_node_lookup".node_id_2 = "DT_node_data".node_id), 
"LGBM_Tree_0_0" AS 
(SELECT "DT_Output"."KEY" AS "KEY", "DT_Output"."Score" AS "Score_0" 
FROM "DT_Output"), 
"DT_node_lookup_1" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_29 <= 0.4814905022229726) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_22 <= 0.2007770490081396) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_15 <= -0.1665096235520762) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_21 <= -0.8173734024752998) THEN 16 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_29 <= 0.10337260826947875) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_2 <= -0.8540436051655906) THEN 68 ELSE 69 END ELSE 35 END END ELSE 9 END ELSE 5 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_24 <= 0.1815352857281907) THEN 6 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_2 <= 0.34759831202024893) THEN 14 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_2 <= 1.667711967520185) THEN 30 ELSE 31 END END END END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_1" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Score" AS "Score" 
FROM (SELECT 5 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, 2 AS parent_id, -0.03230897818240411 AS "Score" FROM rdb$database UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, 3 AS parent_id, -0.04045768523484709 AS "Score" FROM rdb$database UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, 4 AS parent_id, 0.06415724277379706 AS "Score" FROM rdb$database UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, 7 AS parent_id, -0.09550881644102747 AS "Score" FROM rdb$database UNION ALL SELECT 16 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS depth, 8 AS parent_id, 0.08573608771403994 AS "Score" FROM rdb$database UNION ALL SELECT 30 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS depth, 15 AS parent_id, -0.09524187224606032 AS "Score" FROM rdb$database UNION ALL SELECT 31 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS depth, 15 AS parent_id, -0.09524187224606034 AS "Score" FROM rdb$database UNION ALL SELECT 35 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS depth, 17 AS parent_id, 0.0965724762418598 AS "Score" FROM rdb$database UNION ALL SELECT 68 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 6 AS depth, 34 AS parent_id, 0.09524187224606034 AS "Score" FROM rdb$database UNION ALL SELECT 69 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 6 AS depth, 34 AS parent_id, 0.09524187224606034 AS "Score" FROM rdb$database) AS "Values"), 
"DT_Output_1" AS 
(SELECT "DT_node_lookup_1"."KEY" AS "KEY", "DT_node_lookup_1".node_id_2 AS node_id_2, "DT_node_data_1".node_id AS node_id, "DT_node_data_1".feature AS feature, "DT_node_data_1".threshold AS threshold, "DT_node_data_1".depth AS depth, "DT_node_data_1".parent_id AS parent_id, "DT_node_data_1"."Score" AS "Score" 
FROM "DT_node_lookup_1" LEFT OUTER JOIN "DT_node_data_1" ON "DT_node_lookup_1".node_id_2 = "DT_node_data_1".node_id), 
"LGBM_Tree_0_1" AS 
(SELECT "DT_Output_1"."KEY" AS "KEY", "DT_Output_1"."Score" AS "Score_0" 
FROM "DT_Output_1"), 
"DT_node_lookup_2" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_29 <= 0.4814905022229726) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_22 <= 0.14473090304172792) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_15 <= -0.1665096235520762) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_29 <= 0.06872435503868048) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_21 <= -0.8086257958142558) THEN 32 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_2 <= -0.07410466126445298) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_5 <= -0.3839376114391101) THEN 132 ELSE 133 END ELSE 67 END END ELSE 17 END ELSE 9 END ELSE 5 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_22 <= 0.0461312018045221) THEN 6 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_25 <= 0.29477513461738625) THEN 14 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_5 <= 0.7244314380197645) THEN 30 ELSE 31 END END END END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_2" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Score" AS "Score" 
FROM (SELECT 5 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, 2 AS parent_id, -0.023288840585682175 AS "Score" FROM rdb$database UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, 3 AS parent_id, -0.038378655240370325 AS "Score" FROM rdb$database UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, 4 AS parent_id, 0.06116093830098284 AS "Score" FROM rdb$database UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, 7 AS parent_id, -0.0914680518760358 AS "Score" FROM rdb$database UNION ALL SELECT 17 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS depth, 8 AS parent_id, 0.0917285543780594 AS "Score" FROM rdb$database UNION ALL SELECT 30 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS depth, 15 AS parent_id, -0.0911286442684719 AS "Score" FROM rdb$database UNION ALL SELECT 31 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS depth, 15 AS parent_id, -0.09113178077572359 AS "Score" FROM rdb$database UNION ALL SELECT 32 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS depth, 16 AS parent_id, 0.09148895595645089 AS "Score" FROM rdb$database UNION ALL SELECT 67 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 6 AS depth, 33 AS parent_id, 0.09113178077572348 AS "Score" FROM rdb$database UNION ALL SELECT 132 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 7 AS depth, 66 AS parent_id, 0.09113178077572362 AS "Score" FROM rdb$database UNION ALL SELECT 133 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 7 AS depth, 66 AS parent_id, 0.09113178077572359 AS "Score" FROM rdb$database) AS "Values"), 
"DT_Output_2" AS 
(SELECT "DT_node_lookup_2"."KEY" AS "KEY", "DT_node_lookup_2".node_id_2 AS node_id_2, "DT_node_data_2".node_id AS node_id, "DT_node_data_2".feature AS feature, "DT_node_data_2".threshold AS threshold, "DT_node_data_2".depth AS depth, "DT_node_data_2".parent_id AS parent_id, "DT_node_data_2"."Score" AS "Score" 
FROM "DT_node_lookup_2" LEFT OUTER JOIN "DT_node_data_2" ON "DT_node_lookup_2".node_id_2 = "DT_node_data_2".node_id), 
"LGBM_Tree_0_2" AS 
(SELECT "DT_Output_2"."KEY" AS "KEY", "DT_Output_2"."Score" AS "Score_0" 
FROM "DT_Output_2"), 
"DT_node_lookup_3" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_29 <= 0.4814905022229726) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_4 <= 0.30579612960318037) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_15 <= -0.1665096235520762) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_3 <= 1.1762603384645134) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_4 <= -0.06312365290607774) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_29 <= -0.05631064575072174) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_21 <= -0.7798315905549855) THEN 128 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_3 <= -0.012986805867397639) THEN 258 ELSE 259 END END ELSE 65 END ELSE 33 END ELSE 17 END ELSE 9 END ELSE 5 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_24 <= 0.1815352857281907) THEN 6 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_15 <= -0.012024648348003411) THEN 14 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_2 <= 0.5676172546035714) THEN 30 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_5 <= 1.0951060332541402) THEN 62 ELSE 63 END END END END END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_3" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Score" AS "Score" 
FROM (SELECT 5 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, 2 AS parent_id, -0.02990928880623474 AS "Score" FROM rdb$database UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, 3 AS parent_id, -0.036415943931300515 AS "Score" FROM rdb$database UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, 4 AS parent_id, 0.05730331712386634 AS "Score" FROM rdb$database UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, 7 AS parent_id, -0.08796059358089721 AS "Score" FROM rdb$database UNION ALL SELECT 17 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS depth, 8 AS parent_id, 0.07817601722943 AS "Score" FROM rdb$database UNION ALL SELECT 30 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS depth, 15 AS parent_id, -0.08754067178200796 AS "Score" FROM rdb$database UNION ALL SELECT 33 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS depth, 16 AS parent_id, 0.08930607187427494 AS "Score" FROM rdb$database UNION ALL SELECT 62 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS depth, 31 AS parent_id, -0.08754912159233402 AS "Score" FROM rdb$database UNION ALL SELECT 63 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS depth, 31 AS parent_id, -0.08754910073915209 AS "Score" FROM rdb$database UNION ALL SELECT 65 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 6 AS depth, 32 AS parent_id, 0.08791548141090583 AS "Score" FROM rdb$database UNION ALL SELECT 128 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 7 AS depth, 64 AS parent_id, 0.08777798545449643 AS "Score" FROM rdb$database UNION ALL SELECT 258 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 8 AS depth, 129 AS parent_id, 0.08754910073915212 AS "Score" FROM rdb$database UNION ALL SELECT 259 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 8 AS depth, 129 AS parent_id, 0.08754910073915204 AS "Score" FROM rdb$database) AS "Values"), 
"DT_Output_3" AS 
(SELECT "DT_node_lookup_3"."KEY" AS "KEY", "DT_node_lookup_3".node_id_2 AS node_id_2, "DT_node_data_3".node_id AS node_id, "DT_node_data_3".feature AS feature, "DT_node_data_3".threshold AS threshold, "DT_node_data_3".depth AS depth, "DT_node_data_3".parent_id AS parent_id, "DT_node_data_3"."Score" AS "Score" 
FROM "DT_node_lookup_3" LEFT OUTER JOIN "DT_node_data_3" ON "DT_node_lookup_3".node_id_2 = "DT_node_data_3".node_id), 
"LGBM_Tree_0_3" AS 
(SELECT "DT_Output_3"."KEY" AS "KEY", "DT_Output_3"."Score" AS "Score_0" 
FROM "DT_Output_3"), 
"DT_node_lookup_4" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_29 <= 0.4814905022229726) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_22 <= 0.2007770490081396) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_29 <= 0.1327483012260251) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_30 <= -1.236853865421935) THEN 16 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_15 <= -0.1665096235520762) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_21 <= -0.8086257958142558) THEN 68 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_23 <= 0.6609371646569523) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_7 <= 0.09987826057456228) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_24 <= -0.2795395213936112) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_29 <= -0.3707812049650318) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_3 <= 0.012239648709339968) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_2 <= -0.45772743294819523) THEN 4416 ELSE 4417 END ELSE 2209 END ELSE 1105 END ELSE 553 END ELSE 277 END ELSE 139 END END ELSE 35 END END ELSE 9 END ELSE 5 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_22 <= 0.0461312018045221) THEN 6 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_22 <= 0.488273019983993) THEN 14 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_15 <= 0.2597237543431877) THEN 30 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_20 <= 0.5614412775105531) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_5 <= 1.1963141138642084) THEN 124 ELSE 125 END ELSE 63 END END END END END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_4" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Score" AS "Score" 
FROM (SELECT 5 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, 2 AS parent_id, -0.0289843755605627 AS "Score" FROM rdb$database UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, 3 AS parent_id, -0.034593348823565594 AS "Score" FROM rdb$database UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, 4 AS parent_id, 0.0502504133343048 AS "Score" FROM rdb$database UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, 7 AS parent_id, -0.0848503839914949 AS "Score" FROM rdb$database UNION ALL SELECT 16 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS depth, 8 AS parent_id, 0.06579908679566565 AS "Score" FROM rdb$database UNION ALL SELECT 30 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS depth, 15 AS parent_id, -0.08439494695934668 AS "Score" FROM rdb$database UNION ALL SELECT 35 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS depth, 17 AS parent_id, 0.0886709459641411 AS "Score" FROM rdb$database UNION ALL SELECT 63 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS depth, 31 AS parent_id, -0.08440052850498105 AS "Score" FROM rdb$database UNION ALL SELECT 68 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 6 AS depth, 34 AS parent_id, 0.0847007869757812 AS "Score" FROM rdb$database UNION ALL SELECT 124 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 6 AS depth, 62 AS parent_id, -0.0844016329148227 AS "Score" FROM rdb$database UNION ALL SELECT 125 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 6 AS depth, 62 AS parent_id, -0.0844015024275224 AS "Score" FROM rdb$database UNION ALL SELECT 139 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 7 AS depth, 69 AS parent_id, 0.08462526910549796 AS "Score" FROM rdb$database UNION ALL SELECT 277 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 8 AS depth, 138 AS parent_id, 0.08444524477204798 AS "Score" FROM rdb$database UNION ALL SELECT 553 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 9 AS depth, 276 AS parent_id, 0.08437768380328019 AS "Score" FROM rdb$database UNION ALL SELECT 1105 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 10 AS depth, 552 AS parent_id, 0.084398953424154 AS "Score" FROM rdb$database UNION ALL SELECT 2209 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 11 AS depth, 1104 AS parent_id, 0.08440112774213744 AS "Score" FROM rdb$database UNION ALL SELECT 4416 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 12 AS depth, 2208 AS parent_id, 0.0844015024275224 AS "Score" FROM rdb$database UNION ALL SELECT 4417 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 12 AS depth, 2208 AS parent_id, 0.08440150242752233 AS "Score" FROM rdb$database) AS "Values"), 
"DT_Output_4" AS 
(SELECT "DT_node_lookup_4"."KEY" AS "KEY", "DT_node_lookup_4".node_id_2 AS node_id_2, "DT_node_data_4".node_id AS node_id, "DT_node_data_4".feature AS feature, "DT_node_data_4".threshold AS threshold, "DT_node_data_4".depth AS depth, "DT_node_data_4".parent_id AS parent_id, "DT_node_data_4"."Score" AS "Score" 
FROM "DT_node_lookup_4" LEFT OUTER JOIN "DT_node_data_4" ON "DT_node_lookup_4".node_id_2 = "DT_node_data_4".node_id), 
"LGBM_Tree_0_4" AS 
(SELECT "DT_Output_4"."KEY" AS "KEY", "DT_Output_4"."Score" AS "Score_0" 
FROM "DT_Output_4"), 
"DT_node_lookup_5" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_29 <= 0.4814905022229726) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_15 <= -0.04717257223671528) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_22 <= -0.08671892196771333) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_15 <= -0.23110300580183285) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_29 <= -0.02693495279417541) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_30 <= -1.0793095166468694) THEN 64 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_21 <= -0.7798315905549855) THEN 130 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_23 <= 0.4887365594151115) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_7 <= -0.0909325075383602) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_4 <= -0.3736855494653094) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_29 <= -0.5265476999243595) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_3 <= -0.23642111783278688) THEN 4192 ELSE 4193 END ELSE 2097 END ELSE 1049 END ELSE 525 END ELSE 263 END END END ELSE 33 END ELSE 17 END ELSE 9 END ELSE 5 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_24 <= 0.1815352857281907) THEN 6 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_15 <= 9.999999682655225e-21) THEN 14 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_4 <= 0.74429646843747) THEN 30 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_25 <= 1.1880809838510378) THEN 62 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_30 <= 0.3964630565726225) THEN 126 ELSE 127 END END END END END END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_5" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Score" AS "Score" 
FROM (SELECT 5 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, 2 AS parent_id, -0.015778610715333066 AS "Score" FROM rdb$database UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, 3 AS parent_id, -0.03286090399982385 AS "Score" FROM rdb$database UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, 4 AS parent_id, 0.05930694168900857 AS "Score" FROM rdb$database UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, 7 AS parent_id, -0.08209474286779704 AS "Score" FROM rdb$database UNION ALL SELECT 17 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS depth, 8 AS parent_id, 0.08352977404536156 AS "Score" FROM rdb$database UNION ALL SELECT 30 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS depth, 15 AS parent_id, -0.08160615040119966 AS "Score" FROM rdb$database UNION ALL SELECT 33 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS depth, 16 AS parent_id, 0.08251574557659615 AS "Score" FROM rdb$database UNION ALL SELECT 62 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS depth, 31 AS parent_id, -0.08161719673404609 AS "Score" FROM rdb$database UNION ALL SELECT 64 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 6 AS depth, 32 AS parent_id, 0.08199388150897778 AS "Score" FROM rdb$database UNION ALL SELECT 126 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 6 AS depth, 63 AS parent_id, -0.08161712364130608 AS "Score" FROM rdb$database UNION ALL SELECT 127 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 6 AS depth, 63 AS parent_id, -0.08161714900973431 AS "Score" FROM rdb$database UNION ALL SELECT 130 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 7 AS depth, 65 AS parent_id, 0.08183122345365489 AS "Score" FROM rdb$database UNION ALL SELECT 263 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 8 AS depth, 131 AS parent_id, 0.08173454435213567 AS "Score" FROM rdb$database UNION ALL SELECT 525 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 9 AS depth, 262 AS parent_id, 0.08161322515625674 AS "Score" FROM rdb$database UNION ALL SELECT 1049 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 10 AS depth, 524 AS parent_id, 0.08161740948570696 AS "Score" FROM rdb$database UNION ALL SELECT 2097 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 11 AS depth, 1048 AS parent_id, 0.0816171494441527 AS "Score" FROM rdb$database UNION ALL SELECT 4192 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 12 AS depth, 2096 AS parent_id, 0.08161712202378635 AS "Score" FROM rdb$database UNION ALL SELECT 4193 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 12 AS depth, 2096 AS parent_id, 0.08161712592720388 AS "Score" FROM rdb$database) AS "Values"), 
"DT_Output_5" AS 
(SELECT "DT_node_lookup_5"."KEY" AS "KEY", "DT_node_lookup_5".node_id_2 AS node_id_2, "DT_node_data_5".node_id AS node_id, "DT_node_data_5".feature AS feature, "DT_node_data_5".threshold AS threshold, "DT_node_data_5".depth AS depth, "DT_node_data_5".parent_id AS parent_id, "DT_node_data_5"."Score" AS "Score" 
FROM "DT_node_lookup_5" LEFT OUTER JOIN "DT_node_data_5" ON "DT_node_lookup_5".node_id_2 = "DT_node_data_5".node_id), 
"LGBM_Tree_0_5" AS 
(SELECT "DT_Output_5"."KEY" AS "KEY", "DT_Output_5"."Score" AS "Score_0" 
FROM "DT_Output_5"), 
"DT_node_lookup_6" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_29 <= 0.4814905022229726) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_24 <= 0.1815352857281907) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_15 <= -0.1665096235520762) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_24 <= -0.14483684286510518) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_29 <= -0.05631064575072174) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_30 <= -1.0793095166468694) THEN 64 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_21 <= -0.7798315905549855) THEN 130 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_3 <= 0.5840392857820569) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_12 <= -0.1693567437952079) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_3 <= -0.028603182510139782) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_7 <= -0.380144707097152) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_4 <= -0.4302069984448804) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_7 <= -0.7054967282906779) THEN 8384 ELSE 8385 END ELSE 4193 END ELSE 2097 END ELSE 1049 END ELSE 525 END ELSE 263 END END END ELSE 33 END ELSE 17 END ELSE 9 END ELSE 5 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_25 <= -0.07110107154948633) THEN 6 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_5 <= 0.22148350409917433) THEN 14 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_15 <= 0.2597237543431877) THEN 30 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_5 <= 1.0951060332541402) THEN 62 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_20 <= 0.15365417879574) THEN 126 ELSE 127 END END END END END END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_6" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Score" AS "Score" 
FROM (SELECT 5 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, 2 AS parent_id, -0.02010193426609226 AS "Score" FROM rdb$database UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, 3 AS parent_id, -0.031159386583738513 AS "Score" FROM rdb$database UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, 4 AS parent_id, 0.05016107443472237 AS "Score" FROM rdb$database UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, 7 AS parent_id, -0.07970661172692134 AS "Score" FROM rdb$database UNION ALL SELECT 17 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS depth, 8 AS parent_id, 0.08253790566212464 AS "Score" FROM rdb$database UNION ALL SELECT 30 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS depth, 15 AS parent_id, -0.07912430425017558 AS "Score" FROM rdb$database UNION ALL SELECT 33 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS depth, 16 AS parent_id, 0.07981407788953832 AS "Score" FROM rdb$database UNION ALL SELECT 62 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS depth, 31 AS parent_id, -0.07913932820228176 AS "Score" FROM rdb$database UNION ALL SELECT 64 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 6 AS depth, 32 AS parent_id, 0.07950431342386392 AS "Score" FROM rdb$database UNION ALL SELECT 126 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 6 AS depth, 63 AS parent_id, -0.07913912346318565 AS "Score" FROM rdb$database UNION ALL SELECT 127 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 6 AS depth, 63 AS parent_id, -0.07913914143636819 AS "Score" FROM rdb$database UNION ALL SELECT 130 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 7 AS depth, 65 AS parent_id, 0.07935717462062995 AS "Score" FROM rdb$database UNION ALL SELECT 263 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 8 AS depth, 131 AS parent_id, 0.07925273659387985 AS "Score" FROM rdb$database UNION ALL SELECT 525 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 9 AS depth, 262 AS parent_id, 0.07912867796496448 AS "Score" FROM rdb$database UNION ALL SELECT 1049 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 10 AS depth, 524 AS parent_id, 0.07913735802672024 AS "Score" FROM rdb$database UNION ALL SELECT 2097 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 11 AS depth, 1048 AS parent_id, 0.07913892298618636 AS "Score" FROM rdb$database UNION ALL SELECT 4193 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 12 AS depth, 2096 AS parent_id, 0.07913931521770814 AS "Score" FROM rdb$database UNION ALL SELECT 8384 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 13 AS depth, 4192 AS parent_id, 0.07913912415567705 AS "Score" FROM rdb$database UNION ALL SELECT 8385 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 13 AS depth, 4192 AS parent_id, 0.07913913914275315 AS "Score" FROM rdb$database) AS "Values"), 
"DT_Output_6" AS 
(SELECT "DT_node_lookup_6"."KEY" AS "KEY", "DT_node_lookup_6".node_id_2 AS node_id_2, "DT_node_data_6".node_id AS node_id, "DT_node_data_6".feature AS feature, "DT_node_data_6".threshold AS threshold, "DT_node_data_6".depth AS depth, "DT_node_data_6".parent_id AS parent_id, "DT_node_data_6"."Score" AS "Score" 
FROM "DT_node_lookup_6" LEFT OUTER JOIN "DT_node_data_6" ON "DT_node_lookup_6".node_id_2 = "DT_node_data_6".node_id), 
"LGBM_Tree_0_6" AS 
(SELECT "DT_Output_6"."KEY" AS "KEY", "DT_Output_6"."Score" AS "Score_0" 
FROM "DT_Output_6"), 
"DT_node_lookup_7" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_29 <= 0.4814905022229726) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_22 <= 0.14473090304172792) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_15 <= -0.1665096235520762) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_29 <= 0.06872435503868048) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_22 <= -0.1728639241012722) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_30 <= -1.0793095166468694) THEN 64 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_3 <= 0.6368947144190304) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_21 <= -0.7493972090467695) THEN 260 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_9 <= -0.45427949785569555) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_15 <= -0.3664069605946617) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_3 <= -0.028603182510139782) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_6 <= 0.2358216913306907) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_28 <= -0.6662372156425685) THEN 8352 ELSE 8353 END ELSE 4177 END ELSE 2089 END ELSE 1045 END ELSE 523 END END ELSE 131 END END ELSE 33 END ELSE 17 END ELSE 9 END ELSE 5 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_24 <= 0.1815352857281907) THEN 6 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_15 <= 9.999999682655225e-21) THEN 14 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_2 <= 0.6550606805020716) THEN 30 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_15 <= 0.6012495988547419) THEN 62 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_20 <= 0.24628010550381885) THEN 126 ELSE 127 END END END END END END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_7" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Score" AS "Score" 
FROM (SELECT 5 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, 2 AS parent_id, -0.021354853000659424 AS "Score" FROM rdb$database UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, 3 AS parent_id, -0.029703504355794774 AS "Score" FROM rdb$database UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, 4 AS parent_id, 0.049419816647966075 AS "Score" FROM rdb$database UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, 7 AS parent_id, -0.07745478233724046 AS "Score" FROM rdb$database UNION ALL SELECT 17 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS depth, 8 AS parent_id, 0.07846824845773723 AS "Score" FROM rdb$database UNION ALL SELECT 30 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS depth, 15 AS parent_id, -0.07690606846165851 AS "Score" FROM rdb$database UNION ALL SELECT 33 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS depth, 16 AS parent_id, 0.0772887391972093 AS "Score" FROM rdb$database UNION ALL SELECT 62 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS depth, 31 AS parent_id, -0.07692216094876751 AS "Score" FROM rdb$database UNION ALL SELECT 64 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 6 AS depth, 32 AS parent_id, 0.07722672556902248 AS "Score" FROM rdb$database UNION ALL SELECT 126 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 6 AS depth, 63 AS parent_id, -0.07692196806251088 AS "Score" FROM rdb$database UNION ALL SELECT 127 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 6 AS depth, 63 AS parent_id, -0.07692198189824767 AS "Score" FROM rdb$database UNION ALL SELECT 131 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 7 AS depth, 65 AS parent_id, 0.07709924930299417 AS "Score" FROM rdb$database UNION ALL SELECT 260 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 8 AS depth, 130 AS parent_id, 0.07704067764014655 AS "Score" FROM rdb$database UNION ALL SELECT 523 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 9 AS depth, 261 AS parent_id, 0.07691097521942858 AS "Score" FROM rdb$database UNION ALL SELECT 1045 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 10 AS depth, 522 AS parent_id, 0.07691662609789984 AS "Score" FROM rdb$database UNION ALL SELECT 2089 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 11 AS depth, 1044 AS parent_id, 0.07691983947657588 AS "Score" FROM rdb$database UNION ALL SELECT 4177 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 12 AS depth, 2088 AS parent_id, 0.07692184134520336 AS "Score" FROM rdb$database UNION ALL SELECT 8352 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 13 AS depth, 4176 AS parent_id, 0.07692196560501383 AS "Score" FROM rdb$database UNION ALL SELECT 8353 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 13 AS depth, 4176 AS parent_id, 0.07692206370241635 AS "Score" FROM rdb$database) AS "Values"), 
"DT_Output_7" AS 
(SELECT "DT_node_lookup_7"."KEY" AS "KEY", "DT_node_lookup_7".node_id_2 AS node_id_2, "DT_node_data_7".node_id AS node_id, "DT_node_data_7".feature AS feature, "DT_node_data_7".threshold AS threshold, "DT_node_data_7".depth AS depth, "DT_node_data_7".parent_id AS parent_id, "DT_node_data_7"."Score" AS "Score" 
FROM "DT_node_lookup_7" LEFT OUTER JOIN "DT_node_data_7" ON "DT_node_lookup_7".node_id_2 = "DT_node_data_7".node_id), 
"LGBM_Tree_0_7" AS 
(SELECT "DT_Output_7"."KEY" AS "KEY", "DT_Output_7"."Score" AS "Score_0" 
FROM "DT_Output_7"), 
"DT_node_lookup_8" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_24 <= 0.22900759534176107) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_29 <= 0.4814905022229726) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_15 <= -0.1222377548190969) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_23 <= 1.083841592236179) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_4 <= 0.06420264371216168) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_15 <= -0.25536440459227105) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_29 <= -0.12033459193806634) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_30 <= -1.0318854524747834) THEN 256 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_16 <= -0.9356834384603139) THEN 514 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_31 <= -0.8395152735007787) THEN 1030 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_3 <= -0.012986805867397639) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_3 <= -0.4502453518641811) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_3 <= -0.9787996382339188) THEN 8248 ELSE 8249 END ELSE 4125 END ELSE 2063 END END END END ELSE 129 END ELSE 65 END ELSE 33 END ELSE 17 END ELSE 9 END ELSE 5 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_22 <= 0.488273019983993) THEN 6 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_29 <= 0.6072787259086964) THEN 14 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_15 <= 0.31218643719772515) THEN 30 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_23 <= 0.19751494760905725) THEN 62 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_3 <= 1.0261028707458375) THEN 126 ELSE 127 END END END END END END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_8" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Score" AS "Score" 
FROM (SELECT 5 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, 2 AS parent_id, -0.03368797530810724 AS "Score" FROM rdb$database UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, 3 AS parent_id, -0.04339442319490749 AS "Score" FROM rdb$database UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, 4 AS parent_id, 0.03446828588506969 AS "Score" FROM rdb$database UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, 7 AS parent_id, -0.08396383119864272 AS "Score" FROM rdb$database UNION ALL SELECT 17 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS depth, 8 AS parent_id, 0.058363930514863854 AS "Score" FROM rdb$database UNION ALL SELECT 30 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS depth, 15 AS parent_id, -0.07491630762229064 AS "Score" FROM rdb$database UNION ALL SELECT 33 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS depth, 16 AS parent_id, 0.0817494691927559 AS "Score" FROM rdb$database UNION ALL SELECT 62 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS depth, 31 AS parent_id, -0.07492749358448093 AS "Score" FROM rdb$database UNION ALL SELECT 65 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 6 AS depth, 32 AS parent_id, 0.0764798225402323 AS "Score" FROM rdb$database UNION ALL SELECT 126 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 6 AS depth, 63 AS parent_id, -0.07492888043446945 AS "Score" FROM rdb$database UNION ALL SELECT 127 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 6 AS depth, 63 AS parent_id, -0.07492872102227657 AS "Score" FROM rdb$database UNION ALL SELECT 129 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 7 AS depth, 64 AS parent_id, 0.07531955390019879 AS "Score" FROM rdb$database UNION ALL SELECT 256 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 8 AS depth, 128 AS parent_id, 0.07514216849846839 AS "Score" FROM rdb$database UNION ALL SELECT 514 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 9 AS depth, 257 AS parent_id, 0.07505795656154543 AS "Score" FROM rdb$database UNION ALL SELECT 1030 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 10 AS depth, 515 AS parent_id, 0.07496786225849894 AS "Score" FROM rdb$database UNION ALL SELECT 2063 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 11 AS depth, 1031 AS parent_id, 0.0749249350358208 AS "Score" FROM rdb$database UNION ALL SELECT 4125 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 12 AS depth, 2062 AS parent_id, 0.07492829727306013 AS "Score" FROM rdb$database UNION ALL SELECT 8248 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 13 AS depth, 4124 AS parent_id, 0.07492864377936302 AS "Score" FROM rdb$database UNION ALL SELECT 8249 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 13 AS depth, 4124 AS parent_id, 0.07492885863037348 AS "Score" FROM rdb$database) AS "Values"), 
"DT_Output_8" AS 
(SELECT "DT_node_lookup_8"."KEY" AS "KEY", "DT_node_lookup_8".node_id_2 AS node_id_2, "DT_node_data_8".node_id AS node_id, "DT_node_data_8".feature AS feature, "DT_node_data_8".threshold AS threshold, "DT_node_data_8".depth AS depth, "DT_node_data_8".parent_id AS parent_id, "DT_node_data_8"."Score" AS "Score" 
FROM "DT_node_lookup_8" LEFT OUTER JOIN "DT_node_data_8" ON "DT_node_lookup_8".node_id_2 = "DT_node_data_8".node_id), 
"LGBM_Tree_0_8" AS 
(SELECT "DT_Output_8"."KEY" AS "KEY", "DT_Output_8"."Score" AS "Score_0" 
FROM "DT_Output_8"), 
"DT_node_lookup_9" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_29 <= 0.4814905022229726) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_15 <= -0.04717257223671528) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_22 <= -0.08671892196771333) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_15 <= -0.24022695064610022) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_29 <= -0.05631064575072174) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_23 <= 0.6609371646569523) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_30 <= -1.013398105424648) THEN 128 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_21 <= -0.7105797044883864) THEN 258 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_15 <= -0.4016585656747857) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_20 <= 0.27948562639916796) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_19 <= -0.8196753206005603) THEN 2072 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_6 <= 0.11432416277096254) THEN 4146 ELSE 4147 END END ELSE 1037 END ELSE 519 END END END ELSE 65 END ELSE 33 END ELSE 17 END ELSE 9 END ELSE 5 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_22 <= 0.0461312018045221) THEN 6 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_22 <= 0.5391297079905516) THEN 14 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_29 <= 0.855089058798536) THEN 30 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_15 <= 0.5522083953168047) THEN 62 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_10 <= 0.4807988674714799) THEN 126 ELSE 127 END END END END END END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_9" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Score" AS "Score" 
FROM (SELECT 5 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, 2 AS parent_id, -0.015821571228657846 AS "Score" FROM rdb$database UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, 3 AS parent_id, -0.02659349034910502 AS "Score" FROM rdb$database UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, 4 AS parent_id, 0.051905581695659266 AS "Score" FROM rdb$database UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, 7 AS parent_id, -0.07437142480265439 AS "Score" FROM rdb$database UNION ALL SELECT 17 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS depth, 8 AS parent_id, 0.07524913022232341 AS "Score" FROM rdb$database UNION ALL SELECT 30 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS depth, 15 AS parent_id, -0.07303938768258349 AS "Score" FROM rdb$database UNION ALL SELECT 33 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS depth, 16 AS parent_id, 0.07388379920312226 AS "Score" FROM rdb$database UNION ALL SELECT 62 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS depth, 31 AS parent_id, -0.07312292618084704 AS "Score" FROM rdb$database UNION ALL SELECT 65 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 6 AS depth, 32 AS parent_id, 0.07359624061896614 AS "Score" FROM rdb$database UNION ALL SELECT 126 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 6 AS depth, 63 AS parent_id, -0.07312911598375708 AS "Score" FROM rdb$database UNION ALL SELECT 127 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 6 AS depth, 63 AS parent_id, -0.07312918727986416 AS "Score" FROM rdb$database UNION ALL SELECT 128 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 7 AS depth, 64 AS parent_id, 0.07331419135692098 AS "Score" FROM rdb$database UNION ALL SELECT 258 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 8 AS depth, 129 AS parent_id, 0.07320708648478759 AS "Score" FROM rdb$database UNION ALL SELECT 519 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 9 AS depth, 259 AS parent_id, 0.07312403141007828 AS "Score" FROM rdb$database UNION ALL SELECT 1037 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 10 AS depth, 518 AS parent_id, 0.07312706228689404 AS "Score" FROM rdb$database UNION ALL SELECT 2072 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 11 AS depth, 1036 AS parent_id, 0.07312786422499462 AS "Score" FROM rdb$database UNION ALL SELECT 4146 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 12 AS depth, 2073 AS parent_id, 0.07312911207552088 AS "Score" FROM rdb$database UNION ALL SELECT 4147 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 12 AS depth, 2073 AS parent_id, 0.07312880288119332 AS "Score" FROM rdb$database) AS "Values"), 
"DT_Output_9" AS 
(SELECT "DT_node_lookup_9"."KEY" AS "KEY", "DT_node_lookup_9".node_id_2 AS node_id_2, "DT_node_data_9".node_id AS node_id, "DT_node_data_9".feature AS feature, "DT_node_data_9".threshold AS threshold, "DT_node_data_9".depth AS depth, "DT_node_data_9".parent_id AS parent_id, "DT_node_data_9"."Score" AS "Score" 
FROM "DT_node_lookup_9" LEFT OUTER JOIN "DT_node_data_9" ON "DT_node_lookup_9".node_id_2 = "DT_node_data_9".node_id), 
"LGBM_Tree_0_9" AS 
(SELECT "DT_Output_9"."KEY" AS "KEY", "DT_Output_9"."Score" AS "Score_0" 
FROM "DT_Output_9"), 
"Score_Union_CTE" AS 
(SELECT ensemble_score_union."KEY" AS "KEY", ensemble_score_union."Score_0" AS "Score_0" 
FROM (SELECT "LGBM_Tree_0_0"."KEY" AS "KEY", "LGBM_Tree_0_0"."Score_0" AS "Score_0" 
FROM "LGBM_Tree_0_0" UNION ALL SELECT "LGBM_Tree_0_1"."KEY" AS "KEY", "LGBM_Tree_0_1"."Score_0" AS "Score_0" 
FROM "LGBM_Tree_0_1" UNION ALL SELECT "LGBM_Tree_0_2"."KEY" AS "KEY", "LGBM_Tree_0_2"."Score_0" AS "Score_0" 
FROM "LGBM_Tree_0_2" UNION ALL SELECT "LGBM_Tree_0_3"."KEY" AS "KEY", "LGBM_Tree_0_3"."Score_0" AS "Score_0" 
FROM "LGBM_Tree_0_3" UNION ALL SELECT "LGBM_Tree_0_4"."KEY" AS "KEY", "LGBM_Tree_0_4"."Score_0" AS "Score_0" 
FROM "LGBM_Tree_0_4" UNION ALL SELECT "LGBM_Tree_0_5"."KEY" AS "KEY", "LGBM_Tree_0_5"."Score_0" AS "Score_0" 
FROM "LGBM_Tree_0_5" UNION ALL SELECT "LGBM_Tree_0_6"."KEY" AS "KEY", "LGBM_Tree_0_6"."Score_0" AS "Score_0" 
FROM "LGBM_Tree_0_6" UNION ALL SELECT "LGBM_Tree_0_7"."KEY" AS "KEY", "LGBM_Tree_0_7"."Score_0" AS "Score_0" 
FROM "LGBM_Tree_0_7" UNION ALL SELECT "LGBM_Tree_0_8"."KEY" AS "KEY", "LGBM_Tree_0_8"."Score_0" AS "Score_0" 
FROM "LGBM_Tree_0_8" UNION ALL SELECT "LGBM_Tree_0_9"."KEY" AS "KEY", "LGBM_Tree_0_9"."Score_0" AS "Score_0" 
FROM "LGBM_Tree_0_9") AS ensemble_score_union), 
"LGBM_Sum_Scores" AS 
(SELECT "T"."KEY" AS "KEY", "T"."Score_0" AS "Score_0" 
FROM (SELECT "Score_Union_CTE"."KEY" AS "KEY", sum("Score_Union_CTE"."Score_0") AS "Score_0" 
FROM "Score_Union_CTE" GROUP BY "Score_Union_CTE"."KEY") AS "T"), 
orig_cte AS 
(SELECT "LGBM_Sum_Scores"."KEY" AS "KEY", "LGBM_Sum_Scores"."Score_0" AS "Score_0", CAST(NULL AS FLOAT) AS "Score_1", 1.0 - 1.0 / (1.0 + exp(CASE WHEN (CASE WHEN (CASE WHEN (-"LGBM_Sum_Scores"."Score_0" <= -100.0) THEN -100.0 ELSE -"LGBM_Sum_Scores"."Score_0" END >= 100.0) THEN 100.0 ELSE CASE WHEN (-"LGBM_Sum_Scores"."Score_0" <= -100.0) THEN -100.0 ELSE -"LGBM_Sum_Scores"."Score_0" END END >= -709.782712893) THEN CASE WHEN (CASE WHEN (-"LGBM_Sum_Scores"."Score_0" <= -100.0) THEN -100.0 ELSE -"LGBM_Sum_Scores"."Score_0" END >= 100.0) THEN 100.0 ELSE CASE WHEN (-"LGBM_Sum_Scores"."Score_0" <= -100.0) THEN -100.0 ELSE -"LGBM_Sum_Scores"."Score_0" END END ELSE -709.782712893 END)) AS "Proba_0", 1.0 / (1.0 + exp(CASE WHEN (CASE WHEN (CASE WHEN (-"LGBM_Sum_Scores"."Score_0" <= -100.0) THEN -100.0 ELSE -"LGBM_Sum_Scores"."Score_0" END >= 100.0) THEN 100.0 ELSE CASE WHEN (-"LGBM_Sum_Scores"."Score_0" <= -100.0) THEN -100.0 ELSE -"LGBM_Sum_Scores"."Score_0" END END >= -709.782712893) THEN CASE WHEN (CASE WHEN (-"LGBM_Sum_Scores"."Score_0" <= -100.0) THEN -100.0 ELSE -"LGBM_Sum_Scores"."Score_0" END >= 100.0) THEN 100.0 ELSE CASE WHEN (-"LGBM_Sum_Scores"."Score_0" <= -100.0) THEN -100.0 ELSE -"LGBM_Sum_Scores"."Score_0" END END ELSE -709.782712893 END)) AS "Proba_1", CAST(NULL AS FLOAT) AS "LogProba_0", CAST(NULL AS FLOAT) AS "LogProba_1", CAST(NULL AS INTEGER) AS "Decision", CAST(NULL AS FLOAT) AS "DecisionProba" 
FROM "LGBM_Sum_Scores"), 
score_class_union AS 
(SELECT scu."KEY_u" AS "KEY_u", scu.class AS class, scu."LogProba" AS "LogProba", scu."Proba" AS "Proba", scu."Score" AS "Score" 
FROM (SELECT orig_cte."KEY" AS "KEY_u", 0 AS class, orig_cte."LogProba_0" AS "LogProba", orig_cte."Proba_0" AS "Proba", orig_cte."Score_0" AS "Score" 
FROM orig_cte UNION ALL SELECT orig_cte."KEY" AS "KEY_u", 1 AS class, orig_cte."LogProba_1" AS "LogProba", orig_cte."Proba_1" AS "Proba", orig_cte."Score_1" AS "Score" 
FROM orig_cte) AS scu), 
score_max AS 
(SELECT orig_cte."KEY" AS "KEY", orig_cte."Score_0" AS "Score_0", orig_cte."Score_1" AS "Score_1", orig_cte."Proba_0" AS "Proba_0", orig_cte."Proba_1" AS "Proba_1", orig_cte."LogProba_0" AS "LogProba_0", orig_cte."LogProba_1" AS "LogProba_1", orig_cte."Decision" AS "Decision", orig_cte."DecisionProba" AS "DecisionProba", max_select."KEY_m" AS "KEY_m", max_select."max_Proba" AS "max_Proba" 
FROM orig_cte LEFT OUTER JOIN (SELECT score_class_union."KEY_u" AS "KEY_m", max(score_class_union."Proba") AS "max_Proba" 
FROM score_class_union GROUP BY score_class_union."KEY_u") AS max_select ON orig_cte."KEY" = max_select."KEY_m"), 
union_with_max AS 
(SELECT score_class_union."KEY_u" AS "KEY_u", score_class_union.class AS class, score_class_union."LogProba" AS "LogProba", score_class_union."Proba" AS "Proba", score_class_union."Score" AS "Score", score_max."KEY" AS "KEY", score_max."Score_0" AS "Score_0", score_max."Score_1" AS "Score_1", score_max."Proba_0" AS "Proba_0", score_max."Proba_1" AS "Proba_1", score_max."LogProba_0" AS "LogProba_0", score_max."LogProba_1" AS "LogProba_1", score_max."Decision" AS "Decision", score_max."DecisionProba" AS "DecisionProba", score_max."KEY_m" AS "KEY_m", score_max."max_Proba" AS "max_Proba" 
FROM score_class_union LEFT OUTER JOIN score_max ON score_class_union."KEY_u" = score_max."KEY"), 
arg_max_cte AS 
(SELECT score_max."KEY" AS "KEY", score_max."Score_0" AS "Score_0", score_max."Score_1" AS "Score_1", score_max."Proba_0" AS "Proba_0", score_max."Proba_1" AS "Proba_1", score_max."LogProba_0" AS "LogProba_0", score_max."LogProba_1" AS "LogProba_1", score_max."Decision" AS "Decision", score_max."DecisionProba" AS "DecisionProba", score_max."KEY_m" AS "KEY_m", score_max."max_Proba" AS "max_Proba", "arg_max_t_Proba"."KEY_Proba" AS "KEY_Proba", "arg_max_t_Proba"."arg_max_Proba" AS "arg_max_Proba" 
FROM score_max LEFT OUTER JOIN (SELECT union_with_max."KEY" AS "KEY_Proba", min(union_with_max.class) AS "arg_max_Proba" 
FROM union_with_max 
WHERE union_with_max."max_Proba" <= union_with_max."Proba" GROUP BY union_with_max."KEY") AS "arg_max_t_Proba" ON score_max."KEY" = "arg_max_t_Proba"."KEY_Proba")
 SELECT arg_max_cte."KEY" AS "KEY", CAST(NULL AS FLOAT) AS "Score_0", CAST(NULL AS FLOAT) AS "Score_1", arg_max_cte."Proba_0" AS "Proba_0", arg_max_cte."Proba_1" AS "Proba_1", CASE WHEN (arg_max_cte."Proba_0" IS NULL OR arg_max_cte."Proba_0" > 0.0) THEN ln(arg_max_cte."Proba_0") ELSE -1.79769313486231e+308 END AS "LogProba_0", CASE WHEN (arg_max_cte."Proba_1" IS NULL OR arg_max_cte."Proba_1" > 0.0) THEN ln(arg_max_cte."Proba_1") ELSE -1.79769313486231e+308 END AS "LogProba_1", arg_max_cte."arg_max_Proba" AS "Decision", arg_max_cte."max_Proba" AS "DecisionProba" 
FROM arg_max_cte