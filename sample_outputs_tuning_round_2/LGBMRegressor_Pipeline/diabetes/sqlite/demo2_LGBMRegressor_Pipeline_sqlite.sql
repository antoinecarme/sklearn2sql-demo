-- This SQL code was generated by sklearn2sql (development version).
-- Copyright 2017

WITH "Score_Union_CTE_0" AS 
(WITH "ADS_imp_1_OUT" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_0" IS NULL) THEN 0.000268693206665 ELSE "ADS"."Feature_0" END AS impter_2, CASE WHEN ("ADS"."Feature_1" IS NULL) THEN 0.000723958058064 ELSE "ADS"."Feature_1" END AS impter_3, CASE WHEN ("ADS"."Feature_2" IS NULL) THEN 0.000728071982559 ELSE "ADS"."Feature_2" END AS impter_4, CASE WHEN ("ADS"."Feature_3" IS NULL) THEN 0.00101356522108 ELSE "ADS"."Feature_3" END AS impter_5, CASE WHEN ("ADS"."Feature_4" IS NULL) THEN 0.000976358073288 ELSE "ADS"."Feature_4" END AS impter_6, CASE WHEN ("ADS"."Feature_5" IS NULL) THEN 0.00176438082423 ELSE "ADS"."Feature_5" END AS impter_7, CASE WHEN ("ADS"."Feature_6" IS NULL) THEN -0.00165128154506 ELSE "ADS"."Feature_6" END AS impter_8, CASE WHEN ("ADS"."Feature_7" IS NULL) THEN 0.00139055019834 ELSE "ADS"."Feature_7" END AS impter_9, CASE WHEN ("ADS"."Feature_8" IS NULL) THEN 0.00127264825481 ELSE "ADS"."Feature_8" END AS impter_10, CASE WHEN ("ADS"."Feature_9" IS NULL) THEN 0.00103442500568 ELSE "ADS"."Feature_9" END AS impter_11 
FROM diabetes AS "ADS"), 
"ADS_sca_2_OUT" AS 
(SELECT "ADS_imp_1_OUT"."KEY" AS "KEY", (CAST("ADS_imp_1_OUT".impter_2 AS FLOAT) - 0.000268693206665) / 0.0472420958365 AS scaler_2, (CAST("ADS_imp_1_OUT".impter_3 AS FLOAT) - 0.000723958058064) / 0.047605576685 AS scaler_3, (CAST("ADS_imp_1_OUT".impter_4 AS FLOAT) - 0.000728071982559) / 0.0469359114394 AS scaler_4, (CAST("ADS_imp_1_OUT".impter_5 AS FLOAT) - 0.00101356522108) / 0.048335271949 AS scaler_5, (CAST("ADS_imp_1_OUT".impter_6 AS FLOAT) - 0.000976358073288) / 0.0480507620097 AS scaler_6, (CAST("ADS_imp_1_OUT".impter_7 AS FLOAT) - 0.00176438082423) / 0.0480608087315 AS scaler_7, (CAST("ADS_imp_1_OUT".impter_8 AS FLOAT) - -0.00165128154506) / 0.0462024037804 AS scaler_8, (CAST("ADS_imp_1_OUT".impter_9 AS FLOAT) - 0.00139055019834) / 0.0473630930405 AS scaler_9, (CAST("ADS_imp_1_OUT".impter_10 AS FLOAT) - 0.00127264825481) / 0.0458928613136 AS scaler_10, (CAST("ADS_imp_1_OUT".impter_11 AS FLOAT) - 0.00103442500568) / 0.0477615851957 AS scaler_11 
FROM "ADS_imp_1_OUT"), 
"DT_node_lookup" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_10 <= -0.031410821697403876) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_4 <= 0.11634615295193848) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_8 <= 0.49086401591423984) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_11 <= -0.6946571021765625) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_2 <= -0.5453231743829308) THEN 32 ELSE 33 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_5 <= -0.19764520417489534) THEN 34 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_2 <= 0.30048864352356797) THEN 70 ELSE 71 END END END ELSE 9 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_11 <= -0.4344831424223694) THEN 10 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_11 <= -9.999999682655225e-21) THEN 22 ELSE 23 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_4 <= 1.2071116657401015) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_5 <= 0.7402026455659034) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_4 <= -0.5036679280013338) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_4 <= -0.8021932262380939) THEN 48 ELSE 49 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_6 <= 1.0208561162700813) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_11 <= 0.606212696594401) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_3 <= 9.999999682655225e-21) THEN 200 ELSE 201 END ELSE 101 END ELSE 51 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_10 <= 0.9600804756813254) THEN 26 ELSE 27 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_7 <= 0.4278839902492152) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_4 <= 1.5974909018958647) THEN 28 ELSE 29 END ELSE 15 END END END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 9 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, 4 AS parent_id, 150.63209289377397 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, 5 AS parent_id, 153.16282882505175 AS "Estimator" UNION ALL SELECT 15 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, 7 AS parent_id, 157.37622168219463 AS "Estimator" UNION ALL SELECT 22 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS depth, 11 AS parent_id, 156.72451713674008 AS "Estimator" UNION ALL SELECT 23 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS depth, 11 AS parent_id, 154.03151014281607 AS "Estimator" UNION ALL SELECT 26 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS depth, 13 AS parent_id, 155.89724440946733 AS "Estimator" UNION ALL SELECT 27 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS depth, 13 AS parent_id, 158.55681378745777 AS "Estimator" UNION ALL SELECT 28 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS depth, 14 AS parent_id, 158.85997168100252 AS "Estimator" UNION ALL SELECT 29 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS depth, 14 AS parent_id, 161.17830501552794 AS "Estimator" UNION ALL SELECT 32 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS depth, 16 AS parent_id, 152.26663834806655 AS "Estimator" UNION ALL SELECT 33 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS depth, 16 AS parent_id, 149.91114815278286 AS "Estimator" UNION ALL SELECT 34 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS depth, 17 AS parent_id, 151.51408932925344 AS "Estimator" UNION ALL SELECT 48 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS depth, 24 AS parent_id, 154.0824716821946 AS "Estimator" UNION ALL SELECT 49 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS depth, 24 AS parent_id, 152.0628288242801 AS "Estimator" UNION ALL SELECT 51 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS depth, 25 AS parent_id, 153.82260326114198 AS "Estimator" UNION ALL SELECT 70 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 6 AS depth, 35 AS parent_id, 152.3949716821946 AS "Estimator" UNION ALL SELECT 71 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 6 AS depth, 35 AS parent_id, 154.58360804583097 AS "Estimator" UNION ALL SELECT 101 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 6 AS depth, 50 AS parent_id, 157.76330501552795 AS "Estimator" UNION ALL SELECT 200 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 7 AS depth, 100 AS parent_id, 156.27663834806654 AS "Estimator" UNION ALL SELECT 201 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 7 AS depth, 100 AS parent_id, 154.0895368985493 AS "Estimator") AS "Values"), 
"DT_Output" AS 
(SELECT "DT_node_lookup"."KEY" AS "KEY", "DT_node_lookup".node_id_2 AS node_id_2, "DT_node_data".node_id AS node_id, "DT_node_data".feature AS feature, "DT_node_data".threshold AS threshold, "DT_node_data".depth AS depth, "DT_node_data".parent_id AS parent_id, "DT_node_data"."Estimator" AS "Estimator" 
FROM "DT_node_lookup" LEFT OUTER JOIN "DT_node_data" ON "DT_node_lookup".node_id_2 = "DT_node_data".node_id), 
"LGBM_Tree_0" AS 
(SELECT "DT_Output"."KEY" AS "KEY", "DT_Output"."Estimator" AS "Estimator" 
FROM "DT_Output"), 
"DT_node_lookup_1" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_10 <= -0.031410821697403876) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_4 <= 0.11634615295193848) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_8 <= 0.49086401591423984) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_11 <= -0.6946571021765625) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_2 <= -0.5453231743829308) THEN 32 ELSE 33 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_5 <= -0.19764520417489534) THEN 34 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_2 <= 0.30048864352356797) THEN 70 ELSE 71 END END END ELSE 9 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_11 <= -0.4344831424223694) THEN 10 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_11 <= -9.999999682655225e-21) THEN 22 ELSE 23 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_4 <= 0.8971046252634658) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_5 <= 0.7402026455659034) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_4 <= -0.5036679280013338) THEN 24 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_2 <= 0.14670467663147746) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_4 <= 0.02449221503293557) THEN 100 ELSE 101 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_2 <= 0.5311645938617038) THEN 102 ELSE 103 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_10 <= 0.9600804756813254) THEN 26 ELSE 27 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_4 <= 1.517118706216737) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_11 <= 0.43276339009160636) THEN 28 ELSE 29 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_6 <= 0.24770027820181148) THEN 30 ELSE 31 END END END END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_1" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 9 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, 4 AS parent_id, -3.269483479586515 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, 5 AS parent_id, -0.8652843151773726 AS "Estimator" UNION ALL SELECT 22 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS depth, 11 AS parent_id, 2.5183195721019396 AS "Estimator" UNION ALL SELECT 23 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS depth, 11 AS parent_id, -0.040037022187159606 AS "Estimator" UNION ALL SELECT 24 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS depth, 12 AS parent_id, -1.024748559640004 AS "Estimator" UNION ALL SELECT 26 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS depth, 13 AS parent_id, 1.4976377487182617 AS "Estimator" UNION ALL SELECT 27 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS depth, 13 AS parent_id, 4.07215925604105 AS "Estimator" UNION ALL SELECT 28 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS depth, 14 AS parent_id, 1.4361385217079752 AS "Estimator" UNION ALL SELECT 29 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS depth, 14 AS parent_id, 4.166974137958728 AS "Estimator" UNION ALL SELECT 30 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS depth, 15 AS parent_id, 6.79926818847656 AS "Estimator" UNION ALL SELECT 31 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS depth, 15 AS parent_id, 4.576154247919718 AS "Estimator" UNION ALL SELECT 32 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS depth, 16 AS parent_id, -1.7166652886072793 AS "Estimator" UNION ALL SELECT 33 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS depth, 16 AS parent_id, -3.9543809329762176 AS "Estimator" UNION ALL SELECT 34 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS depth, 17 AS parent_id, -2.431586820939008 AS "Estimator" UNION ALL SELECT 70 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 6 AS depth, 35 AS parent_id, -1.5947485844294227 AS "Estimator" UNION ALL SELECT 71 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 6 AS depth, 35 AS parent_id, 0.48445590192621407 AS "Estimator" UNION ALL SELECT 100 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 6 AS depth, 50 AS parent_id, 0.8174952909350394 AS "Estimator" UNION ALL SELECT 101 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 6 AS depth, 50 AS parent_id, -1.373285667101542 AS "Estimator" UNION ALL SELECT 102 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 6 AS depth, 51 AS parent_id, 3.9766745269298553 AS "Estimator" UNION ALL SELECT 103 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 6 AS depth, 51 AS parent_id, 1.0112315266028695 AS "Estimator") AS "Values"), 
"DT_Output_1" AS 
(SELECT "DT_node_lookup_1"."KEY" AS "KEY", "DT_node_lookup_1".node_id_2 AS node_id_2, "DT_node_data_1".node_id AS node_id, "DT_node_data_1".feature AS feature, "DT_node_data_1".threshold AS threshold, "DT_node_data_1".depth AS depth, "DT_node_data_1".parent_id AS parent_id, "DT_node_data_1"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_1" LEFT OUTER JOIN "DT_node_data_1" ON "DT_node_lookup_1".node_id_2 = "DT_node_data_1".node_id), 
"LGBM_Tree_1" AS 
(SELECT "DT_Output_1"."KEY" AS "KEY", "DT_Output_1"."Estimator" AS "Estimator" 
FROM "DT_Output_1"), 
"DT_node_lookup_2" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_10 <= -0.031410821697403876) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_4 <= 0.11634615295193848) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_8 <= 0.49086401591423984) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_11 <= -0.6946571021765625) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_2 <= -0.5453231743829308) THEN 32 ELSE 33 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_5 <= -0.19764520417489534) THEN 34 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_8 <= -0.06693087179515839) THEN 70 ELSE 71 END END END ELSE 9 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_5 <= 0.46715833407491236) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_4 <= 0.7593237183849613) THEN 20 ELSE 21 END ELSE 11 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_4 <= 0.9659950787027183) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_5 <= 0.7402026455659034) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_4 <= -0.5036679280013338) THEN 24 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_2 <= 0.14670467663147746) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_4 <= 0.02449221503293557) THEN 100 ELSE 101 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_2 <= 0.5311645938617038) THEN 102 ELSE 103 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_10 <= 0.9600804756813254) THEN 26 ELSE 27 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_7 <= 0.4278839902492152) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_4 <= 1.517118706216737) THEN 28 ELSE 29 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_11 <= 0.9531113095999904) THEN 30 ELSE 31 END END END END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_2" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 9 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, 4 AS parent_id, -3.1060092795978895 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, 5 AS parent_id, 1.5805588522127696 AS "Estimator" UNION ALL SELECT 20 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS depth, 10 AS parent_id, 1.278417739001187 AS "Estimator" UNION ALL SELECT 21 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS depth, 10 AS parent_id, -1.6828245566441464 AS "Estimator" UNION ALL SELECT 24 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS depth, 12 AS parent_id, -0.9735111658389752 AS "Estimator" UNION ALL SELECT 26 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS depth, 13 AS parent_id, 1.4446880340576174 AS "Estimator" UNION ALL SELECT 27 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS depth, 13 AS parent_id, 3.868551290035248 AS "Estimator" UNION ALL SELECT 28 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS depth, 14 AS parent_id, 3.968273199521578 AS "Estimator" UNION ALL SELECT 29 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS depth, 14 AS parent_id, 6.306582641601563 AS "Estimator" UNION ALL SELECT 30 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS depth, 15 AS parent_id, 1.2745256684043187 AS "Estimator" UNION ALL SELECT 31 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS depth, 15 AS parent_id, 3.7247388582963215 AS "Estimator" UNION ALL SELECT 32 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS depth, 16 AS parent_id, -1.630831976135572 AS "Estimator" UNION ALL SELECT 33 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS depth, 16 AS parent_id, -3.756661790959976 AS "Estimator" UNION ALL SELECT 34 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS depth, 17 AS parent_id, -2.3100075497346766 AS "Estimator" UNION ALL SELECT 70 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 6 AS depth, 35 AS parent_id, -1.568656508127848 AS "Estimator" UNION ALL SELECT 71 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 6 AS depth, 35 AS parent_id, 0.51875535141338 AS "Estimator" UNION ALL SELECT 100 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 6 AS depth, 50 AS parent_id, 0.7766205295920371 AS "Estimator" UNION ALL SELECT 101 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 6 AS depth, 50 AS parent_id, -1.3046212991078696 AS "Estimator" UNION ALL SELECT 102 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 6 AS depth, 51 AS parent_id, 3.6071150958538056 AS "Estimator" UNION ALL SELECT 103 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 6 AS depth, 51 AS parent_id, 0.9606699780277584 AS "Estimator") AS "Values"), 
"DT_Output_2" AS 
(SELECT "DT_node_lookup_2"."KEY" AS "KEY", "DT_node_lookup_2".node_id_2 AS node_id_2, "DT_node_data_2".node_id AS node_id, "DT_node_data_2".feature AS feature, "DT_node_data_2".threshold AS threshold, "DT_node_data_2".depth AS depth, "DT_node_data_2".parent_id AS parent_id, "DT_node_data_2"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_2" LEFT OUTER JOIN "DT_node_data_2" ON "DT_node_lookup_2".node_id_2 = "DT_node_data_2".node_id), 
"LGBM_Tree_2" AS 
(SELECT "DT_Output_2"."KEY" AS "KEY", "DT_Output_2"."Estimator" AS "Estimator" 
FROM "DT_Output_2"), 
"DT_node_lookup_3" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_10 <= -0.031410821697403876) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_4 <= 0.11634615295193848) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_8 <= 0.49086401591423984) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_11 <= -0.6946571021765625) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_2 <= -0.5453231743829308) THEN 32 ELSE 33 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_5 <= -0.19764520417489534) THEN 34 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_2 <= 0.30048864352356797) THEN 70 ELSE 71 END END END ELSE 9 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_11 <= -0.4344831424223694) THEN 10 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_11 <= -9.999999682655225e-21) THEN 22 ELSE 23 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_4 <= 1.2071116657401015) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_5 <= 0.7402026455659034) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_4 <= -0.4577409590418322) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_8 <= -0.3059858236706149) THEN 48 ELSE 49 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_6 <= 1.0208561162700813) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_11 <= 0.606212696594401) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_3 <= 9.999999682655225e-21) THEN 200 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_5 <= -0.2688741546889419) THEN 402 ELSE 403 END END ELSE 101 END ELSE 51 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_4 <= 0.2656088020703195) THEN 26 ELSE 27 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_7 <= 0.4278839902492152) THEN 14 ELSE 15 END END END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_3" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 9 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, 4 AS parent_id, -2.950708762443427 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, 5 AS parent_id, -0.8129889948027474 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, 7 AS parent_id, 5.222231245040894 AS "Estimator" UNION ALL SELECT 15 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, 7 AS parent_id, 2.8118237912654878 AS "Estimator" UNION ALL SELECT 22 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS depth, 11 AS parent_id, 2.3485362703149963 AS "Estimator" UNION ALL SELECT 23 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS depth, 11 AS parent_id, -0.06569512440608098 AS "Estimator" UNION ALL SELECT 26 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS depth, 13 AS parent_id, 1.4137222199212938 AS "Estimator" UNION ALL SELECT 27 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS depth, 13 AS parent_id, 3.928165507167578 AS "Estimator" UNION ALL SELECT 32 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS depth, 16 AS parent_id, -1.5492904051144918 AS "Estimator" UNION ALL SELECT 33 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS depth, 16 AS parent_id, -3.568828728619744 AS "Estimator" UNION ALL SELECT 34 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS depth, 17 AS parent_id, -2.194507071551155 AS "Estimator" UNION ALL SELECT 48 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS depth, 24 AS parent_id, 0.15046018029873565 AS "Estimator" UNION ALL SELECT 49 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS depth, 24 AS parent_id, -1.7236213032404581 AS "Estimator" UNION ALL SELECT 51 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS depth, 25 AS parent_id, -0.3446835844140304 AS "Estimator" UNION ALL SELECT 70 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 6 AS depth, 35 AS parent_id, -1.4974611798922217 AS "Estimator" UNION ALL SELECT 71 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 6 AS depth, 35 AS parent_id, 0.5007130861282348 AS "Estimator" UNION ALL SELECT 101 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 6 AS depth, 50 AS parent_id, 3.2907729530334473 AS "Estimator" UNION ALL SELECT 200 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 7 AS depth, 100 AS parent_id, 1.9440086841583253 AS "Estimator" UNION ALL SELECT 402 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 8 AS depth, 201 AS parent_id, -1.019606282313665 AS "Estimator" UNION ALL SELECT 403 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 8 AS depth, 201 AS parent_id, 1.1008115386962887 AS "Estimator") AS "Values"), 
"DT_Output_3" AS 
(SELECT "DT_node_lookup_3"."KEY" AS "KEY", "DT_node_lookup_3".node_id_2 AS node_id_2, "DT_node_data_3".node_id AS node_id, "DT_node_data_3".feature AS feature, "DT_node_data_3".threshold AS threshold, "DT_node_data_3".depth AS depth, "DT_node_data_3".parent_id AS parent_id, "DT_node_data_3"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_3" LEFT OUTER JOIN "DT_node_data_3" ON "DT_node_lookup_3".node_id_2 = "DT_node_data_3".node_id), 
"LGBM_Tree_3" AS 
(SELECT "DT_Output_3"."KEY" AS "KEY", "DT_Output_3"."Estimator" AS "Estimator" 
FROM "DT_Output_3"), 
"DT_node_lookup_4" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_10 <= -0.031410821697403876) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_4 <= 0.11634615295193848) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_8 <= 0.49086401591423984) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_11 <= -0.6946571021765625) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_2 <= -0.5453231743829308) THEN 32 ELSE 33 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_8 <= 0.09243909612181254) THEN 34 ELSE 35 END END ELSE 9 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_5 <= 0.46715833407491236) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_4 <= 0.7593237183849613) THEN 20 ELSE 21 END ELSE 11 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_4 <= 0.9659950787027183) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_5 <= 0.7402026455659034) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_4 <= -0.4577409590418322) THEN 24 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_2 <= 0.14670467663147746) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_5 <= -0.12641625366084966) THEN 100 ELSE 101 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_8 <= -0.8637807113800134) THEN 102 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_6 <= 0.9063145106303369) THEN 206 ELSE 207 END END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_10 <= 0.9600804756813254) THEN 26 ELSE 27 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_7 <= 0.4278839902492152) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_4 <= 1.517118706216737) THEN 28 ELSE 29 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_11 <= 0.9531113095999904) THEN 30 ELSE 31 END END END END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_4" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 9 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, 4 AS parent_id, -2.8031734186365753 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, 5 AS parent_id, 1.464373323959964 AS "Estimator" UNION ALL SELECT 20 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS depth, 10 AS parent_id, 1.194267257777127 AS "Estimator" UNION ALL SELECT 21 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS depth, 10 AS parent_id, -1.5938500835345342 AS "Estimator" UNION ALL SELECT 24 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS depth, 12 AS parent_id, -0.8461614171939869 AS "Estimator" UNION ALL SELECT 26 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS depth, 13 AS parent_id, 1.2598600994972955 AS "Estimator" UNION ALL SELECT 27 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS depth, 13 AS parent_id, 3.5337189435958862 AS "Estimator" UNION ALL SELECT 28 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS depth, 14 AS parent_id, 3.554591149550217 AS "Estimator" UNION ALL SELECT 29 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS depth, 14 AS parent_id, 5.73014166695731 AS "Estimator" UNION ALL SELECT 30 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS depth, 15 AS parent_id, 1.1112450447949493 AS "Estimator" UNION ALL SELECT 31 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS depth, 15 AS parent_id, 3.416055910403912 AS "Estimator" UNION ALL SELECT 32 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS depth, 16 AS parent_id, -1.4718258555730186 AS "Estimator" UNION ALL SELECT 33 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS depth, 16 AS parent_id, -3.3903874200933117 AS "Estimator" UNION ALL SELECT 34 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS depth, 17 AS parent_id, -1.8246890862782796 AS "Estimator" UNION ALL SELECT 35 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS depth, 17 AS parent_id, -0.21795987635850908 AS "Estimator" UNION ALL SELECT 100 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 6 AS depth, 50 AS parent_id, 0.5824181252055697 AS "Estimator" UNION ALL SELECT 101 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 6 AS depth, 50 AS parent_id, -1.457412374019623 AS "Estimator" UNION ALL SELECT 102 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 6 AS depth, 51 AS parent_id, 3.681623375713825 AS "Estimator" UNION ALL SELECT 206 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 7 AS depth, 103 AS parent_id, 1.9040931803839543 AS "Estimator" UNION ALL SELECT 207 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 7 AS depth, 103 AS parent_id, -0.3512047076225281 AS "Estimator") AS "Values"), 
"DT_Output_4" AS 
(SELECT "DT_node_lookup_4"."KEY" AS "KEY", "DT_node_lookup_4".node_id_2 AS node_id_2, "DT_node_data_4".node_id AS node_id, "DT_node_data_4".feature AS feature, "DT_node_data_4".threshold AS threshold, "DT_node_data_4".depth AS depth, "DT_node_data_4".parent_id AS parent_id, "DT_node_data_4"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_4" LEFT OUTER JOIN "DT_node_data_4" ON "DT_node_lookup_4".node_id_2 = "DT_node_data_4".node_id), 
"LGBM_Tree_4" AS 
(SELECT "DT_Output_4"."KEY" AS "KEY", "DT_Output_4"."Estimator" AS "Estimator" 
FROM "DT_Output_4"), 
"DT_node_lookup_5" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_10 <= -0.031410821697403876) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_4 <= 0.11634615295193848) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_10 <= -0.25460048743137054) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_8 <= 0.49086401591423984) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_11 <= -0.6946571021765625) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_2 <= -0.5453231743829308) THEN 64 ELSE 65 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_11 <= 0.08586477708601531) THEN 66 ELSE 67 END END ELSE 17 END ELSE 9 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_11 <= -0.4344831424223694) THEN 10 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_10 <= -0.6844651577353835) THEN 22 ELSE 23 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_4 <= 1.2071116657401015) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_5 <= 0.7402026455659034) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_4 <= -0.4577409590418322) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_4 <= -0.8021932262380939) THEN 48 ELSE 49 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_6 <= 1.0208561162700813) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_11 <= 0.606212696594401) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_3 <= 9.999999682655225e-21) THEN 200 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_5 <= -0.2688741546889419) THEN 402 ELSE 403 END END ELSE 101 END ELSE 51 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_4 <= 0.2656088020703195) THEN 26 ELSE 27 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_7 <= 0.4278839902492152) THEN 14 ELSE 15 END END END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_5" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 9 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, 4 AS parent_id, -0.5870917907127967 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, 5 AS parent_id, -0.7633146452052253 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, 7 AS parent_id, 4.714167993718927 AS "Estimator" UNION ALL SELECT 15 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, 7 AS parent_id, 2.5508475035429004 AS "Estimator" UNION ALL SELECT 17 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS depth, 8 AS parent_id, -2.824316146725514 AS "Estimator" UNION ALL SELECT 22 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS depth, 11 AS parent_id, -0.4517675662040711 AS "Estimator" UNION ALL SELECT 23 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS depth, 11 AS parent_id, 1.9625921338796612 AS "Estimator" UNION ALL SELECT 26 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS depth, 13 AS parent_id, 1.2421454421111517 AS "Estimator" UNION ALL SELECT 27 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS depth, 13 AS parent_id, 3.6011098122596743 AS "Estimator" UNION ALL SELECT 48 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS depth, 24 AS parent_id, 0.18992643753687535 AS "Estimator" UNION ALL SELECT 49 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS depth, 24 AS parent_id, -1.5988771889607112 AS "Estimator" UNION ALL SELECT 51 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS depth, 25 AS parent_id, -0.34420728056054367 AS "Estimator" UNION ALL SELECT 64 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 6 AS depth, 32 AS parent_id, -1.5532345940669374 AS "Estimator" UNION ALL SELECT 65 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 6 AS depth, 32 AS parent_id, -3.4920445210735007 AS "Estimator" UNION ALL SELECT 66 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 6 AS depth, 33 AS parent_id, -0.5786577701568604 AS "Estimator" UNION ALL SELECT 67 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 6 AS depth, 33 AS parent_id, -2.082272878289223 AS "Estimator" UNION ALL SELECT 101 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 6 AS depth, 50 AS parent_id, 3.0348082820574445 AS "Estimator" UNION ALL SELECT 200 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 7 AS depth, 100 AS parent_id, 1.7682028643290204 AS "Estimator" UNION ALL SELECT 402 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 8 AS depth, 201 AS parent_id, -1.0164712727069856 AS "Estimator" UNION ALL SELECT 403 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 8 AS depth, 201 AS parent_id, 0.9894892835617063 AS "Estimator") AS "Values"), 
"DT_Output_5" AS 
(SELECT "DT_node_lookup_5"."KEY" AS "KEY", "DT_node_lookup_5".node_id_2 AS node_id_2, "DT_node_data_5".node_id AS node_id, "DT_node_data_5".feature AS feature, "DT_node_data_5".threshold AS threshold, "DT_node_data_5".depth AS depth, "DT_node_data_5".parent_id AS parent_id, "DT_node_data_5"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_5" LEFT OUTER JOIN "DT_node_data_5" ON "DT_node_lookup_5".node_id_2 = "DT_node_data_5".node_id), 
"LGBM_Tree_5" AS 
(SELECT "DT_Output_5"."KEY" AS "KEY", "DT_Output_5"."Estimator" AS "Estimator" 
FROM "DT_Output_5"), 
"DT_node_lookup_6" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_10 <= -0.031410821697403876) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_4 <= 0.11634615295193848) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_10 <= -0.7385193117000257) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_2 <= -0.7759991247210665) THEN 16 ELSE 17 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_8 <= 0.570548999872726) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_2 <= 0.60805657730775) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_6 <= -0.9263511796055618) THEN 72 ELSE 73 END ELSE 37 END ELSE 19 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_11 <= -0.4344831424223694) THEN 10 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_11 <= -9.999999682655225e-21) THEN 22 ELSE 23 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_4 <= 1.4711917372572356) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_5 <= 0.7402026455659034) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_4 <= -0.5036679280013338) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_4 <= -0.8021932262380939) THEN 48 ELSE 49 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_11 <= 0.606212696594401) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_11 <= -0.08758452941677983) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_10 <= 0.6856731071396708) THEN 200 ELSE 201 END ELSE 101 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_8 <= -0.7044107434630422) THEN 102 ELSE 103 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_4 <= 0.2656088020703195) THEN 26 ELSE 27 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_7 <= 0.4278839902492152) THEN 14 ELSE 15 END END END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_6" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, 5 AS parent_id, -0.7251488991081715 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, 7 AS parent_id, 5.20792623247419 AS "Estimator" UNION ALL SELECT 15 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, 7 AS parent_id, 3.0614001798629764 AS "Estimator" UNION ALL SELECT 16 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS depth, 8 AS parent_id, -1.8899812012910844 AS "Estimator" UNION ALL SELECT 17 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS depth, 8 AS parent_id, -2.898514158075506 AS "Estimator" UNION ALL SELECT 19 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS depth, 9 AS parent_id, -2.1898202534075137 AS "Estimator" UNION ALL SELECT 22 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS depth, 11 AS parent_id, 2.147345980730923 AS "Estimator" UNION ALL SELECT 23 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS depth, 11 AS parent_id, -0.1392402300467858 AS "Estimator" UNION ALL SELECT 26 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS depth, 13 AS parent_id, 1.1800382289148512 AS "Estimator" UNION ALL SELECT 27 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS depth, 13 AS parent_id, 3.3268641784273343 AS "Estimator" UNION ALL SELECT 37 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS depth, 18 AS parent_id, 0.15862879211252387 AS "Estimator" UNION ALL SELECT 48 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS depth, 24 AS parent_id, 0.18043013016382847 AS "Estimator" UNION ALL SELECT 49 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS depth, 24 AS parent_id, -1.6354040724890575 AS "Estimator" UNION ALL SELECT 72 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 6 AS depth, 36 AS parent_id, -0.45391080260276795 AS "Estimator" UNION ALL SELECT 73 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 6 AS depth, 36 AS parent_id, -2.214349197596311 AS "Estimator" UNION ALL SELECT 101 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 6 AS depth, 50 AS parent_id, -0.35331331005802863 AS "Estimator" UNION ALL SELECT 102 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 6 AS depth, 51 AS parent_id, 2.931243687868118 AS "Estimator" UNION ALL SELECT 103 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 6 AS depth, 51 AS parent_id, 0.7859932112693787 AS "Estimator" UNION ALL SELECT 200 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 7 AS depth, 100 AS parent_id, 2.4074801031748447 AS "Estimator" UNION ALL SELECT 201 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 7 AS depth, 100 AS parent_id, -0.2875036276303805 AS "Estimator") AS "Values"), 
"DT_Output_6" AS 
(SELECT "DT_node_lookup_6"."KEY" AS "KEY", "DT_node_lookup_6".node_id_2 AS node_id_2, "DT_node_data_6".node_id AS node_id, "DT_node_data_6".feature AS feature, "DT_node_data_6".threshold AS threshold, "DT_node_data_6".depth AS depth, "DT_node_data_6".parent_id AS parent_id, "DT_node_data_6"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_6" LEFT OUTER JOIN "DT_node_data_6" ON "DT_node_lookup_6".node_id_2 = "DT_node_data_6".node_id), 
"LGBM_Tree_6" AS 
(SELECT "DT_Output_6"."KEY" AS "KEY", "DT_Output_6"."Estimator" AS "Estimator" 
FROM "DT_Output_6"), 
"DT_node_lookup_7" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_10 <= -0.031410821697403876) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_4 <= 0.11634615295193848) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_10 <= -0.25460048743137054) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_8 <= 0.49086401591423984) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_11 <= -0.6946571021765625) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_2 <= -0.5453231743829308) THEN 64 ELSE 65 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_5 <= -0.19764520417489534) THEN 66 ELSE 67 END END ELSE 17 END ELSE 9 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_5 <= 0.46715833407491236) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_4 <= 0.7593237183849613) THEN 20 ELSE 21 END ELSE 11 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_4 <= 1.4711917372572356) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_5 <= 0.7402026455659034) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_4 <= -0.4577409590418322) THEN 24 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_2 <= 0.14670467663147746) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_5 <= -0.055187303146803875) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_2 <= -0.6991071412750214) THEN 200 ELSE 201 END ELSE 101 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_8 <= 0.09243909612181254) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_4 <= 0.4837619046279519) THEN 204 ELSE 205 END ELSE 103 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_4 <= 0.2656088020703195) THEN 26 ELSE 27 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_7 <= 0.4278839902492152) THEN 14 ELSE 15 END END END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_7" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 9 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, 4 AS parent_id, -0.49518473056646495 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, 5 AS parent_id, 1.3054739049502784 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, 7 AS parent_id, 4.947529956272669 AS "Estimator" UNION ALL SELECT 15 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, 7 AS parent_id, 2.9083301937580113 AS "Estimator" UNION ALL SELECT 17 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS depth, 8 AS parent_id, -2.5645315072575556 AS "Estimator" UNION ALL SELECT 20 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS depth, 10 AS parent_id, 1.1250573635101315 AS "Estimator" UNION ALL SELECT 21 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS depth, 10 AS parent_id, -1.5058920576022221 AS "Estimator" UNION ALL SELECT 24 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS depth, 12 AS parent_id, -0.7297291505391952 AS "Estimator" UNION ALL SELECT 26 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS depth, 13 AS parent_id, 1.1210363068750926 AS "Estimator" UNION ALL SELECT 27 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS depth, 13 AS parent_id, 3.160520965477516 AS "Estimator" UNION ALL SELECT 64 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 6 AS depth, 32 AS parent_id, -1.3949700862169263 AS "Estimator" UNION ALL SELECT 65 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 6 AS depth, 32 AS parent_id, -3.183919318517049 AS "Estimator" UNION ALL SELECT 66 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 6 AS depth, 33 AS parent_id, -1.894735139958999 AS "Estimator" UNION ALL SELECT 67 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 6 AS depth, 33 AS parent_id, -0.39605430066585545 AS "Estimator" UNION ALL SELECT 101 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 6 AS depth, 50 AS parent_id, -1.3243748578158292 AS "Estimator" UNION ALL SELECT 103 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 6 AS depth, 51 AS parent_id, -0.14964102745056151 AS "Estimator" UNION ALL SELECT 200 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 7 AS depth, 100 AS parent_id, -0.44726158142089845 AS "Estimator" UNION ALL SELECT 201 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 7 AS depth, 100 AS parent_id, 1.4870473116636274 AS "Estimator" UNION ALL SELECT 204 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 7 AS depth, 102 AS parent_id, 2.7584522035386825 AS "Estimator" UNION ALL SELECT 205 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 7 AS depth, 102 AS parent_id, 0.879774459925565 AS "Estimator") AS "Values"), 
"DT_Output_7" AS 
(SELECT "DT_node_lookup_7"."KEY" AS "KEY", "DT_node_lookup_7".node_id_2 AS node_id_2, "DT_node_data_7".node_id AS node_id, "DT_node_data_7".feature AS feature, "DT_node_data_7".threshold AS threshold, "DT_node_data_7".depth AS depth, "DT_node_data_7".parent_id AS parent_id, "DT_node_data_7"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_7" LEFT OUTER JOIN "DT_node_data_7" ON "DT_node_lookup_7".node_id_2 = "DT_node_data_7".node_id), 
"LGBM_Tree_7" AS 
(SELECT "DT_Output_7"."KEY" AS "KEY", "DT_Output_7"."Estimator" AS "Estimator" 
FROM "DT_Output_7")
 SELECT "Score_Union_CTE_esu_0"."KEY", "Score_Union_CTE_esu_0"."Estimator" 
FROM (SELECT "LGBM_Tree_0"."KEY" AS "KEY", "LGBM_Tree_0"."Estimator" AS "Estimator" 
FROM "LGBM_Tree_0" UNION ALL SELECT "LGBM_Tree_1"."KEY" AS "KEY", "LGBM_Tree_1"."Estimator" AS "Estimator" 
FROM "LGBM_Tree_1" UNION ALL SELECT "LGBM_Tree_2"."KEY" AS "KEY", "LGBM_Tree_2"."Estimator" AS "Estimator" 
FROM "LGBM_Tree_2" UNION ALL SELECT "LGBM_Tree_3"."KEY" AS "KEY", "LGBM_Tree_3"."Estimator" AS "Estimator" 
FROM "LGBM_Tree_3" UNION ALL SELECT "LGBM_Tree_4"."KEY" AS "KEY", "LGBM_Tree_4"."Estimator" AS "Estimator" 
FROM "LGBM_Tree_4" UNION ALL SELECT "LGBM_Tree_5"."KEY" AS "KEY", "LGBM_Tree_5"."Estimator" AS "Estimator" 
FROM "LGBM_Tree_5" UNION ALL SELECT "LGBM_Tree_6"."KEY" AS "KEY", "LGBM_Tree_6"."Estimator" AS "Estimator" 
FROM "LGBM_Tree_6" UNION ALL SELECT "LGBM_Tree_7"."KEY" AS "KEY", "LGBM_Tree_7"."Estimator" AS "Estimator" 
FROM "LGBM_Tree_7") AS "Score_Union_CTE_esu_0"), 
"Score_Union_CTE_1" AS 
(WITH "ADS_imp_1_OUT" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_0" IS NULL) THEN 0.000268693206665 ELSE "ADS"."Feature_0" END AS impter_2, CASE WHEN ("ADS"."Feature_1" IS NULL) THEN 0.000723958058064 ELSE "ADS"."Feature_1" END AS impter_3, CASE WHEN ("ADS"."Feature_2" IS NULL) THEN 0.000728071982559 ELSE "ADS"."Feature_2" END AS impter_4, CASE WHEN ("ADS"."Feature_3" IS NULL) THEN 0.00101356522108 ELSE "ADS"."Feature_3" END AS impter_5, CASE WHEN ("ADS"."Feature_4" IS NULL) THEN 0.000976358073288 ELSE "ADS"."Feature_4" END AS impter_6, CASE WHEN ("ADS"."Feature_5" IS NULL) THEN 0.00176438082423 ELSE "ADS"."Feature_5" END AS impter_7, CASE WHEN ("ADS"."Feature_6" IS NULL) THEN -0.00165128154506 ELSE "ADS"."Feature_6" END AS impter_8, CASE WHEN ("ADS"."Feature_7" IS NULL) THEN 0.00139055019834 ELSE "ADS"."Feature_7" END AS impter_9, CASE WHEN ("ADS"."Feature_8" IS NULL) THEN 0.00127264825481 ELSE "ADS"."Feature_8" END AS impter_10, CASE WHEN ("ADS"."Feature_9" IS NULL) THEN 0.00103442500568 ELSE "ADS"."Feature_9" END AS impter_11 
FROM diabetes AS "ADS"), 
"ADS_sca_2_OUT" AS 
(SELECT "ADS_imp_1_OUT"."KEY" AS "KEY", (CAST("ADS_imp_1_OUT".impter_2 AS FLOAT) - 0.000268693206665) / 0.0472420958365 AS scaler_2, (CAST("ADS_imp_1_OUT".impter_3 AS FLOAT) - 0.000723958058064) / 0.047605576685 AS scaler_3, (CAST("ADS_imp_1_OUT".impter_4 AS FLOAT) - 0.000728071982559) / 0.0469359114394 AS scaler_4, (CAST("ADS_imp_1_OUT".impter_5 AS FLOAT) - 0.00101356522108) / 0.048335271949 AS scaler_5, (CAST("ADS_imp_1_OUT".impter_6 AS FLOAT) - 0.000976358073288) / 0.0480507620097 AS scaler_6, (CAST("ADS_imp_1_OUT".impter_7 AS FLOAT) - 0.00176438082423) / 0.0480608087315 AS scaler_7, (CAST("ADS_imp_1_OUT".impter_8 AS FLOAT) - -0.00165128154506) / 0.0462024037804 AS scaler_8, (CAST("ADS_imp_1_OUT".impter_9 AS FLOAT) - 0.00139055019834) / 0.0473630930405 AS scaler_9, (CAST("ADS_imp_1_OUT".impter_10 AS FLOAT) - 0.00127264825481) / 0.0458928613136 AS scaler_10, (CAST("ADS_imp_1_OUT".impter_11 AS FLOAT) - 0.00103442500568) / 0.0477615851957 AS scaler_11 
FROM "ADS_imp_1_OUT"), 
"DT_node_lookup_8" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_10 <= -0.21211047279119996) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_4 <= 0.11634615295193848) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_8 <= 0.49086401591423984) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_11 <= -0.6946571021765625) THEN 16 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_5 <= -0.19764520417489534) THEN 34 ELSE 35 END END ELSE 9 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_4 <= 1.0693307588615968) THEN 10 ELSE 11 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_4 <= 1.4711917372572356) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_5 <= 0.7402026455659034) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_11 <= 0.606212696594401) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_11 <= 9.999999682655225e-21) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_7 <= 0.9980052830396992) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_6 <= -0.18183074294722767) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_2 <= -0.23775524059874922) THEN 384 ELSE 385 END ELSE 193 END ELSE 97 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_8 <= -0.38567080762910105) THEN 98 ELSE 99 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_4 <= 0.0933826684721878) THEN 50 ELSE 51 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_10 <= 0.9600804756813254) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_4 <= 0.3230175132696964) THEN 52 ELSE 53 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_5 <= 1.0369899381872782) THEN 54 ELSE 55 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_7 <= 0.4278839902492152) THEN 14 ELSE 15 END END END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_8" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 9 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, 4 AS parent_id, -2.3704391031038194 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, 5 AS parent_id, -0.45263839851726184 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, 5 AS parent_id, 1.6309778475761414 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, 7 AS parent_id, 4.7001534461975085 AS "Estimator" UNION ALL SELECT 15 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, 7 AS parent_id, 2.8160500397736374 AS "Estimator" UNION ALL SELECT 16 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS depth, 8 AS parent_id, -2.3372000351548197 AS "Estimator" UNION ALL SELECT 34 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS depth, 17 AS parent_id, -1.7999983731438132 AS "Estimator" UNION ALL SELECT 35 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS depth, 17 AS parent_id, -0.179634665733292 AS "Estimator" UNION ALL SELECT 50 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS depth, 25 AS parent_id, -0.02497317974384014 AS "Estimator" UNION ALL SELECT 51 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS depth, 25 AS parent_id, 2.8394082341875353 AS "Estimator" UNION ALL SELECT 52 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS depth, 26 AS parent_id, 0.04915118291974067 AS "Estimator" UNION ALL SELECT 53 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS depth, 26 AS parent_id, 2.430767198042436 AS "Estimator" UNION ALL SELECT 54 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS depth, 27 AS parent_id, 1.8044693374633785 AS "Estimator" UNION ALL SELECT 55 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS depth, 27 AS parent_id, 3.9086486101150513 AS "Estimator" UNION ALL SELECT 97 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 6 AS depth, 48 AS parent_id, -1.3341396418484777 AS "Estimator" UNION ALL SELECT 98 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 6 AS depth, 49 AS parent_id, 0.22432970007260644 AS "Estimator" UNION ALL SELECT 99 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 6 AS depth, 49 AS parent_id, -1.5729347353889829 AS "Estimator" UNION ALL SELECT 193 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 7 AS depth, 96 AS parent_id, 2.334704685211182 AS "Estimator" UNION ALL SELECT 384 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 8 AS depth, 192 AS parent_id, -0.6863144556681315 AS "Estimator" UNION ALL SELECT 385 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 8 AS depth, 192 AS parent_id, 1.5370574647188182 AS "Estimator") AS "Values"), 
"DT_Output_8" AS 
(SELECT "DT_node_lookup_8"."KEY" AS "KEY", "DT_node_lookup_8".node_id_2 AS node_id_2, "DT_node_data_8".node_id AS node_id, "DT_node_data_8".feature AS feature, "DT_node_data_8".threshold AS threshold, "DT_node_data_8".depth AS depth, "DT_node_data_8".parent_id AS parent_id, "DT_node_data_8"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_8" LEFT OUTER JOIN "DT_node_data_8" ON "DT_node_lookup_8".node_id_2 = "DT_node_data_8".node_id), 
"LGBM_Tree_8" AS 
(SELECT "DT_Output_8"."KEY" AS "KEY", "DT_Output_8"."Estimator" AS "Estimator" 
FROM "DT_Output_8"), 
"DT_node_lookup_9" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_10 <= -0.031410821697403876) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_4 <= 0.11634615295193848) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_10 <= -0.7385193117000257) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_3 <= 9.999999682655225e-21) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_5 <= -0.19764520417489534) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_2 <= -0.6991071412750214) THEN 64 ELSE 65 END ELSE 33 END ELSE 17 END ELSE 9 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_5 <= 0.46715833407491236) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_4 <= 0.7593237183849613) THEN 20 ELSE 21 END ELSE 11 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_4 <= 0.9659950787027183) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_10 <= 0.9600804756813254) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_6 <= 1.0208561162700813) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_2 <= -0.23775524059874922) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_11 <= -0.08758452941677983) THEN 96 ELSE 97 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_3 <= 9.999999682655225e-21) THEN 98 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_5 <= -0.2688741546889419) THEN 198 ELSE 199 END END END ELSE 25 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_7 <= -0.13897946658246702) THEN 26 ELSE 27 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_7 <= 0.4278839902492152) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_4 <= 1.5974909018958647) THEN 28 ELSE 29 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_11 <= 0.9531113095999904) THEN 30 ELSE 31 END END END END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_9" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 9 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, 4 AS parent_id, -1.2724798232316972 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, 5 AS parent_id, 1.2036529915673393 AS "Estimator" UNION ALL SELECT 17 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS depth, 8 AS parent_id, -2.849165593316922 AS "Estimator" UNION ALL SELECT 20 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS depth, 10 AS parent_id, 1.0787666580893773 AS "Estimator" UNION ALL SELECT 21 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS depth, 10 AS parent_id, -1.4429396014947158 AS "Estimator" UNION ALL SELECT 25 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS depth, 12 AS parent_id, -1.352147784498003 AS "Estimator" UNION ALL SELECT 26 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS depth, 13 AS parent_id, 0.6304383643468222 AS "Estimator" UNION ALL SELECT 27 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS depth, 13 AS parent_id, 2.8826274294602245 AS "Estimator" UNION ALL SELECT 28 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS depth, 14 AS parent_id, 2.939605827331542 AS "Estimator" UNION ALL SELECT 29 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS depth, 14 AS parent_id, 4.605069986979166 AS "Estimator" UNION ALL SELECT 30 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS depth, 15 AS parent_id, 0.7299146218733352 AS "Estimator" UNION ALL SELECT 31 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS depth, 15 AS parent_id, 2.7159903361247135 AS "Estimator" UNION ALL SELECT 33 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS depth, 16 AS parent_id, -0.32812489658594135 AS "Estimator" UNION ALL SELECT 64 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 6 AS depth, 32 AS parent_id, -1.2556685072183609 AS "Estimator" UNION ALL SELECT 65 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 6 AS depth, 32 AS parent_id, -2.778424643951914 AS "Estimator" UNION ALL SELECT 96 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 6 AS depth, 48 AS parent_id, 0.7219944906234739 AS "Estimator" UNION ALL SELECT 97 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 6 AS depth, 48 AS parent_id, -1.827590888196772 AS "Estimator" UNION ALL SELECT 98 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 6 AS depth, 49 AS parent_id, 2.3844224088332235 AS "Estimator" UNION ALL SELECT 198 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 7 AS depth, 99 AS parent_id, -0.9870877064191378 AS "Estimator" UNION ALL SELECT 199 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 7 AS depth, 99 AS parent_id, 1.4860222794439482 AS "Estimator") AS "Values"), 
"DT_Output_9" AS 
(SELECT "DT_node_lookup_9"."KEY" AS "KEY", "DT_node_lookup_9".node_id_2 AS node_id_2, "DT_node_data_9".node_id AS node_id, "DT_node_data_9".feature AS feature, "DT_node_data_9".threshold AS threshold, "DT_node_data_9".depth AS depth, "DT_node_data_9".parent_id AS parent_id, "DT_node_data_9"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_9" LEFT OUTER JOIN "DT_node_data_9" ON "DT_node_lookup_9".node_id_2 = "DT_node_data_9".node_id), 
"LGBM_Tree_9" AS 
(SELECT "DT_Output_9"."KEY" AS "KEY", "DT_Output_9"."Estimator" AS "Estimator" 
FROM "DT_Output_9")
 SELECT "Score_Union_CTE_esu_1"."KEY", "Score_Union_CTE_esu_1"."Estimator" 
FROM (SELECT "LGBM_Tree_8"."KEY" AS "KEY", "LGBM_Tree_8"."Estimator" AS "Estimator" 
FROM "LGBM_Tree_8" UNION ALL SELECT "LGBM_Tree_9"."KEY" AS "KEY", "LGBM_Tree_9"."Estimator" AS "Estimator" 
FROM "LGBM_Tree_9") AS "Score_Union_CTE_esu_1"), 
"Score_Union_CTE" AS 
(SELECT "Score_Union_CTEbig_esu"."KEY" AS "KEY", "Score_Union_CTEbig_esu"."Estimator" AS "Estimator" 
FROM (SELECT "Score_Union_CTE_0"."KEY" AS "KEY", "Score_Union_CTE_0"."Estimator" AS "Estimator" 
FROM "Score_Union_CTE_0" UNION ALL SELECT "Score_Union_CTE_1"."KEY" AS "KEY", "Score_Union_CTE_1"."Estimator" AS "Estimator" 
FROM "Score_Union_CTE_1") AS "Score_Union_CTEbig_esu"), 
"LGBM_Sum_Scores" AS 
(SELECT "T"."KEY" AS "KEY", "T"."Estimator" AS "Estimator" 
FROM (SELECT "Score_Union_CTE"."KEY" AS "KEY", sum("Score_Union_CTE"."Estimator") AS "Estimator" 
FROM "Score_Union_CTE" GROUP BY "Score_Union_CTE"."KEY") AS "T")
 SELECT "LGBM_Sum_Scores"."KEY" AS "KEY", "LGBM_Sum_Scores"."Estimator" AS "Estimator" 
FROM "LGBM_Sum_Scores"