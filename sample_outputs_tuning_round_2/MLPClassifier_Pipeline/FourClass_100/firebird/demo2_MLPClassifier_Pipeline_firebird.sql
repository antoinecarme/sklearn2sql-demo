-- This SQL code was generated by sklearn2sql (development version).
-- Copyright 2017

WITH "ADS_imp_1_OUT" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_0" IS NULL) THEN 0.00653574012116 ELSE "ADS"."Feature_0" END AS impter_2, CASE WHEN ("ADS"."Feature_1" IS NULL) THEN 0.16767827126 ELSE "ADS"."Feature_1" END AS impter_3, CASE WHEN ("ADS"."Feature_2" IS NULL) THEN -0.0551470417358 ELSE "ADS"."Feature_2" END AS impter_4, CASE WHEN ("ADS"."Feature_3" IS NULL) THEN 0.00152116930519 ELSE "ADS"."Feature_3" END AS impter_5, CASE WHEN ("ADS"."Feature_4" IS NULL) THEN 0.0314276019104 ELSE "ADS"."Feature_4" END AS impter_6, CASE WHEN ("ADS"."Feature_5" IS NULL) THEN 0.0261796831787 ELSE "ADS"."Feature_5" END AS impter_7, CASE WHEN ("ADS"."Feature_6" IS NULL) THEN -0.0112547131221 ELSE "ADS"."Feature_6" END AS impter_8, CASE WHEN ("ADS"."Feature_7" IS NULL) THEN -0.0168862118009 ELSE "ADS"."Feature_7" END AS impter_9, CASE WHEN ("ADS"."Feature_8" IS NULL) THEN -0.0273427029645 ELSE "ADS"."Feature_8" END AS impter_10, CASE WHEN ("ADS"."Feature_9" IS NULL) THEN -0.163701278848 ELSE "ADS"."Feature_9" END AS impter_11, CASE WHEN ("ADS"."Feature_10" IS NULL) THEN 0.0354122507389 ELSE "ADS"."Feature_10" END AS impter_12, CASE WHEN ("ADS"."Feature_11" IS NULL) THEN -0.0285291234756 ELSE "ADS"."Feature_11" END AS impter_13, CASE WHEN ("ADS"."Feature_12" IS NULL) THEN -0.0267494449896 ELSE "ADS"."Feature_12" END AS impter_14, CASE WHEN ("ADS"."Feature_13" IS NULL) THEN 0.386019822911 ELSE "ADS"."Feature_13" END AS impter_15, CASE WHEN ("ADS"."Feature_14" IS NULL) THEN 0.0162145257314 ELSE "ADS"."Feature_14" END AS impter_16, CASE WHEN ("ADS"."Feature_15" IS NULL) THEN 0.227237750778 ELSE "ADS"."Feature_15" END AS impter_17, CASE WHEN ("ADS"."Feature_16" IS NULL) THEN 0.566373456694 ELSE "ADS"."Feature_16" END AS impter_18, CASE WHEN ("ADS"."Feature_17" IS NULL) THEN 0.277696410616 ELSE "ADS"."Feature_17" END AS impter_19, CASE WHEN ("ADS"."Feature_18" IS NULL) THEN 0.00599432681235 ELSE "ADS"."Feature_18" END AS impter_20, CASE WHEN ("ADS"."Feature_19" IS NULL) THEN -0.0218525344697 ELSE "ADS"."Feature_19" END AS impter_21, CASE WHEN ("ADS"."Feature_20" IS NULL) THEN -0.028375425917 ELSE "ADS"."Feature_20" END AS impter_22, CASE WHEN ("ADS"."Feature_21" IS NULL) THEN 0.0151643232963 ELSE "ADS"."Feature_21" END AS impter_23, CASE WHEN ("ADS"."Feature_22" IS NULL) THEN 0.0174691345488 ELSE "ADS"."Feature_22" END AS impter_24, CASE WHEN ("ADS"."Feature_23" IS NULL) THEN 0.0349390944943 ELSE "ADS"."Feature_23" END AS impter_25, CASE WHEN ("ADS"."Feature_24" IS NULL) THEN -0.144361607634 ELSE "ADS"."Feature_24" END AS impter_26, CASE WHEN ("ADS"."Feature_25" IS NULL) THEN 0.146104677444 ELSE "ADS"."Feature_25" END AS impter_27, CASE WHEN ("ADS"."Feature_26" IS NULL) THEN 0.0676158423738 ELSE "ADS"."Feature_26" END AS impter_28, CASE WHEN ("ADS"."Feature_27" IS NULL) THEN -0.30836845608 ELSE "ADS"."Feature_27" END AS impter_29, CASE WHEN ("ADS"."Feature_28" IS NULL) THEN 0.952575301761 ELSE "ADS"."Feature_28" END AS impter_30, CASE WHEN ("ADS"."Feature_29" IS NULL) THEN -0.0581338391011 ELSE "ADS"."Feature_29" END AS impter_31, CASE WHEN ("ADS"."Feature_30" IS NULL) THEN -0.0131244127149 ELSE "ADS"."Feature_30" END AS impter_32, CASE WHEN ("ADS"."Feature_31" IS NULL) THEN -0.337551254331 ELSE "ADS"."Feature_31" END AS impter_33, CASE WHEN ("ADS"."Feature_32" IS NULL) THEN 0.0390265145932 ELSE "ADS"."Feature_32" END AS impter_34, CASE WHEN ("ADS"."Feature_33" IS NULL) THEN -0.0402939442132 ELSE "ADS"."Feature_33" END AS impter_35, CASE WHEN ("ADS"."Feature_34" IS NULL) THEN -0.171611885737 ELSE "ADS"."Feature_34" END AS impter_36, CASE WHEN ("ADS"."Feature_35" IS NULL) THEN 0.0126477868686 ELSE "ADS"."Feature_35" END AS impter_37, CASE WHEN ("ADS"."Feature_36" IS NULL) THEN 0.00519373530851 ELSE "ADS"."Feature_36" END AS impter_38, CASE WHEN ("ADS"."Feature_37" IS NULL) THEN -0.0171608765769 ELSE "ADS"."Feature_37" END AS impter_39, CASE WHEN ("ADS"."Feature_38" IS NULL) THEN 0.0450361559979 ELSE "ADS"."Feature_38" END AS impter_40, CASE WHEN ("ADS"."Feature_39" IS NULL) THEN -0.120358200226 ELSE "ADS"."Feature_39" END AS impter_41, CASE WHEN ("ADS"."Feature_40" IS NULL) THEN -0.176403922822 ELSE "ADS"."Feature_40" END AS impter_42, CASE WHEN ("ADS"."Feature_41" IS NULL) THEN -0.015157075927 ELSE "ADS"."Feature_41" END AS impter_43, CASE WHEN ("ADS"."Feature_42" IS NULL) THEN -0.306874019058 ELSE "ADS"."Feature_42" END AS impter_44, CASE WHEN ("ADS"."Feature_43" IS NULL) THEN -0.0403545806931 ELSE "ADS"."Feature_43" END AS impter_45, CASE WHEN ("ADS"."Feature_44" IS NULL) THEN -0.0078998151246 ELSE "ADS"."Feature_44" END AS impter_46, CASE WHEN ("ADS"."Feature_45" IS NULL) THEN 0.00264793225417 ELSE "ADS"."Feature_45" END AS impter_47, CASE WHEN ("ADS"."Feature_46" IS NULL) THEN -0.149210845983 ELSE "ADS"."Feature_46" END AS impter_48, CASE WHEN ("ADS"."Feature_47" IS NULL) THEN 0.248953992369 ELSE "ADS"."Feature_47" END AS impter_49, CASE WHEN ("ADS"."Feature_48" IS NULL) THEN -0.700424397972 ELSE "ADS"."Feature_48" END AS impter_50, CASE WHEN ("ADS"."Feature_49" IS NULL) THEN 0.0255276737501 ELSE "ADS"."Feature_49" END AS impter_51, CASE WHEN ("ADS"."Feature_50" IS NULL) THEN -0.15642138685 ELSE "ADS"."Feature_50" END AS impter_52, CASE WHEN ("ADS"."Feature_51" IS NULL) THEN -0.127838577178 ELSE "ADS"."Feature_51" END AS impter_53, CASE WHEN ("ADS"."Feature_52" IS NULL) THEN -0.369879523833 ELSE "ADS"."Feature_52" END AS impter_54, CASE WHEN ("ADS"."Feature_53" IS NULL) THEN 0.0410547455889 ELSE "ADS"."Feature_53" END AS impter_55, CASE WHEN ("ADS"."Feature_54" IS NULL) THEN -0.100474275314 ELSE "ADS"."Feature_54" END AS impter_56, CASE WHEN ("ADS"."Feature_55" IS NULL) THEN -0.131272886536 ELSE "ADS"."Feature_55" END AS impter_57, CASE WHEN ("ADS"."Feature_56" IS NULL) THEN 0.368578431365 ELSE "ADS"."Feature_56" END AS impter_58, CASE WHEN ("ADS"."Feature_57" IS NULL) THEN 0.222812465206 ELSE "ADS"."Feature_57" END AS impter_59, CASE WHEN ("ADS"."Feature_58" IS NULL) THEN -0.0062740876184 ELSE "ADS"."Feature_58" END AS impter_60, CASE WHEN ("ADS"."Feature_59" IS NULL) THEN 0.0142685989578 ELSE "ADS"."Feature_59" END AS impter_61, CASE WHEN ("ADS"."Feature_60" IS NULL) THEN -0.0285455115739 ELSE "ADS"."Feature_60" END AS impter_62, CASE WHEN ("ADS"."Feature_61" IS NULL) THEN -0.43749183185 ELSE "ADS"."Feature_61" END AS impter_63, CASE WHEN ("ADS"."Feature_62" IS NULL) THEN -0.368992780588 ELSE "ADS"."Feature_62" END AS impter_64, CASE WHEN ("ADS"."Feature_63" IS NULL) THEN 0.00116904181932 ELSE "ADS"."Feature_63" END AS impter_65, CASE WHEN ("ADS"."Feature_64" IS NULL) THEN -0.0115648737176 ELSE "ADS"."Feature_64" END AS impter_66, CASE WHEN ("ADS"."Feature_65" IS NULL) THEN -0.0435876998969 ELSE "ADS"."Feature_65" END AS impter_67, CASE WHEN ("ADS"."Feature_66" IS NULL) THEN -0.161863413739 ELSE "ADS"."Feature_66" END AS impter_68, CASE WHEN ("ADS"."Feature_67" IS NULL) THEN -0.017272641535 ELSE "ADS"."Feature_67" END AS impter_69, CASE WHEN ("ADS"."Feature_68" IS NULL) THEN -0.364030220369 ELSE "ADS"."Feature_68" END AS impter_70, CASE WHEN ("ADS"."Feature_69" IS NULL) THEN -0.0492730065024 ELSE "ADS"."Feature_69" END AS impter_71, CASE WHEN ("ADS"."Feature_70" IS NULL) THEN -0.0154685126573 ELSE "ADS"."Feature_70" END AS impter_72, CASE WHEN ("ADS"."Feature_71" IS NULL) THEN -0.191629393513 ELSE "ADS"."Feature_71" END AS impter_73, CASE WHEN ("ADS"."Feature_72" IS NULL) THEN 0.0237828303216 ELSE "ADS"."Feature_72" END AS impter_74, CASE WHEN ("ADS"."Feature_73" IS NULL) THEN 0.0204547996726 ELSE "ADS"."Feature_73" END AS impter_75, CASE WHEN ("ADS"."Feature_74" IS NULL) THEN -0.173355346593 ELSE "ADS"."Feature_74" END AS impter_76, CASE WHEN ("ADS"."Feature_75" IS NULL) THEN 0.0275822882458 ELSE "ADS"."Feature_75" END AS impter_77, CASE WHEN ("ADS"."Feature_76" IS NULL) THEN -0.0154523366782 ELSE "ADS"."Feature_76" END AS impter_78, CASE WHEN ("ADS"."Feature_77" IS NULL) THEN -0.0425555457733 ELSE "ADS"."Feature_77" END AS impter_79, CASE WHEN ("ADS"."Feature_78" IS NULL) THEN -0.00942573658037 ELSE "ADS"."Feature_78" END AS impter_80, CASE WHEN ("ADS"."Feature_79" IS NULL) THEN 0.00742367748933 ELSE "ADS"."Feature_79" END AS impter_81, CASE WHEN ("ADS"."Feature_80" IS NULL) THEN 0.0498533264368 ELSE "ADS"."Feature_80" END AS impter_82, CASE WHEN ("ADS"."Feature_81" IS NULL) THEN 0.0279602211794 ELSE "ADS"."Feature_81" END AS impter_83, CASE WHEN ("ADS"."Feature_82" IS NULL) THEN -0.00527050248758 ELSE "ADS"."Feature_82" END AS impter_84, CASE WHEN ("ADS"."Feature_83" IS NULL) THEN -0.0533936117742 ELSE "ADS"."Feature_83" END AS impter_85, CASE WHEN ("ADS"."Feature_84" IS NULL) THEN 0.171620332886 ELSE "ADS"."Feature_84" END AS impter_86, CASE WHEN ("ADS"."Feature_85" IS NULL) THEN 0.0372119970074 ELSE "ADS"."Feature_85" END AS impter_87, CASE WHEN ("ADS"."Feature_86" IS NULL) THEN 0.0184349733304 ELSE "ADS"."Feature_86" END AS impter_88, CASE WHEN ("ADS"."Feature_87" IS NULL) THEN 0.560521632617 ELSE "ADS"."Feature_87" END AS impter_89, CASE WHEN ("ADS"."Feature_88" IS NULL) THEN -0.052850462919 ELSE "ADS"."Feature_88" END AS impter_90, CASE WHEN ("ADS"."Feature_89" IS NULL) THEN 0.0793902173424 ELSE "ADS"."Feature_89" END AS impter_91, CASE WHEN ("ADS"."Feature_90" IS NULL) THEN -2.08866716312 ELSE "ADS"."Feature_90" END AS impter_92, CASE WHEN ("ADS"."Feature_91" IS NULL) THEN -1.0831020639 ELSE "ADS"."Feature_91" END AS impter_93, CASE WHEN ("ADS"."Feature_92" IS NULL) THEN -0.304702362821 ELSE "ADS"."Feature_92" END AS impter_94, CASE WHEN ("ADS"."Feature_93" IS NULL) THEN -0.935426259564 ELSE "ADS"."Feature_93" END AS impter_95, CASE WHEN ("ADS"."Feature_94" IS NULL) THEN -0.098411219927 ELSE "ADS"."Feature_94" END AS impter_96, CASE WHEN ("ADS"."Feature_95" IS NULL) THEN -0.53165348436 ELSE "ADS"."Feature_95" END AS impter_97, CASE WHEN ("ADS"."Feature_96" IS NULL) THEN 0.0141274221378 ELSE "ADS"."Feature_96" END AS impter_98, CASE WHEN ("ADS"."Feature_97" IS NULL) THEN -0.0126312774127 ELSE "ADS"."Feature_97" END AS impter_99, CASE WHEN ("ADS"."Feature_98" IS NULL) THEN 0.0312868812331 ELSE "ADS"."Feature_98" END AS impter_100, CASE WHEN ("ADS"."Feature_99" IS NULL) THEN -0.450390515385 ELSE "ADS"."Feature_99" END AS impter_101 
FROM "FourClass_100" AS "ADS"), 
"ADS_sca_2_OUT" AS 
(SELECT "ADS_imp_1_OUT"."KEY" AS "KEY", (CAST("ADS_imp_1_OUT".impter_2 AS DOUBLE) - 0.00653574012116) / 0.985821711919 AS scaler_2, (CAST("ADS_imp_1_OUT".impter_3 AS DOUBLE) - 0.16767827126) / 4.17893277906 AS scaler_3, (CAST("ADS_imp_1_OUT".impter_4 AS DOUBLE) - -0.0551470417358) / 4.08515606391 AS scaler_4, (CAST("ADS_imp_1_OUT".impter_5 AS DOUBLE) - 0.00152116930519) / 1.05839942213 AS scaler_5, (CAST("ADS_imp_1_OUT".impter_6 AS DOUBLE) - 0.0314276019104) / 0.958502901404 AS scaler_6, (CAST("ADS_imp_1_OUT".impter_7 AS DOUBLE) - 0.0261796831787) / 0.993854807715 AS scaler_7, (CAST("ADS_imp_1_OUT".impter_8 AS DOUBLE) - -0.0112547131221) / 0.995945599637 AS scaler_8, (CAST("ADS_imp_1_OUT".impter_9 AS DOUBLE) - -0.0168862118009) / 1.04542967803 AS scaler_9, (CAST("ADS_imp_1_OUT".impter_10 AS DOUBLE) - -0.0273427029645) / 4.33135674182 AS scaler_10, (CAST("ADS_imp_1_OUT".impter_11 AS DOUBLE) - -0.163701278848) / 4.45889820593 AS scaler_11, (CAST("ADS_imp_1_OUT".impter_12 AS DOUBLE) - 0.0354122507389) / 1.03661648781 AS scaler_12, (CAST("ADS_imp_1_OUT".impter_13 AS DOUBLE) - -0.0285291234756) / 1.00467620555 AS scaler_13, (CAST("ADS_imp_1_OUT".impter_14 AS DOUBLE) - -0.0267494449896) / 0.99962402671 AS scaler_14, (CAST("ADS_imp_1_OUT".impter_15 AS DOUBLE) - 0.386019822911) / 4.14480478652 AS scaler_15, (CAST("ADS_imp_1_OUT".impter_16 AS DOUBLE) - 0.0162145257314) / 1.01728129667 AS scaler_16, (CAST("ADS_imp_1_OUT".impter_17 AS DOUBLE) - 0.227237750778) / 4.36711262018 AS scaler_17, (CAST("ADS_imp_1_OUT".impter_18 AS DOUBLE) - 0.566373456694) / 4.11815688405 AS scaler_18, (CAST("ADS_imp_1_OUT".impter_19 AS DOUBLE) - 0.277696410616) / 4.01432897572 AS scaler_19, (CAST("ADS_imp_1_OUT".impter_20 AS DOUBLE) - 0.00599432681235) / 0.972439502321 AS scaler_20, (CAST("ADS_imp_1_OUT".impter_21 AS DOUBLE) - -0.0218525344697) / 0.985687517726 AS scaler_21, (CAST("ADS_imp_1_OUT".impter_22 AS DOUBLE) - -0.028375425917) / 1.02310346987 AS scaler_22, (CAST("ADS_imp_1_OUT".impter_23 AS DOUBLE) - 0.0151643232963) / 4.35314516918 AS scaler_23, (CAST("ADS_imp_1_OUT".impter_24 AS DOUBLE) - 0.0174691345488) / 1.00180565427 AS scaler_24, (CAST("ADS_imp_1_OUT".impter_25 AS DOUBLE) - 0.0349390944943) / 0.992721649768 AS scaler_25, (CAST("ADS_imp_1_OUT".impter_26 AS DOUBLE) - -0.144361607634) / 4.46739766886 AS scaler_26, (CAST("ADS_imp_1_OUT".impter_27 AS DOUBLE) - 0.146104677444) / 4.10734277856 AS scaler_27, (CAST("ADS_imp_1_OUT".impter_28 AS DOUBLE) - 0.0676158423738) / 4.27764303646 AS scaler_28, (CAST("ADS_imp_1_OUT".impter_29 AS DOUBLE) - -0.30836845608) / 4.03019568626 AS scaler_29, (CAST("ADS_imp_1_OUT".impter_30 AS DOUBLE) - 0.952575301761) / 4.01730262302 AS scaler_30, (CAST("ADS_imp_1_OUT".impter_31 AS DOUBLE) - -0.0581338391011) / 4.03353195749 AS scaler_31, (CAST("ADS_imp_1_OUT".impter_32 AS DOUBLE) - -0.0131244127149) / 0.955198781566 AS scaler_32, (CAST("ADS_imp_1_OUT".impter_33 AS DOUBLE) - -0.337551254331) / 4.10657168041 AS scaler_33, (CAST("ADS_imp_1_OUT".impter_34 AS DOUBLE) - 0.0390265145932) / 0.990359225337 AS scaler_34, (CAST("ADS_imp_1_OUT".impter_35 AS DOUBLE) - -0.0402939442132) / 1.01529611676 AS scaler_35, (CAST("ADS_imp_1_OUT".impter_36 AS DOUBLE) - -0.171611885737) / 4.17922956302 AS scaler_36, (CAST("ADS_imp_1_OUT".impter_37 AS DOUBLE) - 0.0126477868686) / 1.00783076186 AS scaler_37, (CAST("ADS_imp_1_OUT".impter_38 AS DOUBLE) - 0.00519373530851) / 4.29733218367 AS scaler_38, (CAST("ADS_imp_1_OUT".impter_39 AS DOUBLE) - -0.0171608765769) / 1.01737885571 AS scaler_39, (CAST("ADS_imp_1_OUT".impter_40 AS DOUBLE) - 0.0450361559979) / 3.90428113679 AS scaler_40, (CAST("ADS_imp_1_OUT".impter_41 AS DOUBLE) - -0.120358200226) / 3.98402860362 AS scaler_41, (CAST("ADS_imp_1_OUT".impter_42 AS DOUBLE) - -0.176403922822) / 4.06931463762 AS scaler_42, (CAST("ADS_imp_1_OUT".impter_43 AS DOUBLE) - -0.015157075927) / 1.02915738955 AS scaler_43, (CAST("ADS_imp_1_OUT".impter_44 AS DOUBLE) - -0.306874019058) / 4.34791251221 AS scaler_44, (CAST("ADS_imp_1_OUT".impter_45 AS DOUBLE) - -0.0403545806931) / 4.05064377381 AS scaler_45, (CAST("ADS_imp_1_OUT".impter_46 AS DOUBLE) - -0.0078998151246) / 1.00637547659 AS scaler_46, (CAST("ADS_imp_1_OUT".impter_47 AS DOUBLE) - 0.00264793225417) / 1.00214477559 AS scaler_47, (CAST("ADS_imp_1_OUT".impter_48 AS DOUBLE) - -0.149210845983) / 4.10340200989 AS scaler_48, (CAST("ADS_imp_1_OUT".impter_49 AS DOUBLE) - 0.248953992369) / 4.23220038033 AS scaler_49, (CAST("ADS_imp_1_OUT".impter_50 AS DOUBLE) - -0.700424397972) / 4.22076654199 AS scaler_50, (CAST("ADS_imp_1_OUT".impter_51 AS DOUBLE) - 0.0255276737501) / 1.02067409273 AS scaler_51, (CAST("ADS_imp_1_OUT".impter_52 AS DOUBLE) - -0.15642138685) / 4.07831067125 AS scaler_52, (CAST("ADS_imp_1_OUT".impter_53 AS DOUBLE) - -0.127838577178) / 4.24723680136 AS scaler_53, (CAST("ADS_imp_1_OUT".impter_54 AS DOUBLE) - -0.369879523833) / 4.03767584848 AS scaler_54, (CAST("ADS_imp_1_OUT".impter_55 AS DOUBLE) - 0.0410547455889) / 4.44557137144 AS scaler_55, (CAST("ADS_imp_1_OUT".impter_56 AS DOUBLE) - -0.100474275314) / 4.04583682644 AS scaler_56, (CAST("ADS_imp_1_OUT".impter_57 AS DOUBLE) - -0.131272886536) / 4.2566060095 AS scaler_57, (CAST("ADS_imp_1_OUT".impter_58 AS DOUBLE) - 0.368578431365) / 4.04294690881 AS scaler_58, (CAST("ADS_imp_1_OUT".impter_59 AS DOUBLE) - 0.222812465206) / 4.25239806876 AS scaler_59, (CAST("ADS_imp_1_OUT".impter_60 AS DOUBLE) - -0.0062740876184) / 1.0131754299 AS scaler_60, (CAST("ADS_imp_1_OUT".impter_61 AS DOUBLE) - 0.0142685989578) / 0.975232456173 AS scaler_61, (CAST("ADS_imp_1_OUT".impter_62 AS DOUBLE) - -0.0285455115739) / 0.996017661218 AS scaler_62, (CAST("ADS_imp_1_OUT".impter_63 AS DOUBLE) - -0.43749183185) / 4.23875925656 AS scaler_63, (CAST("ADS_imp_1_OUT".impter_64 AS DOUBLE) - -0.368992780588) / 4.18274187652 AS scaler_64, (CAST("ADS_imp_1_OUT".impter_65 AS DOUBLE) - 0.00116904181932) / 1.04333652499 AS scaler_65, (CAST("ADS_imp_1_OUT".impter_66 AS DOUBLE) - -0.0115648737176) / 4.08150429415 AS scaler_66, (CAST("ADS_imp_1_OUT".impter_67 AS DOUBLE) - -0.0435876998969) / 1.05866451901 AS scaler_67, (CAST("ADS_imp_1_OUT".impter_68 AS DOUBLE) - -0.161863413739) / 4.25966623517 AS scaler_68, (CAST("ADS_imp_1_OUT".impter_69 AS DOUBLE) - -0.017272641535) / 1.01030583344 AS scaler_69, (CAST("ADS_imp_1_OUT".impter_70 AS DOUBLE) - -0.364030220369) / 4.23529048916 AS scaler_70, (CAST("ADS_imp_1_OUT".impter_71 AS DOUBLE) - -0.0492730065024) / 4.31080236531 AS scaler_71, (CAST("ADS_imp_1_OUT".impter_72 AS DOUBLE) - -0.0154685126573) / 1.01066080153 AS scaler_72, (CAST("ADS_imp_1_OUT".impter_73 AS DOUBLE) - -0.191629393513) / 4.11604496555 AS scaler_73, (CAST("ADS_imp_1_OUT".impter_74 AS DOUBLE) - 0.0237828303216) / 0.997185935238 AS scaler_74, (CAST("ADS_imp_1_OUT".impter_75 AS DOUBLE) - 0.0204547996726) / 0.964047487679 AS scaler_75, (CAST("ADS_imp_1_OUT".impter_76 AS DOUBLE) - -0.173355346593) / 4.26884008329 AS scaler_76, (CAST("ADS_imp_1_OUT".impter_77 AS DOUBLE) - 0.0275822882458) / 1.00287363715 AS scaler_77, (CAST("ADS_imp_1_OUT".impter_78 AS DOUBLE) - -0.0154523366782) / 0.951796972878 AS scaler_78, (CAST("ADS_imp_1_OUT".impter_79 AS DOUBLE) - -0.0425555457733) / 1.02604198012 AS scaler_79, (CAST("ADS_imp_1_OUT".impter_80 AS DOUBLE) - -0.00942573658037) / 0.981547933163 AS scaler_80, (CAST("ADS_imp_1_OUT".impter_81 AS DOUBLE) - 0.00742367748933) / 1.0171447638 AS scaler_81, (CAST("ADS_imp_1_OUT".impter_82 AS DOUBLE) - 0.0498533264368) / 1.01381217519 AS scaler_82, (CAST("ADS_imp_1_OUT".impter_83 AS DOUBLE) - 0.0279602211794) / 1.00493310879 AS scaler_83, (CAST("ADS_imp_1_OUT".impter_84 AS DOUBLE) - -0.00527050248758) / 1.02332528491 AS scaler_84, (CAST("ADS_imp_1_OUT".impter_85 AS DOUBLE) - -0.0533936117742) / 1.00458919199 AS scaler_85, (CAST("ADS_imp_1_OUT".impter_86 AS DOUBLE) - 0.171620332886) / 4.24884427578 AS scaler_86, (CAST("ADS_imp_1_OUT".impter_87 AS DOUBLE) - 0.0372119970074) / 4.25404858308 AS scaler_87, (CAST("ADS_imp_1_OUT".impter_88 AS DOUBLE) - 0.0184349733304) / 3.94972884089 AS scaler_88, (CAST("ADS_imp_1_OUT".impter_89 AS DOUBLE) - 0.560521632617) / 4.33133243898 AS scaler_89, (CAST("ADS_imp_1_OUT".impter_90 AS DOUBLE) - -0.052850462919) / 1.03583971022 AS scaler_90, (CAST("ADS_imp_1_OUT".impter_91 AS DOUBLE) - 0.0793902173424) / 0.969876446028 AS scaler_91, (CAST("ADS_imp_1_OUT".impter_92 AS DOUBLE) - -2.08866716312) / 15.3022152465 AS scaler_92, (CAST("ADS_imp_1_OUT".impter_93 AS DOUBLE) - -1.0831020639) / 4.36710902027 AS scaler_93, (CAST("ADS_imp_1_OUT".impter_94 AS DOUBLE) - -0.304702362821) / 4.20429236235 AS scaler_94, (CAST("ADS_imp_1_OUT".impter_95 AS DOUBLE) - -0.935426259564) / 15.3570057667 AS scaler_95, (CAST("ADS_imp_1_OUT".impter_96 AS DOUBLE) - -0.098411219927) / 0.952484869944 AS scaler_96, (CAST("ADS_imp_1_OUT".impter_97 AS DOUBLE) - -0.53165348436) / 3.97700071824 AS scaler_97, (CAST("ADS_imp_1_OUT".impter_98 AS DOUBLE) - 0.0141274221378) / 0.987925892541 AS scaler_98, (CAST("ADS_imp_1_OUT".impter_99 AS DOUBLE) - -0.0126312774127) / 1.01519644483 AS scaler_99, (CAST("ADS_imp_1_OUT".impter_100 AS DOUBLE) - 0.0312868812331) / 0.989361802421 AS scaler_100, (CAST("ADS_imp_1_OUT".impter_101 AS DOUBLE) - -0.450390515385) / 4.24470032509 AS scaler_101 
FROM "ADS_imp_1_OUT"), 
"IL" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CAST("ADS_sca_2_OUT".scaler_2 AS DOUBLE) AS scaler_2, CAST("ADS_sca_2_OUT".scaler_3 AS DOUBLE) AS scaler_3, CAST("ADS_sca_2_OUT".scaler_4 AS DOUBLE) AS scaler_4, CAST("ADS_sca_2_OUT".scaler_5 AS DOUBLE) AS scaler_5, CAST("ADS_sca_2_OUT".scaler_6 AS DOUBLE) AS scaler_6, CAST("ADS_sca_2_OUT".scaler_7 AS DOUBLE) AS scaler_7, CAST("ADS_sca_2_OUT".scaler_8 AS DOUBLE) AS scaler_8, CAST("ADS_sca_2_OUT".scaler_9 AS DOUBLE) AS scaler_9, CAST("ADS_sca_2_OUT".scaler_10 AS DOUBLE) AS scaler_10, CAST("ADS_sca_2_OUT".scaler_11 AS DOUBLE) AS scaler_11, CAST("ADS_sca_2_OUT".scaler_12 AS DOUBLE) AS scaler_12, CAST("ADS_sca_2_OUT".scaler_13 AS DOUBLE) AS scaler_13, CAST("ADS_sca_2_OUT".scaler_14 AS DOUBLE) AS scaler_14, CAST("ADS_sca_2_OUT".scaler_15 AS DOUBLE) AS scaler_15, CAST("ADS_sca_2_OUT".scaler_16 AS DOUBLE) AS scaler_16, CAST("ADS_sca_2_OUT".scaler_17 AS DOUBLE) AS scaler_17, CAST("ADS_sca_2_OUT".scaler_18 AS DOUBLE) AS scaler_18, CAST("ADS_sca_2_OUT".scaler_19 AS DOUBLE) AS scaler_19, CAST("ADS_sca_2_OUT".scaler_20 AS DOUBLE) AS scaler_20, CAST("ADS_sca_2_OUT".scaler_21 AS DOUBLE) AS scaler_21, CAST("ADS_sca_2_OUT".scaler_22 AS DOUBLE) AS scaler_22, CAST("ADS_sca_2_OUT".scaler_23 AS DOUBLE) AS scaler_23, CAST("ADS_sca_2_OUT".scaler_24 AS DOUBLE) AS scaler_24, CAST("ADS_sca_2_OUT".scaler_25 AS DOUBLE) AS scaler_25, CAST("ADS_sca_2_OUT".scaler_26 AS DOUBLE) AS scaler_26, CAST("ADS_sca_2_OUT".scaler_27 AS DOUBLE) AS scaler_27, CAST("ADS_sca_2_OUT".scaler_28 AS DOUBLE) AS scaler_28, CAST("ADS_sca_2_OUT".scaler_29 AS DOUBLE) AS scaler_29, CAST("ADS_sca_2_OUT".scaler_30 AS DOUBLE) AS scaler_30, CAST("ADS_sca_2_OUT".scaler_31 AS DOUBLE) AS scaler_31, CAST("ADS_sca_2_OUT".scaler_32 AS DOUBLE) AS scaler_32, CAST("ADS_sca_2_OUT".scaler_33 AS DOUBLE) AS scaler_33, CAST("ADS_sca_2_OUT".scaler_34 AS DOUBLE) AS scaler_34, CAST("ADS_sca_2_OUT".scaler_35 AS DOUBLE) AS scaler_35, CAST("ADS_sca_2_OUT".scaler_36 AS DOUBLE) AS scaler_36, CAST("ADS_sca_2_OUT".scaler_37 AS DOUBLE) AS scaler_37, CAST("ADS_sca_2_OUT".scaler_38 AS DOUBLE) AS scaler_38, CAST("ADS_sca_2_OUT".scaler_39 AS DOUBLE) AS scaler_39, CAST("ADS_sca_2_OUT".scaler_40 AS DOUBLE) AS scaler_40, CAST("ADS_sca_2_OUT".scaler_41 AS DOUBLE) AS scaler_41, CAST("ADS_sca_2_OUT".scaler_42 AS DOUBLE) AS scaler_42, CAST("ADS_sca_2_OUT".scaler_43 AS DOUBLE) AS scaler_43, CAST("ADS_sca_2_OUT".scaler_44 AS DOUBLE) AS scaler_44, CAST("ADS_sca_2_OUT".scaler_45 AS DOUBLE) AS scaler_45, CAST("ADS_sca_2_OUT".scaler_46 AS DOUBLE) AS scaler_46, CAST("ADS_sca_2_OUT".scaler_47 AS DOUBLE) AS scaler_47, CAST("ADS_sca_2_OUT".scaler_48 AS DOUBLE) AS scaler_48, CAST("ADS_sca_2_OUT".scaler_49 AS DOUBLE) AS scaler_49, CAST("ADS_sca_2_OUT".scaler_50 AS DOUBLE) AS scaler_50, CAST("ADS_sca_2_OUT".scaler_51 AS DOUBLE) AS scaler_51, CAST("ADS_sca_2_OUT".scaler_52 AS DOUBLE) AS scaler_52, CAST("ADS_sca_2_OUT".scaler_53 AS DOUBLE) AS scaler_53, CAST("ADS_sca_2_OUT".scaler_54 AS DOUBLE) AS scaler_54, CAST("ADS_sca_2_OUT".scaler_55 AS DOUBLE) AS scaler_55, CAST("ADS_sca_2_OUT".scaler_56 AS DOUBLE) AS scaler_56, CAST("ADS_sca_2_OUT".scaler_57 AS DOUBLE) AS scaler_57, CAST("ADS_sca_2_OUT".scaler_58 AS DOUBLE) AS scaler_58, CAST("ADS_sca_2_OUT".scaler_59 AS DOUBLE) AS scaler_59, CAST("ADS_sca_2_OUT".scaler_60 AS DOUBLE) AS scaler_60, CAST("ADS_sca_2_OUT".scaler_61 AS DOUBLE) AS scaler_61, CAST("ADS_sca_2_OUT".scaler_62 AS DOUBLE) AS scaler_62, CAST("ADS_sca_2_OUT".scaler_63 AS DOUBLE) AS scaler_63, CAST("ADS_sca_2_OUT".scaler_64 AS DOUBLE) AS scaler_64, CAST("ADS_sca_2_OUT".scaler_65 AS DOUBLE) AS scaler_65, CAST("ADS_sca_2_OUT".scaler_66 AS DOUBLE) AS scaler_66, CAST("ADS_sca_2_OUT".scaler_67 AS DOUBLE) AS scaler_67, CAST("ADS_sca_2_OUT".scaler_68 AS DOUBLE) AS scaler_68, CAST("ADS_sca_2_OUT".scaler_69 AS DOUBLE) AS scaler_69, CAST("ADS_sca_2_OUT".scaler_70 AS DOUBLE) AS scaler_70, CAST("ADS_sca_2_OUT".scaler_71 AS DOUBLE) AS scaler_71, CAST("ADS_sca_2_OUT".scaler_72 AS DOUBLE) AS scaler_72, CAST("ADS_sca_2_OUT".scaler_73 AS DOUBLE) AS scaler_73, CAST("ADS_sca_2_OUT".scaler_74 AS DOUBLE) AS scaler_74, CAST("ADS_sca_2_OUT".scaler_75 AS DOUBLE) AS scaler_75, CAST("ADS_sca_2_OUT".scaler_76 AS DOUBLE) AS scaler_76, CAST("ADS_sca_2_OUT".scaler_77 AS DOUBLE) AS scaler_77, CAST("ADS_sca_2_OUT".scaler_78 AS DOUBLE) AS scaler_78, CAST("ADS_sca_2_OUT".scaler_79 AS DOUBLE) AS scaler_79, CAST("ADS_sca_2_OUT".scaler_80 AS DOUBLE) AS scaler_80, CAST("ADS_sca_2_OUT".scaler_81 AS DOUBLE) AS scaler_81, CAST("ADS_sca_2_OUT".scaler_82 AS DOUBLE) AS scaler_82, CAST("ADS_sca_2_OUT".scaler_83 AS DOUBLE) AS scaler_83, CAST("ADS_sca_2_OUT".scaler_84 AS DOUBLE) AS scaler_84, CAST("ADS_sca_2_OUT".scaler_85 AS DOUBLE) AS scaler_85, CAST("ADS_sca_2_OUT".scaler_86 AS DOUBLE) AS scaler_86, CAST("ADS_sca_2_OUT".scaler_87 AS DOUBLE) AS scaler_87, CAST("ADS_sca_2_OUT".scaler_88 AS DOUBLE) AS scaler_88, CAST("ADS_sca_2_OUT".scaler_89 AS DOUBLE) AS scaler_89, CAST("ADS_sca_2_OUT".scaler_90 AS DOUBLE) AS scaler_90, CAST("ADS_sca_2_OUT".scaler_91 AS DOUBLE) AS scaler_91, CAST("ADS_sca_2_OUT".scaler_92 AS DOUBLE) AS scaler_92, CAST("ADS_sca_2_OUT".scaler_93 AS DOUBLE) AS scaler_93, CAST("ADS_sca_2_OUT".scaler_94 AS DOUBLE) AS scaler_94, CAST("ADS_sca_2_OUT".scaler_95 AS DOUBLE) AS scaler_95, CAST("ADS_sca_2_OUT".scaler_96 AS DOUBLE) AS scaler_96, CAST("ADS_sca_2_OUT".scaler_97 AS DOUBLE) AS scaler_97, CAST("ADS_sca_2_OUT".scaler_98 AS DOUBLE) AS scaler_98, CAST("ADS_sca_2_OUT".scaler_99 AS DOUBLE) AS scaler_99, CAST("ADS_sca_2_OUT".scaler_100 AS DOUBLE) AS scaler_100, CAST("ADS_sca_2_OUT".scaler_101 AS DOUBLE) AS scaler_101 
FROM "ADS_sca_2_OUT"), 
"HL_BA_1" AS 
(SELECT "IL"."KEY" AS "KEY", 1.32235022066 * "IL".scaler_2 + -0.219667744507 * "IL".scaler_3 + 0.32760853083 * "IL".scaler_4 + -0.0559016702404 * "IL".scaler_5 + -0.317082048956 * "IL".scaler_6 + 0.705690224413 * "IL".scaler_7 + 0.00440748971914 * "IL".scaler_8 + -1.27625970729 * "IL".scaler_9 + -1.35221781729 * "IL".scaler_10 + 0.724194881856 * "IL".scaler_11 + -0.960021423044 * "IL".scaler_12 + -0.650504267345 * "IL".scaler_13 + 0.566113689475 * "IL".scaler_14 + 1.70598800877 * "IL".scaler_15 + -0.733730833978 * "IL".scaler_16 + -0.927995198218 * "IL".scaler_17 + 0.0890359610297 * "IL".scaler_18 + -3.50426715923 * "IL".scaler_19 + -0.0791178842022 * "IL".scaler_20 + -0.808939703771 * "IL".scaler_21 + 0.675174669802 * "IL".scaler_22 + 0.127043568084 * "IL".scaler_23 + 1.207963841 * "IL".scaler_24 + -0.607034084093 * "IL".scaler_25 + -0.0652261997744 * "IL".scaler_26 + 1.52169436794 * "IL".scaler_27 + 0.622935518144 * "IL".scaler_28 + 0.879331663357 * "IL".scaler_29 + 0.703953997969 * "IL".scaler_30 + 1.23326448539 * "IL".scaler_31 + 0.325624497205 * "IL".scaler_32 + 1.61759173811 * "IL".scaler_33 + -1.03159298079 * "IL".scaler_34 + -0.464284335695 * "IL".scaler_35 + 0.774783962066 * "IL".scaler_36 + -0.148469071914 * "IL".scaler_37 + 1.43274420965 * "IL".scaler_38 + -1.57958242502 * "IL".scaler_39 + -0.162478801942 * "IL".scaler_40 + 1.0807236349 * "IL".scaler_41 + -0.772440465129 * "IL".scaler_42 + -0.23657050971 * "IL".scaler_43 + -0.396338579198 * "IL".scaler_44 + 1.44458641187 * "IL".scaler_45 + -0.164227379835 * "IL".scaler_46 + -0.675636090943 * "IL".scaler_47 + 2.03991390506 * "IL".scaler_48 + 0.0074591389841 * "IL".scaler_49 + -1.50891785018 * "IL".scaler_50 + -0.177471840847 * "IL".scaler_51 + 0.582718219673 * "IL".scaler_52 + 0.698453660649 * "IL".scaler_53 + 1.94464153356 * "IL".scaler_54 + 0.709738142587 * "IL".scaler_55 + 1.829587318 * "IL".scaler_56 + -1.35714938185 * "IL".scaler_57 + -0.432851998155 * "IL".scaler_58 + -0.125804873653 * "IL".scaler_59 + 0.193180404004 * "IL".scaler_60 + 1.45472497401 * "IL".scaler_61 + -0.0941697744933 * "IL".scaler_62 + -0.336897035097 * "IL".scaler_63 + -0.606560026019 * "IL".scaler_64 + -0.154463155202 * "IL".scaler_65 + -1.93017907596 * "IL".scaler_66 + -0.170475598158 * "IL".scaler_67 + -2.43794060545 * "IL".scaler_68 + 0.266729457466 * "IL".scaler_69 + -2.1126498055 * "IL".scaler_70 + 1.11527231703 * "IL".scaler_71 + 0.453302713917 * "IL".scaler_72 + -0.419364330387 * "IL".scaler_73 + 0.223122463294 * "IL".scaler_74 + -0.172148615992 * "IL".scaler_75 + -0.825797479389 * "IL".scaler_76 + -2.08143144633 * "IL".scaler_77 + 0.407007587984 * "IL".scaler_78 + -0.316848173012 * "IL".scaler_79 + -0.530930665504 * "IL".scaler_80 + -0.344597717447 * "IL".scaler_81 + -0.998679824256 * "IL".scaler_82 + -0.246203628813 * "IL".scaler_83 + -0.339814824272 * "IL".scaler_84 + 0.410252504191 * "IL".scaler_85 + 1.71631237851 * "IL".scaler_86 + -0.783138173257 * "IL".scaler_87 + 2.14049344392 * "IL".scaler_88 + 0.800651331649 * "IL".scaler_89 + 0.410071807558 * "IL".scaler_90 + -1.63855333376 * "IL".scaler_91 + 0.697730368868 * "IL".scaler_92 + 0.0772341335018 * "IL".scaler_93 + -0.476320609428 * "IL".scaler_94 + -0.721029972486 * "IL".scaler_95 + 0.229792397672 * "IL".scaler_96 + 0.0653327031013 * "IL".scaler_97 + 0.175180860999 * "IL".scaler_98 + -0.625966834395 * "IL".scaler_99 + -0.818075783407 * "IL".scaler_100 + 1.52013831926 * "IL".scaler_101 + -0.53366927126 AS "NEUR_1_1", 1.80167667243 * "IL".scaler_2 + -2.00666661199 * "IL".scaler_3 + -0.674037656266 * "IL".scaler_4 + 0.251159977436 * "IL".scaler_5 + -1.17786085471 * "IL".scaler_6 + 0.134985313442 * "IL".scaler_7 + -1.56578401395 * "IL".scaler_8 + -1.53698795597 * "IL".scaler_9 + 0.0342533726439 * "IL".scaler_10 + -0.336929896612 * "IL".scaler_11 + -1.6489261154 * "IL".scaler_12 + -0.701284986431 * "IL".scaler_13 + 0.0565043622541 * "IL".scaler_14 + 1.41559424141 * "IL".scaler_15 + 0.431399645874 * "IL".scaler_16 + -0.0823409447444 * "IL".scaler_17 + -0.431694193603 * "IL".scaler_18 + -0.883058073411 * "IL".scaler_19 + -0.0913603588141 * "IL".scaler_20 + -0.325244137762 * "IL".scaler_21 + 0.473798518232 * "IL".scaler_22 + -0.200042244628 * "IL".scaler_23 + -0.349150796132 * "IL".scaler_24 + 0.356958110224 * "IL".scaler_25 + 0.239797726218 * "IL".scaler_26 + -0.0319801743814 * "IL".scaler_27 + -0.142153711643 * "IL".scaler_28 + 0.544404056098 * "IL".scaler_29 + 1.36803851913 * "IL".scaler_30 + -1.56678281353 * "IL".scaler_31 + -2.10605553499 * "IL".scaler_32 + 0.378038105242 * "IL".scaler_33 + -0.606639792729 * "IL".scaler_34 + 0.134694758347 * "IL".scaler_35 + -2.24505020321 * "IL".scaler_36 + 0.151233949549 * "IL".scaler_37 + 0.958377274473 * "IL".scaler_38 + -0.0492412588018 * "IL".scaler_39 + -1.93985216241 * "IL".scaler_40 + 0.227314542424 * "IL".scaler_41 + -0.0487067087512 * "IL".scaler_42 + 1.03750428048 * "IL".scaler_43 + 0.788488431575 * "IL".scaler_44 + -1.37392300064 * "IL".scaler_45 + -0.0580712518306 * "IL".scaler_46 + 0.476201153878 * "IL".scaler_47 + 1.63598022539 * "IL".scaler_48 + -0.549685349684 * "IL".scaler_49 + 0.322425795985 * "IL".scaler_50 + -0.581440947262 * "IL".scaler_51 + -1.2844330169 * "IL".scaler_52 + -0.187539668532 * "IL".scaler_53 + -0.60825767716 * "IL".scaler_54 + -0.979691892567 * "IL".scaler_55 + 0.0819168955727 * "IL".scaler_56 + -0.0732947793991 * "IL".scaler_57 + -0.0963275266399 * "IL".scaler_58 + 0.687598959234 * "IL".scaler_59 + 1.09246114516 * "IL".scaler_60 + 0.457359475513 * "IL".scaler_61 + 0.333394468479 * "IL".scaler_62 + 0.523237423347 * "IL".scaler_63 + -1.0690934642 * "IL".scaler_64 + 0.591648079166 * "IL".scaler_65 + 0.956584289254 * "IL".scaler_66 + 1.12668281819 * "IL".scaler_67 + -0.985895234819 * "IL".scaler_68 + -1.13421374562 * "IL".scaler_69 + 1.48359898544 * "IL".scaler_70 + 0.460144950264 * "IL".scaler_71 + -0.485890609141 * "IL".scaler_72 + -0.13453230124 * "IL".scaler_73 + 0.0958947643508 * "IL".scaler_74 + 0.536105441225 * "IL".scaler_75 + -0.00905986368968 * "IL".scaler_76 + -0.408148505833 * "IL".scaler_77 + 1.3831805003 * "IL".scaler_78 + 0.114155447506 * "IL".scaler_79 + -0.10684416505 * "IL".scaler_80 + 0.0185317754204 * "IL".scaler_81 + -1.19432544786 * "IL".scaler_82 + 0.49173934846 * "IL".scaler_83 + 0.837614128063 * "IL".scaler_84 + -0.297170514456 * "IL".scaler_85 + -1.96102412882 * "IL".scaler_86 + -0.494630291421 * "IL".scaler_87 + -0.79192534732 * "IL".scaler_88 + -1.3575951177 * "IL".scaler_89 + 0.472647053761 * "IL".scaler_90 + 0.0134158514845 * "IL".scaler_91 + -0.569806914143 * "IL".scaler_92 + -0.762297707163 * "IL".scaler_93 + 1.23318610487 * "IL".scaler_94 + -0.320194332003 * "IL".scaler_95 + 0.00942390248396 * "IL".scaler_96 + -2.20595999492 * "IL".scaler_97 + 0.319763705694 * "IL".scaler_98 + -1.0418851023 * "IL".scaler_99 + 0.582097094719 * "IL".scaler_100 + 0.768096554551 * "IL".scaler_101 + -1.30935501676 AS "NEUR_1_2", 0.0515309375957 * "IL".scaler_2 + 0.578752264132 * "IL".scaler_3 + 1.66983081234 * "IL".scaler_4 + 0.660556552128 * "IL".scaler_5 + 0.45023335044 * "IL".scaler_6 + 0.474644076637 * "IL".scaler_7 + -0.338701071779 * "IL".scaler_8 + 0.078198127351 * "IL".scaler_9 + 0.545954726831 * "IL".scaler_10 + 1.15031478947 * "IL".scaler_11 + -0.190443328419 * "IL".scaler_12 + -0.303993353525 * "IL".scaler_13 + -0.741268477661 * "IL".scaler_14 + -0.361764814403 * "IL".scaler_15 + -0.0697636495075 * "IL".scaler_16 + -2.565072449 * "IL".scaler_17 + 0.447693541383 * "IL".scaler_18 + 0.0523244442567 * "IL".scaler_19 + 0.161749890931 * "IL".scaler_20 + -0.235287688396 * "IL".scaler_21 + 0.937127269152 * "IL".scaler_22 + 0.0672954512402 * "IL".scaler_23 + -0.169217098787 * "IL".scaler_24 + -0.759537043264 * "IL".scaler_25 + 0.937949326827 * "IL".scaler_26 + 0.716178552699 * "IL".scaler_27 + 1.40609845727 * "IL".scaler_28 + 0.416079439998 * "IL".scaler_29 + -0.601526940639 * "IL".scaler_30 + 2.06090762631 * "IL".scaler_31 + 0.261787550665 * "IL".scaler_32 + 0.876020418132 * "IL".scaler_33 + -0.755528891325 * "IL".scaler_34 + 0.365289782269 * "IL".scaler_35 + -2.20674001255 * "IL".scaler_36 + -0.926779379036 * "IL".scaler_37 + 1.24446525147 * "IL".scaler_38 + 1.04096191996 * "IL".scaler_39 + 2.84353601968 * "IL".scaler_40 + -0.854844609867 * "IL".scaler_41 + -1.5302236932 * "IL".scaler_42 + 0.139747835008 * "IL".scaler_43 + 0.205017271125 * "IL".scaler_44 + 1.21715868622 * "IL".scaler_45 + -0.468152920085 * "IL".scaler_46 + -0.219316475347 * "IL".scaler_47 + 0.648581090303 * "IL".scaler_48 + -1.24530476724 * "IL".scaler_49 + 0.972334893566 * "IL".scaler_50 + 0.100566909937 * "IL".scaler_51 + -0.24168844781 * "IL".scaler_52 + -2.42938685159 * "IL".scaler_53 + -0.539195336267 * "IL".scaler_54 + 2.23369597145 * "IL".scaler_55 + 0.0459934591044 * "IL".scaler_56 + -0.377203189346 * "IL".scaler_57 + 1.2607362498 * "IL".scaler_58 + 0.394277974992 * "IL".scaler_59 + -0.0313755837028 * "IL".scaler_60 + -0.147484381526 * "IL".scaler_61 + -0.0940180565444 * "IL".scaler_62 + -2.24899297196 * "IL".scaler_63 + 0.440402837737 * "IL".scaler_64 + -0.668950226134 * "IL".scaler_65 + -0.265359270061 * "IL".scaler_66 + -0.0262147281427 * "IL".scaler_67 + 2.00355738051 * "IL".scaler_68 + 0.541058366058 * "IL".scaler_69 + 0.045788881416 * "IL".scaler_70 + 0.2464558311 * "IL".scaler_71 + 0.707138264031 * "IL".scaler_72 + -1.73070719103 * "IL".scaler_73 + 0.289608421131 * "IL".scaler_74 + 0.269983348553 * "IL".scaler_75 + -0.749611703109 * "IL".scaler_76 + -1.2002197073 * "IL".scaler_77 + 0.0957495772544 * "IL".scaler_78 + 0.138616073053 * "IL".scaler_79 + 0.00539603948106 * "IL".scaler_80 + 0.702213941761 * "IL".scaler_81 + 0.708760735842 * "IL".scaler_82 + 1.05423576699 * "IL".scaler_83 + -0.305844472557 * "IL".scaler_84 + -0.0278866984377 * "IL".scaler_85 + 0.846351170956 * "IL".scaler_86 + 2.01031030654 * "IL".scaler_87 + -0.495770058713 * "IL".scaler_88 + -0.0719609172707 * "IL".scaler_89 + -0.018282698227 * "IL".scaler_90 + -0.879390538097 * "IL".scaler_91 + 0.694614318087 * "IL".scaler_92 + -1.04984320665 * "IL".scaler_93 + 0.812038463471 * "IL".scaler_94 + -0.112089701278 * "IL".scaler_95 + 0.664578711541 * "IL".scaler_96 + -0.425958544508 * "IL".scaler_97 + -1.21402034452 * "IL".scaler_98 + 0.622238277301 * "IL".scaler_99 + -0.557541417941 * "IL".scaler_100 + 0.199222017055 * "IL".scaler_101 + -1.55714966994 AS "NEUR_1_3" 
FROM "IL"), 
"HL_1_relu" AS 
(SELECT "HL_BA_1"."KEY" AS "KEY", CASE WHEN ("HL_BA_1"."NEUR_1_1" >= 0.0) THEN "HL_BA_1"."NEUR_1_1" ELSE 0.0 END AS "NEUR_1_1", CASE WHEN ("HL_BA_1"."NEUR_1_2" >= 0.0) THEN "HL_BA_1"."NEUR_1_2" ELSE 0.0 END AS "NEUR_1_2", CASE WHEN ("HL_BA_1"."NEUR_1_3" >= 0.0) THEN "HL_BA_1"."NEUR_1_3" ELSE 0.0 END AS "NEUR_1_3" 
FROM "HL_BA_1"), 
"HL_BA_2" AS 
(SELECT "HL_1_relu"."KEY" AS "KEY", -0.554567178541 * "HL_1_relu"."NEUR_1_1" + 1.61924204719 * "HL_1_relu"."NEUR_1_2" + 1.12118625265 * "HL_1_relu"."NEUR_1_3" + -1.30540849259 AS "NEUR_2_1", -3.86823121207 * "HL_1_relu"."NEUR_1_1" + 1.83677081254 * "HL_1_relu"."NEUR_1_2" + 1.98994774242 * "HL_1_relu"."NEUR_1_3" + 0.431333856508 AS "NEUR_2_2", -3.2440148389 * "HL_1_relu"."NEUR_1_1" + 2.72896448156 * "HL_1_relu"."NEUR_1_2" + -0.00219948922074 * "HL_1_relu"."NEUR_1_3" + 0.0104650364024 AS "NEUR_2_3", -1.46976320579 * "HL_1_relu"."NEUR_1_1" + 2.00796155344 * "HL_1_relu"."NEUR_1_2" + -3.82257544915 * "HL_1_relu"."NEUR_1_3" + 0.56968853612 AS "NEUR_2_4", -0.609339961528 * "HL_1_relu"."NEUR_1_1" + -0.377664251471 * "HL_1_relu"."NEUR_1_2" + -0.672994114222 * "HL_1_relu"."NEUR_1_3" + -0.018078316227 AS "NEUR_2_5" 
FROM "HL_1_relu"), 
"HL_2_relu" AS 
(SELECT "HL_BA_2"."KEY" AS "KEY", CASE WHEN ("HL_BA_2"."NEUR_2_1" >= 0.0) THEN "HL_BA_2"."NEUR_2_1" ELSE 0.0 END AS "NEUR_2_1", CASE WHEN ("HL_BA_2"."NEUR_2_2" >= 0.0) THEN "HL_BA_2"."NEUR_2_2" ELSE 0.0 END AS "NEUR_2_2", CASE WHEN ("HL_BA_2"."NEUR_2_3" >= 0.0) THEN "HL_BA_2"."NEUR_2_3" ELSE 0.0 END AS "NEUR_2_3", CASE WHEN ("HL_BA_2"."NEUR_2_4" >= 0.0) THEN "HL_BA_2"."NEUR_2_4" ELSE 0.0 END AS "NEUR_2_4", CASE WHEN ("HL_BA_2"."NEUR_2_5" >= 0.0) THEN "HL_BA_2"."NEUR_2_5" ELSE 0.0 END AS "NEUR_2_5" 
FROM "HL_BA_2"), 
"OL_BA" AS 
(SELECT "HL_2_relu"."KEY" AS "KEY", -0.423787909755 * "HL_2_relu"."NEUR_2_1" + -3.4241681572 * "HL_2_relu"."NEUR_2_2" + -2.0981377733 * "HL_2_relu"."NEUR_2_3" + 1.9887828099 * "HL_2_relu"."NEUR_2_4" + 0.589882358852 * "HL_2_relu"."NEUR_2_5" + 1.23854635983 AS "NEUR_3_1", 2.07193678618 * "HL_2_relu"."NEUR_2_1" + 0.266299724484 * "HL_2_relu"."NEUR_2_2" + -2.20039886113 * "HL_2_relu"."NEUR_2_3" + -3.01227300995 * "HL_2_relu"."NEUR_2_4" + 0.396099996738 * "HL_2_relu"."NEUR_2_5" + 0.963455600459 AS "NEUR_3_2", 0.518801080159 * "HL_2_relu"."NEUR_2_1" + 1.34263343836 * "HL_2_relu"."NEUR_2_2" + 2.83989327442 * "HL_2_relu"."NEUR_2_3" + -1.56795579013 * "HL_2_relu"."NEUR_2_4" + 0.663499396013 * "HL_2_relu"."NEUR_2_5" + -1.02121969156 AS "NEUR_3_3", -1.55068130877 * "HL_2_relu"."NEUR_2_1" + 2.17988511362 * "HL_2_relu"."NEUR_2_2" + 0.666628132878 * "HL_2_relu"."NEUR_2_3" + 2.3156793334 * "HL_2_relu"."NEUR_2_4" + -0.485521831888 * "HL_2_relu"."NEUR_2_5" + -2.49823248838 AS "NEUR_3_4" 
FROM "HL_2_relu"), 
"OL_softmax" AS 
(SELECT "OL_BA"."KEY" AS "KEY", "OL_BA"."NEUR_3_1" AS "NEUR_3_1", "OL_BA"."NEUR_3_2" AS "NEUR_3_2", "OL_BA"."NEUR_3_3" AS "NEUR_3_3", "OL_BA"."NEUR_3_4" AS "NEUR_3_4" 
FROM "OL_BA"), 
orig_cte AS 
(SELECT "OL_softmax"."KEY" AS "KEY", "OL_softmax"."NEUR_3_1" AS "Score_0", "OL_softmax"."NEUR_3_2" AS "Score_1", "OL_softmax"."NEUR_3_3" AS "Score_2", "OL_softmax"."NEUR_3_4" AS "Score_3", CAST(NULL AS FLOAT) AS "Proba_0", CAST(NULL AS FLOAT) AS "Proba_1", CAST(NULL AS FLOAT) AS "Proba_2", CAST(NULL AS FLOAT) AS "Proba_3", CAST(NULL AS FLOAT) AS "LogProba_0", CAST(NULL AS FLOAT) AS "LogProba_1", CAST(NULL AS FLOAT) AS "LogProba_2", CAST(NULL AS FLOAT) AS "LogProba_3", CAST(NULL AS INTEGER) AS "Decision", CAST(NULL AS FLOAT) AS "DecisionProba" 
FROM "OL_softmax"), 
score_class_union AS 
(SELECT scu."KEY_u" AS "KEY_u", scu.class AS class, scu."LogProba" AS "LogProba", scu."Proba" AS "Proba", scu."Score" AS "Score" 
FROM (SELECT orig_cte."KEY" AS "KEY_u", 0 AS class, orig_cte."LogProba_0" AS "LogProba", orig_cte."Proba_0" AS "Proba", orig_cte."Score_0" AS "Score" 
FROM orig_cte UNION ALL SELECT orig_cte."KEY" AS "KEY_u", 1 AS class, orig_cte."LogProba_1" AS "LogProba", orig_cte."Proba_1" AS "Proba", orig_cte."Score_1" AS "Score" 
FROM orig_cte UNION ALL SELECT orig_cte."KEY" AS "KEY_u", 2 AS class, orig_cte."LogProba_2" AS "LogProba", orig_cte."Proba_2" AS "Proba", orig_cte."Score_2" AS "Score" 
FROM orig_cte UNION ALL SELECT orig_cte."KEY" AS "KEY_u", 3 AS class, orig_cte."LogProba_3" AS "LogProba", orig_cte."Proba_3" AS "Proba", orig_cte."Score_3" AS "Score" 
FROM orig_cte) AS scu), 
score_max AS 
(SELECT orig_cte."KEY" AS "KEY", orig_cte."Score_0" AS "Score_0", orig_cte."Score_1" AS "Score_1", orig_cte."Score_2" AS "Score_2", orig_cte."Score_3" AS "Score_3", orig_cte."Proba_0" AS "Proba_0", orig_cte."Proba_1" AS "Proba_1", orig_cte."Proba_2" AS "Proba_2", orig_cte."Proba_3" AS "Proba_3", orig_cte."LogProba_0" AS "LogProba_0", orig_cte."LogProba_1" AS "LogProba_1", orig_cte."LogProba_2" AS "LogProba_2", orig_cte."LogProba_3" AS "LogProba_3", orig_cte."Decision" AS "Decision", orig_cte."DecisionProba" AS "DecisionProba", max_select."KEY_m" AS "KEY_m", max_select."max_Score" AS "max_Score" 
FROM orig_cte LEFT OUTER JOIN (SELECT score_class_union."KEY_u" AS "KEY_m", max(score_class_union."Score") AS "max_Score" 
FROM score_class_union GROUP BY score_class_union."KEY_u") AS max_select ON orig_cte."KEY" = max_select."KEY_m"), 
score_soft_max_deltas AS 
(SELECT score_max."KEY" AS "KEY", score_max."Score_0" AS "Score_0", score_max."Score_1" AS "Score_1", score_max."Score_2" AS "Score_2", score_max."Score_3" AS "Score_3", score_max."Proba_0" AS "Proba_0", score_max."Proba_1" AS "Proba_1", score_max."Proba_2" AS "Proba_2", score_max."Proba_3" AS "Proba_3", score_max."LogProba_0" AS "LogProba_0", score_max."LogProba_1" AS "LogProba_1", score_max."LogProba_2" AS "LogProba_2", score_max."LogProba_3" AS "LogProba_3", score_max."Decision" AS "Decision", score_max."DecisionProba" AS "DecisionProba", score_max."KEY_m" AS "KEY_m", score_max."max_Score" AS "max_Score", exp(CASE WHEN (score_max."Score_0" - score_max."max_Score" >= -709.782712893) THEN score_max."Score_0" - score_max."max_Score" ELSE -709.782712893 END) AS "exp_delta_Score_0", exp(CASE WHEN (score_max."Score_1" - score_max."max_Score" >= -709.782712893) THEN score_max."Score_1" - score_max."max_Score" ELSE -709.782712893 END) AS "exp_delta_Score_1", exp(CASE WHEN (score_max."Score_2" - score_max."max_Score" >= -709.782712893) THEN score_max."Score_2" - score_max."max_Score" ELSE -709.782712893 END) AS "exp_delta_Score_2", exp(CASE WHEN (score_max."Score_3" - score_max."max_Score" >= -709.782712893) THEN score_max."Score_3" - score_max."max_Score" ELSE -709.782712893 END) AS "exp_delta_Score_3" 
FROM score_max), 
score_class_union_soft AS 
(SELECT soft_scu."KEY" AS "KEY", soft_scu.class AS class, soft_scu."exp_delta_Score" AS "exp_delta_Score" 
FROM (SELECT score_soft_max_deltas."KEY" AS "KEY", 0 AS class, score_soft_max_deltas."exp_delta_Score_0" AS "exp_delta_Score" 
FROM score_soft_max_deltas UNION ALL SELECT score_soft_max_deltas."KEY" AS "KEY", 1 AS class, score_soft_max_deltas."exp_delta_Score_1" AS "exp_delta_Score" 
FROM score_soft_max_deltas UNION ALL SELECT score_soft_max_deltas."KEY" AS "KEY", 2 AS class, score_soft_max_deltas."exp_delta_Score_2" AS "exp_delta_Score" 
FROM score_soft_max_deltas UNION ALL SELECT score_soft_max_deltas."KEY" AS "KEY", 3 AS class, score_soft_max_deltas."exp_delta_Score_3" AS "exp_delta_Score" 
FROM score_soft_max_deltas) AS soft_scu), 
score_soft_max AS 
(SELECT score_soft_max_deltas."KEY" AS "KEY", score_soft_max_deltas."Score_0" AS "Score_0", score_soft_max_deltas."Score_1" AS "Score_1", score_soft_max_deltas."Score_2" AS "Score_2", score_soft_max_deltas."Score_3" AS "Score_3", score_soft_max_deltas."Proba_0" AS "Proba_0", score_soft_max_deltas."Proba_1" AS "Proba_1", score_soft_max_deltas."Proba_2" AS "Proba_2", score_soft_max_deltas."Proba_3" AS "Proba_3", score_soft_max_deltas."LogProba_0" AS "LogProba_0", score_soft_max_deltas."LogProba_1" AS "LogProba_1", score_soft_max_deltas."LogProba_2" AS "LogProba_2", score_soft_max_deltas."LogProba_3" AS "LogProba_3", score_soft_max_deltas."Decision" AS "Decision", score_soft_max_deltas."DecisionProba" AS "DecisionProba", score_soft_max_deltas."KEY_m" AS "KEY_m", score_soft_max_deltas."max_Score" AS "max_Score", score_soft_max_deltas."exp_delta_Score_0" AS "exp_delta_Score_0", score_soft_max_deltas."exp_delta_Score_1" AS "exp_delta_Score_1", score_soft_max_deltas."exp_delta_Score_2" AS "exp_delta_Score_2", score_soft_max_deltas."exp_delta_Score_3" AS "exp_delta_Score_3", sum_exp_t."KEY_sum" AS "KEY_sum", sum_exp_t."sum_ExpDeltaScore" AS "sum_ExpDeltaScore" 
FROM score_soft_max_deltas LEFT OUTER JOIN (SELECT score_class_union_soft."KEY" AS "KEY_sum", sum(score_class_union_soft."exp_delta_Score") AS "sum_ExpDeltaScore" 
FROM score_class_union_soft GROUP BY score_class_union_soft."KEY") AS sum_exp_t ON score_soft_max_deltas."KEY" = sum_exp_t."KEY_sum"), 
union_with_max AS 
(SELECT score_class_union."KEY_u" AS "KEY_u", score_class_union.class AS class, score_class_union."LogProba" AS "LogProba", score_class_union."Proba" AS "Proba", score_class_union."Score" AS "Score", score_soft_max."KEY" AS "KEY", score_soft_max."Score_0" AS "Score_0", score_soft_max."Score_1" AS "Score_1", score_soft_max."Score_2" AS "Score_2", score_soft_max."Score_3" AS "Score_3", score_soft_max."Proba_0" AS "Proba_0", score_soft_max."Proba_1" AS "Proba_1", score_soft_max."Proba_2" AS "Proba_2", score_soft_max."Proba_3" AS "Proba_3", score_soft_max."LogProba_0" AS "LogProba_0", score_soft_max."LogProba_1" AS "LogProba_1", score_soft_max."LogProba_2" AS "LogProba_2", score_soft_max."LogProba_3" AS "LogProba_3", score_soft_max."Decision" AS "Decision", score_soft_max."DecisionProba" AS "DecisionProba", score_soft_max."KEY_m" AS "KEY_m", score_soft_max."max_Score" AS "max_Score", score_soft_max."exp_delta_Score_0" AS "exp_delta_Score_0", score_soft_max."exp_delta_Score_1" AS "exp_delta_Score_1", score_soft_max."exp_delta_Score_2" AS "exp_delta_Score_2", score_soft_max."exp_delta_Score_3" AS "exp_delta_Score_3", score_soft_max."KEY_sum" AS "KEY_sum", score_soft_max."sum_ExpDeltaScore" AS "sum_ExpDeltaScore" 
FROM score_class_union LEFT OUTER JOIN score_soft_max ON score_class_union."KEY_u" = score_soft_max."KEY"), 
arg_max_cte AS 
(SELECT score_soft_max."KEY" AS "KEY", score_soft_max."Score_0" AS "Score_0", score_soft_max."Score_1" AS "Score_1", score_soft_max."Score_2" AS "Score_2", score_soft_max."Score_3" AS "Score_3", score_soft_max."Proba_0" AS "Proba_0", score_soft_max."Proba_1" AS "Proba_1", score_soft_max."Proba_2" AS "Proba_2", score_soft_max."Proba_3" AS "Proba_3", score_soft_max."LogProba_0" AS "LogProba_0", score_soft_max."LogProba_1" AS "LogProba_1", score_soft_max."LogProba_2" AS "LogProba_2", score_soft_max."LogProba_3" AS "LogProba_3", score_soft_max."Decision" AS "Decision", score_soft_max."DecisionProba" AS "DecisionProba", score_soft_max."KEY_m" AS "KEY_m", score_soft_max."max_Score" AS "max_Score", score_soft_max."exp_delta_Score_0" AS "exp_delta_Score_0", score_soft_max."exp_delta_Score_1" AS "exp_delta_Score_1", score_soft_max."exp_delta_Score_2" AS "exp_delta_Score_2", score_soft_max."exp_delta_Score_3" AS "exp_delta_Score_3", score_soft_max."KEY_sum" AS "KEY_sum", score_soft_max."sum_ExpDeltaScore" AS "sum_ExpDeltaScore", "arg_max_t_Score"."KEY_Score" AS "KEY_Score", "arg_max_t_Score"."arg_max_Score" AS "arg_max_Score", soft_max_comp."KEY_softmax" AS "KEY_softmax", soft_max_comp."SoftProba_0" AS "SoftProba_0", soft_max_comp."SoftProba_1" AS "SoftProba_1", soft_max_comp."SoftProba_2" AS "SoftProba_2", soft_max_comp."SoftProba_3" AS "SoftProba_3" 
FROM score_soft_max LEFT OUTER JOIN (SELECT union_with_max."KEY" AS "KEY_Score", min(union_with_max.class) AS "arg_max_Score" 
FROM union_with_max 
WHERE union_with_max."max_Score" <= union_with_max."Score" GROUP BY union_with_max."KEY") AS "arg_max_t_Score" ON score_soft_max."KEY" = "arg_max_t_Score"."KEY_Score" LEFT OUTER JOIN (SELECT score_soft_max."KEY" AS "KEY_softmax", score_soft_max."exp_delta_Score_0" / score_soft_max."sum_ExpDeltaScore" AS "SoftProba_0", score_soft_max."exp_delta_Score_1" / score_soft_max."sum_ExpDeltaScore" AS "SoftProba_1", score_soft_max."exp_delta_Score_2" / score_soft_max."sum_ExpDeltaScore" AS "SoftProba_2", score_soft_max."exp_delta_Score_3" / score_soft_max."sum_ExpDeltaScore" AS "SoftProba_3" 
FROM score_soft_max) AS soft_max_comp ON soft_max_comp."KEY_softmax" = "arg_max_t_Score"."KEY_Score")
 SELECT arg_max_cte."KEY" AS "KEY", CAST(NULL AS FLOAT) AS "Score_0", CAST(NULL AS FLOAT) AS "Score_1", CAST(NULL AS FLOAT) AS "Score_2", CAST(NULL AS FLOAT) AS "Score_3", arg_max_cte."SoftProba_0" AS "Proba_0", arg_max_cte."SoftProba_1" AS "Proba_1", arg_max_cte."SoftProba_2" AS "Proba_2", arg_max_cte."SoftProba_3" AS "Proba_3", CASE WHEN (arg_max_cte."SoftProba_0" IS NULL OR arg_max_cte."SoftProba_0" > 0.0) THEN ln(arg_max_cte."SoftProba_0") ELSE -1.79769313486231e+308 END AS "LogProba_0", CASE WHEN (arg_max_cte."SoftProba_1" IS NULL OR arg_max_cte."SoftProba_1" > 0.0) THEN ln(arg_max_cte."SoftProba_1") ELSE -1.79769313486231e+308 END AS "LogProba_1", CASE WHEN (arg_max_cte."SoftProba_2" IS NULL OR arg_max_cte."SoftProba_2" > 0.0) THEN ln(arg_max_cte."SoftProba_2") ELSE -1.79769313486231e+308 END AS "LogProba_2", CASE WHEN (arg_max_cte."SoftProba_3" IS NULL OR arg_max_cte."SoftProba_3" > 0.0) THEN ln(arg_max_cte."SoftProba_3") ELSE -1.79769313486231e+308 END AS "LogProba_3", arg_max_cte."arg_max_Score" AS "Decision", CASE WHEN (arg_max_cte."SoftProba_0" <= CASE WHEN (arg_max_cte."SoftProba_1" <= CASE WHEN (arg_max_cte."SoftProba_2" <= arg_max_cte."SoftProba_3") THEN arg_max_cte."SoftProba_3" ELSE arg_max_cte."SoftProba_2" END) THEN CASE WHEN (arg_max_cte."SoftProba_2" <= arg_max_cte."SoftProba_3") THEN arg_max_cte."SoftProba_3" ELSE arg_max_cte."SoftProba_2" END ELSE arg_max_cte."SoftProba_1" END) THEN CASE WHEN (arg_max_cte."SoftProba_1" <= CASE WHEN (arg_max_cte."SoftProba_2" <= arg_max_cte."SoftProba_3") THEN arg_max_cte."SoftProba_3" ELSE arg_max_cte."SoftProba_2" END) THEN CASE WHEN (arg_max_cte."SoftProba_2" <= arg_max_cte."SoftProba_3") THEN arg_max_cte."SoftProba_3" ELSE arg_max_cte."SoftProba_2" END ELSE arg_max_cte."SoftProba_1" END ELSE arg_max_cte."SoftProba_0" END AS "DecisionProba" 
FROM arg_max_cte