-- This SQL code was generated by sklearn2sql (development version).
-- Copyright 2017

WITH [IL] AS 
(SELECT [ADS].[KEY] AS [KEY], CAST([ADS].[Feature_0] AS FLOAT) AS [Feature_0], CAST([ADS].[Feature_1] AS FLOAT) AS [Feature_1], CAST([ADS].[Feature_2] AS FLOAT) AS [Feature_2], CAST([ADS].[Feature_3] AS FLOAT) AS [Feature_3] 
FROM freidman2 AS [ADS]), 
[HL_BA_1] AS 
(SELECT [IL].[KEY] AS [KEY], -0.1345791424 * [IL].[Feature_0] + -0.591316164554 * [IL].[Feature_1] + -0.732365520631 * [IL].[Feature_2] + -0.819042323478 * [IL].[Feature_3] + 0.347593872734 AS [NEUR_1_1], 26.1529649904 * [IL].[Feature_0] + 8.8534344554 * [IL].[Feature_1] + 203.657291579 * [IL].[Feature_2] + 304.22259765 * [IL].[Feature_3] + -10.4728476386 AS [NEUR_1_2], 0.877324372071 * [IL].[Feature_0] + -0.600904404986 * [IL].[Feature_1] + 0.490583805887 * [IL].[Feature_2] + 0.131714677972 * [IL].[Feature_3] + -0.592512275061 AS [NEUR_1_3] 
FROM [IL]), 
[HL_1_relu] AS 
(SELECT [HL_BA_1].[KEY] AS [KEY], CASE WHEN ([HL_BA_1].[NEUR_1_1] >= 0.0) THEN [HL_BA_1].[NEUR_1_1] ELSE 0.0 END AS [NEUR_1_1], CASE WHEN ([HL_BA_1].[NEUR_1_2] >= 0.0) THEN [HL_BA_1].[NEUR_1_2] ELSE 0.0 END AS [NEUR_1_2], CASE WHEN ([HL_BA_1].[NEUR_1_3] >= 0.0) THEN [HL_BA_1].[NEUR_1_3] ELSE 0.0 END AS [NEUR_1_3] 
FROM [HL_BA_1]), 
[HL_BA_2] AS 
(SELECT [HL_1_relu].[KEY] AS [KEY], 0.672795859456 * [HL_1_relu].[NEUR_1_1] + 0.0234762294351 * [HL_1_relu].[NEUR_1_2] + 0.730023235551 * [HL_1_relu].[NEUR_1_3] + -12.5539681806 AS [NEUR_2_1], 0.648838711483 * [HL_1_relu].[NEUR_1_1] + -0.0693952824099 * [HL_1_relu].[NEUR_1_2] + -0.64593479656 * [HL_1_relu].[NEUR_1_3] + -0.529290429612 AS [NEUR_2_2], -0.300721366186 * [HL_1_relu].[NEUR_1_1] + -0.827349589573 * [HL_1_relu].[NEUR_1_2] + -0.301047837381 * [HL_1_relu].[NEUR_1_3] + -0.0103942825038 AS [NEUR_2_3], -0.34133321525 * [HL_1_relu].[NEUR_1_1] + -0.518902488312 * [HL_1_relu].[NEUR_1_2] + -0.122330379768 * [HL_1_relu].[NEUR_1_3] + -0.740628349607 AS [NEUR_2_4], -0.386770334571 * [HL_1_relu].[NEUR_1_1] + -0.0275923868784 * [HL_1_relu].[NEUR_1_2] + 0.725280871954 * [HL_1_relu].[NEUR_1_3] + -0.149393226565 AS [NEUR_2_5] 
FROM [HL_1_relu]), 
[HL_2_relu] AS 
(SELECT [HL_BA_2].[KEY] AS [KEY], CASE WHEN ([HL_BA_2].[NEUR_2_1] >= 0.0) THEN [HL_BA_2].[NEUR_2_1] ELSE 0.0 END AS [NEUR_2_1], CASE WHEN ([HL_BA_2].[NEUR_2_2] >= 0.0) THEN [HL_BA_2].[NEUR_2_2] ELSE 0.0 END AS [NEUR_2_2], CASE WHEN ([HL_BA_2].[NEUR_2_3] >= 0.0) THEN [HL_BA_2].[NEUR_2_3] ELSE 0.0 END AS [NEUR_2_3], CASE WHEN ([HL_BA_2].[NEUR_2_4] >= 0.0) THEN [HL_BA_2].[NEUR_2_4] ELSE 0.0 END AS [NEUR_2_4], CASE WHEN ([HL_BA_2].[NEUR_2_5] >= 0.0) THEN [HL_BA_2].[NEUR_2_5] ELSE 0.0 END AS [NEUR_2_5] 
FROM [HL_BA_2]), 
[OL_BA] AS 
(SELECT [HL_2_relu].[KEY] AS [KEY], 2.03184928219 * [HL_2_relu].[NEUR_2_1] + 0.128275432815 * [HL_2_relu].[NEUR_2_2] + -0.718399342863 * [HL_2_relu].[NEUR_2_3] + 0.682963402948 * [HL_2_relu].[NEUR_2_4] + 0.768085048883 * [HL_2_relu].[NEUR_2_5] + -10.6641593749 AS [NEUR_3_1] 
FROM [HL_2_relu]), 
[OL_identity] AS 
(SELECT [OL_BA].[KEY] AS [KEY], [OL_BA].[NEUR_3_1] AS [NEUR_3_1] 
FROM [OL_BA])
 SELECT [OL_identity].[KEY] AS [KEY], [OL_identity].[NEUR_3_1] AS [Estimator] 
FROM [OL_identity]