-- This SQL code was generated by sklearn2sql (development version).
-- Copyright 2017

WITH [ADS_imp_1_OUT] AS 
(SELECT [ADS].[KEY] AS [KEY], CASE WHEN ([ADS].[Feature_0] IS NULL) THEN 43.7912812221 ELSE [ADS].[Feature_0] END AS imputer_output_2, CASE WHEN ([ADS].[Feature_1] IS NULL) THEN 945.967283308 ELSE [ADS].[Feature_1] END AS imputer_output_3, CASE WHEN ([ADS].[Feature_2] IS NULL) THEN 0.531000909998 ELSE [ADS].[Feature_2] END AS imputer_output_4, CASE WHEN ([ADS].[Feature_3] IS NULL) THEN 6.13996715205 ELSE [ADS].[Feature_3] END AS imputer_output_5 
FROM freidman3 AS [ADS]), 
[ADS_sca_2_OUT] AS 
(SELECT [ADS_imp_1_OUT].[KEY] AS [KEY], (CAST([ADS_imp_1_OUT].imputer_output_2 AS FLOAT) - 43.7912812221) / 26.0356235762 AS scaler_output_2, (CAST([ADS_imp_1_OUT].imputer_output_3 AS FLOAT) - 945.967283308) / 461.455276615 AS scaler_output_3, (CAST([ADS_imp_1_OUT].imputer_output_4 AS FLOAT) - 0.531000909998) / 0.290186328214 AS scaler_output_4, (CAST([ADS_imp_1_OUT].imputer_output_5 AS FLOAT) - 6.13996715205) / 3.07291724256 AS scaler_output_5 
FROM [ADS_imp_1_OUT]), 
[IL] AS 
(SELECT [ADS_sca_2_OUT].[KEY] AS [KEY], CAST([ADS_sca_2_OUT].scaler_output_2 AS FLOAT) AS scaler_output_2, CAST([ADS_sca_2_OUT].scaler_output_3 AS FLOAT) AS scaler_output_3, CAST([ADS_sca_2_OUT].scaler_output_4 AS FLOAT) AS scaler_output_4, CAST([ADS_sca_2_OUT].scaler_output_5 AS FLOAT) AS scaler_output_5 
FROM [ADS_sca_2_OUT]), 
[HL_BA_1] AS 
(SELECT [IL].[KEY] AS [KEY], 0.735422580466 * [IL].scaler_output_2 + -1.07178722908 * [IL].scaler_output_3 + -1.21996514895 * [IL].scaler_output_4 + -0.393954721544 * [IL].scaler_output_5 + -0.0570731636391 AS [NEUR_1_1], -0.0129357469852 * [IL].scaler_output_2 + 0.338338453277 * [IL].scaler_output_3 + -1.67577103425 * [IL].scaler_output_4 + 0.0946063385126 * [IL].scaler_output_5 + -1.56821710758 AS [NEUR_1_2], -0.0140456526225 * [IL].scaler_output_2 + -0.934522849272 * [IL].scaler_output_3 + 0.954273171797 * [IL].scaler_output_4 + 0.540190073559 * [IL].scaler_output_5 + -0.665251246926 AS [NEUR_1_3] 
FROM [IL]), 
[HL_1_relu] AS 
(SELECT [HL_BA_1].[KEY] AS [KEY], CASE WHEN ([HL_BA_1].[NEUR_1_1] >= 0.0) THEN [HL_BA_1].[NEUR_1_1] ELSE 0.0 END AS [NEUR_1_1], CASE WHEN ([HL_BA_1].[NEUR_1_2] >= 0.0) THEN [HL_BA_1].[NEUR_1_2] ELSE 0.0 END AS [NEUR_1_2], CASE WHEN ([HL_BA_1].[NEUR_1_3] >= 0.0) THEN [HL_BA_1].[NEUR_1_3] ELSE 0.0 END AS [NEUR_1_3] 
FROM [HL_BA_1]), 
[HL_BA_2] AS 
(SELECT [HL_1_relu].[KEY] AS [KEY], 0.412820737868 * [HL_1_relu].[NEUR_1_1] + 1.17965983511 * [HL_1_relu].[NEUR_1_2] + 0.854873297203 * [HL_1_relu].[NEUR_1_3] + -1.76246190547 AS [NEUR_2_1], 1.03695977906 * [HL_1_relu].[NEUR_1_1] + 0.511070015994 * [HL_1_relu].[NEUR_1_2] + -0.237765889452 * [HL_1_relu].[NEUR_1_3] + -0.282103654338 AS [NEUR_2_2], -0.300647989517 * [HL_1_relu].[NEUR_1_1] + -0.827147714472 * [HL_1_relu].[NEUR_1_2] + -0.300974381053 * [HL_1_relu].[NEUR_1_3] + -0.0103942825038 AS [NEUR_2_3], -0.341249929204 * [HL_1_relu].[NEUR_1_1] + -0.518775874979 * [HL_1_relu].[NEUR_1_2] + -0.122300530888 * [HL_1_relu].[NEUR_1_3] + -0.740628349607 AS [NEUR_2_4], -0.279665528661 * [HL_1_relu].[NEUR_1_1] + 0.0842447959866 * [HL_1_relu].[NEUR_1_2] + 0.000350068602273 * [HL_1_relu].[NEUR_1_3] + -0.651328513875 AS [NEUR_2_5] 
FROM [HL_1_relu]), 
[HL_2_relu] AS 
(SELECT [HL_BA_2].[KEY] AS [KEY], CASE WHEN ([HL_BA_2].[NEUR_2_1] >= 0.0) THEN [HL_BA_2].[NEUR_2_1] ELSE 0.0 END AS [NEUR_2_1], CASE WHEN ([HL_BA_2].[NEUR_2_2] >= 0.0) THEN [HL_BA_2].[NEUR_2_2] ELSE 0.0 END AS [NEUR_2_2], CASE WHEN ([HL_BA_2].[NEUR_2_3] >= 0.0) THEN [HL_BA_2].[NEUR_2_3] ELSE 0.0 END AS [NEUR_2_3], CASE WHEN ([HL_BA_2].[NEUR_2_4] >= 0.0) THEN [HL_BA_2].[NEUR_2_4] ELSE 0.0 END AS [NEUR_2_4], CASE WHEN ([HL_BA_2].[NEUR_2_5] >= 0.0) THEN [HL_BA_2].[NEUR_2_5] ELSE 0.0 END AS [NEUR_2_5] 
FROM [HL_BA_2]), 
[OL_BA] AS 
(SELECT [HL_2_relu].[KEY] AS [KEY], -1.11302098036 * [HL_2_relu].[NEUR_2_1] + -0.147010017097 * [HL_2_relu].[NEUR_2_2] + -0.718224051857 * [HL_2_relu].[NEUR_2_3] + 0.682796758404 * [HL_2_relu].[NEUR_2_4] + 0.411769777432 * [HL_2_relu].[NEUR_2_5] + 1.51714052259 AS [NEUR_3_1] 
FROM [HL_2_relu]), 
[OL_identity] AS 
(SELECT [OL_BA].[KEY] AS [KEY], [OL_BA].[NEUR_3_1] AS [NEUR_3_1] 
FROM [OL_BA])
 SELECT [OL_identity].[KEY] AS [KEY], [OL_identity].[NEUR_3_1] AS [Estimator] 
FROM [OL_identity]