-- This SQL code was generated by sklearn2sql (development version).
-- Copyright 2017

WITH [DT_node_lookup] AS 
(SELECT [ADS].[KEY] AS [KEY], CASE WHEN ([ADS].[Feature_16] <= -0.5211686491966248) THEN CASE WHEN ([ADS].[Feature_45] <= 0.6160559058189392) THEN CASE WHEN ([ADS].[Feature_59] <= 1.1565752029418945) THEN CASE WHEN ([ADS].[Feature_10] <= 2.1901907920837402) THEN 4 ELSE 5 END ELSE 6 END ELSE 7 END ELSE CASE WHEN ([ADS].[Feature_94] <= 0.5277243852615356) THEN CASE WHEN ([ADS].[Feature_4] <= -0.9540826082229614) THEN 10 ELSE 11 END ELSE CASE WHEN ([ADS].[Feature_50] <= 0.07080738246440887) THEN CASE WHEN ([ADS].[Feature_98] <= 0.8492567539215088) THEN 14 ELSE 15 END ELSE CASE WHEN ([ADS].[Feature_69] <= -0.16153481602668762) THEN 17 ELSE 18 END END END END AS node_id_2 
FROM [BinaryClass_100] AS [ADS]), 
[DT_node_data] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Proba_0.0] AS [Proba_0.0], [Values].[LogProba_0.0] AS [LogProba_0.0], [Values].[Proba_1.0] AS [Proba_1.0], [Values].[LogProba_1.0] AS [LogProba_1.0], [Values].[Decision] AS [Decision], [Values].[DecisionProba] AS [DecisionProba] 
FROM (SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 12 AS count, 4 AS depth, 3 AS parent_id, 0.0 AS [Proba_0.0], -1.79769313486231e+308 AS [LogProba_0.0], 1.0 AS [Proba_1.0], 0.0 AS [LogProba_1.0], 1 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 3 AS parent_id, 1.0 AS [Proba_0.0], 0.0 AS [LogProba_0.0], 0.0 AS [Proba_1.0], -1.79769313486231e+308 AS [LogProba_1.0], 0 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 2 AS parent_id, 1.0 AS [Proba_0.0], 0.0 AS [LogProba_0.0], 0.0 AS [Proba_1.0], -1.79769313486231e+308 AS [LogProba_1.0], 0 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS count, 2 AS depth, 1 AS parent_id, 1.0 AS [Proba_0.0], 0.0 AS [LogProba_0.0], 0.0 AS [Proba_1.0], -1.79769313486231e+308 AS [LogProba_1.0], 0 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 3 AS depth, 9 AS parent_id, 0.0 AS [Proba_0.0], -1.79769313486231e+308 AS [LogProba_0.0], 1.0 AS [Proba_1.0], 0.0 AS [LogProba_1.0], 1 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 17 AS count, 3 AS depth, 9 AS parent_id, 1.0 AS [Proba_0.0], 0.0 AS [LogProba_0.0], 0.0 AS [Proba_1.0], -1.79769313486231e+308 AS [LogProba_1.0], 0 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 6 AS count, 4 AS depth, 13 AS parent_id, 0.0 AS [Proba_0.0], -1.79769313486231e+308 AS [LogProba_0.0], 1.0 AS [Proba_1.0], 0.0 AS [LogProba_1.0], 1 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 15 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 13 AS parent_id, 1.0 AS [Proba_0.0], 0.0 AS [LogProba_0.0], 0.0 AS [Proba_1.0], -1.79769313486231e+308 AS [LogProba_1.0], 0 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 17 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 16 AS parent_id, 0.0 AS [Proba_0.0], -1.79769313486231e+308 AS [LogProba_0.0], 1.0 AS [Proba_1.0], 0.0 AS [LogProba_1.0], 1 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 18 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 4 AS depth, 16 AS parent_id, 1.0 AS [Proba_0.0], 0.0 AS [LogProba_0.0], 0.0 AS [Proba_1.0], -1.79769313486231e+308 AS [LogProba_1.0], 0 AS [Decision], 1.0 AS [DecisionProba]) AS [Values]), 
[DT_Output] AS 
(SELECT [DT_node_lookup].[KEY] AS [KEY], [DT_node_lookup].node_id_2 AS node_id_2, [DT_node_data].node_id AS node_id, [DT_node_data].feature AS feature, [DT_node_data].threshold AS threshold, [DT_node_data].count AS count, [DT_node_data].depth AS depth, [DT_node_data].parent_id AS parent_id, [DT_node_data].[Proba_0.0] AS [Proba_0.0], [DT_node_data].[LogProba_0.0] AS [LogProba_0.0], [DT_node_data].[Proba_1.0] AS [Proba_1.0], [DT_node_data].[LogProba_1.0] AS [LogProba_1.0], [DT_node_data].[Decision] AS [Decision], [DT_node_data].[DecisionProba] AS [DecisionProba] 
FROM [DT_node_lookup] LEFT OUTER JOIN [DT_node_data] ON [DT_node_lookup].node_id_2 = [DT_node_data].node_id), 
[RF_Tree_0] AS 
(SELECT [DT_Output].[KEY] AS [KEY], CAST(NULL AS FLOAT) AS [Score_0], [DT_Output].[Proba_0.0] AS [Proba_0], [DT_Output].[LogProba_0.0] AS [LogProba_0], CAST(NULL AS FLOAT) AS [Score_1], [DT_Output].[Proba_1.0] AS [Proba_1], [DT_Output].[LogProba_1.0] AS [LogProba_1] 
FROM [DT_Output]), 
[DT_node_lookup_1] AS 
(SELECT [ADS].[KEY] AS [KEY], CASE WHEN ([ADS].[Feature_57] <= -0.19605962932109833) THEN CASE WHEN ([ADS].[Feature_71] <= -2.182079315185547) THEN 2 ELSE CASE WHEN ([ADS].[Feature_35] <= 1.0729228258132935) THEN CASE WHEN ([ADS].[Feature_49] <= -1.5783874988555908) THEN 5 ELSE CASE WHEN ([ADS].[Feature_29] <= -1.387199878692627) THEN CASE WHEN ([ADS].[Feature_97] <= -0.48833709955215454) THEN 8 ELSE 9 END ELSE CASE WHEN ([ADS].[Feature_74] <= 1.219275951385498) THEN 11 ELSE CASE WHEN ([ADS].[Feature_69] <= 0.19806352257728577) THEN 13 ELSE 14 END END END END ELSE 15 END END ELSE CASE WHEN ([ADS].[Feature_86] <= 0.7880138754844666) THEN 17 ELSE CASE WHEN ([ADS].[Feature_80] <= 0.14271172881126404) THEN 19 ELSE 20 END END END AS node_id_2 
FROM [BinaryClass_100] AS [ADS]), 
[DT_node_data_1] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Proba_0.0] AS [Proba_0.0], [Values].[LogProba_0.0] AS [LogProba_0.0], [Values].[Proba_1.0] AS [Proba_1.0], [Values].[LogProba_1.0] AS [LogProba_1.0], [Values].[Decision] AS [Decision], [Values].[DecisionProba] AS [DecisionProba] 
FROM (SELECT 2 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 2 AS depth, 1 AS parent_id, 0.0 AS [Proba_0.0], -1.79769313486231e+308 AS [LogProba_0.0], 1.0 AS [Proba_1.0], 0.0 AS [LogProba_1.0], 1 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 4 AS parent_id, 0.0 AS [Proba_0.0], -1.79769313486231e+308 AS [LogProba_0.0], 1.0 AS [Proba_1.0], 0.0 AS [LogProba_1.0], 1 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 6 AS depth, 7 AS parent_id, 0.0 AS [Proba_0.0], -1.79769313486231e+308 AS [LogProba_0.0], 1.0 AS [Proba_1.0], 0.0 AS [LogProba_1.0], 1 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 6 AS depth, 7 AS parent_id, 1.0 AS [Proba_0.0], 0.0 AS [LogProba_0.0], 0.0 AS [Proba_1.0], -1.79769313486231e+308 AS [LogProba_1.0], 0 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 23 AS count, 6 AS depth, 10 AS parent_id, 1.0 AS [Proba_0.0], 0.0 AS [LogProba_0.0], 0.0 AS [Proba_1.0], -1.79769313486231e+308 AS [LogProba_1.0], 0 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 7 AS depth, 12 AS parent_id, 0.0 AS [Proba_0.0], -1.79769313486231e+308 AS [LogProba_0.0], 1.0 AS [Proba_1.0], 0.0 AS [LogProba_1.0], 1 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 7 AS depth, 12 AS parent_id, 1.0 AS [Proba_0.0], 0.0 AS [LogProba_0.0], 0.0 AS [Proba_1.0], -1.79769313486231e+308 AS [LogProba_1.0], 0 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 15 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 3 AS depth, 3 AS parent_id, 0.0 AS [Proba_0.0], -1.79769313486231e+308 AS [LogProba_0.0], 1.0 AS [Proba_1.0], 0.0 AS [LogProba_1.0], 1 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 17 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 12 AS count, 2 AS depth, 16 AS parent_id, 0.0 AS [Proba_0.0], -1.79769313486231e+308 AS [LogProba_0.0], 1.0 AS [Proba_1.0], 0.0 AS [LogProba_1.0], 1 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 19 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 3 AS depth, 18 AS parent_id, 1.0 AS [Proba_0.0], 0.0 AS [LogProba_0.0], 0.0 AS [Proba_1.0], -1.79769313486231e+308 AS [LogProba_1.0], 0 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 20 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 3 AS depth, 18 AS parent_id, 0.0 AS [Proba_0.0], -1.79769313486231e+308 AS [LogProba_0.0], 1.0 AS [Proba_1.0], 0.0 AS [LogProba_1.0], 1 AS [Decision], 1.0 AS [DecisionProba]) AS [Values]), 
[DT_Output_1] AS 
(SELECT [DT_node_lookup_1].[KEY] AS [KEY], [DT_node_lookup_1].node_id_2 AS node_id_2, [DT_node_data_1].node_id AS node_id, [DT_node_data_1].feature AS feature, [DT_node_data_1].threshold AS threshold, [DT_node_data_1].count AS count, [DT_node_data_1].depth AS depth, [DT_node_data_1].parent_id AS parent_id, [DT_node_data_1].[Proba_0.0] AS [Proba_0.0], [DT_node_data_1].[LogProba_0.0] AS [LogProba_0.0], [DT_node_data_1].[Proba_1.0] AS [Proba_1.0], [DT_node_data_1].[LogProba_1.0] AS [LogProba_1.0], [DT_node_data_1].[Decision] AS [Decision], [DT_node_data_1].[DecisionProba] AS [DecisionProba] 
FROM [DT_node_lookup_1] LEFT OUTER JOIN [DT_node_data_1] ON [DT_node_lookup_1].node_id_2 = [DT_node_data_1].node_id), 
[RF_Tree_1] AS 
(SELECT [DT_Output_1].[KEY] AS [KEY], CAST(NULL AS FLOAT) AS [Score_0], [DT_Output_1].[Proba_0.0] AS [Proba_0], [DT_Output_1].[LogProba_0.0] AS [LogProba_0], CAST(NULL AS FLOAT) AS [Score_1], [DT_Output_1].[Proba_1.0] AS [Proba_1], [DT_Output_1].[LogProba_1.0] AS [LogProba_1] 
FROM [DT_Output_1]), 
[DT_node_lookup_2] AS 
(SELECT [ADS].[KEY] AS [KEY], CASE WHEN ([ADS].[Feature_60] <= -0.3833989202976227) THEN CASE WHEN ([ADS].[Feature_2] <= 0.4524155855178833) THEN 2 ELSE CASE WHEN ([ADS].[Feature_74] <= -0.4949994385242462) THEN 4 ELSE CASE WHEN ([ADS].[Feature_4] <= 0.06902444362640381) THEN 6 ELSE 7 END END END ELSE CASE WHEN ([ADS].[Feature_10] <= 1.5588550567626953) THEN CASE WHEN ([ADS].[Feature_88] <= 0.4828758239746094) THEN CASE WHEN ([ADS].[Feature_64] <= -1.8845874071121216) THEN 11 ELSE 12 END ELSE CASE WHEN ([ADS].[Feature_45] <= 2.0486059188842773) THEN CASE WHEN ([ADS].[Feature_69] <= 1.478060245513916) THEN 15 ELSE 16 END ELSE 17 END END ELSE 18 END END AS node_id_2 
FROM [BinaryClass_100] AS [ADS]), 
[DT_node_data_2] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Proba_0.0] AS [Proba_0.0], [Values].[LogProba_0.0] AS [LogProba_0.0], [Values].[Proba_1.0] AS [Proba_1.0], [Values].[LogProba_1.0] AS [LogProba_1.0], [Values].[Decision] AS [Decision], [Values].[DecisionProba] AS [DecisionProba] 
FROM (SELECT 2 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 9 AS count, 2 AS depth, 1 AS parent_id, 0.0 AS [Proba_0.0], -1.79769313486231e+308 AS [LogProba_0.0], 1.0 AS [Proba_1.0], 0.0 AS [LogProba_1.0], 1 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 3 AS depth, 3 AS parent_id, 1.0 AS [Proba_0.0], 0.0 AS [LogProba_0.0], 0.0 AS [Proba_1.0], -1.79769313486231e+308 AS [LogProba_1.0], 0 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 4 AS depth, 5 AS parent_id, 0.0 AS [Proba_0.0], -1.79769313486231e+308 AS [LogProba_0.0], 1.0 AS [Proba_1.0], 0.0 AS [LogProba_1.0], 1 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 5 AS parent_id, 1.0 AS [Proba_0.0], 0.0 AS [LogProba_0.0], 0.0 AS [Proba_1.0], -1.79769313486231e+308 AS [LogProba_1.0], 0 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 10 AS parent_id, 0.0 AS [Proba_0.0], -1.79769313486231e+308 AS [LogProba_0.0], 1.0 AS [Proba_1.0], 0.0 AS [LogProba_1.0], 1 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 18 AS count, 4 AS depth, 10 AS parent_id, 1.0 AS [Proba_0.0], 0.0 AS [LogProba_0.0], 0.0 AS [Proba_1.0], -1.79769313486231e+308 AS [LogProba_1.0], 0 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 15 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS count, 5 AS depth, 14 AS parent_id, 0.0 AS [Proba_0.0], -1.79769313486231e+308 AS [LogProba_0.0], 1.0 AS [Proba_1.0], 0.0 AS [LogProba_1.0], 1 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 16 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 14 AS parent_id, 1.0 AS [Proba_0.0], 0.0 AS [LogProba_0.0], 0.0 AS [Proba_1.0], -1.79769313486231e+308 AS [LogProba_1.0], 0 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 17 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 13 AS parent_id, 1.0 AS [Proba_0.0], 0.0 AS [LogProba_0.0], 0.0 AS [Proba_1.0], -1.79769313486231e+308 AS [LogProba_1.0], 0 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 18 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS count, 2 AS depth, 8 AS parent_id, 0.0 AS [Proba_0.0], -1.79769313486231e+308 AS [LogProba_0.0], 1.0 AS [Proba_1.0], 0.0 AS [LogProba_1.0], 1 AS [Decision], 1.0 AS [DecisionProba]) AS [Values]), 
[DT_Output_2] AS 
(SELECT [DT_node_lookup_2].[KEY] AS [KEY], [DT_node_lookup_2].node_id_2 AS node_id_2, [DT_node_data_2].node_id AS node_id, [DT_node_data_2].feature AS feature, [DT_node_data_2].threshold AS threshold, [DT_node_data_2].count AS count, [DT_node_data_2].depth AS depth, [DT_node_data_2].parent_id AS parent_id, [DT_node_data_2].[Proba_0.0] AS [Proba_0.0], [DT_node_data_2].[LogProba_0.0] AS [LogProba_0.0], [DT_node_data_2].[Proba_1.0] AS [Proba_1.0], [DT_node_data_2].[LogProba_1.0] AS [LogProba_1.0], [DT_node_data_2].[Decision] AS [Decision], [DT_node_data_2].[DecisionProba] AS [DecisionProba] 
FROM [DT_node_lookup_2] LEFT OUTER JOIN [DT_node_data_2] ON [DT_node_lookup_2].node_id_2 = [DT_node_data_2].node_id), 
[RF_Tree_2] AS 
(SELECT [DT_Output_2].[KEY] AS [KEY], CAST(NULL AS FLOAT) AS [Score_0], [DT_Output_2].[Proba_0.0] AS [Proba_0], [DT_Output_2].[LogProba_0.0] AS [LogProba_0], CAST(NULL AS FLOAT) AS [Score_1], [DT_Output_2].[Proba_1.0] AS [Proba_1], [DT_Output_2].[LogProba_1.0] AS [LogProba_1] 
FROM [DT_Output_2]), 
[DT_node_lookup_3] AS 
(SELECT [ADS].[KEY] AS [KEY], CASE WHEN ([ADS].[Feature_41] <= -0.4746619462966919) THEN CASE WHEN ([ADS].[Feature_4] <= 0.5964059233665466) THEN 2 ELSE CASE WHEN ([ADS].[Feature_83] <= -0.265714168548584) THEN 4 ELSE 5 END END ELSE CASE WHEN ([ADS].[Feature_54] <= 1.239147424697876) THEN CASE WHEN ([ADS].[Feature_5] <= 1.5200949907302856) THEN CASE WHEN ([ADS].[Feature_85] <= 1.5308356285095215) THEN CASE WHEN ([ADS].[Feature_10] <= -1.9706439971923828) THEN 10 ELSE CASE WHEN ([ADS].[Feature_70] <= 0.9962719678878784) THEN CASE WHEN ([ADS].[Feature_19] <= -1.961503267288208) THEN 13 ELSE 14 END ELSE 15 END END ELSE 16 END ELSE CASE WHEN ([ADS].[Feature_70] <= 0.30650749802589417) THEN 18 ELSE 19 END END ELSE 20 END END AS node_id_2 
FROM [BinaryClass_100] AS [ADS]), 
[DT_node_data_3] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Proba_0.0] AS [Proba_0.0], [Values].[LogProba_0.0] AS [LogProba_0.0], [Values].[Proba_1.0] AS [Proba_1.0], [Values].[LogProba_1.0] AS [LogProba_1.0], [Values].[Decision] AS [Decision], [Values].[DecisionProba] AS [DecisionProba] 
FROM (SELECT 2 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 8 AS count, 2 AS depth, 1 AS parent_id, 0.0 AS [Proba_0.0], -1.79769313486231e+308 AS [LogProba_0.0], 1.0 AS [Proba_1.0], 0.0 AS [LogProba_1.0], 1 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 3 AS depth, 3 AS parent_id, 0.0 AS [Proba_0.0], -1.79769313486231e+308 AS [LogProba_0.0], 1.0 AS [Proba_1.0], 0.0 AS [LogProba_1.0], 1 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 3 AS depth, 3 AS parent_id, 1.0 AS [Proba_0.0], 0.0 AS [LogProba_0.0], 0.0 AS [Proba_1.0], -1.79769313486231e+308 AS [LogProba_1.0], 0 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 5 AS depth, 9 AS parent_id, 0.0 AS [Proba_0.0], -1.79769313486231e+308 AS [LogProba_0.0], 1.0 AS [Proba_1.0], 0.0 AS [LogProba_1.0], 1 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 7 AS depth, 12 AS parent_id, 0.0 AS [Proba_0.0], -1.79769313486231e+308 AS [LogProba_0.0], 1.0 AS [Proba_1.0], 0.0 AS [LogProba_1.0], 1 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 15 AS count, 7 AS depth, 12 AS parent_id, 1.0 AS [Proba_0.0], 0.0 AS [LogProba_0.0], 0.0 AS [Proba_1.0], -1.79769313486231e+308 AS [LogProba_1.0], 0 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 15 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 6 AS depth, 11 AS parent_id, 0.0 AS [Proba_0.0], -1.79769313486231e+308 AS [LogProba_0.0], 1.0 AS [Proba_1.0], 0.0 AS [LogProba_1.0], 1 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 16 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 8 AS parent_id, 0.0 AS [Proba_0.0], -1.79769313486231e+308 AS [LogProba_0.0], 1.0 AS [Proba_1.0], 0.0 AS [LogProba_1.0], 1 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 18 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS count, 4 AS depth, 17 AS parent_id, 0.0 AS [Proba_0.0], -1.79769313486231e+308 AS [LogProba_0.0], 1.0 AS [Proba_1.0], 0.0 AS [LogProba_1.0], 1 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 19 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 17 AS parent_id, 1.0 AS [Proba_0.0], 0.0 AS [LogProba_0.0], 0.0 AS [Proba_1.0], -1.79769313486231e+308 AS [LogProba_1.0], 0 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 20 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 8 AS count, 2 AS depth, 6 AS parent_id, 1.0 AS [Proba_0.0], 0.0 AS [LogProba_0.0], 0.0 AS [Proba_1.0], -1.79769313486231e+308 AS [LogProba_1.0], 0 AS [Decision], 1.0 AS [DecisionProba]) AS [Values]), 
[DT_Output_3] AS 
(SELECT [DT_node_lookup_3].[KEY] AS [KEY], [DT_node_lookup_3].node_id_2 AS node_id_2, [DT_node_data_3].node_id AS node_id, [DT_node_data_3].feature AS feature, [DT_node_data_3].threshold AS threshold, [DT_node_data_3].count AS count, [DT_node_data_3].depth AS depth, [DT_node_data_3].parent_id AS parent_id, [DT_node_data_3].[Proba_0.0] AS [Proba_0.0], [DT_node_data_3].[LogProba_0.0] AS [LogProba_0.0], [DT_node_data_3].[Proba_1.0] AS [Proba_1.0], [DT_node_data_3].[LogProba_1.0] AS [LogProba_1.0], [DT_node_data_3].[Decision] AS [Decision], [DT_node_data_3].[DecisionProba] AS [DecisionProba] 
FROM [DT_node_lookup_3] LEFT OUTER JOIN [DT_node_data_3] ON [DT_node_lookup_3].node_id_2 = [DT_node_data_3].node_id), 
[RF_Tree_3] AS 
(SELECT [DT_Output_3].[KEY] AS [KEY], CAST(NULL AS FLOAT) AS [Score_0], [DT_Output_3].[Proba_0.0] AS [Proba_0], [DT_Output_3].[LogProba_0.0] AS [LogProba_0], CAST(NULL AS FLOAT) AS [Score_1], [DT_Output_3].[Proba_1.0] AS [Proba_1], [DT_Output_3].[LogProba_1.0] AS [LogProba_1] 
FROM [DT_Output_3]), 
[DT_node_lookup_4] AS 
(SELECT [ADS].[KEY] AS [KEY], CASE WHEN ([ADS].[Feature_77] <= -0.2790580987930298) THEN 1 ELSE CASE WHEN ([ADS].[Feature_11] <= 1.7087210416793823) THEN CASE WHEN ([ADS].[Feature_27] <= 1.0105148553848267) THEN CASE WHEN ([ADS].[Feature_58] <= 0.7087676525115967) THEN CASE WHEN ([ADS].[Feature_88] <= -2.371664524078369) THEN 6 ELSE 7 END ELSE 8 END ELSE 9 END ELSE 10 END END AS node_id_2 
FROM [BinaryClass_100] AS [ADS]), 
[DT_node_data_4] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Proba_0.0] AS [Proba_0.0], [Values].[LogProba_0.0] AS [LogProba_0.0], [Values].[Proba_1.0] AS [Proba_1.0], [Values].[LogProba_1.0] AS [LogProba_1.0], [Values].[Decision] AS [Decision], [Values].[DecisionProba] AS [DecisionProba] 
FROM (SELECT 1 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 16 AS count, 1 AS depth, 0 AS parent_id, 0.0 AS [Proba_0.0], -1.79769313486231e+308 AS [LogProba_0.0], 1.0 AS [Proba_1.0], 0.0 AS [LogProba_1.0], 1 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 5 AS parent_id, 0.0 AS [Proba_0.0], -1.79769313486231e+308 AS [LogProba_0.0], 1.0 AS [Proba_1.0], 0.0 AS [LogProba_1.0], 1 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 25 AS count, 5 AS depth, 5 AS parent_id, 1.0 AS [Proba_0.0], 0.0 AS [LogProba_0.0], 0.0 AS [Proba_1.0], -1.79769313486231e+308 AS [LogProba_1.0], 0 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 4 AS depth, 4 AS parent_id, 0.0 AS [Proba_0.0], -1.79769313486231e+308 AS [LogProba_0.0], 1.0 AS [Proba_1.0], 0.0 AS [LogProba_1.0], 1 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 3 AS depth, 3 AS parent_id, 0.0 AS [Proba_0.0], -1.79769313486231e+308 AS [LogProba_0.0], 1.0 AS [Proba_1.0], 0.0 AS [LogProba_1.0], 1 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 2 AS depth, 2 AS parent_id, 0.0 AS [Proba_0.0], -1.79769313486231e+308 AS [LogProba_0.0], 1.0 AS [Proba_1.0], 0.0 AS [LogProba_1.0], 1 AS [Decision], 1.0 AS [DecisionProba]) AS [Values]), 
[DT_Output_4] AS 
(SELECT [DT_node_lookup_4].[KEY] AS [KEY], [DT_node_lookup_4].node_id_2 AS node_id_2, [DT_node_data_4].node_id AS node_id, [DT_node_data_4].feature AS feature, [DT_node_data_4].threshold AS threshold, [DT_node_data_4].count AS count, [DT_node_data_4].depth AS depth, [DT_node_data_4].parent_id AS parent_id, [DT_node_data_4].[Proba_0.0] AS [Proba_0.0], [DT_node_data_4].[LogProba_0.0] AS [LogProba_0.0], [DT_node_data_4].[Proba_1.0] AS [Proba_1.0], [DT_node_data_4].[LogProba_1.0] AS [LogProba_1.0], [DT_node_data_4].[Decision] AS [Decision], [DT_node_data_4].[DecisionProba] AS [DecisionProba] 
FROM [DT_node_lookup_4] LEFT OUTER JOIN [DT_node_data_4] ON [DT_node_lookup_4].node_id_2 = [DT_node_data_4].node_id), 
[RF_Tree_4] AS 
(SELECT [DT_Output_4].[KEY] AS [KEY], CAST(NULL AS FLOAT) AS [Score_0], [DT_Output_4].[Proba_0.0] AS [Proba_0], [DT_Output_4].[LogProba_0.0] AS [LogProba_0], CAST(NULL AS FLOAT) AS [Score_1], [DT_Output_4].[Proba_1.0] AS [Proba_1], [DT_Output_4].[LogProba_1.0] AS [LogProba_1] 
FROM [DT_Output_4]), 
[DT_node_lookup_5] AS 
(SELECT [ADS].[KEY] AS [KEY], CASE WHEN ([ADS].[Feature_61] <= -0.25619688630104065) THEN CASE WHEN ([ADS].[Feature_3] <= -0.5252026915550232) THEN CASE WHEN ([ADS].[Feature_69] <= 1.3981356620788574) THEN CASE WHEN ([ADS].[Feature_21] <= 0.6710361242294312) THEN 4 ELSE 5 END ELSE 6 END ELSE CASE WHEN ([ADS].[Feature_56] <= 1.4655712842941284) THEN 8 ELSE 9 END END ELSE CASE WHEN ([ADS].[Feature_48] <= -0.08753257989883423) THEN CASE WHEN ([ADS].[Feature_46] <= -1.2034213542938232) THEN 12 ELSE CASE WHEN ([ADS].[Feature_79] <= -1.3377593755722046) THEN 14 ELSE 15 END END ELSE CASE WHEN ([ADS].[Feature_58] <= 0.37975165247917175) THEN CASE WHEN ([ADS].[Feature_73] <= 0.8891735672950745) THEN CASE WHEN ([ADS].[Feature_59] <= -1.2997798919677734) THEN 19 ELSE 20 END ELSE 21 END ELSE 22 END END END AS node_id_2 
FROM [BinaryClass_100] AS [ADS]), 
[DT_node_data_5] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Proba_0.0] AS [Proba_0.0], [Values].[LogProba_0.0] AS [LogProba_0.0], [Values].[Proba_1.0] AS [Proba_1.0], [Values].[LogProba_1.0] AS [LogProba_1.0], [Values].[Decision] AS [Decision], [Values].[DecisionProba] AS [DecisionProba] 
FROM (SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS count, 4 AS depth, 3 AS parent_id, 0.0 AS [Proba_0.0], -1.79769313486231e+308 AS [LogProba_0.0], 1.0 AS [Proba_1.0], 0.0 AS [LogProba_1.0], 1 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 3 AS parent_id, 1.0 AS [Proba_0.0], 0.0 AS [LogProba_0.0], 0.0 AS [Proba_1.0], -1.79769313486231e+308 AS [LogProba_1.0], 0 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 2 AS parent_id, 1.0 AS [Proba_0.0], 0.0 AS [LogProba_0.0], 0.0 AS [Proba_1.0], -1.79769313486231e+308 AS [LogProba_1.0], 0 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 12 AS count, 3 AS depth, 7 AS parent_id, 1.0 AS [Proba_0.0], 0.0 AS [LogProba_0.0], 0.0 AS [Proba_1.0], -1.79769313486231e+308 AS [LogProba_1.0], 0 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 3 AS depth, 7 AS parent_id, 0.0 AS [Proba_0.0], -1.79769313486231e+308 AS [LogProba_0.0], 1.0 AS [Proba_1.0], 0.0 AS [LogProba_1.0], 1 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 3 AS depth, 11 AS parent_id, 1.0 AS [Proba_0.0], 0.0 AS [LogProba_0.0], 0.0 AS [Proba_1.0], -1.79769313486231e+308 AS [LogProba_1.0], 0 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 13 AS parent_id, 1.0 AS [Proba_0.0], 0.0 AS [LogProba_0.0], 0.0 AS [Proba_1.0], -1.79769313486231e+308 AS [LogProba_1.0], 0 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 15 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 15 AS count, 4 AS depth, 13 AS parent_id, 0.0 AS [Proba_0.0], -1.79769313486231e+308 AS [LogProba_0.0], 1.0 AS [Proba_1.0], 0.0 AS [LogProba_1.0], 1 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 19 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 18 AS parent_id, 1.0 AS [Proba_0.0], 0.0 AS [LogProba_0.0], 0.0 AS [Proba_1.0], -1.79769313486231e+308 AS [LogProba_1.0], 0 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 20 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 6 AS count, 5 AS depth, 18 AS parent_id, 0.0 AS [Proba_0.0], -1.79769313486231e+308 AS [LogProba_0.0], 1.0 AS [Proba_1.0], 0.0 AS [LogProba_1.0], 1 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 21 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 4 AS depth, 17 AS parent_id, 1.0 AS [Proba_0.0], 0.0 AS [LogProba_0.0], 0.0 AS [Proba_1.0], -1.79769313486231e+308 AS [LogProba_1.0], 0 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 22 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 6 AS count, 3 AS depth, 16 AS parent_id, 1.0 AS [Proba_0.0], 0.0 AS [LogProba_0.0], 0.0 AS [Proba_1.0], -1.79769313486231e+308 AS [LogProba_1.0], 0 AS [Decision], 1.0 AS [DecisionProba]) AS [Values]), 
[DT_Output_5] AS 
(SELECT [DT_node_lookup_5].[KEY] AS [KEY], [DT_node_lookup_5].node_id_2 AS node_id_2, [DT_node_data_5].node_id AS node_id, [DT_node_data_5].feature AS feature, [DT_node_data_5].threshold AS threshold, [DT_node_data_5].count AS count, [DT_node_data_5].depth AS depth, [DT_node_data_5].parent_id AS parent_id, [DT_node_data_5].[Proba_0.0] AS [Proba_0.0], [DT_node_data_5].[LogProba_0.0] AS [LogProba_0.0], [DT_node_data_5].[Proba_1.0] AS [Proba_1.0], [DT_node_data_5].[LogProba_1.0] AS [LogProba_1.0], [DT_node_data_5].[Decision] AS [Decision], [DT_node_data_5].[DecisionProba] AS [DecisionProba] 
FROM [DT_node_lookup_5] LEFT OUTER JOIN [DT_node_data_5] ON [DT_node_lookup_5].node_id_2 = [DT_node_data_5].node_id), 
[RF_Tree_5] AS 
(SELECT [DT_Output_5].[KEY] AS [KEY], CAST(NULL AS FLOAT) AS [Score_0], [DT_Output_5].[Proba_0.0] AS [Proba_0], [DT_Output_5].[LogProba_0.0] AS [LogProba_0], CAST(NULL AS FLOAT) AS [Score_1], [DT_Output_5].[Proba_1.0] AS [Proba_1], [DT_Output_5].[LogProba_1.0] AS [LogProba_1] 
FROM [DT_Output_5]), 
[DT_node_lookup_6] AS 
(SELECT [ADS].[KEY] AS [KEY], CASE WHEN ([ADS].[Feature_15] <= -0.7707918882369995) THEN CASE WHEN ([ADS].[Feature_45] <= 0.8825908899307251) THEN 2 ELSE 3 END ELSE CASE WHEN ([ADS].[Feature_82] <= 0.0688183456659317) THEN CASE WHEN ([ADS].[Feature_21] <= -0.31169629096984863) THEN CASE WHEN ([ADS].[Feature_57] <= -0.6125295162200928) THEN 7 ELSE 8 END ELSE 9 END ELSE CASE WHEN ([ADS].[Feature_6] <= 0.11003386974334717) THEN CASE WHEN ([ADS].[Feature_87] <= -1.0315124988555908) THEN 12 ELSE 13 END ELSE CASE WHEN ([ADS].[Feature_91] <= -0.1987566351890564) THEN 15 ELSE CASE WHEN ([ADS].[Feature_97] <= 1.0701950788497925) THEN 17 ELSE 18 END END END END END AS node_id_2 
FROM [BinaryClass_100] AS [ADS]), 
[DT_node_data_6] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Proba_0.0] AS [Proba_0.0], [Values].[LogProba_0.0] AS [LogProba_0.0], [Values].[Proba_1.0] AS [Proba_1.0], [Values].[LogProba_1.0] AS [LogProba_1.0], [Values].[Decision] AS [Decision], [Values].[DecisionProba] AS [DecisionProba] 
FROM (SELECT 2 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 10 AS count, 2 AS depth, 1 AS parent_id, 0.0 AS [Proba_0.0], -1.79769313486231e+308 AS [LogProba_0.0], 1.0 AS [Proba_1.0], 0.0 AS [LogProba_1.0], 1 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 2 AS depth, 1 AS parent_id, 1.0 AS [Proba_0.0], 0.0 AS [LogProba_0.0], 0.0 AS [Proba_1.0], -1.79769313486231e+308 AS [LogProba_1.0], 0 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 4 AS depth, 6 AS parent_id, 1.0 AS [Proba_0.0], 0.0 AS [LogProba_0.0], 0.0 AS [Proba_1.0], -1.79769313486231e+308 AS [LogProba_1.0], 0 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 4 AS depth, 6 AS parent_id, 0.0 AS [Proba_0.0], -1.79769313486231e+308 AS [LogProba_0.0], 1.0 AS [Proba_1.0], 0.0 AS [LogProba_1.0], 1 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 13 AS count, 3 AS depth, 5 AS parent_id, 1.0 AS [Proba_0.0], 0.0 AS [LogProba_0.0], 0.0 AS [Proba_1.0], -1.79769313486231e+308 AS [LogProba_1.0], 0 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 11 AS parent_id, 1.0 AS [Proba_0.0], 0.0 AS [LogProba_0.0], 0.0 AS [Proba_1.0], -1.79769313486231e+308 AS [LogProba_1.0], 0 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 8 AS count, 4 AS depth, 11 AS parent_id, 0.0 AS [Proba_0.0], -1.79769313486231e+308 AS [LogProba_0.0], 1.0 AS [Proba_1.0], 0.0 AS [LogProba_1.0], 1 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 15 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 7 AS count, 4 AS depth, 14 AS parent_id, 1.0 AS [Proba_0.0], 0.0 AS [LogProba_0.0], 0.0 AS [Proba_1.0], -1.79769313486231e+308 AS [LogProba_1.0], 0 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 17 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 5 AS depth, 16 AS parent_id, 0.0 AS [Proba_0.0], -1.79769313486231e+308 AS [LogProba_0.0], 1.0 AS [Proba_1.0], 0.0 AS [LogProba_1.0], 1 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 18 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 16 AS parent_id, 1.0 AS [Proba_0.0], 0.0 AS [LogProba_0.0], 0.0 AS [Proba_1.0], -1.79769313486231e+308 AS [LogProba_1.0], 0 AS [Decision], 1.0 AS [DecisionProba]) AS [Values]), 
[DT_Output_6] AS 
(SELECT [DT_node_lookup_6].[KEY] AS [KEY], [DT_node_lookup_6].node_id_2 AS node_id_2, [DT_node_data_6].node_id AS node_id, [DT_node_data_6].feature AS feature, [DT_node_data_6].threshold AS threshold, [DT_node_data_6].count AS count, [DT_node_data_6].depth AS depth, [DT_node_data_6].parent_id AS parent_id, [DT_node_data_6].[Proba_0.0] AS [Proba_0.0], [DT_node_data_6].[LogProba_0.0] AS [LogProba_0.0], [DT_node_data_6].[Proba_1.0] AS [Proba_1.0], [DT_node_data_6].[LogProba_1.0] AS [LogProba_1.0], [DT_node_data_6].[Decision] AS [Decision], [DT_node_data_6].[DecisionProba] AS [DecisionProba] 
FROM [DT_node_lookup_6] LEFT OUTER JOIN [DT_node_data_6] ON [DT_node_lookup_6].node_id_2 = [DT_node_data_6].node_id), 
[RF_Tree_6] AS 
(SELECT [DT_Output_6].[KEY] AS [KEY], CAST(NULL AS FLOAT) AS [Score_0], [DT_Output_6].[Proba_0.0] AS [Proba_0], [DT_Output_6].[LogProba_0.0] AS [LogProba_0], CAST(NULL AS FLOAT) AS [Score_1], [DT_Output_6].[Proba_1.0] AS [Proba_1], [DT_Output_6].[LogProba_1.0] AS [LogProba_1] 
FROM [DT_Output_6]), 
[DT_node_lookup_7] AS 
(SELECT [ADS].[KEY] AS [KEY], CASE WHEN ([ADS].[Feature_96] <= 0.9772368669509888) THEN CASE WHEN ([ADS].[Feature_44] <= 0.13756240904331207) THEN CASE WHEN ([ADS].[Feature_22] <= 1.0561859607696533) THEN CASE WHEN ([ADS].[Feature_32] <= -1.2267909049987793) THEN 4 ELSE 5 END ELSE 6 END ELSE CASE WHEN ([ADS].[Feature_41] <= 1.1870434284210205) THEN CASE WHEN ([ADS].[Feature_77] <= -0.05269095301628113) THEN CASE WHEN ([ADS].[Feature_33] <= -0.3389080762863159) THEN 10 ELSE 11 END ELSE 12 END ELSE 13 END END ELSE CASE WHEN ([ADS].[Feature_17] <= 1.0132036209106445) THEN CASE WHEN ([ADS].[Feature_80] <= -1.6467671394348145) THEN 16 ELSE 17 END ELSE CASE WHEN ([ADS].[Feature_40] <= -0.17568455636501312) THEN 19 ELSE 20 END END END AS node_id_2 
FROM [BinaryClass_100] AS [ADS]), 
[DT_node_data_7] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Proba_0.0] AS [Proba_0.0], [Values].[LogProba_0.0] AS [LogProba_0.0], [Values].[Proba_1.0] AS [Proba_1.0], [Values].[LogProba_1.0] AS [LogProba_1.0], [Values].[Decision] AS [Decision], [Values].[DecisionProba] AS [DecisionProba] 
FROM (SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 3 AS parent_id, 1.0 AS [Proba_0.0], 0.0 AS [LogProba_0.0], 0.0 AS [Proba_1.0], -1.79769313486231e+308 AS [LogProba_1.0], 0 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 17 AS count, 4 AS depth, 3 AS parent_id, 0.0 AS [Proba_0.0], -1.79769313486231e+308 AS [LogProba_0.0], 1.0 AS [Proba_1.0], 0.0 AS [LogProba_1.0], 1 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 3 AS depth, 2 AS parent_id, 1.0 AS [Proba_0.0], 0.0 AS [LogProba_0.0], 0.0 AS [Proba_1.0], -1.79769313486231e+308 AS [LogProba_1.0], 0 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 9 AS parent_id, 1.0 AS [Proba_0.0], 0.0 AS [LogProba_0.0], 0.0 AS [Proba_1.0], -1.79769313486231e+308 AS [LogProba_1.0], 0 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 6 AS count, 5 AS depth, 9 AS parent_id, 0.0 AS [Proba_0.0], -1.79769313486231e+308 AS [LogProba_0.0], 1.0 AS [Proba_1.0], 0.0 AS [LogProba_1.0], 1 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 12 AS count, 4 AS depth, 8 AS parent_id, 1.0 AS [Proba_0.0], 0.0 AS [LogProba_0.0], 0.0 AS [Proba_1.0], -1.79769313486231e+308 AS [LogProba_1.0], 0 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 3 AS depth, 7 AS parent_id, 0.0 AS [Proba_0.0], -1.79769313486231e+308 AS [LogProba_0.0], 1.0 AS [Proba_1.0], 0.0 AS [LogProba_1.0], 1 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 16 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 15 AS parent_id, 0.0 AS [Proba_0.0], -1.79769313486231e+308 AS [LogProba_0.0], 1.0 AS [Proba_1.0], 0.0 AS [LogProba_1.0], 1 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 17 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 11 AS count, 3 AS depth, 15 AS parent_id, 1.0 AS [Proba_0.0], 0.0 AS [LogProba_0.0], 0.0 AS [Proba_1.0], -1.79769313486231e+308 AS [LogProba_1.0], 0 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 19 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 18 AS parent_id, 1.0 AS [Proba_0.0], 0.0 AS [LogProba_0.0], 0.0 AS [Proba_1.0], -1.79769313486231e+308 AS [LogProba_1.0], 0 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 20 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 3 AS depth, 18 AS parent_id, 0.0 AS [Proba_0.0], -1.79769313486231e+308 AS [LogProba_0.0], 1.0 AS [Proba_1.0], 0.0 AS [LogProba_1.0], 1 AS [Decision], 1.0 AS [DecisionProba]) AS [Values]), 
[DT_Output_7] AS 
(SELECT [DT_node_lookup_7].[KEY] AS [KEY], [DT_node_lookup_7].node_id_2 AS node_id_2, [DT_node_data_7].node_id AS node_id, [DT_node_data_7].feature AS feature, [DT_node_data_7].threshold AS threshold, [DT_node_data_7].count AS count, [DT_node_data_7].depth AS depth, [DT_node_data_7].parent_id AS parent_id, [DT_node_data_7].[Proba_0.0] AS [Proba_0.0], [DT_node_data_7].[LogProba_0.0] AS [LogProba_0.0], [DT_node_data_7].[Proba_1.0] AS [Proba_1.0], [DT_node_data_7].[LogProba_1.0] AS [LogProba_1.0], [DT_node_data_7].[Decision] AS [Decision], [DT_node_data_7].[DecisionProba] AS [DecisionProba] 
FROM [DT_node_lookup_7] LEFT OUTER JOIN [DT_node_data_7] ON [DT_node_lookup_7].node_id_2 = [DT_node_data_7].node_id), 
[RF_Tree_7] AS 
(SELECT [DT_Output_7].[KEY] AS [KEY], CAST(NULL AS FLOAT) AS [Score_0], [DT_Output_7].[Proba_0.0] AS [Proba_0], [DT_Output_7].[LogProba_0.0] AS [LogProba_0], CAST(NULL AS FLOAT) AS [Score_1], [DT_Output_7].[Proba_1.0] AS [Proba_1], [DT_Output_7].[LogProba_1.0] AS [LogProba_1] 
FROM [DT_Output_7]), 
[DT_node_lookup_8] AS 
(SELECT [ADS].[KEY] AS [KEY], CASE WHEN ([ADS].[Feature_27] <= 0.0015312647446990013) THEN CASE WHEN ([ADS].[Feature_94] <= 1.247656226158142) THEN CASE WHEN ([ADS].[Feature_67] <= 0.27634620666503906) THEN 3 ELSE CASE WHEN ([ADS].[Feature_40] <= 0.5346857309341431) THEN 5 ELSE 6 END END ELSE CASE WHEN ([ADS].[Feature_41] <= -0.24881070852279663) THEN 8 ELSE CASE WHEN ([ADS].[Feature_0] <= -0.2769756615161896) THEN 10 ELSE 11 END END END ELSE CASE WHEN ([ADS].[Feature_70] <= 0.4014183580875397) THEN CASE WHEN ([ADS].[Feature_81] <= 0.8382484912872314) THEN CASE WHEN ([ADS].[Feature_47] <= -0.5260314345359802) THEN 15 ELSE CASE WHEN ([ADS].[Feature_98] <= -0.0008105859160423279) THEN 17 ELSE CASE WHEN ([ADS].[Feature_4] <= -0.02003437466919422) THEN 19 ELSE 20 END END END ELSE 21 END ELSE CASE WHEN ([ADS].[Feature_19] <= 0.5722568035125732) THEN CASE WHEN ([ADS].[Feature_42] <= -1.7606689929962158) THEN 24 ELSE 25 END ELSE 26 END END END AS node_id_2 
FROM [BinaryClass_100] AS [ADS]), 
[DT_node_data_8] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Proba_0.0] AS [Proba_0.0], [Values].[LogProba_0.0] AS [LogProba_0.0], [Values].[Proba_1.0] AS [Proba_1.0], [Values].[LogProba_1.0] AS [LogProba_1.0], [Values].[Decision] AS [Decision], [Values].[DecisionProba] AS [DecisionProba] 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 15 AS count, 3 AS depth, 2 AS parent_id, 1.0 AS [Proba_0.0], 0.0 AS [LogProba_0.0], 0.0 AS [Proba_1.0], -1.79769313486231e+308 AS [LogProba_1.0], 0 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 4 AS depth, 4 AS parent_id, 0.0 AS [Proba_0.0], -1.79769313486231e+308 AS [LogProba_0.0], 1.0 AS [Proba_1.0], 0.0 AS [LogProba_1.0], 1 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 4 AS depth, 4 AS parent_id, 1.0 AS [Proba_0.0], 0.0 AS [LogProba_0.0], 0.0 AS [Proba_1.0], -1.79769313486231e+308 AS [LogProba_1.0], 0 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 7 AS parent_id, 1.0 AS [Proba_0.0], 0.0 AS [LogProba_0.0], 0.0 AS [Proba_1.0], -1.79769313486231e+308 AS [LogProba_1.0], 0 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 9 AS parent_id, 1.0 AS [Proba_0.0], 0.0 AS [LogProba_0.0], 0.0 AS [Proba_1.0], -1.79769313486231e+308 AS [LogProba_1.0], 0 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS count, 4 AS depth, 9 AS parent_id, 0.0 AS [Proba_0.0], -1.79769313486231e+308 AS [LogProba_0.0], 1.0 AS [Proba_1.0], 0.0 AS [LogProba_1.0], 1 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 15 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 14 AS parent_id, 1.0 AS [Proba_0.0], 0.0 AS [LogProba_0.0], 0.0 AS [Proba_1.0], -1.79769313486231e+308 AS [LogProba_1.0], 0 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 17 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 11 AS count, 5 AS depth, 16 AS parent_id, 0.0 AS [Proba_0.0], -1.79769313486231e+308 AS [LogProba_0.0], 1.0 AS [Proba_1.0], 0.0 AS [LogProba_1.0], 1 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 19 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 6 AS depth, 18 AS parent_id, 1.0 AS [Proba_0.0], 0.0 AS [LogProba_0.0], 0.0 AS [Proba_1.0], -1.79769313486231e+308 AS [LogProba_1.0], 0 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 20 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 6 AS depth, 18 AS parent_id, 0.0 AS [Proba_0.0], -1.79769313486231e+308 AS [LogProba_0.0], 1.0 AS [Proba_1.0], 0.0 AS [LogProba_1.0], 1 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 21 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 13 AS parent_id, 1.0 AS [Proba_0.0], 0.0 AS [LogProba_0.0], 0.0 AS [Proba_1.0], -1.79769313486231e+308 AS [LogProba_1.0], 0 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 24 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 23 AS parent_id, 1.0 AS [Proba_0.0], 0.0 AS [LogProba_0.0], 0.0 AS [Proba_1.0], -1.79769313486231e+308 AS [LogProba_1.0], 0 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 25 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS count, 4 AS depth, 23 AS parent_id, 0.0 AS [Proba_0.0], -1.79769313486231e+308 AS [LogProba_0.0], 1.0 AS [Proba_1.0], 0.0 AS [LogProba_1.0], 1 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 26 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 3 AS depth, 22 AS parent_id, 1.0 AS [Proba_0.0], 0.0 AS [LogProba_0.0], 0.0 AS [Proba_1.0], -1.79769313486231e+308 AS [LogProba_1.0], 0 AS [Decision], 1.0 AS [DecisionProba]) AS [Values]), 
[DT_Output_8] AS 
(SELECT [DT_node_lookup_8].[KEY] AS [KEY], [DT_node_lookup_8].node_id_2 AS node_id_2, [DT_node_data_8].node_id AS node_id, [DT_node_data_8].feature AS feature, [DT_node_data_8].threshold AS threshold, [DT_node_data_8].count AS count, [DT_node_data_8].depth AS depth, [DT_node_data_8].parent_id AS parent_id, [DT_node_data_8].[Proba_0.0] AS [Proba_0.0], [DT_node_data_8].[LogProba_0.0] AS [LogProba_0.0], [DT_node_data_8].[Proba_1.0] AS [Proba_1.0], [DT_node_data_8].[LogProba_1.0] AS [LogProba_1.0], [DT_node_data_8].[Decision] AS [Decision], [DT_node_data_8].[DecisionProba] AS [DecisionProba] 
FROM [DT_node_lookup_8] LEFT OUTER JOIN [DT_node_data_8] ON [DT_node_lookup_8].node_id_2 = [DT_node_data_8].node_id), 
[RF_Tree_8] AS 
(SELECT [DT_Output_8].[KEY] AS [KEY], CAST(NULL AS FLOAT) AS [Score_0], [DT_Output_8].[Proba_0.0] AS [Proba_0], [DT_Output_8].[LogProba_0.0] AS [LogProba_0], CAST(NULL AS FLOAT) AS [Score_1], [DT_Output_8].[Proba_1.0] AS [Proba_1], [DT_Output_8].[LogProba_1.0] AS [LogProba_1] 
FROM [DT_Output_8]), 
[DT_node_lookup_9] AS 
(SELECT [ADS].[KEY] AS [KEY], CASE WHEN ([ADS].[Feature_95] <= -0.22473405301570892) THEN CASE WHEN ([ADS].[Feature_16] <= -1.2056396007537842) THEN 2 ELSE CASE WHEN ([ADS].[Feature_44] <= 1.4221220016479492) THEN CASE WHEN ([ADS].[Feature_4] <= 0.9930586814880371) THEN 5 ELSE 6 END ELSE 7 END END ELSE CASE WHEN ([ADS].[Feature_92] <= 1.2686364650726318) THEN CASE WHEN ([ADS].[Feature_41] <= -0.7551519870758057) THEN CASE WHEN ([ADS].[Feature_76] <= 0.24500855803489685) THEN 11 ELSE 12 END ELSE CASE WHEN ([ADS].[Feature_29] <= -0.7003329992294312) THEN CASE WHEN ([ADS].[Feature_58] <= -0.22272783517837524) THEN 15 ELSE 16 END ELSE 17 END END ELSE 18 END END AS node_id_2 
FROM [BinaryClass_100] AS [ADS]), 
[DT_node_data_9] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Proba_0.0] AS [Proba_0.0], [Values].[LogProba_0.0] AS [LogProba_0.0], [Values].[Proba_1.0] AS [Proba_1.0], [Values].[LogProba_1.0] AS [LogProba_1.0], [Values].[Decision] AS [Decision], [Values].[DecisionProba] AS [DecisionProba] 
FROM (SELECT 2 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 2 AS depth, 1 AS parent_id, 1.0 AS [Proba_0.0], 0.0 AS [LogProba_0.0], 0.0 AS [Proba_1.0], -1.79769313486231e+308 AS [LogProba_1.0], 0 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 13 AS count, 4 AS depth, 4 AS parent_id, 0.0 AS [Proba_0.0], -1.79769313486231e+308 AS [LogProba_0.0], 1.0 AS [Proba_1.0], 0.0 AS [LogProba_1.0], 1 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 4 AS parent_id, 1.0 AS [Proba_0.0], 0.0 AS [LogProba_0.0], 0.0 AS [Proba_1.0], -1.79769313486231e+308 AS [LogProba_1.0], 0 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 3 AS depth, 3 AS parent_id, 1.0 AS [Proba_0.0], 0.0 AS [LogProba_0.0], 0.0 AS [Proba_1.0], -1.79769313486231e+308 AS [LogProba_1.0], 0 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 4 AS depth, 10 AS parent_id, 1.0 AS [Proba_0.0], 0.0 AS [LogProba_0.0], 0.0 AS [Proba_1.0], -1.79769313486231e+308 AS [LogProba_1.0], 0 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 4 AS depth, 10 AS parent_id, 0.0 AS [Proba_0.0], -1.79769313486231e+308 AS [LogProba_0.0], 1.0 AS [Proba_1.0], 0.0 AS [LogProba_1.0], 1 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 15 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 14 AS parent_id, 1.0 AS [Proba_0.0], 0.0 AS [LogProba_0.0], 0.0 AS [Proba_1.0], -1.79769313486231e+308 AS [LogProba_1.0], 0 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 16 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 5 AS depth, 14 AS parent_id, 0.0 AS [Proba_0.0], -1.79769313486231e+308 AS [LogProba_0.0], 1.0 AS [Proba_1.0], 0.0 AS [LogProba_1.0], 1 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 17 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 16 AS count, 4 AS depth, 13 AS parent_id, 1.0 AS [Proba_0.0], 0.0 AS [LogProba_0.0], 0.0 AS [Proba_1.0], -1.79769313486231e+308 AS [LogProba_1.0], 0 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 18 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS count, 2 AS depth, 8 AS parent_id, 0.0 AS [Proba_0.0], -1.79769313486231e+308 AS [LogProba_0.0], 1.0 AS [Proba_1.0], 0.0 AS [LogProba_1.0], 1 AS [Decision], 1.0 AS [DecisionProba]) AS [Values]), 
[DT_Output_9] AS 
(SELECT [DT_node_lookup_9].[KEY] AS [KEY], [DT_node_lookup_9].node_id_2 AS node_id_2, [DT_node_data_9].node_id AS node_id, [DT_node_data_9].feature AS feature, [DT_node_data_9].threshold AS threshold, [DT_node_data_9].count AS count, [DT_node_data_9].depth AS depth, [DT_node_data_9].parent_id AS parent_id, [DT_node_data_9].[Proba_0.0] AS [Proba_0.0], [DT_node_data_9].[LogProba_0.0] AS [LogProba_0.0], [DT_node_data_9].[Proba_1.0] AS [Proba_1.0], [DT_node_data_9].[LogProba_1.0] AS [LogProba_1.0], [DT_node_data_9].[Decision] AS [Decision], [DT_node_data_9].[DecisionProba] AS [DecisionProba] 
FROM [DT_node_lookup_9] LEFT OUTER JOIN [DT_node_data_9] ON [DT_node_lookup_9].node_id_2 = [DT_node_data_9].node_id), 
[RF_Tree_9] AS 
(SELECT [DT_Output_9].[KEY] AS [KEY], CAST(NULL AS FLOAT) AS [Score_0], [DT_Output_9].[Proba_0.0] AS [Proba_0], [DT_Output_9].[LogProba_0.0] AS [LogProba_0], CAST(NULL AS FLOAT) AS [Score_1], [DT_Output_9].[Proba_1.0] AS [Proba_1], [DT_Output_9].[LogProba_1.0] AS [LogProba_1] 
FROM [DT_Output_9]), 
[DT_node_lookup_10] AS 
(SELECT [ADS].[KEY] AS [KEY], CASE WHEN ([ADS].[Feature_77] <= 0.034455347806215286) THEN CASE WHEN ([ADS].[Feature_73] <= 1.6449222564697266) THEN CASE WHEN ([ADS].[Feature_18] <= 1.0771634578704834) THEN 3 ELSE CASE WHEN ([ADS].[Feature_17] <= -0.5457596778869629) THEN 5 ELSE 6 END END ELSE 7 END ELSE CASE WHEN ([ADS].[Feature_69] <= -0.4638688564300537) THEN CASE WHEN ([ADS].[Feature_6] <= 0.3886241912841797) THEN CASE WHEN ([ADS].[Feature_94] <= 1.2602041959762573) THEN 11 ELSE 12 END ELSE 13 END ELSE CASE WHEN ([ADS].[Feature_8] <= 1.2689111232757568) THEN CASE WHEN ([ADS].[Feature_84] <= 1.6798489093780518) THEN 16 ELSE CASE WHEN ([ADS].[Feature_5] <= 0.4684140682220459) THEN 18 ELSE 19 END END ELSE CASE WHEN ([ADS].[Feature_96] <= 0.22425897419452667) THEN 21 ELSE 22 END END END END AS node_id_2 
FROM [BinaryClass_100] AS [ADS]), 
[DT_node_data_10] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Proba_0.0] AS [Proba_0.0], [Values].[LogProba_0.0] AS [LogProba_0.0], [Values].[Proba_1.0] AS [Proba_1.0], [Values].[LogProba_1.0] AS [LogProba_1.0], [Values].[Decision] AS [Decision], [Values].[DecisionProba] AS [DecisionProba] 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 14 AS count, 3 AS depth, 2 AS parent_id, 0.0 AS [Proba_0.0], -1.79769313486231e+308 AS [LogProba_0.0], 1.0 AS [Proba_1.0], 0.0 AS [LogProba_1.0], 1 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 4 AS parent_id, 1.0 AS [Proba_0.0], 0.0 AS [LogProba_0.0], 0.0 AS [Proba_1.0], -1.79769313486231e+308 AS [LogProba_1.0], 0 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 4 AS parent_id, 0.0 AS [Proba_0.0], -1.79769313486231e+308 AS [LogProba_0.0], 1.0 AS [Proba_1.0], 0.0 AS [LogProba_1.0], 1 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 2 AS depth, 1 AS parent_id, 1.0 AS [Proba_0.0], 0.0 AS [LogProba_0.0], 0.0 AS [Proba_1.0], -1.79769313486231e+308 AS [LogProba_1.0], 0 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 4 AS depth, 10 AS parent_id, 0.0 AS [Proba_0.0], -1.79769313486231e+308 AS [LogProba_0.0], 1.0 AS [Proba_1.0], 0.0 AS [LogProba_1.0], 1 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 10 AS parent_id, 1.0 AS [Proba_0.0], 0.0 AS [LogProba_0.0], 0.0 AS [Proba_1.0], -1.79769313486231e+308 AS [LogProba_1.0], 0 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 3 AS depth, 9 AS parent_id, 1.0 AS [Proba_0.0], 0.0 AS [LogProba_0.0], 0.0 AS [Proba_1.0], -1.79769313486231e+308 AS [LogProba_1.0], 0 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 16 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 22 AS count, 4 AS depth, 15 AS parent_id, 1.0 AS [Proba_0.0], 0.0 AS [LogProba_0.0], 0.0 AS [Proba_1.0], -1.79769313486231e+308 AS [LogProba_1.0], 0 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 18 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 17 AS parent_id, 1.0 AS [Proba_0.0], 0.0 AS [LogProba_0.0], 0.0 AS [Proba_1.0], -1.79769313486231e+308 AS [LogProba_1.0], 0 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 19 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 17 AS parent_id, 0.0 AS [Proba_0.0], -1.79769313486231e+308 AS [LogProba_0.0], 1.0 AS [Proba_1.0], 0.0 AS [LogProba_1.0], 1 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 21 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 20 AS parent_id, 1.0 AS [Proba_0.0], 0.0 AS [LogProba_0.0], 0.0 AS [Proba_1.0], -1.79769313486231e+308 AS [LogProba_1.0], 0 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 22 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 20 AS parent_id, 0.0 AS [Proba_0.0], -1.79769313486231e+308 AS [LogProba_0.0], 1.0 AS [Proba_1.0], 0.0 AS [LogProba_1.0], 1 AS [Decision], 1.0 AS [DecisionProba]) AS [Values]), 
[DT_Output_10] AS 
(SELECT [DT_node_lookup_10].[KEY] AS [KEY], [DT_node_lookup_10].node_id_2 AS node_id_2, [DT_node_data_10].node_id AS node_id, [DT_node_data_10].feature AS feature, [DT_node_data_10].threshold AS threshold, [DT_node_data_10].count AS count, [DT_node_data_10].depth AS depth, [DT_node_data_10].parent_id AS parent_id, [DT_node_data_10].[Proba_0.0] AS [Proba_0.0], [DT_node_data_10].[LogProba_0.0] AS [LogProba_0.0], [DT_node_data_10].[Proba_1.0] AS [Proba_1.0], [DT_node_data_10].[LogProba_1.0] AS [LogProba_1.0], [DT_node_data_10].[Decision] AS [Decision], [DT_node_data_10].[DecisionProba] AS [DecisionProba] 
FROM [DT_node_lookup_10] LEFT OUTER JOIN [DT_node_data_10] ON [DT_node_lookup_10].node_id_2 = [DT_node_data_10].node_id), 
[RF_Tree_10] AS 
(SELECT [DT_Output_10].[KEY] AS [KEY], CAST(NULL AS FLOAT) AS [Score_0], [DT_Output_10].[Proba_0.0] AS [Proba_0], [DT_Output_10].[LogProba_0.0] AS [LogProba_0], CAST(NULL AS FLOAT) AS [Score_1], [DT_Output_10].[Proba_1.0] AS [Proba_1], [DT_Output_10].[LogProba_1.0] AS [LogProba_1] 
FROM [DT_Output_10]), 
[DT_node_lookup_11] AS 
(SELECT [ADS].[KEY] AS [KEY], CASE WHEN ([ADS].[Feature_42] <= 0.6392327547073364) THEN CASE WHEN ([ADS].[Feature_41] <= 0.5994085073471069) THEN CASE WHEN ([ADS].[Feature_58] <= -0.16466024518013) THEN CASE WHEN ([ADS].[Feature_98] <= -1.2698901891708374) THEN 4 ELSE 5 END ELSE CASE WHEN ([ADS].[Feature_6] <= 0.27925464510917664) THEN CASE WHEN ([ADS].[Feature_15] <= 0.44954195618629456) THEN 8 ELSE 9 END ELSE 10 END END ELSE CASE WHEN ([ADS].[Feature_60] <= -0.9985716342926025) THEN 12 ELSE 13 END END ELSE CASE WHEN ([ADS].[Feature_80] <= -1.6365275382995605) THEN 15 ELSE CASE WHEN ([ADS].[Feature_63] <= -1.9680962562561035) THEN 17 ELSE 18 END END END AS node_id_2 
FROM [BinaryClass_100] AS [ADS]), 
[DT_node_data_11] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Proba_0.0] AS [Proba_0.0], [Values].[LogProba_0.0] AS [LogProba_0.0], [Values].[Proba_1.0] AS [Proba_1.0], [Values].[LogProba_1.0] AS [LogProba_1.0], [Values].[Decision] AS [Decision], [Values].[DecisionProba] AS [DecisionProba] 
FROM (SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 3 AS parent_id, 1.0 AS [Proba_0.0], 0.0 AS [LogProba_0.0], 0.0 AS [Proba_1.0], -1.79769313486231e+308 AS [LogProba_1.0], 0 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 18 AS count, 4 AS depth, 3 AS parent_id, 0.0 AS [Proba_0.0], -1.79769313486231e+308 AS [LogProba_0.0], 1.0 AS [Proba_1.0], 0.0 AS [LogProba_1.0], 1 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS count, 5 AS depth, 7 AS parent_id, 0.0 AS [Proba_0.0], -1.79769313486231e+308 AS [LogProba_0.0], 1.0 AS [Proba_1.0], 0.0 AS [LogProba_1.0], 1 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 5 AS depth, 7 AS parent_id, 1.0 AS [Proba_0.0], 0.0 AS [LogProba_0.0], 0.0 AS [Proba_1.0], -1.79769313486231e+308 AS [LogProba_1.0], 0 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS count, 4 AS depth, 6 AS parent_id, 1.0 AS [Proba_0.0], 0.0 AS [LogProba_0.0], 0.0 AS [Proba_1.0], -1.79769313486231e+308 AS [LogProba_1.0], 0 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 11 AS parent_id, 0.0 AS [Proba_0.0], -1.79769313486231e+308 AS [LogProba_0.0], 1.0 AS [Proba_1.0], 0.0 AS [LogProba_1.0], 1 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 7 AS count, 3 AS depth, 11 AS parent_id, 1.0 AS [Proba_0.0], 0.0 AS [LogProba_0.0], 0.0 AS [Proba_1.0], -1.79769313486231e+308 AS [LogProba_1.0], 0 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 15 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 2 AS depth, 14 AS parent_id, 0.0 AS [Proba_0.0], -1.79769313486231e+308 AS [LogProba_0.0], 1.0 AS [Proba_1.0], 0.0 AS [LogProba_1.0], 1 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 17 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 16 AS parent_id, 0.0 AS [Proba_0.0], -1.79769313486231e+308 AS [LogProba_0.0], 1.0 AS [Proba_1.0], 0.0 AS [LogProba_1.0], 1 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 18 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 11 AS count, 3 AS depth, 16 AS parent_id, 1.0 AS [Proba_0.0], 0.0 AS [LogProba_0.0], 0.0 AS [Proba_1.0], -1.79769313486231e+308 AS [LogProba_1.0], 0 AS [Decision], 1.0 AS [DecisionProba]) AS [Values]), 
[DT_Output_11] AS 
(SELECT [DT_node_lookup_11].[KEY] AS [KEY], [DT_node_lookup_11].node_id_2 AS node_id_2, [DT_node_data_11].node_id AS node_id, [DT_node_data_11].feature AS feature, [DT_node_data_11].threshold AS threshold, [DT_node_data_11].count AS count, [DT_node_data_11].depth AS depth, [DT_node_data_11].parent_id AS parent_id, [DT_node_data_11].[Proba_0.0] AS [Proba_0.0], [DT_node_data_11].[LogProba_0.0] AS [LogProba_0.0], [DT_node_data_11].[Proba_1.0] AS [Proba_1.0], [DT_node_data_11].[LogProba_1.0] AS [LogProba_1.0], [DT_node_data_11].[Decision] AS [Decision], [DT_node_data_11].[DecisionProba] AS [DecisionProba] 
FROM [DT_node_lookup_11] LEFT OUTER JOIN [DT_node_data_11] ON [DT_node_lookup_11].node_id_2 = [DT_node_data_11].node_id), 
[RF_Tree_11] AS 
(SELECT [DT_Output_11].[KEY] AS [KEY], CAST(NULL AS FLOAT) AS [Score_0], [DT_Output_11].[Proba_0.0] AS [Proba_0], [DT_Output_11].[LogProba_0.0] AS [LogProba_0], CAST(NULL AS FLOAT) AS [Score_1], [DT_Output_11].[Proba_1.0] AS [Proba_1], [DT_Output_11].[LogProba_1.0] AS [LogProba_1] 
FROM [DT_Output_11]), 
[DT_node_lookup_12] AS 
(SELECT [ADS].[KEY] AS [KEY], CASE WHEN ([ADS].[Feature_18] <= 0.4967719316482544) THEN CASE WHEN ([ADS].[Feature_85] <= 0.25346559286117554) THEN CASE WHEN ([ADS].[Feature_33] <= 1.1484500169754028) THEN CASE WHEN ([ADS].[Feature_57] <= -0.9958542585372925) THEN 4 ELSE 5 END ELSE 6 END ELSE CASE WHEN ([ADS].[Feature_41] <= 1.315337896347046) THEN CASE WHEN ([ADS].[Feature_3] <= -1.5392338037490845) THEN 9 ELSE 10 END ELSE 11 END END ELSE CASE WHEN ([ADS].[Feature_88] <= 0.6205239295959473) THEN CASE WHEN ([ADS].[Feature_42] <= -1.6034700870513916) THEN 14 ELSE CASE WHEN ([ADS].[Feature_45] <= 1.107122540473938) THEN 16 ELSE 17 END END ELSE CASE WHEN ([ADS].[Feature_17] <= -0.5404984951019287) THEN 19 ELSE 20 END END END AS node_id_2 
FROM [BinaryClass_100] AS [ADS]), 
[DT_node_data_12] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Proba_0.0] AS [Proba_0.0], [Values].[LogProba_0.0] AS [LogProba_0.0], [Values].[Proba_1.0] AS [Proba_1.0], [Values].[LogProba_1.0] AS [LogProba_1.0], [Values].[Decision] AS [Decision], [Values].[DecisionProba] AS [DecisionProba] 
FROM (SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 4 AS depth, 3 AS parent_id, 1.0 AS [Proba_0.0], 0.0 AS [LogProba_0.0], 0.0 AS [Proba_1.0], -1.79769313486231e+308 AS [LogProba_1.0], 0 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 15 AS count, 4 AS depth, 3 AS parent_id, 0.0 AS [Proba_0.0], -1.79769313486231e+308 AS [LogProba_0.0], 1.0 AS [Proba_1.0], 0.0 AS [LogProba_1.0], 1 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 3 AS depth, 2 AS parent_id, 1.0 AS [Proba_0.0], 0.0 AS [LogProba_0.0], 0.0 AS [Proba_1.0], -1.79769313486231e+308 AS [LogProba_1.0], 0 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 8 AS parent_id, 0.0 AS [Proba_0.0], -1.79769313486231e+308 AS [LogProba_0.0], 1.0 AS [Proba_1.0], 0.0 AS [LogProba_1.0], 1 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 13 AS count, 4 AS depth, 8 AS parent_id, 1.0 AS [Proba_0.0], 0.0 AS [LogProba_0.0], 0.0 AS [Proba_1.0], -1.79769313486231e+308 AS [LogProba_1.0], 0 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 3 AS depth, 7 AS parent_id, 0.0 AS [Proba_0.0], -1.79769313486231e+308 AS [LogProba_0.0], 1.0 AS [Proba_1.0], 0.0 AS [LogProba_1.0], 1 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 13 AS parent_id, 0.0 AS [Proba_0.0], -1.79769313486231e+308 AS [LogProba_0.0], 1.0 AS [Proba_1.0], 0.0 AS [LogProba_1.0], 1 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 16 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 11 AS count, 4 AS depth, 15 AS parent_id, 1.0 AS [Proba_0.0], 0.0 AS [LogProba_0.0], 0.0 AS [Proba_1.0], -1.79769313486231e+308 AS [LogProba_1.0], 0 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 17 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 15 AS parent_id, 0.0 AS [Proba_0.0], -1.79769313486231e+308 AS [LogProba_0.0], 1.0 AS [Proba_1.0], 0.0 AS [LogProba_1.0], 1 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 19 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 3 AS depth, 18 AS parent_id, 0.0 AS [Proba_0.0], -1.79769313486231e+308 AS [LogProba_0.0], 1.0 AS [Proba_1.0], 0.0 AS [LogProba_1.0], 1 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 20 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 3 AS depth, 18 AS parent_id, 1.0 AS [Proba_0.0], 0.0 AS [LogProba_0.0], 0.0 AS [Proba_1.0], -1.79769313486231e+308 AS [LogProba_1.0], 0 AS [Decision], 1.0 AS [DecisionProba]) AS [Values]), 
[DT_Output_12] AS 
(SELECT [DT_node_lookup_12].[KEY] AS [KEY], [DT_node_lookup_12].node_id_2 AS node_id_2, [DT_node_data_12].node_id AS node_id, [DT_node_data_12].feature AS feature, [DT_node_data_12].threshold AS threshold, [DT_node_data_12].count AS count, [DT_node_data_12].depth AS depth, [DT_node_data_12].parent_id AS parent_id, [DT_node_data_12].[Proba_0.0] AS [Proba_0.0], [DT_node_data_12].[LogProba_0.0] AS [LogProba_0.0], [DT_node_data_12].[Proba_1.0] AS [Proba_1.0], [DT_node_data_12].[LogProba_1.0] AS [LogProba_1.0], [DT_node_data_12].[Decision] AS [Decision], [DT_node_data_12].[DecisionProba] AS [DecisionProba] 
FROM [DT_node_lookup_12] LEFT OUTER JOIN [DT_node_data_12] ON [DT_node_lookup_12].node_id_2 = [DT_node_data_12].node_id), 
[RF_Tree_12] AS 
(SELECT [DT_Output_12].[KEY] AS [KEY], CAST(NULL AS FLOAT) AS [Score_0], [DT_Output_12].[Proba_0.0] AS [Proba_0], [DT_Output_12].[LogProba_0.0] AS [LogProba_0], CAST(NULL AS FLOAT) AS [Score_1], [DT_Output_12].[Proba_1.0] AS [Proba_1], [DT_Output_12].[LogProba_1.0] AS [LogProba_1] 
FROM [DT_Output_12]), 
[DT_node_lookup_13] AS 
(SELECT [ADS].[KEY] AS [KEY], CASE WHEN ([ADS].[Feature_92] <= -0.35864657163619995) THEN CASE WHEN ([ADS].[Feature_18] <= -1.104736566543579) THEN CASE WHEN ([ADS].[Feature_45] <= -1.6083738803863525) THEN 3 ELSE 4 END ELSE CASE WHEN ([ADS].[Feature_57] <= 1.0720405578613281) THEN 6 ELSE 7 END END ELSE CASE WHEN ([ADS].[Feature_60] <= -0.6577232480049133) THEN 9 ELSE CASE WHEN ([ADS].[Feature_4] <= 0.1314699649810791) THEN CASE WHEN ([ADS].[Feature_12] <= -0.46101632714271545) THEN 12 ELSE 13 END ELSE CASE WHEN ([ADS].[Feature_63] <= 1.8744111061096191) THEN 15 ELSE 16 END END END END AS node_id_2 
FROM [BinaryClass_100] AS [ADS]), 
[DT_node_data_13] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Proba_0.0] AS [Proba_0.0], [Values].[LogProba_0.0] AS [LogProba_0.0], [Values].[Proba_1.0] AS [Proba_1.0], [Values].[LogProba_1.0] AS [LogProba_1.0], [Values].[Decision] AS [Decision], [Values].[DecisionProba] AS [DecisionProba] 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 2 AS parent_id, 1.0 AS [Proba_0.0], 0.0 AS [LogProba_0.0], 0.0 AS [Proba_1.0], -1.79769313486231e+308 AS [LogProba_1.0], 0 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 3 AS depth, 2 AS parent_id, 0.0 AS [Proba_0.0], -1.79769313486231e+308 AS [LogProba_0.0], 1.0 AS [Proba_1.0], 0.0 AS [LogProba_1.0], 1 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 14 AS count, 3 AS depth, 5 AS parent_id, 1.0 AS [Proba_0.0], 0.0 AS [LogProba_0.0], 0.0 AS [Proba_1.0], -1.79769313486231e+308 AS [LogProba_1.0], 0 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 3 AS depth, 5 AS parent_id, 0.0 AS [Proba_0.0], -1.79769313486231e+308 AS [LogProba_0.0], 1.0 AS [Proba_1.0], 0.0 AS [LogProba_1.0], 1 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 11 AS count, 2 AS depth, 8 AS parent_id, 0.0 AS [Proba_0.0], -1.79769313486231e+308 AS [LogProba_0.0], 1.0 AS [Proba_1.0], 0.0 AS [LogProba_1.0], 1 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 11 AS parent_id, 1.0 AS [Proba_0.0], 0.0 AS [LogProba_0.0], 0.0 AS [Proba_1.0], -1.79769313486231e+308 AS [LogProba_1.0], 0 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 8 AS count, 4 AS depth, 11 AS parent_id, 0.0 AS [Proba_0.0], -1.79769313486231e+308 AS [LogProba_0.0], 1.0 AS [Proba_1.0], 0.0 AS [LogProba_1.0], 1 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 15 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 11 AS count, 4 AS depth, 14 AS parent_id, 1.0 AS [Proba_0.0], 0.0 AS [LogProba_0.0], 0.0 AS [Proba_1.0], -1.79769313486231e+308 AS [LogProba_1.0], 0 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 16 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 14 AS parent_id, 0.0 AS [Proba_0.0], -1.79769313486231e+308 AS [LogProba_0.0], 1.0 AS [Proba_1.0], 0.0 AS [LogProba_1.0], 1 AS [Decision], 1.0 AS [DecisionProba]) AS [Values]), 
[DT_Output_13] AS 
(SELECT [DT_node_lookup_13].[KEY] AS [KEY], [DT_node_lookup_13].node_id_2 AS node_id_2, [DT_node_data_13].node_id AS node_id, [DT_node_data_13].feature AS feature, [DT_node_data_13].threshold AS threshold, [DT_node_data_13].count AS count, [DT_node_data_13].depth AS depth, [DT_node_data_13].parent_id AS parent_id, [DT_node_data_13].[Proba_0.0] AS [Proba_0.0], [DT_node_data_13].[LogProba_0.0] AS [LogProba_0.0], [DT_node_data_13].[Proba_1.0] AS [Proba_1.0], [DT_node_data_13].[LogProba_1.0] AS [LogProba_1.0], [DT_node_data_13].[Decision] AS [Decision], [DT_node_data_13].[DecisionProba] AS [DecisionProba] 
FROM [DT_node_lookup_13] LEFT OUTER JOIN [DT_node_data_13] ON [DT_node_lookup_13].node_id_2 = [DT_node_data_13].node_id), 
[RF_Tree_13] AS 
(SELECT [DT_Output_13].[KEY] AS [KEY], CAST(NULL AS FLOAT) AS [Score_0], [DT_Output_13].[Proba_0.0] AS [Proba_0], [DT_Output_13].[LogProba_0.0] AS [LogProba_0], CAST(NULL AS FLOAT) AS [Score_1], [DT_Output_13].[Proba_1.0] AS [Proba_1], [DT_Output_13].[LogProba_1.0] AS [LogProba_1] 
FROM [DT_Output_13]), 
[DT_node_lookup_14] AS 
(SELECT [ADS].[KEY] AS [KEY], CASE WHEN ([ADS].[Feature_0] <= -0.5467219948768616) THEN CASE WHEN ([ADS].[Feature_90] <= -0.857734203338623) THEN 2 ELSE CASE WHEN ([ADS].[Feature_98] <= 1.4309251308441162) THEN 4 ELSE 5 END END ELSE CASE WHEN ([ADS].[Feature_73] <= 0.8891735672950745) THEN CASE WHEN ([ADS].[Feature_57] <= -0.45606911182403564) THEN CASE WHEN ([ADS].[Feature_10] <= -0.7493161559104919) THEN 9 ELSE 10 END ELSE CASE WHEN ([ADS].[Feature_90] <= 0.9344468116760254) THEN 12 ELSE CASE WHEN ([ADS].[Feature_58] <= -0.35918015241622925) THEN 14 ELSE 15 END END END ELSE CASE WHEN ([ADS].[Feature_0] <= -0.10291439294815063) THEN 17 ELSE 18 END END END AS node_id_2 
FROM [BinaryClass_100] AS [ADS]), 
[DT_node_data_14] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Proba_0.0] AS [Proba_0.0], [Values].[LogProba_0.0] AS [LogProba_0.0], [Values].[Proba_1.0] AS [Proba_1.0], [Values].[LogProba_1.0] AS [LogProba_1.0], [Values].[Decision] AS [Decision], [Values].[DecisionProba] AS [DecisionProba] 
FROM (SELECT 2 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 2 AS depth, 1 AS parent_id, 0.0 AS [Proba_0.0], -1.79769313486231e+308 AS [LogProba_0.0], 1.0 AS [Proba_1.0], 0.0 AS [LogProba_1.0], 1 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 8 AS count, 3 AS depth, 3 AS parent_id, 1.0 AS [Proba_0.0], 0.0 AS [LogProba_0.0], 0.0 AS [Proba_1.0], -1.79769313486231e+308 AS [LogProba_1.0], 0 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 3 AS parent_id, 0.0 AS [Proba_0.0], -1.79769313486231e+308 AS [LogProba_0.0], 1.0 AS [Proba_1.0], 0.0 AS [LogProba_1.0], 1 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 4 AS depth, 8 AS parent_id, 0.0 AS [Proba_0.0], -1.79769313486231e+308 AS [LogProba_0.0], 1.0 AS [Proba_1.0], 0.0 AS [LogProba_1.0], 1 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 7 AS count, 4 AS depth, 8 AS parent_id, 1.0 AS [Proba_0.0], 0.0 AS [LogProba_0.0], 0.0 AS [Proba_1.0], -1.79769313486231e+308 AS [LogProba_1.0], 0 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 21 AS count, 4 AS depth, 11 AS parent_id, 0.0 AS [Proba_0.0], -1.79769313486231e+308 AS [LogProba_0.0], 1.0 AS [Proba_1.0], 0.0 AS [LogProba_1.0], 1 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 5 AS depth, 13 AS parent_id, 0.0 AS [Proba_0.0], -1.79769313486231e+308 AS [LogProba_0.0], 1.0 AS [Proba_1.0], 0.0 AS [LogProba_1.0], 1 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 15 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 13 AS parent_id, 1.0 AS [Proba_0.0], 0.0 AS [LogProba_0.0], 0.0 AS [Proba_1.0], -1.79769313486231e+308 AS [LogProba_1.0], 0 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 17 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 16 AS parent_id, 0.0 AS [Proba_0.0], -1.79769313486231e+308 AS [LogProba_0.0], 1.0 AS [Proba_1.0], 0.0 AS [LogProba_1.0], 1 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 18 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 7 AS count, 3 AS depth, 16 AS parent_id, 1.0 AS [Proba_0.0], 0.0 AS [LogProba_0.0], 0.0 AS [Proba_1.0], -1.79769313486231e+308 AS [LogProba_1.0], 0 AS [Decision], 1.0 AS [DecisionProba]) AS [Values]), 
[DT_Output_14] AS 
(SELECT [DT_node_lookup_14].[KEY] AS [KEY], [DT_node_lookup_14].node_id_2 AS node_id_2, [DT_node_data_14].node_id AS node_id, [DT_node_data_14].feature AS feature, [DT_node_data_14].threshold AS threshold, [DT_node_data_14].count AS count, [DT_node_data_14].depth AS depth, [DT_node_data_14].parent_id AS parent_id, [DT_node_data_14].[Proba_0.0] AS [Proba_0.0], [DT_node_data_14].[LogProba_0.0] AS [LogProba_0.0], [DT_node_data_14].[Proba_1.0] AS [Proba_1.0], [DT_node_data_14].[LogProba_1.0] AS [LogProba_1.0], [DT_node_data_14].[Decision] AS [Decision], [DT_node_data_14].[DecisionProba] AS [DecisionProba] 
FROM [DT_node_lookup_14] LEFT OUTER JOIN [DT_node_data_14] ON [DT_node_lookup_14].node_id_2 = [DT_node_data_14].node_id), 
[RF_Tree_14] AS 
(SELECT [DT_Output_14].[KEY] AS [KEY], CAST(NULL AS FLOAT) AS [Score_0], [DT_Output_14].[Proba_0.0] AS [Proba_0], [DT_Output_14].[LogProba_0.0] AS [LogProba_0], CAST(NULL AS FLOAT) AS [Score_1], [DT_Output_14].[Proba_1.0] AS [Proba_1], [DT_Output_14].[LogProba_1.0] AS [LogProba_1] 
FROM [DT_Output_14]), 
[DT_node_lookup_15] AS 
(SELECT [ADS].[KEY] AS [KEY], CASE WHEN ([ADS].[Feature_77] <= -0.1004633679986) THEN 1 ELSE CASE WHEN ([ADS].[Feature_47] <= -1.8320646286010742) THEN 3 ELSE CASE WHEN ([ADS].[Feature_51] <= 1.9527651071548462) THEN CASE WHEN ([ADS].[Feature_67] <= 0.993941068649292) THEN CASE WHEN ([ADS].[Feature_15] <= -0.7707918882369995) THEN 7 ELSE CASE WHEN ([ADS].[Feature_22] <= -1.480290412902832) THEN CASE WHEN ([ADS].[Feature_92] <= -0.23344555497169495) THEN 10 ELSE 11 END ELSE 12 END END ELSE CASE WHEN ([ADS].[Feature_38] <= -0.1560400128364563) THEN 14 ELSE 15 END END ELSE CASE WHEN ([ADS].[Feature_68] <= -0.8311029076576233) THEN 17 ELSE 18 END END END END AS node_id_2 
FROM [BinaryClass_100] AS [ADS]), 
[DT_node_data_15] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Proba_0.0] AS [Proba_0.0], [Values].[LogProba_0.0] AS [LogProba_0.0], [Values].[Proba_1.0] AS [Proba_1.0], [Values].[LogProba_1.0] AS [LogProba_1.0], [Values].[Decision] AS [Decision], [Values].[DecisionProba] AS [DecisionProba] 
FROM (SELECT 1 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 18 AS count, 1 AS depth, 0 AS parent_id, 0.0 AS [Proba_0.0], -1.79769313486231e+308 AS [LogProba_0.0], 1.0 AS [Proba_1.0], 0.0 AS [LogProba_1.0], 1 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 2 AS depth, 2 AS parent_id, 0.0 AS [Proba_0.0], -1.79769313486231e+308 AS [LogProba_0.0], 1.0 AS [Proba_1.0], 0.0 AS [LogProba_1.0], 1 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 6 AS parent_id, 0.0 AS [Proba_0.0], -1.79769313486231e+308 AS [LogProba_0.0], 1.0 AS [Proba_1.0], 0.0 AS [LogProba_1.0], 1 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 7 AS depth, 9 AS parent_id, 1.0 AS [Proba_0.0], 0.0 AS [LogProba_0.0], 0.0 AS [Proba_1.0], -1.79769313486231e+308 AS [LogProba_1.0], 0 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 7 AS depth, 9 AS parent_id, 0.0 AS [Proba_0.0], -1.79769313486231e+308 AS [LogProba_0.0], 1.0 AS [Proba_1.0], 0.0 AS [LogProba_1.0], 1 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 24 AS count, 6 AS depth, 8 AS parent_id, 1.0 AS [Proba_0.0], 0.0 AS [LogProba_0.0], 0.0 AS [Proba_1.0], -1.79769313486231e+308 AS [LogProba_1.0], 0 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 13 AS parent_id, 0.0 AS [Proba_0.0], -1.79769313486231e+308 AS [LogProba_0.0], 1.0 AS [Proba_1.0], 0.0 AS [LogProba_1.0], 1 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 15 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 13 AS parent_id, 1.0 AS [Proba_0.0], 0.0 AS [LogProba_0.0], 0.0 AS [Proba_1.0], -1.79769313486231e+308 AS [LogProba_1.0], 0 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 17 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 16 AS parent_id, 1.0 AS [Proba_0.0], 0.0 AS [LogProba_0.0], 0.0 AS [Proba_1.0], -1.79769313486231e+308 AS [LogProba_1.0], 0 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 18 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 4 AS depth, 16 AS parent_id, 0.0 AS [Proba_0.0], -1.79769313486231e+308 AS [LogProba_0.0], 1.0 AS [Proba_1.0], 0.0 AS [LogProba_1.0], 1 AS [Decision], 1.0 AS [DecisionProba]) AS [Values]), 
[DT_Output_15] AS 
(SELECT [DT_node_lookup_15].[KEY] AS [KEY], [DT_node_lookup_15].node_id_2 AS node_id_2, [DT_node_data_15].node_id AS node_id, [DT_node_data_15].feature AS feature, [DT_node_data_15].threshold AS threshold, [DT_node_data_15].count AS count, [DT_node_data_15].depth AS depth, [DT_node_data_15].parent_id AS parent_id, [DT_node_data_15].[Proba_0.0] AS [Proba_0.0], [DT_node_data_15].[LogProba_0.0] AS [LogProba_0.0], [DT_node_data_15].[Proba_1.0] AS [Proba_1.0], [DT_node_data_15].[LogProba_1.0] AS [LogProba_1.0], [DT_node_data_15].[Decision] AS [Decision], [DT_node_data_15].[DecisionProba] AS [DecisionProba] 
FROM [DT_node_lookup_15] LEFT OUTER JOIN [DT_node_data_15] ON [DT_node_lookup_15].node_id_2 = [DT_node_data_15].node_id), 
[RF_Tree_15] AS 
(SELECT [DT_Output_15].[KEY] AS [KEY], CAST(NULL AS FLOAT) AS [Score_0], [DT_Output_15].[Proba_0.0] AS [Proba_0], [DT_Output_15].[LogProba_0.0] AS [LogProba_0], CAST(NULL AS FLOAT) AS [Score_1], [DT_Output_15].[Proba_1.0] AS [Proba_1], [DT_Output_15].[LogProba_1.0] AS [LogProba_1] 
FROM [DT_Output_15]), 
[DT_node_lookup_16] AS 
(SELECT [ADS].[KEY] AS [KEY], CASE WHEN ([ADS].[Feature_82] <= 0.3251686692237854) THEN CASE WHEN ([ADS].[Feature_0] <= 1.5240974426269531) THEN CASE WHEN ([ADS].[Feature_57] <= 0.1396549791097641) THEN CASE WHEN ([ADS].[Feature_3] <= 0.8282851576805115) THEN 4 ELSE CASE WHEN ([ADS].[Feature_75] <= -0.18022283911705017) THEN 6 ELSE 7 END END ELSE CASE WHEN ([ADS].[Feature_63] <= 1.633076786994934) THEN 9 ELSE 10 END END ELSE 11 END ELSE CASE WHEN ([ADS].[Feature_25] <= 0.8756363391876221) THEN CASE WHEN ([ADS].[Feature_23] <= -1.3278498649597168) THEN 14 ELSE 15 END ELSE 16 END END AS node_id_2 
FROM [BinaryClass_100] AS [ADS]), 
[DT_node_data_16] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Proba_0.0] AS [Proba_0.0], [Values].[LogProba_0.0] AS [LogProba_0.0], [Values].[Proba_1.0] AS [Proba_1.0], [Values].[LogProba_1.0] AS [LogProba_1.0], [Values].[Decision] AS [Decision], [Values].[DecisionProba] AS [DecisionProba] 
FROM (SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 20 AS count, 4 AS depth, 3 AS parent_id, 1.0 AS [Proba_0.0], 0.0 AS [LogProba_0.0], 0.0 AS [Proba_1.0], -1.79769313486231e+308 AS [LogProba_1.0], 0 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 5 AS depth, 5 AS parent_id, 1.0 AS [Proba_0.0], 0.0 AS [LogProba_0.0], 0.0 AS [Proba_1.0], -1.79769313486231e+308 AS [LogProba_1.0], 0 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 5 AS parent_id, 0.0 AS [Proba_0.0], -1.79769313486231e+308 AS [LogProba_0.0], 1.0 AS [Proba_1.0], 0.0 AS [LogProba_1.0], 1 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS count, 4 AS depth, 8 AS parent_id, 0.0 AS [Proba_0.0], -1.79769313486231e+308 AS [LogProba_0.0], 1.0 AS [Proba_1.0], 0.0 AS [LogProba_1.0], 1 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 8 AS parent_id, 1.0 AS [Proba_0.0], 0.0 AS [LogProba_0.0], 0.0 AS [Proba_1.0], -1.79769313486231e+308 AS [LogProba_1.0], 0 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 2 AS depth, 1 AS parent_id, 0.0 AS [Proba_0.0], -1.79769313486231e+308 AS [LogProba_0.0], 1.0 AS [Proba_1.0], 0.0 AS [LogProba_1.0], 1 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 13 AS parent_id, 1.0 AS [Proba_0.0], 0.0 AS [LogProba_0.0], 0.0 AS [Proba_1.0], -1.79769313486231e+308 AS [LogProba_1.0], 0 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 15 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 14 AS count, 3 AS depth, 13 AS parent_id, 0.0 AS [Proba_0.0], -1.79769313486231e+308 AS [LogProba_0.0], 1.0 AS [Proba_1.0], 0.0 AS [LogProba_1.0], 1 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 16 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 2 AS depth, 12 AS parent_id, 1.0 AS [Proba_0.0], 0.0 AS [LogProba_0.0], 0.0 AS [Proba_1.0], -1.79769313486231e+308 AS [LogProba_1.0], 0 AS [Decision], 1.0 AS [DecisionProba]) AS [Values]), 
[DT_Output_16] AS 
(SELECT [DT_node_lookup_16].[KEY] AS [KEY], [DT_node_lookup_16].node_id_2 AS node_id_2, [DT_node_data_16].node_id AS node_id, [DT_node_data_16].feature AS feature, [DT_node_data_16].threshold AS threshold, [DT_node_data_16].count AS count, [DT_node_data_16].depth AS depth, [DT_node_data_16].parent_id AS parent_id, [DT_node_data_16].[Proba_0.0] AS [Proba_0.0], [DT_node_data_16].[LogProba_0.0] AS [LogProba_0.0], [DT_node_data_16].[Proba_1.0] AS [Proba_1.0], [DT_node_data_16].[LogProba_1.0] AS [LogProba_1.0], [DT_node_data_16].[Decision] AS [Decision], [DT_node_data_16].[DecisionProba] AS [DecisionProba] 
FROM [DT_node_lookup_16] LEFT OUTER JOIN [DT_node_data_16] ON [DT_node_lookup_16].node_id_2 = [DT_node_data_16].node_id), 
[RF_Tree_16] AS 
(SELECT [DT_Output_16].[KEY] AS [KEY], CAST(NULL AS FLOAT) AS [Score_0], [DT_Output_16].[Proba_0.0] AS [Proba_0], [DT_Output_16].[LogProba_0.0] AS [LogProba_0], CAST(NULL AS FLOAT) AS [Score_1], [DT_Output_16].[Proba_1.0] AS [Proba_1], [DT_Output_16].[LogProba_1.0] AS [LogProba_1] 
FROM [DT_Output_16]), 
[DT_node_lookup_17] AS 
(SELECT [ADS].[KEY] AS [KEY], CASE WHEN ([ADS].[Feature_91] <= -1.4207947254180908) THEN 1 ELSE CASE WHEN ([ADS].[Feature_57] <= 0.03440605849027634) THEN CASE WHEN ([ADS].[Feature_68] <= 1.2064549922943115) THEN CASE WHEN ([ADS].[Feature_46] <= -1.6447391510009766) THEN 5 ELSE CASE WHEN ([ADS].[Feature_63] <= 2.160352945327759) THEN 7 ELSE 8 END END ELSE CASE WHEN ([ADS].[Feature_82] <= -0.46561339497566223) THEN 10 ELSE 11 END END ELSE CASE WHEN ([ADS].[Feature_28] <= 0.6996382474899292) THEN 13 ELSE CASE WHEN ([ADS].[Feature_77] <= -0.3396349251270294) THEN 15 ELSE 16 END END END END AS node_id_2 
FROM [BinaryClass_100] AS [ADS]), 
[DT_node_data_17] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Proba_0.0] AS [Proba_0.0], [Values].[LogProba_0.0] AS [LogProba_0.0], [Values].[Proba_1.0] AS [Proba_1.0], [Values].[LogProba_1.0] AS [LogProba_1.0], [Values].[Decision] AS [Decision], [Values].[DecisionProba] AS [DecisionProba] 
FROM (SELECT 1 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 1 AS depth, 0 AS parent_id, 0.0 AS [Proba_0.0], -1.79769313486231e+308 AS [LogProba_0.0], 1.0 AS [Proba_1.0], 0.0 AS [LogProba_1.0], 1 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 4 AS parent_id, 0.0 AS [Proba_0.0], -1.79769313486231e+308 AS [LogProba_0.0], 1.0 AS [Proba_1.0], 0.0 AS [LogProba_1.0], 1 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 28 AS count, 5 AS depth, 6 AS parent_id, 1.0 AS [Proba_0.0], 0.0 AS [LogProba_0.0], 0.0 AS [Proba_1.0], -1.79769313486231e+308 AS [LogProba_1.0], 0 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 6 AS parent_id, 0.0 AS [Proba_0.0], -1.79769313486231e+308 AS [LogProba_0.0], 1.0 AS [Proba_1.0], 0.0 AS [LogProba_1.0], 1 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 9 AS parent_id, 0.0 AS [Proba_0.0], -1.79769313486231e+308 AS [LogProba_0.0], 1.0 AS [Proba_1.0], 0.0 AS [LogProba_1.0], 1 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 4 AS depth, 9 AS parent_id, 1.0 AS [Proba_0.0], 0.0 AS [LogProba_0.0], 0.0 AS [Proba_1.0], -1.79769313486231e+308 AS [LogProba_1.0], 0 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 12 AS count, 3 AS depth, 12 AS parent_id, 0.0 AS [Proba_0.0], -1.79769313486231e+308 AS [LogProba_0.0], 1.0 AS [Proba_1.0], 0.0 AS [LogProba_1.0], 1 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 15 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 4 AS depth, 14 AS parent_id, 0.0 AS [Proba_0.0], -1.79769313486231e+308 AS [LogProba_0.0], 1.0 AS [Proba_1.0], 0.0 AS [LogProba_1.0], 1 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 16 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 4 AS depth, 14 AS parent_id, 1.0 AS [Proba_0.0], 0.0 AS [LogProba_0.0], 0.0 AS [Proba_1.0], -1.79769313486231e+308 AS [LogProba_1.0], 0 AS [Decision], 1.0 AS [DecisionProba]) AS [Values]), 
[DT_Output_17] AS 
(SELECT [DT_node_lookup_17].[KEY] AS [KEY], [DT_node_lookup_17].node_id_2 AS node_id_2, [DT_node_data_17].node_id AS node_id, [DT_node_data_17].feature AS feature, [DT_node_data_17].threshold AS threshold, [DT_node_data_17].count AS count, [DT_node_data_17].depth AS depth, [DT_node_data_17].parent_id AS parent_id, [DT_node_data_17].[Proba_0.0] AS [Proba_0.0], [DT_node_data_17].[LogProba_0.0] AS [LogProba_0.0], [DT_node_data_17].[Proba_1.0] AS [Proba_1.0], [DT_node_data_17].[LogProba_1.0] AS [LogProba_1.0], [DT_node_data_17].[Decision] AS [Decision], [DT_node_data_17].[DecisionProba] AS [DecisionProba] 
FROM [DT_node_lookup_17] LEFT OUTER JOIN [DT_node_data_17] ON [DT_node_lookup_17].node_id_2 = [DT_node_data_17].node_id), 
[RF_Tree_17] AS 
(SELECT [DT_Output_17].[KEY] AS [KEY], CAST(NULL AS FLOAT) AS [Score_0], [DT_Output_17].[Proba_0.0] AS [Proba_0], [DT_Output_17].[LogProba_0.0] AS [LogProba_0], CAST(NULL AS FLOAT) AS [Score_1], [DT_Output_17].[Proba_1.0] AS [Proba_1], [DT_Output_17].[LogProba_1.0] AS [LogProba_1] 
FROM [DT_Output_17]), 
[DT_node_lookup_18] AS 
(SELECT [ADS].[KEY] AS [KEY], CASE WHEN ([ADS].[Feature_69] <= -0.21316395699977875) THEN CASE WHEN ([ADS].[Feature_51] <= -1.337673306465149) THEN CASE WHEN ([ADS].[Feature_83] <= 0.5970208644866943) THEN 3 ELSE 4 END ELSE CASE WHEN ([ADS].[Feature_80] <= 1.2588934898376465) THEN CASE WHEN ([ADS].[Feature_56] <= -2.234224796295166) THEN 7 ELSE CASE WHEN ([ADS].[Feature_75] <= 1.3390727043151855) THEN 9 ELSE CASE WHEN ([ADS].[Feature_87] <= -0.04365863278508186) THEN 11 ELSE 12 END END END ELSE 13 END END ELSE CASE WHEN ([ADS].[Feature_77] <= 0.034455347806215286) THEN CASE WHEN ([ADS].[Feature_90] <= 1.1836446523666382) THEN CASE WHEN ([ADS].[Feature_30] <= -0.8091434240341187) THEN 17 ELSE 18 END ELSE 19 END ELSE CASE WHEN ([ADS].[Feature_44] <= -0.30439597368240356) THEN CASE WHEN ([ADS].[Feature_46] <= 0.04784930497407913) THEN 22 ELSE CASE WHEN ([ADS].[Feature_36] <= 0.7757974863052368) THEN 24 ELSE 25 END END ELSE 26 END END END AS node_id_2 
FROM [BinaryClass_100] AS [ADS]), 
[DT_node_data_18] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Proba_0.0] AS [Proba_0.0], [Values].[LogProba_0.0] AS [LogProba_0.0], [Values].[Proba_1.0] AS [Proba_1.0], [Values].[LogProba_1.0] AS [LogProba_1.0], [Values].[Decision] AS [Decision], [Values].[DecisionProba] AS [DecisionProba] 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 3 AS depth, 2 AS parent_id, 1.0 AS [Proba_0.0], 0.0 AS [LogProba_0.0], 0.0 AS [Proba_1.0], -1.79769313486231e+308 AS [LogProba_1.0], 0 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 2 AS parent_id, 0.0 AS [Proba_0.0], -1.79769313486231e+308 AS [LogProba_0.0], 1.0 AS [Proba_1.0], 0.0 AS [LogProba_1.0], 1 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 6 AS parent_id, 1.0 AS [Proba_0.0], 0.0 AS [LogProba_0.0], 0.0 AS [Proba_1.0], -1.79769313486231e+308 AS [LogProba_1.0], 0 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 12 AS count, 5 AS depth, 8 AS parent_id, 0.0 AS [Proba_0.0], -1.79769313486231e+308 AS [LogProba_0.0], 1.0 AS [Proba_1.0], 0.0 AS [LogProba_1.0], 1 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 6 AS depth, 10 AS parent_id, 1.0 AS [Proba_0.0], 0.0 AS [LogProba_0.0], 0.0 AS [Proba_1.0], -1.79769313486231e+308 AS [LogProba_1.0], 0 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 6 AS depth, 10 AS parent_id, 0.0 AS [Proba_0.0], -1.79769313486231e+308 AS [LogProba_0.0], 1.0 AS [Proba_1.0], 0.0 AS [LogProba_1.0], 1 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 5 AS parent_id, 1.0 AS [Proba_0.0], 0.0 AS [LogProba_0.0], 0.0 AS [Proba_1.0], -1.79769313486231e+308 AS [LogProba_1.0], 0 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 17 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 16 AS parent_id, 1.0 AS [Proba_0.0], 0.0 AS [LogProba_0.0], 0.0 AS [Proba_1.0], -1.79769313486231e+308 AS [LogProba_1.0], 0 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 18 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 7 AS count, 4 AS depth, 16 AS parent_id, 0.0 AS [Proba_0.0], -1.79769313486231e+308 AS [LogProba_0.0], 1.0 AS [Proba_1.0], 0.0 AS [LogProba_1.0], 1 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 19 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 15 AS parent_id, 1.0 AS [Proba_0.0], 0.0 AS [LogProba_0.0], 0.0 AS [Proba_1.0], -1.79769313486231e+308 AS [LogProba_1.0], 0 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 22 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS count, 4 AS depth, 21 AS parent_id, 1.0 AS [Proba_0.0], 0.0 AS [LogProba_0.0], 0.0 AS [Proba_1.0], -1.79769313486231e+308 AS [LogProba_1.0], 0 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 24 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 5 AS depth, 23 AS parent_id, 0.0 AS [Proba_0.0], -1.79769313486231e+308 AS [LogProba_0.0], 1.0 AS [Proba_1.0], 0.0 AS [LogProba_1.0], 1 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 25 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 23 AS parent_id, 1.0 AS [Proba_0.0], 0.0 AS [LogProba_0.0], 0.0 AS [Proba_1.0], -1.79769313486231e+308 AS [LogProba_1.0], 0 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 26 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 12 AS count, 3 AS depth, 20 AS parent_id, 1.0 AS [Proba_0.0], 0.0 AS [LogProba_0.0], 0.0 AS [Proba_1.0], -1.79769313486231e+308 AS [LogProba_1.0], 0 AS [Decision], 1.0 AS [DecisionProba]) AS [Values]), 
[DT_Output_18] AS 
(SELECT [DT_node_lookup_18].[KEY] AS [KEY], [DT_node_lookup_18].node_id_2 AS node_id_2, [DT_node_data_18].node_id AS node_id, [DT_node_data_18].feature AS feature, [DT_node_data_18].threshold AS threshold, [DT_node_data_18].count AS count, [DT_node_data_18].depth AS depth, [DT_node_data_18].parent_id AS parent_id, [DT_node_data_18].[Proba_0.0] AS [Proba_0.0], [DT_node_data_18].[LogProba_0.0] AS [LogProba_0.0], [DT_node_data_18].[Proba_1.0] AS [Proba_1.0], [DT_node_data_18].[LogProba_1.0] AS [LogProba_1.0], [DT_node_data_18].[Decision] AS [Decision], [DT_node_data_18].[DecisionProba] AS [DecisionProba] 
FROM [DT_node_lookup_18] LEFT OUTER JOIN [DT_node_data_18] ON [DT_node_lookup_18].node_id_2 = [DT_node_data_18].node_id), 
[RF_Tree_18] AS 
(SELECT [DT_Output_18].[KEY] AS [KEY], CAST(NULL AS FLOAT) AS [Score_0], [DT_Output_18].[Proba_0.0] AS [Proba_0], [DT_Output_18].[LogProba_0.0] AS [LogProba_0], CAST(NULL AS FLOAT) AS [Score_1], [DT_Output_18].[Proba_1.0] AS [Proba_1], [DT_Output_18].[LogProba_1.0] AS [LogProba_1] 
FROM [DT_Output_18]), 
[DT_node_lookup_19] AS 
(SELECT [ADS].[KEY] AS [KEY], CASE WHEN ([ADS].[Feature_77] <= -0.019231658428907394) THEN CASE WHEN ([ADS].[Feature_73] <= 1.6738543510437012) THEN 2 ELSE CASE WHEN ([ADS].[Feature_84] <= 0.9320487380027771) THEN 4 ELSE 5 END END ELSE CASE WHEN ([ADS].[Feature_96] <= -0.9657950401306152) THEN CASE WHEN ([ADS].[Feature_72] <= 0.17573805153369904) THEN 8 ELSE 9 END ELSE CASE WHEN ([ADS].[Feature_41] <= -0.43063580989837646) THEN CASE WHEN ([ADS].[Feature_78] <= -0.07589489221572876) THEN CASE WHEN ([ADS].[Feature_91] <= 0.6930585503578186) THEN 13 ELSE 14 END ELSE 15 END ELSE 16 END END END AS node_id_2 
FROM [BinaryClass_100] AS [ADS]), 
[DT_node_data_19] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Proba_0.0] AS [Proba_0.0], [Values].[LogProba_0.0] AS [LogProba_0.0], [Values].[Proba_1.0] AS [Proba_1.0], [Values].[LogProba_1.0] AS [LogProba_1.0], [Values].[Decision] AS [Decision], [Values].[DecisionProba] AS [DecisionProba] 
FROM (SELECT 2 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 19 AS count, 2 AS depth, 1 AS parent_id, 0.0 AS [Proba_0.0], -1.79769313486231e+308 AS [LogProba_0.0], 1.0 AS [Proba_1.0], 0.0 AS [LogProba_1.0], 1 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 3 AS parent_id, 0.0 AS [Proba_0.0], -1.79769313486231e+308 AS [LogProba_0.0], 1.0 AS [Proba_1.0], 0.0 AS [LogProba_1.0], 1 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 3 AS parent_id, 1.0 AS [Proba_0.0], 0.0 AS [LogProba_0.0], 0.0 AS [Proba_1.0], -1.79769313486231e+308 AS [LogProba_1.0], 0 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 3 AS depth, 7 AS parent_id, 0.0 AS [Proba_0.0], -1.79769313486231e+308 AS [LogProba_0.0], 1.0 AS [Proba_1.0], 0.0 AS [LogProba_1.0], 1 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 3 AS depth, 7 AS parent_id, 1.0 AS [Proba_0.0], 0.0 AS [LogProba_0.0], 0.0 AS [Proba_1.0], -1.79769313486231e+308 AS [LogProba_1.0], 0 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS count, 5 AS depth, 12 AS parent_id, 0.0 AS [Proba_0.0], -1.79769313486231e+308 AS [LogProba_0.0], 1.0 AS [Proba_1.0], 0.0 AS [LogProba_1.0], 1 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 12 AS parent_id, 1.0 AS [Proba_0.0], 0.0 AS [LogProba_0.0], 0.0 AS [Proba_1.0], -1.79769313486231e+308 AS [LogProba_1.0], 0 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 15 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 4 AS depth, 11 AS parent_id, 1.0 AS [Proba_0.0], 0.0 AS [LogProba_0.0], 0.0 AS [Proba_1.0], -1.79769313486231e+308 AS [LogProba_1.0], 0 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 16 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 19 AS count, 3 AS depth, 10 AS parent_id, 1.0 AS [Proba_0.0], 0.0 AS [LogProba_0.0], 0.0 AS [Proba_1.0], -1.79769313486231e+308 AS [LogProba_1.0], 0 AS [Decision], 1.0 AS [DecisionProba]) AS [Values]), 
[DT_Output_19] AS 
(SELECT [DT_node_lookup_19].[KEY] AS [KEY], [DT_node_lookup_19].node_id_2 AS node_id_2, [DT_node_data_19].node_id AS node_id, [DT_node_data_19].feature AS feature, [DT_node_data_19].threshold AS threshold, [DT_node_data_19].count AS count, [DT_node_data_19].depth AS depth, [DT_node_data_19].parent_id AS parent_id, [DT_node_data_19].[Proba_0.0] AS [Proba_0.0], [DT_node_data_19].[LogProba_0.0] AS [LogProba_0.0], [DT_node_data_19].[Proba_1.0] AS [Proba_1.0], [DT_node_data_19].[LogProba_1.0] AS [LogProba_1.0], [DT_node_data_19].[Decision] AS [Decision], [DT_node_data_19].[DecisionProba] AS [DecisionProba] 
FROM [DT_node_lookup_19] LEFT OUTER JOIN [DT_node_data_19] ON [DT_node_lookup_19].node_id_2 = [DT_node_data_19].node_id), 
[RF_Tree_19] AS 
(SELECT [DT_Output_19].[KEY] AS [KEY], CAST(NULL AS FLOAT) AS [Score_0], [DT_Output_19].[Proba_0.0] AS [Proba_0], [DT_Output_19].[LogProba_0.0] AS [LogProba_0], CAST(NULL AS FLOAT) AS [Score_1], [DT_Output_19].[Proba_1.0] AS [Proba_1], [DT_Output_19].[LogProba_1.0] AS [LogProba_1] 
FROM [DT_Output_19]), 
[DT_node_lookup_20] AS 
(SELECT [ADS].[KEY] AS [KEY], CASE WHEN ([ADS].[Feature_1] <= -0.9391766786575317) THEN CASE WHEN ([ADS].[Feature_77] <= 0.26674386858940125) THEN 2 ELSE 3 END ELSE CASE WHEN ([ADS].[Feature_89] <= -0.8589352369308472) THEN CASE WHEN ([ADS].[Feature_88] <= -0.11098988354206085) THEN CASE WHEN ([ADS].[Feature_96] <= 0.7884620428085327) THEN 7 ELSE 8 END ELSE CASE WHEN ([ADS].[Feature_95] <= 0.0066349804401397705) THEN 10 ELSE 11 END END ELSE CASE WHEN ([ADS].[Feature_68] <= 0.6573215126991272) THEN CASE WHEN ([ADS].[Feature_5] <= 0.16058167815208435) THEN CASE WHEN ([ADS].[Feature_34] <= 0.8856582641601562) THEN 15 ELSE 16 END ELSE 17 END ELSE CASE WHEN ([ADS].[Feature_48] <= 0.743622362613678) THEN 19 ELSE 20 END END END END AS node_id_2 
FROM [BinaryClass_100] AS [ADS]), 
[DT_node_data_20] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Proba_0.0] AS [Proba_0.0], [Values].[LogProba_0.0] AS [LogProba_0.0], [Values].[Proba_1.0] AS [Proba_1.0], [Values].[LogProba_1.0] AS [LogProba_1.0], [Values].[Decision] AS [Decision], [Values].[DecisionProba] AS [DecisionProba] 
FROM (SELECT 2 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 10 AS count, 2 AS depth, 1 AS parent_id, 0.0 AS [Proba_0.0], -1.79769313486231e+308 AS [LogProba_0.0], 1.0 AS [Proba_1.0], 0.0 AS [LogProba_1.0], 1 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 2 AS depth, 1 AS parent_id, 1.0 AS [Proba_0.0], 0.0 AS [LogProba_0.0], 0.0 AS [Proba_1.0], -1.79769313486231e+308 AS [LogProba_1.0], 0 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 7 AS count, 4 AS depth, 6 AS parent_id, 0.0 AS [Proba_0.0], -1.79769313486231e+308 AS [LogProba_0.0], 1.0 AS [Proba_1.0], 0.0 AS [LogProba_1.0], 1 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 6 AS parent_id, 1.0 AS [Proba_0.0], 0.0 AS [LogProba_0.0], 0.0 AS [Proba_1.0], -1.79769313486231e+308 AS [LogProba_1.0], 0 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 4 AS depth, 9 AS parent_id, 1.0 AS [Proba_0.0], 0.0 AS [LogProba_0.0], 0.0 AS [Proba_1.0], -1.79769313486231e+308 AS [LogProba_1.0], 0 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 4 AS depth, 9 AS parent_id, 0.0 AS [Proba_0.0], -1.79769313486231e+308 AS [LogProba_0.0], 1.0 AS [Proba_1.0], 0.0 AS [LogProba_1.0], 1 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 15 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS count, 5 AS depth, 14 AS parent_id, 0.0 AS [Proba_0.0], -1.79769313486231e+308 AS [LogProba_0.0], 1.0 AS [Proba_1.0], 0.0 AS [LogProba_1.0], 1 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 16 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 6 AS count, 5 AS depth, 14 AS parent_id, 1.0 AS [Proba_0.0], 0.0 AS [LogProba_0.0], 0.0 AS [Proba_1.0], -1.79769313486231e+308 AS [LogProba_1.0], 0 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 17 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 14 AS count, 4 AS depth, 13 AS parent_id, 1.0 AS [Proba_0.0], 0.0 AS [LogProba_0.0], 0.0 AS [Proba_1.0], -1.79769313486231e+308 AS [LogProba_1.0], 0 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 19 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS count, 4 AS depth, 18 AS parent_id, 0.0 AS [Proba_0.0], -1.79769313486231e+308 AS [LogProba_0.0], 1.0 AS [Proba_1.0], 0.0 AS [LogProba_1.0], 1 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 20 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 4 AS depth, 18 AS parent_id, 1.0 AS [Proba_0.0], 0.0 AS [LogProba_0.0], 0.0 AS [Proba_1.0], -1.79769313486231e+308 AS [LogProba_1.0], 0 AS [Decision], 1.0 AS [DecisionProba]) AS [Values]), 
[DT_Output_20] AS 
(SELECT [DT_node_lookup_20].[KEY] AS [KEY], [DT_node_lookup_20].node_id_2 AS node_id_2, [DT_node_data_20].node_id AS node_id, [DT_node_data_20].feature AS feature, [DT_node_data_20].threshold AS threshold, [DT_node_data_20].count AS count, [DT_node_data_20].depth AS depth, [DT_node_data_20].parent_id AS parent_id, [DT_node_data_20].[Proba_0.0] AS [Proba_0.0], [DT_node_data_20].[LogProba_0.0] AS [LogProba_0.0], [DT_node_data_20].[Proba_1.0] AS [Proba_1.0], [DT_node_data_20].[LogProba_1.0] AS [LogProba_1.0], [DT_node_data_20].[Decision] AS [Decision], [DT_node_data_20].[DecisionProba] AS [DecisionProba] 
FROM [DT_node_lookup_20] LEFT OUTER JOIN [DT_node_data_20] ON [DT_node_lookup_20].node_id_2 = [DT_node_data_20].node_id), 
[RF_Tree_20] AS 
(SELECT [DT_Output_20].[KEY] AS [KEY], CAST(NULL AS FLOAT) AS [Score_0], [DT_Output_20].[Proba_0.0] AS [Proba_0], [DT_Output_20].[LogProba_0.0] AS [LogProba_0], CAST(NULL AS FLOAT) AS [Score_1], [DT_Output_20].[Proba_1.0] AS [Proba_1], [DT_Output_20].[LogProba_1.0] AS [LogProba_1] 
FROM [DT_Output_20]), 
[DT_node_lookup_21] AS 
(SELECT [ADS].[KEY] AS [KEY], CASE WHEN ([ADS].[Feature_20] <= 0.7788062691688538) THEN CASE WHEN ([ADS].[Feature_91] <= -1.4207947254180908) THEN 2 ELSE CASE WHEN ([ADS].[Feature_34] <= -0.738379180431366) THEN CASE WHEN ([ADS].[Feature_86] <= -0.04757136106491089) THEN 5 ELSE 6 END ELSE CASE WHEN ([ADS].[Feature_49] <= -0.3123045563697815) THEN CASE WHEN ([ADS].[Feature_93] <= -0.11064603924751282) THEN 9 ELSE CASE WHEN ([ADS].[Feature_20] <= -0.5856777429580688) THEN 11 ELSE 12 END END ELSE CASE WHEN ([ADS].[Feature_44] <= -1.2102556228637695) THEN CASE WHEN ([ADS].[Feature_78] <= 0.548689067363739) THEN 15 ELSE 16 END ELSE 17 END END END END ELSE CASE WHEN ([ADS].[Feature_95] <= -0.20617768168449402) THEN 19 ELSE CASE WHEN ([ADS].[Feature_2] <= 0.5457930564880371) THEN 21 ELSE 22 END END END AS node_id_2 
FROM [BinaryClass_100] AS [ADS]), 
[DT_node_data_21] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Proba_0.0] AS [Proba_0.0], [Values].[LogProba_0.0] AS [LogProba_0.0], [Values].[Proba_1.0] AS [Proba_1.0], [Values].[LogProba_1.0] AS [LogProba_1.0], [Values].[Decision] AS [Decision], [Values].[DecisionProba] AS [DecisionProba] 
FROM (SELECT 2 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 2 AS depth, 1 AS parent_id, 0.0 AS [Proba_0.0], -1.79769313486231e+308 AS [LogProba_0.0], 1.0 AS [Proba_1.0], 0.0 AS [LogProba_1.0], 1 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 4 AS parent_id, 1.0 AS [Proba_0.0], 0.0 AS [LogProba_0.0], 0.0 AS [Proba_1.0], -1.79769313486231e+308 AS [LogProba_1.0], 0 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 4 AS depth, 4 AS parent_id, 0.0 AS [Proba_0.0], -1.79769313486231e+308 AS [LogProba_0.0], 1.0 AS [Proba_1.0], 0.0 AS [LogProba_1.0], 1 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS count, 5 AS depth, 8 AS parent_id, 0.0 AS [Proba_0.0], -1.79769313486231e+308 AS [LogProba_0.0], 1.0 AS [Proba_1.0], 0.0 AS [LogProba_1.0], 1 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 6 AS depth, 10 AS parent_id, 0.0 AS [Proba_0.0], -1.79769313486231e+308 AS [LogProba_0.0], 1.0 AS [Proba_1.0], 0.0 AS [LogProba_1.0], 1 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 6 AS count, 6 AS depth, 10 AS parent_id, 1.0 AS [Proba_0.0], 0.0 AS [LogProba_0.0], 0.0 AS [Proba_1.0], -1.79769313486231e+308 AS [LogProba_1.0], 0 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 15 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 6 AS depth, 14 AS parent_id, 0.0 AS [Proba_0.0], -1.79769313486231e+308 AS [LogProba_0.0], 1.0 AS [Proba_1.0], 0.0 AS [LogProba_1.0], 1 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 16 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 6 AS depth, 14 AS parent_id, 1.0 AS [Proba_0.0], 0.0 AS [LogProba_0.0], 0.0 AS [Proba_1.0], -1.79769313486231e+308 AS [LogProba_1.0], 0 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 17 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 19 AS count, 5 AS depth, 13 AS parent_id, 1.0 AS [Proba_0.0], 0.0 AS [LogProba_0.0], 0.0 AS [Proba_1.0], -1.79769313486231e+308 AS [LogProba_1.0], 0 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 19 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 6 AS count, 2 AS depth, 18 AS parent_id, 0.0 AS [Proba_0.0], -1.79769313486231e+308 AS [LogProba_0.0], 1.0 AS [Proba_1.0], 0.0 AS [LogProba_1.0], 1 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 21 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 3 AS depth, 20 AS parent_id, 1.0 AS [Proba_0.0], 0.0 AS [LogProba_0.0], 0.0 AS [Proba_1.0], -1.79769313486231e+308 AS [LogProba_1.0], 0 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 22 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 20 AS parent_id, 0.0 AS [Proba_0.0], -1.79769313486231e+308 AS [LogProba_0.0], 1.0 AS [Proba_1.0], 0.0 AS [LogProba_1.0], 1 AS [Decision], 1.0 AS [DecisionProba]) AS [Values]), 
[DT_Output_21] AS 
(SELECT [DT_node_lookup_21].[KEY] AS [KEY], [DT_node_lookup_21].node_id_2 AS node_id_2, [DT_node_data_21].node_id AS node_id, [DT_node_data_21].feature AS feature, [DT_node_data_21].threshold AS threshold, [DT_node_data_21].count AS count, [DT_node_data_21].depth AS depth, [DT_node_data_21].parent_id AS parent_id, [DT_node_data_21].[Proba_0.0] AS [Proba_0.0], [DT_node_data_21].[LogProba_0.0] AS [LogProba_0.0], [DT_node_data_21].[Proba_1.0] AS [Proba_1.0], [DT_node_data_21].[LogProba_1.0] AS [LogProba_1.0], [DT_node_data_21].[Decision] AS [Decision], [DT_node_data_21].[DecisionProba] AS [DecisionProba] 
FROM [DT_node_lookup_21] LEFT OUTER JOIN [DT_node_data_21] ON [DT_node_lookup_21].node_id_2 = [DT_node_data_21].node_id), 
[RF_Tree_21] AS 
(SELECT [DT_Output_21].[KEY] AS [KEY], CAST(NULL AS FLOAT) AS [Score_0], [DT_Output_21].[Proba_0.0] AS [Proba_0], [DT_Output_21].[LogProba_0.0] AS [LogProba_0], CAST(NULL AS FLOAT) AS [Score_1], [DT_Output_21].[Proba_1.0] AS [Proba_1], [DT_Output_21].[LogProba_1.0] AS [LogProba_1] 
FROM [DT_Output_21]), 
[DT_node_lookup_22] AS 
(SELECT [ADS].[KEY] AS [KEY], CASE WHEN ([ADS].[Feature_49] <= 0.4842150807380676) THEN CASE WHEN ([ADS].[Feature_99] <= 0.8972952961921692) THEN CASE WHEN ([ADS].[Feature_49] <= -0.41309642791748047) THEN CASE WHEN ([ADS].[Feature_20] <= -1.205277442932129) THEN 4 ELSE CASE WHEN ([ADS].[Feature_49] <= -1.50974440574646) THEN 6 ELSE CASE WHEN ([ADS].[Feature_10] <= 0.19931566715240479) THEN 8 ELSE CASE WHEN ([ADS].[Feature_57] <= -0.46133798360824585) THEN 10 ELSE 11 END END END END ELSE CASE WHEN ([ADS].[Feature_32] <= 0.9103164672851562) THEN 13 ELSE 14 END END ELSE 15 END ELSE CASE WHEN ([ADS].[Feature_77] <= -0.2877371311187744) THEN 17 ELSE CASE WHEN ([ADS].[Feature_75] <= 1.578505277633667) THEN 19 ELSE 20 END END END AS node_id_2 
FROM [BinaryClass_100] AS [ADS]), 
[DT_node_data_22] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Proba_0.0] AS [Proba_0.0], [Values].[LogProba_0.0] AS [LogProba_0.0], [Values].[Proba_1.0] AS [Proba_1.0], [Values].[LogProba_1.0] AS [LogProba_1.0], [Values].[Decision] AS [Decision], [Values].[DecisionProba] AS [DecisionProba] 
FROM (SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 4 AS depth, 3 AS parent_id, 1.0 AS [Proba_0.0], 0.0 AS [LogProba_0.0], 0.0 AS [Proba_1.0], -1.79769313486231e+308 AS [LogProba_1.0], 0 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS count, 5 AS depth, 5 AS parent_id, 0.0 AS [Proba_0.0], -1.79769313486231e+308 AS [LogProba_0.0], 1.0 AS [Proba_1.0], 0.0 AS [LogProba_1.0], 1 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS count, 6 AS depth, 7 AS parent_id, 1.0 AS [Proba_0.0], 0.0 AS [LogProba_0.0], 0.0 AS [Proba_1.0], -1.79769313486231e+308 AS [LogProba_1.0], 0 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 7 AS depth, 9 AS parent_id, 1.0 AS [Proba_0.0], 0.0 AS [LogProba_0.0], 0.0 AS [Proba_1.0], -1.79769313486231e+308 AS [LogProba_1.0], 0 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 7 AS depth, 9 AS parent_id, 0.0 AS [Proba_0.0], -1.79769313486231e+308 AS [LogProba_0.0], 1.0 AS [Proba_1.0], 0.0 AS [LogProba_1.0], 1 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 11 AS count, 4 AS depth, 12 AS parent_id, 0.0 AS [Proba_0.0], -1.79769313486231e+308 AS [LogProba_0.0], 1.0 AS [Proba_1.0], 0.0 AS [LogProba_1.0], 1 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 12 AS parent_id, 1.0 AS [Proba_0.0], 0.0 AS [LogProba_0.0], 0.0 AS [Proba_1.0], -1.79769313486231e+308 AS [LogProba_1.0], 0 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 15 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS count, 2 AS depth, 1 AS parent_id, 1.0 AS [Proba_0.0], 0.0 AS [LogProba_0.0], 0.0 AS [Proba_1.0], -1.79769313486231e+308 AS [LogProba_1.0], 0 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 17 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS count, 2 AS depth, 16 AS parent_id, 0.0 AS [Proba_0.0], -1.79769313486231e+308 AS [LogProba_0.0], 1.0 AS [Proba_1.0], 0.0 AS [LogProba_1.0], 1 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 19 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 14 AS count, 3 AS depth, 18 AS parent_id, 1.0 AS [Proba_0.0], 0.0 AS [LogProba_0.0], 0.0 AS [Proba_1.0], -1.79769313486231e+308 AS [LogProba_1.0], 0 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 20 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 18 AS parent_id, 0.0 AS [Proba_0.0], -1.79769313486231e+308 AS [LogProba_0.0], 1.0 AS [Proba_1.0], 0.0 AS [LogProba_1.0], 1 AS [Decision], 1.0 AS [DecisionProba]) AS [Values]), 
[DT_Output_22] AS 
(SELECT [DT_node_lookup_22].[KEY] AS [KEY], [DT_node_lookup_22].node_id_2 AS node_id_2, [DT_node_data_22].node_id AS node_id, [DT_node_data_22].feature AS feature, [DT_node_data_22].threshold AS threshold, [DT_node_data_22].count AS count, [DT_node_data_22].depth AS depth, [DT_node_data_22].parent_id AS parent_id, [DT_node_data_22].[Proba_0.0] AS [Proba_0.0], [DT_node_data_22].[LogProba_0.0] AS [LogProba_0.0], [DT_node_data_22].[Proba_1.0] AS [Proba_1.0], [DT_node_data_22].[LogProba_1.0] AS [LogProba_1.0], [DT_node_data_22].[Decision] AS [Decision], [DT_node_data_22].[DecisionProba] AS [DecisionProba] 
FROM [DT_node_lookup_22] LEFT OUTER JOIN [DT_node_data_22] ON [DT_node_lookup_22].node_id_2 = [DT_node_data_22].node_id), 
[RF_Tree_22] AS 
(SELECT [DT_Output_22].[KEY] AS [KEY], CAST(NULL AS FLOAT) AS [Score_0], [DT_Output_22].[Proba_0.0] AS [Proba_0], [DT_Output_22].[LogProba_0.0] AS [LogProba_0], CAST(NULL AS FLOAT) AS [Score_1], [DT_Output_22].[Proba_1.0] AS [Proba_1], [DT_Output_22].[LogProba_1.0] AS [LogProba_1] 
FROM [DT_Output_22]), 
[DT_node_lookup_23] AS 
(SELECT [ADS].[KEY] AS [KEY], CASE WHEN ([ADS].[Feature_57] <= -0.0739414244890213) THEN CASE WHEN ([ADS].[Feature_75] <= 1.9269392490386963) THEN CASE WHEN ([ADS].[Feature_48] <= -2.0202879905700684) THEN 3 ELSE CASE WHEN ([ADS].[Feature_35] <= -1.1341595649719238) THEN 5 ELSE CASE WHEN ([ADS].[Feature_58] <= 0.9195845127105713) THEN CASE WHEN ([ADS].[Feature_65] <= 1.6311273574829102) THEN 8 ELSE CASE WHEN ([ADS].[Feature_39] <= 0.6516607999801636) THEN 10 ELSE 11 END END ELSE CASE WHEN ([ADS].[Feature_46] <= 0.2866309583187103) THEN 13 ELSE 14 END END END END ELSE CASE WHEN ([ADS].[Feature_33] <= 0.500801682472229) THEN 16 ELSE 17 END END ELSE CASE WHEN ([ADS].[Feature_6] <= -1.211012840270996) THEN CASE WHEN ([ADS].[Feature_8] <= 0.3755263686180115) THEN 20 ELSE 21 END ELSE 22 END END AS node_id_2 
FROM [BinaryClass_100] AS [ADS]), 
[DT_node_data_23] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Proba_0.0] AS [Proba_0.0], [Values].[LogProba_0.0] AS [LogProba_0.0], [Values].[Proba_1.0] AS [Proba_1.0], [Values].[LogProba_1.0] AS [LogProba_1.0], [Values].[Decision] AS [Decision], [Values].[DecisionProba] AS [DecisionProba] 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 2 AS parent_id, 0.0 AS [Proba_0.0], -1.79769313486231e+308 AS [LogProba_0.0], 1.0 AS [Proba_1.0], 0.0 AS [LogProba_1.0], 1 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 4 AS parent_id, 0.0 AS [Proba_0.0], -1.79769313486231e+308 AS [LogProba_0.0], 1.0 AS [Proba_1.0], 0.0 AS [LogProba_1.0], 1 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 26 AS count, 6 AS depth, 7 AS parent_id, 1.0 AS [Proba_0.0], 0.0 AS [LogProba_0.0], 0.0 AS [Proba_1.0], -1.79769313486231e+308 AS [LogProba_1.0], 0 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 7 AS depth, 9 AS parent_id, 0.0 AS [Proba_0.0], -1.79769313486231e+308 AS [LogProba_0.0], 1.0 AS [Proba_1.0], 0.0 AS [LogProba_1.0], 1 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 7 AS depth, 9 AS parent_id, 1.0 AS [Proba_0.0], 0.0 AS [LogProba_0.0], 0.0 AS [Proba_1.0], -1.79769313486231e+308 AS [LogProba_1.0], 0 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 6 AS depth, 12 AS parent_id, 1.0 AS [Proba_0.0], 0.0 AS [LogProba_0.0], 0.0 AS [Proba_1.0], -1.79769313486231e+308 AS [LogProba_1.0], 0 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 6 AS depth, 12 AS parent_id, 0.0 AS [Proba_0.0], -1.79769313486231e+308 AS [LogProba_0.0], 1.0 AS [Proba_1.0], 0.0 AS [LogProba_1.0], 1 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 16 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 15 AS parent_id, 0.0 AS [Proba_0.0], -1.79769313486231e+308 AS [LogProba_0.0], 1.0 AS [Proba_1.0], 0.0 AS [LogProba_1.0], 1 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 17 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 15 AS parent_id, 1.0 AS [Proba_0.0], 0.0 AS [LogProba_0.0], 0.0 AS [Proba_1.0], -1.79769313486231e+308 AS [LogProba_1.0], 0 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 20 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 19 AS parent_id, 1.0 AS [Proba_0.0], 0.0 AS [LogProba_0.0], 0.0 AS [Proba_1.0], -1.79769313486231e+308 AS [LogProba_1.0], 0 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 21 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 19 AS parent_id, 0.0 AS [Proba_0.0], -1.79769313486231e+308 AS [LogProba_0.0], 1.0 AS [Proba_1.0], 0.0 AS [LogProba_1.0], 1 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 22 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 17 AS count, 2 AS depth, 18 AS parent_id, 0.0 AS [Proba_0.0], -1.79769313486231e+308 AS [LogProba_0.0], 1.0 AS [Proba_1.0], 0.0 AS [LogProba_1.0], 1 AS [Decision], 1.0 AS [DecisionProba]) AS [Values]), 
[DT_Output_23] AS 
(SELECT [DT_node_lookup_23].[KEY] AS [KEY], [DT_node_lookup_23].node_id_2 AS node_id_2, [DT_node_data_23].node_id AS node_id, [DT_node_data_23].feature AS feature, [DT_node_data_23].threshold AS threshold, [DT_node_data_23].count AS count, [DT_node_data_23].depth AS depth, [DT_node_data_23].parent_id AS parent_id, [DT_node_data_23].[Proba_0.0] AS [Proba_0.0], [DT_node_data_23].[LogProba_0.0] AS [LogProba_0.0], [DT_node_data_23].[Proba_1.0] AS [Proba_1.0], [DT_node_data_23].[LogProba_1.0] AS [LogProba_1.0], [DT_node_data_23].[Decision] AS [Decision], [DT_node_data_23].[DecisionProba] AS [DecisionProba] 
FROM [DT_node_lookup_23] LEFT OUTER JOIN [DT_node_data_23] ON [DT_node_lookup_23].node_id_2 = [DT_node_data_23].node_id), 
[RF_Tree_23] AS 
(SELECT [DT_Output_23].[KEY] AS [KEY], CAST(NULL AS FLOAT) AS [Score_0], [DT_Output_23].[Proba_0.0] AS [Proba_0], [DT_Output_23].[LogProba_0.0] AS [LogProba_0], CAST(NULL AS FLOAT) AS [Score_1], [DT_Output_23].[Proba_1.0] AS [Proba_1], [DT_Output_23].[LogProba_1.0] AS [LogProba_1] 
FROM [DT_Output_23]), 
[DT_node_lookup_24] AS 
(SELECT [ADS].[KEY] AS [KEY], CASE WHEN ([ADS].[Feature_57] <= -0.20116814970970154) THEN CASE WHEN ([ADS].[Feature_9] <= 1.6648175716400146) THEN CASE WHEN ([ADS].[Feature_71] <= -2.182079315185547) THEN 3 ELSE CASE WHEN ([ADS].[Feature_84] <= -1.012292504310608) THEN CASE WHEN ([ADS].[Feature_38] <= -0.6882236003875732) THEN 6 ELSE 7 END ELSE 8 END END ELSE 9 END ELSE CASE WHEN ([ADS].[Feature_22] <= -1.3323249816894531) THEN 11 ELSE CASE WHEN ([ADS].[Feature_49] <= 1.089005947113037) THEN 13 ELSE CASE WHEN ([ADS].[Feature_22] <= 1.0250794887542725) THEN 15 ELSE 16 END END END END AS node_id_2 
FROM [BinaryClass_100] AS [ADS]), 
[DT_node_data_24] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Proba_0.0] AS [Proba_0.0], [Values].[LogProba_0.0] AS [LogProba_0.0], [Values].[Proba_1.0] AS [Proba_1.0], [Values].[LogProba_1.0] AS [LogProba_1.0], [Values].[Decision] AS [Decision], [Values].[DecisionProba] AS [DecisionProba] 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 2 AS parent_id, 0.0 AS [Proba_0.0], -1.79769313486231e+308 AS [LogProba_0.0], 1.0 AS [Proba_1.0], 0.0 AS [LogProba_1.0], 1 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 5 AS parent_id, 1.0 AS [Proba_0.0], 0.0 AS [LogProba_0.0], 0.0 AS [Proba_1.0], -1.79769313486231e+308 AS [LogProba_1.0], 0 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 5 AS parent_id, 0.0 AS [Proba_0.0], -1.79769313486231e+308 AS [LogProba_0.0], 1.0 AS [Proba_1.0], 0.0 AS [LogProba_1.0], 1 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 21 AS count, 4 AS depth, 4 AS parent_id, 1.0 AS [Proba_0.0], 0.0 AS [LogProba_0.0], 0.0 AS [Proba_1.0], -1.79769313486231e+308 AS [LogProba_1.0], 0 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 2 AS depth, 1 AS parent_id, 0.0 AS [Proba_0.0], -1.79769313486231e+308 AS [LogProba_0.0], 1.0 AS [Proba_1.0], 0.0 AS [LogProba_1.0], 1 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 2 AS depth, 10 AS parent_id, 1.0 AS [Proba_0.0], 0.0 AS [LogProba_0.0], 0.0 AS [Proba_1.0], -1.79769313486231e+308 AS [LogProba_1.0], 0 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 20 AS count, 3 AS depth, 12 AS parent_id, 0.0 AS [Proba_0.0], -1.79769313486231e+308 AS [LogProba_0.0], 1.0 AS [Proba_1.0], 0.0 AS [LogProba_1.0], 1 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 15 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 4 AS depth, 14 AS parent_id, 0.0 AS [Proba_0.0], -1.79769313486231e+308 AS [LogProba_0.0], 1.0 AS [Proba_1.0], 0.0 AS [LogProba_1.0], 1 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 16 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 14 AS parent_id, 1.0 AS [Proba_0.0], 0.0 AS [LogProba_0.0], 0.0 AS [Proba_1.0], -1.79769313486231e+308 AS [LogProba_1.0], 0 AS [Decision], 1.0 AS [DecisionProba]) AS [Values]), 
[DT_Output_24] AS 
(SELECT [DT_node_lookup_24].[KEY] AS [KEY], [DT_node_lookup_24].node_id_2 AS node_id_2, [DT_node_data_24].node_id AS node_id, [DT_node_data_24].feature AS feature, [DT_node_data_24].threshold AS threshold, [DT_node_data_24].count AS count, [DT_node_data_24].depth AS depth, [DT_node_data_24].parent_id AS parent_id, [DT_node_data_24].[Proba_0.0] AS [Proba_0.0], [DT_node_data_24].[LogProba_0.0] AS [LogProba_0.0], [DT_node_data_24].[Proba_1.0] AS [Proba_1.0], [DT_node_data_24].[LogProba_1.0] AS [LogProba_1.0], [DT_node_data_24].[Decision] AS [Decision], [DT_node_data_24].[DecisionProba] AS [DecisionProba] 
FROM [DT_node_lookup_24] LEFT OUTER JOIN [DT_node_data_24] ON [DT_node_lookup_24].node_id_2 = [DT_node_data_24].node_id), 
[RF_Tree_24] AS 
(SELECT [DT_Output_24].[KEY] AS [KEY], CAST(NULL AS FLOAT) AS [Score_0], [DT_Output_24].[Proba_0.0] AS [Proba_0], [DT_Output_24].[LogProba_0.0] AS [LogProba_0], CAST(NULL AS FLOAT) AS [Score_1], [DT_Output_24].[Proba_1.0] AS [Proba_1], [DT_Output_24].[LogProba_1.0] AS [LogProba_1] 
FROM [DT_Output_24]), 
[DT_node_lookup_25] AS 
(SELECT [ADS].[KEY] AS [KEY], CASE WHEN ([ADS].[Feature_4] <= -0.3935615122318268) THEN 1 ELSE CASE WHEN ([ADS].[Feature_51] <= 1.7948462963104248) THEN CASE WHEN ([ADS].[Feature_93] <= -1.240894079208374) THEN 4 ELSE CASE WHEN ([ADS].[Feature_76] <= 1.535130262374878) THEN CASE WHEN ([ADS].[Feature_74] <= 1.649545431137085) THEN CASE WHEN ([ADS].[Feature_17] <= 1.3907121419906616) THEN 8 ELSE CASE WHEN ([ADS].[Feature_2] <= -0.8628718852996826) THEN 10 ELSE 11 END END ELSE 12 END ELSE CASE WHEN ([ADS].[Feature_52] <= -0.34790679812431335) THEN 14 ELSE 15 END END END ELSE 16 END END AS node_id_2 
FROM [BinaryClass_100] AS [ADS]), 
[DT_node_data_25] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Proba_0.0] AS [Proba_0.0], [Values].[LogProba_0.0] AS [LogProba_0.0], [Values].[Proba_1.0] AS [Proba_1.0], [Values].[LogProba_1.0] AS [LogProba_1.0], [Values].[Decision] AS [Decision], [Values].[DecisionProba] AS [DecisionProba] 
FROM (SELECT 1 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 18 AS count, 1 AS depth, 0 AS parent_id, 0.0 AS [Proba_0.0], -1.79769313486231e+308 AS [LogProba_0.0], 1.0 AS [Proba_1.0], 0.0 AS [LogProba_1.0], 1 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 3 AS depth, 3 AS parent_id, 0.0 AS [Proba_0.0], -1.79769313486231e+308 AS [LogProba_0.0], 1.0 AS [Proba_1.0], 0.0 AS [LogProba_1.0], 1 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 23 AS count, 6 AS depth, 7 AS parent_id, 1.0 AS [Proba_0.0], 0.0 AS [LogProba_0.0], 0.0 AS [Proba_1.0], -1.79769313486231e+308 AS [LogProba_1.0], 0 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 7 AS depth, 9 AS parent_id, 0.0 AS [Proba_0.0], -1.79769313486231e+308 AS [LogProba_0.0], 1.0 AS [Proba_1.0], 0.0 AS [LogProba_1.0], 1 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 7 AS depth, 9 AS parent_id, 1.0 AS [Proba_0.0], 0.0 AS [LogProba_0.0], 0.0 AS [Proba_1.0], -1.79769313486231e+308 AS [LogProba_1.0], 0 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 6 AS parent_id, 0.0 AS [Proba_0.0], -1.79769313486231e+308 AS [LogProba_0.0], 1.0 AS [Proba_1.0], 0.0 AS [LogProba_1.0], 1 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 13 AS parent_id, 0.0 AS [Proba_0.0], -1.79769313486231e+308 AS [LogProba_0.0], 1.0 AS [Proba_1.0], 0.0 AS [LogProba_1.0], 1 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 15 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 13 AS parent_id, 1.0 AS [Proba_0.0], 0.0 AS [LogProba_0.0], 0.0 AS [Proba_1.0], -1.79769313486231e+308 AS [LogProba_1.0], 0 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 16 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 2 AS depth, 2 AS parent_id, 0.0 AS [Proba_0.0], -1.79769313486231e+308 AS [LogProba_0.0], 1.0 AS [Proba_1.0], 0.0 AS [LogProba_1.0], 1 AS [Decision], 1.0 AS [DecisionProba]) AS [Values]), 
[DT_Output_25] AS 
(SELECT [DT_node_lookup_25].[KEY] AS [KEY], [DT_node_lookup_25].node_id_2 AS node_id_2, [DT_node_data_25].node_id AS node_id, [DT_node_data_25].feature AS feature, [DT_node_data_25].threshold AS threshold, [DT_node_data_25].count AS count, [DT_node_data_25].depth AS depth, [DT_node_data_25].parent_id AS parent_id, [DT_node_data_25].[Proba_0.0] AS [Proba_0.0], [DT_node_data_25].[LogProba_0.0] AS [LogProba_0.0], [DT_node_data_25].[Proba_1.0] AS [Proba_1.0], [DT_node_data_25].[LogProba_1.0] AS [LogProba_1.0], [DT_node_data_25].[Decision] AS [Decision], [DT_node_data_25].[DecisionProba] AS [DecisionProba] 
FROM [DT_node_lookup_25] LEFT OUTER JOIN [DT_node_data_25] ON [DT_node_lookup_25].node_id_2 = [DT_node_data_25].node_id), 
[RF_Tree_25] AS 
(SELECT [DT_Output_25].[KEY] AS [KEY], CAST(NULL AS FLOAT) AS [Score_0], [DT_Output_25].[Proba_0.0] AS [Proba_0], [DT_Output_25].[LogProba_0.0] AS [LogProba_0], CAST(NULL AS FLOAT) AS [Score_1], [DT_Output_25].[Proba_1.0] AS [Proba_1], [DT_Output_25].[LogProba_1.0] AS [LogProba_1] 
FROM [DT_Output_25]), 
[DT_node_lookup_26] AS 
(SELECT [ADS].[KEY] AS [KEY], CASE WHEN ([ADS].[Feature_23] <= 0.26588907837867737) THEN CASE WHEN ([ADS].[Feature_17] <= 0.3212962746620178) THEN CASE WHEN ([ADS].[Feature_77] <= -0.2901453673839569) THEN 3 ELSE CASE WHEN ([ADS].[Feature_18] <= 2.391359567642212) THEN 5 ELSE 6 END END ELSE CASE WHEN ([ADS].[Feature_51] <= 0.6608050465583801) THEN 8 ELSE 9 END END ELSE CASE WHEN ([ADS].[Feature_4] <= 0.9446976184844971) THEN CASE WHEN ([ADS].[Feature_78] <= 1.1902673244476318) THEN CASE WHEN ([ADS].[Feature_52] <= 2.0980091094970703) THEN CASE WHEN ([ADS].[Feature_24] <= 1.4148316383361816) THEN 14 ELSE 15 END ELSE 16 END ELSE CASE WHEN ([ADS].[Feature_37] <= 1.0081037282943726) THEN 18 ELSE 19 END END ELSE 20 END END AS node_id_2 
FROM [BinaryClass_100] AS [ADS]), 
[DT_node_data_26] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Proba_0.0] AS [Proba_0.0], [Values].[LogProba_0.0] AS [LogProba_0.0], [Values].[Proba_1.0] AS [Proba_1.0], [Values].[LogProba_1.0] AS [LogProba_1.0], [Values].[Decision] AS [Decision], [Values].[DecisionProba] AS [DecisionProba] 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 3 AS depth, 2 AS parent_id, 0.0 AS [Proba_0.0], -1.79769313486231e+308 AS [LogProba_0.0], 1.0 AS [Proba_1.0], 0.0 AS [LogProba_1.0], 1 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 13 AS count, 4 AS depth, 4 AS parent_id, 1.0 AS [Proba_0.0], 0.0 AS [LogProba_0.0], 0.0 AS [Proba_1.0], -1.79769313486231e+308 AS [LogProba_1.0], 0 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 4 AS parent_id, 0.0 AS [Proba_0.0], -1.79769313486231e+308 AS [LogProba_0.0], 1.0 AS [Proba_1.0], 0.0 AS [LogProba_1.0], 1 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS count, 3 AS depth, 7 AS parent_id, 0.0 AS [Proba_0.0], -1.79769313486231e+308 AS [LogProba_0.0], 1.0 AS [Proba_1.0], 0.0 AS [LogProba_1.0], 1 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 7 AS parent_id, 1.0 AS [Proba_0.0], 0.0 AS [LogProba_0.0], 0.0 AS [Proba_1.0], -1.79769313486231e+308 AS [LogProba_1.0], 0 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 16 AS count, 5 AS depth, 13 AS parent_id, 0.0 AS [Proba_0.0], -1.79769313486231e+308 AS [LogProba_0.0], 1.0 AS [Proba_1.0], 0.0 AS [LogProba_1.0], 1 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 15 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 13 AS parent_id, 1.0 AS [Proba_0.0], 0.0 AS [LogProba_0.0], 0.0 AS [Proba_1.0], -1.79769313486231e+308 AS [LogProba_1.0], 0 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 16 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 12 AS parent_id, 1.0 AS [Proba_0.0], 0.0 AS [LogProba_0.0], 0.0 AS [Proba_1.0], -1.79769313486231e+308 AS [LogProba_1.0], 0 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 18 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 4 AS depth, 17 AS parent_id, 1.0 AS [Proba_0.0], 0.0 AS [LogProba_0.0], 0.0 AS [Proba_1.0], -1.79769313486231e+308 AS [LogProba_1.0], 0 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 19 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 17 AS parent_id, 0.0 AS [Proba_0.0], -1.79769313486231e+308 AS [LogProba_0.0], 1.0 AS [Proba_1.0], 0.0 AS [LogProba_1.0], 1 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 20 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 7 AS count, 2 AS depth, 10 AS parent_id, 1.0 AS [Proba_0.0], 0.0 AS [LogProba_0.0], 0.0 AS [Proba_1.0], -1.79769313486231e+308 AS [LogProba_1.0], 0 AS [Decision], 1.0 AS [DecisionProba]) AS [Values]), 
[DT_Output_26] AS 
(SELECT [DT_node_lookup_26].[KEY] AS [KEY], [DT_node_lookup_26].node_id_2 AS node_id_2, [DT_node_data_26].node_id AS node_id, [DT_node_data_26].feature AS feature, [DT_node_data_26].threshold AS threshold, [DT_node_data_26].count AS count, [DT_node_data_26].depth AS depth, [DT_node_data_26].parent_id AS parent_id, [DT_node_data_26].[Proba_0.0] AS [Proba_0.0], [DT_node_data_26].[LogProba_0.0] AS [LogProba_0.0], [DT_node_data_26].[Proba_1.0] AS [Proba_1.0], [DT_node_data_26].[LogProba_1.0] AS [LogProba_1.0], [DT_node_data_26].[Decision] AS [Decision], [DT_node_data_26].[DecisionProba] AS [DecisionProba] 
FROM [DT_node_lookup_26] LEFT OUTER JOIN [DT_node_data_26] ON [DT_node_lookup_26].node_id_2 = [DT_node_data_26].node_id), 
[RF_Tree_26] AS 
(SELECT [DT_Output_26].[KEY] AS [KEY], CAST(NULL AS FLOAT) AS [Score_0], [DT_Output_26].[Proba_0.0] AS [Proba_0], [DT_Output_26].[LogProba_0.0] AS [LogProba_0], CAST(NULL AS FLOAT) AS [Score_1], [DT_Output_26].[Proba_1.0] AS [Proba_1], [DT_Output_26].[LogProba_1.0] AS [LogProba_1] 
FROM [DT_Output_26]), 
[DT_node_lookup_27] AS 
(SELECT [ADS].[KEY] AS [KEY], CASE WHEN ([ADS].[Feature_45] <= 0.8726553320884705) THEN CASE WHEN ([ADS].[Feature_41] <= -0.441599577665329) THEN CASE WHEN ([ADS].[Feature_68] <= -2.025726795196533) THEN 3 ELSE 4 END ELSE CASE WHEN ([ADS].[Feature_78] <= -0.139810711145401) THEN CASE WHEN ([ADS].[Feature_60] <= -0.2968563437461853) THEN 7 ELSE 8 END ELSE CASE WHEN ([ADS].[Feature_82] <= 0.0688183456659317) THEN CASE WHEN ([ADS].[Feature_14] <= -1.1680083274841309) THEN CASE WHEN ([ADS].[Feature_72] <= -1.5442447662353516) THEN 12 ELSE 13 END ELSE 14 END ELSE CASE WHEN ([ADS].[Feature_97] <= 0.975203275680542) THEN 16 ELSE 17 END END END END ELSE CASE WHEN ([ADS].[Feature_90] <= -1.3719922304153442) THEN 19 ELSE 20 END END AS node_id_2 
FROM [BinaryClass_100] AS [ADS]), 
[DT_node_data_27] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Proba_0.0] AS [Proba_0.0], [Values].[LogProba_0.0] AS [LogProba_0.0], [Values].[Proba_1.0] AS [Proba_1.0], [Values].[LogProba_1.0] AS [LogProba_1.0], [Values].[Decision] AS [Decision], [Values].[DecisionProba] AS [DecisionProba] 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 2 AS parent_id, 1.0 AS [Proba_0.0], 0.0 AS [LogProba_0.0], 0.0 AS [Proba_1.0], -1.79769313486231e+308 AS [LogProba_1.0], 0 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 10 AS count, 3 AS depth, 2 AS parent_id, 0.0 AS [Proba_0.0], -1.79769313486231e+308 AS [LogProba_0.0], 1.0 AS [Proba_1.0], 0.0 AS [LogProba_1.0], 1 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 4 AS depth, 6 AS parent_id, 0.0 AS [Proba_0.0], -1.79769313486231e+308 AS [LogProba_0.0], 1.0 AS [Proba_1.0], 0.0 AS [LogProba_1.0], 1 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 9 AS count, 4 AS depth, 6 AS parent_id, 1.0 AS [Proba_0.0], 0.0 AS [LogProba_0.0], 0.0 AS [Proba_1.0], -1.79769313486231e+308 AS [LogProba_1.0], 0 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 6 AS depth, 11 AS parent_id, 1.0 AS [Proba_0.0], 0.0 AS [LogProba_0.0], 0.0 AS [Proba_1.0], -1.79769313486231e+308 AS [LogProba_1.0], 0 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 6 AS depth, 11 AS parent_id, 0.0 AS [Proba_0.0], -1.79769313486231e+308 AS [LogProba_0.0], 1.0 AS [Proba_1.0], 0.0 AS [LogProba_1.0], 1 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS count, 5 AS depth, 10 AS parent_id, 1.0 AS [Proba_0.0], 0.0 AS [LogProba_0.0], 0.0 AS [Proba_1.0], -1.79769313486231e+308 AS [LogProba_1.0], 0 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 16 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 9 AS count, 5 AS depth, 15 AS parent_id, 0.0 AS [Proba_0.0], -1.79769313486231e+308 AS [LogProba_0.0], 1.0 AS [Proba_1.0], 0.0 AS [LogProba_1.0], 1 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 17 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 5 AS depth, 15 AS parent_id, 1.0 AS [Proba_0.0], 0.0 AS [LogProba_0.0], 0.0 AS [Proba_1.0], -1.79769313486231e+308 AS [LogProba_1.0], 0 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 19 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 2 AS depth, 18 AS parent_id, 0.0 AS [Proba_0.0], -1.79769313486231e+308 AS [LogProba_0.0], 1.0 AS [Proba_1.0], 0.0 AS [LogProba_1.0], 1 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 20 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 9 AS count, 2 AS depth, 18 AS parent_id, 1.0 AS [Proba_0.0], 0.0 AS [LogProba_0.0], 0.0 AS [Proba_1.0], -1.79769313486231e+308 AS [LogProba_1.0], 0 AS [Decision], 1.0 AS [DecisionProba]) AS [Values]), 
[DT_Output_27] AS 
(SELECT [DT_node_lookup_27].[KEY] AS [KEY], [DT_node_lookup_27].node_id_2 AS node_id_2, [DT_node_data_27].node_id AS node_id, [DT_node_data_27].feature AS feature, [DT_node_data_27].threshold AS threshold, [DT_node_data_27].count AS count, [DT_node_data_27].depth AS depth, [DT_node_data_27].parent_id AS parent_id, [DT_node_data_27].[Proba_0.0] AS [Proba_0.0], [DT_node_data_27].[LogProba_0.0] AS [LogProba_0.0], [DT_node_data_27].[Proba_1.0] AS [Proba_1.0], [DT_node_data_27].[LogProba_1.0] AS [LogProba_1.0], [DT_node_data_27].[Decision] AS [Decision], [DT_node_data_27].[DecisionProba] AS [DecisionProba] 
FROM [DT_node_lookup_27] LEFT OUTER JOIN [DT_node_data_27] ON [DT_node_lookup_27].node_id_2 = [DT_node_data_27].node_id), 
[RF_Tree_27] AS 
(SELECT [DT_Output_27].[KEY] AS [KEY], CAST(NULL AS FLOAT) AS [Score_0], [DT_Output_27].[Proba_0.0] AS [Proba_0], [DT_Output_27].[LogProba_0.0] AS [LogProba_0], CAST(NULL AS FLOAT) AS [Score_1], [DT_Output_27].[Proba_1.0] AS [Proba_1], [DT_Output_27].[LogProba_1.0] AS [LogProba_1] 
FROM [DT_Output_27]), 
[DT_node_lookup_28] AS 
(SELECT [ADS].[KEY] AS [KEY], CASE WHEN ([ADS].[Feature_24] <= 0.25649958848953247) THEN CASE WHEN ([ADS].[Feature_48] <= -0.09299316257238388) THEN CASE WHEN ([ADS].[Feature_85] <= -1.578381061553955) THEN 3 ELSE 4 END ELSE CASE WHEN ([ADS].[Feature_77] <= -0.062249556183815) THEN 6 ELSE CASE WHEN ([ADS].[Feature_25] <= -0.3050728440284729) THEN CASE WHEN ([ADS].[Feature_80] <= -0.7772613763809204) THEN 9 ELSE 10 END ELSE 11 END END END ELSE CASE WHEN ([ADS].[Feature_16] <= 0.3167930245399475) THEN 13 ELSE CASE WHEN ([ADS].[Feature_81] <= -0.106979139149189) THEN 15 ELSE 16 END END END AS node_id_2 
FROM [BinaryClass_100] AS [ADS]), 
[DT_node_data_28] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Proba_0.0] AS [Proba_0.0], [Values].[LogProba_0.0] AS [LogProba_0.0], [Values].[Proba_1.0] AS [Proba_1.0], [Values].[LogProba_1.0] AS [LogProba_1.0], [Values].[Decision] AS [Decision], [Values].[DecisionProba] AS [DecisionProba] 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 2 AS parent_id, 1.0 AS [Proba_0.0], 0.0 AS [LogProba_0.0], 0.0 AS [Proba_1.0], -1.79769313486231e+308 AS [LogProba_1.0], 0 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 12 AS count, 3 AS depth, 2 AS parent_id, 0.0 AS [Proba_0.0], -1.79769313486231e+308 AS [LogProba_0.0], 1.0 AS [Proba_1.0], 0.0 AS [LogProba_1.0], 1 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 6 AS count, 3 AS depth, 5 AS parent_id, 0.0 AS [Proba_0.0], -1.79769313486231e+308 AS [LogProba_0.0], 1.0 AS [Proba_1.0], 0.0 AS [LogProba_1.0], 1 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 5 AS depth, 8 AS parent_id, 0.0 AS [Proba_0.0], -1.79769313486231e+308 AS [LogProba_0.0], 1.0 AS [Proba_1.0], 0.0 AS [LogProba_1.0], 1 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 5 AS depth, 8 AS parent_id, 1.0 AS [Proba_0.0], 0.0 AS [LogProba_0.0], 0.0 AS [Proba_1.0], -1.79769313486231e+308 AS [LogProba_1.0], 0 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 10 AS count, 4 AS depth, 7 AS parent_id, 1.0 AS [Proba_0.0], 0.0 AS [LogProba_0.0], 0.0 AS [Proba_1.0], -1.79769313486231e+308 AS [LogProba_1.0], 0 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 13 AS count, 2 AS depth, 12 AS parent_id, 1.0 AS [Proba_0.0], 0.0 AS [LogProba_0.0], 0.0 AS [Proba_1.0], -1.79769313486231e+308 AS [LogProba_1.0], 0 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 15 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 3 AS depth, 14 AS parent_id, 0.0 AS [Proba_0.0], -1.79769313486231e+308 AS [LogProba_0.0], 1.0 AS [Proba_1.0], 0.0 AS [LogProba_1.0], 1 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 16 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 3 AS depth, 14 AS parent_id, 1.0 AS [Proba_0.0], 0.0 AS [LogProba_0.0], 0.0 AS [Proba_1.0], -1.79769313486231e+308 AS [LogProba_1.0], 0 AS [Decision], 1.0 AS [DecisionProba]) AS [Values]), 
[DT_Output_28] AS 
(SELECT [DT_node_lookup_28].[KEY] AS [KEY], [DT_node_lookup_28].node_id_2 AS node_id_2, [DT_node_data_28].node_id AS node_id, [DT_node_data_28].feature AS feature, [DT_node_data_28].threshold AS threshold, [DT_node_data_28].count AS count, [DT_node_data_28].depth AS depth, [DT_node_data_28].parent_id AS parent_id, [DT_node_data_28].[Proba_0.0] AS [Proba_0.0], [DT_node_data_28].[LogProba_0.0] AS [LogProba_0.0], [DT_node_data_28].[Proba_1.0] AS [Proba_1.0], [DT_node_data_28].[LogProba_1.0] AS [LogProba_1.0], [DT_node_data_28].[Decision] AS [Decision], [DT_node_data_28].[DecisionProba] AS [DecisionProba] 
FROM [DT_node_lookup_28] LEFT OUTER JOIN [DT_node_data_28] ON [DT_node_lookup_28].node_id_2 = [DT_node_data_28].node_id), 
[RF_Tree_28] AS 
(SELECT [DT_Output_28].[KEY] AS [KEY], CAST(NULL AS FLOAT) AS [Score_0], [DT_Output_28].[Proba_0.0] AS [Proba_0], [DT_Output_28].[LogProba_0.0] AS [LogProba_0], CAST(NULL AS FLOAT) AS [Score_1], [DT_Output_28].[Proba_1.0] AS [Proba_1], [DT_Output_28].[LogProba_1.0] AS [LogProba_1] 
FROM [DT_Output_28]), 
[DT_node_lookup_29] AS 
(SELECT [ADS].[KEY] AS [KEY], CASE WHEN ([ADS].[Feature_96] <= -0.9581407904624939) THEN CASE WHEN ([ADS].[Feature_92] <= 2.1907031536102295) THEN 2 ELSE 3 END ELSE CASE WHEN ([ADS].[Feature_57] <= -0.27291035652160645) THEN CASE WHEN ([ADS].[Feature_8] <= 1.2689111232757568) THEN 6 ELSE CASE WHEN ([ADS].[Feature_12] <= -0.044795528054237366) THEN 8 ELSE 9 END END ELSE CASE WHEN ([ADS].[Feature_28] <= 0.7065021991729736) THEN CASE WHEN ([ADS].[Feature_18] <= 2.0082812309265137) THEN 12 ELSE 13 END ELSE 14 END END END AS node_id_2 
FROM [BinaryClass_100] AS [ADS]), 
[DT_node_data_29] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Proba_0.0] AS [Proba_0.0], [Values].[LogProba_0.0] AS [LogProba_0.0], [Values].[Proba_1.0] AS [Proba_1.0], [Values].[LogProba_1.0] AS [LogProba_1.0], [Values].[Decision] AS [Decision], [Values].[DecisionProba] AS [DecisionProba] 
FROM (SELECT 2 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 10 AS count, 2 AS depth, 1 AS parent_id, 0.0 AS [Proba_0.0], -1.79769313486231e+308 AS [LogProba_0.0], 1.0 AS [Proba_1.0], 0.0 AS [LogProba_1.0], 1 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 2 AS depth, 1 AS parent_id, 1.0 AS [Proba_0.0], 0.0 AS [LogProba_0.0], 0.0 AS [Proba_1.0], -1.79769313486231e+308 AS [LogProba_1.0], 0 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 20 AS count, 3 AS depth, 5 AS parent_id, 1.0 AS [Proba_0.0], 0.0 AS [LogProba_0.0], 0.0 AS [Proba_1.0], -1.79769313486231e+308 AS [LogProba_1.0], 0 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 7 AS parent_id, 0.0 AS [Proba_0.0], -1.79769313486231e+308 AS [LogProba_0.0], 1.0 AS [Proba_1.0], 0.0 AS [LogProba_1.0], 1 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 4 AS depth, 7 AS parent_id, 1.0 AS [Proba_0.0], 0.0 AS [LogProba_0.0], 0.0 AS [Proba_1.0], -1.79769313486231e+308 AS [LogProba_1.0], 0 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 16 AS count, 4 AS depth, 11 AS parent_id, 0.0 AS [Proba_0.0], -1.79769313486231e+308 AS [LogProba_0.0], 1.0 AS [Proba_1.0], 0.0 AS [LogProba_1.0], 1 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 11 AS parent_id, 1.0 AS [Proba_0.0], 0.0 AS [LogProba_0.0], 0.0 AS [Proba_1.0], -1.79769313486231e+308 AS [LogProba_1.0], 0 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 3 AS depth, 10 AS parent_id, 1.0 AS [Proba_0.0], 0.0 AS [LogProba_0.0], 0.0 AS [Proba_1.0], -1.79769313486231e+308 AS [LogProba_1.0], 0 AS [Decision], 1.0 AS [DecisionProba]) AS [Values]), 
[DT_Output_29] AS 
(SELECT [DT_node_lookup_29].[KEY] AS [KEY], [DT_node_lookup_29].node_id_2 AS node_id_2, [DT_node_data_29].node_id AS node_id, [DT_node_data_29].feature AS feature, [DT_node_data_29].threshold AS threshold, [DT_node_data_29].count AS count, [DT_node_data_29].depth AS depth, [DT_node_data_29].parent_id AS parent_id, [DT_node_data_29].[Proba_0.0] AS [Proba_0.0], [DT_node_data_29].[LogProba_0.0] AS [LogProba_0.0], [DT_node_data_29].[Proba_1.0] AS [Proba_1.0], [DT_node_data_29].[LogProba_1.0] AS [LogProba_1.0], [DT_node_data_29].[Decision] AS [Decision], [DT_node_data_29].[DecisionProba] AS [DecisionProba] 
FROM [DT_node_lookup_29] LEFT OUTER JOIN [DT_node_data_29] ON [DT_node_lookup_29].node_id_2 = [DT_node_data_29].node_id), 
[RF_Tree_29] AS 
(SELECT [DT_Output_29].[KEY] AS [KEY], CAST(NULL AS FLOAT) AS [Score_0], [DT_Output_29].[Proba_0.0] AS [Proba_0], [DT_Output_29].[LogProba_0.0] AS [LogProba_0], CAST(NULL AS FLOAT) AS [Score_1], [DT_Output_29].[Proba_1.0] AS [Proba_1], [DT_Output_29].[LogProba_1.0] AS [LogProba_1] 
FROM [DT_Output_29]), 
[DT_node_lookup_30] AS 
(SELECT [ADS].[KEY] AS [KEY], CASE WHEN ([ADS].[Feature_82] <= 1.69474458694458) THEN CASE WHEN ([ADS].[Feature_8] <= 1.397236704826355) THEN CASE WHEN ([ADS].[Feature_36] <= 1.5221848487854004) THEN CASE WHEN ([ADS].[Feature_31] <= 1.1163547039031982) THEN CASE WHEN ([ADS].[Feature_29] <= 1.5058393478393555) THEN CASE WHEN ([ADS].[Feature_81] <= 1.2152655124664307) THEN CASE WHEN ([ADS].[Feature_43] <= 1.2641934156417847) THEN CASE WHEN ([ADS].[Feature_97] <= 1.9688935279846191) THEN 8 ELSE CASE WHEN ([ADS].[Feature_39] <= -0.5513748526573181) THEN 10 ELSE 11 END END ELSE 12 END ELSE 13 END ELSE 14 END ELSE CASE WHEN ([ADS].[Feature_62] <= 1.4096999168395996) THEN 16 ELSE 17 END END ELSE 18 END ELSE 19 END ELSE 20 END AS node_id_2 
FROM [BinaryClass_100] AS [ADS]), 
[DT_node_data_30] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Proba_0.0] AS [Proba_0.0], [Values].[LogProba_0.0] AS [LogProba_0.0], [Values].[Proba_1.0] AS [Proba_1.0], [Values].[LogProba_1.0] AS [LogProba_1.0], [Values].[Decision] AS [Decision], [Values].[DecisionProba] AS [DecisionProba] 
FROM (SELECT 8 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 25 AS count, 8 AS depth, 7 AS parent_id, 1.0 AS [Proba_0.0], 0.0 AS [LogProba_0.0], 0.0 AS [Proba_1.0], -1.79769313486231e+308 AS [LogProba_1.0], 0 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 9 AS depth, 9 AS parent_id, 1.0 AS [Proba_0.0], 0.0 AS [LogProba_0.0], 0.0 AS [Proba_1.0], -1.79769313486231e+308 AS [LogProba_1.0], 0 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 9 AS depth, 9 AS parent_id, 0.0 AS [Proba_0.0], -1.79769313486231e+308 AS [LogProba_0.0], 1.0 AS [Proba_1.0], 0.0 AS [LogProba_1.0], 1 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 7 AS depth, 6 AS parent_id, 0.0 AS [Proba_0.0], -1.79769313486231e+308 AS [LogProba_0.0], 1.0 AS [Proba_1.0], 0.0 AS [LogProba_1.0], 1 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 6 AS depth, 5 AS parent_id, 0.0 AS [Proba_0.0], -1.79769313486231e+308 AS [LogProba_0.0], 1.0 AS [Proba_1.0], 0.0 AS [LogProba_1.0], 1 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 4 AS parent_id, 0.0 AS [Proba_0.0], -1.79769313486231e+308 AS [LogProba_0.0], 1.0 AS [Proba_1.0], 0.0 AS [LogProba_1.0], 1 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 16 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 5 AS depth, 15 AS parent_id, 0.0 AS [Proba_0.0], -1.79769313486231e+308 AS [LogProba_0.0], 1.0 AS [Proba_1.0], 0.0 AS [LogProba_1.0], 1 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 17 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 15 AS parent_id, 1.0 AS [Proba_0.0], 0.0 AS [LogProba_0.0], 0.0 AS [Proba_1.0], -1.79769313486231e+308 AS [LogProba_1.0], 0 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 18 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 3 AS depth, 2 AS parent_id, 0.0 AS [Proba_0.0], -1.79769313486231e+308 AS [LogProba_0.0], 1.0 AS [Proba_1.0], 0.0 AS [LogProba_1.0], 1 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 19 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS count, 2 AS depth, 1 AS parent_id, 0.0 AS [Proba_0.0], -1.79769313486231e+308 AS [LogProba_0.0], 1.0 AS [Proba_1.0], 0.0 AS [LogProba_1.0], 1 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 20 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 1 AS depth, 0 AS parent_id, 0.0 AS [Proba_0.0], -1.79769313486231e+308 AS [LogProba_0.0], 1.0 AS [Proba_1.0], 0.0 AS [LogProba_1.0], 1 AS [Decision], 1.0 AS [DecisionProba]) AS [Values]), 
[DT_Output_30] AS 
(SELECT [DT_node_lookup_30].[KEY] AS [KEY], [DT_node_lookup_30].node_id_2 AS node_id_2, [DT_node_data_30].node_id AS node_id, [DT_node_data_30].feature AS feature, [DT_node_data_30].threshold AS threshold, [DT_node_data_30].count AS count, [DT_node_data_30].depth AS depth, [DT_node_data_30].parent_id AS parent_id, [DT_node_data_30].[Proba_0.0] AS [Proba_0.0], [DT_node_data_30].[LogProba_0.0] AS [LogProba_0.0], [DT_node_data_30].[Proba_1.0] AS [Proba_1.0], [DT_node_data_30].[LogProba_1.0] AS [LogProba_1.0], [DT_node_data_30].[Decision] AS [Decision], [DT_node_data_30].[DecisionProba] AS [DecisionProba] 
FROM [DT_node_lookup_30] LEFT OUTER JOIN [DT_node_data_30] ON [DT_node_lookup_30].node_id_2 = [DT_node_data_30].node_id), 
[RF_Tree_30] AS 
(SELECT [DT_Output_30].[KEY] AS [KEY], CAST(NULL AS FLOAT) AS [Score_0], [DT_Output_30].[Proba_0.0] AS [Proba_0], [DT_Output_30].[LogProba_0.0] AS [LogProba_0], CAST(NULL AS FLOAT) AS [Score_1], [DT_Output_30].[Proba_1.0] AS [Proba_1], [DT_Output_30].[LogProba_1.0] AS [LogProba_1] 
FROM [DT_Output_30]), 
[DT_node_lookup_31] AS 
(SELECT [ADS].[KEY] AS [KEY], CASE WHEN ([ADS].[Feature_46] <= -0.683415412902832) THEN CASE WHEN ([ADS].[Feature_23] <= -0.44912075996398926) THEN 2 ELSE 3 END ELSE CASE WHEN ([ADS].[Feature_59] <= 0.8248755931854248) THEN CASE WHEN ([ADS].[Feature_57] <= -0.23257151246070862) THEN CASE WHEN ([ADS].[Feature_65] <= 1.6311273574829102) THEN CASE WHEN ([ADS].[Feature_63] <= 1.8744111061096191) THEN CASE WHEN ([ADS].[Feature_90] <= -0.8680797815322876) THEN 9 ELSE 10 END ELSE 11 END ELSE 12 END ELSE CASE WHEN ([ADS].[Feature_72] <= 1.9118613004684448) THEN 14 ELSE 15 END END ELSE CASE WHEN ([ADS].[Feature_48] <= -0.45547202229499817) THEN 17 ELSE 18 END END END AS node_id_2 
FROM [BinaryClass_100] AS [ADS]), 
[DT_node_data_31] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Proba_0.0] AS [Proba_0.0], [Values].[LogProba_0.0] AS [LogProba_0.0], [Values].[Proba_1.0] AS [Proba_1.0], [Values].[LogProba_1.0] AS [LogProba_1.0], [Values].[Decision] AS [Decision], [Values].[DecisionProba] AS [DecisionProba] 
FROM (SELECT 2 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 2 AS depth, 1 AS parent_id, 0.0 AS [Proba_0.0], -1.79769313486231e+308 AS [LogProba_0.0], 1.0 AS [Proba_1.0], 0.0 AS [LogProba_1.0], 1 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 9 AS count, 2 AS depth, 1 AS parent_id, 1.0 AS [Proba_0.0], 0.0 AS [LogProba_0.0], 0.0 AS [Proba_1.0], -1.79769313486231e+308 AS [LogProba_1.0], 0 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 6 AS depth, 8 AS parent_id, 0.0 AS [Proba_0.0], -1.79769313486231e+308 AS [LogProba_0.0], 1.0 AS [Proba_1.0], 0.0 AS [LogProba_1.0], 1 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 9 AS count, 6 AS depth, 8 AS parent_id, 1.0 AS [Proba_0.0], 0.0 AS [LogProba_0.0], 0.0 AS [Proba_1.0], -1.79769313486231e+308 AS [LogProba_1.0], 0 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 7 AS parent_id, 0.0 AS [Proba_0.0], -1.79769313486231e+308 AS [LogProba_0.0], 1.0 AS [Proba_1.0], 0.0 AS [LogProba_1.0], 1 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 6 AS parent_id, 0.0 AS [Proba_0.0], -1.79769313486231e+308 AS [LogProba_0.0], 1.0 AS [Proba_1.0], 0.0 AS [LogProba_1.0], 1 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 19 AS count, 4 AS depth, 13 AS parent_id, 0.0 AS [Proba_0.0], -1.79769313486231e+308 AS [LogProba_0.0], 1.0 AS [Proba_1.0], 0.0 AS [LogProba_1.0], 1 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 15 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 13 AS parent_id, 1.0 AS [Proba_0.0], 0.0 AS [LogProba_0.0], 0.0 AS [Proba_1.0], -1.79769313486231e+308 AS [LogProba_1.0], 0 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 17 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 16 AS parent_id, 0.0 AS [Proba_0.0], -1.79769313486231e+308 AS [LogProba_0.0], 1.0 AS [Proba_1.0], 0.0 AS [LogProba_1.0], 1 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 18 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 6 AS count, 3 AS depth, 16 AS parent_id, 1.0 AS [Proba_0.0], 0.0 AS [LogProba_0.0], 0.0 AS [Proba_1.0], -1.79769313486231e+308 AS [LogProba_1.0], 0 AS [Decision], 1.0 AS [DecisionProba]) AS [Values]), 
[DT_Output_31] AS 
(SELECT [DT_node_lookup_31].[KEY] AS [KEY], [DT_node_lookup_31].node_id_2 AS node_id_2, [DT_node_data_31].node_id AS node_id, [DT_node_data_31].feature AS feature, [DT_node_data_31].threshold AS threshold, [DT_node_data_31].count AS count, [DT_node_data_31].depth AS depth, [DT_node_data_31].parent_id AS parent_id, [DT_node_data_31].[Proba_0.0] AS [Proba_0.0], [DT_node_data_31].[LogProba_0.0] AS [LogProba_0.0], [DT_node_data_31].[Proba_1.0] AS [Proba_1.0], [DT_node_data_31].[LogProba_1.0] AS [LogProba_1.0], [DT_node_data_31].[Decision] AS [Decision], [DT_node_data_31].[DecisionProba] AS [DecisionProba] 
FROM [DT_node_lookup_31] LEFT OUTER JOIN [DT_node_data_31] ON [DT_node_lookup_31].node_id_2 = [DT_node_data_31].node_id), 
[RF_Tree_31] AS 
(SELECT [DT_Output_31].[KEY] AS [KEY], CAST(NULL AS FLOAT) AS [Score_0], [DT_Output_31].[Proba_0.0] AS [Proba_0], [DT_Output_31].[LogProba_0.0] AS [LogProba_0], CAST(NULL AS FLOAT) AS [Score_1], [DT_Output_31].[Proba_1.0] AS [Proba_1], [DT_Output_31].[LogProba_1.0] AS [LogProba_1] 
FROM [DT_Output_31]), 
[Score_Union_CTE] AS 
(SELECT ensemble_score_union.[KEY] AS [KEY], ensemble_score_union.[Score_0] AS [Score_0], ensemble_score_union.[Proba_0] AS [Proba_0], ensemble_score_union.[LogProba_0] AS [LogProba_0], ensemble_score_union.[Score_1] AS [Score_1], ensemble_score_union.[Proba_1] AS [Proba_1], ensemble_score_union.[LogProba_1] AS [LogProba_1] 
FROM (SELECT [RF_Tree_0].[KEY] AS [KEY], [RF_Tree_0].[Score_0] AS [Score_0], [RF_Tree_0].[Proba_0] AS [Proba_0], [RF_Tree_0].[LogProba_0] AS [LogProba_0], [RF_Tree_0].[Score_1] AS [Score_1], [RF_Tree_0].[Proba_1] AS [Proba_1], [RF_Tree_0].[LogProba_1] AS [LogProba_1] 
FROM [RF_Tree_0] UNION ALL SELECT [RF_Tree_1].[KEY] AS [KEY], [RF_Tree_1].[Score_0] AS [Score_0], [RF_Tree_1].[Proba_0] AS [Proba_0], [RF_Tree_1].[LogProba_0] AS [LogProba_0], [RF_Tree_1].[Score_1] AS [Score_1], [RF_Tree_1].[Proba_1] AS [Proba_1], [RF_Tree_1].[LogProba_1] AS [LogProba_1] 
FROM [RF_Tree_1] UNION ALL SELECT [RF_Tree_2].[KEY] AS [KEY], [RF_Tree_2].[Score_0] AS [Score_0], [RF_Tree_2].[Proba_0] AS [Proba_0], [RF_Tree_2].[LogProba_0] AS [LogProba_0], [RF_Tree_2].[Score_1] AS [Score_1], [RF_Tree_2].[Proba_1] AS [Proba_1], [RF_Tree_2].[LogProba_1] AS [LogProba_1] 
FROM [RF_Tree_2] UNION ALL SELECT [RF_Tree_3].[KEY] AS [KEY], [RF_Tree_3].[Score_0] AS [Score_0], [RF_Tree_3].[Proba_0] AS [Proba_0], [RF_Tree_3].[LogProba_0] AS [LogProba_0], [RF_Tree_3].[Score_1] AS [Score_1], [RF_Tree_3].[Proba_1] AS [Proba_1], [RF_Tree_3].[LogProba_1] AS [LogProba_1] 
FROM [RF_Tree_3] UNION ALL SELECT [RF_Tree_4].[KEY] AS [KEY], [RF_Tree_4].[Score_0] AS [Score_0], [RF_Tree_4].[Proba_0] AS [Proba_0], [RF_Tree_4].[LogProba_0] AS [LogProba_0], [RF_Tree_4].[Score_1] AS [Score_1], [RF_Tree_4].[Proba_1] AS [Proba_1], [RF_Tree_4].[LogProba_1] AS [LogProba_1] 
FROM [RF_Tree_4] UNION ALL SELECT [RF_Tree_5].[KEY] AS [KEY], [RF_Tree_5].[Score_0] AS [Score_0], [RF_Tree_5].[Proba_0] AS [Proba_0], [RF_Tree_5].[LogProba_0] AS [LogProba_0], [RF_Tree_5].[Score_1] AS [Score_1], [RF_Tree_5].[Proba_1] AS [Proba_1], [RF_Tree_5].[LogProba_1] AS [LogProba_1] 
FROM [RF_Tree_5] UNION ALL SELECT [RF_Tree_6].[KEY] AS [KEY], [RF_Tree_6].[Score_0] AS [Score_0], [RF_Tree_6].[Proba_0] AS [Proba_0], [RF_Tree_6].[LogProba_0] AS [LogProba_0], [RF_Tree_6].[Score_1] AS [Score_1], [RF_Tree_6].[Proba_1] AS [Proba_1], [RF_Tree_6].[LogProba_1] AS [LogProba_1] 
FROM [RF_Tree_6] UNION ALL SELECT [RF_Tree_7].[KEY] AS [KEY], [RF_Tree_7].[Score_0] AS [Score_0], [RF_Tree_7].[Proba_0] AS [Proba_0], [RF_Tree_7].[LogProba_0] AS [LogProba_0], [RF_Tree_7].[Score_1] AS [Score_1], [RF_Tree_7].[Proba_1] AS [Proba_1], [RF_Tree_7].[LogProba_1] AS [LogProba_1] 
FROM [RF_Tree_7] UNION ALL SELECT [RF_Tree_8].[KEY] AS [KEY], [RF_Tree_8].[Score_0] AS [Score_0], [RF_Tree_8].[Proba_0] AS [Proba_0], [RF_Tree_8].[LogProba_0] AS [LogProba_0], [RF_Tree_8].[Score_1] AS [Score_1], [RF_Tree_8].[Proba_1] AS [Proba_1], [RF_Tree_8].[LogProba_1] AS [LogProba_1] 
FROM [RF_Tree_8] UNION ALL SELECT [RF_Tree_9].[KEY] AS [KEY], [RF_Tree_9].[Score_0] AS [Score_0], [RF_Tree_9].[Proba_0] AS [Proba_0], [RF_Tree_9].[LogProba_0] AS [LogProba_0], [RF_Tree_9].[Score_1] AS [Score_1], [RF_Tree_9].[Proba_1] AS [Proba_1], [RF_Tree_9].[LogProba_1] AS [LogProba_1] 
FROM [RF_Tree_9] UNION ALL SELECT [RF_Tree_10].[KEY] AS [KEY], [RF_Tree_10].[Score_0] AS [Score_0], [RF_Tree_10].[Proba_0] AS [Proba_0], [RF_Tree_10].[LogProba_0] AS [LogProba_0], [RF_Tree_10].[Score_1] AS [Score_1], [RF_Tree_10].[Proba_1] AS [Proba_1], [RF_Tree_10].[LogProba_1] AS [LogProba_1] 
FROM [RF_Tree_10] UNION ALL SELECT [RF_Tree_11].[KEY] AS [KEY], [RF_Tree_11].[Score_0] AS [Score_0], [RF_Tree_11].[Proba_0] AS [Proba_0], [RF_Tree_11].[LogProba_0] AS [LogProba_0], [RF_Tree_11].[Score_1] AS [Score_1], [RF_Tree_11].[Proba_1] AS [Proba_1], [RF_Tree_11].[LogProba_1] AS [LogProba_1] 
FROM [RF_Tree_11] UNION ALL SELECT [RF_Tree_12].[KEY] AS [KEY], [RF_Tree_12].[Score_0] AS [Score_0], [RF_Tree_12].[Proba_0] AS [Proba_0], [RF_Tree_12].[LogProba_0] AS [LogProba_0], [RF_Tree_12].[Score_1] AS [Score_1], [RF_Tree_12].[Proba_1] AS [Proba_1], [RF_Tree_12].[LogProba_1] AS [LogProba_1] 
FROM [RF_Tree_12] UNION ALL SELECT [RF_Tree_13].[KEY] AS [KEY], [RF_Tree_13].[Score_0] AS [Score_0], [RF_Tree_13].[Proba_0] AS [Proba_0], [RF_Tree_13].[LogProba_0] AS [LogProba_0], [RF_Tree_13].[Score_1] AS [Score_1], [RF_Tree_13].[Proba_1] AS [Proba_1], [RF_Tree_13].[LogProba_1] AS [LogProba_1] 
FROM [RF_Tree_13] UNION ALL SELECT [RF_Tree_14].[KEY] AS [KEY], [RF_Tree_14].[Score_0] AS [Score_0], [RF_Tree_14].[Proba_0] AS [Proba_0], [RF_Tree_14].[LogProba_0] AS [LogProba_0], [RF_Tree_14].[Score_1] AS [Score_1], [RF_Tree_14].[Proba_1] AS [Proba_1], [RF_Tree_14].[LogProba_1] AS [LogProba_1] 
FROM [RF_Tree_14] UNION ALL SELECT [RF_Tree_15].[KEY] AS [KEY], [RF_Tree_15].[Score_0] AS [Score_0], [RF_Tree_15].[Proba_0] AS [Proba_0], [RF_Tree_15].[LogProba_0] AS [LogProba_0], [RF_Tree_15].[Score_1] AS [Score_1], [RF_Tree_15].[Proba_1] AS [Proba_1], [RF_Tree_15].[LogProba_1] AS [LogProba_1] 
FROM [RF_Tree_15] UNION ALL SELECT [RF_Tree_16].[KEY] AS [KEY], [RF_Tree_16].[Score_0] AS [Score_0], [RF_Tree_16].[Proba_0] AS [Proba_0], [RF_Tree_16].[LogProba_0] AS [LogProba_0], [RF_Tree_16].[Score_1] AS [Score_1], [RF_Tree_16].[Proba_1] AS [Proba_1], [RF_Tree_16].[LogProba_1] AS [LogProba_1] 
FROM [RF_Tree_16] UNION ALL SELECT [RF_Tree_17].[KEY] AS [KEY], [RF_Tree_17].[Score_0] AS [Score_0], [RF_Tree_17].[Proba_0] AS [Proba_0], [RF_Tree_17].[LogProba_0] AS [LogProba_0], [RF_Tree_17].[Score_1] AS [Score_1], [RF_Tree_17].[Proba_1] AS [Proba_1], [RF_Tree_17].[LogProba_1] AS [LogProba_1] 
FROM [RF_Tree_17] UNION ALL SELECT [RF_Tree_18].[KEY] AS [KEY], [RF_Tree_18].[Score_0] AS [Score_0], [RF_Tree_18].[Proba_0] AS [Proba_0], [RF_Tree_18].[LogProba_0] AS [LogProba_0], [RF_Tree_18].[Score_1] AS [Score_1], [RF_Tree_18].[Proba_1] AS [Proba_1], [RF_Tree_18].[LogProba_1] AS [LogProba_1] 
FROM [RF_Tree_18] UNION ALL SELECT [RF_Tree_19].[KEY] AS [KEY], [RF_Tree_19].[Score_0] AS [Score_0], [RF_Tree_19].[Proba_0] AS [Proba_0], [RF_Tree_19].[LogProba_0] AS [LogProba_0], [RF_Tree_19].[Score_1] AS [Score_1], [RF_Tree_19].[Proba_1] AS [Proba_1], [RF_Tree_19].[LogProba_1] AS [LogProba_1] 
FROM [RF_Tree_19] UNION ALL SELECT [RF_Tree_20].[KEY] AS [KEY], [RF_Tree_20].[Score_0] AS [Score_0], [RF_Tree_20].[Proba_0] AS [Proba_0], [RF_Tree_20].[LogProba_0] AS [LogProba_0], [RF_Tree_20].[Score_1] AS [Score_1], [RF_Tree_20].[Proba_1] AS [Proba_1], [RF_Tree_20].[LogProba_1] AS [LogProba_1] 
FROM [RF_Tree_20] UNION ALL SELECT [RF_Tree_21].[KEY] AS [KEY], [RF_Tree_21].[Score_0] AS [Score_0], [RF_Tree_21].[Proba_0] AS [Proba_0], [RF_Tree_21].[LogProba_0] AS [LogProba_0], [RF_Tree_21].[Score_1] AS [Score_1], [RF_Tree_21].[Proba_1] AS [Proba_1], [RF_Tree_21].[LogProba_1] AS [LogProba_1] 
FROM [RF_Tree_21] UNION ALL SELECT [RF_Tree_22].[KEY] AS [KEY], [RF_Tree_22].[Score_0] AS [Score_0], [RF_Tree_22].[Proba_0] AS [Proba_0], [RF_Tree_22].[LogProba_0] AS [LogProba_0], [RF_Tree_22].[Score_1] AS [Score_1], [RF_Tree_22].[Proba_1] AS [Proba_1], [RF_Tree_22].[LogProba_1] AS [LogProba_1] 
FROM [RF_Tree_22] UNION ALL SELECT [RF_Tree_23].[KEY] AS [KEY], [RF_Tree_23].[Score_0] AS [Score_0], [RF_Tree_23].[Proba_0] AS [Proba_0], [RF_Tree_23].[LogProba_0] AS [LogProba_0], [RF_Tree_23].[Score_1] AS [Score_1], [RF_Tree_23].[Proba_1] AS [Proba_1], [RF_Tree_23].[LogProba_1] AS [LogProba_1] 
FROM [RF_Tree_23] UNION ALL SELECT [RF_Tree_24].[KEY] AS [KEY], [RF_Tree_24].[Score_0] AS [Score_0], [RF_Tree_24].[Proba_0] AS [Proba_0], [RF_Tree_24].[LogProba_0] AS [LogProba_0], [RF_Tree_24].[Score_1] AS [Score_1], [RF_Tree_24].[Proba_1] AS [Proba_1], [RF_Tree_24].[LogProba_1] AS [LogProba_1] 
FROM [RF_Tree_24] UNION ALL SELECT [RF_Tree_25].[KEY] AS [KEY], [RF_Tree_25].[Score_0] AS [Score_0], [RF_Tree_25].[Proba_0] AS [Proba_0], [RF_Tree_25].[LogProba_0] AS [LogProba_0], [RF_Tree_25].[Score_1] AS [Score_1], [RF_Tree_25].[Proba_1] AS [Proba_1], [RF_Tree_25].[LogProba_1] AS [LogProba_1] 
FROM [RF_Tree_25] UNION ALL SELECT [RF_Tree_26].[KEY] AS [KEY], [RF_Tree_26].[Score_0] AS [Score_0], [RF_Tree_26].[Proba_0] AS [Proba_0], [RF_Tree_26].[LogProba_0] AS [LogProba_0], [RF_Tree_26].[Score_1] AS [Score_1], [RF_Tree_26].[Proba_1] AS [Proba_1], [RF_Tree_26].[LogProba_1] AS [LogProba_1] 
FROM [RF_Tree_26] UNION ALL SELECT [RF_Tree_27].[KEY] AS [KEY], [RF_Tree_27].[Score_0] AS [Score_0], [RF_Tree_27].[Proba_0] AS [Proba_0], [RF_Tree_27].[LogProba_0] AS [LogProba_0], [RF_Tree_27].[Score_1] AS [Score_1], [RF_Tree_27].[Proba_1] AS [Proba_1], [RF_Tree_27].[LogProba_1] AS [LogProba_1] 
FROM [RF_Tree_27] UNION ALL SELECT [RF_Tree_28].[KEY] AS [KEY], [RF_Tree_28].[Score_0] AS [Score_0], [RF_Tree_28].[Proba_0] AS [Proba_0], [RF_Tree_28].[LogProba_0] AS [LogProba_0], [RF_Tree_28].[Score_1] AS [Score_1], [RF_Tree_28].[Proba_1] AS [Proba_1], [RF_Tree_28].[LogProba_1] AS [LogProba_1] 
FROM [RF_Tree_28] UNION ALL SELECT [RF_Tree_29].[KEY] AS [KEY], [RF_Tree_29].[Score_0] AS [Score_0], [RF_Tree_29].[Proba_0] AS [Proba_0], [RF_Tree_29].[LogProba_0] AS [LogProba_0], [RF_Tree_29].[Score_1] AS [Score_1], [RF_Tree_29].[Proba_1] AS [Proba_1], [RF_Tree_29].[LogProba_1] AS [LogProba_1] 
FROM [RF_Tree_29] UNION ALL SELECT [RF_Tree_30].[KEY] AS [KEY], [RF_Tree_30].[Score_0] AS [Score_0], [RF_Tree_30].[Proba_0] AS [Proba_0], [RF_Tree_30].[LogProba_0] AS [LogProba_0], [RF_Tree_30].[Score_1] AS [Score_1], [RF_Tree_30].[Proba_1] AS [Proba_1], [RF_Tree_30].[LogProba_1] AS [LogProba_1] 
FROM [RF_Tree_30] UNION ALL SELECT [RF_Tree_31].[KEY] AS [KEY], [RF_Tree_31].[Score_0] AS [Score_0], [RF_Tree_31].[Proba_0] AS [Proba_0], [RF_Tree_31].[LogProba_0] AS [LogProba_0], [RF_Tree_31].[Score_1] AS [Score_1], [RF_Tree_31].[Proba_1] AS [Proba_1], [RF_Tree_31].[LogProba_1] AS [LogProba_1] 
FROM [RF_Tree_31]) AS ensemble_score_union), 
[RF_AVG_Scores] AS 
(SELECT [T].[KEY] AS [KEY], [T].[Score_0] AS [Score_0], [T].[Proba_0] AS [Proba_0], [T].[LogProba_0] AS [LogProba_0], [T].[Score_1] AS [Score_1], [T].[Proba_1] AS [Proba_1], [T].[LogProba_1] AS [LogProba_1] 
FROM (SELECT [Score_Union_CTE].[KEY] AS [KEY], avg([Score_Union_CTE].[Score_0]) AS [Score_0], avg([Score_Union_CTE].[Proba_0]) AS [Proba_0], avg([Score_Union_CTE].[LogProba_0]) AS [LogProba_0], avg([Score_Union_CTE].[Score_1]) AS [Score_1], avg([Score_Union_CTE].[Proba_1]) AS [Proba_1], avg([Score_Union_CTE].[LogProba_1]) AS [LogProba_1] 
FROM [Score_Union_CTE] GROUP BY [Score_Union_CTE].[KEY]) AS [T]), 
orig_cte AS 
(SELECT [RF_AVG_Scores].[KEY] AS [KEY], [RF_AVG_Scores].[Score_0] AS [Score_0], [RF_AVG_Scores].[Score_1] AS [Score_1], [RF_AVG_Scores].[Proba_0] AS [Proba_0], [RF_AVG_Scores].[Proba_1] AS [Proba_1], [RF_AVG_Scores].[LogProba_0] AS [LogProba_0], [RF_AVG_Scores].[LogProba_1] AS [LogProba_1], CAST(NULL AS INTEGER) AS [Decision], CAST(NULL AS FLOAT) AS [DecisionProba] 
FROM [RF_AVG_Scores]), 
score_class_union AS 
(SELECT scu.[KEY_u] AS [KEY_u], scu.class AS class, scu.[LogProba] AS [LogProba], scu.[Proba] AS [Proba], scu.[Score] AS [Score] 
FROM (SELECT orig_cte.[KEY] AS [KEY_u], 0 AS class, orig_cte.[LogProba_0] AS [LogProba], orig_cte.[Proba_0] AS [Proba], orig_cte.[Score_0] AS [Score] 
FROM orig_cte UNION ALL SELECT orig_cte.[KEY] AS [KEY_u], 1 AS class, orig_cte.[LogProba_1] AS [LogProba], orig_cte.[Proba_1] AS [Proba], orig_cte.[Score_1] AS [Score] 
FROM orig_cte) AS scu), 
score_max AS 
(SELECT orig_cte.[KEY] AS [KEY], orig_cte.[Score_0] AS [Score_0], orig_cte.[Score_1] AS [Score_1], orig_cte.[Proba_0] AS [Proba_0], orig_cte.[Proba_1] AS [Proba_1], orig_cte.[LogProba_0] AS [LogProba_0], orig_cte.[LogProba_1] AS [LogProba_1], orig_cte.[Decision] AS [Decision], orig_cte.[DecisionProba] AS [DecisionProba], max_select.[KEY_m] AS [KEY_m], max_select.[max_Proba] AS [max_Proba] 
FROM orig_cte LEFT OUTER JOIN (SELECT score_class_union.[KEY_u] AS [KEY_m], max(score_class_union.[Proba]) AS [max_Proba] 
FROM score_class_union GROUP BY score_class_union.[KEY_u]) AS max_select ON orig_cte.[KEY] = max_select.[KEY_m]), 
union_with_max AS 
(SELECT score_class_union.[KEY_u] AS [KEY_u], score_class_union.class AS class, score_class_union.[LogProba] AS [LogProba], score_class_union.[Proba] AS [Proba], score_class_union.[Score] AS [Score], score_max.[KEY] AS [KEY], score_max.[Score_0] AS [Score_0], score_max.[Score_1] AS [Score_1], score_max.[Proba_0] AS [Proba_0], score_max.[Proba_1] AS [Proba_1], score_max.[LogProba_0] AS [LogProba_0], score_max.[LogProba_1] AS [LogProba_1], score_max.[Decision] AS [Decision], score_max.[DecisionProba] AS [DecisionProba], score_max.[KEY_m] AS [KEY_m], score_max.[max_Proba] AS [max_Proba] 
FROM score_class_union LEFT OUTER JOIN score_max ON score_class_union.[KEY_u] = score_max.[KEY]), 
arg_max_cte AS 
(SELECT score_max.[KEY] AS [KEY], score_max.[Score_0] AS [Score_0], score_max.[Score_1] AS [Score_1], score_max.[Proba_0] AS [Proba_0], score_max.[Proba_1] AS [Proba_1], score_max.[LogProba_0] AS [LogProba_0], score_max.[LogProba_1] AS [LogProba_1], score_max.[Decision] AS [Decision], score_max.[DecisionProba] AS [DecisionProba], score_max.[KEY_m] AS [KEY_m], score_max.[max_Proba] AS [max_Proba], [arg_max_t_Proba].[KEY_Proba] AS [KEY_Proba], [arg_max_t_Proba].[arg_max_Proba] AS [arg_max_Proba] 
FROM score_max LEFT OUTER JOIN (SELECT union_with_max.[KEY] AS [KEY_Proba], min(union_with_max.class) AS [arg_max_Proba] 
FROM union_with_max 
WHERE union_with_max.[max_Proba] <= union_with_max.[Proba] GROUP BY union_with_max.[KEY]) AS [arg_max_t_Proba] ON score_max.[KEY] = [arg_max_t_Proba].[KEY_Proba])
 SELECT arg_max_cte.[KEY] AS [KEY], arg_max_cte.[Score_0] AS [Score_0], arg_max_cte.[Score_1] AS [Score_1], arg_max_cte.[Proba_0] AS [Proba_0], arg_max_cte.[Proba_1] AS [Proba_1], CASE WHEN (arg_max_cte.[Proba_0] IS NULL OR arg_max_cte.[Proba_0] > 0.0) THEN log(arg_max_cte.[Proba_0]) ELSE -1.79769313486231e+308 END AS [LogProba_0], CASE WHEN (arg_max_cte.[Proba_1] IS NULL OR arg_max_cte.[Proba_1] > 0.0) THEN log(arg_max_cte.[Proba_1]) ELSE -1.79769313486231e+308 END AS [LogProba_1], arg_max_cte.[arg_max_Proba] AS [Decision], arg_max_cte.[max_Proba] AS [DecisionProba] 
FROM arg_max_cte