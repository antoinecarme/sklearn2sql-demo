-- This SQL code was generated by sklearn2sql (development version).
-- Copyright 2017

WITH [ADS_imp_1_OUT] AS 
(SELECT [ADS].[KEY] AS [KEY], CASE WHEN ([ADS].[Feature_0] IS NULL) THEN 43.7912812221 ELSE [ADS].[Feature_0] END AS imputer_output_2, CASE WHEN ([ADS].[Feature_1] IS NULL) THEN 945.967283308 ELSE [ADS].[Feature_1] END AS imputer_output_3, CASE WHEN ([ADS].[Feature_2] IS NULL) THEN 0.531000909998 ELSE [ADS].[Feature_2] END AS imputer_output_4, CASE WHEN ([ADS].[Feature_3] IS NULL) THEN 6.13996715205 ELSE [ADS].[Feature_3] END AS imputer_output_5 
FROM freidman3 AS [ADS]), 
[ADS_sca_2_OUT] AS 
(SELECT [ADS_imp_1_OUT].[KEY] AS [KEY], (CAST([ADS_imp_1_OUT].imputer_output_2 AS FLOAT) - 43.7912812221) / 26.0356235762 AS scaler_output_2, (CAST([ADS_imp_1_OUT].imputer_output_3 AS FLOAT) - 945.967283308) / 461.455276615 AS scaler_output_3, (CAST([ADS_imp_1_OUT].imputer_output_4 AS FLOAT) - 0.531000909998) / 0.290186328214 AS scaler_output_4, (CAST([ADS_imp_1_OUT].imputer_output_5 AS FLOAT) - 6.13996715205) / 3.07291724256 AS scaler_output_5 
FROM [ADS_imp_1_OUT]), 
[DT_node_lookup] AS 
(SELECT [ADS_sca_2_OUT].[KEY] AS [KEY], CASE WHEN ([ADS_sca_2_OUT].scaler_output_4 <= -1.6865601539611816) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_output_3 <= 1.0818819999694824) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_output_5 <= -0.14987096190452576) THEN 3 ELSE 4 END ELSE 5 END ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_output_4 <= -0.37393590807914734) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_output_2 <= 0.19635166227817535) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_output_2 <= -1.3463561534881592) THEN 9 ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_output_2 <= -1.1099023818969727) THEN 11 ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_output_3 <= 0.49332666397094727) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_output_2 <= -0.4112001657485962) THEN 14 ELSE 15 END ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_output_5 <= -0.2726577818393707) THEN 17 ELSE 18 END END END END ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_output_4 <= -1.360541820526123) THEN 20 ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_output_3 <= 0.32986393570899963) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_output_5 <= 0.06985825300216675) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_output_3 <= -0.7127169370651245) THEN 24 ELSE 25 END ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_output_4 <= -0.823421061038971) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_output_2 <= 0.8264346718788147) THEN 28 ELSE 29 END ELSE 30 END END ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_output_4 <= -1.1080100536346436) THEN 32 ELSE 33 END END END END ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_output_3 <= -1.4956881999969482) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_output_4 <= 1.1004490852355957) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_output_2 <= 0.5216177701950073) THEN 37 ELSE 38 END ELSE 39 END ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_output_3 <= -0.9236918687820435) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_output_2 <= 0.17494834959506989) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_output_4 <= 0.7450381517410278) THEN 43 ELSE 44 END ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_output_5 <= 0.7377939224243164) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_output_4 <= 0.07374501973390579) THEN 47 ELSE 48 END ELSE 49 END END ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_output_2 <= 0.18584853410720825) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_output_2 <= -0.8880466222763062) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_output_3 <= 1.0571516752243042) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_output_2 <= -1.3772780895233154) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_output_3 <= -0.26454776525497437) THEN 55 ELSE 56 END ELSE 57 END ELSE 58 END ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_output_3 <= -0.39177244901657104) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_output_2 <= -0.5244249105453491) THEN 61 ELSE 62 END ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_output_3 <= 0.9106614589691162) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_output_3 <= 0.35755085945129395) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_output_5 <= 0.8707916736602783) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_output_5 <= -1.084018588066101) THEN 67 ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_output_2 <= -0.6318921446800232) THEN 69 ELSE 70 END END ELSE 71 END ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_output_4 <= 0.3950406312942505) THEN 73 ELSE 74 END END ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_output_2 <= -0.06669343262910843) THEN 76 ELSE 77 END END END END ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_output_3 <= 1.052013635635376) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_output_3 <= -0.12360849976539612) THEN 80 ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_output_5 <= 1.4324640035629272) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_output_4 <= 0.6813516616821289) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_output_2 <= 0.6658321619033813) THEN 84 ELSE 85 END ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_output_5 <= 1.1903365850448608) THEN 87 ELSE 88 END END ELSE 89 END END ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_output_3 <= 1.3279410600662231) THEN 91 ELSE 92 END END END END END END END AS node_id_2 
FROM [ADS_sca_2_OUT]), 
[DT_node_data] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Estimator] AS [Estimator] 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 2 AS parent_id, 0.4848669214064692 AS [Estimator] UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 2 AS parent_id, 0.38342473185592096 AS [Estimator] UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 2 AS depth, 1 AS parent_id, 0.6100168381304848 AS [Estimator] UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 8 AS parent_id, 1.5543288470291443 AS [Estimator] UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 10 AS parent_id, 1.4092998433520778 AS [Estimator] UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 7 AS depth, 13 AS parent_id, 1.3687175770364277 AS [Estimator] UNION ALL SELECT 15 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 7 AS depth, 13 AS parent_id, 1.3678941404936502 AS [Estimator] UNION ALL SELECT 17 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 7 AS depth, 16 AS parent_id, 1.341344197483337 AS [Estimator] UNION ALL SELECT 18 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 7 AS depth, 16 AS parent_id, 1.350090108150775 AS [Estimator] UNION ALL SELECT 20 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 19 AS parent_id, 0.7050714675464733 AS [Estimator] UNION ALL SELECT 24 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 7 AS depth, 23 AS parent_id, 1.1156147639563705 AS [Estimator] UNION ALL SELECT 25 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 7 AS depth, 23 AS parent_id, 1.0818920012987259 AS [Estimator] UNION ALL SELECT 28 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 8 AS depth, 27 AS parent_id, 1.1968265037681187 AS [Estimator] UNION ALL SELECT 29 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 8 AS depth, 27 AS parent_id, 1.1082904037450438 AS [Estimator] UNION ALL SELECT 30 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 7 AS depth, 26 AS parent_id, 1.3498429932286293 AS [Estimator] UNION ALL SELECT 32 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 6 AS depth, 31 AS parent_id, 1.314325621172093 AS [Estimator] UNION ALL SELECT 33 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 6 AS depth, 31 AS parent_id, 1.3463614795691619 AS [Estimator] UNION ALL SELECT 37 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 36 AS parent_id, 1.1610071359052208 AS [Estimator] UNION ALL SELECT 38 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 36 AS parent_id, 1.1440564349145939 AS [Estimator] UNION ALL SELECT 39 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 35 AS parent_id, 1.278877589279357 AS [Estimator] UNION ALL SELECT 43 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 6 AS depth, 42 AS parent_id, 1.5696790399866454 AS [Estimator] UNION ALL SELECT 44 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 6 AS depth, 42 AS parent_id, 1.4608890093126605 AS [Estimator] UNION ALL SELECT 47 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 7 AS depth, 46 AS parent_id, 1.2794872288206998 AS [Estimator] UNION ALL SELECT 48 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 7 AS depth, 46 AS parent_id, 1.26722341655496 AS [Estimator] UNION ALL SELECT 49 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 6 AS depth, 45 AS parent_id, 1.3844945172080796 AS [Estimator] UNION ALL SELECT 55 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 9 AS depth, 54 AS parent_id, 1.570583991203967 AS [Estimator] UNION ALL SELECT 56 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 9 AS depth, 54 AS parent_id, 1.5644407243483047 AS [Estimator] UNION ALL SELECT 57 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 8 AS depth, 53 AS parent_id, 1.556101969927248 AS [Estimator] UNION ALL SELECT 58 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 7 AS depth, 52 AS parent_id, 1.54561918356505 AS [Estimator] UNION ALL SELECT 61 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 8 AS depth, 60 AS parent_id, 1.496561917506885 AS [Estimator] UNION ALL SELECT 62 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 8 AS depth, 60 AS parent_id, 1.4872578515104244 AS [Estimator] UNION ALL SELECT 67 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 11 AS depth, 66 AS parent_id, 1.5309500463495263 AS [Estimator] UNION ALL SELECT 69 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 12 AS depth, 68 AS parent_id, 1.534059281886407 AS [Estimator] UNION ALL SELECT 70 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 12 AS depth, 68 AS parent_id, 1.5352537026948319 AS [Estimator] UNION ALL SELECT 71 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 10 AS depth, 65 AS parent_id, 1.5248539791622286 AS [Estimator] UNION ALL SELECT 73 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 10 AS depth, 72 AS parent_id, 1.5278956973377713 AS [Estimator] UNION ALL SELECT 74 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 10 AS depth, 72 AS parent_id, 1.5218889384499552 AS [Estimator] UNION ALL SELECT 76 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 9 AS depth, 75 AS parent_id, 1.5439477557341774 AS [Estimator] UNION ALL SELECT 77 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 9 AS depth, 75 AS parent_id, 1.5374002322115805 AS [Estimator] UNION ALL SELECT 80 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 7 AS depth, 79 AS parent_id, 1.467648677980467 AS [Estimator] UNION ALL SELECT 84 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 10 AS depth, 83 AS parent_id, 1.484710993001392 AS [Estimator] UNION ALL SELECT 85 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 10 AS depth, 83 AS parent_id, 1.4860572646626233 AS [Estimator] UNION ALL SELECT 87 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 10 AS depth, 86 AS parent_id, 1.4949662645575934 AS [Estimator] UNION ALL SELECT 88 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 10 AS depth, 86 AS parent_id, 1.4929217934494698 AS [Estimator] UNION ALL SELECT 89 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 8 AS depth, 81 AS parent_id, 1.4783281269798374 AS [Estimator] UNION ALL SELECT 91 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 7 AS depth, 90 AS parent_id, 1.5032073896269296 AS [Estimator] UNION ALL SELECT 92 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 7 AS depth, 90 AS parent_id, 1.5126619620701551 AS [Estimator]) AS [Values]), 
[DT_Output] AS 
(SELECT [DT_node_lookup].[KEY] AS [KEY], [DT_node_lookup].node_id_2 AS node_id_2, [DT_node_data].node_id AS node_id, [DT_node_data].feature AS feature, [DT_node_data].threshold AS threshold, [DT_node_data].count AS count, [DT_node_data].depth AS depth, [DT_node_data].parent_id AS parent_id, [DT_node_data].[Estimator] AS [Estimator] 
FROM [DT_node_lookup] LEFT OUTER JOIN [DT_node_data] ON [DT_node_lookup].node_id_2 = [DT_node_data].node_id), 
[RF_Tree_0] AS 
(SELECT [DT_Output].[KEY] AS [KEY], [DT_Output].[Estimator] AS [Estimator] 
FROM [DT_Output]), 
[DT_node_lookup_1] AS 
(SELECT [ADS_sca_2_OUT].[KEY] AS [KEY], CASE WHEN ([ADS_sca_2_OUT].scaler_output_4 <= -1.7298851013183594) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_output_2 <= -0.6579667329788208) THEN 2 ELSE 3 END ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_output_4 <= -0.778099536895752) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_output_3 <= -0.9540339708328247) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_output_2 <= 0.0887349471449852) THEN 7 ELSE 8 END ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_output_3 <= 0.32986393570899963) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_output_2 <= 0.8264346718788147) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_output_3 <= -0.2286939173936844) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_output_2 <= -0.19000491499900818) THEN 13 ELSE 14 END ELSE 15 END ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_output_4 <= -0.8944588899612427) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_output_2 <= 1.673033356666565) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_output_4 <= -1.0379496812820435) THEN 19 ELSE 20 END ELSE 21 END ELSE 22 END END ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_output_2 <= -0.1256169080734253) THEN 24 ELSE 25 END END END ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_output_3 <= -0.9236918687820435) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_output_2 <= -0.567963719367981) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_output_5 <= 1.1626447439193726) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_output_5 <= -0.13076937198638916) THEN 30 ELSE 31 END ELSE 32 END ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_output_4 <= 1.4993480443954468) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_output_3 <= -1.5181928873062134) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_output_3 <= -1.5474199056625366) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_output_4 <= 0.6049727201461792) THEN 37 ELSE 38 END ELSE 39 END ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_output_5 <= 0.054462283849716187) THEN 41 ELSE 42 END END ELSE 43 END END ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_output_4 <= -0.4938386082649231) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_output_2 <= 0.07024127244949341) THEN 46 ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_output_4 <= -0.7070617079734802) THEN 48 ELSE 49 END END ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_output_2 <= 0.2522202730178833) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_output_3 <= -0.5624355673789978) THEN 52 ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_output_2 <= -1.188338041305542) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_output_2 <= -1.4371790885925293) THEN 55 ELSE 56 END ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_output_3 <= 1.1414363384246826) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_output_2 <= -0.6282318830490112) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_output_4 <= 0.1700807809829712) THEN 60 ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_output_3 <= 0.13299763202667236) THEN 62 ELSE 63 END END ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_output_5 <= 0.6576172113418579) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_output_2 <= 0.13620395958423615) THEN 66 ELSE 67 END ELSE 68 END END ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_output_3 <= 1.51060950756073) THEN 70 ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_output_5 <= 0.5970724821090698) THEN 72 ELSE 73 END END END END END ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_output_5 <= 1.070578932762146) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_output_4 <= 0.6092501878738403) THEN 76 ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_output_4 <= 1.5450408458709717) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_output_2 <= 1.207731008529663) THEN 79 ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_output_4 <= 1.3073654174804688) THEN 81 ELSE 82 END END ELSE 83 END END ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_output_5 <= 1.2882781028747559) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_output_2 <= 0.4890750050544739) THEN 86 ELSE 87 END ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_output_3 <= 0.0912780612707138) THEN 89 ELSE 90 END END END END END END END END AS node_id_2 
FROM [ADS_sca_2_OUT]), 
[DT_node_data_1] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Estimator] AS [Estimator] 
FROM (SELECT 2 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 2 AS depth, 1 AS parent_id, 0.6100168381304848 AS [Estimator] UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 2 AS depth, 1 AS parent_id, 0.38342473185592096 AS [Estimator] UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 6 AS parent_id, 0.8079109230317987 AS [Estimator] UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 6 AS parent_id, 0.7050714675464733 AS [Estimator] UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 7 AS depth, 12 AS parent_id, 1.1409162524546155 AS [Estimator] UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 7 AS depth, 12 AS parent_id, 1.1968265037681187 AS [Estimator] UNION ALL SELECT 15 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 6 AS depth, 11 AS parent_id, 1.3687175770364277 AS [Estimator] UNION ALL SELECT 19 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 8 AS depth, 18 AS parent_id, 1.1063441203172228 AS [Estimator] UNION ALL SELECT 20 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 8 AS depth, 18 AS parent_id, 1.1082904037450438 AS [Estimator] UNION ALL SELECT 21 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 7 AS depth, 17 AS parent_id, 1.0818920012987259 AS [Estimator] UNION ALL SELECT 22 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 6 AS depth, 16 AS parent_id, 1.1577860434316234 AS [Estimator] UNION ALL SELECT 24 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 23 AS parent_id, 1.4092998433520778 AS [Estimator] UNION ALL SELECT 25 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 23 AS parent_id, 1.3463614795691619 AS [Estimator] UNION ALL SELECT 30 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 6 AS depth, 29 AS parent_id, 1.410743936534041 AS [Estimator] UNION ALL SELECT 31 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 6 AS depth, 29 AS parent_id, 1.4518609404362353 AS [Estimator] UNION ALL SELECT 32 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 28 AS parent_id, 1.5359670902044162 AS [Estimator] UNION ALL SELECT 37 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 8 AS depth, 36 AS parent_id, 1.1610071359052208 AS [Estimator] UNION ALL SELECT 38 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 8 AS depth, 36 AS parent_id, 1.1440564349145939 AS [Estimator] UNION ALL SELECT 39 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 7 AS depth, 35 AS parent_id, 1.1156147639563705 AS [Estimator] UNION ALL SELECT 41 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 7 AS depth, 40 AS parent_id, 1.2791824090500283 AS [Estimator] UNION ALL SELECT 42 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 7 AS depth, 40 AS parent_id, 1.26722341655496 AS [Estimator] UNION ALL SELECT 43 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 33 AS parent_id, 1.4608890093126605 AS [Estimator] UNION ALL SELECT 46 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 45 AS parent_id, 1.4251802174855326 AS [Estimator] UNION ALL SELECT 48 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 6 AS depth, 47 AS parent_id, 1.3678941404936502 AS [Estimator] UNION ALL SELECT 49 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 6 AS depth, 47 AS parent_id, 1.3498429932286293 AS [Estimator] UNION ALL SELECT 52 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 6 AS depth, 51 AS parent_id, 1.4965619175068852 AS [Estimator] UNION ALL SELECT 55 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 8 AS depth, 54 AS parent_id, 1.5646091245855271 AS [Estimator] UNION ALL SELECT 56 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 8 AS depth, 54 AS parent_id, 1.5623228105763816 AS [Estimator] UNION ALL SELECT 60 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 10 AS depth, 59 AS parent_id, 1.541589567106448 AS [Estimator] UNION ALL SELECT 62 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 11 AS depth, 61 AS parent_id, 1.534059281886407 AS [Estimator] UNION ALL SELECT 63 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 11 AS depth, 61 AS parent_id, 1.5318155845359613 AS [Estimator] UNION ALL SELECT 66 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 11 AS depth, 65 AS parent_id, 1.5218889384499552 AS [Estimator] UNION ALL SELECT 67 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 11 AS depth, 65 AS parent_id, 1.521297715153797 AS [Estimator] UNION ALL SELECT 68 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 10 AS depth, 64 AS parent_id, 1.5248539791622286 AS [Estimator] UNION ALL SELECT 70 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 9 AS depth, 69 AS parent_id, 1.5374002322115805 AS [Estimator] UNION ALL SELECT 72 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 10 AS depth, 71 AS parent_id, 1.54561918356505 AS [Estimator] UNION ALL SELECT 73 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 10 AS depth, 71 AS parent_id, 1.5440465088777178 AS [Estimator] UNION ALL SELECT 76 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 7 AS depth, 75 AS parent_id, 1.5126619620701554 AS [Estimator] UNION ALL SELECT 79 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 9 AS depth, 78 AS parent_id, 1.5028235051542993 AS [Estimator] UNION ALL SELECT 81 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 10 AS depth, 80 AS parent_id, 1.4949662645575934 AS [Estimator] UNION ALL SELECT 82 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 10 AS depth, 80 AS parent_id, 1.4932233184960249 AS [Estimator] UNION ALL SELECT 83 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 8 AS depth, 77 AS parent_id, 1.5099001489420028 AS [Estimator] UNION ALL SELECT 86 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 8 AS depth, 85 AS parent_id, 1.467648677980467 AS [Estimator] UNION ALL SELECT 87 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 8 AS depth, 85 AS parent_id, 1.4642487267988717 AS [Estimator] UNION ALL SELECT 89 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 8 AS depth, 88 AS parent_id, 1.4783281269798374 AS [Estimator] UNION ALL SELECT 90 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 8 AS depth, 88 AS parent_id, 1.4860572646626233 AS [Estimator]) AS [Values]), 
[DT_Output_1] AS 
(SELECT [DT_node_lookup_1].[KEY] AS [KEY], [DT_node_lookup_1].node_id_2 AS node_id_2, [DT_node_data_1].node_id AS node_id, [DT_node_data_1].feature AS feature, [DT_node_data_1].threshold AS threshold, [DT_node_data_1].count AS count, [DT_node_data_1].depth AS depth, [DT_node_data_1].parent_id AS parent_id, [DT_node_data_1].[Estimator] AS [Estimator] 
FROM [DT_node_lookup_1] LEFT OUTER JOIN [DT_node_data_1] ON [DT_node_lookup_1].node_id_2 = [DT_node_data_1].node_id), 
[RF_Tree_1] AS 
(SELECT [DT_Output_1].[KEY] AS [KEY], [DT_Output_1].[Estimator] AS [Estimator] 
FROM [DT_Output_1]), 
[DT_node_lookup_2] AS 
(SELECT [ADS_sca_2_OUT].[KEY] AS [KEY], CASE WHEN ([ADS_sca_2_OUT].scaler_output_4 <= -1.3343552350997925) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_output_4 <= -1.5832271575927734) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_output_2 <= -0.15695497393608093) THEN 3 ELSE 4 END ELSE 5 END ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_output_3 <= -1.072701096534729) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_output_2 <= 0.040250442922115326) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_output_3 <= -1.765479326248169) THEN 9 ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_output_5 <= -1.3401830196380615) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_output_5 <= -1.4251958131790161) THEN 12 ELSE 13 END ELSE 14 END END ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_output_3 <= -1.5181928873062134) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_output_5 <= 0.07333740592002869) THEN 17 ELSE 18 END ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_output_2 <= 0.7340636253356934) THEN 20 ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_output_2 <= 1.0436431169509888) THEN 22 ELSE 23 END END END END ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_output_4 <= -0.5216202735900879) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_output_2 <= 1.2749183177947998) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_output_5 <= 0.802699089050293) THEN 27 ELSE 28 END ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_output_4 <= -1.1359039545059204) THEN 30 ELSE 31 END END ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_output_2 <= 0.26149412989616394) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_output_2 <= -1.3878793716430664) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_output_5 <= 0.25875338912010193) THEN 35 ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_output_3 <= -0.5515946745872498) THEN 37 ELSE 38 END END ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_output_5 <= -0.23910586535930634) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_output_2 <= -0.6771551370620728) THEN 41 ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_output_2 <= -0.02443060465157032) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_output_5 <= -0.5943354368209839) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_output_2 <= -0.35484689474105835) THEN 45 ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_output_5 <= -0.9225163459777832) THEN 47 ELSE 48 END END ELSE 49 END ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_output_5 <= -1.119491457939148) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_output_3 <= 0.7350868582725525) THEN 52 ELSE 53 END ELSE 54 END END END ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_output_5 <= 0.17552612721920013) THEN 56 ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_output_4 <= -0.257223516702652) THEN 58 ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_output_4 <= 0.2857843339443207) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_output_4 <= 0.007955357432365417) THEN 61 ELSE 62 END ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_output_4 <= 0.43903884291648865) THEN 64 ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_output_4 <= 0.7401810884475708) THEN 66 ELSE 67 END END END END END END END ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_output_3 <= -0.6153143644332886) THEN 69 ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_output_3 <= 0.09310385584831238) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_output_3 <= -0.1196240484714508) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_output_4 <= 0.8666970729827881) THEN 73 ELSE 74 END ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_output_5 <= 1.4066078662872314) THEN 76 ELSE 77 END END ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_output_4 <= 0.22938552498817444) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_output_4 <= -0.07951180636882782) THEN 80 ELSE 81 END ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_output_4 <= 1.5450408458709717) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_output_2 <= 1.207731008529663) THEN 84 ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_output_4 <= 1.3073654174804688) THEN 86 ELSE 87 END END ELSE 88 END END END END END END END END AS node_id_2 
FROM [ADS_sca_2_OUT]), 
[DT_node_data_2] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Estimator] AS [Estimator] 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 2 AS parent_id, 0.38342473185592096 AS [Estimator] UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 2 AS parent_id, 0.4848669214064692 AS [Estimator] UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 2 AS depth, 1 AS parent_id, 0.7050714675464733 AS [Estimator] UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 8 AS parent_id, 1.5359670902044162 AS [Estimator] UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 6 AS depth, 11 AS parent_id, 1.4608890093126605 AS [Estimator] UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 6 AS depth, 11 AS parent_id, 1.410743936534041 AS [Estimator] UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 10 AS parent_id, 1.1610071359052208 AS [Estimator] UNION ALL SELECT 17 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 16 AS parent_id, 1.1156147639563705 AS [Estimator] UNION ALL SELECT 18 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 16 AS parent_id, 1.1440564349145939 AS [Estimator] UNION ALL SELECT 20 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 19 AS parent_id, 1.3844945172080796 AS [Estimator] UNION ALL SELECT 22 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 6 AS depth, 21 AS parent_id, 1.278877589279357 AS [Estimator] UNION ALL SELECT 23 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 6 AS depth, 21 AS parent_id, 1.26722341655496 AS [Estimator] UNION ALL SELECT 27 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 26 AS parent_id, 1.3498429932286293 AS [Estimator] UNION ALL SELECT 28 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 26 AS parent_id, 1.536711230505171 AS [Estimator] UNION ALL SELECT 30 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 29 AS parent_id, 1.0818920012987259 AS [Estimator] UNION ALL SELECT 31 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 29 AS parent_id, 1.1063441203172228 AS [Estimator] UNION ALL SELECT 35 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 6 AS depth, 34 AS parent_id, 1.5642723241110825 AS [Estimator] UNION ALL SELECT 37 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 7 AS depth, 36 AS parent_id, 1.570583991203967 AS [Estimator] UNION ALL SELECT 38 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 7 AS depth, 36 AS parent_id, 1.5684866939082733 AS [Estimator] UNION ALL SELECT 41 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 7 AS depth, 40 AS parent_id, 1.496561917506885 AS [Estimator] UNION ALL SELECT 45 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 10 AS depth, 44 AS parent_id, 1.5352537026948319 AS [Estimator] UNION ALL SELECT 47 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 11 AS depth, 46 AS parent_id, 1.5309500463495263 AS [Estimator] UNION ALL SELECT 48 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 11 AS depth, 46 AS parent_id, 1.5325692862833142 AS [Estimator] UNION ALL SELECT 49 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 9 AS depth, 43 AS parent_id, 1.5278956973377713 AS [Estimator] UNION ALL SELECT 52 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 10 AS depth, 51 AS parent_id, 1.5220836338497605 AS [Estimator] UNION ALL SELECT 53 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 10 AS depth, 51 AS parent_id, 1.521297715153797 AS [Estimator] UNION ALL SELECT 54 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 9 AS depth, 50 AS parent_id, 1.50778906671016 AS [Estimator] UNION ALL SELECT 56 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 7 AS depth, 55 AS parent_id, 1.5623228105763816 AS [Estimator] UNION ALL SELECT 58 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 8 AS depth, 57 AS parent_id, 1.5278745466047203 AS [Estimator] UNION ALL SELECT 61 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 10 AS depth, 60 AS parent_id, 1.54561918356505 AS [Estimator] UNION ALL SELECT 62 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 10 AS depth, 60 AS parent_id, 1.541589567106448 AS [Estimator] UNION ALL SELECT 64 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 10 AS depth, 63 AS parent_id, 1.5248539791622286 AS [Estimator] UNION ALL SELECT 66 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 11 AS depth, 65 AS parent_id, 1.534059281886407 AS [Estimator] UNION ALL SELECT 67 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 11 AS depth, 65 AS parent_id, 1.5374002322115805 AS [Estimator] UNION ALL SELECT 69 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 68 AS parent_id, 1.2794872288206998 AS [Estimator] UNION ALL SELECT 73 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 8 AS depth, 72 AS parent_id, 1.4642487267988717 AS [Estimator] UNION ALL SELECT 74 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 8 AS depth, 72 AS parent_id, 1.4670826204003844 AS [Estimator] UNION ALL SELECT 76 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 8 AS depth, 75 AS parent_id, 1.4929217934494698 AS [Estimator] UNION ALL SELECT 77 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 8 AS depth, 75 AS parent_id, 1.4783281269798374 AS [Estimator] UNION ALL SELECT 80 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 8 AS depth, 79 AS parent_id, 1.4719390289797578 AS [Estimator] UNION ALL SELECT 81 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 8 AS depth, 79 AS parent_id, 1.484710993001392 AS [Estimator] UNION ALL SELECT 84 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 9 AS depth, 83 AS parent_id, 1.5030538358378773 AS [Estimator] UNION ALL SELECT 86 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 10 AS depth, 85 AS parent_id, 1.4949662645575934 AS [Estimator] UNION ALL SELECT 87 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 10 AS depth, 85 AS parent_id, 1.4932233184960249 AS [Estimator] UNION ALL SELECT 88 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 8 AS depth, 82 AS parent_id, 1.5099001489420028 AS [Estimator]) AS [Values]), 
[DT_Output_2] AS 
(SELECT [DT_node_lookup_2].[KEY] AS [KEY], [DT_node_lookup_2].node_id_2 AS node_id_2, [DT_node_data_2].node_id AS node_id, [DT_node_data_2].feature AS feature, [DT_node_data_2].threshold AS threshold, [DT_node_data_2].count AS count, [DT_node_data_2].depth AS depth, [DT_node_data_2].parent_id AS parent_id, [DT_node_data_2].[Estimator] AS [Estimator] 
FROM [DT_node_lookup_2] LEFT OUTER JOIN [DT_node_data_2] ON [DT_node_lookup_2].node_id_2 = [DT_node_data_2].node_id), 
[RF_Tree_2] AS 
(SELECT [DT_Output_2].[KEY] AS [KEY], [DT_Output_2].[Estimator] AS [Estimator] 
FROM [DT_Output_2]), 
[DT_node_lookup_3] AS 
(SELECT [ADS_sca_2_OUT].[KEY] AS [KEY], CASE WHEN ([ADS_sca_2_OUT].scaler_output_4 <= -1.360541820526123) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_output_4 <= -1.7298851013183594) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_output_5 <= -0.3222903907299042) THEN 3 ELSE 4 END ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_output_3 <= -0.9296590089797974) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_output_4 <= -1.4776207208633423) THEN 7 ELSE 8 END ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_output_3 <= 0.20885485410690308) THEN 10 ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_output_5 <= -0.6441354751586914) THEN 12 ELSE 13 END END END END ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_output_2 <= 1.238775610923767) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_output_3 <= -1.4956881999969482) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_output_2 <= -0.6530774235725403) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_output_4 <= -0.019264429807662964) THEN 18 ELSE 19 END ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_output_4 <= 0.8984425663948059) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_output_2 <= 0.0012792721390724182) THEN 22 ELSE 23 END ELSE 24 END END ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_output_4 <= -0.9403092861175537) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_output_5 <= -0.4165307879447937) THEN 27 ELSE 28 END ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_output_2 <= -0.15516799688339233) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_output_5 <= -1.3374958038330078) THEN 31 ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_output_2 <= -1.093891978263855) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_output_4 <= -0.2431742399930954) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_output_5 <= -0.2511811852455139) THEN 35 ELSE 36 END ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_output_5 <= 0.3395090103149414) THEN 38 ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_output_2 <= -1.6453442573547363) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_output_3 <= -1.1564879417419434) THEN 41 ELSE 42 END ELSE 43 END END END ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_output_3 <= -0.39177244901657104) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_output_4 <= 0.3445228934288025) THEN 46 ELSE 47 END ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_output_3 <= 0.579698383808136) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_output_4 <= 0.43903884291648865) THEN 50 ELSE 51 END ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_output_5 <= 0.016523748636245728) THEN 53 ELSE 54 END END END END END ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_output_3 <= -0.27114999294281006) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_output_2 <= 0.01613243669271469) THEN 57 ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_output_4 <= 0.1498398780822754) THEN 59 ELSE 60 END END ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_output_3 <= 0.25954669713974) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_output_2 <= 0.31113868951797485) THEN 63 ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_output_2 <= 0.8529378771781921) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_output_2 <= 0.5178178548812866) THEN 66 ELSE 67 END ELSE 68 END END ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_output_2 <= 0.5117313861846924) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_output_3 <= 1.1634111404418945) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_output_4 <= 1.1670985221862793) THEN 72 ELSE 73 END ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_output_2 <= 0.1994251310825348) THEN 75 ELSE 76 END END ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_output_5 <= -1.1946587562561035) THEN 78 ELSE 79 END END END END END END END ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_output_5 <= -0.6062601208686829) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_output_5 <= -1.091903567314148) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_output_2 <= 2.0901739597320557) THEN 83 ELSE 84 END ELSE 85 END ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_output_4 <= 0.5518082976341248) THEN 87 ELSE 88 END END END END AS node_id_2 
FROM [ADS_sca_2_OUT]), 
[DT_node_data_3] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Estimator] AS [Estimator] 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 2 AS parent_id, 0.6100168381304848 AS [Estimator] UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 2 AS parent_id, 0.38342473185592096 AS [Estimator] UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 6 AS parent_id, 0.8079109230317987 AS [Estimator] UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 6 AS parent_id, 0.7050714675464733 AS [Estimator] UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 9 AS parent_id, 1.1409162524546155 AS [Estimator] UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 11 AS parent_id, 1.4092998433520778 AS [Estimator] UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 11 AS parent_id, 1.350090108150775 AS [Estimator] UNION ALL SELECT 18 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 17 AS parent_id, 1.5359670902044162 AS [Estimator] UNION ALL SELECT 19 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 17 AS parent_id, 1.4518609404362353 AS [Estimator] UNION ALL SELECT 22 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 6 AS depth, 21 AS parent_id, 1.1610071359052208 AS [Estimator] UNION ALL SELECT 23 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 6 AS depth, 21 AS parent_id, 1.1156147639563705 AS [Estimator] UNION ALL SELECT 24 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 20 AS parent_id, 1.278877589279357 AS [Estimator] UNION ALL SELECT 27 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 26 AS parent_id, 1.314325621172093 AS [Estimator] UNION ALL SELECT 28 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 26 AS parent_id, 1.3463614795691619 AS [Estimator] UNION ALL SELECT 31 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 6 AS depth, 30 AS parent_id, 1.410743936534041 AS [Estimator] UNION ALL SELECT 35 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 9 AS depth, 34 AS parent_id, 1.5543288470291443 AS [Estimator] UNION ALL SELECT 36 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 9 AS depth, 34 AS parent_id, 1.5278745466047203 AS [Estimator] UNION ALL SELECT 38 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 9 AS depth, 37 AS parent_id, 1.5623228105763816 AS [Estimator] UNION ALL SELECT 41 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 11 AS depth, 40 AS parent_id, 1.5696790399866454 AS [Estimator] UNION ALL SELECT 42 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 11 AS depth, 40 AS parent_id, 1.570583991203967 AS [Estimator] UNION ALL SELECT 43 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 10 AS depth, 39 AS parent_id, 1.5684866939082733 AS [Estimator] UNION ALL SELECT 46 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 9 AS depth, 45 AS parent_id, 1.4872578515104244 AS [Estimator] UNION ALL SELECT 47 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 9 AS depth, 45 AS parent_id, 1.4965619175068852 AS [Estimator] UNION ALL SELECT 50 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 10 AS depth, 49 AS parent_id, 1.5248539791622286 AS [Estimator] UNION ALL SELECT 51 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 10 AS depth, 49 AS parent_id, 1.534059281886407 AS [Estimator] UNION ALL SELECT 53 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 10 AS depth, 52 AS parent_id, 1.5325692862833142 AS [Estimator] UNION ALL SELECT 54 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 10 AS depth, 52 AS parent_id, 1.5438687532193451 AS [Estimator] UNION ALL SELECT 57 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 7 AS depth, 56 AS parent_id, 1.4608890093126605 AS [Estimator] UNION ALL SELECT 59 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 8 AS depth, 58 AS parent_id, 1.3678941404936502 AS [Estimator] UNION ALL SELECT 60 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 8 AS depth, 58 AS parent_id, 1.3844945172080796 AS [Estimator] UNION ALL SELECT 63 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 8 AS depth, 62 AS parent_id, 1.467648677980467 AS [Estimator] UNION ALL SELECT 66 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 10 AS depth, 65 AS parent_id, 1.4929217934494698 AS [Estimator] UNION ALL SELECT 67 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 10 AS depth, 65 AS parent_id, 1.4860572646626233 AS [Estimator] UNION ALL SELECT 68 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 9 AS depth, 64 AS parent_id, 1.4783281269798374 AS [Estimator] UNION ALL SELECT 72 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 10 AS depth, 71 AS parent_id, 1.5214298911192479 AS [Estimator] UNION ALL SELECT 73 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 10 AS depth, 71 AS parent_id, 1.5309500463495263 AS [Estimator] UNION ALL SELECT 75 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 10 AS depth, 74 AS parent_id, 1.50778906671016 AS [Estimator] UNION ALL SELECT 76 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 10 AS depth, 74 AS parent_id, 1.5126619620701551 AS [Estimator] UNION ALL SELECT 78 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 9 AS depth, 77 AS parent_id, 1.5032073896269296 AS [Estimator] UNION ALL SELECT 79 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 9 AS depth, 77 AS parent_id, 1.484710993001392 AS [Estimator] UNION ALL SELECT 83 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 82 AS parent_id, 1.0818920012987259 AS [Estimator] UNION ALL SELECT 84 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 82 AS parent_id, 1.0274843519223331 AS [Estimator] UNION ALL SELECT 85 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 81 AS parent_id, 1.1577860434316234 AS [Estimator] UNION ALL SELECT 87 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 86 AS parent_id, 1.2794872288206998 AS [Estimator] UNION ALL SELECT 88 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 86 AS parent_id, 1.4949662645575934 AS [Estimator]) AS [Values]), 
[DT_Output_3] AS 
(SELECT [DT_node_lookup_3].[KEY] AS [KEY], [DT_node_lookup_3].node_id_2 AS node_id_2, [DT_node_data_3].node_id AS node_id, [DT_node_data_3].feature AS feature, [DT_node_data_3].threshold AS threshold, [DT_node_data_3].count AS count, [DT_node_data_3].depth AS depth, [DT_node_data_3].parent_id AS parent_id, [DT_node_data_3].[Estimator] AS [Estimator] 
FROM [DT_node_lookup_3] LEFT OUTER JOIN [DT_node_data_3] ON [DT_node_lookup_3].node_id_2 = [DT_node_data_3].node_id), 
[RF_Tree_3] AS 
(SELECT [DT_Output_3].[KEY] AS [KEY], [DT_Output_3].[Estimator] AS [Estimator] 
FROM [DT_Output_3]), 
[Score_Union_CTE] AS 
(SELECT ensemble_score_union.[KEY] AS [KEY], ensemble_score_union.[Estimator] AS [Estimator] 
FROM (SELECT [RF_Tree_0].[KEY] AS [KEY], [RF_Tree_0].[Estimator] AS [Estimator] 
FROM [RF_Tree_0] UNION ALL SELECT [RF_Tree_1].[KEY] AS [KEY], [RF_Tree_1].[Estimator] AS [Estimator] 
FROM [RF_Tree_1] UNION ALL SELECT [RF_Tree_2].[KEY] AS [KEY], [RF_Tree_2].[Estimator] AS [Estimator] 
FROM [RF_Tree_2] UNION ALL SELECT [RF_Tree_3].[KEY] AS [KEY], [RF_Tree_3].[Estimator] AS [Estimator] 
FROM [RF_Tree_3]) AS ensemble_score_union), 
[RF_AVG_Scores] AS 
(SELECT [T].[KEY] AS [KEY], [T].[Estimator] AS [Estimator] 
FROM (SELECT [Score_Union_CTE].[KEY] AS [KEY], avg([Score_Union_CTE].[Estimator]) AS [Estimator] 
FROM [Score_Union_CTE] GROUP BY [Score_Union_CTE].[KEY]) AS [T])
 SELECT [RF_AVG_Scores].[KEY] AS [KEY], [RF_AVG_Scores].[Estimator] AS [Estimator] 
FROM [RF_AVG_Scores]