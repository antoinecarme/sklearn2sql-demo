-- This SQL code was generated by sklearn2sql (development version).
-- Copyright 2017

WITH `ADS_imp_1_OUT` AS 
(SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_0` IS NULL) THEN 0.000268693206665 ELSE `ADS`.`Feature_0` END AS impter_2, CASE WHEN (`ADS`.`Feature_1` IS NULL) THEN 0.000723958058064 ELSE `ADS`.`Feature_1` END AS impter_3, CASE WHEN (`ADS`.`Feature_2` IS NULL) THEN 0.000728071982559 ELSE `ADS`.`Feature_2` END AS impter_4, CASE WHEN (`ADS`.`Feature_3` IS NULL) THEN 0.00101356522108 ELSE `ADS`.`Feature_3` END AS impter_5, CASE WHEN (`ADS`.`Feature_4` IS NULL) THEN 0.000976358073288 ELSE `ADS`.`Feature_4` END AS impter_6, CASE WHEN (`ADS`.`Feature_5` IS NULL) THEN 0.00176438082423 ELSE `ADS`.`Feature_5` END AS impter_7, CASE WHEN (`ADS`.`Feature_6` IS NULL) THEN -0.00165128154506 ELSE `ADS`.`Feature_6` END AS impter_8, CASE WHEN (`ADS`.`Feature_7` IS NULL) THEN 0.00139055019834 ELSE `ADS`.`Feature_7` END AS impter_9, CASE WHEN (`ADS`.`Feature_8` IS NULL) THEN 0.00127264825481 ELSE `ADS`.`Feature_8` END AS impter_10, CASE WHEN (`ADS`.`Feature_9` IS NULL) THEN 0.00103442500568 ELSE `ADS`.`Feature_9` END AS impter_11 
FROM diabetes AS `ADS`), 
`ADS_sca_2_OUT` AS 
(SELECT `ADS_imp_1_OUT`.`KEY` AS `KEY`, (CAST(`ADS_imp_1_OUT`.impter_2 AS DOUBLE) - 0.000268693206665) / 0.0472420958365 AS scaler_2, (CAST(`ADS_imp_1_OUT`.impter_3 AS DOUBLE) - 0.000723958058064) / 0.047605576685 AS scaler_3, (CAST(`ADS_imp_1_OUT`.impter_4 AS DOUBLE) - 0.000728071982559) / 0.0469359114394 AS scaler_4, (CAST(`ADS_imp_1_OUT`.impter_5 AS DOUBLE) - 0.00101356522108) / 0.048335271949 AS scaler_5, (CAST(`ADS_imp_1_OUT`.impter_6 AS DOUBLE) - 0.000976358073288) / 0.0480507620097 AS scaler_6, (CAST(`ADS_imp_1_OUT`.impter_7 AS DOUBLE) - 0.00176438082423) / 0.0480608087315 AS scaler_7, (CAST(`ADS_imp_1_OUT`.impter_8 AS DOUBLE) - -0.00165128154506) / 0.0462024037804 AS scaler_8, (CAST(`ADS_imp_1_OUT`.impter_9 AS DOUBLE) - 0.00139055019834) / 0.0473630930405 AS scaler_9, (CAST(`ADS_imp_1_OUT`.impter_10 AS DOUBLE) - 0.00127264825481) / 0.0458928613136 AS scaler_10, (CAST(`ADS_imp_1_OUT`.impter_11 AS DOUBLE) - 0.00103442500568) / 0.0477615851957 AS scaler_11 
FROM `ADS_imp_1_OUT`), 
linear_model_cte AS 
(SELECT `ADS_sca_2_OUT`.`KEY` AS `KEY`, -0.6079395648662999 * `ADS_sca_2_OUT`.scaler_2 + -10.876895255552196 * `ADS_sca_2_OUT`.scaler_3 + 23.789968160154114 * `ADS_sca_2_OUT`.scaler_4 + 14.807141589954835 * `ADS_sca_2_OUT`.scaler_5 + -11.736389468352947 * `ADS_sca_2_OUT`.scaler_6 + 1.8416063430142193 * `ADS_sca_2_OUT`.scaler_7 + -8.652930577312823 * `ADS_sca_2_OUT`.scaler_8 + 3.0102356703739828 * `ADS_sca_2_OUT`.scaler_9 + 26.15109157565191 * `ADS_sca_2_OUT`.scaler_10 + 4.022578178122655 * `ADS_sca_2_OUT`.scaler_11 + 154.073654391 AS `Estimator` 
FROM `ADS_sca_2_OUT`)
 SELECT linear_model_cte.`KEY` AS `KEY`, linear_model_cte.`Estimator` AS `Estimator` 
FROM linear_model_cte