-- This SQL code was generated by sklearn2sql (development version).
-- Copyright 2017

WITH "ADS_imp_1_OUT" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_0" IS NULL) THEN 43.7912812221 ELSE "ADS"."Feature_0" END AS imputer_output_2, CASE WHEN ("ADS"."Feature_1" IS NULL) THEN 945.967283308 ELSE "ADS"."Feature_1" END AS imputer_output_3, CASE WHEN ("ADS"."Feature_2" IS NULL) THEN 0.531000909998 ELSE "ADS"."Feature_2" END AS imputer_output_4, CASE WHEN ("ADS"."Feature_3" IS NULL) THEN 6.13996715205 ELSE "ADS"."Feature_3" END AS imputer_output_5 
FROM freidman3 AS "ADS"), 
"ADS_sca_2_OUT" AS 
(SELECT "ADS_imp_1_OUT"."KEY" AS "KEY", (CAST("ADS_imp_1_OUT".imputer_output_2 AS DOUBLE) - 43.7912812221) / 26.0356235762 AS scaler_output_2, (CAST("ADS_imp_1_OUT".imputer_output_3 AS DOUBLE) - 945.967283308) / 461.455276615 AS scaler_output_3, (CAST("ADS_imp_1_OUT".imputer_output_4 AS DOUBLE) - 0.531000909998) / 0.290186328214 AS scaler_output_4, (CAST("ADS_imp_1_OUT".imputer_output_5 AS DOUBLE) - 6.13996715205) / 3.07291724256 AS scaler_output_5 
FROM "ADS_imp_1_OUT"), 
"SV_data" AS 
(SELECT "Values".sv_idx AS sv_idx, "Values".dual_coeff AS dual_coeff, "Values".sv_0 AS sv_0, "Values".sv_1 AS sv_1, "Values".sv_2 AS sv_2, "Values".sv_3 AS sv_3 
FROM (SELECT 0 AS sv_idx, -1.0 AS dual_coeff, -0.128629540717 AS sv_0, -0.855762437264 AS sv_1, -1.69662769281 AS sv_2, -0.508276249019 AS sv_3 FROM SYSIBM.SYSDUMMY1 UNION ALL SELECT 1 AS sv_idx, 0.248078558493 AS dual_coeff, 0.177282909525 AS sv_0, 1.48454445915 AS sv_1, -1.39197340374 AS sv_2, -0.611167833969 AS sv_3 FROM SYSIBM.SYSDUMMY1 UNION ALL SELECT 2 AS sv_idx, -0.218488166988 AS dual_coeff, -0.212861866159 AS sv_0, -1.75545003257 AS sv_1, 0.402966247472 AS sv_2, -1.28884231269 AS sv_3 FROM SYSIBM.SYSDUMMY1 UNION ALL SELECT 3 AS sv_idx, 0.0152339990027 AS dual_coeff, 0.48763258833 AS sv_0, 0.730080318016 AS sv_1, -1.25125684601 AS sv_2, -0.477942828261 AS sv_3 FROM SYSIBM.SYSDUMMY1 UNION ALL SELECT 4 AS sv_idx, -0.0115788473181 AS dual_coeff, 0.262295051032 AS sv_0, -1.1564362267 AS sv_1, -1.46982670777 AS sv_2, -1.05911964092 AS sv_3 FROM SYSIBM.SYSDUMMY1 UNION ALL SELECT 5 AS sv_idx, -0.167912714039 AS dual_coeff, 2.1576338377 AS sv_0, -1.59602664056 AS sv_1, 0.893240945805 AS sv_2, -1.41158085802 AS sv_3 FROM SYSIBM.SYSDUMMY1 UNION ALL SELECT 6 AS sv_idx, -1.0 AS dual_coeff, 0.734401135309 AS sv_0, -1.06127956907 AS sv_1, -1.64272067073 AS sv_2, 1.28389871222 AS sv_3 FROM SYSIBM.SYSDUMMY1 UNION ALL SELECT 7 AS sv_idx, -1.0 AS dual_coeff, -0.185280428471 AS sv_0, 0.469948210657 AS sv_1, -1.78327789484 AS sv_2, 0.208534293223 AS sv_3 FROM SYSIBM.SYSDUMMY1 UNION ALL SELECT 8 AS sv_idx, 1.0 AS dual_coeff, 0.686982566522 AS sv_0, -0.273885133964 AS sv_1, -1.16903701041 AS sv_2, 0.760063927882 AS sv_3 FROM SYSIBM.SYSDUMMY1 UNION ALL SELECT 9 AS sv_idx, -1.0 AS dual_coeff, -1.13065301819 AS sv_0, 1.69381585959 AS sv_1, -1.80984919327 AS sv_2, -0.853115053658 AS sv_3 FROM SYSIBM.SYSDUMMY1 UNION ALL SELECT 10 AS sv_idx, 0.113289616341 AS dual_coeff, -0.134919529538 AS sv_0, -1.25635360139 AS sv_1, 1.60477723753 AS sv_2, -1.45886786611 AS sv_3 FROM SYSIBM.SYSDUMMY1 UNION ALL SELECT 11 AS sv_idx, 0.108950345201 AS dual_coeff, -1.67742939216 AS sv_0, -0.836641293061 AS sv_1, 1.60099513863 AS sv_2, 0.728810958541 AS sv_3 FROM SYSIBM.SYSDUMMY1 UNION ALL SELECT 12 AS sv_idx, 0.0127923686833 AS dual_coeff, -1.30387013822 AS sv_0, 1.50822777171 AS sv_1, 0.608346026197 AS sv_2, -0.049792963322 AS sv_3 FROM SYSIBM.SYSDUMMY1 UNION ALL SELECT 13 AS sv_idx, -0.100280747825 AS dual_coeff, 2.02271403018 AS sv_0, 0.0959099414766 AS sv_1, -1.19888375774 AS sv_2, -1.62902873414 AS sv_3 FROM SYSIBM.SYSDUMMY1 UNION ALL SELECT 14 AS sv_idx, 0.105819175437 AS dual_coeff, -0.175416482535 AS sv_0, 1.15735797947 AS sv_1, 1.54607764351 AS sv_2, 1.56148404528 AS sv_3 FROM SYSIBM.SYSDUMMY1 UNION ALL SELECT 15 AS sv_idx, 0.743940145292 AS dual_coeff, -1.22412463621 AS sv_0, 1.51279511994 AS sv_1, -1.67649247371 AS sv_2, -1.3541232355 AS sv_3 FROM SYSIBM.SYSDUMMY1 UNION ALL SELECT 16 AS sv_idx, 0.110697947601 AS dual_coeff, 0.965886790803 AS sv_0, -0.801196219905 AS sv_1, -1.00297517992 AS sv_2, 0.535944005147 AS sv_3 FROM SYSIBM.SYSDUMMY1 UNION ALL SELECT 17 AS sv_idx, 0.433992883383 AS dual_coeff, -0.995680004241 AS sv_0, 1.17015597645 AS sv_1, -1.64516764329 AS sv_2, 0.0658522804904 AS sv_3 FROM SYSIBM.SYSDUMMY1 UNION ALL SELECT 18 AS sv_idx, 0.151080505992 AS dual_coeff, -1.62428028939 AS sv_0, -1.77550865324 AS sv_1, -0.656813160988 AS sv_2, 1.19530454433 AS sv_3 FROM SYSIBM.SYSDUMMY1 UNION ALL SELECT 19 AS sv_idx, 0.0063718044889 AS dual_coeff, 1.76685310615 AS sv_0, 0.968758462467 AS sv_1, 1.09385107569 AS sv_2, 1.04446846508 AS sv_3 FROM SYSIBM.SYSDUMMY1 UNION ALL SELECT 20 AS sv_idx, 0.120550179081 AS dual_coeff, 1.31521185637 AS sv_0, 0.187476481877 AS sv_1, 1.52087960661 AS sv_2, -1.59767560417 AS sv_3 FROM SYSIBM.SYSDUMMY1 UNION ALL SELECT 21 AS sv_idx, 0.317361565443 AS dual_coeff, 0.167184401745 AS sv_0, -0.400704478748 AS sv_1, -0.770256515183 AS sv_2, -1.62350514937 AS sv_3 FROM SYSIBM.SYSDUMMY1 UNION ALL SELECT 22 AS sv_idx, 0.190913640039 AS dual_coeff, -0.923065553672 AS sv_0, -1.46005758822 AS sv_1, -0.280397076082 AS sv_2, -1.39152376263 AS sv_3 FROM SYSIBM.SYSDUMMY1 UNION ALL SELECT 23 AS sv_idx, 0.819187741693 AS dual_coeff, -0.989584739618 AS sv_0, -0.183502704495 AS sv_1, -1.47781135951 AS sv_2, 0.214294088728 AS sv_3 FROM SYSIBM.SYSDUMMY1) AS "Values"), 
kernel_dp AS 
(SELECT t."KEY" AS "KEY", t.dot_product AS dot_product 
FROM (SELECT full_join_data_sv."KEY" AS "KEY", sum(full_join_data_sv.dot_prod1) + 1.24307898073 AS dot_product 
FROM (SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", "SV_data".dual_coeff * exp(CASE WHEN (CASE WHEN (-0.25 * (power("ADS_sca_2_OUT".scaler_output_2 - "SV_data".sv_0, 2) + power("ADS_sca_2_OUT".scaler_output_3 - "SV_data".sv_1, 2) + power("ADS_sca_2_OUT".scaler_output_4 - "SV_data".sv_2, 2) + power("ADS_sca_2_OUT".scaler_output_5 - "SV_data".sv_3, 2)) <= -100.0) THEN -100.0 ELSE -0.25 * (power("ADS_sca_2_OUT".scaler_output_2 - "SV_data".sv_0, 2) + power("ADS_sca_2_OUT".scaler_output_3 - "SV_data".sv_1, 2) + power("ADS_sca_2_OUT".scaler_output_4 - "SV_data".sv_2, 2) + power("ADS_sca_2_OUT".scaler_output_5 - "SV_data".sv_3, 2)) END >= 100.0) THEN 100.0 ELSE CASE WHEN (-0.25 * (power("ADS_sca_2_OUT".scaler_output_2 - "SV_data".sv_0, 2) + power("ADS_sca_2_OUT".scaler_output_3 - "SV_data".sv_1, 2) + power("ADS_sca_2_OUT".scaler_output_4 - "SV_data".sv_2, 2) + power("ADS_sca_2_OUT".scaler_output_5 - "SV_data".sv_3, 2)) <= -100.0) THEN -100.0 ELSE -0.25 * (power("ADS_sca_2_OUT".scaler_output_2 - "SV_data".sv_0, 2) + power("ADS_sca_2_OUT".scaler_output_3 - "SV_data".sv_1, 2) + power("ADS_sca_2_OUT".scaler_output_4 - "SV_data".sv_2, 2) + power("ADS_sca_2_OUT".scaler_output_5 - "SV_data".sv_3, 2)) END END) AS dot_prod1 
FROM "ADS_sca_2_OUT", "SV_data") AS full_join_data_sv GROUP BY full_join_data_sv."KEY") AS t)
 SELECT kernel_dp."KEY" AS "KEY", kernel_dp.dot_product AS "Estimator" 
FROM kernel_dp