-- This SQL code was generated by sklearn2sql (development version).
-- Copyright 2017

WITH `Score_Union_CTE_0` AS 
(WITH `DT_node_lookup` AS 
(SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_36` < 0.5) THEN CASE WHEN (`ADS`.`Feature_28` < 4.5) THEN 3 ELSE 4 END ELSE CASE WHEN (`ADS`.`Feature_36` < 3.5) THEN 5 ELSE 6 END END AS node_id_2 
FROM digits AS `ADS`), 
`DT_node_data` AS 
(SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, 1 AS parent_id, 0.42500001192092896 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, 1 AS parent_id, -0.05141580104827881 AS `Score` UNION ALL SELECT 5 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, 2 AS parent_id, -0.02562418021261692 AS `Score` UNION ALL SELECT 6 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, 2 AS parent_id, -0.055285897105932236 AS `Score`) AS `Values`), 
`DT_Output` AS 
(SELECT `DT_node_lookup`.`KEY` AS `KEY`, `DT_node_lookup`.node_id_2 AS node_id_2, `DT_node_data`.node_id AS node_id, `DT_node_data`.feature AS feature, `DT_node_data`.threshold AS threshold, `DT_node_data`.depth AS depth, `DT_node_data`.parent_id AS parent_id, `DT_node_data`.`Score` AS `Score` 
FROM `DT_node_lookup` LEFT OUTER JOIN `DT_node_data` ON `DT_node_lookup`.node_id_2 = `DT_node_data`.node_id), 
`XGB_Tree_0_0` AS 
(SELECT `DT_Output`.`KEY` AS `KEY`, `DT_Output`.`Score` AS `Score_0`, 0.0 AS `Score_1`, 0.0 AS `Score_2`, 0.0 AS `Score_3`, 0.0 AS `Score_4`, 0.0 AS `Score_5`, 0.0 AS `Score_6`, 0.0 AS `Score_7`, 0.0 AS `Score_8`, 0.0 AS `Score_9` 
FROM `DT_Output`), 
`DT_node_lookup_1` AS 
(SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_19` < 15.5) THEN CASE WHEN (`ADS`.`Feature_10` < 0.5) THEN 3 ELSE CASE WHEN (`ADS`.`Feature_19` < 13.5) THEN 7 ELSE 8 END END ELSE CASE WHEN (`ADS`.`Feature_46` < 0.5) THEN CASE WHEN (`ADS`.`Feature_20` < 15.5) THEN 9 ELSE 10 END ELSE 6 END END AS node_id_2 
FROM digits AS `ADS`), 
`DT_node_data_1` AS 
(SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, 1 AS parent_id, 0.17121587693691254 AS `Score` UNION ALL SELECT 6 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, 2 AS parent_id, -0.014705884270370007 AS `Score` UNION ALL SELECT 7 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 4 AS parent_id, -0.05371730402112007 AS `Score` UNION ALL SELECT 8 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 4 AS parent_id, -0.008155586197972298 AS `Score` UNION ALL SELECT 9 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 5 AS parent_id, 0.22033898532390594 AS `Score` UNION ALL SELECT 10 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 5 AS parent_id, 0.41291728615760803 AS `Score`) AS `Values`), 
`DT_Output_1` AS 
(SELECT `DT_node_lookup_1`.`KEY` AS `KEY`, `DT_node_lookup_1`.node_id_2 AS node_id_2, `DT_node_data_1`.node_id AS node_id, `DT_node_data_1`.feature AS feature, `DT_node_data_1`.threshold AS threshold, `DT_node_data_1`.depth AS depth, `DT_node_data_1`.parent_id AS parent_id, `DT_node_data_1`.`Score` AS `Score` 
FROM `DT_node_lookup_1` LEFT OUTER JOIN `DT_node_data_1` ON `DT_node_lookup_1`.node_id_2 = `DT_node_data_1`.node_id), 
`XGB_Tree_1_0` AS 
(SELECT `DT_Output_1`.`KEY` AS `KEY`, 0.0 AS `Score_0`, `DT_Output_1`.`Score` AS `Score_1`, 0.0 AS `Score_2`, 0.0 AS `Score_3`, 0.0 AS `Score_4`, 0.0 AS `Score_5`, 0.0 AS `Score_6`, 0.0 AS `Score_7`, 0.0 AS `Score_8`, 0.0 AS `Score_9` 
FROM `DT_Output_1`), 
`DT_node_lookup_2` AS 
(SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_62` < 2.5) THEN CASE WHEN (`ADS`.`Feature_37` < 2.5) THEN CASE WHEN (`ADS`.`Feature_44` < 8.5) THEN 7 ELSE 8 END ELSE CASE WHEN (`ADS`.`Feature_45` < 0.5) THEN 9 ELSE 10 END END ELSE CASE WHEN (`ADS`.`Feature_46` < 1.5) THEN CASE WHEN (`ADS`.`Feature_27` < 10.5) THEN 11 ELSE 12 END ELSE CASE WHEN (`ADS`.`Feature_59` < 13.5) THEN 13 ELSE 14 END END END AS node_id_2 
FROM digits AS `ADS`), 
`DT_node_data_2` AS 
(SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 7 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 3 AS parent_id, 0.16141733527183533 AS `Score` UNION ALL SELECT 8 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 3 AS parent_id, -0.046821605414152145 AS `Score` UNION ALL SELECT 9 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 4 AS parent_id, -0.02587646245956421 AS `Score` UNION ALL SELECT 10 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 4 AS parent_id, -0.055184394121170044 AS `Score` UNION ALL SELECT 11 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 5 AS parent_id, 0.44529542326927185 AS `Score` UNION ALL SELECT 12 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 5 AS parent_id, 0.08041958510875702 AS `Score` UNION ALL SELECT 13 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 6 AS parent_id, -0.053016453981399536 AS `Score` UNION ALL SELECT 14 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 6 AS parent_id, 0.03671328350901604 AS `Score`) AS `Values`), 
`DT_Output_2` AS 
(SELECT `DT_node_lookup_2`.`KEY` AS `KEY`, `DT_node_lookup_2`.node_id_2 AS node_id_2, `DT_node_data_2`.node_id AS node_id, `DT_node_data_2`.feature AS feature, `DT_node_data_2`.threshold AS threshold, `DT_node_data_2`.depth AS depth, `DT_node_data_2`.parent_id AS parent_id, `DT_node_data_2`.`Score` AS `Score` 
FROM `DT_node_lookup_2` LEFT OUTER JOIN `DT_node_data_2` ON `DT_node_lookup_2`.node_id_2 = `DT_node_data_2`.node_id), 
`XGB_Tree_2_0` AS 
(SELECT `DT_Output_2`.`KEY` AS `KEY`, 0.0 AS `Score_0`, 0.0 AS `Score_1`, `DT_Output_2`.`Score` AS `Score_2`, 0.0 AS `Score_3`, 0.0 AS `Score_4`, 0.0 AS `Score_5`, 0.0 AS `Score_6`, 0.0 AS `Score_7`, 0.0 AS `Score_8`, 0.0 AS `Score_9` 
FROM `DT_Output_2`), 
`DT_node_lookup_3` AS 
(SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_26` < 0.5) THEN CASE WHEN (`ADS`.`Feature_43` < 2.5) THEN 3 ELSE CASE WHEN (`ADS`.`Feature_5` < 7.5) THEN 7 ELSE 8 END END ELSE CASE WHEN (`ADS`.`Feature_26` < 5.5) THEN CASE WHEN (`ADS`.`Feature_46` < 3.5) THEN 9 ELSE 10 END ELSE CASE WHEN (`ADS`.`Feature_54` < 5.5) THEN 11 ELSE 12 END END END AS node_id_2 
FROM digits AS `ADS`), 
`DT_node_data_3` AS 
(SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, 1 AS parent_id, 0.41115498542785645 AS `Score` UNION ALL SELECT 7 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 4 AS parent_id, -0.052575111389160156 AS `Score` UNION ALL SELECT 8 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 4 AS parent_id, 0.0017482498660683632 AS `Score` UNION ALL SELECT 9 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 5 AS parent_id, -0.026845639571547508 AS `Score` UNION ALL SELECT 10 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 5 AS parent_id, 0.15460526943206787 AS `Score` UNION ALL SELECT 11 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 6 AS parent_id, -0.05432197079062462 AS `Score` UNION ALL SELECT 12 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 6 AS parent_id, -0.03110453300178051 AS `Score`) AS `Values`), 
`DT_Output_3` AS 
(SELECT `DT_node_lookup_3`.`KEY` AS `KEY`, `DT_node_lookup_3`.node_id_2 AS node_id_2, `DT_node_data_3`.node_id AS node_id, `DT_node_data_3`.feature AS feature, `DT_node_data_3`.threshold AS threshold, `DT_node_data_3`.depth AS depth, `DT_node_data_3`.parent_id AS parent_id, `DT_node_data_3`.`Score` AS `Score` 
FROM `DT_node_lookup_3` LEFT OUTER JOIN `DT_node_data_3` ON `DT_node_lookup_3`.node_id_2 = `DT_node_data_3`.node_id), 
`XGB_Tree_3_0` AS 
(SELECT `DT_Output_3`.`KEY` AS `KEY`, 0.0 AS `Score_0`, 0.0 AS `Score_1`, 0.0 AS `Score_2`, `DT_Output_3`.`Score` AS `Score_3`, 0.0 AS `Score_4`, 0.0 AS `Score_5`, 0.0 AS `Score_6`, 0.0 AS `Score_7`, 0.0 AS `Score_8`, 0.0 AS `Score_9` 
FROM `DT_Output_3`), 
`DT_node_lookup_4` AS 
(SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_33` < 8.5) THEN CASE WHEN (`ADS`.`Feature_58` < 0.5) THEN CASE WHEN (`ADS`.`Feature_33` < 3.5) THEN 5 ELSE 6 END ELSE CASE WHEN (`ADS`.`Feature_30` < 7.5) THEN 7 ELSE 8 END END ELSE 2 END AS node_id_2 
FROM digits AS `ADS`), 
`DT_node_data_4` AS 
(SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, 0 AS parent_id, 0.36538463830947876 AS `Score` UNION ALL SELECT 5 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 3 AS parent_id, -0.03317536041140556 AS `Score` UNION ALL SELECT 6 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 3 AS parent_id, 0.2154017984867096 AS `Score` UNION ALL SELECT 7 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 4 AS parent_id, -0.05345986410975456 AS `Score` UNION ALL SELECT 8 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 4 AS parent_id, -0.025092938914895058 AS `Score`) AS `Values`), 
`DT_Output_4` AS 
(SELECT `DT_node_lookup_4`.`KEY` AS `KEY`, `DT_node_lookup_4`.node_id_2 AS node_id_2, `DT_node_data_4`.node_id AS node_id, `DT_node_data_4`.feature AS feature, `DT_node_data_4`.threshold AS threshold, `DT_node_data_4`.depth AS depth, `DT_node_data_4`.parent_id AS parent_id, `DT_node_data_4`.`Score` AS `Score` 
FROM `DT_node_lookup_4` LEFT OUTER JOIN `DT_node_data_4` ON `DT_node_lookup_4`.node_id_2 = `DT_node_data_4`.node_id), 
`XGB_Tree_4_0` AS 
(SELECT `DT_Output_4`.`KEY` AS `KEY`, 0.0 AS `Score_0`, 0.0 AS `Score_1`, 0.0 AS `Score_2`, 0.0 AS `Score_3`, `DT_Output_4`.`Score` AS `Score_4`, 0.0 AS `Score_5`, 0.0 AS `Score_6`, 0.0 AS `Score_7`, 0.0 AS `Score_8`, 0.0 AS `Score_9` 
FROM `DT_Output_4`), 
`DT_node_lookup_5` AS 
(SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_21` < 1.5) THEN CASE WHEN (`ADS`.`Feature_5` < 6.5) THEN CASE WHEN (`ADS`.`Feature_42` < 1.5) THEN 7 ELSE 8 END ELSE 4 END ELSE CASE WHEN (`ADS`.`Feature_26` < 15.5) THEN 5 ELSE CASE WHEN (`ADS`.`Feature_10` < 12.5) THEN 9 ELSE 10 END END END AS node_id_2 
FROM digits AS `ADS`), 
`DT_node_data_5` AS 
(SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, 1 AS parent_id, 0.41099071502685547 AS `Score` UNION ALL SELECT 5 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, 2 AS parent_id, -0.053880441933870316 AS `Score` UNION ALL SELECT 7 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 3 AS parent_id, 0.05271565541625023 AS `Score` UNION ALL SELECT 8 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 3 AS parent_id, -0.05177443102002144 AS `Score` UNION ALL SELECT 9 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 6 AS parent_id, -0.05297398194670677 AS `Score` UNION ALL SELECT 10 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 6 AS parent_id, 0.02166064828634262 AS `Score`) AS `Values`), 
`DT_Output_5` AS 
(SELECT `DT_node_lookup_5`.`KEY` AS `KEY`, `DT_node_lookup_5`.node_id_2 AS node_id_2, `DT_node_data_5`.node_id AS node_id, `DT_node_data_5`.feature AS feature, `DT_node_data_5`.threshold AS threshold, `DT_node_data_5`.depth AS depth, `DT_node_data_5`.parent_id AS parent_id, `DT_node_data_5`.`Score` AS `Score` 
FROM `DT_node_lookup_5` LEFT OUTER JOIN `DT_node_data_5` ON `DT_node_lookup_5`.node_id_2 = `DT_node_data_5`.node_id), 
`XGB_Tree_5_0` AS 
(SELECT `DT_Output_5`.`KEY` AS `KEY`, 0.0 AS `Score_0`, 0.0 AS `Score_1`, 0.0 AS `Score_2`, 0.0 AS `Score_3`, 0.0 AS `Score_4`, `DT_Output_5`.`Score` AS `Score_5`, 0.0 AS `Score_6`, 0.0 AS `Score_7`, 0.0 AS `Score_8`, 0.0 AS `Score_9` 
FROM `DT_Output_5`), 
`DT_node_lookup_6` AS 
(SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_21` < 0.5) THEN CASE WHEN (`ADS`.`Feature_42` < 9.5) THEN CASE WHEN (`ADS`.`Feature_19` < 12.5) THEN 7 ELSE 8 END ELSE CASE WHEN (`ADS`.`Feature_54` < 5.5) THEN 9 ELSE 10 END END ELSE CASE WHEN (`ADS`.`Feature_12` < 2.5) THEN 5 ELSE 6 END END AS node_id_2 
FROM digits AS `ADS`), 
`DT_node_data_6` AS 
(SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 5 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, 2 AS parent_id, -0.034223709255456924 AS `Score` UNION ALL SELECT 6 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, 2 AS parent_id, -0.05411936715245247 AS `Score` UNION ALL SELECT 7 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 3 AS parent_id, -0.05366848036646843 AS `Score` UNION ALL SELECT 8 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 3 AS parent_id, -0.014440434984862804 AS `Score` UNION ALL SELECT 9 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 4 AS parent_id, 0.09552495926618576 AS `Score` UNION ALL SELECT 10 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 4 AS parent_id, 0.4646017551422119 AS `Score`) AS `Values`), 
`DT_Output_6` AS 
(SELECT `DT_node_lookup_6`.`KEY` AS `KEY`, `DT_node_lookup_6`.node_id_2 AS node_id_2, `DT_node_data_6`.node_id AS node_id, `DT_node_data_6`.feature AS feature, `DT_node_data_6`.threshold AS threshold, `DT_node_data_6`.depth AS depth, `DT_node_data_6`.parent_id AS parent_id, `DT_node_data_6`.`Score` AS `Score` 
FROM `DT_node_lookup_6` LEFT OUTER JOIN `DT_node_data_6` ON `DT_node_lookup_6`.node_id_2 = `DT_node_data_6`.node_id), 
`XGB_Tree_6_0` AS 
(SELECT `DT_Output_6`.`KEY` AS `KEY`, 0.0 AS `Score_0`, 0.0 AS `Score_1`, 0.0 AS `Score_2`, 0.0 AS `Score_3`, 0.0 AS `Score_4`, 0.0 AS `Score_5`, `DT_Output_6`.`Score` AS `Score_6`, 0.0 AS `Score_7`, 0.0 AS `Score_8`, 0.0 AS `Score_9` 
FROM `DT_Output_6`), 
`DT_node_lookup_7` AS 
(SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_60` < 2.5) THEN CASE WHEN (`ADS`.`Feature_18` < 11.5) THEN 3 ELSE 4 END ELSE CASE WHEN (`ADS`.`Feature_60` < 7.5) THEN CASE WHEN (`ADS`.`Feature_29` < 10.5) THEN 7 ELSE 8 END ELSE CASE WHEN (`ADS`.`Feature_14` < 6.5) THEN 9 ELSE 10 END END END AS node_id_2 
FROM digits AS `ADS`), 
`DT_node_data_7` AS 
(SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, 1 AS parent_id, 0.4468085467815399 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, 1 AS parent_id, 0.12093862146139145 AS `Score` UNION ALL SELECT 7 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 5 AS parent_id, -0.03484603390097618 AS `Score` UNION ALL SELECT 8 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 5 AS parent_id, 0.21636953949928284 AS `Score` UNION ALL SELECT 9 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 6 AS parent_id, -0.05423799157142639 AS `Score` UNION ALL SELECT 10 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 6 AS parent_id, -0.007537690456956625 AS `Score`) AS `Values`), 
`DT_Output_7` AS 
(SELECT `DT_node_lookup_7`.`KEY` AS `KEY`, `DT_node_lookup_7`.node_id_2 AS node_id_2, `DT_node_data_7`.node_id AS node_id, `DT_node_data_7`.feature AS feature, `DT_node_data_7`.threshold AS threshold, `DT_node_data_7`.depth AS depth, `DT_node_data_7`.parent_id AS parent_id, `DT_node_data_7`.`Score` AS `Score` 
FROM `DT_node_lookup_7` LEFT OUTER JOIN `DT_node_data_7` ON `DT_node_lookup_7`.node_id_2 = `DT_node_data_7`.node_id), 
`XGB_Tree_7_0` AS 
(SELECT `DT_Output_7`.`KEY` AS `KEY`, 0.0 AS `Score_0`, 0.0 AS `Score_1`, 0.0 AS `Score_2`, 0.0 AS `Score_3`, 0.0 AS `Score_4`, 0.0 AS `Score_5`, 0.0 AS `Score_6`, `DT_Output_7`.`Score` AS `Score_7`, 0.0 AS `Score_8`, 0.0 AS `Score_9` 
FROM `DT_Output_7`)
 SELECT `Score_Union_CTE_esu_0`.`KEY`, `Score_Union_CTE_esu_0`.`Score_0`, `Score_Union_CTE_esu_0`.`Score_1`, `Score_Union_CTE_esu_0`.`Score_2`, `Score_Union_CTE_esu_0`.`Score_3`, `Score_Union_CTE_esu_0`.`Score_4`, `Score_Union_CTE_esu_0`.`Score_5`, `Score_Union_CTE_esu_0`.`Score_6`, `Score_Union_CTE_esu_0`.`Score_7`, `Score_Union_CTE_esu_0`.`Score_8`, `Score_Union_CTE_esu_0`.`Score_9` 
FROM (SELECT `XGB_Tree_0_0`.`KEY` AS `KEY`, `XGB_Tree_0_0`.`Score_0` AS `Score_0`, `XGB_Tree_0_0`.`Score_1` AS `Score_1`, `XGB_Tree_0_0`.`Score_2` AS `Score_2`, `XGB_Tree_0_0`.`Score_3` AS `Score_3`, `XGB_Tree_0_0`.`Score_4` AS `Score_4`, `XGB_Tree_0_0`.`Score_5` AS `Score_5`, `XGB_Tree_0_0`.`Score_6` AS `Score_6`, `XGB_Tree_0_0`.`Score_7` AS `Score_7`, `XGB_Tree_0_0`.`Score_8` AS `Score_8`, `XGB_Tree_0_0`.`Score_9` AS `Score_9` 
FROM `XGB_Tree_0_0` UNION ALL SELECT `XGB_Tree_1_0`.`KEY` AS `KEY`, `XGB_Tree_1_0`.`Score_0` AS `Score_0`, `XGB_Tree_1_0`.`Score_1` AS `Score_1`, `XGB_Tree_1_0`.`Score_2` AS `Score_2`, `XGB_Tree_1_0`.`Score_3` AS `Score_3`, `XGB_Tree_1_0`.`Score_4` AS `Score_4`, `XGB_Tree_1_0`.`Score_5` AS `Score_5`, `XGB_Tree_1_0`.`Score_6` AS `Score_6`, `XGB_Tree_1_0`.`Score_7` AS `Score_7`, `XGB_Tree_1_0`.`Score_8` AS `Score_8`, `XGB_Tree_1_0`.`Score_9` AS `Score_9` 
FROM `XGB_Tree_1_0` UNION ALL SELECT `XGB_Tree_2_0`.`KEY` AS `KEY`, `XGB_Tree_2_0`.`Score_0` AS `Score_0`, `XGB_Tree_2_0`.`Score_1` AS `Score_1`, `XGB_Tree_2_0`.`Score_2` AS `Score_2`, `XGB_Tree_2_0`.`Score_3` AS `Score_3`, `XGB_Tree_2_0`.`Score_4` AS `Score_4`, `XGB_Tree_2_0`.`Score_5` AS `Score_5`, `XGB_Tree_2_0`.`Score_6` AS `Score_6`, `XGB_Tree_2_0`.`Score_7` AS `Score_7`, `XGB_Tree_2_0`.`Score_8` AS `Score_8`, `XGB_Tree_2_0`.`Score_9` AS `Score_9` 
FROM `XGB_Tree_2_0` UNION ALL SELECT `XGB_Tree_3_0`.`KEY` AS `KEY`, `XGB_Tree_3_0`.`Score_0` AS `Score_0`, `XGB_Tree_3_0`.`Score_1` AS `Score_1`, `XGB_Tree_3_0`.`Score_2` AS `Score_2`, `XGB_Tree_3_0`.`Score_3` AS `Score_3`, `XGB_Tree_3_0`.`Score_4` AS `Score_4`, `XGB_Tree_3_0`.`Score_5` AS `Score_5`, `XGB_Tree_3_0`.`Score_6` AS `Score_6`, `XGB_Tree_3_0`.`Score_7` AS `Score_7`, `XGB_Tree_3_0`.`Score_8` AS `Score_8`, `XGB_Tree_3_0`.`Score_9` AS `Score_9` 
FROM `XGB_Tree_3_0` UNION ALL SELECT `XGB_Tree_4_0`.`KEY` AS `KEY`, `XGB_Tree_4_0`.`Score_0` AS `Score_0`, `XGB_Tree_4_0`.`Score_1` AS `Score_1`, `XGB_Tree_4_0`.`Score_2` AS `Score_2`, `XGB_Tree_4_0`.`Score_3` AS `Score_3`, `XGB_Tree_4_0`.`Score_4` AS `Score_4`, `XGB_Tree_4_0`.`Score_5` AS `Score_5`, `XGB_Tree_4_0`.`Score_6` AS `Score_6`, `XGB_Tree_4_0`.`Score_7` AS `Score_7`, `XGB_Tree_4_0`.`Score_8` AS `Score_8`, `XGB_Tree_4_0`.`Score_9` AS `Score_9` 
FROM `XGB_Tree_4_0` UNION ALL SELECT `XGB_Tree_5_0`.`KEY` AS `KEY`, `XGB_Tree_5_0`.`Score_0` AS `Score_0`, `XGB_Tree_5_0`.`Score_1` AS `Score_1`, `XGB_Tree_5_0`.`Score_2` AS `Score_2`, `XGB_Tree_5_0`.`Score_3` AS `Score_3`, `XGB_Tree_5_0`.`Score_4` AS `Score_4`, `XGB_Tree_5_0`.`Score_5` AS `Score_5`, `XGB_Tree_5_0`.`Score_6` AS `Score_6`, `XGB_Tree_5_0`.`Score_7` AS `Score_7`, `XGB_Tree_5_0`.`Score_8` AS `Score_8`, `XGB_Tree_5_0`.`Score_9` AS `Score_9` 
FROM `XGB_Tree_5_0` UNION ALL SELECT `XGB_Tree_6_0`.`KEY` AS `KEY`, `XGB_Tree_6_0`.`Score_0` AS `Score_0`, `XGB_Tree_6_0`.`Score_1` AS `Score_1`, `XGB_Tree_6_0`.`Score_2` AS `Score_2`, `XGB_Tree_6_0`.`Score_3` AS `Score_3`, `XGB_Tree_6_0`.`Score_4` AS `Score_4`, `XGB_Tree_6_0`.`Score_5` AS `Score_5`, `XGB_Tree_6_0`.`Score_6` AS `Score_6`, `XGB_Tree_6_0`.`Score_7` AS `Score_7`, `XGB_Tree_6_0`.`Score_8` AS `Score_8`, `XGB_Tree_6_0`.`Score_9` AS `Score_9` 
FROM `XGB_Tree_6_0` UNION ALL SELECT `XGB_Tree_7_0`.`KEY` AS `KEY`, `XGB_Tree_7_0`.`Score_0` AS `Score_0`, `XGB_Tree_7_0`.`Score_1` AS `Score_1`, `XGB_Tree_7_0`.`Score_2` AS `Score_2`, `XGB_Tree_7_0`.`Score_3` AS `Score_3`, `XGB_Tree_7_0`.`Score_4` AS `Score_4`, `XGB_Tree_7_0`.`Score_5` AS `Score_5`, `XGB_Tree_7_0`.`Score_6` AS `Score_6`, `XGB_Tree_7_0`.`Score_7` AS `Score_7`, `XGB_Tree_7_0`.`Score_8` AS `Score_8`, `XGB_Tree_7_0`.`Score_9` AS `Score_9` 
FROM `XGB_Tree_7_0`) AS `Score_Union_CTE_esu_0`), 
`Score_Union_CTE_1` AS 
(WITH `DT_node_lookup_8` AS 
(SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_38` < 0.5) THEN CASE WHEN (`ADS`.`Feature_21` < 8.5) THEN CASE WHEN (`ADS`.`Feature_21` < 4.5) THEN 7 ELSE 8 END ELSE CASE WHEN (`ADS`.`Feature_35` < 11.5) THEN 9 ELSE 10 END END ELSE CASE WHEN (`ADS`.`Feature_27` < 12.5) THEN 5 ELSE CASE WHEN (`ADS`.`Feature_43` < 7.5) THEN 11 ELSE 12 END END END AS node_id_2 
FROM digits AS `ADS`), 
`DT_node_data_8` AS 
(SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 5 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, 2 AS parent_id, -0.05500496178865433 AS `Score` UNION ALL SELECT 7 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 3 AS parent_id, -0.04538799822330475 AS `Score` UNION ALL SELECT 8 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 3 AS parent_id, 0.036802031099796295 AS `Score` UNION ALL SELECT 9 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 4 AS parent_id, -0.029458601027727127 AS `Score` UNION ALL SELECT 10 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 4 AS parent_id, 0.2719869911670685 AS `Score` UNION ALL SELECT 11 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 6 AS parent_id, -0.04969879612326622 AS `Score` UNION ALL SELECT 12 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 6 AS parent_id, 0.024207010865211487 AS `Score`) AS `Values`), 
`DT_Output_8` AS 
(SELECT `DT_node_lookup_8`.`KEY` AS `KEY`, `DT_node_lookup_8`.node_id_2 AS node_id_2, `DT_node_data_8`.node_id AS node_id, `DT_node_data_8`.feature AS feature, `DT_node_data_8`.threshold AS threshold, `DT_node_data_8`.depth AS depth, `DT_node_data_8`.parent_id AS parent_id, `DT_node_data_8`.`Score` AS `Score` 
FROM `DT_node_lookup_8` LEFT OUTER JOIN `DT_node_data_8` ON `DT_node_lookup_8`.node_id_2 = `DT_node_data_8`.node_id), 
`XGB_Tree_8_0` AS 
(SELECT `DT_Output_8`.`KEY` AS `KEY`, 0.0 AS `Score_0`, 0.0 AS `Score_1`, 0.0 AS `Score_2`, 0.0 AS `Score_3`, 0.0 AS `Score_4`, 0.0 AS `Score_5`, 0.0 AS `Score_6`, 0.0 AS `Score_7`, `DT_Output_8`.`Score` AS `Score_8`, 0.0 AS `Score_9` 
FROM `DT_Output_8`), 
`DT_node_lookup_9` AS 
(SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_29` < 13.5) THEN CASE WHEN (`ADS`.`Feature_21` < 15.5) THEN CASE WHEN (`ADS`.`Feature_42` < 3.5) THEN 7 ELSE 8 END ELSE 4 END ELSE CASE WHEN (`ADS`.`Feature_43` < 0.5) THEN CASE WHEN (`ADS`.`Feature_44` < 1.5) THEN 9 ELSE 10 END ELSE CASE WHEN (`ADS`.`Feature_43` < 5.5) THEN 11 ELSE 12 END END END AS node_id_2 
FROM digits AS `ADS`), 
`DT_node_data_9` AS 
(SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, 1 AS parent_id, 0.05844155699014664 AS `Score` UNION ALL SELECT 7 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 3 AS parent_id, -0.032932501286268234 AS `Score` UNION ALL SELECT 8 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 3 AS parent_id, -0.05414244532585144 AS `Score` UNION ALL SELECT 9 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 5 AS parent_id, 0.38343557715415955 AS `Score` UNION ALL SELECT 10 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 5 AS parent_id, 0.18916518986225128 AS `Score` UNION ALL SELECT 11 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 6 AS parent_id, 0.05932203680276871 AS `Score` UNION ALL SELECT 12 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 6 AS parent_id, -0.0463096983730793 AS `Score`) AS `Values`), 
`DT_Output_9` AS 
(SELECT `DT_node_lookup_9`.`KEY` AS `KEY`, `DT_node_lookup_9`.node_id_2 AS node_id_2, `DT_node_data_9`.node_id AS node_id, `DT_node_data_9`.feature AS feature, `DT_node_data_9`.threshold AS threshold, `DT_node_data_9`.depth AS depth, `DT_node_data_9`.parent_id AS parent_id, `DT_node_data_9`.`Score` AS `Score` 
FROM `DT_node_lookup_9` LEFT OUTER JOIN `DT_node_data_9` ON `DT_node_lookup_9`.node_id_2 = `DT_node_data_9`.node_id), 
`XGB_Tree_9_0` AS 
(SELECT `DT_Output_9`.`KEY` AS `KEY`, 0.0 AS `Score_0`, 0.0 AS `Score_1`, 0.0 AS `Score_2`, 0.0 AS `Score_3`, 0.0 AS `Score_4`, 0.0 AS `Score_5`, 0.0 AS `Score_6`, 0.0 AS `Score_7`, 0.0 AS `Score_8`, `DT_Output_9`.`Score` AS `Score_9` 
FROM `DT_Output_9`), 
`DT_node_lookup_10` AS 
(SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_36` < 0.5) THEN CASE WHEN (`ADS`.`Feature_28` < 4.5) THEN CASE WHEN (`ADS`.`Feature_43` < 1.5) THEN 7 ELSE 8 END ELSE 4 END ELSE CASE WHEN (`ADS`.`Feature_36` < 3.5) THEN 5 ELSE 6 END END AS node_id_2 
FROM digits AS `ADS`), 
`DT_node_data_10` AS 
(SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, 1 AS parent_id, -0.050944503396749496 AS `Score` UNION ALL SELECT 5 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, 2 AS parent_id, -0.024744337424635887 AS `Score` UNION ALL SELECT 6 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, 2 AS parent_id, -0.05491872504353523 AS `Score` UNION ALL SELECT 7 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 3 AS parent_id, 0.31408926844596863 AS `Score` UNION ALL SELECT 8 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 3 AS parent_id, 0.19198806583881378 AS `Score`) AS `Values`), 
`DT_Output_10` AS 
(SELECT `DT_node_lookup_10`.`KEY` AS `KEY`, `DT_node_lookup_10`.node_id_2 AS node_id_2, `DT_node_data_10`.node_id AS node_id, `DT_node_data_10`.feature AS feature, `DT_node_data_10`.threshold AS threshold, `DT_node_data_10`.depth AS depth, `DT_node_data_10`.parent_id AS parent_id, `DT_node_data_10`.`Score` AS `Score` 
FROM `DT_node_lookup_10` LEFT OUTER JOIN `DT_node_data_10` ON `DT_node_lookup_10`.node_id_2 = `DT_node_data_10`.node_id), 
`XGB_Tree_0_1` AS 
(SELECT `DT_Output_10`.`KEY` AS `KEY`, `DT_Output_10`.`Score` AS `Score_0`, 0.0 AS `Score_1`, 0.0 AS `Score_2`, 0.0 AS `Score_3`, 0.0 AS `Score_4`, 0.0 AS `Score_5`, 0.0 AS `Score_6`, 0.0 AS `Score_7`, 0.0 AS `Score_8`, 0.0 AS `Score_9` 
FROM `DT_Output_10`), 
`DT_node_lookup_11` AS 
(SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_19` < 15.5) THEN CASE WHEN (`ADS`.`Feature_10` < 0.5) THEN 3 ELSE CASE WHEN (`ADS`.`Feature_19` < 13.5) THEN 7 ELSE 8 END END ELSE CASE WHEN (`ADS`.`Feature_46` < 0.5) THEN CASE WHEN (`ADS`.`Feature_12` < 15.5) THEN 9 ELSE 10 END ELSE 6 END END AS node_id_2 
FROM digits AS `ADS`), 
`DT_node_data_11` AS 
(SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, 1 AS parent_id, 0.14380459487438202 AS `Score` UNION ALL SELECT 6 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, 2 AS parent_id, -0.013915041461586952 AS `Score` UNION ALL SELECT 7 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 4 AS parent_id, -0.053283996880054474 AS `Score` UNION ALL SELECT 8 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 4 AS parent_id, -0.007520557381212711 AS `Score` UNION ALL SELECT 9 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 5 AS parent_id, 0.15230460464954376 AS `Score` UNION ALL SELECT 10 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 5 AS parent_id, 0.2900988757610321 AS `Score`) AS `Values`), 
`DT_Output_11` AS 
(SELECT `DT_node_lookup_11`.`KEY` AS `KEY`, `DT_node_lookup_11`.node_id_2 AS node_id_2, `DT_node_data_11`.node_id AS node_id, `DT_node_data_11`.feature AS feature, `DT_node_data_11`.threshold AS threshold, `DT_node_data_11`.depth AS depth, `DT_node_data_11`.parent_id AS parent_id, `DT_node_data_11`.`Score` AS `Score` 
FROM `DT_node_lookup_11` LEFT OUTER JOIN `DT_node_data_11` ON `DT_node_lookup_11`.node_id_2 = `DT_node_data_11`.node_id), 
`XGB_Tree_1_1` AS 
(SELECT `DT_Output_11`.`KEY` AS `KEY`, 0.0 AS `Score_0`, `DT_Output_11`.`Score` AS `Score_1`, 0.0 AS `Score_2`, 0.0 AS `Score_3`, 0.0 AS `Score_4`, 0.0 AS `Score_5`, 0.0 AS `Score_6`, 0.0 AS `Score_7`, 0.0 AS `Score_8`, 0.0 AS `Score_9` 
FROM `DT_Output_11`), 
`DT_node_lookup_12` AS 
(SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_62` < 2.5) THEN CASE WHEN (`ADS`.`Feature_37` < 2.5) THEN CASE WHEN (`ADS`.`Feature_53` < 10.5) THEN 7 ELSE 8 END ELSE CASE WHEN (`ADS`.`Feature_45` < 0.5) THEN 9 ELSE 10 END END ELSE CASE WHEN (`ADS`.`Feature_46` < 1.5) THEN CASE WHEN (`ADS`.`Feature_45` < 4.5) THEN 11 ELSE 12 END ELSE CASE WHEN (`ADS`.`Feature_59` < 13.5) THEN 13 ELSE 14 END END END AS node_id_2 
FROM digits AS `ADS`), 
`DT_node_data_12` AS 
(SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 7 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 3 AS parent_id, -0.040991269052028656 AS `Score` UNION ALL SELECT 8 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 3 AS parent_id, 0.17354609072208405 AS `Score` UNION ALL SELECT 9 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 4 AS parent_id, -0.024762148037552834 AS `Score` UNION ALL SELECT 10 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 4 AS parent_id, -0.054819751530885696 AS `Score` UNION ALL SELECT 11 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 5 AS parent_id, 0.2931760847568512 AS `Score` UNION ALL SELECT 12 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 5 AS parent_id, 0.06305088847875595 AS `Score` UNION ALL SELECT 13 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 6 AS parent_id, -0.052521612495183945 AS `Score` UNION ALL SELECT 14 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 6 AS parent_id, 0.03457337245345116 AS `Score`) AS `Values`), 
`DT_Output_12` AS 
(SELECT `DT_node_lookup_12`.`KEY` AS `KEY`, `DT_node_lookup_12`.node_id_2 AS node_id_2, `DT_node_data_12`.node_id AS node_id, `DT_node_data_12`.feature AS feature, `DT_node_data_12`.threshold AS threshold, `DT_node_data_12`.depth AS depth, `DT_node_data_12`.parent_id AS parent_id, `DT_node_data_12`.`Score` AS `Score` 
FROM `DT_node_lookup_12` LEFT OUTER JOIN `DT_node_data_12` ON `DT_node_lookup_12`.node_id_2 = `DT_node_data_12`.node_id), 
`XGB_Tree_2_1` AS 
(SELECT `DT_Output_12`.`KEY` AS `KEY`, 0.0 AS `Score_0`, 0.0 AS `Score_1`, `DT_Output_12`.`Score` AS `Score_2`, 0.0 AS `Score_3`, 0.0 AS `Score_4`, 0.0 AS `Score_5`, 0.0 AS `Score_6`, 0.0 AS `Score_7`, 0.0 AS `Score_8`, 0.0 AS `Score_9` 
FROM `DT_Output_12`), 
`DT_node_lookup_13` AS 
(SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_26` < 0.5) THEN CASE WHEN (`ADS`.`Feature_43` < 2.5) THEN 3 ELSE CASE WHEN (`ADS`.`Feature_5` < 7.5) THEN 7 ELSE 8 END END ELSE CASE WHEN (`ADS`.`Feature_18` < 3.5) THEN CASE WHEN (`ADS`.`Feature_59` < 12.5) THEN 9 ELSE 10 END ELSE CASE WHEN (`ADS`.`Feature_26` < 6.5) THEN 11 ELSE 12 END END END AS node_id_2 
FROM digits AS `ADS`), 
`DT_node_data_13` AS 
(SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, 1 AS parent_id, 0.2794094681739807 AS `Score` UNION ALL SELECT 7 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 4 AS parent_id, -0.05218040570616722 AS `Score` UNION ALL SELECT 8 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 4 AS parent_id, 0.0021034737583249807 AS `Score` UNION ALL SELECT 9 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 5 AS parent_id, -0.0515911765396595 AS `Score` UNION ALL SELECT 10 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 5 AS parent_id, 0.1497468501329422 AS `Score` UNION ALL SELECT 11 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 6 AS parent_id, -0.010767647996544838 AS `Score` UNION ALL SELECT 12 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 6 AS parent_id, -0.05146458372473717 AS `Score`) AS `Values`), 
`DT_Output_13` AS 
(SELECT `DT_node_lookup_13`.`KEY` AS `KEY`, `DT_node_lookup_13`.node_id_2 AS node_id_2, `DT_node_data_13`.node_id AS node_id, `DT_node_data_13`.feature AS feature, `DT_node_data_13`.threshold AS threshold, `DT_node_data_13`.depth AS depth, `DT_node_data_13`.parent_id AS parent_id, `DT_node_data_13`.`Score` AS `Score` 
FROM `DT_node_lookup_13` LEFT OUTER JOIN `DT_node_data_13` ON `DT_node_lookup_13`.node_id_2 = `DT_node_data_13`.node_id), 
`XGB_Tree_3_1` AS 
(SELECT `DT_Output_13`.`KEY` AS `KEY`, 0.0 AS `Score_0`, 0.0 AS `Score_1`, 0.0 AS `Score_2`, `DT_Output_13`.`Score` AS `Score_3`, 0.0 AS `Score_4`, 0.0 AS `Score_5`, 0.0 AS `Score_6`, 0.0 AS `Score_7`, 0.0 AS `Score_8`, 0.0 AS `Score_9` 
FROM `DT_Output_13`), 
`DT_node_lookup_14` AS 
(SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_33` < 8.5) THEN CASE WHEN (`ADS`.`Feature_58` < 0.5) THEN CASE WHEN (`ADS`.`Feature_33` < 3.5) THEN 7 ELSE 8 END ELSE CASE WHEN (`ADS`.`Feature_30` < 7.5) THEN 9 ELSE 10 END END ELSE CASE WHEN (`ADS`.`Feature_10` < 5.5) THEN 5 ELSE 6 END END AS node_id_2 
FROM digits AS `ADS`), 
`DT_node_data_14` AS 
(SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 5 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, 2 AS parent_id, 0.3211821913719177 AS `Score` UNION ALL SELECT 6 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, 2 AS parent_id, 0.13735021650791168 AS `Score` UNION ALL SELECT 7 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 3 AS parent_id, -0.032297421246767044 AS `Score` UNION ALL SELECT 8 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 3 AS parent_id, 0.1728527992963791 AS `Score` UNION ALL SELECT 9 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 4 AS parent_id, -0.05301574617624283 AS `Score` UNION ALL SELECT 10 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 4 AS parent_id, -0.02386327274143696 AS `Score`) AS `Values`), 
`DT_Output_14` AS 
(SELECT `DT_node_lookup_14`.`KEY` AS `KEY`, `DT_node_lookup_14`.node_id_2 AS node_id_2, `DT_node_data_14`.node_id AS node_id, `DT_node_data_14`.feature AS feature, `DT_node_data_14`.threshold AS threshold, `DT_node_data_14`.depth AS depth, `DT_node_data_14`.parent_id AS parent_id, `DT_node_data_14`.`Score` AS `Score` 
FROM `DT_node_lookup_14` LEFT OUTER JOIN `DT_node_data_14` ON `DT_node_lookup_14`.node_id_2 = `DT_node_data_14`.node_id), 
`XGB_Tree_4_1` AS 
(SELECT `DT_Output_14`.`KEY` AS `KEY`, 0.0 AS `Score_0`, 0.0 AS `Score_1`, 0.0 AS `Score_2`, 0.0 AS `Score_3`, `DT_Output_14`.`Score` AS `Score_4`, 0.0 AS `Score_5`, 0.0 AS `Score_6`, 0.0 AS `Score_7`, 0.0 AS `Score_8`, 0.0 AS `Score_9` 
FROM `DT_Output_14`), 
`DT_node_lookup_15` AS 
(SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_21` < 1.5) THEN CASE WHEN (`ADS`.`Feature_5` < 6.5) THEN CASE WHEN (`ADS`.`Feature_42` < 1.5) THEN 7 ELSE 8 END ELSE CASE WHEN (`ADS`.`Feature_42` < 1.5) THEN 9 ELSE 10 END END ELSE CASE WHEN (`ADS`.`Feature_26` < 15.5) THEN 5 ELSE CASE WHEN (`ADS`.`Feature_10` < 12.5) THEN 11 ELSE 12 END END END AS node_id_2 
FROM digits AS `ADS`), 
`DT_node_data_15` AS 
(SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 5 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, 2 AS parent_id, -0.05345836281776428 AS `Score` UNION ALL SELECT 7 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 3 AS parent_id, 0.047481294721364975 AS `Score` UNION ALL SELECT 8 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 3 AS parent_id, -0.05121250078082085 AS `Score` UNION ALL SELECT 9 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 4 AS parent_id, 0.3163931369781494 AS `Score` UNION ALL SELECT 10 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 4 AS parent_id, 0.17553815245628357 AS `Score` UNION ALL SELECT 11 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 6 AS parent_id, -0.05250459536910057 AS `Score` UNION ALL SELECT 12 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 6 AS parent_id, 0.020533094182610512 AS `Score`) AS `Values`), 
`DT_Output_15` AS 
(SELECT `DT_node_lookup_15`.`KEY` AS `KEY`, `DT_node_lookup_15`.node_id_2 AS node_id_2, `DT_node_data_15`.node_id AS node_id, `DT_node_data_15`.feature AS feature, `DT_node_data_15`.threshold AS threshold, `DT_node_data_15`.depth AS depth, `DT_node_data_15`.parent_id AS parent_id, `DT_node_data_15`.`Score` AS `Score` 
FROM `DT_node_lookup_15` LEFT OUTER JOIN `DT_node_data_15` ON `DT_node_lookup_15`.node_id_2 = `DT_node_data_15`.node_id), 
`XGB_Tree_5_1` AS 
(SELECT `DT_Output_15`.`KEY` AS `KEY`, 0.0 AS `Score_0`, 0.0 AS `Score_1`, 0.0 AS `Score_2`, 0.0 AS `Score_3`, 0.0 AS `Score_4`, `DT_Output_15`.`Score` AS `Score_5`, 0.0 AS `Score_6`, 0.0 AS `Score_7`, 0.0 AS `Score_8`, 0.0 AS `Score_9` 
FROM `DT_Output_15`)
 SELECT `Score_Union_CTE_esu_1`.`KEY`, `Score_Union_CTE_esu_1`.`Score_0`, `Score_Union_CTE_esu_1`.`Score_1`, `Score_Union_CTE_esu_1`.`Score_2`, `Score_Union_CTE_esu_1`.`Score_3`, `Score_Union_CTE_esu_1`.`Score_4`, `Score_Union_CTE_esu_1`.`Score_5`, `Score_Union_CTE_esu_1`.`Score_6`, `Score_Union_CTE_esu_1`.`Score_7`, `Score_Union_CTE_esu_1`.`Score_8`, `Score_Union_CTE_esu_1`.`Score_9` 
FROM (SELECT `XGB_Tree_8_0`.`KEY` AS `KEY`, `XGB_Tree_8_0`.`Score_0` AS `Score_0`, `XGB_Tree_8_0`.`Score_1` AS `Score_1`, `XGB_Tree_8_0`.`Score_2` AS `Score_2`, `XGB_Tree_8_0`.`Score_3` AS `Score_3`, `XGB_Tree_8_0`.`Score_4` AS `Score_4`, `XGB_Tree_8_0`.`Score_5` AS `Score_5`, `XGB_Tree_8_0`.`Score_6` AS `Score_6`, `XGB_Tree_8_0`.`Score_7` AS `Score_7`, `XGB_Tree_8_0`.`Score_8` AS `Score_8`, `XGB_Tree_8_0`.`Score_9` AS `Score_9` 
FROM `XGB_Tree_8_0` UNION ALL SELECT `XGB_Tree_9_0`.`KEY` AS `KEY`, `XGB_Tree_9_0`.`Score_0` AS `Score_0`, `XGB_Tree_9_0`.`Score_1` AS `Score_1`, `XGB_Tree_9_0`.`Score_2` AS `Score_2`, `XGB_Tree_9_0`.`Score_3` AS `Score_3`, `XGB_Tree_9_0`.`Score_4` AS `Score_4`, `XGB_Tree_9_0`.`Score_5` AS `Score_5`, `XGB_Tree_9_0`.`Score_6` AS `Score_6`, `XGB_Tree_9_0`.`Score_7` AS `Score_7`, `XGB_Tree_9_0`.`Score_8` AS `Score_8`, `XGB_Tree_9_0`.`Score_9` AS `Score_9` 
FROM `XGB_Tree_9_0` UNION ALL SELECT `XGB_Tree_0_1`.`KEY` AS `KEY`, `XGB_Tree_0_1`.`Score_0` AS `Score_0`, `XGB_Tree_0_1`.`Score_1` AS `Score_1`, `XGB_Tree_0_1`.`Score_2` AS `Score_2`, `XGB_Tree_0_1`.`Score_3` AS `Score_3`, `XGB_Tree_0_1`.`Score_4` AS `Score_4`, `XGB_Tree_0_1`.`Score_5` AS `Score_5`, `XGB_Tree_0_1`.`Score_6` AS `Score_6`, `XGB_Tree_0_1`.`Score_7` AS `Score_7`, `XGB_Tree_0_1`.`Score_8` AS `Score_8`, `XGB_Tree_0_1`.`Score_9` AS `Score_9` 
FROM `XGB_Tree_0_1` UNION ALL SELECT `XGB_Tree_1_1`.`KEY` AS `KEY`, `XGB_Tree_1_1`.`Score_0` AS `Score_0`, `XGB_Tree_1_1`.`Score_1` AS `Score_1`, `XGB_Tree_1_1`.`Score_2` AS `Score_2`, `XGB_Tree_1_1`.`Score_3` AS `Score_3`, `XGB_Tree_1_1`.`Score_4` AS `Score_4`, `XGB_Tree_1_1`.`Score_5` AS `Score_5`, `XGB_Tree_1_1`.`Score_6` AS `Score_6`, `XGB_Tree_1_1`.`Score_7` AS `Score_7`, `XGB_Tree_1_1`.`Score_8` AS `Score_8`, `XGB_Tree_1_1`.`Score_9` AS `Score_9` 
FROM `XGB_Tree_1_1` UNION ALL SELECT `XGB_Tree_2_1`.`KEY` AS `KEY`, `XGB_Tree_2_1`.`Score_0` AS `Score_0`, `XGB_Tree_2_1`.`Score_1` AS `Score_1`, `XGB_Tree_2_1`.`Score_2` AS `Score_2`, `XGB_Tree_2_1`.`Score_3` AS `Score_3`, `XGB_Tree_2_1`.`Score_4` AS `Score_4`, `XGB_Tree_2_1`.`Score_5` AS `Score_5`, `XGB_Tree_2_1`.`Score_6` AS `Score_6`, `XGB_Tree_2_1`.`Score_7` AS `Score_7`, `XGB_Tree_2_1`.`Score_8` AS `Score_8`, `XGB_Tree_2_1`.`Score_9` AS `Score_9` 
FROM `XGB_Tree_2_1` UNION ALL SELECT `XGB_Tree_3_1`.`KEY` AS `KEY`, `XGB_Tree_3_1`.`Score_0` AS `Score_0`, `XGB_Tree_3_1`.`Score_1` AS `Score_1`, `XGB_Tree_3_1`.`Score_2` AS `Score_2`, `XGB_Tree_3_1`.`Score_3` AS `Score_3`, `XGB_Tree_3_1`.`Score_4` AS `Score_4`, `XGB_Tree_3_1`.`Score_5` AS `Score_5`, `XGB_Tree_3_1`.`Score_6` AS `Score_6`, `XGB_Tree_3_1`.`Score_7` AS `Score_7`, `XGB_Tree_3_1`.`Score_8` AS `Score_8`, `XGB_Tree_3_1`.`Score_9` AS `Score_9` 
FROM `XGB_Tree_3_1` UNION ALL SELECT `XGB_Tree_4_1`.`KEY` AS `KEY`, `XGB_Tree_4_1`.`Score_0` AS `Score_0`, `XGB_Tree_4_1`.`Score_1` AS `Score_1`, `XGB_Tree_4_1`.`Score_2` AS `Score_2`, `XGB_Tree_4_1`.`Score_3` AS `Score_3`, `XGB_Tree_4_1`.`Score_4` AS `Score_4`, `XGB_Tree_4_1`.`Score_5` AS `Score_5`, `XGB_Tree_4_1`.`Score_6` AS `Score_6`, `XGB_Tree_4_1`.`Score_7` AS `Score_7`, `XGB_Tree_4_1`.`Score_8` AS `Score_8`, `XGB_Tree_4_1`.`Score_9` AS `Score_9` 
FROM `XGB_Tree_4_1` UNION ALL SELECT `XGB_Tree_5_1`.`KEY` AS `KEY`, `XGB_Tree_5_1`.`Score_0` AS `Score_0`, `XGB_Tree_5_1`.`Score_1` AS `Score_1`, `XGB_Tree_5_1`.`Score_2` AS `Score_2`, `XGB_Tree_5_1`.`Score_3` AS `Score_3`, `XGB_Tree_5_1`.`Score_4` AS `Score_4`, `XGB_Tree_5_1`.`Score_5` AS `Score_5`, `XGB_Tree_5_1`.`Score_6` AS `Score_6`, `XGB_Tree_5_1`.`Score_7` AS `Score_7`, `XGB_Tree_5_1`.`Score_8` AS `Score_8`, `XGB_Tree_5_1`.`Score_9` AS `Score_9` 
FROM `XGB_Tree_5_1`) AS `Score_Union_CTE_esu_1`), 
`Score_Union_CTE_2` AS 
(WITH `DT_node_lookup_16` AS 
(SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_21` < 0.5) THEN CASE WHEN (`ADS`.`Feature_42` < 9.5) THEN CASE WHEN (`ADS`.`Feature_51` < 14.5) THEN 7 ELSE 8 END ELSE CASE WHEN (`ADS`.`Feature_54` < 5.5) THEN 9 ELSE 10 END END ELSE CASE WHEN (`ADS`.`Feature_12` < 2.5) THEN 5 ELSE 6 END END AS node_id_2 
FROM digits AS `ADS`), 
`DT_node_data_16` AS 
(SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 5 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, 2 AS parent_id, -0.03332391753792763 AS `Score` UNION ALL SELECT 6 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, 2 AS parent_id, -0.05370359495282173 AS `Score` UNION ALL SELECT 7 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 3 AS parent_id, -0.053286340087652206 AS `Score` UNION ALL SELECT 8 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 3 AS parent_id, -0.01391657441854477 AS `Score` UNION ALL SELECT 9 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 4 AS parent_id, 0.08667193353176117 AS `Score` UNION ALL SELECT 10 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 4 AS parent_id, 0.30246612429618835 AS `Score`) AS `Values`), 
`DT_Output_16` AS 
(SELECT `DT_node_lookup_16`.`KEY` AS `KEY`, `DT_node_lookup_16`.node_id_2 AS node_id_2, `DT_node_data_16`.node_id AS node_id, `DT_node_data_16`.feature AS feature, `DT_node_data_16`.threshold AS threshold, `DT_node_data_16`.depth AS depth, `DT_node_data_16`.parent_id AS parent_id, `DT_node_data_16`.`Score` AS `Score` 
FROM `DT_node_lookup_16` LEFT OUTER JOIN `DT_node_data_16` ON `DT_node_lookup_16`.node_id_2 = `DT_node_data_16`.node_id), 
`XGB_Tree_6_1` AS 
(SELECT `DT_Output_16`.`KEY` AS `KEY`, 0.0 AS `Score_0`, 0.0 AS `Score_1`, 0.0 AS `Score_2`, 0.0 AS `Score_3`, 0.0 AS `Score_4`, 0.0 AS `Score_5`, `DT_Output_16`.`Score` AS `Score_6`, 0.0 AS `Score_7`, 0.0 AS `Score_8`, 0.0 AS `Score_9` 
FROM `DT_Output_16`), 
`DT_node_lookup_17` AS 
(SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_60` < 7.5) THEN CASE WHEN (`ADS`.`Feature_26` < 9.5) THEN CASE WHEN (`ADS`.`Feature_38` < 1.5) THEN 7 ELSE 8 END ELSE CASE WHEN (`ADS`.`Feature_17` < 2.5) THEN 9 ELSE 10 END END ELSE CASE WHEN (`ADS`.`Feature_14` < 6.5) THEN CASE WHEN (`ADS`.`Feature_60` < 9.5) THEN 11 ELSE 12 END ELSE 6 END END AS node_id_2 
FROM digits AS `ADS`), 
`DT_node_data_17` AS 
(SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 6 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, 2 AS parent_id, -0.0069360495544970036 AS `Score` UNION ALL SELECT 7 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 3 AS parent_id, 0.14318472146987915 AS `Score` UNION ALL SELECT 8 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 3 AS parent_id, 0.3244175910949707 AS `Score` UNION ALL SELECT 9 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 4 AS parent_id, 0.11004938185214996 AS `Score` UNION ALL SELECT 10 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 4 AS parent_id, -0.0441301129758358 AS `Score` UNION ALL SELECT 11 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 5 AS parent_id, -0.03500502184033394 AS `Score` UNION ALL SELECT 12 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 5 AS parent_id, -0.054883625358343124 AS `Score`) AS `Values`), 
`DT_Output_17` AS 
(SELECT `DT_node_lookup_17`.`KEY` AS `KEY`, `DT_node_lookup_17`.node_id_2 AS node_id_2, `DT_node_data_17`.node_id AS node_id, `DT_node_data_17`.feature AS feature, `DT_node_data_17`.threshold AS threshold, `DT_node_data_17`.depth AS depth, `DT_node_data_17`.parent_id AS parent_id, `DT_node_data_17`.`Score` AS `Score` 
FROM `DT_node_lookup_17` LEFT OUTER JOIN `DT_node_data_17` ON `DT_node_lookup_17`.node_id_2 = `DT_node_data_17`.node_id), 
`XGB_Tree_7_1` AS 
(SELECT `DT_Output_17`.`KEY` AS `KEY`, 0.0 AS `Score_0`, 0.0 AS `Score_1`, 0.0 AS `Score_2`, 0.0 AS `Score_3`, 0.0 AS `Score_4`, 0.0 AS `Score_5`, 0.0 AS `Score_6`, `DT_Output_17`.`Score` AS `Score_7`, 0.0 AS `Score_8`, 0.0 AS `Score_9` 
FROM `DT_Output_17`), 
`DT_node_lookup_18` AS 
(SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_38` < 0.5) THEN CASE WHEN (`ADS`.`Feature_42` < 7.5) THEN CASE WHEN (`ADS`.`Feature_45` < 11.5) THEN 7 ELSE 8 END ELSE CASE WHEN (`ADS`.`Feature_51` < 12.5) THEN 9 ELSE 10 END END ELSE CASE WHEN (`ADS`.`Feature_27` < 12.5) THEN 5 ELSE CASE WHEN (`ADS`.`Feature_43` < 7.5) THEN 11 ELSE 12 END END END AS node_id_2 
FROM digits AS `ADS`), 
`DT_node_data_18` AS 
(SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 5 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, 2 AS parent_id, -0.05460953712463379 AS `Score` UNION ALL SELECT 7 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 3 AS parent_id, -0.04310264810919762 AS `Score` UNION ALL SELECT 8 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 3 AS parent_id, 0.02761230431497097 AS `Score` UNION ALL SELECT 9 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 4 AS parent_id, 0.2473766803741455 AS `Score` UNION ALL SELECT 10 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 4 AS parent_id, -0.009374197572469711 AS `Score` UNION ALL SELECT 11 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 6 AS parent_id, -0.049176204949617386 AS `Score` UNION ALL SELECT 12 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 6 AS parent_id, 0.02308926358819008 AS `Score`) AS `Values`), 
`DT_Output_18` AS 
(SELECT `DT_node_lookup_18`.`KEY` AS `KEY`, `DT_node_lookup_18`.node_id_2 AS node_id_2, `DT_node_data_18`.node_id AS node_id, `DT_node_data_18`.feature AS feature, `DT_node_data_18`.threshold AS threshold, `DT_node_data_18`.depth AS depth, `DT_node_data_18`.parent_id AS parent_id, `DT_node_data_18`.`Score` AS `Score` 
FROM `DT_node_lookup_18` LEFT OUTER JOIN `DT_node_data_18` ON `DT_node_lookup_18`.node_id_2 = `DT_node_data_18`.node_id), 
`XGB_Tree_8_1` AS 
(SELECT `DT_Output_18`.`KEY` AS `KEY`, 0.0 AS `Score_0`, 0.0 AS `Score_1`, 0.0 AS `Score_2`, 0.0 AS `Score_3`, 0.0 AS `Score_4`, 0.0 AS `Score_5`, 0.0 AS `Score_6`, 0.0 AS `Score_7`, `DT_Output_18`.`Score` AS `Score_8`, 0.0 AS `Score_9` 
FROM `DT_Output_18`), 
`DT_node_lookup_19` AS 
(SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_29` < 13.5) THEN CASE WHEN (`ADS`.`Feature_21` < 15.5) THEN CASE WHEN (`ADS`.`Feature_52` < 2.5) THEN 7 ELSE 8 END ELSE 4 END ELSE CASE WHEN (`ADS`.`Feature_43` < 3.5) THEN CASE WHEN (`ADS`.`Feature_33` < 0.5) THEN 9 ELSE 10 END ELSE CASE WHEN (`ADS`.`Feature_60` < 4.5) THEN 11 ELSE 12 END END END AS node_id_2 
FROM digits AS `ADS`), 
`DT_node_data_19` AS 
(SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, 1 AS parent_id, 0.053568821400403976 AS `Score` UNION ALL SELECT 7 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 3 AS parent_id, -0.016321713104844093 AS `Score` UNION ALL SELECT 8 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 3 AS parent_id, -0.04901460185647011 AS `Score` UNION ALL SELECT 9 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 5 AS parent_id, 0.27126333117485046 AS `Score` UNION ALL SELECT 10 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 5 AS parent_id, 0.04434709995985031 AS `Score` UNION ALL SELECT 11 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 6 AS parent_id, -0.02328353188931942 AS `Score` UNION ALL SELECT 12 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 6 AS parent_id, -0.052675116807222366 AS `Score`) AS `Values`), 
`DT_Output_19` AS 
(SELECT `DT_node_lookup_19`.`KEY` AS `KEY`, `DT_node_lookup_19`.node_id_2 AS node_id_2, `DT_node_data_19`.node_id AS node_id, `DT_node_data_19`.feature AS feature, `DT_node_data_19`.threshold AS threshold, `DT_node_data_19`.depth AS depth, `DT_node_data_19`.parent_id AS parent_id, `DT_node_data_19`.`Score` AS `Score` 
FROM `DT_node_lookup_19` LEFT OUTER JOIN `DT_node_data_19` ON `DT_node_lookup_19`.node_id_2 = `DT_node_data_19`.node_id), 
`XGB_Tree_9_1` AS 
(SELECT `DT_Output_19`.`KEY` AS `KEY`, 0.0 AS `Score_0`, 0.0 AS `Score_1`, 0.0 AS `Score_2`, 0.0 AS `Score_3`, 0.0 AS `Score_4`, 0.0 AS `Score_5`, 0.0 AS `Score_6`, 0.0 AS `Score_7`, 0.0 AS `Score_8`, `DT_Output_19`.`Score` AS `Score_9` 
FROM `DT_Output_19`), 
`DT_node_lookup_20` AS 
(SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_36` < 0.5) THEN CASE WHEN (`ADS`.`Feature_28` < 4.5) THEN CASE WHEN (`ADS`.`Feature_43` < 2.5) THEN 7 ELSE 8 END ELSE 4 END ELSE CASE WHEN (`ADS`.`Feature_36` < 3.5) THEN 5 ELSE 6 END END AS node_id_2 
FROM digits AS `ADS`), 
`DT_node_data_20` AS 
(SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, 1 AS parent_id, -0.05053377151489258 AS `Score` UNION ALL SELECT 5 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, 2 AS parent_id, -0.02379746176302433 AS `Score` UNION ALL SELECT 6 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, 2 AS parent_id, -0.05458235740661621 AS `Score` UNION ALL SELECT 7 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 3 AS parent_id, 0.2382834404706955 AS `Score` UNION ALL SELECT 8 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 3 AS parent_id, 0.13738515973091125 AS `Score`) AS `Values`), 
`DT_Output_20` AS 
(SELECT `DT_node_lookup_20`.`KEY` AS `KEY`, `DT_node_lookup_20`.node_id_2 AS node_id_2, `DT_node_data_20`.node_id AS node_id, `DT_node_data_20`.feature AS feature, `DT_node_data_20`.threshold AS threshold, `DT_node_data_20`.depth AS depth, `DT_node_data_20`.parent_id AS parent_id, `DT_node_data_20`.`Score` AS `Score` 
FROM `DT_node_lookup_20` LEFT OUTER JOIN `DT_node_data_20` ON `DT_node_lookup_20`.node_id_2 = `DT_node_data_20`.node_id), 
`XGB_Tree_0_2` AS 
(SELECT `DT_Output_20`.`KEY` AS `KEY`, `DT_Output_20`.`Score` AS `Score_0`, 0.0 AS `Score_1`, 0.0 AS `Score_2`, 0.0 AS `Score_3`, 0.0 AS `Score_4`, 0.0 AS `Score_5`, 0.0 AS `Score_6`, 0.0 AS `Score_7`, 0.0 AS `Score_8`, 0.0 AS `Score_9` 
FROM `DT_Output_20`), 
`DT_node_lookup_21` AS 
(SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_19` < 15.5) THEN CASE WHEN (`ADS`.`Feature_10` < 0.5) THEN 3 ELSE CASE WHEN (`ADS`.`Feature_19` < 13.5) THEN 7 ELSE 8 END END ELSE CASE WHEN (`ADS`.`Feature_38` < 1.5) THEN CASE WHEN (`ADS`.`Feature_52` < 13.5) THEN 9 ELSE 10 END ELSE 6 END END AS node_id_2 
FROM digits AS `ADS`), 
`DT_node_data_21` AS 
(SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, 1 AS parent_id, 0.12322882562875748 AS `Score` UNION ALL SELECT 6 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, 2 AS parent_id, -0.01956692710518837 AS `Score` UNION ALL SELECT 7 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 4 AS parent_id, -0.052879489958286285 AS `Score` UNION ALL SELECT 8 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 4 AS parent_id, -0.006891447585076094 AS `Score` UNION ALL SELECT 9 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 5 AS parent_id, 0.12212451547384262 AS `Score` UNION ALL SELECT 10 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 5 AS parent_id, 0.2390308827161789 AS `Score`) AS `Values`), 
`DT_Output_21` AS 
(SELECT `DT_node_lookup_21`.`KEY` AS `KEY`, `DT_node_lookup_21`.node_id_2 AS node_id_2, `DT_node_data_21`.node_id AS node_id, `DT_node_data_21`.feature AS feature, `DT_node_data_21`.threshold AS threshold, `DT_node_data_21`.depth AS depth, `DT_node_data_21`.parent_id AS parent_id, `DT_node_data_21`.`Score` AS `Score` 
FROM `DT_node_lookup_21` LEFT OUTER JOIN `DT_node_data_21` ON `DT_node_lookup_21`.node_id_2 = `DT_node_data_21`.node_id), 
`XGB_Tree_1_2` AS 
(SELECT `DT_Output_21`.`KEY` AS `KEY`, 0.0 AS `Score_0`, `DT_Output_21`.`Score` AS `Score_1`, 0.0 AS `Score_2`, 0.0 AS `Score_3`, 0.0 AS `Score_4`, 0.0 AS `Score_5`, 0.0 AS `Score_6`, 0.0 AS `Score_7`, 0.0 AS `Score_8`, 0.0 AS `Score_9` 
FROM `DT_Output_21`), 
`DT_node_lookup_22` AS 
(SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_62` < 2.5) THEN CASE WHEN (`ADS`.`Feature_37` < 2.5) THEN CASE WHEN (`ADS`.`Feature_53` < 10.5) THEN 7 ELSE 8 END ELSE CASE WHEN (`ADS`.`Feature_45` < 0.5) THEN 9 ELSE 10 END END ELSE CASE WHEN (`ADS`.`Feature_46` < 4.5) THEN CASE WHEN (`ADS`.`Feature_45` < 7.5) THEN 11 ELSE 12 END ELSE CASE WHEN (`ADS`.`Feature_44` < 2.5) THEN 13 ELSE 14 END END END AS node_id_2 
FROM digits AS `ADS`), 
`DT_node_data_22` AS 
(SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 7 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 3 AS parent_id, -0.040193598717451096 AS `Score` UNION ALL SELECT 8 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 3 AS parent_id, 0.14359734952449799 AS `Score` UNION ALL SELECT 9 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 4 AS parent_id, -0.023760374635457993 AS `Score` UNION ALL SELECT 10 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 4 AS parent_id, -0.054483670741319656 AS `Score` UNION ALL SELECT 11 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 5 AS parent_id, 0.2283671349287033 AS `Score` UNION ALL SELECT 12 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 5 AS parent_id, 0.0050452942959964275 AS `Score` UNION ALL SELECT 13 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 6 AS parent_id, -0.05195283517241478 AS `Score` UNION ALL SELECT 14 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 6 AS parent_id, -0.013755477033555508 AS `Score`) AS `Values`), 
`DT_Output_22` AS 
(SELECT `DT_node_lookup_22`.`KEY` AS `KEY`, `DT_node_lookup_22`.node_id_2 AS node_id_2, `DT_node_data_22`.node_id AS node_id, `DT_node_data_22`.feature AS feature, `DT_node_data_22`.threshold AS threshold, `DT_node_data_22`.depth AS depth, `DT_node_data_22`.parent_id AS parent_id, `DT_node_data_22`.`Score` AS `Score` 
FROM `DT_node_lookup_22` LEFT OUTER JOIN `DT_node_data_22` ON `DT_node_lookup_22`.node_id_2 = `DT_node_data_22`.node_id), 
`XGB_Tree_2_2` AS 
(SELECT `DT_Output_22`.`KEY` AS `KEY`, 0.0 AS `Score_0`, 0.0 AS `Score_1`, `DT_Output_22`.`Score` AS `Score_2`, 0.0 AS `Score_3`, 0.0 AS `Score_4`, 0.0 AS `Score_5`, 0.0 AS `Score_6`, 0.0 AS `Score_7`, 0.0 AS `Score_8`, 0.0 AS `Score_9` 
FROM `DT_Output_22`), 
`DT_node_lookup_23` AS 
(SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_26` < 0.5) THEN CASE WHEN (`ADS`.`Feature_43` < 2.5) THEN CASE WHEN (`ADS`.`Feature_9` < 0.5) THEN 7 ELSE 8 END ELSE CASE WHEN (`ADS`.`Feature_5` < 7.5) THEN 9 ELSE 10 END END ELSE CASE WHEN (`ADS`.`Feature_18` < 3.5) THEN CASE WHEN (`ADS`.`Feature_43` < 6.5) THEN 11 ELSE 12 END ELSE CASE WHEN (`ADS`.`Feature_26` < 6.5) THEN 13 ELSE 14 END END END AS node_id_2 
FROM digits AS `ADS`), 
`DT_node_data_23` AS 
(SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 7 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 3 AS parent_id, 0.14876914024353027 AS `Score` UNION ALL SELECT 8 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 3 AS parent_id, 0.2385239154100418 AS `Score` UNION ALL SELECT 9 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 4 AS parent_id, -0.051788508892059326 AS `Score` UNION ALL SELECT 10 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 4 AS parent_id, 0.002367445034906268 AS `Score` UNION ALL SELECT 11 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 5 AS parent_id, 0.14999215304851532 AS `Score` UNION ALL SELECT 12 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 5 AS parent_id, -0.0350598581135273 AS `Score` UNION ALL SELECT 13 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 6 AS parent_id, -0.010331242345273495 AS `Score` UNION ALL SELECT 14 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 6 AS parent_id, -0.05095911771059036 AS `Score`) AS `Values`), 
`DT_Output_23` AS 
(SELECT `DT_node_lookup_23`.`KEY` AS `KEY`, `DT_node_lookup_23`.node_id_2 AS node_id_2, `DT_node_data_23`.node_id AS node_id, `DT_node_data_23`.feature AS feature, `DT_node_data_23`.threshold AS threshold, `DT_node_data_23`.depth AS depth, `DT_node_data_23`.parent_id AS parent_id, `DT_node_data_23`.`Score` AS `Score` 
FROM `DT_node_lookup_23` LEFT OUTER JOIN `DT_node_data_23` ON `DT_node_lookup_23`.node_id_2 = `DT_node_data_23`.node_id), 
`XGB_Tree_3_2` AS 
(SELECT `DT_Output_23`.`KEY` AS `KEY`, 0.0 AS `Score_0`, 0.0 AS `Score_1`, 0.0 AS `Score_2`, `DT_Output_23`.`Score` AS `Score_3`, 0.0 AS `Score_4`, 0.0 AS `Score_5`, 0.0 AS `Score_6`, 0.0 AS `Score_7`, 0.0 AS `Score_8`, 0.0 AS `Score_9` 
FROM `DT_Output_23`)
 SELECT `Score_Union_CTE_esu_2`.`KEY`, `Score_Union_CTE_esu_2`.`Score_0`, `Score_Union_CTE_esu_2`.`Score_1`, `Score_Union_CTE_esu_2`.`Score_2`, `Score_Union_CTE_esu_2`.`Score_3`, `Score_Union_CTE_esu_2`.`Score_4`, `Score_Union_CTE_esu_2`.`Score_5`, `Score_Union_CTE_esu_2`.`Score_6`, `Score_Union_CTE_esu_2`.`Score_7`, `Score_Union_CTE_esu_2`.`Score_8`, `Score_Union_CTE_esu_2`.`Score_9` 
FROM (SELECT `XGB_Tree_6_1`.`KEY` AS `KEY`, `XGB_Tree_6_1`.`Score_0` AS `Score_0`, `XGB_Tree_6_1`.`Score_1` AS `Score_1`, `XGB_Tree_6_1`.`Score_2` AS `Score_2`, `XGB_Tree_6_1`.`Score_3` AS `Score_3`, `XGB_Tree_6_1`.`Score_4` AS `Score_4`, `XGB_Tree_6_1`.`Score_5` AS `Score_5`, `XGB_Tree_6_1`.`Score_6` AS `Score_6`, `XGB_Tree_6_1`.`Score_7` AS `Score_7`, `XGB_Tree_6_1`.`Score_8` AS `Score_8`, `XGB_Tree_6_1`.`Score_9` AS `Score_9` 
FROM `XGB_Tree_6_1` UNION ALL SELECT `XGB_Tree_7_1`.`KEY` AS `KEY`, `XGB_Tree_7_1`.`Score_0` AS `Score_0`, `XGB_Tree_7_1`.`Score_1` AS `Score_1`, `XGB_Tree_7_1`.`Score_2` AS `Score_2`, `XGB_Tree_7_1`.`Score_3` AS `Score_3`, `XGB_Tree_7_1`.`Score_4` AS `Score_4`, `XGB_Tree_7_1`.`Score_5` AS `Score_5`, `XGB_Tree_7_1`.`Score_6` AS `Score_6`, `XGB_Tree_7_1`.`Score_7` AS `Score_7`, `XGB_Tree_7_1`.`Score_8` AS `Score_8`, `XGB_Tree_7_1`.`Score_9` AS `Score_9` 
FROM `XGB_Tree_7_1` UNION ALL SELECT `XGB_Tree_8_1`.`KEY` AS `KEY`, `XGB_Tree_8_1`.`Score_0` AS `Score_0`, `XGB_Tree_8_1`.`Score_1` AS `Score_1`, `XGB_Tree_8_1`.`Score_2` AS `Score_2`, `XGB_Tree_8_1`.`Score_3` AS `Score_3`, `XGB_Tree_8_1`.`Score_4` AS `Score_4`, `XGB_Tree_8_1`.`Score_5` AS `Score_5`, `XGB_Tree_8_1`.`Score_6` AS `Score_6`, `XGB_Tree_8_1`.`Score_7` AS `Score_7`, `XGB_Tree_8_1`.`Score_8` AS `Score_8`, `XGB_Tree_8_1`.`Score_9` AS `Score_9` 
FROM `XGB_Tree_8_1` UNION ALL SELECT `XGB_Tree_9_1`.`KEY` AS `KEY`, `XGB_Tree_9_1`.`Score_0` AS `Score_0`, `XGB_Tree_9_1`.`Score_1` AS `Score_1`, `XGB_Tree_9_1`.`Score_2` AS `Score_2`, `XGB_Tree_9_1`.`Score_3` AS `Score_3`, `XGB_Tree_9_1`.`Score_4` AS `Score_4`, `XGB_Tree_9_1`.`Score_5` AS `Score_5`, `XGB_Tree_9_1`.`Score_6` AS `Score_6`, `XGB_Tree_9_1`.`Score_7` AS `Score_7`, `XGB_Tree_9_1`.`Score_8` AS `Score_8`, `XGB_Tree_9_1`.`Score_9` AS `Score_9` 
FROM `XGB_Tree_9_1` UNION ALL SELECT `XGB_Tree_0_2`.`KEY` AS `KEY`, `XGB_Tree_0_2`.`Score_0` AS `Score_0`, `XGB_Tree_0_2`.`Score_1` AS `Score_1`, `XGB_Tree_0_2`.`Score_2` AS `Score_2`, `XGB_Tree_0_2`.`Score_3` AS `Score_3`, `XGB_Tree_0_2`.`Score_4` AS `Score_4`, `XGB_Tree_0_2`.`Score_5` AS `Score_5`, `XGB_Tree_0_2`.`Score_6` AS `Score_6`, `XGB_Tree_0_2`.`Score_7` AS `Score_7`, `XGB_Tree_0_2`.`Score_8` AS `Score_8`, `XGB_Tree_0_2`.`Score_9` AS `Score_9` 
FROM `XGB_Tree_0_2` UNION ALL SELECT `XGB_Tree_1_2`.`KEY` AS `KEY`, `XGB_Tree_1_2`.`Score_0` AS `Score_0`, `XGB_Tree_1_2`.`Score_1` AS `Score_1`, `XGB_Tree_1_2`.`Score_2` AS `Score_2`, `XGB_Tree_1_2`.`Score_3` AS `Score_3`, `XGB_Tree_1_2`.`Score_4` AS `Score_4`, `XGB_Tree_1_2`.`Score_5` AS `Score_5`, `XGB_Tree_1_2`.`Score_6` AS `Score_6`, `XGB_Tree_1_2`.`Score_7` AS `Score_7`, `XGB_Tree_1_2`.`Score_8` AS `Score_8`, `XGB_Tree_1_2`.`Score_9` AS `Score_9` 
FROM `XGB_Tree_1_2` UNION ALL SELECT `XGB_Tree_2_2`.`KEY` AS `KEY`, `XGB_Tree_2_2`.`Score_0` AS `Score_0`, `XGB_Tree_2_2`.`Score_1` AS `Score_1`, `XGB_Tree_2_2`.`Score_2` AS `Score_2`, `XGB_Tree_2_2`.`Score_3` AS `Score_3`, `XGB_Tree_2_2`.`Score_4` AS `Score_4`, `XGB_Tree_2_2`.`Score_5` AS `Score_5`, `XGB_Tree_2_2`.`Score_6` AS `Score_6`, `XGB_Tree_2_2`.`Score_7` AS `Score_7`, `XGB_Tree_2_2`.`Score_8` AS `Score_8`, `XGB_Tree_2_2`.`Score_9` AS `Score_9` 
FROM `XGB_Tree_2_2` UNION ALL SELECT `XGB_Tree_3_2`.`KEY` AS `KEY`, `XGB_Tree_3_2`.`Score_0` AS `Score_0`, `XGB_Tree_3_2`.`Score_1` AS `Score_1`, `XGB_Tree_3_2`.`Score_2` AS `Score_2`, `XGB_Tree_3_2`.`Score_3` AS `Score_3`, `XGB_Tree_3_2`.`Score_4` AS `Score_4`, `XGB_Tree_3_2`.`Score_5` AS `Score_5`, `XGB_Tree_3_2`.`Score_6` AS `Score_6`, `XGB_Tree_3_2`.`Score_7` AS `Score_7`, `XGB_Tree_3_2`.`Score_8` AS `Score_8`, `XGB_Tree_3_2`.`Score_9` AS `Score_9` 
FROM `XGB_Tree_3_2`) AS `Score_Union_CTE_esu_2`), 
`Score_Union_CTE_3` AS 
(WITH `DT_node_lookup_24` AS 
(SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_33` < 8.5) THEN CASE WHEN (`ADS`.`Feature_58` < 0.5) THEN CASE WHEN (`ADS`.`Feature_33` < 1.5) THEN 7 ELSE 8 END ELSE CASE WHEN (`ADS`.`Feature_30` < 7.5) THEN 9 ELSE 10 END END ELSE CASE WHEN (`ADS`.`Feature_19` < 8.5) THEN 5 ELSE 6 END END AS node_id_2 
FROM digits AS `ADS`), 
`DT_node_data_24` AS 
(SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 5 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, 2 AS parent_id, 0.10813464224338531 AS `Score` UNION ALL SELECT 6 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, 2 AS parent_id, 0.24495895206928253 AS `Score` UNION ALL SELECT 7 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 3 AS parent_id, -0.049342233687639236 AS `Score` UNION ALL SELECT 8 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 3 AS parent_id, 0.12882207334041595 AS `Score` UNION ALL SELECT 9 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 4 AS parent_id, -0.052591390907764435 AS `Score` UNION ALL SELECT 10 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 4 AS parent_id, -0.022746987640857697 AS `Score`) AS `Values`), 
`DT_Output_24` AS 
(SELECT `DT_node_lookup_24`.`KEY` AS `KEY`, `DT_node_lookup_24`.node_id_2 AS node_id_2, `DT_node_data_24`.node_id AS node_id, `DT_node_data_24`.feature AS feature, `DT_node_data_24`.threshold AS threshold, `DT_node_data_24`.depth AS depth, `DT_node_data_24`.parent_id AS parent_id, `DT_node_data_24`.`Score` AS `Score` 
FROM `DT_node_lookup_24` LEFT OUTER JOIN `DT_node_data_24` ON `DT_node_lookup_24`.node_id_2 = `DT_node_data_24`.node_id), 
`XGB_Tree_4_2` AS 
(SELECT `DT_Output_24`.`KEY` AS `KEY`, 0.0 AS `Score_0`, 0.0 AS `Score_1`, 0.0 AS `Score_2`, 0.0 AS `Score_3`, `DT_Output_24`.`Score` AS `Score_4`, 0.0 AS `Score_5`, 0.0 AS `Score_6`, 0.0 AS `Score_7`, 0.0 AS `Score_8`, 0.0 AS `Score_9` 
FROM `DT_Output_24`), 
`DT_node_lookup_25` AS 
(SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_21` < 1.5) THEN CASE WHEN (`ADS`.`Feature_5` < 3.5) THEN CASE WHEN (`ADS`.`Feature_5` < 0.5) THEN 7 ELSE 8 END ELSE CASE WHEN (`ADS`.`Feature_42` < 6.5) THEN 9 ELSE 10 END END ELSE CASE WHEN (`ADS`.`Feature_26` < 15.5) THEN 5 ELSE CASE WHEN (`ADS`.`Feature_10` < 12.5) THEN 11 ELSE 12 END END END AS node_id_2 
FROM digits AS `ADS`), 
`DT_node_data_25` AS 
(SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 5 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, 2 AS parent_id, -0.053063709288835526 AS `Score` UNION ALL SELECT 7 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 3 AS parent_id, -0.05352247506380081 AS `Score` UNION ALL SELECT 8 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 3 AS parent_id, -0.008341199718415737 AS `Score` UNION ALL SELECT 9 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 4 AS parent_id, 0.2458045482635498 AS `Score` UNION ALL SELECT 10 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 4 AS parent_id, 0.03820202872157097 AS `Score` UNION ALL SELECT 11 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 6 AS parent_id, -0.05208899453282356 AS `Score` UNION ALL SELECT 12 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 6 AS parent_id, 0.01912727579474449 AS `Score`) AS `Values`), 
`DT_Output_25` AS 
(SELECT `DT_node_lookup_25`.`KEY` AS `KEY`, `DT_node_lookup_25`.node_id_2 AS node_id_2, `DT_node_data_25`.node_id AS node_id, `DT_node_data_25`.feature AS feature, `DT_node_data_25`.threshold AS threshold, `DT_node_data_25`.depth AS depth, `DT_node_data_25`.parent_id AS parent_id, `DT_node_data_25`.`Score` AS `Score` 
FROM `DT_node_lookup_25` LEFT OUTER JOIN `DT_node_data_25` ON `DT_node_lookup_25`.node_id_2 = `DT_node_data_25`.node_id), 
`XGB_Tree_5_2` AS 
(SELECT `DT_Output_25`.`KEY` AS `KEY`, 0.0 AS `Score_0`, 0.0 AS `Score_1`, 0.0 AS `Score_2`, 0.0 AS `Score_3`, 0.0 AS `Score_4`, `DT_Output_25`.`Score` AS `Score_5`, 0.0 AS `Score_6`, 0.0 AS `Score_7`, 0.0 AS `Score_8`, 0.0 AS `Score_9` 
FROM `DT_Output_25`), 
`DT_node_lookup_26` AS 
(SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_21` < 0.5) THEN CASE WHEN (`ADS`.`Feature_42` < 8.5) THEN CASE WHEN (`ADS`.`Feature_10` < 12.5) THEN 7 ELSE 8 END ELSE CASE WHEN (`ADS`.`Feature_46` < 5.5) THEN 9 ELSE 10 END END ELSE CASE WHEN (`ADS`.`Feature_12` < 2.5) THEN 5 ELSE 6 END END AS node_id_2 
FROM digits AS `ADS`), 
`DT_node_data_26` AS 
(SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 5 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, 2 AS parent_id, -0.03254018723964691 AS `Score` UNION ALL SELECT 6 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, 2 AS parent_id, -0.05331974849104881 AS `Score` UNION ALL SELECT 7 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 3 AS parent_id, -0.02283930592238903 AS `Score` UNION ALL SELECT 8 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 3 AS parent_id, -0.0528218112885952 AS `Score` UNION ALL SELECT 9 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 4 AS parent_id, 0.07792124152183533 AS `Score` UNION ALL SELECT 10 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 4 AS parent_id, 0.23665545880794525 AS `Score`) AS `Values`), 
`DT_Output_26` AS 
(SELECT `DT_node_lookup_26`.`KEY` AS `KEY`, `DT_node_lookup_26`.node_id_2 AS node_id_2, `DT_node_data_26`.node_id AS node_id, `DT_node_data_26`.feature AS feature, `DT_node_data_26`.threshold AS threshold, `DT_node_data_26`.depth AS depth, `DT_node_data_26`.parent_id AS parent_id, `DT_node_data_26`.`Score` AS `Score` 
FROM `DT_node_lookup_26` LEFT OUTER JOIN `DT_node_data_26` ON `DT_node_lookup_26`.node_id_2 = `DT_node_data_26`.node_id), 
`XGB_Tree_6_2` AS 
(SELECT `DT_Output_26`.`KEY` AS `KEY`, 0.0 AS `Score_0`, 0.0 AS `Score_1`, 0.0 AS `Score_2`, 0.0 AS `Score_3`, 0.0 AS `Score_4`, 0.0 AS `Score_5`, `DT_Output_26`.`Score` AS `Score_6`, 0.0 AS `Score_7`, 0.0 AS `Score_8`, 0.0 AS `Score_9` 
FROM `DT_Output_26`), 
`DT_node_lookup_27` AS 
(SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_60` < 7.5) THEN CASE WHEN (`ADS`.`Feature_26` < 9.5) THEN CASE WHEN (`ADS`.`Feature_36` < 14.5) THEN 7 ELSE 8 END ELSE CASE WHEN (`ADS`.`Feature_17` < 1.5) THEN 9 ELSE 10 END END ELSE CASE WHEN (`ADS`.`Feature_14` < 6.5) THEN CASE WHEN (`ADS`.`Feature_60` < 9.5) THEN 11 ELSE 12 END ELSE 6 END END AS node_id_2 
FROM digits AS `ADS`), 
`DT_node_data_27` AS 
(SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 6 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, 2 AS parent_id, -0.006462218705564737 AS `Score` UNION ALL SELECT 7 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 3 AS parent_id, 0.10430070012807846 AS `Score` UNION ALL SELECT 8 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 3 AS parent_id, 0.24806153774261475 AS `Score` UNION ALL SELECT 9 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 4 AS parent_id, 0.12266023457050323 AS `Score` UNION ALL SELECT 10 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 4 AS parent_id, -0.045513566583395004 AS `Score` UNION ALL SELECT 11 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 5 AS parent_id, -0.034205030649900436 AS `Score` UNION ALL SELECT 12 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 5 AS parent_id, -0.05454021319746971 AS `Score`) AS `Values`), 
`DT_Output_27` AS 
(SELECT `DT_node_lookup_27`.`KEY` AS `KEY`, `DT_node_lookup_27`.node_id_2 AS node_id_2, `DT_node_data_27`.node_id AS node_id, `DT_node_data_27`.feature AS feature, `DT_node_data_27`.threshold AS threshold, `DT_node_data_27`.depth AS depth, `DT_node_data_27`.parent_id AS parent_id, `DT_node_data_27`.`Score` AS `Score` 
FROM `DT_node_lookup_27` LEFT OUTER JOIN `DT_node_data_27` ON `DT_node_lookup_27`.node_id_2 = `DT_node_data_27`.node_id), 
`XGB_Tree_7_2` AS 
(SELECT `DT_Output_27`.`KEY` AS `KEY`, 0.0 AS `Score_0`, 0.0 AS `Score_1`, 0.0 AS `Score_2`, 0.0 AS `Score_3`, 0.0 AS `Score_4`, 0.0 AS `Score_5`, 0.0 AS `Score_6`, `DT_Output_27`.`Score` AS `Score_7`, 0.0 AS `Score_8`, 0.0 AS `Score_9` 
FROM `DT_Output_27`), 
`DT_node_lookup_28` AS 
(SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_38` < 0.5) THEN CASE WHEN (`ADS`.`Feature_21` < 4.5) THEN CASE WHEN (`ADS`.`Feature_52` < 7.5) THEN 7 ELSE 8 END ELSE CASE WHEN (`ADS`.`Feature_42` < 7.5) THEN 9 ELSE 10 END END ELSE CASE WHEN (`ADS`.`Feature_27` < 12.5) THEN 5 ELSE CASE WHEN (`ADS`.`Feature_38` < 3.5) THEN 11 ELSE 12 END END END AS node_id_2 
FROM digits AS `ADS`), 
`DT_node_data_28` AS 
(SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 5 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, 2 AS parent_id, -0.05423889309167862 AS `Score` UNION ALL SELECT 7 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 3 AS parent_id, -0.018585849553346634 AS `Score` UNION ALL SELECT 8 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 3 AS parent_id, -0.05134585127234459 AS `Score` UNION ALL SELECT 9 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 4 AS parent_id, -0.0025886946823447943 AS `Score` UNION ALL SELECT 10 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 4 AS parent_id, 0.17803367972373962 AS `Score` UNION ALL SELECT 11 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 6 AS parent_id, 0.016280556097626686 AS `Score` UNION ALL SELECT 12 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 6 AS parent_id, -0.0526711642742157 AS `Score`) AS `Values`), 
`DT_Output_28` AS 
(SELECT `DT_node_lookup_28`.`KEY` AS `KEY`, `DT_node_lookup_28`.node_id_2 AS node_id_2, `DT_node_data_28`.node_id AS node_id, `DT_node_data_28`.feature AS feature, `DT_node_data_28`.threshold AS threshold, `DT_node_data_28`.depth AS depth, `DT_node_data_28`.parent_id AS parent_id, `DT_node_data_28`.`Score` AS `Score` 
FROM `DT_node_lookup_28` LEFT OUTER JOIN `DT_node_data_28` ON `DT_node_lookup_28`.node_id_2 = `DT_node_data_28`.node_id), 
`XGB_Tree_8_2` AS 
(SELECT `DT_Output_28`.`KEY` AS `KEY`, 0.0 AS `Score_0`, 0.0 AS `Score_1`, 0.0 AS `Score_2`, 0.0 AS `Score_3`, 0.0 AS `Score_4`, 0.0 AS `Score_5`, 0.0 AS `Score_6`, 0.0 AS `Score_7`, `DT_Output_28`.`Score` AS `Score_8`, 0.0 AS `Score_9` 
FROM `DT_Output_28`), 
`DT_node_lookup_29` AS 
(SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_43` < 0.5) THEN CASE WHEN (`ADS`.`Feature_29` < 11.5) THEN CASE WHEN (`ADS`.`Feature_52` < 4.5) THEN 7 ELSE 8 END ELSE CASE WHEN (`ADS`.`Feature_33` < 0.5) THEN 9 ELSE 10 END END ELSE CASE WHEN (`ADS`.`Feature_43` < 3.5) THEN CASE WHEN (`ADS`.`Feature_29` < 11.5) THEN 11 ELSE 12 END ELSE CASE WHEN (`ADS`.`Feature_60` < 1.5) THEN 13 ELSE 14 END END END AS node_id_2 
FROM digits AS `ADS`), 
`DT_node_data_29` AS 
(SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 7 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 3 AS parent_id, 0.03242747485637665 AS `Score` UNION ALL SELECT 8 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 3 AS parent_id, -0.03840891644358635 AS `Score` UNION ALL SELECT 9 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 4 AS parent_id, 0.2103656530380249 AS `Score` UNION ALL SELECT 10 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 4 AS parent_id, 0.03716650977730751 AS `Score` UNION ALL SELECT 11 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 5 AS parent_id, -0.039887432008981705 AS `Score` UNION ALL SELECT 12 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 5 AS parent_id, 0.061097681522369385 AS `Score` UNION ALL SELECT 13 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 6 AS parent_id, -0.023756293579936028 AS `Score` UNION ALL SELECT 14 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 6 AS parent_id, -0.05298374965786934 AS `Score`) AS `Values`), 
`DT_Output_29` AS 
(SELECT `DT_node_lookup_29`.`KEY` AS `KEY`, `DT_node_lookup_29`.node_id_2 AS node_id_2, `DT_node_data_29`.node_id AS node_id, `DT_node_data_29`.feature AS feature, `DT_node_data_29`.threshold AS threshold, `DT_node_data_29`.depth AS depth, `DT_node_data_29`.parent_id AS parent_id, `DT_node_data_29`.`Score` AS `Score` 
FROM `DT_node_lookup_29` LEFT OUTER JOIN `DT_node_data_29` ON `DT_node_lookup_29`.node_id_2 = `DT_node_data_29`.node_id), 
`XGB_Tree_9_2` AS 
(SELECT `DT_Output_29`.`KEY` AS `KEY`, 0.0 AS `Score_0`, 0.0 AS `Score_1`, 0.0 AS `Score_2`, 0.0 AS `Score_3`, 0.0 AS `Score_4`, 0.0 AS `Score_5`, 0.0 AS `Score_6`, 0.0 AS `Score_7`, 0.0 AS `Score_8`, `DT_Output_29`.`Score` AS `Score_9` 
FROM `DT_Output_29`), 
`DT_node_lookup_30` AS 
(SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_36` < 0.5) THEN CASE WHEN (`ADS`.`Feature_33` < 0.5) THEN 3 ELSE CASE WHEN (`ADS`.`Feature_21` < 8.5) THEN 7 ELSE 8 END END ELSE CASE WHEN (`ADS`.`Feature_36` < 3.5) THEN 5 ELSE 6 END END AS node_id_2 
FROM digits AS `ADS`), 
`DT_node_data_30` AS 
(SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, 1 AS parent_id, -0.04416768252849579 AS `Score` UNION ALL SELECT 5 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, 2 AS parent_id, -0.02298910729587078 AS `Score` UNION ALL SELECT 6 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, 2 AS parent_id, -0.05426811799407005 AS `Score` UNION ALL SELECT 7 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 4 AS parent_id, 0.08690767735242844 AS `Score` UNION ALL SELECT 8 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 4 AS parent_id, 0.2009095698595047 AS `Score`) AS `Values`), 
`DT_Output_30` AS 
(SELECT `DT_node_lookup_30`.`KEY` AS `KEY`, `DT_node_lookup_30`.node_id_2 AS node_id_2, `DT_node_data_30`.node_id AS node_id, `DT_node_data_30`.feature AS feature, `DT_node_data_30`.threshold AS threshold, `DT_node_data_30`.depth AS depth, `DT_node_data_30`.parent_id AS parent_id, `DT_node_data_30`.`Score` AS `Score` 
FROM `DT_node_lookup_30` LEFT OUTER JOIN `DT_node_data_30` ON `DT_node_lookup_30`.node_id_2 = `DT_node_data_30`.node_id), 
`XGB_Tree_0_3` AS 
(SELECT `DT_Output_30`.`KEY` AS `KEY`, `DT_Output_30`.`Score` AS `Score_0`, 0.0 AS `Score_1`, 0.0 AS `Score_2`, 0.0 AS `Score_3`, 0.0 AS `Score_4`, 0.0 AS `Score_5`, 0.0 AS `Score_6`, 0.0 AS `Score_7`, 0.0 AS `Score_8`, 0.0 AS `Score_9` 
FROM `DT_Output_30`), 
`DT_node_lookup_31` AS 
(SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_20` < 15.5) THEN CASE WHEN (`ADS`.`Feature_19` < 15.5) THEN CASE WHEN (`ADS`.`Feature_10` < 4.5) THEN 7 ELSE 8 END ELSE CASE WHEN (`ADS`.`Feature_37` < 2.5) THEN 9 ELSE 10 END END ELSE CASE WHEN (`ADS`.`Feature_10` < 13.5) THEN CASE WHEN (`ADS`.`Feature_2` < 4.5) THEN 11 ELSE 12 END ELSE 6 END END AS node_id_2 
FROM digits AS `ADS`), 
`DT_node_data_31` AS 
(SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 6 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, 2 AS parent_id, -0.04568067565560341 AS `Score` UNION ALL SELECT 7 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 3 AS parent_id, -0.025645246729254723 AS `Score` UNION ALL SELECT 8 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 3 AS parent_id, -0.05359559878706932 AS `Score` UNION ALL SELECT 9 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 4 AS parent_id, 0.16347520053386688 AS `Score` UNION ALL SELECT 10 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 4 AS parent_id, -0.017452631145715714 AS `Score` UNION ALL SELECT 11 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 5 AS parent_id, 0.21143761277198792 AS `Score` UNION ALL SELECT 12 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 5 AS parent_id, 0.09096337854862213 AS `Score`) AS `Values`), 
`DT_Output_31` AS 
(SELECT `DT_node_lookup_31`.`KEY` AS `KEY`, `DT_node_lookup_31`.node_id_2 AS node_id_2, `DT_node_data_31`.node_id AS node_id, `DT_node_data_31`.feature AS feature, `DT_node_data_31`.threshold AS threshold, `DT_node_data_31`.depth AS depth, `DT_node_data_31`.parent_id AS parent_id, `DT_node_data_31`.`Score` AS `Score` 
FROM `DT_node_lookup_31` LEFT OUTER JOIN `DT_node_data_31` ON `DT_node_lookup_31`.node_id_2 = `DT_node_data_31`.node_id), 
`XGB_Tree_1_3` AS 
(SELECT `DT_Output_31`.`KEY` AS `KEY`, 0.0 AS `Score_0`, `DT_Output_31`.`Score` AS `Score_1`, 0.0 AS `Score_2`, 0.0 AS `Score_3`, 0.0 AS `Score_4`, 0.0 AS `Score_5`, 0.0 AS `Score_6`, 0.0 AS `Score_7`, 0.0 AS `Score_8`, 0.0 AS `Score_9` 
FROM `DT_Output_31`)
 SELECT `Score_Union_CTE_esu_3`.`KEY`, `Score_Union_CTE_esu_3`.`Score_0`, `Score_Union_CTE_esu_3`.`Score_1`, `Score_Union_CTE_esu_3`.`Score_2`, `Score_Union_CTE_esu_3`.`Score_3`, `Score_Union_CTE_esu_3`.`Score_4`, `Score_Union_CTE_esu_3`.`Score_5`, `Score_Union_CTE_esu_3`.`Score_6`, `Score_Union_CTE_esu_3`.`Score_7`, `Score_Union_CTE_esu_3`.`Score_8`, `Score_Union_CTE_esu_3`.`Score_9` 
FROM (SELECT `XGB_Tree_4_2`.`KEY` AS `KEY`, `XGB_Tree_4_2`.`Score_0` AS `Score_0`, `XGB_Tree_4_2`.`Score_1` AS `Score_1`, `XGB_Tree_4_2`.`Score_2` AS `Score_2`, `XGB_Tree_4_2`.`Score_3` AS `Score_3`, `XGB_Tree_4_2`.`Score_4` AS `Score_4`, `XGB_Tree_4_2`.`Score_5` AS `Score_5`, `XGB_Tree_4_2`.`Score_6` AS `Score_6`, `XGB_Tree_4_2`.`Score_7` AS `Score_7`, `XGB_Tree_4_2`.`Score_8` AS `Score_8`, `XGB_Tree_4_2`.`Score_9` AS `Score_9` 
FROM `XGB_Tree_4_2` UNION ALL SELECT `XGB_Tree_5_2`.`KEY` AS `KEY`, `XGB_Tree_5_2`.`Score_0` AS `Score_0`, `XGB_Tree_5_2`.`Score_1` AS `Score_1`, `XGB_Tree_5_2`.`Score_2` AS `Score_2`, `XGB_Tree_5_2`.`Score_3` AS `Score_3`, `XGB_Tree_5_2`.`Score_4` AS `Score_4`, `XGB_Tree_5_2`.`Score_5` AS `Score_5`, `XGB_Tree_5_2`.`Score_6` AS `Score_6`, `XGB_Tree_5_2`.`Score_7` AS `Score_7`, `XGB_Tree_5_2`.`Score_8` AS `Score_8`, `XGB_Tree_5_2`.`Score_9` AS `Score_9` 
FROM `XGB_Tree_5_2` UNION ALL SELECT `XGB_Tree_6_2`.`KEY` AS `KEY`, `XGB_Tree_6_2`.`Score_0` AS `Score_0`, `XGB_Tree_6_2`.`Score_1` AS `Score_1`, `XGB_Tree_6_2`.`Score_2` AS `Score_2`, `XGB_Tree_6_2`.`Score_3` AS `Score_3`, `XGB_Tree_6_2`.`Score_4` AS `Score_4`, `XGB_Tree_6_2`.`Score_5` AS `Score_5`, `XGB_Tree_6_2`.`Score_6` AS `Score_6`, `XGB_Tree_6_2`.`Score_7` AS `Score_7`, `XGB_Tree_6_2`.`Score_8` AS `Score_8`, `XGB_Tree_6_2`.`Score_9` AS `Score_9` 
FROM `XGB_Tree_6_2` UNION ALL SELECT `XGB_Tree_7_2`.`KEY` AS `KEY`, `XGB_Tree_7_2`.`Score_0` AS `Score_0`, `XGB_Tree_7_2`.`Score_1` AS `Score_1`, `XGB_Tree_7_2`.`Score_2` AS `Score_2`, `XGB_Tree_7_2`.`Score_3` AS `Score_3`, `XGB_Tree_7_2`.`Score_4` AS `Score_4`, `XGB_Tree_7_2`.`Score_5` AS `Score_5`, `XGB_Tree_7_2`.`Score_6` AS `Score_6`, `XGB_Tree_7_2`.`Score_7` AS `Score_7`, `XGB_Tree_7_2`.`Score_8` AS `Score_8`, `XGB_Tree_7_2`.`Score_9` AS `Score_9` 
FROM `XGB_Tree_7_2` UNION ALL SELECT `XGB_Tree_8_2`.`KEY` AS `KEY`, `XGB_Tree_8_2`.`Score_0` AS `Score_0`, `XGB_Tree_8_2`.`Score_1` AS `Score_1`, `XGB_Tree_8_2`.`Score_2` AS `Score_2`, `XGB_Tree_8_2`.`Score_3` AS `Score_3`, `XGB_Tree_8_2`.`Score_4` AS `Score_4`, `XGB_Tree_8_2`.`Score_5` AS `Score_5`, `XGB_Tree_8_2`.`Score_6` AS `Score_6`, `XGB_Tree_8_2`.`Score_7` AS `Score_7`, `XGB_Tree_8_2`.`Score_8` AS `Score_8`, `XGB_Tree_8_2`.`Score_9` AS `Score_9` 
FROM `XGB_Tree_8_2` UNION ALL SELECT `XGB_Tree_9_2`.`KEY` AS `KEY`, `XGB_Tree_9_2`.`Score_0` AS `Score_0`, `XGB_Tree_9_2`.`Score_1` AS `Score_1`, `XGB_Tree_9_2`.`Score_2` AS `Score_2`, `XGB_Tree_9_2`.`Score_3` AS `Score_3`, `XGB_Tree_9_2`.`Score_4` AS `Score_4`, `XGB_Tree_9_2`.`Score_5` AS `Score_5`, `XGB_Tree_9_2`.`Score_6` AS `Score_6`, `XGB_Tree_9_2`.`Score_7` AS `Score_7`, `XGB_Tree_9_2`.`Score_8` AS `Score_8`, `XGB_Tree_9_2`.`Score_9` AS `Score_9` 
FROM `XGB_Tree_9_2` UNION ALL SELECT `XGB_Tree_0_3`.`KEY` AS `KEY`, `XGB_Tree_0_3`.`Score_0` AS `Score_0`, `XGB_Tree_0_3`.`Score_1` AS `Score_1`, `XGB_Tree_0_3`.`Score_2` AS `Score_2`, `XGB_Tree_0_3`.`Score_3` AS `Score_3`, `XGB_Tree_0_3`.`Score_4` AS `Score_4`, `XGB_Tree_0_3`.`Score_5` AS `Score_5`, `XGB_Tree_0_3`.`Score_6` AS `Score_6`, `XGB_Tree_0_3`.`Score_7` AS `Score_7`, `XGB_Tree_0_3`.`Score_8` AS `Score_8`, `XGB_Tree_0_3`.`Score_9` AS `Score_9` 
FROM `XGB_Tree_0_3` UNION ALL SELECT `XGB_Tree_1_3`.`KEY` AS `KEY`, `XGB_Tree_1_3`.`Score_0` AS `Score_0`, `XGB_Tree_1_3`.`Score_1` AS `Score_1`, `XGB_Tree_1_3`.`Score_2` AS `Score_2`, `XGB_Tree_1_3`.`Score_3` AS `Score_3`, `XGB_Tree_1_3`.`Score_4` AS `Score_4`, `XGB_Tree_1_3`.`Score_5` AS `Score_5`, `XGB_Tree_1_3`.`Score_6` AS `Score_6`, `XGB_Tree_1_3`.`Score_7` AS `Score_7`, `XGB_Tree_1_3`.`Score_8` AS `Score_8`, `XGB_Tree_1_3`.`Score_9` AS `Score_9` 
FROM `XGB_Tree_1_3`) AS `Score_Union_CTE_esu_3`), 
`Score_Union_CTE_4` AS 
(WITH `DT_node_lookup_32` AS 
(SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_62` < 2.5) THEN CASE WHEN (`ADS`.`Feature_37` < 1.5) THEN CASE WHEN (`ADS`.`Feature_53` < 10.5) THEN 7 ELSE 8 END ELSE CASE WHEN (`ADS`.`Feature_51` < 15.5) THEN 9 ELSE 10 END END ELSE CASE WHEN (`ADS`.`Feature_46` < 4.5) THEN CASE WHEN (`ADS`.`Feature_19` < 12.5) THEN 11 ELSE 12 END ELSE CASE WHEN (`ADS`.`Feature_51` < 11.5) THEN 13 ELSE 14 END END END AS node_id_2 
FROM digits AS `ADS`), 
`DT_node_data_32` AS 
(SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 7 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 3 AS parent_id, -0.04162544012069702 AS `Score` UNION ALL SELECT 8 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 3 AS parent_id, 0.15157228708267212 AS `Score` UNION ALL SELECT 9 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 4 AS parent_id, -0.05424482375383377 AS `Score` UNION ALL SELECT 10 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 4 AS parent_id, -0.02244284562766552 AS `Score` UNION ALL SELECT 11 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 5 AS parent_id, 0.18625134229660034 AS `Score` UNION ALL SELECT 12 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 5 AS parent_id, 0.00253272638656199 AS `Score` UNION ALL SELECT 13 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 6 AS parent_id, -0.05151901766657829 AS `Score` UNION ALL SELECT 14 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 6 AS parent_id, -0.013521708548069 AS `Score`) AS `Values`), 
`DT_Output_32` AS 
(SELECT `DT_node_lookup_32`.`KEY` AS `KEY`, `DT_node_lookup_32`.node_id_2 AS node_id_2, `DT_node_data_32`.node_id AS node_id, `DT_node_data_32`.feature AS feature, `DT_node_data_32`.threshold AS threshold, `DT_node_data_32`.depth AS depth, `DT_node_data_32`.parent_id AS parent_id, `DT_node_data_32`.`Score` AS `Score` 
FROM `DT_node_lookup_32` LEFT OUTER JOIN `DT_node_data_32` ON `DT_node_lookup_32`.node_id_2 = `DT_node_data_32`.node_id), 
`XGB_Tree_2_3` AS 
(SELECT `DT_Output_32`.`KEY` AS `KEY`, 0.0 AS `Score_0`, 0.0 AS `Score_1`, `DT_Output_32`.`Score` AS `Score_2`, 0.0 AS `Score_3`, 0.0 AS `Score_4`, 0.0 AS `Score_5`, 0.0 AS `Score_6`, 0.0 AS `Score_7`, 0.0 AS `Score_8`, 0.0 AS `Score_9` 
FROM `DT_Output_32`), 
`DT_node_lookup_33` AS 
(SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_26` < 5.5) THEN CASE WHEN (`ADS`.`Feature_43` < 2.5) THEN CASE WHEN (`ADS`.`Feature_30` < 0.5) THEN 7 ELSE 8 END ELSE CASE WHEN (`ADS`.`Feature_51` < 8.5) THEN 9 ELSE 10 END END ELSE CASE WHEN (`ADS`.`Feature_54` < 5.5) THEN 5 ELSE CASE WHEN (`ADS`.`Feature_20` < 7.5) THEN 11 ELSE 12 END END END AS node_id_2 
FROM digits AS `ADS`), 
`DT_node_data_33` AS 
(SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 5 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, 2 AS parent_id, -0.053257524967193604 AS `Score` UNION ALL SELECT 7 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 3 AS parent_id, 0.19949455559253693 AS `Score` UNION ALL SELECT 8 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 3 AS parent_id, 0.014892578125 AS `Score` UNION ALL SELECT 9 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 4 AS parent_id, 0.03013257496058941 AS `Score` UNION ALL SELECT 10 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 4 AS parent_id, -0.04693377763032913 AS `Score` UNION ALL SELECT 11 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 6 AS parent_id, -0.04958438500761986 AS `Score` UNION ALL SELECT 12 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 6 AS parent_id, 0.03255090117454529 AS `Score`) AS `Values`), 
`DT_Output_33` AS 
(SELECT `DT_node_lookup_33`.`KEY` AS `KEY`, `DT_node_lookup_33`.node_id_2 AS node_id_2, `DT_node_data_33`.node_id AS node_id, `DT_node_data_33`.feature AS feature, `DT_node_data_33`.threshold AS threshold, `DT_node_data_33`.depth AS depth, `DT_node_data_33`.parent_id AS parent_id, `DT_node_data_33`.`Score` AS `Score` 
FROM `DT_node_lookup_33` LEFT OUTER JOIN `DT_node_data_33` ON `DT_node_lookup_33`.node_id_2 = `DT_node_data_33`.node_id), 
`XGB_Tree_3_3` AS 
(SELECT `DT_Output_33`.`KEY` AS `KEY`, 0.0 AS `Score_0`, 0.0 AS `Score_1`, 0.0 AS `Score_2`, `DT_Output_33`.`Score` AS `Score_3`, 0.0 AS `Score_4`, 0.0 AS `Score_5`, 0.0 AS `Score_6`, 0.0 AS `Score_7`, 0.0 AS `Score_8`, 0.0 AS `Score_9` 
FROM `DT_Output_33`), 
`DT_node_lookup_34` AS 
(SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_33` < 8.5) THEN CASE WHEN (`ADS`.`Feature_30` < 8.5) THEN CASE WHEN (`ADS`.`Feature_3` < 5.5) THEN 7 ELSE 8 END ELSE 4 END ELSE CASE WHEN (`ADS`.`Feature_58` < 0.5) THEN 5 ELSE 6 END END AS node_id_2 
FROM digits AS `ADS`), 
`DT_node_data_34` AS 
(SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, 1 AS parent_id, 0.11029904335737228 AS `Score` UNION ALL SELECT 5 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, 2 AS parent_id, 0.2094239443540573 AS `Score` UNION ALL SELECT 6 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, 2 AS parent_id, 0.052643097937107086 AS `Score` UNION ALL SELECT 7 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 3 AS parent_id, 0.0500672422349453 AS `Score` UNION ALL SELECT 8 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 3 AS parent_id, -0.047065116465091705 AS `Score`) AS `Values`), 
`DT_Output_34` AS 
(SELECT `DT_node_lookup_34`.`KEY` AS `KEY`, `DT_node_lookup_34`.node_id_2 AS node_id_2, `DT_node_data_34`.node_id AS node_id, `DT_node_data_34`.feature AS feature, `DT_node_data_34`.threshold AS threshold, `DT_node_data_34`.depth AS depth, `DT_node_data_34`.parent_id AS parent_id, `DT_node_data_34`.`Score` AS `Score` 
FROM `DT_node_lookup_34` LEFT OUTER JOIN `DT_node_data_34` ON `DT_node_lookup_34`.node_id_2 = `DT_node_data_34`.node_id), 
`XGB_Tree_4_3` AS 
(SELECT `DT_Output_34`.`KEY` AS `KEY`, 0.0 AS `Score_0`, 0.0 AS `Score_1`, 0.0 AS `Score_2`, 0.0 AS `Score_3`, `DT_Output_34`.`Score` AS `Score_4`, 0.0 AS `Score_5`, 0.0 AS `Score_6`, 0.0 AS `Score_7`, 0.0 AS `Score_8`, 0.0 AS `Score_9` 
FROM `DT_Output_34`), 
`DT_node_lookup_35` AS 
(SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_21` < 1.5) THEN CASE WHEN (`ADS`.`Feature_5` < 3.5) THEN CASE WHEN (`ADS`.`Feature_5` < 0.5) THEN 7 ELSE 8 END ELSE CASE WHEN (`ADS`.`Feature_10` < 11.5) THEN 9 ELSE 10 END END ELSE CASE WHEN (`ADS`.`Feature_26` < 15.5) THEN 5 ELSE CASE WHEN (`ADS`.`Feature_2` < 2.5) THEN 11 ELSE 12 END END END AS node_id_2 
FROM digits AS `ADS`), 
`DT_node_data_35` AS 
(SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 5 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, 2 AS parent_id, -0.05268268659710884 AS `Score` UNION ALL SELECT 7 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 3 AS parent_id, -0.053112614899873734 AS `Score` UNION ALL SELECT 8 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 3 AS parent_id, -0.007393037434667349 AS `Score` UNION ALL SELECT 9 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 4 AS parent_id, 0.033163540065288544 AS `Score` UNION ALL SELECT 10 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 4 AS parent_id, 0.1983344554901123 AS `Score` UNION ALL SELECT 11 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 6 AS parent_id, -0.051847584545612335 AS `Score` UNION ALL SELECT 12 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 6 AS parent_id, 0.018456842750310898 AS `Score`) AS `Values`), 
`DT_Output_35` AS 
(SELECT `DT_node_lookup_35`.`KEY` AS `KEY`, `DT_node_lookup_35`.node_id_2 AS node_id_2, `DT_node_data_35`.node_id AS node_id, `DT_node_data_35`.feature AS feature, `DT_node_data_35`.threshold AS threshold, `DT_node_data_35`.depth AS depth, `DT_node_data_35`.parent_id AS parent_id, `DT_node_data_35`.`Score` AS `Score` 
FROM `DT_node_lookup_35` LEFT OUTER JOIN `DT_node_data_35` ON `DT_node_lookup_35`.node_id_2 = `DT_node_data_35`.node_id), 
`XGB_Tree_5_3` AS 
(SELECT `DT_Output_35`.`KEY` AS `KEY`, 0.0 AS `Score_0`, 0.0 AS `Score_1`, 0.0 AS `Score_2`, 0.0 AS `Score_3`, 0.0 AS `Score_4`, `DT_Output_35`.`Score` AS `Score_5`, 0.0 AS `Score_6`, 0.0 AS `Score_7`, 0.0 AS `Score_8`, 0.0 AS `Score_9` 
FROM `DT_Output_35`), 
`DT_node_lookup_36` AS 
(SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_21` < 0.5) THEN CASE WHEN (`ADS`.`Feature_42` < 7.5) THEN 3 ELSE CASE WHEN (`ADS`.`Feature_54` < 2.5) THEN 7 ELSE 8 END END ELSE CASE WHEN (`ADS`.`Feature_4` < 5.5) THEN 5 ELSE 6 END END AS node_id_2 
FROM digits AS `ADS`), 
`DT_node_data_36` AS 
(SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, 1 AS parent_id, -0.04991184175014496 AS `Score` UNION ALL SELECT 5 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, 2 AS parent_id, -0.03408415988087654 AS `Score` UNION ALL SELECT 6 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, 2 AS parent_id, -0.05295097827911377 AS `Score` UNION ALL SELECT 7 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 4 AS parent_id, 0.0008557417313568294 AS `Score` UNION ALL SELECT 8 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 4 AS parent_id, 0.19244083762168884 AS `Score`) AS `Values`), 
`DT_Output_36` AS 
(SELECT `DT_node_lookup_36`.`KEY` AS `KEY`, `DT_node_lookup_36`.node_id_2 AS node_id_2, `DT_node_data_36`.node_id AS node_id, `DT_node_data_36`.feature AS feature, `DT_node_data_36`.threshold AS threshold, `DT_node_data_36`.depth AS depth, `DT_node_data_36`.parent_id AS parent_id, `DT_node_data_36`.`Score` AS `Score` 
FROM `DT_node_lookup_36` LEFT OUTER JOIN `DT_node_data_36` ON `DT_node_lookup_36`.node_id_2 = `DT_node_data_36`.node_id), 
`XGB_Tree_6_3` AS 
(SELECT `DT_Output_36`.`KEY` AS `KEY`, 0.0 AS `Score_0`, 0.0 AS `Score_1`, 0.0 AS `Score_2`, 0.0 AS `Score_3`, 0.0 AS `Score_4`, 0.0 AS `Score_5`, `DT_Output_36`.`Score` AS `Score_6`, 0.0 AS `Score_7`, 0.0 AS `Score_8`, 0.0 AS `Score_9` 
FROM `DT_Output_36`), 
`DT_node_lookup_37` AS 
(SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_60` < 7.5) THEN CASE WHEN (`ADS`.`Feature_26` < 11.5) THEN CASE WHEN (`ADS`.`Feature_36` < 12.5) THEN 7 ELSE 8 END ELSE CASE WHEN (`ADS`.`Feature_29` < 10.5) THEN 9 ELSE 10 END END ELSE CASE WHEN (`ADS`.`Feature_14` < 6.5) THEN CASE WHEN (`ADS`.`Feature_60` < 9.5) THEN 11 ELSE 12 END ELSE 6 END END AS node_id_2 
FROM digits AS `ADS`), 
`DT_node_data_37` AS 
(SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 6 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, 2 AS parent_id, -0.005937022622674704 AS `Score` UNION ALL SELECT 7 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 3 AS parent_id, 0.036511342972517014 AS `Score` UNION ALL SELECT 8 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 3 AS parent_id, 0.19687147438526154 AS `Score` UNION ALL SELECT 9 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 4 AS parent_id, -0.042526718229055405 AS `Score` UNION ALL SELECT 10 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 4 AS parent_id, 0.06975218653678894 AS `Score` UNION ALL SELECT 11 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 5 AS parent_id, -0.0333261638879776 AS `Score` UNION ALL SELECT 12 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 5 AS parent_id, -0.05422106385231018 AS `Score`) AS `Values`), 
`DT_Output_37` AS 
(SELECT `DT_node_lookup_37`.`KEY` AS `KEY`, `DT_node_lookup_37`.node_id_2 AS node_id_2, `DT_node_data_37`.node_id AS node_id, `DT_node_data_37`.feature AS feature, `DT_node_data_37`.threshold AS threshold, `DT_node_data_37`.depth AS depth, `DT_node_data_37`.parent_id AS parent_id, `DT_node_data_37`.`Score` AS `Score` 
FROM `DT_node_lookup_37` LEFT OUTER JOIN `DT_node_data_37` ON `DT_node_lookup_37`.node_id_2 = `DT_node_data_37`.node_id), 
`XGB_Tree_7_3` AS 
(SELECT `DT_Output_37`.`KEY` AS `KEY`, 0.0 AS `Score_0`, 0.0 AS `Score_1`, 0.0 AS `Score_2`, 0.0 AS `Score_3`, 0.0 AS `Score_4`, 0.0 AS `Score_5`, 0.0 AS `Score_6`, `DT_Output_37`.`Score` AS `Score_7`, 0.0 AS `Score_8`, 0.0 AS `Score_9` 
FROM `DT_Output_37`), 
`DT_node_lookup_38` AS 
(SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_38` < 0.5) THEN CASE WHEN (`ADS`.`Feature_21` < 4.5) THEN CASE WHEN (`ADS`.`Feature_52` < 7.5) THEN 7 ELSE 8 END ELSE CASE WHEN (`ADS`.`Feature_35` < 8.5) THEN 9 ELSE 10 END END ELSE CASE WHEN (`ADS`.`Feature_27` < 12.5) THEN 5 ELSE CASE WHEN (`ADS`.`Feature_43` < 7.5) THEN 11 ELSE 12 END END END AS node_id_2 
FROM digits AS `ADS`), 
`DT_node_data_38` AS 
(SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 5 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, 2 AS parent_id, -0.05389195680618286 AS `Score` UNION ALL SELECT 7 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 3 AS parent_id, -0.017528457567095757 AS `Score` UNION ALL SELECT 8 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 3 AS parent_id, -0.050826944410800934 AS `Score` UNION ALL SELECT 9 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 4 AS parent_id, -0.048972126096487045 AS `Score` UNION ALL SELECT 10 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 4 AS parent_id, 0.1249564066529274 AS `Score` UNION ALL SELECT 11 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 6 AS parent_id, -0.048408474773168564 AS `Score` UNION ALL SELECT 12 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 6 AS parent_id, 0.022975612431764603 AS `Score`) AS `Values`), 
`DT_Output_38` AS 
(SELECT `DT_node_lookup_38`.`KEY` AS `KEY`, `DT_node_lookup_38`.node_id_2 AS node_id_2, `DT_node_data_38`.node_id AS node_id, `DT_node_data_38`.feature AS feature, `DT_node_data_38`.threshold AS threshold, `DT_node_data_38`.depth AS depth, `DT_node_data_38`.parent_id AS parent_id, `DT_node_data_38`.`Score` AS `Score` 
FROM `DT_node_lookup_38` LEFT OUTER JOIN `DT_node_data_38` ON `DT_node_lookup_38`.node_id_2 = `DT_node_data_38`.node_id), 
`XGB_Tree_8_3` AS 
(SELECT `DT_Output_38`.`KEY` AS `KEY`, 0.0 AS `Score_0`, 0.0 AS `Score_1`, 0.0 AS `Score_2`, 0.0 AS `Score_3`, 0.0 AS `Score_4`, 0.0 AS `Score_5`, 0.0 AS `Score_6`, 0.0 AS `Score_7`, `DT_Output_38`.`Score` AS `Score_8`, 0.0 AS `Score_9` 
FROM `DT_Output_38`), 
`DT_node_lookup_39` AS 
(SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_43` < 0.5) THEN CASE WHEN (`ADS`.`Feature_29` < 11.5) THEN CASE WHEN (`ADS`.`Feature_52` < 4.5) THEN 7 ELSE 8 END ELSE CASE WHEN (`ADS`.`Feature_27` < 7.5) THEN 9 ELSE 10 END END ELSE CASE WHEN (`ADS`.`Feature_43` < 3.5) THEN CASE WHEN (`ADS`.`Feature_28` < 10.5) THEN 11 ELSE 12 END ELSE CASE WHEN (`ADS`.`Feature_60` < 1.5) THEN 13 ELSE 14 END END END AS node_id_2 
FROM digits AS `ADS`), 
`DT_node_data_39` AS 
(SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 7 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 3 AS parent_id, 0.02994956448674202 AS `Score` UNION ALL SELECT 8 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 3 AS parent_id, -0.03743002563714981 AS `Score` UNION ALL SELECT 9 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 4 AS parent_id, 0.014289197511970997 AS `Score` UNION ALL SELECT 10 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 4 AS parent_id, 0.17261843383312225 AS `Score` UNION ALL SELECT 11 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 5 AS parent_id, -0.044651687145233154 AS `Score` UNION ALL SELECT 12 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 5 AS parent_id, 0.04985909163951874 AS `Score` UNION ALL SELECT 13 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 6 AS parent_id, -0.022744543850421906 AS `Score` UNION ALL SELECT 14 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 6 AS parent_id, -0.0525805838406086 AS `Score`) AS `Values`), 
`DT_Output_39` AS 
(SELECT `DT_node_lookup_39`.`KEY` AS `KEY`, `DT_node_lookup_39`.node_id_2 AS node_id_2, `DT_node_data_39`.node_id AS node_id, `DT_node_data_39`.feature AS feature, `DT_node_data_39`.threshold AS threshold, `DT_node_data_39`.depth AS depth, `DT_node_data_39`.parent_id AS parent_id, `DT_node_data_39`.`Score` AS `Score` 
FROM `DT_node_lookup_39` LEFT OUTER JOIN `DT_node_data_39` ON `DT_node_lookup_39`.node_id_2 = `DT_node_data_39`.node_id), 
`XGB_Tree_9_3` AS 
(SELECT `DT_Output_39`.`KEY` AS `KEY`, 0.0 AS `Score_0`, 0.0 AS `Score_1`, 0.0 AS `Score_2`, 0.0 AS `Score_3`, 0.0 AS `Score_4`, 0.0 AS `Score_5`, 0.0 AS `Score_6`, 0.0 AS `Score_7`, 0.0 AS `Score_8`, `DT_Output_39`.`Score` AS `Score_9` 
FROM `DT_Output_39`)
 SELECT `Score_Union_CTE_esu_4`.`KEY`, `Score_Union_CTE_esu_4`.`Score_0`, `Score_Union_CTE_esu_4`.`Score_1`, `Score_Union_CTE_esu_4`.`Score_2`, `Score_Union_CTE_esu_4`.`Score_3`, `Score_Union_CTE_esu_4`.`Score_4`, `Score_Union_CTE_esu_4`.`Score_5`, `Score_Union_CTE_esu_4`.`Score_6`, `Score_Union_CTE_esu_4`.`Score_7`, `Score_Union_CTE_esu_4`.`Score_8`, `Score_Union_CTE_esu_4`.`Score_9` 
FROM (SELECT `XGB_Tree_2_3`.`KEY` AS `KEY`, `XGB_Tree_2_3`.`Score_0` AS `Score_0`, `XGB_Tree_2_3`.`Score_1` AS `Score_1`, `XGB_Tree_2_3`.`Score_2` AS `Score_2`, `XGB_Tree_2_3`.`Score_3` AS `Score_3`, `XGB_Tree_2_3`.`Score_4` AS `Score_4`, `XGB_Tree_2_3`.`Score_5` AS `Score_5`, `XGB_Tree_2_3`.`Score_6` AS `Score_6`, `XGB_Tree_2_3`.`Score_7` AS `Score_7`, `XGB_Tree_2_3`.`Score_8` AS `Score_8`, `XGB_Tree_2_3`.`Score_9` AS `Score_9` 
FROM `XGB_Tree_2_3` UNION ALL SELECT `XGB_Tree_3_3`.`KEY` AS `KEY`, `XGB_Tree_3_3`.`Score_0` AS `Score_0`, `XGB_Tree_3_3`.`Score_1` AS `Score_1`, `XGB_Tree_3_3`.`Score_2` AS `Score_2`, `XGB_Tree_3_3`.`Score_3` AS `Score_3`, `XGB_Tree_3_3`.`Score_4` AS `Score_4`, `XGB_Tree_3_3`.`Score_5` AS `Score_5`, `XGB_Tree_3_3`.`Score_6` AS `Score_6`, `XGB_Tree_3_3`.`Score_7` AS `Score_7`, `XGB_Tree_3_3`.`Score_8` AS `Score_8`, `XGB_Tree_3_3`.`Score_9` AS `Score_9` 
FROM `XGB_Tree_3_3` UNION ALL SELECT `XGB_Tree_4_3`.`KEY` AS `KEY`, `XGB_Tree_4_3`.`Score_0` AS `Score_0`, `XGB_Tree_4_3`.`Score_1` AS `Score_1`, `XGB_Tree_4_3`.`Score_2` AS `Score_2`, `XGB_Tree_4_3`.`Score_3` AS `Score_3`, `XGB_Tree_4_3`.`Score_4` AS `Score_4`, `XGB_Tree_4_3`.`Score_5` AS `Score_5`, `XGB_Tree_4_3`.`Score_6` AS `Score_6`, `XGB_Tree_4_3`.`Score_7` AS `Score_7`, `XGB_Tree_4_3`.`Score_8` AS `Score_8`, `XGB_Tree_4_3`.`Score_9` AS `Score_9` 
FROM `XGB_Tree_4_3` UNION ALL SELECT `XGB_Tree_5_3`.`KEY` AS `KEY`, `XGB_Tree_5_3`.`Score_0` AS `Score_0`, `XGB_Tree_5_3`.`Score_1` AS `Score_1`, `XGB_Tree_5_3`.`Score_2` AS `Score_2`, `XGB_Tree_5_3`.`Score_3` AS `Score_3`, `XGB_Tree_5_3`.`Score_4` AS `Score_4`, `XGB_Tree_5_3`.`Score_5` AS `Score_5`, `XGB_Tree_5_3`.`Score_6` AS `Score_6`, `XGB_Tree_5_3`.`Score_7` AS `Score_7`, `XGB_Tree_5_3`.`Score_8` AS `Score_8`, `XGB_Tree_5_3`.`Score_9` AS `Score_9` 
FROM `XGB_Tree_5_3` UNION ALL SELECT `XGB_Tree_6_3`.`KEY` AS `KEY`, `XGB_Tree_6_3`.`Score_0` AS `Score_0`, `XGB_Tree_6_3`.`Score_1` AS `Score_1`, `XGB_Tree_6_3`.`Score_2` AS `Score_2`, `XGB_Tree_6_3`.`Score_3` AS `Score_3`, `XGB_Tree_6_3`.`Score_4` AS `Score_4`, `XGB_Tree_6_3`.`Score_5` AS `Score_5`, `XGB_Tree_6_3`.`Score_6` AS `Score_6`, `XGB_Tree_6_3`.`Score_7` AS `Score_7`, `XGB_Tree_6_3`.`Score_8` AS `Score_8`, `XGB_Tree_6_3`.`Score_9` AS `Score_9` 
FROM `XGB_Tree_6_3` UNION ALL SELECT `XGB_Tree_7_3`.`KEY` AS `KEY`, `XGB_Tree_7_3`.`Score_0` AS `Score_0`, `XGB_Tree_7_3`.`Score_1` AS `Score_1`, `XGB_Tree_7_3`.`Score_2` AS `Score_2`, `XGB_Tree_7_3`.`Score_3` AS `Score_3`, `XGB_Tree_7_3`.`Score_4` AS `Score_4`, `XGB_Tree_7_3`.`Score_5` AS `Score_5`, `XGB_Tree_7_3`.`Score_6` AS `Score_6`, `XGB_Tree_7_3`.`Score_7` AS `Score_7`, `XGB_Tree_7_3`.`Score_8` AS `Score_8`, `XGB_Tree_7_3`.`Score_9` AS `Score_9` 
FROM `XGB_Tree_7_3` UNION ALL SELECT `XGB_Tree_8_3`.`KEY` AS `KEY`, `XGB_Tree_8_3`.`Score_0` AS `Score_0`, `XGB_Tree_8_3`.`Score_1` AS `Score_1`, `XGB_Tree_8_3`.`Score_2` AS `Score_2`, `XGB_Tree_8_3`.`Score_3` AS `Score_3`, `XGB_Tree_8_3`.`Score_4` AS `Score_4`, `XGB_Tree_8_3`.`Score_5` AS `Score_5`, `XGB_Tree_8_3`.`Score_6` AS `Score_6`, `XGB_Tree_8_3`.`Score_7` AS `Score_7`, `XGB_Tree_8_3`.`Score_8` AS `Score_8`, `XGB_Tree_8_3`.`Score_9` AS `Score_9` 
FROM `XGB_Tree_8_3` UNION ALL SELECT `XGB_Tree_9_3`.`KEY` AS `KEY`, `XGB_Tree_9_3`.`Score_0` AS `Score_0`, `XGB_Tree_9_3`.`Score_1` AS `Score_1`, `XGB_Tree_9_3`.`Score_2` AS `Score_2`, `XGB_Tree_9_3`.`Score_3` AS `Score_3`, `XGB_Tree_9_3`.`Score_4` AS `Score_4`, `XGB_Tree_9_3`.`Score_5` AS `Score_5`, `XGB_Tree_9_3`.`Score_6` AS `Score_6`, `XGB_Tree_9_3`.`Score_7` AS `Score_7`, `XGB_Tree_9_3`.`Score_8` AS `Score_8`, `XGB_Tree_9_3`.`Score_9` AS `Score_9` 
FROM `XGB_Tree_9_3`) AS `Score_Union_CTE_esu_4`), 
`Score_Union_CTE_5` AS 
(WITH `DT_node_lookup_40` AS 
(SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_36` < 0.5) THEN CASE WHEN (`ADS`.`Feature_28` < 4.5) THEN CASE WHEN (`ADS`.`Feature_21` < 8.5) THEN 7 ELSE 8 END ELSE 4 END ELSE CASE WHEN (`ADS`.`Feature_36` < 3.5) THEN 5 ELSE 6 END END AS node_id_2 
FROM digits AS `ADS`), 
`DT_node_data_40` AS 
(SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, 1 AS parent_id, -0.04996355623006821 AS `Score` UNION ALL SELECT 5 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, 2 AS parent_id, -0.02201833762228489 AS `Score` UNION ALL SELECT 6 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, 2 AS parent_id, -0.05396927148103714 AS `Score` UNION ALL SELECT 7 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 3 AS parent_id, 0.08234163373708725 AS `Score` UNION ALL SELECT 8 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 3 AS parent_id, 0.16535356640815735 AS `Score`) AS `Values`), 
`DT_Output_40` AS 
(SELECT `DT_node_lookup_40`.`KEY` AS `KEY`, `DT_node_lookup_40`.node_id_2 AS node_id_2, `DT_node_data_40`.node_id AS node_id, `DT_node_data_40`.feature AS feature, `DT_node_data_40`.threshold AS threshold, `DT_node_data_40`.depth AS depth, `DT_node_data_40`.parent_id AS parent_id, `DT_node_data_40`.`Score` AS `Score` 
FROM `DT_node_lookup_40` LEFT OUTER JOIN `DT_node_data_40` ON `DT_node_lookup_40`.node_id_2 = `DT_node_data_40`.node_id), 
`XGB_Tree_0_4` AS 
(SELECT `DT_Output_40`.`KEY` AS `KEY`, `DT_Output_40`.`Score` AS `Score_0`, 0.0 AS `Score_1`, 0.0 AS `Score_2`, 0.0 AS `Score_3`, 0.0 AS `Score_4`, 0.0 AS `Score_5`, 0.0 AS `Score_6`, 0.0 AS `Score_7`, 0.0 AS `Score_8`, 0.0 AS `Score_9` 
FROM `DT_Output_40`), 
`DT_node_lookup_41` AS 
(SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_19` < 11.5) THEN CASE WHEN (`ADS`.`Feature_10` < 3.5) THEN 3 ELSE 4 END ELSE CASE WHEN (`ADS`.`Feature_20` < 12.5) THEN CASE WHEN (`ADS`.`Feature_4` < 5.5) THEN 7 ELSE 8 END ELSE CASE WHEN (`ADS`.`Feature_2` < 5.5) THEN 9 ELSE 10 END END END AS node_id_2 
FROM digits AS `ADS`), 
`DT_node_data_41` AS 
(SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, 1 AS parent_id, 0.017274487763643265 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, 1 AS parent_id, -0.053276427090168 AS `Score` UNION ALL SELECT 7 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 5 AS parent_id, 0.12498282641172409 AS `Score` UNION ALL SELECT 8 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 5 AS parent_id, -0.045910194516181946 AS `Score` UNION ALL SELECT 9 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 6 AS parent_id, 0.16764090955257416 AS `Score` UNION ALL SELECT 10 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 6 AS parent_id, 0.03537411242723465 AS `Score`) AS `Values`), 
`DT_Output_41` AS 
(SELECT `DT_node_lookup_41`.`KEY` AS `KEY`, `DT_node_lookup_41`.node_id_2 AS node_id_2, `DT_node_data_41`.node_id AS node_id, `DT_node_data_41`.feature AS feature, `DT_node_data_41`.threshold AS threshold, `DT_node_data_41`.depth AS depth, `DT_node_data_41`.parent_id AS parent_id, `DT_node_data_41`.`Score` AS `Score` 
FROM `DT_node_lookup_41` LEFT OUTER JOIN `DT_node_data_41` ON `DT_node_lookup_41`.node_id_2 = `DT_node_data_41`.node_id), 
`XGB_Tree_1_4` AS 
(SELECT `DT_Output_41`.`KEY` AS `KEY`, 0.0 AS `Score_0`, `DT_Output_41`.`Score` AS `Score_1`, 0.0 AS `Score_2`, 0.0 AS `Score_3`, 0.0 AS `Score_4`, 0.0 AS `Score_5`, 0.0 AS `Score_6`, 0.0 AS `Score_7`, 0.0 AS `Score_8`, 0.0 AS `Score_9` 
FROM `DT_Output_41`), 
`DT_node_lookup_42` AS 
(SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_26` < 6.5) THEN CASE WHEN (`ADS`.`Feature_38` < 0.5) THEN CASE WHEN (`ADS`.`Feature_54` < 1.5) THEN 7 ELSE 8 END ELSE CASE WHEN (`ADS`.`Feature_28` < 11.5) THEN 9 ELSE 10 END END ELSE CASE WHEN (`ADS`.`Feature_62` < 9.5) THEN CASE WHEN (`ADS`.`Feature_62` < 3.5) THEN 11 ELSE 12 END ELSE 6 END END AS node_id_2 
FROM digits AS `ADS`), 
`DT_node_data_42` AS 
(SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 6 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, 2 AS parent_id, 0.026996908709406853 AS `Score` UNION ALL SELECT 7 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 3 AS parent_id, 0.0005397101631388068 AS `Score` UNION ALL SELECT 8 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 3 AS parent_id, 0.16153781116008759 AS `Score` UNION ALL SELECT 9 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 4 AS parent_id, -0.014293322339653969 AS `Score` UNION ALL SELECT 10 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 4 AS parent_id, -0.05234968289732933 AS `Score` UNION ALL SELECT 11 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 5 AS parent_id, -0.05415792390704155 AS `Score` UNION ALL SELECT 12 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 5 AS parent_id, -0.03505907580256462 AS `Score`) AS `Values`), 
`DT_Output_42` AS 
(SELECT `DT_node_lookup_42`.`KEY` AS `KEY`, `DT_node_lookup_42`.node_id_2 AS node_id_2, `DT_node_data_42`.node_id AS node_id, `DT_node_data_42`.feature AS feature, `DT_node_data_42`.threshold AS threshold, `DT_node_data_42`.depth AS depth, `DT_node_data_42`.parent_id AS parent_id, `DT_node_data_42`.`Score` AS `Score` 
FROM `DT_node_lookup_42` LEFT OUTER JOIN `DT_node_data_42` ON `DT_node_lookup_42`.node_id_2 = `DT_node_data_42`.node_id), 
`XGB_Tree_2_4` AS 
(SELECT `DT_Output_42`.`KEY` AS `KEY`, 0.0 AS `Score_0`, 0.0 AS `Score_1`, `DT_Output_42`.`Score` AS `Score_2`, 0.0 AS `Score_3`, 0.0 AS `Score_4`, 0.0 AS `Score_5`, 0.0 AS `Score_6`, 0.0 AS `Score_7`, 0.0 AS `Score_8`, 0.0 AS `Score_9` 
FROM `DT_Output_42`), 
`DT_node_lookup_43` AS 
(SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_26` < 5.5) THEN CASE WHEN (`ADS`.`Feature_43` < 2.5) THEN CASE WHEN (`ADS`.`Feature_30` < 0.5) THEN 7 ELSE 8 END ELSE CASE WHEN (`ADS`.`Feature_51` < 8.5) THEN 9 ELSE 10 END END ELSE CASE WHEN (`ADS`.`Feature_54` < 5.5) THEN 5 ELSE CASE WHEN (`ADS`.`Feature_20` < 7.5) THEN 11 ELSE 12 END END END AS node_id_2 
FROM digits AS `ADS`), 
`DT_node_data_43` AS 
(SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 5 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, 2 AS parent_id, -0.052904803305864334 AS `Score` UNION ALL SELECT 7 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 3 AS parent_id, 0.16584116220474243 AS `Score` UNION ALL SELECT 8 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 3 AS parent_id, 0.01369822770357132 AS `Score` UNION ALL SELECT 9 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 4 AS parent_id, 0.028332171961665154 AS `Score` UNION ALL SELECT 10 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 4 AS parent_id, -0.04624162241816521 AS `Score` UNION ALL SELECT 11 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 6 AS parent_id, -0.04900453984737396 AS `Score` UNION ALL SELECT 12 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 6 AS parent_id, 0.030152643099427223 AS `Score`) AS `Values`), 
`DT_Output_43` AS 
(SELECT `DT_node_lookup_43`.`KEY` AS `KEY`, `DT_node_lookup_43`.node_id_2 AS node_id_2, `DT_node_data_43`.node_id AS node_id, `DT_node_data_43`.feature AS feature, `DT_node_data_43`.threshold AS threshold, `DT_node_data_43`.depth AS depth, `DT_node_data_43`.parent_id AS parent_id, `DT_node_data_43`.`Score` AS `Score` 
FROM `DT_node_lookup_43` LEFT OUTER JOIN `DT_node_data_43` ON `DT_node_lookup_43`.node_id_2 = `DT_node_data_43`.node_id), 
`XGB_Tree_3_4` AS 
(SELECT `DT_Output_43`.`KEY` AS `KEY`, 0.0 AS `Score_0`, 0.0 AS `Score_1`, 0.0 AS `Score_2`, `DT_Output_43`.`Score` AS `Score_3`, 0.0 AS `Score_4`, 0.0 AS `Score_5`, 0.0 AS `Score_6`, 0.0 AS `Score_7`, 0.0 AS `Score_8`, 0.0 AS `Score_9` 
FROM `DT_Output_43`), 
`DT_node_lookup_44` AS 
(SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_33` < 4.5) THEN CASE WHEN (`ADS`.`Feature_34` < 13.5) THEN CASE WHEN (`ADS`.`Feature_12` < 4.5) THEN 7 ELSE 8 END ELSE CASE WHEN (`ADS`.`Feature_58` < 0.5) THEN 9 ELSE 10 END END ELSE CASE WHEN (`ADS`.`Feature_44` < 10.5) THEN CASE WHEN (`ADS`.`Feature_13` < 5.5) THEN 11 ELSE 12 END ELSE CASE WHEN (`ADS`.`Feature_5` < 4.5) THEN 13 ELSE 14 END END END AS node_id_2 
FROM digits AS `ADS`), 
`DT_node_data_44` AS 
(SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 7 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 3 AS parent_id, -0.02599930576980114 AS `Score` UNION ALL SELECT 8 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 3 AS parent_id, -0.05336958169937134 AS `Score` UNION ALL SELECT 9 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 4 AS parent_id, 0.05828946456313133 AS `Score` UNION ALL SELECT 10 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 4 AS parent_id, -0.041196033358573914 AS `Score` UNION ALL SELECT 11 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 5 AS parent_id, -0.0011008448200300336 AS `Score` UNION ALL SELECT 12 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 5 AS parent_id, -0.052847594022750854 AS `Score` UNION ALL SELECT 13 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 6 AS parent_id, 0.19583715498447418 AS `Score` UNION ALL SELECT 14 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 6 AS parent_id, 0.07650043070316315 AS `Score`) AS `Values`), 
`DT_Output_44` AS 
(SELECT `DT_node_lookup_44`.`KEY` AS `KEY`, `DT_node_lookup_44`.node_id_2 AS node_id_2, `DT_node_data_44`.node_id AS node_id, `DT_node_data_44`.feature AS feature, `DT_node_data_44`.threshold AS threshold, `DT_node_data_44`.depth AS depth, `DT_node_data_44`.parent_id AS parent_id, `DT_node_data_44`.`Score` AS `Score` 
FROM `DT_node_lookup_44` LEFT OUTER JOIN `DT_node_data_44` ON `DT_node_lookup_44`.node_id_2 = `DT_node_data_44`.node_id), 
`XGB_Tree_4_4` AS 
(SELECT `DT_Output_44`.`KEY` AS `KEY`, 0.0 AS `Score_0`, 0.0 AS `Score_1`, 0.0 AS `Score_2`, 0.0 AS `Score_3`, `DT_Output_44`.`Score` AS `Score_4`, 0.0 AS `Score_5`, 0.0 AS `Score_6`, 0.0 AS `Score_7`, 0.0 AS `Score_8`, 0.0 AS `Score_9` 
FROM `DT_Output_44`), 
`DT_node_lookup_45` AS 
(SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_21` < 1.5) THEN CASE WHEN (`ADS`.`Feature_5` < 3.5) THEN CASE WHEN (`ADS`.`Feature_42` < 1.5) THEN 7 ELSE 8 END ELSE CASE WHEN (`ADS`.`Feature_42` < 7.5) THEN 9 ELSE 10 END END ELSE CASE WHEN (`ADS`.`Feature_21` < 3.5) THEN 5 ELSE CASE WHEN (`ADS`.`Feature_6` < 0.5) THEN 11 ELSE 12 END END END AS node_id_2 
FROM digits AS `ADS`), 
`DT_node_data_45` AS 
(SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 5 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, 2 AS parent_id, -0.012345640920102596 AS `Score` UNION ALL SELECT 7 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 3 AS parent_id, -0.005378255620598793 AS `Score` UNION ALL SELECT 8 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 3 AS parent_id, -0.05252743512392044 AS `Score` UNION ALL SELECT 9 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 4 AS parent_id, 0.16743043065071106 AS `Score` UNION ALL SELECT 10 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 4 AS parent_id, 0.018738731741905212 AS `Score` UNION ALL SELECT 11 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 6 AS parent_id, -0.05392295867204666 AS `Score` UNION ALL SELECT 12 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 6 AS parent_id, -0.03953910991549492 AS `Score`) AS `Values`), 
`DT_Output_45` AS 
(SELECT `DT_node_lookup_45`.`KEY` AS `KEY`, `DT_node_lookup_45`.node_id_2 AS node_id_2, `DT_node_data_45`.node_id AS node_id, `DT_node_data_45`.feature AS feature, `DT_node_data_45`.threshold AS threshold, `DT_node_data_45`.depth AS depth, `DT_node_data_45`.parent_id AS parent_id, `DT_node_data_45`.`Score` AS `Score` 
FROM `DT_node_lookup_45` LEFT OUTER JOIN `DT_node_data_45` ON `DT_node_lookup_45`.node_id_2 = `DT_node_data_45`.node_id), 
`XGB_Tree_5_4` AS 
(SELECT `DT_Output_45`.`KEY` AS `KEY`, 0.0 AS `Score_0`, 0.0 AS `Score_1`, 0.0 AS `Score_2`, 0.0 AS `Score_3`, 0.0 AS `Score_4`, `DT_Output_45`.`Score` AS `Score_5`, 0.0 AS `Score_6`, 0.0 AS `Score_7`, 0.0 AS `Score_8`, 0.0 AS `Score_9` 
FROM `DT_Output_45`), 
`DT_node_lookup_46` AS 
(SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_21` < 0.5) THEN CASE WHEN (`ADS`.`Feature_42` < 7.5) THEN 3 ELSE CASE WHEN (`ADS`.`Feature_54` < 2.5) THEN 7 ELSE 8 END END ELSE CASE WHEN (`ADS`.`Feature_4` < 5.5) THEN 5 ELSE 6 END END AS node_id_2 
FROM digits AS `ADS`), 
`DT_node_data_46` AS 
(SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, 1 AS parent_id, -0.0494103841483593 AS `Score` UNION ALL SELECT 5 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, 2 AS parent_id, -0.0332903191447258 AS `Score` UNION ALL SELECT 6 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, 2 AS parent_id, -0.05258147791028023 AS `Score` UNION ALL SELECT 7 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 4 AS parent_id, 0.0012844575103372335 AS `Score` UNION ALL SELECT 8 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 4 AS parent_id, 0.16208775341510773 AS `Score`) AS `Values`), 
`DT_Output_46` AS 
(SELECT `DT_node_lookup_46`.`KEY` AS `KEY`, `DT_node_lookup_46`.node_id_2 AS node_id_2, `DT_node_data_46`.node_id AS node_id, `DT_node_data_46`.feature AS feature, `DT_node_data_46`.threshold AS threshold, `DT_node_data_46`.depth AS depth, `DT_node_data_46`.parent_id AS parent_id, `DT_node_data_46`.`Score` AS `Score` 
FROM `DT_node_lookup_46` LEFT OUTER JOIN `DT_node_data_46` ON `DT_node_lookup_46`.node_id_2 = `DT_node_data_46`.node_id), 
`XGB_Tree_6_4` AS 
(SELECT `DT_Output_46`.`KEY` AS `KEY`, 0.0 AS `Score_0`, 0.0 AS `Score_1`, 0.0 AS `Score_2`, 0.0 AS `Score_3`, 0.0 AS `Score_4`, 0.0 AS `Score_5`, `DT_Output_46`.`Score` AS `Score_6`, 0.0 AS `Score_7`, 0.0 AS `Score_8`, 0.0 AS `Score_9` 
FROM `DT_Output_46`), 
`DT_node_lookup_47` AS 
(SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_53` < 0.5) THEN CASE WHEN (`ADS`.`Feature_37` < 0.5) THEN 3 ELSE CASE WHEN (`ADS`.`Feature_26` < 12.5) THEN 7 ELSE 8 END END ELSE CASE WHEN (`ADS`.`Feature_14` < 9.5) THEN CASE WHEN (`ADS`.`Feature_61` < 0.5) THEN 9 ELSE 10 END ELSE 6 END END AS node_id_2 
FROM digits AS `ADS`), 
`DT_node_data_47` AS 
(SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, 1 AS parent_id, -0.02786155417561531 AS `Score` UNION ALL SELECT 6 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, 2 AS parent_id, 0.01116995606571436 AS `Score` UNION ALL SELECT 7 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 4 AS parent_id, 0.17684023082256317 AS `Score` UNION ALL SELECT 8 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 4 AS parent_id, 0.014624306932091713 AS `Score` UNION ALL SELECT 9 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 5 AS parent_id, -0.0320485383272171 AS `Score` UNION ALL SELECT 10 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 5 AS parent_id, -0.05404367670416832 AS `Score`) AS `Values`), 
`DT_Output_47` AS 
(SELECT `DT_node_lookup_47`.`KEY` AS `KEY`, `DT_node_lookup_47`.node_id_2 AS node_id_2, `DT_node_data_47`.node_id AS node_id, `DT_node_data_47`.feature AS feature, `DT_node_data_47`.threshold AS threshold, `DT_node_data_47`.depth AS depth, `DT_node_data_47`.parent_id AS parent_id, `DT_node_data_47`.`Score` AS `Score` 
FROM `DT_node_lookup_47` LEFT OUTER JOIN `DT_node_data_47` ON `DT_node_lookup_47`.node_id_2 = `DT_node_data_47`.node_id), 
`XGB_Tree_7_4` AS 
(SELECT `DT_Output_47`.`KEY` AS `KEY`, 0.0 AS `Score_0`, 0.0 AS `Score_1`, 0.0 AS `Score_2`, 0.0 AS `Score_3`, 0.0 AS `Score_4`, 0.0 AS `Score_5`, 0.0 AS `Score_6`, `DT_Output_47`.`Score` AS `Score_7`, 0.0 AS `Score_8`, 0.0 AS `Score_9` 
FROM `DT_Output_47`)
 SELECT `Score_Union_CTE_esu_5`.`KEY`, `Score_Union_CTE_esu_5`.`Score_0`, `Score_Union_CTE_esu_5`.`Score_1`, `Score_Union_CTE_esu_5`.`Score_2`, `Score_Union_CTE_esu_5`.`Score_3`, `Score_Union_CTE_esu_5`.`Score_4`, `Score_Union_CTE_esu_5`.`Score_5`, `Score_Union_CTE_esu_5`.`Score_6`, `Score_Union_CTE_esu_5`.`Score_7`, `Score_Union_CTE_esu_5`.`Score_8`, `Score_Union_CTE_esu_5`.`Score_9` 
FROM (SELECT `XGB_Tree_0_4`.`KEY` AS `KEY`, `XGB_Tree_0_4`.`Score_0` AS `Score_0`, `XGB_Tree_0_4`.`Score_1` AS `Score_1`, `XGB_Tree_0_4`.`Score_2` AS `Score_2`, `XGB_Tree_0_4`.`Score_3` AS `Score_3`, `XGB_Tree_0_4`.`Score_4` AS `Score_4`, `XGB_Tree_0_4`.`Score_5` AS `Score_5`, `XGB_Tree_0_4`.`Score_6` AS `Score_6`, `XGB_Tree_0_4`.`Score_7` AS `Score_7`, `XGB_Tree_0_4`.`Score_8` AS `Score_8`, `XGB_Tree_0_4`.`Score_9` AS `Score_9` 
FROM `XGB_Tree_0_4` UNION ALL SELECT `XGB_Tree_1_4`.`KEY` AS `KEY`, `XGB_Tree_1_4`.`Score_0` AS `Score_0`, `XGB_Tree_1_4`.`Score_1` AS `Score_1`, `XGB_Tree_1_4`.`Score_2` AS `Score_2`, `XGB_Tree_1_4`.`Score_3` AS `Score_3`, `XGB_Tree_1_4`.`Score_4` AS `Score_4`, `XGB_Tree_1_4`.`Score_5` AS `Score_5`, `XGB_Tree_1_4`.`Score_6` AS `Score_6`, `XGB_Tree_1_4`.`Score_7` AS `Score_7`, `XGB_Tree_1_4`.`Score_8` AS `Score_8`, `XGB_Tree_1_4`.`Score_9` AS `Score_9` 
FROM `XGB_Tree_1_4` UNION ALL SELECT `XGB_Tree_2_4`.`KEY` AS `KEY`, `XGB_Tree_2_4`.`Score_0` AS `Score_0`, `XGB_Tree_2_4`.`Score_1` AS `Score_1`, `XGB_Tree_2_4`.`Score_2` AS `Score_2`, `XGB_Tree_2_4`.`Score_3` AS `Score_3`, `XGB_Tree_2_4`.`Score_4` AS `Score_4`, `XGB_Tree_2_4`.`Score_5` AS `Score_5`, `XGB_Tree_2_4`.`Score_6` AS `Score_6`, `XGB_Tree_2_4`.`Score_7` AS `Score_7`, `XGB_Tree_2_4`.`Score_8` AS `Score_8`, `XGB_Tree_2_4`.`Score_9` AS `Score_9` 
FROM `XGB_Tree_2_4` UNION ALL SELECT `XGB_Tree_3_4`.`KEY` AS `KEY`, `XGB_Tree_3_4`.`Score_0` AS `Score_0`, `XGB_Tree_3_4`.`Score_1` AS `Score_1`, `XGB_Tree_3_4`.`Score_2` AS `Score_2`, `XGB_Tree_3_4`.`Score_3` AS `Score_3`, `XGB_Tree_3_4`.`Score_4` AS `Score_4`, `XGB_Tree_3_4`.`Score_5` AS `Score_5`, `XGB_Tree_3_4`.`Score_6` AS `Score_6`, `XGB_Tree_3_4`.`Score_7` AS `Score_7`, `XGB_Tree_3_4`.`Score_8` AS `Score_8`, `XGB_Tree_3_4`.`Score_9` AS `Score_9` 
FROM `XGB_Tree_3_4` UNION ALL SELECT `XGB_Tree_4_4`.`KEY` AS `KEY`, `XGB_Tree_4_4`.`Score_0` AS `Score_0`, `XGB_Tree_4_4`.`Score_1` AS `Score_1`, `XGB_Tree_4_4`.`Score_2` AS `Score_2`, `XGB_Tree_4_4`.`Score_3` AS `Score_3`, `XGB_Tree_4_4`.`Score_4` AS `Score_4`, `XGB_Tree_4_4`.`Score_5` AS `Score_5`, `XGB_Tree_4_4`.`Score_6` AS `Score_6`, `XGB_Tree_4_4`.`Score_7` AS `Score_7`, `XGB_Tree_4_4`.`Score_8` AS `Score_8`, `XGB_Tree_4_4`.`Score_9` AS `Score_9` 
FROM `XGB_Tree_4_4` UNION ALL SELECT `XGB_Tree_5_4`.`KEY` AS `KEY`, `XGB_Tree_5_4`.`Score_0` AS `Score_0`, `XGB_Tree_5_4`.`Score_1` AS `Score_1`, `XGB_Tree_5_4`.`Score_2` AS `Score_2`, `XGB_Tree_5_4`.`Score_3` AS `Score_3`, `XGB_Tree_5_4`.`Score_4` AS `Score_4`, `XGB_Tree_5_4`.`Score_5` AS `Score_5`, `XGB_Tree_5_4`.`Score_6` AS `Score_6`, `XGB_Tree_5_4`.`Score_7` AS `Score_7`, `XGB_Tree_5_4`.`Score_8` AS `Score_8`, `XGB_Tree_5_4`.`Score_9` AS `Score_9` 
FROM `XGB_Tree_5_4` UNION ALL SELECT `XGB_Tree_6_4`.`KEY` AS `KEY`, `XGB_Tree_6_4`.`Score_0` AS `Score_0`, `XGB_Tree_6_4`.`Score_1` AS `Score_1`, `XGB_Tree_6_4`.`Score_2` AS `Score_2`, `XGB_Tree_6_4`.`Score_3` AS `Score_3`, `XGB_Tree_6_4`.`Score_4` AS `Score_4`, `XGB_Tree_6_4`.`Score_5` AS `Score_5`, `XGB_Tree_6_4`.`Score_6` AS `Score_6`, `XGB_Tree_6_4`.`Score_7` AS `Score_7`, `XGB_Tree_6_4`.`Score_8` AS `Score_8`, `XGB_Tree_6_4`.`Score_9` AS `Score_9` 
FROM `XGB_Tree_6_4` UNION ALL SELECT `XGB_Tree_7_4`.`KEY` AS `KEY`, `XGB_Tree_7_4`.`Score_0` AS `Score_0`, `XGB_Tree_7_4`.`Score_1` AS `Score_1`, `XGB_Tree_7_4`.`Score_2` AS `Score_2`, `XGB_Tree_7_4`.`Score_3` AS `Score_3`, `XGB_Tree_7_4`.`Score_4` AS `Score_4`, `XGB_Tree_7_4`.`Score_5` AS `Score_5`, `XGB_Tree_7_4`.`Score_6` AS `Score_6`, `XGB_Tree_7_4`.`Score_7` AS `Score_7`, `XGB_Tree_7_4`.`Score_8` AS `Score_8`, `XGB_Tree_7_4`.`Score_9` AS `Score_9` 
FROM `XGB_Tree_7_4`) AS `Score_Union_CTE_esu_5`), 
`Score_Union_CTE_6` AS 
(WITH `DT_node_lookup_48` AS 
(SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_38` < 0.5) THEN CASE WHEN (`ADS`.`Feature_42` < 3.5) THEN CASE WHEN (`ADS`.`Feature_45` < 11.5) THEN 7 ELSE 8 END ELSE CASE WHEN (`ADS`.`Feature_51` < 13.5) THEN 9 ELSE 10 END END ELSE CASE WHEN (`ADS`.`Feature_27` < 12.5) THEN 5 ELSE CASE WHEN (`ADS`.`Feature_38` < 3.5) THEN 11 ELSE 12 END END END AS node_id_2 
FROM digits AS `ADS`), 
`DT_node_data_48` AS 
(SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 5 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, 2 AS parent_id, -0.053572531789541245 AS `Score` UNION ALL SELECT 7 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 3 AS parent_id, -0.05131329968571663 AS `Score` UNION ALL SELECT 8 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 3 AS parent_id, 0.008672515861690044 AS `Score` UNION ALL SELECT 9 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 4 AS parent_id, 0.1353280395269394 AS `Score` UNION ALL SELECT 10 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 4 AS parent_id, -0.02786143682897091 AS `Score` UNION ALL SELECT 11 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 6 AS parent_id, 0.016178464516997337 AS `Score` UNION ALL SELECT 12 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 6 AS parent_id, -0.05201391503214836 AS `Score`) AS `Values`), 
`DT_Output_48` AS 
(SELECT `DT_node_lookup_48`.`KEY` AS `KEY`, `DT_node_lookup_48`.node_id_2 AS node_id_2, `DT_node_data_48`.node_id AS node_id, `DT_node_data_48`.feature AS feature, `DT_node_data_48`.threshold AS threshold, `DT_node_data_48`.depth AS depth, `DT_node_data_48`.parent_id AS parent_id, `DT_node_data_48`.`Score` AS `Score` 
FROM `DT_node_lookup_48` LEFT OUTER JOIN `DT_node_data_48` ON `DT_node_lookup_48`.node_id_2 = `DT_node_data_48`.node_id), 
`XGB_Tree_8_4` AS 
(SELECT `DT_Output_48`.`KEY` AS `KEY`, 0.0 AS `Score_0`, 0.0 AS `Score_1`, 0.0 AS `Score_2`, 0.0 AS `Score_3`, 0.0 AS `Score_4`, 0.0 AS `Score_5`, 0.0 AS `Score_6`, 0.0 AS `Score_7`, `DT_Output_48`.`Score` AS `Score_8`, 0.0 AS `Score_9` 
FROM `DT_Output_48`), 
`DT_node_lookup_49` AS 
(SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_43` < 0.5) THEN CASE WHEN (`ADS`.`Feature_21` < 10.5) THEN CASE WHEN (`ADS`.`Feature_61` < 10.5) THEN 7 ELSE 8 END ELSE CASE WHEN (`ADS`.`Feature_27` < 6.5) THEN 9 ELSE 10 END END ELSE CASE WHEN (`ADS`.`Feature_43` < 3.5) THEN CASE WHEN (`ADS`.`Feature_29` < 12.5) THEN 11 ELSE 12 END ELSE CASE WHEN (`ADS`.`Feature_60` < 1.5) THEN 13 ELSE 14 END END END AS node_id_2 
FROM digits AS `ADS`), 
`DT_node_data_49` AS 
(SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 7 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 3 AS parent_id, -0.05375627800822258 AS `Score` UNION ALL SELECT 8 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 3 AS parent_id, 0.013976320624351501 AS `Score` UNION ALL SELECT 9 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 4 AS parent_id, -0.013326235115528107 AS `Score` UNION ALL SELECT 10 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 4 AS parent_id, 0.16691243648529053 AS `Score` UNION ALL SELECT 11 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 5 AS parent_id, -0.039843931794166565 AS `Score` UNION ALL SELECT 12 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 5 AS parent_id, 0.06539084762334824 AS `Score` UNION ALL SELECT 13 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 6 AS parent_id, -0.02146504446864128 AS `Score` UNION ALL SELECT 14 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 6 AS parent_id, -0.05218951776623726 AS `Score`) AS `Values`), 
`DT_Output_49` AS 
(SELECT `DT_node_lookup_49`.`KEY` AS `KEY`, `DT_node_lookup_49`.node_id_2 AS node_id_2, `DT_node_data_49`.node_id AS node_id, `DT_node_data_49`.feature AS feature, `DT_node_data_49`.threshold AS threshold, `DT_node_data_49`.depth AS depth, `DT_node_data_49`.parent_id AS parent_id, `DT_node_data_49`.`Score` AS `Score` 
FROM `DT_node_lookup_49` LEFT OUTER JOIN `DT_node_data_49` ON `DT_node_lookup_49`.node_id_2 = `DT_node_data_49`.node_id), 
`XGB_Tree_9_4` AS 
(SELECT `DT_Output_49`.`KEY` AS `KEY`, 0.0 AS `Score_0`, 0.0 AS `Score_1`, 0.0 AS `Score_2`, 0.0 AS `Score_3`, 0.0 AS `Score_4`, 0.0 AS `Score_5`, 0.0 AS `Score_6`, 0.0 AS `Score_7`, 0.0 AS `Score_8`, `DT_Output_49`.`Score` AS `Score_9` 
FROM `DT_Output_49`), 
`DT_node_lookup_50` AS 
(SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_36` < 0.5) THEN CASE WHEN (`ADS`.`Feature_33` < 0.5) THEN 3 ELSE CASE WHEN (`ADS`.`Feature_13` < 6.5) THEN 7 ELSE 8 END END ELSE CASE WHEN (`ADS`.`Feature_36` < 3.5) THEN 5 ELSE 6 END END AS node_id_2 
FROM digits AS `ADS`), 
`DT_node_data_50` AS 
(SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, 1 AS parent_id, -0.04368780925869942 AS `Score` UNION ALL SELECT 5 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, 2 AS parent_id, -0.02103588543832302 AS `Score` UNION ALL SELECT 6 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, 2 AS parent_id, -0.053684670478105545 AS `Score` UNION ALL SELECT 7 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 4 AS parent_id, 0.06183994933962822 AS `Score` UNION ALL SELECT 8 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 4 AS parent_id, 0.14618150889873505 AS `Score`) AS `Values`), 
`DT_Output_50` AS 
(SELECT `DT_node_lookup_50`.`KEY` AS `KEY`, `DT_node_lookup_50`.node_id_2 AS node_id_2, `DT_node_data_50`.node_id AS node_id, `DT_node_data_50`.feature AS feature, `DT_node_data_50`.threshold AS threshold, `DT_node_data_50`.depth AS depth, `DT_node_data_50`.parent_id AS parent_id, `DT_node_data_50`.`Score` AS `Score` 
FROM `DT_node_lookup_50` LEFT OUTER JOIN `DT_node_data_50` ON `DT_node_lookup_50`.node_id_2 = `DT_node_data_50`.node_id), 
`XGB_Tree_0_5` AS 
(SELECT `DT_Output_50`.`KEY` AS `KEY`, `DT_Output_50`.`Score` AS `Score_0`, 0.0 AS `Score_1`, 0.0 AS `Score_2`, 0.0 AS `Score_3`, 0.0 AS `Score_4`, 0.0 AS `Score_5`, 0.0 AS `Score_6`, 0.0 AS `Score_7`, 0.0 AS `Score_8`, 0.0 AS `Score_9` 
FROM `DT_Output_50`), 
`DT_node_lookup_51` AS 
(SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_19` < 11.5) THEN CASE WHEN (`ADS`.`Feature_10` < 3.5) THEN 3 ELSE 4 END ELSE CASE WHEN (`ADS`.`Feature_12` < 14.5) THEN CASE WHEN (`ADS`.`Feature_62` < 8.5) THEN 7 ELSE 8 END ELSE CASE WHEN (`ADS`.`Feature_38` < 0.5) THEN 9 ELSE 10 END END END AS node_id_2 
FROM digits AS `ADS`), 
`DT_node_data_51` AS 
(SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, 1 AS parent_id, 0.016664011403918266 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, 1 AS parent_id, -0.05295034870505333 AS `Score` UNION ALL SELECT 7 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 5 AS parent_id, -0.04403112828731537 AS `Score` UNION ALL SELECT 8 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 5 AS parent_id, 0.13235734403133392 AS `Score` UNION ALL SELECT 9 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 6 AS parent_id, 0.15531416237354279 AS `Score` UNION ALL SELECT 10 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 6 AS parent_id, 0.015490854158997536 AS `Score`) AS `Values`), 
`DT_Output_51` AS 
(SELECT `DT_node_lookup_51`.`KEY` AS `KEY`, `DT_node_lookup_51`.node_id_2 AS node_id_2, `DT_node_data_51`.node_id AS node_id, `DT_node_data_51`.feature AS feature, `DT_node_data_51`.threshold AS threshold, `DT_node_data_51`.depth AS depth, `DT_node_data_51`.parent_id AS parent_id, `DT_node_data_51`.`Score` AS `Score` 
FROM `DT_node_lookup_51` LEFT OUTER JOIN `DT_node_data_51` ON `DT_node_lookup_51`.node_id_2 = `DT_node_data_51`.node_id), 
`XGB_Tree_1_5` AS 
(SELECT `DT_Output_51`.`KEY` AS `KEY`, 0.0 AS `Score_0`, `DT_Output_51`.`Score` AS `Score_1`, 0.0 AS `Score_2`, 0.0 AS `Score_3`, 0.0 AS `Score_4`, 0.0 AS `Score_5`, 0.0 AS `Score_6`, 0.0 AS `Score_7`, 0.0 AS `Score_8`, 0.0 AS `Score_9` 
FROM `DT_Output_51`), 
`DT_node_lookup_52` AS 
(SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_26` < 6.5) THEN CASE WHEN (`ADS`.`Feature_37` < 1.5) THEN CASE WHEN (`ADS`.`Feature_44` < 9.5) THEN 7 ELSE 8 END ELSE CASE WHEN (`ADS`.`Feature_27` < 2.5) THEN 9 ELSE 10 END END ELSE CASE WHEN (`ADS`.`Feature_62` < 10.5) THEN CASE WHEN (`ADS`.`Feature_62` < 3.5) THEN 11 ELSE 12 END ELSE 6 END END AS node_id_2 
FROM digits AS `ADS`), 
`DT_node_data_52` AS 
(SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 6 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, 2 AS parent_id, 0.03226780146360397 AS `Score` UNION ALL SELECT 7 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 3 AS parent_id, 0.17589662969112396 AS `Score` UNION ALL SELECT 8 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 3 AS parent_id, 0.029317939653992653 AS `Score` UNION ALL SELECT 9 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 4 AS parent_id, 0.09517897665500641 AS `Score` UNION ALL SELECT 10 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 4 AS parent_id, -0.045066747814416885 AS `Score` UNION ALL SELECT 11 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 5 AS parent_id, -0.053868990391492844 AS `Score` UNION ALL SELECT 12 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 5 AS parent_id, -0.03515925258398056 AS `Score`) AS `Values`), 
`DT_Output_52` AS 
(SELECT `DT_node_lookup_52`.`KEY` AS `KEY`, `DT_node_lookup_52`.node_id_2 AS node_id_2, `DT_node_data_52`.node_id AS node_id, `DT_node_data_52`.feature AS feature, `DT_node_data_52`.threshold AS threshold, `DT_node_data_52`.depth AS depth, `DT_node_data_52`.parent_id AS parent_id, `DT_node_data_52`.`Score` AS `Score` 
FROM `DT_node_lookup_52` LEFT OUTER JOIN `DT_node_data_52` ON `DT_node_lookup_52`.node_id_2 = `DT_node_data_52`.node_id), 
`XGB_Tree_2_5` AS 
(SELECT `DT_Output_52`.`KEY` AS `KEY`, 0.0 AS `Score_0`, 0.0 AS `Score_1`, `DT_Output_52`.`Score` AS `Score_2`, 0.0 AS `Score_3`, 0.0 AS `Score_4`, 0.0 AS `Score_5`, 0.0 AS `Score_6`, 0.0 AS `Score_7`, 0.0 AS `Score_8`, 0.0 AS `Score_9` 
FROM `DT_Output_52`), 
`DT_node_lookup_53` AS 
(SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_26` < 5.5) THEN CASE WHEN (`ADS`.`Feature_43` < 2.5) THEN CASE WHEN (`ADS`.`Feature_30` < 0.5) THEN 7 ELSE 8 END ELSE CASE WHEN (`ADS`.`Feature_51` < 8.5) THEN 9 ELSE 10 END END ELSE CASE WHEN (`ADS`.`Feature_54` < 5.5) THEN 5 ELSE CASE WHEN (`ADS`.`Feature_20` < 7.5) THEN 11 ELSE 12 END END END AS node_id_2 
FROM digits AS `ADS`), 
`DT_node_data_53` AS 
(SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 5 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, 2 AS parent_id, -0.052572157233953476 AS `Score` UNION ALL SELECT 7 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 3 AS parent_id, 0.14351312816143036 AS `Score` UNION ALL SELECT 8 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 3 AS parent_id, 0.012902790680527687 AS `Score` UNION ALL SELECT 9 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 4 AS parent_id, 0.026911521330475807 AS `Score` UNION ALL SELECT 10 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 4 AS parent_id, -0.04552152007818222 AS `Score` UNION ALL SELECT 11 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 6 AS parent_id, -0.04842172563076019 AS `Score` UNION ALL SELECT 12 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 6 AS parent_id, 0.027605606243014336 AS `Score`) AS `Values`), 
`DT_Output_53` AS 
(SELECT `DT_node_lookup_53`.`KEY` AS `KEY`, `DT_node_lookup_53`.node_id_2 AS node_id_2, `DT_node_data_53`.node_id AS node_id, `DT_node_data_53`.feature AS feature, `DT_node_data_53`.threshold AS threshold, `DT_node_data_53`.depth AS depth, `DT_node_data_53`.parent_id AS parent_id, `DT_node_data_53`.`Score` AS `Score` 
FROM `DT_node_lookup_53` LEFT OUTER JOIN `DT_node_data_53` ON `DT_node_lookup_53`.node_id_2 = `DT_node_data_53`.node_id), 
`XGB_Tree_3_5` AS 
(SELECT `DT_Output_53`.`KEY` AS `KEY`, 0.0 AS `Score_0`, 0.0 AS `Score_1`, 0.0 AS `Score_2`, `DT_Output_53`.`Score` AS `Score_3`, 0.0 AS `Score_4`, 0.0 AS `Score_5`, 0.0 AS `Score_6`, 0.0 AS `Score_7`, 0.0 AS `Score_8`, 0.0 AS `Score_9` 
FROM `DT_Output_53`), 
`DT_node_lookup_54` AS 
(SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_33` < 4.5) THEN CASE WHEN (`ADS`.`Feature_34` < 13.5) THEN CASE WHEN (`ADS`.`Feature_12` < 4.5) THEN 7 ELSE 8 END ELSE CASE WHEN (`ADS`.`Feature_58` < 0.5) THEN 9 ELSE 10 END END ELSE CASE WHEN (`ADS`.`Feature_44` < 7.5) THEN CASE WHEN (`ADS`.`Feature_35` < 7.5) THEN 11 ELSE 12 END ELSE CASE WHEN (`ADS`.`Feature_2` < 1.5) THEN 13 ELSE 14 END END END AS node_id_2 
FROM digits AS `ADS`), 
`DT_node_data_54` AS 
(SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 7 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 3 AS parent_id, -0.025079775601625443 AS `Score` UNION ALL SELECT 8 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 3 AS parent_id, -0.05303005129098892 AS `Score` UNION ALL SELECT 9 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 4 AS parent_id, 0.05364314466714859 AS `Score` UNION ALL SELECT 10 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 4 AS parent_id, -0.040364380925893784 AS `Score` UNION ALL SELECT 11 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 5 AS parent_id, -0.05204688385128975 AS `Score` UNION ALL SELECT 12 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 5 AS parent_id, -0.025095198303461075 AS `Score` UNION ALL SELECT 13 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 6 AS parent_id, 0.15614092350006104 AS `Score` UNION ALL SELECT 14 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 6 AS parent_id, 0.028764966875314713 AS `Score`) AS `Values`), 
`DT_Output_54` AS 
(SELECT `DT_node_lookup_54`.`KEY` AS `KEY`, `DT_node_lookup_54`.node_id_2 AS node_id_2, `DT_node_data_54`.node_id AS node_id, `DT_node_data_54`.feature AS feature, `DT_node_data_54`.threshold AS threshold, `DT_node_data_54`.depth AS depth, `DT_node_data_54`.parent_id AS parent_id, `DT_node_data_54`.`Score` AS `Score` 
FROM `DT_node_lookup_54` LEFT OUTER JOIN `DT_node_data_54` ON `DT_node_lookup_54`.node_id_2 = `DT_node_data_54`.node_id), 
`XGB_Tree_4_5` AS 
(SELECT `DT_Output_54`.`KEY` AS `KEY`, 0.0 AS `Score_0`, 0.0 AS `Score_1`, 0.0 AS `Score_2`, 0.0 AS `Score_3`, `DT_Output_54`.`Score` AS `Score_4`, 0.0 AS `Score_5`, 0.0 AS `Score_6`, 0.0 AS `Score_7`, 0.0 AS `Score_8`, 0.0 AS `Score_9` 
FROM `DT_Output_54`), 
`DT_node_lookup_55` AS 
(SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_21` < 1.5) THEN CASE WHEN (`ADS`.`Feature_5` < 3.5) THEN CASE WHEN (`ADS`.`Feature_5` < 0.5) THEN 7 ELSE 8 END ELSE CASE WHEN (`ADS`.`Feature_42` < 7.5) THEN 9 ELSE 10 END END ELSE CASE WHEN (`ADS`.`Feature_26` < 15.5) THEN 5 ELSE CASE WHEN (`ADS`.`Feature_42` < 0.5) THEN 11 ELSE 12 END END END AS node_id_2 
FROM digits AS `ADS`), 
`DT_node_data_55` AS 
(SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 5 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, 2 AS parent_id, -0.05197006091475487 AS `Score` UNION ALL SELECT 7 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 3 AS parent_id, -0.05241909250617027 AS `Score` UNION ALL SELECT 8 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 3 AS parent_id, -0.004584539216011763 AS `Score` UNION ALL SELECT 9 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 4 AS parent_id, 0.1444874107837677 AS `Score` UNION ALL SELECT 10 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 4 AS parent_id, 0.017857851460576057 AS `Score` UNION ALL SELECT 11 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 6 AS parent_id, 0.02062699943780899 AS `Score` UNION ALL SELECT 12 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 6 AS parent_id, -0.05136324092745781 AS `Score`) AS `Values`), 
`DT_Output_55` AS 
(SELECT `DT_node_lookup_55`.`KEY` AS `KEY`, `DT_node_lookup_55`.node_id_2 AS node_id_2, `DT_node_data_55`.node_id AS node_id, `DT_node_data_55`.feature AS feature, `DT_node_data_55`.threshold AS threshold, `DT_node_data_55`.depth AS depth, `DT_node_data_55`.parent_id AS parent_id, `DT_node_data_55`.`Score` AS `Score` 
FROM `DT_node_lookup_55` LEFT OUTER JOIN `DT_node_data_55` ON `DT_node_lookup_55`.node_id_2 = `DT_node_data_55`.node_id), 
`XGB_Tree_5_5` AS 
(SELECT `DT_Output_55`.`KEY` AS `KEY`, 0.0 AS `Score_0`, 0.0 AS `Score_1`, 0.0 AS `Score_2`, 0.0 AS `Score_3`, 0.0 AS `Score_4`, `DT_Output_55`.`Score` AS `Score_5`, 0.0 AS `Score_6`, 0.0 AS `Score_7`, 0.0 AS `Score_8`, 0.0 AS `Score_9` 
FROM `DT_Output_55`)
 SELECT `Score_Union_CTE_esu_6`.`KEY`, `Score_Union_CTE_esu_6`.`Score_0`, `Score_Union_CTE_esu_6`.`Score_1`, `Score_Union_CTE_esu_6`.`Score_2`, `Score_Union_CTE_esu_6`.`Score_3`, `Score_Union_CTE_esu_6`.`Score_4`, `Score_Union_CTE_esu_6`.`Score_5`, `Score_Union_CTE_esu_6`.`Score_6`, `Score_Union_CTE_esu_6`.`Score_7`, `Score_Union_CTE_esu_6`.`Score_8`, `Score_Union_CTE_esu_6`.`Score_9` 
FROM (SELECT `XGB_Tree_8_4`.`KEY` AS `KEY`, `XGB_Tree_8_4`.`Score_0` AS `Score_0`, `XGB_Tree_8_4`.`Score_1` AS `Score_1`, `XGB_Tree_8_4`.`Score_2` AS `Score_2`, `XGB_Tree_8_4`.`Score_3` AS `Score_3`, `XGB_Tree_8_4`.`Score_4` AS `Score_4`, `XGB_Tree_8_4`.`Score_5` AS `Score_5`, `XGB_Tree_8_4`.`Score_6` AS `Score_6`, `XGB_Tree_8_4`.`Score_7` AS `Score_7`, `XGB_Tree_8_4`.`Score_8` AS `Score_8`, `XGB_Tree_8_4`.`Score_9` AS `Score_9` 
FROM `XGB_Tree_8_4` UNION ALL SELECT `XGB_Tree_9_4`.`KEY` AS `KEY`, `XGB_Tree_9_4`.`Score_0` AS `Score_0`, `XGB_Tree_9_4`.`Score_1` AS `Score_1`, `XGB_Tree_9_4`.`Score_2` AS `Score_2`, `XGB_Tree_9_4`.`Score_3` AS `Score_3`, `XGB_Tree_9_4`.`Score_4` AS `Score_4`, `XGB_Tree_9_4`.`Score_5` AS `Score_5`, `XGB_Tree_9_4`.`Score_6` AS `Score_6`, `XGB_Tree_9_4`.`Score_7` AS `Score_7`, `XGB_Tree_9_4`.`Score_8` AS `Score_8`, `XGB_Tree_9_4`.`Score_9` AS `Score_9` 
FROM `XGB_Tree_9_4` UNION ALL SELECT `XGB_Tree_0_5`.`KEY` AS `KEY`, `XGB_Tree_0_5`.`Score_0` AS `Score_0`, `XGB_Tree_0_5`.`Score_1` AS `Score_1`, `XGB_Tree_0_5`.`Score_2` AS `Score_2`, `XGB_Tree_0_5`.`Score_3` AS `Score_3`, `XGB_Tree_0_5`.`Score_4` AS `Score_4`, `XGB_Tree_0_5`.`Score_5` AS `Score_5`, `XGB_Tree_0_5`.`Score_6` AS `Score_6`, `XGB_Tree_0_5`.`Score_7` AS `Score_7`, `XGB_Tree_0_5`.`Score_8` AS `Score_8`, `XGB_Tree_0_5`.`Score_9` AS `Score_9` 
FROM `XGB_Tree_0_5` UNION ALL SELECT `XGB_Tree_1_5`.`KEY` AS `KEY`, `XGB_Tree_1_5`.`Score_0` AS `Score_0`, `XGB_Tree_1_5`.`Score_1` AS `Score_1`, `XGB_Tree_1_5`.`Score_2` AS `Score_2`, `XGB_Tree_1_5`.`Score_3` AS `Score_3`, `XGB_Tree_1_5`.`Score_4` AS `Score_4`, `XGB_Tree_1_5`.`Score_5` AS `Score_5`, `XGB_Tree_1_5`.`Score_6` AS `Score_6`, `XGB_Tree_1_5`.`Score_7` AS `Score_7`, `XGB_Tree_1_5`.`Score_8` AS `Score_8`, `XGB_Tree_1_5`.`Score_9` AS `Score_9` 
FROM `XGB_Tree_1_5` UNION ALL SELECT `XGB_Tree_2_5`.`KEY` AS `KEY`, `XGB_Tree_2_5`.`Score_0` AS `Score_0`, `XGB_Tree_2_5`.`Score_1` AS `Score_1`, `XGB_Tree_2_5`.`Score_2` AS `Score_2`, `XGB_Tree_2_5`.`Score_3` AS `Score_3`, `XGB_Tree_2_5`.`Score_4` AS `Score_4`, `XGB_Tree_2_5`.`Score_5` AS `Score_5`, `XGB_Tree_2_5`.`Score_6` AS `Score_6`, `XGB_Tree_2_5`.`Score_7` AS `Score_7`, `XGB_Tree_2_5`.`Score_8` AS `Score_8`, `XGB_Tree_2_5`.`Score_9` AS `Score_9` 
FROM `XGB_Tree_2_5` UNION ALL SELECT `XGB_Tree_3_5`.`KEY` AS `KEY`, `XGB_Tree_3_5`.`Score_0` AS `Score_0`, `XGB_Tree_3_5`.`Score_1` AS `Score_1`, `XGB_Tree_3_5`.`Score_2` AS `Score_2`, `XGB_Tree_3_5`.`Score_3` AS `Score_3`, `XGB_Tree_3_5`.`Score_4` AS `Score_4`, `XGB_Tree_3_5`.`Score_5` AS `Score_5`, `XGB_Tree_3_5`.`Score_6` AS `Score_6`, `XGB_Tree_3_5`.`Score_7` AS `Score_7`, `XGB_Tree_3_5`.`Score_8` AS `Score_8`, `XGB_Tree_3_5`.`Score_9` AS `Score_9` 
FROM `XGB_Tree_3_5` UNION ALL SELECT `XGB_Tree_4_5`.`KEY` AS `KEY`, `XGB_Tree_4_5`.`Score_0` AS `Score_0`, `XGB_Tree_4_5`.`Score_1` AS `Score_1`, `XGB_Tree_4_5`.`Score_2` AS `Score_2`, `XGB_Tree_4_5`.`Score_3` AS `Score_3`, `XGB_Tree_4_5`.`Score_4` AS `Score_4`, `XGB_Tree_4_5`.`Score_5` AS `Score_5`, `XGB_Tree_4_5`.`Score_6` AS `Score_6`, `XGB_Tree_4_5`.`Score_7` AS `Score_7`, `XGB_Tree_4_5`.`Score_8` AS `Score_8`, `XGB_Tree_4_5`.`Score_9` AS `Score_9` 
FROM `XGB_Tree_4_5` UNION ALL SELECT `XGB_Tree_5_5`.`KEY` AS `KEY`, `XGB_Tree_5_5`.`Score_0` AS `Score_0`, `XGB_Tree_5_5`.`Score_1` AS `Score_1`, `XGB_Tree_5_5`.`Score_2` AS `Score_2`, `XGB_Tree_5_5`.`Score_3` AS `Score_3`, `XGB_Tree_5_5`.`Score_4` AS `Score_4`, `XGB_Tree_5_5`.`Score_5` AS `Score_5`, `XGB_Tree_5_5`.`Score_6` AS `Score_6`, `XGB_Tree_5_5`.`Score_7` AS `Score_7`, `XGB_Tree_5_5`.`Score_8` AS `Score_8`, `XGB_Tree_5_5`.`Score_9` AS `Score_9` 
FROM `XGB_Tree_5_5`) AS `Score_Union_CTE_esu_6`), 
`Score_Union_CTE_7` AS 
(WITH `DT_node_lookup_56` AS 
(SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_21` < 0.5) THEN CASE WHEN (`ADS`.`Feature_42` < 7.5) THEN 3 ELSE CASE WHEN (`ADS`.`Feature_54` < 2.5) THEN 7 ELSE 8 END END ELSE CASE WHEN (`ADS`.`Feature_34` < 15.5) THEN 5 ELSE CASE WHEN (`ADS`.`Feature_50` < 1.5) THEN 9 ELSE 10 END END END AS node_id_2 
FROM digits AS `ADS`), 
`DT_node_data_56` AS 
(SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, 1 AS parent_id, -0.04886993393301964 AS `Score` UNION ALL SELECT 5 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, 2 AS parent_id, -0.05290396884083748 AS `Score` UNION ALL SELECT 7 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 4 AS parent_id, 0.0014737338060513139 AS `Score` UNION ALL SELECT 8 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 4 AS parent_id, 0.14125661551952362 AS `Score` UNION ALL SELECT 9 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 6 AS parent_id, -0.04944373667240143 AS `Score` UNION ALL SELECT 10 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 6 AS parent_id, -0.022265588864684105 AS `Score`) AS `Values`), 
`DT_Output_56` AS 
(SELECT `DT_node_lookup_56`.`KEY` AS `KEY`, `DT_node_lookup_56`.node_id_2 AS node_id_2, `DT_node_data_56`.node_id AS node_id, `DT_node_data_56`.feature AS feature, `DT_node_data_56`.threshold AS threshold, `DT_node_data_56`.depth AS depth, `DT_node_data_56`.parent_id AS parent_id, `DT_node_data_56`.`Score` AS `Score` 
FROM `DT_node_lookup_56` LEFT OUTER JOIN `DT_node_data_56` ON `DT_node_lookup_56`.node_id_2 = `DT_node_data_56`.node_id), 
`XGB_Tree_6_5` AS 
(SELECT `DT_Output_56`.`KEY` AS `KEY`, 0.0 AS `Score_0`, 0.0 AS `Score_1`, 0.0 AS `Score_2`, 0.0 AS `Score_3`, 0.0 AS `Score_4`, 0.0 AS `Score_5`, `DT_Output_56`.`Score` AS `Score_6`, 0.0 AS `Score_7`, 0.0 AS `Score_8`, 0.0 AS `Score_9` 
FROM `DT_Output_56`), 
`DT_node_lookup_57` AS 
(SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_60` < 7.5) THEN CASE WHEN (`ADS`.`Feature_25` < 3.5) THEN CASE WHEN (`ADS`.`Feature_37` < 1.5) THEN 7 ELSE 8 END ELSE 4 END ELSE CASE WHEN (`ADS`.`Feature_14` < 6.5) THEN CASE WHEN (`ADS`.`Feature_60` < 9.5) THEN 9 ELSE 10 END ELSE 6 END END AS node_id_2 
FROM digits AS `ADS`), 
`DT_node_data_57` AS 
(SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, 1 AS parent_id, -0.005771218799054623 AS `Score` UNION ALL SELECT 6 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, 2 AS parent_id, -0.004518734756857157 AS `Score` UNION ALL SELECT 7 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 3 AS parent_id, 0.018534276634454727 AS `Score` UNION ALL SELECT 8 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 3 AS parent_id, 0.14124250411987305 AS `Score` UNION ALL SELECT 9 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 5 AS parent_id, -0.0318203829228878 AS `Score` UNION ALL SELECT 10 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 5 AS parent_id, -0.05366519093513489 AS `Score`) AS `Values`), 
`DT_Output_57` AS 
(SELECT `DT_node_lookup_57`.`KEY` AS `KEY`, `DT_node_lookup_57`.node_id_2 AS node_id_2, `DT_node_data_57`.node_id AS node_id, `DT_node_data_57`.feature AS feature, `DT_node_data_57`.threshold AS threshold, `DT_node_data_57`.depth AS depth, `DT_node_data_57`.parent_id AS parent_id, `DT_node_data_57`.`Score` AS `Score` 
FROM `DT_node_lookup_57` LEFT OUTER JOIN `DT_node_data_57` ON `DT_node_lookup_57`.node_id_2 = `DT_node_data_57`.node_id), 
`XGB_Tree_7_5` AS 
(SELECT `DT_Output_57`.`KEY` AS `KEY`, 0.0 AS `Score_0`, 0.0 AS `Score_1`, 0.0 AS `Score_2`, 0.0 AS `Score_3`, 0.0 AS `Score_4`, 0.0 AS `Score_5`, 0.0 AS `Score_6`, `DT_Output_57`.`Score` AS `Score_7`, 0.0 AS `Score_8`, 0.0 AS `Score_9` 
FROM `DT_Output_57`), 
`DT_node_lookup_58` AS 
(SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_38` < 0.5) THEN CASE WHEN (`ADS`.`Feature_21` < 4.5) THEN CASE WHEN (`ADS`.`Feature_52` < 7.5) THEN 7 ELSE 8 END ELSE CASE WHEN (`ADS`.`Feature_35` < 8.5) THEN 9 ELSE 10 END END ELSE CASE WHEN (`ADS`.`Feature_27` < 12.5) THEN 5 ELSE CASE WHEN (`ADS`.`Feature_43` < 7.5) THEN 11 ELSE 12 END END END AS node_id_2 
FROM digits AS `ADS`), 
`DT_node_data_58` AS 
(SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 5 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, 2 AS parent_id, -0.05325544625520706 AS `Score` UNION ALL SELECT 7 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 3 AS parent_id, -0.01726333424448967 AS `Score` UNION ALL SELECT 8 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 3 AS parent_id, -0.050137992948293686 AS `Score` UNION ALL SELECT 9 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 4 AS parent_id, -0.048198070377111435 AS `Score` UNION ALL SELECT 10 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 4 AS parent_id, 0.09798330068588257 AS `Score` UNION ALL SELECT 11 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 6 AS parent_id, -0.04752189293503761 AS `Score` UNION ALL SELECT 12 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 6 AS parent_id, 0.02312144637107849 AS `Score`) AS `Values`), 
`DT_Output_58` AS 
(SELECT `DT_node_lookup_58`.`KEY` AS `KEY`, `DT_node_lookup_58`.node_id_2 AS node_id_2, `DT_node_data_58`.node_id AS node_id, `DT_node_data_58`.feature AS feature, `DT_node_data_58`.threshold AS threshold, `DT_node_data_58`.depth AS depth, `DT_node_data_58`.parent_id AS parent_id, `DT_node_data_58`.`Score` AS `Score` 
FROM `DT_node_lookup_58` LEFT OUTER JOIN `DT_node_data_58` ON `DT_node_lookup_58`.node_id_2 = `DT_node_data_58`.node_id), 
`XGB_Tree_8_5` AS 
(SELECT `DT_Output_58`.`KEY` AS `KEY`, 0.0 AS `Score_0`, 0.0 AS `Score_1`, 0.0 AS `Score_2`, 0.0 AS `Score_3`, 0.0 AS `Score_4`, 0.0 AS `Score_5`, 0.0 AS `Score_6`, 0.0 AS `Score_7`, `DT_Output_58`.`Score` AS `Score_8`, 0.0 AS `Score_9` 
FROM `DT_Output_58`), 
`DT_node_lookup_59` AS 
(SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_43` < 0.5) THEN CASE WHEN (`ADS`.`Feature_21` < 10.5) THEN CASE WHEN (`ADS`.`Feature_61` < 10.5) THEN 7 ELSE 8 END ELSE CASE WHEN (`ADS`.`Feature_27` < 2.5) THEN 9 ELSE 10 END END ELSE CASE WHEN (`ADS`.`Feature_43` < 3.5) THEN CASE WHEN (`ADS`.`Feature_29` < 12.5) THEN 11 ELSE 12 END ELSE CASE WHEN (`ADS`.`Feature_60` < 1.5) THEN 13 ELSE 14 END END END AS node_id_2 
FROM digits AS `ADS`), 
`DT_node_data_59` AS 
(SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 7 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 3 AS parent_id, -0.053355492651462555 AS `Score` UNION ALL SELECT 8 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 3 AS parent_id, 0.013380567543208599 AS `Score` UNION ALL SELECT 9 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 4 AS parent_id, -0.03889039158821106 AS `Score` UNION ALL SELECT 10 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 4 AS parent_id, 0.13603301346302032 AS `Score` UNION ALL SELECT 11 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 5 AS parent_id, -0.03898314759135246 AS `Score` UNION ALL SELECT 12 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 5 AS parent_id, 0.05903744325041771 AS `Score` UNION ALL SELECT 13 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 6 AS parent_id, -0.02035626210272312 AS `Score` UNION ALL SELECT 14 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 6 AS parent_id, -0.05180515721440315 AS `Score`) AS `Values`), 
`DT_Output_59` AS 
(SELECT `DT_node_lookup_59`.`KEY` AS `KEY`, `DT_node_lookup_59`.node_id_2 AS node_id_2, `DT_node_data_59`.node_id AS node_id, `DT_node_data_59`.feature AS feature, `DT_node_data_59`.threshold AS threshold, `DT_node_data_59`.depth AS depth, `DT_node_data_59`.parent_id AS parent_id, `DT_node_data_59`.`Score` AS `Score` 
FROM `DT_node_lookup_59` LEFT OUTER JOIN `DT_node_data_59` ON `DT_node_lookup_59`.node_id_2 = `DT_node_data_59`.node_id), 
`XGB_Tree_9_5` AS 
(SELECT `DT_Output_59`.`KEY` AS `KEY`, 0.0 AS `Score_0`, 0.0 AS `Score_1`, 0.0 AS `Score_2`, 0.0 AS `Score_3`, 0.0 AS `Score_4`, 0.0 AS `Score_5`, 0.0 AS `Score_6`, 0.0 AS `Score_7`, 0.0 AS `Score_8`, `DT_Output_59`.`Score` AS `Score_9` 
FROM `DT_Output_59`), 
`DT_node_lookup_60` AS 
(SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_36` < 0.5) THEN CASE WHEN (`ADS`.`Feature_28` < 2.5) THEN CASE WHEN (`ADS`.`Feature_44` < 4.5) THEN 7 ELSE 8 END ELSE 4 END ELSE CASE WHEN (`ADS`.`Feature_36` < 3.5) THEN 5 ELSE 6 END END AS node_id_2 
FROM digits AS `ADS`), 
`DT_node_data_60` AS 
(SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, 1 AS parent_id, -0.03674351051449776 AS `Score` UNION ALL SELECT 5 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, 2 AS parent_id, -0.02007313072681427 AS `Score` UNION ALL SELECT 6 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, 2 AS parent_id, -0.05341845378279686 AS `Score` UNION ALL SELECT 7 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 3 AS parent_id, 0.1304497867822647 AS `Score` UNION ALL SELECT 8 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 3 AS parent_id, 0.05731522664427757 AS `Score`) AS `Values`), 
`DT_Output_60` AS 
(SELECT `DT_node_lookup_60`.`KEY` AS `KEY`, `DT_node_lookup_60`.node_id_2 AS node_id_2, `DT_node_data_60`.node_id AS node_id, `DT_node_data_60`.feature AS feature, `DT_node_data_60`.threshold AS threshold, `DT_node_data_60`.depth AS depth, `DT_node_data_60`.parent_id AS parent_id, `DT_node_data_60`.`Score` AS `Score` 
FROM `DT_node_lookup_60` LEFT OUTER JOIN `DT_node_data_60` ON `DT_node_lookup_60`.node_id_2 = `DT_node_data_60`.node_id), 
`XGB_Tree_0_6` AS 
(SELECT `DT_Output_60`.`KEY` AS `KEY`, `DT_Output_60`.`Score` AS `Score_0`, 0.0 AS `Score_1`, 0.0 AS `Score_2`, 0.0 AS `Score_3`, 0.0 AS `Score_4`, 0.0 AS `Score_5`, 0.0 AS `Score_6`, 0.0 AS `Score_7`, 0.0 AS `Score_8`, 0.0 AS `Score_9` 
FROM `DT_Output_60`), 
`DT_node_lookup_61` AS 
(SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_19` < 11.5) THEN CASE WHEN (`ADS`.`Feature_10` < 4.5) THEN 3 ELSE 4 END ELSE CASE WHEN (`ADS`.`Feature_20` < 11.5) THEN CASE WHEN (`ADS`.`Feature_4` < 5.5) THEN 7 ELSE 8 END ELSE CASE WHEN (`ADS`.`Feature_10` < 10.5) THEN 9 ELSE 10 END END END AS node_id_2 
FROM digits AS `ADS`), 
`DT_node_data_61` AS 
(SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, 1 AS parent_id, 0.009966841898858547 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, 1 AS parent_id, -0.05342170223593712 AS `Score` UNION ALL SELECT 7 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 5 AS parent_id, 0.0999288260936737 AS `Score` UNION ALL SELECT 8 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 5 AS parent_id, -0.0475156344473362 AS `Score` UNION ALL SELECT 9 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 6 AS parent_id, 0.1300528198480606 AS `Score` UNION ALL SELECT 10 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 6 AS parent_id, 0.03005315735936165 AS `Score`) AS `Values`), 
`DT_Output_61` AS 
(SELECT `DT_node_lookup_61`.`KEY` AS `KEY`, `DT_node_lookup_61`.node_id_2 AS node_id_2, `DT_node_data_61`.node_id AS node_id, `DT_node_data_61`.feature AS feature, `DT_node_data_61`.threshold AS threshold, `DT_node_data_61`.depth AS depth, `DT_node_data_61`.parent_id AS parent_id, `DT_node_data_61`.`Score` AS `Score` 
FROM `DT_node_lookup_61` LEFT OUTER JOIN `DT_node_data_61` ON `DT_node_lookup_61`.node_id_2 = `DT_node_data_61`.node_id), 
`XGB_Tree_1_6` AS 
(SELECT `DT_Output_61`.`KEY` AS `KEY`, 0.0 AS `Score_0`, `DT_Output_61`.`Score` AS `Score_1`, 0.0 AS `Score_2`, 0.0 AS `Score_3`, 0.0 AS `Score_4`, 0.0 AS `Score_5`, 0.0 AS `Score_6`, 0.0 AS `Score_7`, 0.0 AS `Score_8`, 0.0 AS `Score_9` 
FROM `DT_Output_61`), 
`DT_node_lookup_62` AS 
(SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_62` < 2.5) THEN CASE WHEN (`ADS`.`Feature_37` < 2.5) THEN CASE WHEN (`ADS`.`Feature_54` < 1.5) THEN 7 ELSE 8 END ELSE CASE WHEN (`ADS`.`Feature_45` < 1.5) THEN 9 ELSE 10 END END ELSE CASE WHEN (`ADS`.`Feature_46` < 5.5) THEN CASE WHEN (`ADS`.`Feature_45` < 7.5) THEN 11 ELSE 12 END ELSE CASE WHEN (`ADS`.`Feature_11` < 13.5) THEN 13 ELSE 14 END END END AS node_id_2 
FROM digits AS `ADS`), 
`DT_node_data_62` AS 
(SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 7 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 3 AS parent_id, -0.04347557947039604 AS `Score` UNION ALL SELECT 8 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 3 AS parent_id, 0.14304497838020325 AS `Score` UNION ALL SELECT 9 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 4 AS parent_id, -0.0250555370002985 AS `Score` UNION ALL SELECT 10 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 4 AS parent_id, -0.05341310426592827 AS `Score` UNION ALL SELECT 11 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 5 AS parent_id, 0.1294081062078476 AS `Score` UNION ALL SELECT 12 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 5 AS parent_id, 0.001913461834192276 AS `Score` UNION ALL SELECT 13 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 6 AS parent_id, -0.04996000602841377 AS `Score` UNION ALL SELECT 14 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 6 AS parent_id, -0.022800320759415627 AS `Score`) AS `Values`), 
`DT_Output_62` AS 
(SELECT `DT_node_lookup_62`.`KEY` AS `KEY`, `DT_node_lookup_62`.node_id_2 AS node_id_2, `DT_node_data_62`.node_id AS node_id, `DT_node_data_62`.feature AS feature, `DT_node_data_62`.threshold AS threshold, `DT_node_data_62`.depth AS depth, `DT_node_data_62`.parent_id AS parent_id, `DT_node_data_62`.`Score` AS `Score` 
FROM `DT_node_lookup_62` LEFT OUTER JOIN `DT_node_data_62` ON `DT_node_lookup_62`.node_id_2 = `DT_node_data_62`.node_id), 
`XGB_Tree_2_6` AS 
(SELECT `DT_Output_62`.`KEY` AS `KEY`, 0.0 AS `Score_0`, 0.0 AS `Score_1`, `DT_Output_62`.`Score` AS `Score_2`, 0.0 AS `Score_3`, 0.0 AS `Score_4`, 0.0 AS `Score_5`, 0.0 AS `Score_6`, 0.0 AS `Score_7`, 0.0 AS `Score_8`, 0.0 AS `Score_9` 
FROM `DT_Output_62`), 
`DT_node_lookup_63` AS 
(SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_26` < 5.5) THEN CASE WHEN (`ADS`.`Feature_43` < 2.5) THEN CASE WHEN (`ADS`.`Feature_19` < 8.5) THEN 7 ELSE 8 END ELSE CASE WHEN (`ADS`.`Feature_51` < 8.5) THEN 9 ELSE 10 END END ELSE CASE WHEN (`ADS`.`Feature_1` < 0.5) THEN CASE WHEN (`ADS`.`Feature_54` < 10.5) THEN 11 ELSE 12 END ELSE 6 END END AS node_id_2 
FROM digits AS `ADS`), 
`DT_node_data_63` AS 
(SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 6 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, 2 AS parent_id, -0.0061264014802873135 AS `Score` UNION ALL SELECT 7 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 3 AS parent_id, 0.12703323364257812 AS `Score` UNION ALL SELECT 8 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 3 AS parent_id, 0.004979535937309265 AS `Score` UNION ALL SELECT 9 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 4 AS parent_id, 0.02550330199301243 AS `Score` UNION ALL SELECT 10 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 4 AS parent_id, -0.0447964146733284 AS `Score` UNION ALL SELECT 11 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 5 AS parent_id, -0.05245524272322655 AS `Score` UNION ALL SELECT 12 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 5 AS parent_id, -0.02395681105554104 AS `Score`) AS `Values`), 
`DT_Output_63` AS 
(SELECT `DT_node_lookup_63`.`KEY` AS `KEY`, `DT_node_lookup_63`.node_id_2 AS node_id_2, `DT_node_data_63`.node_id AS node_id, `DT_node_data_63`.feature AS feature, `DT_node_data_63`.threshold AS threshold, `DT_node_data_63`.depth AS depth, `DT_node_data_63`.parent_id AS parent_id, `DT_node_data_63`.`Score` AS `Score` 
FROM `DT_node_lookup_63` LEFT OUTER JOIN `DT_node_data_63` ON `DT_node_lookup_63`.node_id_2 = `DT_node_data_63`.node_id), 
`XGB_Tree_3_6` AS 
(SELECT `DT_Output_63`.`KEY` AS `KEY`, 0.0 AS `Score_0`, 0.0 AS `Score_1`, 0.0 AS `Score_2`, `DT_Output_63`.`Score` AS `Score_3`, 0.0 AS `Score_4`, 0.0 AS `Score_5`, 0.0 AS `Score_6`, 0.0 AS `Score_7`, 0.0 AS `Score_8`, 0.0 AS `Score_9` 
FROM `DT_Output_63`)
 SELECT `Score_Union_CTE_esu_7`.`KEY`, `Score_Union_CTE_esu_7`.`Score_0`, `Score_Union_CTE_esu_7`.`Score_1`, `Score_Union_CTE_esu_7`.`Score_2`, `Score_Union_CTE_esu_7`.`Score_3`, `Score_Union_CTE_esu_7`.`Score_4`, `Score_Union_CTE_esu_7`.`Score_5`, `Score_Union_CTE_esu_7`.`Score_6`, `Score_Union_CTE_esu_7`.`Score_7`, `Score_Union_CTE_esu_7`.`Score_8`, `Score_Union_CTE_esu_7`.`Score_9` 
FROM (SELECT `XGB_Tree_6_5`.`KEY` AS `KEY`, `XGB_Tree_6_5`.`Score_0` AS `Score_0`, `XGB_Tree_6_5`.`Score_1` AS `Score_1`, `XGB_Tree_6_5`.`Score_2` AS `Score_2`, `XGB_Tree_6_5`.`Score_3` AS `Score_3`, `XGB_Tree_6_5`.`Score_4` AS `Score_4`, `XGB_Tree_6_5`.`Score_5` AS `Score_5`, `XGB_Tree_6_5`.`Score_6` AS `Score_6`, `XGB_Tree_6_5`.`Score_7` AS `Score_7`, `XGB_Tree_6_5`.`Score_8` AS `Score_8`, `XGB_Tree_6_5`.`Score_9` AS `Score_9` 
FROM `XGB_Tree_6_5` UNION ALL SELECT `XGB_Tree_7_5`.`KEY` AS `KEY`, `XGB_Tree_7_5`.`Score_0` AS `Score_0`, `XGB_Tree_7_5`.`Score_1` AS `Score_1`, `XGB_Tree_7_5`.`Score_2` AS `Score_2`, `XGB_Tree_7_5`.`Score_3` AS `Score_3`, `XGB_Tree_7_5`.`Score_4` AS `Score_4`, `XGB_Tree_7_5`.`Score_5` AS `Score_5`, `XGB_Tree_7_5`.`Score_6` AS `Score_6`, `XGB_Tree_7_5`.`Score_7` AS `Score_7`, `XGB_Tree_7_5`.`Score_8` AS `Score_8`, `XGB_Tree_7_5`.`Score_9` AS `Score_9` 
FROM `XGB_Tree_7_5` UNION ALL SELECT `XGB_Tree_8_5`.`KEY` AS `KEY`, `XGB_Tree_8_5`.`Score_0` AS `Score_0`, `XGB_Tree_8_5`.`Score_1` AS `Score_1`, `XGB_Tree_8_5`.`Score_2` AS `Score_2`, `XGB_Tree_8_5`.`Score_3` AS `Score_3`, `XGB_Tree_8_5`.`Score_4` AS `Score_4`, `XGB_Tree_8_5`.`Score_5` AS `Score_5`, `XGB_Tree_8_5`.`Score_6` AS `Score_6`, `XGB_Tree_8_5`.`Score_7` AS `Score_7`, `XGB_Tree_8_5`.`Score_8` AS `Score_8`, `XGB_Tree_8_5`.`Score_9` AS `Score_9` 
FROM `XGB_Tree_8_5` UNION ALL SELECT `XGB_Tree_9_5`.`KEY` AS `KEY`, `XGB_Tree_9_5`.`Score_0` AS `Score_0`, `XGB_Tree_9_5`.`Score_1` AS `Score_1`, `XGB_Tree_9_5`.`Score_2` AS `Score_2`, `XGB_Tree_9_5`.`Score_3` AS `Score_3`, `XGB_Tree_9_5`.`Score_4` AS `Score_4`, `XGB_Tree_9_5`.`Score_5` AS `Score_5`, `XGB_Tree_9_5`.`Score_6` AS `Score_6`, `XGB_Tree_9_5`.`Score_7` AS `Score_7`, `XGB_Tree_9_5`.`Score_8` AS `Score_8`, `XGB_Tree_9_5`.`Score_9` AS `Score_9` 
FROM `XGB_Tree_9_5` UNION ALL SELECT `XGB_Tree_0_6`.`KEY` AS `KEY`, `XGB_Tree_0_6`.`Score_0` AS `Score_0`, `XGB_Tree_0_6`.`Score_1` AS `Score_1`, `XGB_Tree_0_6`.`Score_2` AS `Score_2`, `XGB_Tree_0_6`.`Score_3` AS `Score_3`, `XGB_Tree_0_6`.`Score_4` AS `Score_4`, `XGB_Tree_0_6`.`Score_5` AS `Score_5`, `XGB_Tree_0_6`.`Score_6` AS `Score_6`, `XGB_Tree_0_6`.`Score_7` AS `Score_7`, `XGB_Tree_0_6`.`Score_8` AS `Score_8`, `XGB_Tree_0_6`.`Score_9` AS `Score_9` 
FROM `XGB_Tree_0_6` UNION ALL SELECT `XGB_Tree_1_6`.`KEY` AS `KEY`, `XGB_Tree_1_6`.`Score_0` AS `Score_0`, `XGB_Tree_1_6`.`Score_1` AS `Score_1`, `XGB_Tree_1_6`.`Score_2` AS `Score_2`, `XGB_Tree_1_6`.`Score_3` AS `Score_3`, `XGB_Tree_1_6`.`Score_4` AS `Score_4`, `XGB_Tree_1_6`.`Score_5` AS `Score_5`, `XGB_Tree_1_6`.`Score_6` AS `Score_6`, `XGB_Tree_1_6`.`Score_7` AS `Score_7`, `XGB_Tree_1_6`.`Score_8` AS `Score_8`, `XGB_Tree_1_6`.`Score_9` AS `Score_9` 
FROM `XGB_Tree_1_6` UNION ALL SELECT `XGB_Tree_2_6`.`KEY` AS `KEY`, `XGB_Tree_2_6`.`Score_0` AS `Score_0`, `XGB_Tree_2_6`.`Score_1` AS `Score_1`, `XGB_Tree_2_6`.`Score_2` AS `Score_2`, `XGB_Tree_2_6`.`Score_3` AS `Score_3`, `XGB_Tree_2_6`.`Score_4` AS `Score_4`, `XGB_Tree_2_6`.`Score_5` AS `Score_5`, `XGB_Tree_2_6`.`Score_6` AS `Score_6`, `XGB_Tree_2_6`.`Score_7` AS `Score_7`, `XGB_Tree_2_6`.`Score_8` AS `Score_8`, `XGB_Tree_2_6`.`Score_9` AS `Score_9` 
FROM `XGB_Tree_2_6` UNION ALL SELECT `XGB_Tree_3_6`.`KEY` AS `KEY`, `XGB_Tree_3_6`.`Score_0` AS `Score_0`, `XGB_Tree_3_6`.`Score_1` AS `Score_1`, `XGB_Tree_3_6`.`Score_2` AS `Score_2`, `XGB_Tree_3_6`.`Score_3` AS `Score_3`, `XGB_Tree_3_6`.`Score_4` AS `Score_4`, `XGB_Tree_3_6`.`Score_5` AS `Score_5`, `XGB_Tree_3_6`.`Score_6` AS `Score_6`, `XGB_Tree_3_6`.`Score_7` AS `Score_7`, `XGB_Tree_3_6`.`Score_8` AS `Score_8`, `XGB_Tree_3_6`.`Score_9` AS `Score_9` 
FROM `XGB_Tree_3_6`) AS `Score_Union_CTE_esu_7`), 
`Score_Union_CTE_8` AS 
(WITH `DT_node_lookup_64` AS 
(SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_33` < 3.5) THEN CASE WHEN (`ADS`.`Feature_34` < 13.5) THEN CASE WHEN (`ADS`.`Feature_25` < 5.5) THEN 7 ELSE 8 END ELSE CASE WHEN (`ADS`.`Feature_10` < 7.5) THEN 9 ELSE 10 END END ELSE CASE WHEN (`ADS`.`Feature_44` < 10.5) THEN CASE WHEN (`ADS`.`Feature_13` < 1.5) THEN 11 ELSE 12 END ELSE CASE WHEN (`ADS`.`Feature_13` < 7.5) THEN 13 ELSE 14 END END END AS node_id_2 
FROM digits AS `ADS`), 
`DT_node_data_64` AS 
(SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 7 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 3 AS parent_id, -0.052631597965955734 AS `Score` UNION ALL SELECT 8 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 3 AS parent_id, -0.030045559629797935 AS `Score` UNION ALL SELECT 9 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 4 AS parent_id, 0.011486165225505829 AS `Score` UNION ALL SELECT 10 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 4 AS parent_id, -0.04056014120578766 AS `Score` UNION ALL SELECT 11 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 5 AS parent_id, 0.00889600906521082 AS `Score` UNION ALL SELECT 12 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 5 AS parent_id, -0.04956508427858353 AS `Score` UNION ALL SELECT 13 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 6 AS parent_id, 0.1435585916042328 AS `Score` UNION ALL SELECT 14 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 6 AS parent_id, 0.013783042319118977 AS `Score`) AS `Values`), 
`DT_Output_64` AS 
(SELECT `DT_node_lookup_64`.`KEY` AS `KEY`, `DT_node_lookup_64`.node_id_2 AS node_id_2, `DT_node_data_64`.node_id AS node_id, `DT_node_data_64`.feature AS feature, `DT_node_data_64`.threshold AS threshold, `DT_node_data_64`.depth AS depth, `DT_node_data_64`.parent_id AS parent_id, `DT_node_data_64`.`Score` AS `Score` 
FROM `DT_node_lookup_64` LEFT OUTER JOIN `DT_node_data_64` ON `DT_node_lookup_64`.node_id_2 = `DT_node_data_64`.node_id), 
`XGB_Tree_4_6` AS 
(SELECT `DT_Output_64`.`KEY` AS `KEY`, 0.0 AS `Score_0`, 0.0 AS `Score_1`, 0.0 AS `Score_2`, 0.0 AS `Score_3`, `DT_Output_64`.`Score` AS `Score_4`, 0.0 AS `Score_5`, 0.0 AS `Score_6`, 0.0 AS `Score_7`, 0.0 AS `Score_8`, 0.0 AS `Score_9` 
FROM `DT_Output_64`), 
`DT_node_lookup_65` AS 
(SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_21` < 1.5) THEN CASE WHEN (`ADS`.`Feature_5` < 2.5) THEN CASE WHEN (`ADS`.`Feature_44` < 2.5) THEN 7 ELSE 8 END ELSE CASE WHEN (`ADS`.`Feature_42` < 8.5) THEN 9 ELSE 10 END END ELSE CASE WHEN (`ADS`.`Feature_26` < 15.5) THEN 5 ELSE CASE WHEN (`ADS`.`Feature_2` < 2.5) THEN 11 ELSE 12 END END END AS node_id_2 
FROM digits AS `ADS`), 
`DT_node_data_65` AS 
(SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 5 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, 2 AS parent_id, -0.051613327115774155 AS `Score` UNION ALL SELECT 7 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 3 AS parent_id, -0.022788098081946373 AS `Score` UNION ALL SELECT 8 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 3 AS parent_id, -0.0519634447991848 AS `Score` UNION ALL SELECT 9 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 4 AS parent_id, 0.13064055144786835 AS `Score` UNION ALL SELECT 10 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 4 AS parent_id, -0.010181269608438015 AS `Score` UNION ALL SELECT 11 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 6 AS parent_id, -0.05084696412086487 AS `Score` UNION ALL SELECT 12 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 6 AS parent_id, 0.02187681756913662 AS `Score`) AS `Values`), 
`DT_Output_65` AS 
(SELECT `DT_node_lookup_65`.`KEY` AS `KEY`, `DT_node_lookup_65`.node_id_2 AS node_id_2, `DT_node_data_65`.node_id AS node_id, `DT_node_data_65`.feature AS feature, `DT_node_data_65`.threshold AS threshold, `DT_node_data_65`.depth AS depth, `DT_node_data_65`.parent_id AS parent_id, `DT_node_data_65`.`Score` AS `Score` 
FROM `DT_node_lookup_65` LEFT OUTER JOIN `DT_node_data_65` ON `DT_node_lookup_65`.node_id_2 = `DT_node_data_65`.node_id), 
`XGB_Tree_5_6` AS 
(SELECT `DT_Output_65`.`KEY` AS `KEY`, 0.0 AS `Score_0`, 0.0 AS `Score_1`, 0.0 AS `Score_2`, 0.0 AS `Score_3`, 0.0 AS `Score_4`, `DT_Output_65`.`Score` AS `Score_5`, 0.0 AS `Score_6`, 0.0 AS `Score_7`, 0.0 AS `Score_8`, 0.0 AS `Score_9` 
FROM `DT_Output_65`), 
`DT_node_lookup_66` AS 
(SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_21` < 0.5) THEN CASE WHEN (`ADS`.`Feature_42` < 7.5) THEN 3 ELSE CASE WHEN (`ADS`.`Feature_54` < 2.5) THEN 7 ELSE 8 END END ELSE CASE WHEN (`ADS`.`Feature_4` < 5.5) THEN 5 ELSE 6 END END AS node_id_2 
FROM digits AS `ADS`), 
`DT_node_data_66` AS 
(SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, 1 AS parent_id, -0.04835380241274834 AS `Score` UNION ALL SELECT 5 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, 2 AS parent_id, -0.03127969056367874 AS `Score` UNION ALL SELECT 6 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, 2 AS parent_id, -0.05188966915011406 AS `Score` UNION ALL SELECT 7 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 4 AS parent_id, 0.0017563464352861047 AS `Score` UNION ALL SELECT 8 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 4 AS parent_id, 0.12556272745132446 AS `Score`) AS `Values`), 
`DT_Output_66` AS 
(SELECT `DT_node_lookup_66`.`KEY` AS `KEY`, `DT_node_lookup_66`.node_id_2 AS node_id_2, `DT_node_data_66`.node_id AS node_id, `DT_node_data_66`.feature AS feature, `DT_node_data_66`.threshold AS threshold, `DT_node_data_66`.depth AS depth, `DT_node_data_66`.parent_id AS parent_id, `DT_node_data_66`.`Score` AS `Score` 
FROM `DT_node_lookup_66` LEFT OUTER JOIN `DT_node_data_66` ON `DT_node_lookup_66`.node_id_2 = `DT_node_data_66`.node_id), 
`XGB_Tree_6_6` AS 
(SELECT `DT_Output_66`.`KEY` AS `KEY`, 0.0 AS `Score_0`, 0.0 AS `Score_1`, 0.0 AS `Score_2`, 0.0 AS `Score_3`, 0.0 AS `Score_4`, 0.0 AS `Score_5`, `DT_Output_66`.`Score` AS `Score_6`, 0.0 AS `Score_7`, 0.0 AS `Score_8`, 0.0 AS `Score_9` 
FROM `DT_Output_66`), 
`DT_node_lookup_67` AS 
(SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_53` < 0.5) THEN CASE WHEN (`ADS`.`Feature_37` < 0.5) THEN 3 ELSE CASE WHEN (`ADS`.`Feature_5` < 0.5) THEN 7 ELSE 8 END END ELSE CASE WHEN (`ADS`.`Feature_14` < 9.5) THEN CASE WHEN (`ADS`.`Feature_61` < 0.5) THEN 9 ELSE 10 END ELSE 6 END END AS node_id_2 
FROM digits AS `ADS`), 
`DT_node_data_67` AS 
(SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, 1 AS parent_id, -0.026695547625422478 AS `Score` UNION ALL SELECT 6 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, 2 AS parent_id, 0.009665472432971 AS `Score` UNION ALL SELECT 7 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 4 AS parent_id, 0.0003741634718608111 AS `Score` UNION ALL SELECT 8 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 4 AS parent_id, 0.13413479924201965 AS `Score` UNION ALL SELECT 9 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 5 AS parent_id, -0.03104289248585701 AS `Score` UNION ALL SELECT 10 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 5 AS parent_id, -0.05352823808789253 AS `Score`) AS `Values`), 
`DT_Output_67` AS 
(SELECT `DT_node_lookup_67`.`KEY` AS `KEY`, `DT_node_lookup_67`.node_id_2 AS node_id_2, `DT_node_data_67`.node_id AS node_id, `DT_node_data_67`.feature AS feature, `DT_node_data_67`.threshold AS threshold, `DT_node_data_67`.depth AS depth, `DT_node_data_67`.parent_id AS parent_id, `DT_node_data_67`.`Score` AS `Score` 
FROM `DT_node_lookup_67` LEFT OUTER JOIN `DT_node_data_67` ON `DT_node_lookup_67`.node_id_2 = `DT_node_data_67`.node_id), 
`XGB_Tree_7_6` AS 
(SELECT `DT_Output_67`.`KEY` AS `KEY`, 0.0 AS `Score_0`, 0.0 AS `Score_1`, 0.0 AS `Score_2`, 0.0 AS `Score_3`, 0.0 AS `Score_4`, 0.0 AS `Score_5`, 0.0 AS `Score_6`, `DT_Output_67`.`Score` AS `Score_7`, 0.0 AS `Score_8`, 0.0 AS `Score_9` 
FROM `DT_Output_67`), 
`DT_node_lookup_68` AS 
(SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_38` < 0.5) THEN CASE WHEN (`ADS`.`Feature_21` < 8.5) THEN CASE WHEN (`ADS`.`Feature_21` < 4.5) THEN 7 ELSE 8 END ELSE CASE WHEN (`ADS`.`Feature_35` < 11.5) THEN 9 ELSE 10 END END ELSE CASE WHEN (`ADS`.`Feature_27` < 12.5) THEN 5 ELSE CASE WHEN (`ADS`.`Feature_38` < 3.5) THEN 11 ELSE 12 END END END AS node_id_2 
FROM digits AS `ADS`), 
`DT_node_data_68` AS 
(SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 5 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, 2 AS parent_id, -0.0529584176838398 AS `Score` UNION ALL SELECT 7 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 3 AS parent_id, -0.0419108085334301 AS `Score` UNION ALL SELECT 8 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 3 AS parent_id, 0.014424676075577736 AS `Score` UNION ALL SELECT 9 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 4 AS parent_id, -0.028979068621993065 AS `Score` UNION ALL SELECT 10 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 4 AS parent_id, 0.10942872613668442 AS `Score` UNION ALL SELECT 11 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 6 AS parent_id, 0.016106484457850456 AS `Score` UNION ALL SELECT 12 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 6 AS parent_id, -0.05139649659395218 AS `Score`) AS `Values`), 
`DT_Output_68` AS 
(SELECT `DT_node_lookup_68`.`KEY` AS `KEY`, `DT_node_lookup_68`.node_id_2 AS node_id_2, `DT_node_data_68`.node_id AS node_id, `DT_node_data_68`.feature AS feature, `DT_node_data_68`.threshold AS threshold, `DT_node_data_68`.depth AS depth, `DT_node_data_68`.parent_id AS parent_id, `DT_node_data_68`.`Score` AS `Score` 
FROM `DT_node_lookup_68` LEFT OUTER JOIN `DT_node_data_68` ON `DT_node_lookup_68`.node_id_2 = `DT_node_data_68`.node_id), 
`XGB_Tree_8_6` AS 
(SELECT `DT_Output_68`.`KEY` AS `KEY`, 0.0 AS `Score_0`, 0.0 AS `Score_1`, 0.0 AS `Score_2`, 0.0 AS `Score_3`, 0.0 AS `Score_4`, 0.0 AS `Score_5`, 0.0 AS `Score_6`, 0.0 AS `Score_7`, `DT_Output_68`.`Score` AS `Score_8`, 0.0 AS `Score_9` 
FROM `DT_Output_68`), 
`DT_node_lookup_69` AS 
(SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_29` < 13.5) THEN CASE WHEN (`ADS`.`Feature_21` < 15.5) THEN CASE WHEN (`ADS`.`Feature_42` < 3.5) THEN 7 ELSE 8 END ELSE 4 END ELSE CASE WHEN (`ADS`.`Feature_44` < 6.5) THEN CASE WHEN (`ADS`.`Feature_42` < 2.5) THEN 9 ELSE 10 END ELSE CASE WHEN (`ADS`.`Feature_28` < 14.5) THEN 11 ELSE 12 END END END AS node_id_2 
FROM digits AS `ADS`), 
`DT_node_data_69` AS 
(SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, 1 AS parent_id, 0.04573267698287964 AS `Score` UNION ALL SELECT 7 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 3 AS parent_id, -0.02823255956172943 AS `Score` UNION ALL SELECT 8 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 3 AS parent_id, -0.052063025534152985 AS `Score` UNION ALL SELECT 9 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 5 AS parent_id, 0.1355106383562088 AS `Score` UNION ALL SELECT 10 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 5 AS parent_id, 0.029818817973136902 AS `Score` UNION ALL SELECT 11 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 6 AS parent_id, -0.04597330093383789 AS `Score` UNION ALL SELECT 12 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 6 AS parent_id, 0.03856043145060539 AS `Score`) AS `Values`), 
`DT_Output_69` AS 
(SELECT `DT_node_lookup_69`.`KEY` AS `KEY`, `DT_node_lookup_69`.node_id_2 AS node_id_2, `DT_node_data_69`.node_id AS node_id, `DT_node_data_69`.feature AS feature, `DT_node_data_69`.threshold AS threshold, `DT_node_data_69`.depth AS depth, `DT_node_data_69`.parent_id AS parent_id, `DT_node_data_69`.`Score` AS `Score` 
FROM `DT_node_lookup_69` LEFT OUTER JOIN `DT_node_data_69` ON `DT_node_lookup_69`.node_id_2 = `DT_node_data_69`.node_id), 
`XGB_Tree_9_6` AS 
(SELECT `DT_Output_69`.`KEY` AS `KEY`, 0.0 AS `Score_0`, 0.0 AS `Score_1`, 0.0 AS `Score_2`, 0.0 AS `Score_3`, 0.0 AS `Score_4`, 0.0 AS `Score_5`, 0.0 AS `Score_6`, 0.0 AS `Score_7`, 0.0 AS `Score_8`, `DT_Output_69`.`Score` AS `Score_9` 
FROM `DT_Output_69`), 
`DT_node_lookup_70` AS 
(SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_36` < 0.5) THEN CASE WHEN (`ADS`.`Feature_33` < 0.5) THEN 3 ELSE CASE WHEN (`ADS`.`Feature_21` < 8.5) THEN 7 ELSE 8 END END ELSE CASE WHEN (`ADS`.`Feature_36` < 3.5) THEN 5 ELSE 6 END END AS node_id_2 
FROM digits AS `ADS`), 
`DT_node_data_70` AS 
(SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, 1 AS parent_id, -0.04293115437030792 AS `Score` UNION ALL SELECT 5 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, 2 AS parent_id, -0.019083376973867416 AS `Score` UNION ALL SELECT 6 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, 2 AS parent_id, -0.05316632613539696 AS `Score` UNION ALL SELECT 7 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 4 AS parent_id, 0.05222516134381294 AS `Score` UNION ALL SELECT 8 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 4 AS parent_id, 0.11780966818332672 AS `Score`) AS `Values`), 
`DT_Output_70` AS 
(SELECT `DT_node_lookup_70`.`KEY` AS `KEY`, `DT_node_lookup_70`.node_id_2 AS node_id_2, `DT_node_data_70`.node_id AS node_id, `DT_node_data_70`.feature AS feature, `DT_node_data_70`.threshold AS threshold, `DT_node_data_70`.depth AS depth, `DT_node_data_70`.parent_id AS parent_id, `DT_node_data_70`.`Score` AS `Score` 
FROM `DT_node_lookup_70` LEFT OUTER JOIN `DT_node_data_70` ON `DT_node_lookup_70`.node_id_2 = `DT_node_data_70`.node_id), 
`XGB_Tree_0_7` AS 
(SELECT `DT_Output_70`.`KEY` AS `KEY`, `DT_Output_70`.`Score` AS `Score_0`, 0.0 AS `Score_1`, 0.0 AS `Score_2`, 0.0 AS `Score_3`, 0.0 AS `Score_4`, 0.0 AS `Score_5`, 0.0 AS `Score_6`, 0.0 AS `Score_7`, 0.0 AS `Score_8`, 0.0 AS `Score_9` 
FROM `DT_Output_70`), 
`DT_node_lookup_71` AS 
(SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_19` < 11.5) THEN CASE WHEN (`ADS`.`Feature_10` < 4.5) THEN 3 ELSE 4 END ELSE CASE WHEN (`ADS`.`Feature_38` < 0.5) THEN CASE WHEN (`ADS`.`Feature_10` < 13.5) THEN 7 ELSE 8 END ELSE CASE WHEN (`ADS`.`Feature_13` < 7.5) THEN 9 ELSE 10 END END END AS node_id_2 
FROM digits AS `ADS`), 
`DT_node_data_71` AS 
(SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, 1 AS parent_id, 0.009834724478423595 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, 1 AS parent_id, -0.053164344280958176 AS `Score` UNION ALL SELECT 7 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 5 AS parent_id, 0.11258210986852646 AS `Score` UNION ALL SELECT 8 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 5 AS parent_id, -0.018363604322075844 AS `Score` UNION ALL SELECT 9 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 6 AS parent_id, -0.0540500245988369 AS `Score` UNION ALL SELECT 10 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 6 AS parent_id, 0.0430915430188179 AS `Score`) AS `Values`), 
`DT_Output_71` AS 
(SELECT `DT_node_lookup_71`.`KEY` AS `KEY`, `DT_node_lookup_71`.node_id_2 AS node_id_2, `DT_node_data_71`.node_id AS node_id, `DT_node_data_71`.feature AS feature, `DT_node_data_71`.threshold AS threshold, `DT_node_data_71`.depth AS depth, `DT_node_data_71`.parent_id AS parent_id, `DT_node_data_71`.`Score` AS `Score` 
FROM `DT_node_lookup_71` LEFT OUTER JOIN `DT_node_data_71` ON `DT_node_lookup_71`.node_id_2 = `DT_node_data_71`.node_id), 
`XGB_Tree_1_7` AS 
(SELECT `DT_Output_71`.`KEY` AS `KEY`, 0.0 AS `Score_0`, `DT_Output_71`.`Score` AS `Score_1`, 0.0 AS `Score_2`, 0.0 AS `Score_3`, 0.0 AS `Score_4`, 0.0 AS `Score_5`, 0.0 AS `Score_6`, 0.0 AS `Score_7`, 0.0 AS `Score_8`, 0.0 AS `Score_9` 
FROM `DT_Output_71`)
 SELECT `Score_Union_CTE_esu_8`.`KEY`, `Score_Union_CTE_esu_8`.`Score_0`, `Score_Union_CTE_esu_8`.`Score_1`, `Score_Union_CTE_esu_8`.`Score_2`, `Score_Union_CTE_esu_8`.`Score_3`, `Score_Union_CTE_esu_8`.`Score_4`, `Score_Union_CTE_esu_8`.`Score_5`, `Score_Union_CTE_esu_8`.`Score_6`, `Score_Union_CTE_esu_8`.`Score_7`, `Score_Union_CTE_esu_8`.`Score_8`, `Score_Union_CTE_esu_8`.`Score_9` 
FROM (SELECT `XGB_Tree_4_6`.`KEY` AS `KEY`, `XGB_Tree_4_6`.`Score_0` AS `Score_0`, `XGB_Tree_4_6`.`Score_1` AS `Score_1`, `XGB_Tree_4_6`.`Score_2` AS `Score_2`, `XGB_Tree_4_6`.`Score_3` AS `Score_3`, `XGB_Tree_4_6`.`Score_4` AS `Score_4`, `XGB_Tree_4_6`.`Score_5` AS `Score_5`, `XGB_Tree_4_6`.`Score_6` AS `Score_6`, `XGB_Tree_4_6`.`Score_7` AS `Score_7`, `XGB_Tree_4_6`.`Score_8` AS `Score_8`, `XGB_Tree_4_6`.`Score_9` AS `Score_9` 
FROM `XGB_Tree_4_6` UNION ALL SELECT `XGB_Tree_5_6`.`KEY` AS `KEY`, `XGB_Tree_5_6`.`Score_0` AS `Score_0`, `XGB_Tree_5_6`.`Score_1` AS `Score_1`, `XGB_Tree_5_6`.`Score_2` AS `Score_2`, `XGB_Tree_5_6`.`Score_3` AS `Score_3`, `XGB_Tree_5_6`.`Score_4` AS `Score_4`, `XGB_Tree_5_6`.`Score_5` AS `Score_5`, `XGB_Tree_5_6`.`Score_6` AS `Score_6`, `XGB_Tree_5_6`.`Score_7` AS `Score_7`, `XGB_Tree_5_6`.`Score_8` AS `Score_8`, `XGB_Tree_5_6`.`Score_9` AS `Score_9` 
FROM `XGB_Tree_5_6` UNION ALL SELECT `XGB_Tree_6_6`.`KEY` AS `KEY`, `XGB_Tree_6_6`.`Score_0` AS `Score_0`, `XGB_Tree_6_6`.`Score_1` AS `Score_1`, `XGB_Tree_6_6`.`Score_2` AS `Score_2`, `XGB_Tree_6_6`.`Score_3` AS `Score_3`, `XGB_Tree_6_6`.`Score_4` AS `Score_4`, `XGB_Tree_6_6`.`Score_5` AS `Score_5`, `XGB_Tree_6_6`.`Score_6` AS `Score_6`, `XGB_Tree_6_6`.`Score_7` AS `Score_7`, `XGB_Tree_6_6`.`Score_8` AS `Score_8`, `XGB_Tree_6_6`.`Score_9` AS `Score_9` 
FROM `XGB_Tree_6_6` UNION ALL SELECT `XGB_Tree_7_6`.`KEY` AS `KEY`, `XGB_Tree_7_6`.`Score_0` AS `Score_0`, `XGB_Tree_7_6`.`Score_1` AS `Score_1`, `XGB_Tree_7_6`.`Score_2` AS `Score_2`, `XGB_Tree_7_6`.`Score_3` AS `Score_3`, `XGB_Tree_7_6`.`Score_4` AS `Score_4`, `XGB_Tree_7_6`.`Score_5` AS `Score_5`, `XGB_Tree_7_6`.`Score_6` AS `Score_6`, `XGB_Tree_7_6`.`Score_7` AS `Score_7`, `XGB_Tree_7_6`.`Score_8` AS `Score_8`, `XGB_Tree_7_6`.`Score_9` AS `Score_9` 
FROM `XGB_Tree_7_6` UNION ALL SELECT `XGB_Tree_8_6`.`KEY` AS `KEY`, `XGB_Tree_8_6`.`Score_0` AS `Score_0`, `XGB_Tree_8_6`.`Score_1` AS `Score_1`, `XGB_Tree_8_6`.`Score_2` AS `Score_2`, `XGB_Tree_8_6`.`Score_3` AS `Score_3`, `XGB_Tree_8_6`.`Score_4` AS `Score_4`, `XGB_Tree_8_6`.`Score_5` AS `Score_5`, `XGB_Tree_8_6`.`Score_6` AS `Score_6`, `XGB_Tree_8_6`.`Score_7` AS `Score_7`, `XGB_Tree_8_6`.`Score_8` AS `Score_8`, `XGB_Tree_8_6`.`Score_9` AS `Score_9` 
FROM `XGB_Tree_8_6` UNION ALL SELECT `XGB_Tree_9_6`.`KEY` AS `KEY`, `XGB_Tree_9_6`.`Score_0` AS `Score_0`, `XGB_Tree_9_6`.`Score_1` AS `Score_1`, `XGB_Tree_9_6`.`Score_2` AS `Score_2`, `XGB_Tree_9_6`.`Score_3` AS `Score_3`, `XGB_Tree_9_6`.`Score_4` AS `Score_4`, `XGB_Tree_9_6`.`Score_5` AS `Score_5`, `XGB_Tree_9_6`.`Score_6` AS `Score_6`, `XGB_Tree_9_6`.`Score_7` AS `Score_7`, `XGB_Tree_9_6`.`Score_8` AS `Score_8`, `XGB_Tree_9_6`.`Score_9` AS `Score_9` 
FROM `XGB_Tree_9_6` UNION ALL SELECT `XGB_Tree_0_7`.`KEY` AS `KEY`, `XGB_Tree_0_7`.`Score_0` AS `Score_0`, `XGB_Tree_0_7`.`Score_1` AS `Score_1`, `XGB_Tree_0_7`.`Score_2` AS `Score_2`, `XGB_Tree_0_7`.`Score_3` AS `Score_3`, `XGB_Tree_0_7`.`Score_4` AS `Score_4`, `XGB_Tree_0_7`.`Score_5` AS `Score_5`, `XGB_Tree_0_7`.`Score_6` AS `Score_6`, `XGB_Tree_0_7`.`Score_7` AS `Score_7`, `XGB_Tree_0_7`.`Score_8` AS `Score_8`, `XGB_Tree_0_7`.`Score_9` AS `Score_9` 
FROM `XGB_Tree_0_7` UNION ALL SELECT `XGB_Tree_1_7`.`KEY` AS `KEY`, `XGB_Tree_1_7`.`Score_0` AS `Score_0`, `XGB_Tree_1_7`.`Score_1` AS `Score_1`, `XGB_Tree_1_7`.`Score_2` AS `Score_2`, `XGB_Tree_1_7`.`Score_3` AS `Score_3`, `XGB_Tree_1_7`.`Score_4` AS `Score_4`, `XGB_Tree_1_7`.`Score_5` AS `Score_5`, `XGB_Tree_1_7`.`Score_6` AS `Score_6`, `XGB_Tree_1_7`.`Score_7` AS `Score_7`, `XGB_Tree_1_7`.`Score_8` AS `Score_8`, `XGB_Tree_1_7`.`Score_9` AS `Score_9` 
FROM `XGB_Tree_1_7`) AS `Score_Union_CTE_esu_8`), 
`Score_Union_CTE_9` AS 
(WITH `DT_node_lookup_72` AS 
(SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_26` < 6.5) THEN CASE WHEN (`ADS`.`Feature_51` < 13.5) THEN CASE WHEN (`ADS`.`Feature_37` < 0.5) THEN 7 ELSE 8 END ELSE CASE WHEN (`ADS`.`Feature_53` < 3.5) THEN 9 ELSE 10 END END ELSE CASE WHEN (`ADS`.`Feature_62` < 10.5) THEN CASE WHEN (`ADS`.`Feature_62` < 3.5) THEN 11 ELSE 12 END ELSE 6 END END AS node_id_2 
FROM digits AS `ADS`), 
`DT_node_data_72` AS 
(SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 6 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, 2 AS parent_id, 0.024392975494265556 AS `Score` UNION ALL SELECT 7 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 3 AS parent_id, 0.08189865946769714 AS `Score` UNION ALL SELECT 8 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 3 AS parent_id, -0.04008705914020538 AS `Score` UNION ALL SELECT 9 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 4 AS parent_id, -0.0339292548596859 AS `Score` UNION ALL SELECT 10 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 4 AS parent_id, 0.13996681571006775 AS `Score` UNION ALL SELECT 11 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 5 AS parent_id, -0.053388115018606186 AS `Score` UNION ALL SELECT 12 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 5 AS parent_id, -0.03377879783511162 AS `Score`) AS `Values`), 
`DT_Output_72` AS 
(SELECT `DT_node_lookup_72`.`KEY` AS `KEY`, `DT_node_lookup_72`.node_id_2 AS node_id_2, `DT_node_data_72`.node_id AS node_id, `DT_node_data_72`.feature AS feature, `DT_node_data_72`.threshold AS threshold, `DT_node_data_72`.depth AS depth, `DT_node_data_72`.parent_id AS parent_id, `DT_node_data_72`.`Score` AS `Score` 
FROM `DT_node_lookup_72` LEFT OUTER JOIN `DT_node_data_72` ON `DT_node_lookup_72`.node_id_2 = `DT_node_data_72`.node_id), 
`XGB_Tree_2_7` AS 
(SELECT `DT_Output_72`.`KEY` AS `KEY`, 0.0 AS `Score_0`, 0.0 AS `Score_1`, `DT_Output_72`.`Score` AS `Score_2`, 0.0 AS `Score_3`, 0.0 AS `Score_4`, 0.0 AS `Score_5`, 0.0 AS `Score_6`, 0.0 AS `Score_7`, 0.0 AS `Score_8`, 0.0 AS `Score_9` 
FROM `DT_Output_72`), 
`DT_node_lookup_73` AS 
(SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_26` < 5.5) THEN CASE WHEN (`ADS`.`Feature_43` < 2.5) THEN CASE WHEN (`ADS`.`Feature_36` < 4.5) THEN 7 ELSE 8 END ELSE CASE WHEN (`ADS`.`Feature_4` < 15.5) THEN 9 ELSE 10 END END ELSE CASE WHEN (`ADS`.`Feature_54` < 5.5) THEN 5 ELSE CASE WHEN (`ADS`.`Feature_20` < 7.5) THEN 11 ELSE 12 END END END AS node_id_2 
FROM digits AS `ADS`), 
`DT_node_data_73` AS 
(SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 5 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, 2 AS parent_id, -0.05194280669093132 AS `Score` UNION ALL SELECT 7 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 3 AS parent_id, 0.004356664139777422 AS `Score` UNION ALL SELECT 8 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 3 AS parent_id, 0.11447812616825104 AS `Score` UNION ALL SELECT 9 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 4 AS parent_id, -0.0467262826859951 AS `Score` UNION ALL SELECT 10 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 4 AS parent_id, 0.01878337934613228 AS `Score` UNION ALL SELECT 11 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 6 AS parent_id, -0.047363873571157455 AS `Score` UNION ALL SELECT 12 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 6 AS parent_id, 0.027376411482691765 AS `Score`) AS `Values`), 
`DT_Output_73` AS 
(SELECT `DT_node_lookup_73`.`KEY` AS `KEY`, `DT_node_lookup_73`.node_id_2 AS node_id_2, `DT_node_data_73`.node_id AS node_id, `DT_node_data_73`.feature AS feature, `DT_node_data_73`.threshold AS threshold, `DT_node_data_73`.depth AS depth, `DT_node_data_73`.parent_id AS parent_id, `DT_node_data_73`.`Score` AS `Score` 
FROM `DT_node_lookup_73` LEFT OUTER JOIN `DT_node_data_73` ON `DT_node_lookup_73`.node_id_2 = `DT_node_data_73`.node_id), 
`XGB_Tree_3_7` AS 
(SELECT `DT_Output_73`.`KEY` AS `KEY`, 0.0 AS `Score_0`, 0.0 AS `Score_1`, 0.0 AS `Score_2`, `DT_Output_73`.`Score` AS `Score_3`, 0.0 AS `Score_4`, 0.0 AS `Score_5`, 0.0 AS `Score_6`, 0.0 AS `Score_7`, 0.0 AS `Score_8`, 0.0 AS `Score_9` 
FROM `DT_Output_73`), 
`DT_node_lookup_74` AS 
(SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_58` < 0.5) THEN CASE WHEN (`ADS`.`Feature_33` < 1.5) THEN 3 ELSE CASE WHEN (`ADS`.`Feature_13` < 7.5) THEN 7 ELSE 8 END END ELSE CASE WHEN (`ADS`.`Feature_33` < 8.5) THEN CASE WHEN (`ADS`.`Feature_30` < 7.5) THEN 9 ELSE 10 END ELSE 6 END END AS node_id_2 
FROM digits AS `ADS`), 
`DT_node_data_74` AS 
(SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, 1 AS parent_id, -0.04753420874476433 AS `Score` UNION ALL SELECT 6 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, 2 AS parent_id, 0.03749707713723183 AS `Score` UNION ALL SELECT 7 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 4 AS parent_id, 0.12798283994197845 AS `Score` UNION ALL SELECT 8 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 4 AS parent_id, 0.005174619145691395 AS `Score` UNION ALL SELECT 9 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 5 AS parent_id, -0.05080663785338402 AS `Score` UNION ALL SELECT 10 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 5 AS parent_id, -0.01760980114340782 AS `Score`) AS `Values`), 
`DT_Output_74` AS 
(SELECT `DT_node_lookup_74`.`KEY` AS `KEY`, `DT_node_lookup_74`.node_id_2 AS node_id_2, `DT_node_data_74`.node_id AS node_id, `DT_node_data_74`.feature AS feature, `DT_node_data_74`.threshold AS threshold, `DT_node_data_74`.depth AS depth, `DT_node_data_74`.parent_id AS parent_id, `DT_node_data_74`.`Score` AS `Score` 
FROM `DT_node_lookup_74` LEFT OUTER JOIN `DT_node_data_74` ON `DT_node_lookup_74`.node_id_2 = `DT_node_data_74`.node_id), 
`XGB_Tree_4_7` AS 
(SELECT `DT_Output_74`.`KEY` AS `KEY`, 0.0 AS `Score_0`, 0.0 AS `Score_1`, 0.0 AS `Score_2`, 0.0 AS `Score_3`, `DT_Output_74`.`Score` AS `Score_4`, 0.0 AS `Score_5`, 0.0 AS `Score_6`, 0.0 AS `Score_7`, 0.0 AS `Score_8`, 0.0 AS `Score_9` 
FROM `DT_Output_74`), 
`DT_node_lookup_75` AS 
(SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_21` < 1.5) THEN CASE WHEN (`ADS`.`Feature_5` < 2.5) THEN CASE WHEN (`ADS`.`Feature_43` < 8.5) THEN 7 ELSE 8 END ELSE CASE WHEN (`ADS`.`Feature_42` < 8.5) THEN 9 ELSE 10 END END ELSE CASE WHEN (`ADS`.`Feature_26` < 15.5) THEN CASE WHEN (`ADS`.`Feature_36` < 0.5) THEN 11 ELSE 12 END ELSE CASE WHEN (`ADS`.`Feature_42` < 0.5) THEN 13 ELSE 14 END END END AS node_id_2 
FROM digits AS `ADS`), 
`DT_node_data_75` AS 
(SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 7 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 3 AS parent_id, -0.02307707816362381 AS `Score` UNION ALL SELECT 8 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 3 AS parent_id, -0.05139002948999405 AS `Score` UNION ALL SELECT 9 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 4 AS parent_id, 0.11757262796163559 AS `Score` UNION ALL SELECT 10 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 4 AS parent_id, -0.009448256343603134 AS `Score` UNION ALL SELECT 11 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 5 AS parent_id, -0.03973310813307762 AS `Score` UNION ALL SELECT 12 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 5 AS parent_id, -0.05309125781059265 AS `Score` UNION ALL SELECT 13 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 6 AS parent_id, 0.021011030301451683 AS `Score` UNION ALL SELECT 14 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 6 AS parent_id, -0.05072809010744095 AS `Score`) AS `Values`), 
`DT_Output_75` AS 
(SELECT `DT_node_lookup_75`.`KEY` AS `KEY`, `DT_node_lookup_75`.node_id_2 AS node_id_2, `DT_node_data_75`.node_id AS node_id, `DT_node_data_75`.feature AS feature, `DT_node_data_75`.threshold AS threshold, `DT_node_data_75`.depth AS depth, `DT_node_data_75`.parent_id AS parent_id, `DT_node_data_75`.`Score` AS `Score` 
FROM `DT_node_lookup_75` LEFT OUTER JOIN `DT_node_data_75` ON `DT_node_lookup_75`.node_id_2 = `DT_node_data_75`.node_id), 
`XGB_Tree_5_7` AS 
(SELECT `DT_Output_75`.`KEY` AS `KEY`, 0.0 AS `Score_0`, 0.0 AS `Score_1`, 0.0 AS `Score_2`, 0.0 AS `Score_3`, 0.0 AS `Score_4`, `DT_Output_75`.`Score` AS `Score_5`, 0.0 AS `Score_6`, 0.0 AS `Score_7`, 0.0 AS `Score_8`, 0.0 AS `Score_9` 
FROM `DT_Output_75`), 
`DT_node_lookup_76` AS 
(SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_21` < 0.5) THEN CASE WHEN (`ADS`.`Feature_42` < 7.5) THEN 3 ELSE CASE WHEN (`ADS`.`Feature_54` < 2.5) THEN 7 ELSE 8 END END ELSE CASE WHEN (`ADS`.`Feature_34` < 15.5) THEN 5 ELSE 6 END END AS node_id_2 
FROM digits AS `ADS`), 
`DT_node_data_76` AS 
(SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, 1 AS parent_id, -0.047802869230508804 AS `Score` UNION ALL SELECT 5 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, 2 AS parent_id, -0.05230683088302612 AS `Score` UNION ALL SELECT 6 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, 2 AS parent_id, -0.03583579882979393 AS `Score` UNION ALL SELECT 7 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 4 AS parent_id, 0.0019343806197866797 AS `Score` UNION ALL SELECT 8 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 4 AS parent_id, 0.11343914270401001 AS `Score`) AS `Values`), 
`DT_Output_76` AS 
(SELECT `DT_node_lookup_76`.`KEY` AS `KEY`, `DT_node_lookup_76`.node_id_2 AS node_id_2, `DT_node_data_76`.node_id AS node_id, `DT_node_data_76`.feature AS feature, `DT_node_data_76`.threshold AS threshold, `DT_node_data_76`.depth AS depth, `DT_node_data_76`.parent_id AS parent_id, `DT_node_data_76`.`Score` AS `Score` 
FROM `DT_node_lookup_76` LEFT OUTER JOIN `DT_node_data_76` ON `DT_node_lookup_76`.node_id_2 = `DT_node_data_76`.node_id), 
`XGB_Tree_6_7` AS 
(SELECT `DT_Output_76`.`KEY` AS `KEY`, 0.0 AS `Score_0`, 0.0 AS `Score_1`, 0.0 AS `Score_2`, 0.0 AS `Score_3`, 0.0 AS `Score_4`, 0.0 AS `Score_5`, `DT_Output_76`.`Score` AS `Score_6`, 0.0 AS `Score_7`, 0.0 AS `Score_8`, 0.0 AS `Score_9` 
FROM `DT_Output_76`), 
`DT_node_lookup_77` AS 
(SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_53` < 0.5) THEN CASE WHEN (`ADS`.`Feature_29` < 5.5) THEN CASE WHEN (`ADS`.`Feature_60` < 2.5) THEN 7 ELSE 8 END ELSE CASE WHEN (`ADS`.`Feature_12` < 5.5) THEN 9 ELSE 10 END END ELSE CASE WHEN (`ADS`.`Feature_14` < 9.5) THEN CASE WHEN (`ADS`.`Feature_61` < 0.5) THEN 11 ELSE 12 END ELSE 6 END END AS node_id_2 
FROM digits AS `ADS`), 
`DT_node_data_77` AS 
(SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 6 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, 2 AS parent_id, 0.009395121596753597 AS `Score` UNION ALL SELECT 7 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 3 AS parent_id, 0.04466312378644943 AS `Score` UNION ALL SELECT 8 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 3 AS parent_id, -0.05028834939002991 AS `Score` UNION ALL SELECT 9 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 4 AS parent_id, 0.006215463858097792 AS `Score` UNION ALL SELECT 10 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 4 AS parent_id, 0.12466017156839371 AS `Score` UNION ALL SELECT 11 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 5 AS parent_id, -0.030176615342497826 AS `Score` UNION ALL SELECT 12 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 5 AS parent_id, -0.05326321721076965 AS `Score`) AS `Values`), 
`DT_Output_77` AS 
(SELECT `DT_node_lookup_77`.`KEY` AS `KEY`, `DT_node_lookup_77`.node_id_2 AS node_id_2, `DT_node_data_77`.node_id AS node_id, `DT_node_data_77`.feature AS feature, `DT_node_data_77`.threshold AS threshold, `DT_node_data_77`.depth AS depth, `DT_node_data_77`.parent_id AS parent_id, `DT_node_data_77`.`Score` AS `Score` 
FROM `DT_node_lookup_77` LEFT OUTER JOIN `DT_node_data_77` ON `DT_node_lookup_77`.node_id_2 = `DT_node_data_77`.node_id), 
`XGB_Tree_7_7` AS 
(SELECT `DT_Output_77`.`KEY` AS `KEY`, 0.0 AS `Score_0`, 0.0 AS `Score_1`, 0.0 AS `Score_2`, 0.0 AS `Score_3`, 0.0 AS `Score_4`, 0.0 AS `Score_5`, 0.0 AS `Score_6`, `DT_Output_77`.`Score` AS `Score_7`, 0.0 AS `Score_8`, 0.0 AS `Score_9` 
FROM `DT_Output_77`), 
`DT_node_lookup_78` AS 
(SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_38` < 1.5) THEN CASE WHEN (`ADS`.`Feature_21` < 4.5) THEN CASE WHEN (`ADS`.`Feature_52` < 7.5) THEN 7 ELSE 8 END ELSE CASE WHEN (`ADS`.`Feature_42` < 7.5) THEN 9 ELSE 10 END END ELSE CASE WHEN (`ADS`.`Feature_27` < 15.5) THEN 5 ELSE 6 END END AS node_id_2 
FROM digits AS `ADS`), 
`DT_node_data_78` AS 
(SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 5 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, 2 AS parent_id, -0.05155758932232857 AS `Score` UNION ALL SELECT 6 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, 2 AS parent_id, -0.025254089385271072 AS `Score` UNION ALL SELECT 7 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 3 AS parent_id, -0.021582147106528282 AS `Score` UNION ALL SELECT 8 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 3 AS parent_id, -0.04947498068213463 AS `Score` UNION ALL SELECT 9 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 4 AS parent_id, -0.004186784382909536 AS `Score` UNION ALL SELECT 10 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 4 AS parent_id, 0.0936305820941925 AS `Score`) AS `Values`), 
`DT_Output_78` AS 
(SELECT `DT_node_lookup_78`.`KEY` AS `KEY`, `DT_node_lookup_78`.node_id_2 AS node_id_2, `DT_node_data_78`.node_id AS node_id, `DT_node_data_78`.feature AS feature, `DT_node_data_78`.threshold AS threshold, `DT_node_data_78`.depth AS depth, `DT_node_data_78`.parent_id AS parent_id, `DT_node_data_78`.`Score` AS `Score` 
FROM `DT_node_lookup_78` LEFT OUTER JOIN `DT_node_data_78` ON `DT_node_lookup_78`.node_id_2 = `DT_node_data_78`.node_id), 
`XGB_Tree_8_7` AS 
(SELECT `DT_Output_78`.`KEY` AS `KEY`, 0.0 AS `Score_0`, 0.0 AS `Score_1`, 0.0 AS `Score_2`, 0.0 AS `Score_3`, 0.0 AS `Score_4`, 0.0 AS `Score_5`, 0.0 AS `Score_6`, 0.0 AS `Score_7`, `DT_Output_78`.`Score` AS `Score_8`, 0.0 AS `Score_9` 
FROM `DT_Output_78`), 
`DT_node_lookup_79` AS 
(SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_43` < 3.5) THEN CASE WHEN (`ADS`.`Feature_21` < 10.5) THEN CASE WHEN (`ADS`.`Feature_61` < 11.5) THEN 7 ELSE 8 END ELSE CASE WHEN (`ADS`.`Feature_42` < 10.5) THEN 9 ELSE 10 END END ELSE CASE WHEN (`ADS`.`Feature_60` < 1.5) THEN 5 ELSE CASE WHEN (`ADS`.`Feature_35` < 4.5) THEN 11 ELSE 12 END END END AS node_id_2 
FROM digits AS `ADS`), 
`DT_node_data_79` AS 
(SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 5 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, 2 AS parent_id, -0.018379976972937584 AS `Score` UNION ALL SELECT 7 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 3 AS parent_id, -0.05048123002052307 AS `Score` UNION ALL SELECT 8 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 3 AS parent_id, 0.004175710026174784 AS `Score` UNION ALL SELECT 9 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 4 AS parent_id, 0.10397309064865112 AS `Score` UNION ALL SELECT 10 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 4 AS parent_id, -0.05146094784140587 AS `Score` UNION ALL SELECT 11 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 6 AS parent_id, -0.035508617758750916 AS `Score` UNION ALL SELECT 12 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 6 AS parent_id, -0.0531359426677227 AS `Score`) AS `Values`), 
`DT_Output_79` AS 
(SELECT `DT_node_lookup_79`.`KEY` AS `KEY`, `DT_node_lookup_79`.node_id_2 AS node_id_2, `DT_node_data_79`.node_id AS node_id, `DT_node_data_79`.feature AS feature, `DT_node_data_79`.threshold AS threshold, `DT_node_data_79`.depth AS depth, `DT_node_data_79`.parent_id AS parent_id, `DT_node_data_79`.`Score` AS `Score` 
FROM `DT_node_lookup_79` LEFT OUTER JOIN `DT_node_data_79` ON `DT_node_lookup_79`.node_id_2 = `DT_node_data_79`.node_id), 
`XGB_Tree_9_7` AS 
(SELECT `DT_Output_79`.`KEY` AS `KEY`, 0.0 AS `Score_0`, 0.0 AS `Score_1`, 0.0 AS `Score_2`, 0.0 AS `Score_3`, 0.0 AS `Score_4`, 0.0 AS `Score_5`, 0.0 AS `Score_6`, 0.0 AS `Score_7`, 0.0 AS `Score_8`, `DT_Output_79`.`Score` AS `Score_9` 
FROM `DT_Output_79`)
 SELECT `Score_Union_CTE_esu_9`.`KEY`, `Score_Union_CTE_esu_9`.`Score_0`, `Score_Union_CTE_esu_9`.`Score_1`, `Score_Union_CTE_esu_9`.`Score_2`, `Score_Union_CTE_esu_9`.`Score_3`, `Score_Union_CTE_esu_9`.`Score_4`, `Score_Union_CTE_esu_9`.`Score_5`, `Score_Union_CTE_esu_9`.`Score_6`, `Score_Union_CTE_esu_9`.`Score_7`, `Score_Union_CTE_esu_9`.`Score_8`, `Score_Union_CTE_esu_9`.`Score_9` 
FROM (SELECT `XGB_Tree_2_7`.`KEY` AS `KEY`, `XGB_Tree_2_7`.`Score_0` AS `Score_0`, `XGB_Tree_2_7`.`Score_1` AS `Score_1`, `XGB_Tree_2_7`.`Score_2` AS `Score_2`, `XGB_Tree_2_7`.`Score_3` AS `Score_3`, `XGB_Tree_2_7`.`Score_4` AS `Score_4`, `XGB_Tree_2_7`.`Score_5` AS `Score_5`, `XGB_Tree_2_7`.`Score_6` AS `Score_6`, `XGB_Tree_2_7`.`Score_7` AS `Score_7`, `XGB_Tree_2_7`.`Score_8` AS `Score_8`, `XGB_Tree_2_7`.`Score_9` AS `Score_9` 
FROM `XGB_Tree_2_7` UNION ALL SELECT `XGB_Tree_3_7`.`KEY` AS `KEY`, `XGB_Tree_3_7`.`Score_0` AS `Score_0`, `XGB_Tree_3_7`.`Score_1` AS `Score_1`, `XGB_Tree_3_7`.`Score_2` AS `Score_2`, `XGB_Tree_3_7`.`Score_3` AS `Score_3`, `XGB_Tree_3_7`.`Score_4` AS `Score_4`, `XGB_Tree_3_7`.`Score_5` AS `Score_5`, `XGB_Tree_3_7`.`Score_6` AS `Score_6`, `XGB_Tree_3_7`.`Score_7` AS `Score_7`, `XGB_Tree_3_7`.`Score_8` AS `Score_8`, `XGB_Tree_3_7`.`Score_9` AS `Score_9` 
FROM `XGB_Tree_3_7` UNION ALL SELECT `XGB_Tree_4_7`.`KEY` AS `KEY`, `XGB_Tree_4_7`.`Score_0` AS `Score_0`, `XGB_Tree_4_7`.`Score_1` AS `Score_1`, `XGB_Tree_4_7`.`Score_2` AS `Score_2`, `XGB_Tree_4_7`.`Score_3` AS `Score_3`, `XGB_Tree_4_7`.`Score_4` AS `Score_4`, `XGB_Tree_4_7`.`Score_5` AS `Score_5`, `XGB_Tree_4_7`.`Score_6` AS `Score_6`, `XGB_Tree_4_7`.`Score_7` AS `Score_7`, `XGB_Tree_4_7`.`Score_8` AS `Score_8`, `XGB_Tree_4_7`.`Score_9` AS `Score_9` 
FROM `XGB_Tree_4_7` UNION ALL SELECT `XGB_Tree_5_7`.`KEY` AS `KEY`, `XGB_Tree_5_7`.`Score_0` AS `Score_0`, `XGB_Tree_5_7`.`Score_1` AS `Score_1`, `XGB_Tree_5_7`.`Score_2` AS `Score_2`, `XGB_Tree_5_7`.`Score_3` AS `Score_3`, `XGB_Tree_5_7`.`Score_4` AS `Score_4`, `XGB_Tree_5_7`.`Score_5` AS `Score_5`, `XGB_Tree_5_7`.`Score_6` AS `Score_6`, `XGB_Tree_5_7`.`Score_7` AS `Score_7`, `XGB_Tree_5_7`.`Score_8` AS `Score_8`, `XGB_Tree_5_7`.`Score_9` AS `Score_9` 
FROM `XGB_Tree_5_7` UNION ALL SELECT `XGB_Tree_6_7`.`KEY` AS `KEY`, `XGB_Tree_6_7`.`Score_0` AS `Score_0`, `XGB_Tree_6_7`.`Score_1` AS `Score_1`, `XGB_Tree_6_7`.`Score_2` AS `Score_2`, `XGB_Tree_6_7`.`Score_3` AS `Score_3`, `XGB_Tree_6_7`.`Score_4` AS `Score_4`, `XGB_Tree_6_7`.`Score_5` AS `Score_5`, `XGB_Tree_6_7`.`Score_6` AS `Score_6`, `XGB_Tree_6_7`.`Score_7` AS `Score_7`, `XGB_Tree_6_7`.`Score_8` AS `Score_8`, `XGB_Tree_6_7`.`Score_9` AS `Score_9` 
FROM `XGB_Tree_6_7` UNION ALL SELECT `XGB_Tree_7_7`.`KEY` AS `KEY`, `XGB_Tree_7_7`.`Score_0` AS `Score_0`, `XGB_Tree_7_7`.`Score_1` AS `Score_1`, `XGB_Tree_7_7`.`Score_2` AS `Score_2`, `XGB_Tree_7_7`.`Score_3` AS `Score_3`, `XGB_Tree_7_7`.`Score_4` AS `Score_4`, `XGB_Tree_7_7`.`Score_5` AS `Score_5`, `XGB_Tree_7_7`.`Score_6` AS `Score_6`, `XGB_Tree_7_7`.`Score_7` AS `Score_7`, `XGB_Tree_7_7`.`Score_8` AS `Score_8`, `XGB_Tree_7_7`.`Score_9` AS `Score_9` 
FROM `XGB_Tree_7_7` UNION ALL SELECT `XGB_Tree_8_7`.`KEY` AS `KEY`, `XGB_Tree_8_7`.`Score_0` AS `Score_0`, `XGB_Tree_8_7`.`Score_1` AS `Score_1`, `XGB_Tree_8_7`.`Score_2` AS `Score_2`, `XGB_Tree_8_7`.`Score_3` AS `Score_3`, `XGB_Tree_8_7`.`Score_4` AS `Score_4`, `XGB_Tree_8_7`.`Score_5` AS `Score_5`, `XGB_Tree_8_7`.`Score_6` AS `Score_6`, `XGB_Tree_8_7`.`Score_7` AS `Score_7`, `XGB_Tree_8_7`.`Score_8` AS `Score_8`, `XGB_Tree_8_7`.`Score_9` AS `Score_9` 
FROM `XGB_Tree_8_7` UNION ALL SELECT `XGB_Tree_9_7`.`KEY` AS `KEY`, `XGB_Tree_9_7`.`Score_0` AS `Score_0`, `XGB_Tree_9_7`.`Score_1` AS `Score_1`, `XGB_Tree_9_7`.`Score_2` AS `Score_2`, `XGB_Tree_9_7`.`Score_3` AS `Score_3`, `XGB_Tree_9_7`.`Score_4` AS `Score_4`, `XGB_Tree_9_7`.`Score_5` AS `Score_5`, `XGB_Tree_9_7`.`Score_6` AS `Score_6`, `XGB_Tree_9_7`.`Score_7` AS `Score_7`, `XGB_Tree_9_7`.`Score_8` AS `Score_8`, `XGB_Tree_9_7`.`Score_9` AS `Score_9` 
FROM `XGB_Tree_9_7`) AS `Score_Union_CTE_esu_9`), 
`Score_Union_CTE_10` AS 
(WITH `DT_node_lookup_80` AS 
(SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_36` < 0.5) THEN CASE WHEN (`ADS`.`Feature_28` < 2.5) THEN CASE WHEN (`ADS`.`Feature_13` < 6.5) THEN 7 ELSE 8 END ELSE 4 END ELSE CASE WHEN (`ADS`.`Feature_36` < 3.5) THEN 5 ELSE 6 END END AS node_id_2 
FROM digits AS `ADS`), 
`DT_node_data_80` AS 
(SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, 1 AS parent_id, -0.036175306886434555 AS `Score` UNION ALL SELECT 5 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, 2 AS parent_id, -0.01821603626012802 AS `Score` UNION ALL SELECT 6 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, 2 AS parent_id, -0.05292722210288048 AS `Score` UNION ALL SELECT 7 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 3 AS parent_id, 0.039920076727867126 AS `Score` UNION ALL SELECT 8 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 3 AS parent_id, 0.10854512453079224 AS `Score`) AS `Values`), 
`DT_Output_80` AS 
(SELECT `DT_node_lookup_80`.`KEY` AS `KEY`, `DT_node_lookup_80`.node_id_2 AS node_id_2, `DT_node_data_80`.node_id AS node_id, `DT_node_data_80`.feature AS feature, `DT_node_data_80`.threshold AS threshold, `DT_node_data_80`.depth AS depth, `DT_node_data_80`.parent_id AS parent_id, `DT_node_data_80`.`Score` AS `Score` 
FROM `DT_node_lookup_80` LEFT OUTER JOIN `DT_node_data_80` ON `DT_node_lookup_80`.node_id_2 = `DT_node_data_80`.node_id), 
`XGB_Tree_0_8` AS 
(SELECT `DT_Output_80`.`KEY` AS `KEY`, `DT_Output_80`.`Score` AS `Score_0`, 0.0 AS `Score_1`, 0.0 AS `Score_2`, 0.0 AS `Score_3`, 0.0 AS `Score_4`, 0.0 AS `Score_5`, 0.0 AS `Score_6`, 0.0 AS `Score_7`, 0.0 AS `Score_8`, 0.0 AS `Score_9` 
FROM `DT_Output_80`), 
`DT_node_lookup_81` AS 
(SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_19` < 11.5) THEN CASE WHEN (`ADS`.`Feature_10` < 4.5) THEN 3 ELSE 4 END ELSE CASE WHEN (`ADS`.`Feature_12` < 14.5) THEN CASE WHEN (`ADS`.`Feature_63` < 0.5) THEN 7 ELSE 8 END ELSE CASE WHEN (`ADS`.`Feature_38` < 0.5) THEN 9 ELSE 10 END END END AS node_id_2 
FROM digits AS `ADS`), 
`DT_node_data_81` AS 
(SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, 1 AS parent_id, 0.00979448389261961 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, 1 AS parent_id, -0.05292236804962158 AS `Score` UNION ALL SELECT 7 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 5 AS parent_id, -0.04667988792061806 AS `Score` UNION ALL SELECT 8 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 5 AS parent_id, 0.13579986989498138 AS `Score` UNION ALL SELECT 9 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 6 AS parent_id, 0.11330021917819977 AS `Score` UNION ALL SELECT 10 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 6 AS parent_id, 0.012097137048840523 AS `Score`) AS `Values`), 
`DT_Output_81` AS 
(SELECT `DT_node_lookup_81`.`KEY` AS `KEY`, `DT_node_lookup_81`.node_id_2 AS node_id_2, `DT_node_data_81`.node_id AS node_id, `DT_node_data_81`.feature AS feature, `DT_node_data_81`.threshold AS threshold, `DT_node_data_81`.depth AS depth, `DT_node_data_81`.parent_id AS parent_id, `DT_node_data_81`.`Score` AS `Score` 
FROM `DT_node_lookup_81` LEFT OUTER JOIN `DT_node_data_81` ON `DT_node_lookup_81`.node_id_2 = `DT_node_data_81`.node_id), 
`XGB_Tree_1_8` AS 
(SELECT `DT_Output_81`.`KEY` AS `KEY`, 0.0 AS `Score_0`, `DT_Output_81`.`Score` AS `Score_1`, 0.0 AS `Score_2`, 0.0 AS `Score_3`, 0.0 AS `Score_4`, 0.0 AS `Score_5`, 0.0 AS `Score_6`, 0.0 AS `Score_7`, 0.0 AS `Score_8`, 0.0 AS `Score_9` 
FROM `DT_Output_81`), 
`DT_node_lookup_82` AS 
(SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_26` < 6.5) THEN CASE WHEN (`ADS`.`Feature_38` < 0.5) THEN CASE WHEN (`ADS`.`Feature_51` < 8.5) THEN 7 ELSE 8 END ELSE CASE WHEN (`ADS`.`Feature_27` < 4.5) THEN 9 ELSE 10 END END ELSE CASE WHEN (`ADS`.`Feature_62` < 10.5) THEN CASE WHEN (`ADS`.`Feature_62` < 3.5) THEN 11 ELSE 12 END ELSE 6 END END AS node_id_2 
FROM digits AS `ADS`), 
`DT_node_data_82` AS 
(SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 6 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, 2 AS parent_id, 0.02242175303399563 AS `Score` UNION ALL SELECT 7 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 3 AS parent_id, -0.024093972519040108 AS `Score` UNION ALL SELECT 8 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 3 AS parent_id, 0.09958355128765106 AS `Score` UNION ALL SELECT 9 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 4 AS parent_id, -0.014236784540116787 AS `Score` UNION ALL SELECT 10 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 4 AS parent_id, -0.050969481468200684 AS `Score` UNION ALL SELECT 11 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 5 AS parent_id, -0.05313631892204285 AS `Score` UNION ALL SELECT 12 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 5 AS parent_id, -0.03271622955799103 AS `Score`) AS `Values`), 
`DT_Output_82` AS 
(SELECT `DT_node_lookup_82`.`KEY` AS `KEY`, `DT_node_lookup_82`.node_id_2 AS node_id_2, `DT_node_data_82`.node_id AS node_id, `DT_node_data_82`.feature AS feature, `DT_node_data_82`.threshold AS threshold, `DT_node_data_82`.depth AS depth, `DT_node_data_82`.parent_id AS parent_id, `DT_node_data_82`.`Score` AS `Score` 
FROM `DT_node_lookup_82` LEFT OUTER JOIN `DT_node_data_82` ON `DT_node_lookup_82`.node_id_2 = `DT_node_data_82`.node_id), 
`XGB_Tree_2_8` AS 
(SELECT `DT_Output_82`.`KEY` AS `KEY`, 0.0 AS `Score_0`, 0.0 AS `Score_1`, `DT_Output_82`.`Score` AS `Score_2`, 0.0 AS `Score_3`, 0.0 AS `Score_4`, 0.0 AS `Score_5`, 0.0 AS `Score_6`, 0.0 AS `Score_7`, 0.0 AS `Score_8`, 0.0 AS `Score_9` 
FROM `DT_Output_82`), 
`DT_node_lookup_83` AS 
(SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_26` < 5.5) THEN CASE WHEN (`ADS`.`Feature_43` < 2.5) THEN CASE WHEN (`ADS`.`Feature_19` < 8.5) THEN 7 ELSE 8 END ELSE CASE WHEN (`ADS`.`Feature_51` < 8.5) THEN 9 ELSE 10 END END ELSE CASE WHEN (`ADS`.`Feature_54` < 5.5) THEN 5 ELSE CASE WHEN (`ADS`.`Feature_20` < 7.5) THEN 11 ELSE 12 END END END AS node_id_2 
FROM digits AS `ADS`), 
`DT_node_data_83` AS 
(SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 5 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, 2 AS parent_id, -0.05163044482469559 AS `Score` UNION ALL SELECT 7 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 3 AS parent_id, 0.1036817654967308 AS `Score` UNION ALL SELECT 8 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 3 AS parent_id, 0.0009772487683221698 AS `Score` UNION ALL SELECT 9 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 4 AS parent_id, 0.025667348876595497 AS `Score` UNION ALL SELECT 10 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 4 AS parent_id, -0.04348346218466759 AS `Score` UNION ALL SELECT 11 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 6 AS parent_id, -0.04678232595324516 AS `Score` UNION ALL SELECT 12 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 6 AS parent_id, 0.025139985606074333 AS `Score`) AS `Values`), 
`DT_Output_83` AS 
(SELECT `DT_node_lookup_83`.`KEY` AS `KEY`, `DT_node_lookup_83`.node_id_2 AS node_id_2, `DT_node_data_83`.node_id AS node_id, `DT_node_data_83`.feature AS feature, `DT_node_data_83`.threshold AS threshold, `DT_node_data_83`.depth AS depth, `DT_node_data_83`.parent_id AS parent_id, `DT_node_data_83`.`Score` AS `Score` 
FROM `DT_node_lookup_83` LEFT OUTER JOIN `DT_node_data_83` ON `DT_node_lookup_83`.node_id_2 = `DT_node_data_83`.node_id), 
`XGB_Tree_3_8` AS 
(SELECT `DT_Output_83`.`KEY` AS `KEY`, 0.0 AS `Score_0`, 0.0 AS `Score_1`, 0.0 AS `Score_2`, `DT_Output_83`.`Score` AS `Score_3`, 0.0 AS `Score_4`, 0.0 AS `Score_5`, 0.0 AS `Score_6`, 0.0 AS `Score_7`, 0.0 AS `Score_8`, 0.0 AS `Score_9` 
FROM `DT_Output_83`), 
`DT_node_lookup_84` AS 
(SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_2` < 0.5) THEN CASE WHEN (`ADS`.`Feature_61` < 10.5) THEN CASE WHEN (`ADS`.`Feature_13` < 7.5) THEN 7 ELSE 8 END ELSE CASE WHEN (`ADS`.`Feature_37` < 12.5) THEN 9 ELSE 10 END END ELSE CASE WHEN (`ADS`.`Feature_12` < 3.5) THEN 5 ELSE CASE WHEN (`ADS`.`Feature_34` < 15.5) THEN 11 ELSE 12 END END END AS node_id_2 
FROM digits AS `ADS`), 
`DT_node_data_84` AS 
(SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 5 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, 2 AS parent_id, 0.02916315197944641 AS `Score` UNION ALL SELECT 7 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 3 AS parent_id, 0.12166919559240341 AS `Score` UNION ALL SELECT 8 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 3 AS parent_id, 0.005962145980447531 AS `Score` UNION ALL SELECT 9 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 4 AS parent_id, -0.050889432430267334 AS `Score` UNION ALL SELECT 10 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 4 AS parent_id, -0.026520980522036552 AS `Score` UNION ALL SELECT 11 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 6 AS parent_id, -0.05332924798130989 AS `Score` UNION ALL SELECT 12 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 6 AS parent_id, -0.020313777029514313 AS `Score`) AS `Values`), 
`DT_Output_84` AS 
(SELECT `DT_node_lookup_84`.`KEY` AS `KEY`, `DT_node_lookup_84`.node_id_2 AS node_id_2, `DT_node_data_84`.node_id AS node_id, `DT_node_data_84`.feature AS feature, `DT_node_data_84`.threshold AS threshold, `DT_node_data_84`.depth AS depth, `DT_node_data_84`.parent_id AS parent_id, `DT_node_data_84`.`Score` AS `Score` 
FROM `DT_node_lookup_84` LEFT OUTER JOIN `DT_node_data_84` ON `DT_node_lookup_84`.node_id_2 = `DT_node_data_84`.node_id), 
`XGB_Tree_4_8` AS 
(SELECT `DT_Output_84`.`KEY` AS `KEY`, 0.0 AS `Score_0`, 0.0 AS `Score_1`, 0.0 AS `Score_2`, 0.0 AS `Score_3`, `DT_Output_84`.`Score` AS `Score_4`, 0.0 AS `Score_5`, 0.0 AS `Score_6`, 0.0 AS `Score_7`, 0.0 AS `Score_8`, 0.0 AS `Score_9` 
FROM `DT_Output_84`), 
`DT_node_lookup_85` AS 
(SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_21` < 1.5) THEN CASE WHEN (`ADS`.`Feature_5` < 2.5) THEN CASE WHEN (`ADS`.`Feature_35` < 10.5) THEN 7 ELSE 8 END ELSE CASE WHEN (`ADS`.`Feature_2` < 2.5) THEN 9 ELSE 10 END END ELSE CASE WHEN (`ADS`.`Feature_21` < 3.5) THEN 5 ELSE CASE WHEN (`ADS`.`Feature_2` < 7.5) THEN 11 ELSE 12 END END END AS node_id_2 
FROM digits AS `ADS`), 
`DT_node_data_85` AS 
(SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 5 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, 2 AS parent_id, -0.006330996286123991 AS `Score` UNION ALL SELECT 7 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 3 AS parent_id, -0.022036774083971977 AS `Score` UNION ALL SELECT 8 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 3 AS parent_id, -0.05114221200346947 AS `Score` UNION ALL SELECT 9 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 4 AS parent_id, -0.004208183381706476 AS `Score` UNION ALL SELECT 10 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 4 AS parent_id, 0.10858211666345596 AS `Score` UNION ALL SELECT 11 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 6 AS parent_id, -0.05298755317926407 AS `Score` UNION ALL SELECT 12 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 6 AS parent_id, -0.03536299243569374 AS `Score`) AS `Values`), 
`DT_Output_85` AS 
(SELECT `DT_node_lookup_85`.`KEY` AS `KEY`, `DT_node_lookup_85`.node_id_2 AS node_id_2, `DT_node_data_85`.node_id AS node_id, `DT_node_data_85`.feature AS feature, `DT_node_data_85`.threshold AS threshold, `DT_node_data_85`.depth AS depth, `DT_node_data_85`.parent_id AS parent_id, `DT_node_data_85`.`Score` AS `Score` 
FROM `DT_node_lookup_85` LEFT OUTER JOIN `DT_node_data_85` ON `DT_node_lookup_85`.node_id_2 = `DT_node_data_85`.node_id), 
`XGB_Tree_5_8` AS 
(SELECT `DT_Output_85`.`KEY` AS `KEY`, 0.0 AS `Score_0`, 0.0 AS `Score_1`, 0.0 AS `Score_2`, 0.0 AS `Score_3`, 0.0 AS `Score_4`, `DT_Output_85`.`Score` AS `Score_5`, 0.0 AS `Score_6`, 0.0 AS `Score_7`, 0.0 AS `Score_8`, 0.0 AS `Score_9` 
FROM `DT_Output_85`), 
`DT_node_lookup_86` AS 
(SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_21` < 0.5) THEN CASE WHEN (`ADS`.`Feature_42` < 7.5) THEN 3 ELSE CASE WHEN (`ADS`.`Feature_20` < 3.5) THEN 7 ELSE 8 END END ELSE CASE WHEN (`ADS`.`Feature_34` < 15.5) THEN 5 ELSE 6 END END AS node_id_2 
FROM digits AS `ADS`), 
`DT_node_data_86` AS 
(SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, 1 AS parent_id, -0.04726989567279816 AS `Score` UNION ALL SELECT 5 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, 2 AS parent_id, -0.052013080567121506 AS `Score` UNION ALL SELECT 6 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, 2 AS parent_id, -0.034927334636449814 AS `Score` UNION ALL SELECT 7 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 4 AS parent_id, 0.1036805734038353 AS `Score` UNION ALL SELECT 8 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 4 AS parent_id, 0.002213156083598733 AS `Score`) AS `Values`), 
`DT_Output_86` AS 
(SELECT `DT_node_lookup_86`.`KEY` AS `KEY`, `DT_node_lookup_86`.node_id_2 AS node_id_2, `DT_node_data_86`.node_id AS node_id, `DT_node_data_86`.feature AS feature, `DT_node_data_86`.threshold AS threshold, `DT_node_data_86`.depth AS depth, `DT_node_data_86`.parent_id AS parent_id, `DT_node_data_86`.`Score` AS `Score` 
FROM `DT_node_lookup_86` LEFT OUTER JOIN `DT_node_data_86` ON `DT_node_lookup_86`.node_id_2 = `DT_node_data_86`.node_id), 
`XGB_Tree_6_8` AS 
(SELECT `DT_Output_86`.`KEY` AS `KEY`, 0.0 AS `Score_0`, 0.0 AS `Score_1`, 0.0 AS `Score_2`, 0.0 AS `Score_3`, 0.0 AS `Score_4`, 0.0 AS `Score_5`, `DT_Output_86`.`Score` AS `Score_6`, 0.0 AS `Score_7`, 0.0 AS `Score_8`, 0.0 AS `Score_9` 
FROM `DT_Output_86`), 
`DT_node_lookup_87` AS 
(SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_60` < 7.5) THEN CASE WHEN (`ADS`.`Feature_25` < 3.5) THEN CASE WHEN (`ADS`.`Feature_30` < 1.5) THEN 7 ELSE 8 END ELSE 4 END ELSE CASE WHEN (`ADS`.`Feature_5` < 12.5) THEN 5 ELSE CASE WHEN (`ADS`.`Feature_28` < 12.5) THEN 9 ELSE 10 END END END AS node_id_2 
FROM digits AS `ADS`), 
`DT_node_data_87` AS 
(SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, 1 AS parent_id, -0.008382712490856647 AS `Score` UNION ALL SELECT 5 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, 2 AS parent_id, -0.052317626774311066 AS `Score` UNION ALL SELECT 7 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 3 AS parent_id, 0.0529508963227272 AS `Score` UNION ALL SELECT 8 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 3 AS parent_id, 0.11878364533185959 AS `Score` UNION ALL SELECT 9 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 6 AS parent_id, 0.03918511047959328 AS `Score` UNION ALL SELECT 10 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 6 AS parent_id, -0.04934358224272728 AS `Score`) AS `Values`), 
`DT_Output_87` AS 
(SELECT `DT_node_lookup_87`.`KEY` AS `KEY`, `DT_node_lookup_87`.node_id_2 AS node_id_2, `DT_node_data_87`.node_id AS node_id, `DT_node_data_87`.feature AS feature, `DT_node_data_87`.threshold AS threshold, `DT_node_data_87`.depth AS depth, `DT_node_data_87`.parent_id AS parent_id, `DT_node_data_87`.`Score` AS `Score` 
FROM `DT_node_lookup_87` LEFT OUTER JOIN `DT_node_data_87` ON `DT_node_lookup_87`.node_id_2 = `DT_node_data_87`.node_id), 
`XGB_Tree_7_8` AS 
(SELECT `DT_Output_87`.`KEY` AS `KEY`, 0.0 AS `Score_0`, 0.0 AS `Score_1`, 0.0 AS `Score_2`, 0.0 AS `Score_3`, 0.0 AS `Score_4`, 0.0 AS `Score_5`, 0.0 AS `Score_6`, `DT_Output_87`.`Score` AS `Score_7`, 0.0 AS `Score_8`, 0.0 AS `Score_9` 
FROM `DT_Output_87`)
 SELECT `Score_Union_CTE_esu_10`.`KEY`, `Score_Union_CTE_esu_10`.`Score_0`, `Score_Union_CTE_esu_10`.`Score_1`, `Score_Union_CTE_esu_10`.`Score_2`, `Score_Union_CTE_esu_10`.`Score_3`, `Score_Union_CTE_esu_10`.`Score_4`, `Score_Union_CTE_esu_10`.`Score_5`, `Score_Union_CTE_esu_10`.`Score_6`, `Score_Union_CTE_esu_10`.`Score_7`, `Score_Union_CTE_esu_10`.`Score_8`, `Score_Union_CTE_esu_10`.`Score_9` 
FROM (SELECT `XGB_Tree_0_8`.`KEY` AS `KEY`, `XGB_Tree_0_8`.`Score_0` AS `Score_0`, `XGB_Tree_0_8`.`Score_1` AS `Score_1`, `XGB_Tree_0_8`.`Score_2` AS `Score_2`, `XGB_Tree_0_8`.`Score_3` AS `Score_3`, `XGB_Tree_0_8`.`Score_4` AS `Score_4`, `XGB_Tree_0_8`.`Score_5` AS `Score_5`, `XGB_Tree_0_8`.`Score_6` AS `Score_6`, `XGB_Tree_0_8`.`Score_7` AS `Score_7`, `XGB_Tree_0_8`.`Score_8` AS `Score_8`, `XGB_Tree_0_8`.`Score_9` AS `Score_9` 
FROM `XGB_Tree_0_8` UNION ALL SELECT `XGB_Tree_1_8`.`KEY` AS `KEY`, `XGB_Tree_1_8`.`Score_0` AS `Score_0`, `XGB_Tree_1_8`.`Score_1` AS `Score_1`, `XGB_Tree_1_8`.`Score_2` AS `Score_2`, `XGB_Tree_1_8`.`Score_3` AS `Score_3`, `XGB_Tree_1_8`.`Score_4` AS `Score_4`, `XGB_Tree_1_8`.`Score_5` AS `Score_5`, `XGB_Tree_1_8`.`Score_6` AS `Score_6`, `XGB_Tree_1_8`.`Score_7` AS `Score_7`, `XGB_Tree_1_8`.`Score_8` AS `Score_8`, `XGB_Tree_1_8`.`Score_9` AS `Score_9` 
FROM `XGB_Tree_1_8` UNION ALL SELECT `XGB_Tree_2_8`.`KEY` AS `KEY`, `XGB_Tree_2_8`.`Score_0` AS `Score_0`, `XGB_Tree_2_8`.`Score_1` AS `Score_1`, `XGB_Tree_2_8`.`Score_2` AS `Score_2`, `XGB_Tree_2_8`.`Score_3` AS `Score_3`, `XGB_Tree_2_8`.`Score_4` AS `Score_4`, `XGB_Tree_2_8`.`Score_5` AS `Score_5`, `XGB_Tree_2_8`.`Score_6` AS `Score_6`, `XGB_Tree_2_8`.`Score_7` AS `Score_7`, `XGB_Tree_2_8`.`Score_8` AS `Score_8`, `XGB_Tree_2_8`.`Score_9` AS `Score_9` 
FROM `XGB_Tree_2_8` UNION ALL SELECT `XGB_Tree_3_8`.`KEY` AS `KEY`, `XGB_Tree_3_8`.`Score_0` AS `Score_0`, `XGB_Tree_3_8`.`Score_1` AS `Score_1`, `XGB_Tree_3_8`.`Score_2` AS `Score_2`, `XGB_Tree_3_8`.`Score_3` AS `Score_3`, `XGB_Tree_3_8`.`Score_4` AS `Score_4`, `XGB_Tree_3_8`.`Score_5` AS `Score_5`, `XGB_Tree_3_8`.`Score_6` AS `Score_6`, `XGB_Tree_3_8`.`Score_7` AS `Score_7`, `XGB_Tree_3_8`.`Score_8` AS `Score_8`, `XGB_Tree_3_8`.`Score_9` AS `Score_9` 
FROM `XGB_Tree_3_8` UNION ALL SELECT `XGB_Tree_4_8`.`KEY` AS `KEY`, `XGB_Tree_4_8`.`Score_0` AS `Score_0`, `XGB_Tree_4_8`.`Score_1` AS `Score_1`, `XGB_Tree_4_8`.`Score_2` AS `Score_2`, `XGB_Tree_4_8`.`Score_3` AS `Score_3`, `XGB_Tree_4_8`.`Score_4` AS `Score_4`, `XGB_Tree_4_8`.`Score_5` AS `Score_5`, `XGB_Tree_4_8`.`Score_6` AS `Score_6`, `XGB_Tree_4_8`.`Score_7` AS `Score_7`, `XGB_Tree_4_8`.`Score_8` AS `Score_8`, `XGB_Tree_4_8`.`Score_9` AS `Score_9` 
FROM `XGB_Tree_4_8` UNION ALL SELECT `XGB_Tree_5_8`.`KEY` AS `KEY`, `XGB_Tree_5_8`.`Score_0` AS `Score_0`, `XGB_Tree_5_8`.`Score_1` AS `Score_1`, `XGB_Tree_5_8`.`Score_2` AS `Score_2`, `XGB_Tree_5_8`.`Score_3` AS `Score_3`, `XGB_Tree_5_8`.`Score_4` AS `Score_4`, `XGB_Tree_5_8`.`Score_5` AS `Score_5`, `XGB_Tree_5_8`.`Score_6` AS `Score_6`, `XGB_Tree_5_8`.`Score_7` AS `Score_7`, `XGB_Tree_5_8`.`Score_8` AS `Score_8`, `XGB_Tree_5_8`.`Score_9` AS `Score_9` 
FROM `XGB_Tree_5_8` UNION ALL SELECT `XGB_Tree_6_8`.`KEY` AS `KEY`, `XGB_Tree_6_8`.`Score_0` AS `Score_0`, `XGB_Tree_6_8`.`Score_1` AS `Score_1`, `XGB_Tree_6_8`.`Score_2` AS `Score_2`, `XGB_Tree_6_8`.`Score_3` AS `Score_3`, `XGB_Tree_6_8`.`Score_4` AS `Score_4`, `XGB_Tree_6_8`.`Score_5` AS `Score_5`, `XGB_Tree_6_8`.`Score_6` AS `Score_6`, `XGB_Tree_6_8`.`Score_7` AS `Score_7`, `XGB_Tree_6_8`.`Score_8` AS `Score_8`, `XGB_Tree_6_8`.`Score_9` AS `Score_9` 
FROM `XGB_Tree_6_8` UNION ALL SELECT `XGB_Tree_7_8`.`KEY` AS `KEY`, `XGB_Tree_7_8`.`Score_0` AS `Score_0`, `XGB_Tree_7_8`.`Score_1` AS `Score_1`, `XGB_Tree_7_8`.`Score_2` AS `Score_2`, `XGB_Tree_7_8`.`Score_3` AS `Score_3`, `XGB_Tree_7_8`.`Score_4` AS `Score_4`, `XGB_Tree_7_8`.`Score_5` AS `Score_5`, `XGB_Tree_7_8`.`Score_6` AS `Score_6`, `XGB_Tree_7_8`.`Score_7` AS `Score_7`, `XGB_Tree_7_8`.`Score_8` AS `Score_8`, `XGB_Tree_7_8`.`Score_9` AS `Score_9` 
FROM `XGB_Tree_7_8`) AS `Score_Union_CTE_esu_10`), 
`Score_Union_CTE_11` AS 
(WITH `DT_node_lookup_88` AS 
(SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_38` < 1.5) THEN CASE WHEN (`ADS`.`Feature_22` < 0.5) THEN CASE WHEN (`ADS`.`Feature_13` < 9.5) THEN 7 ELSE 8 END ELSE CASE WHEN (`ADS`.`Feature_27` < 5.5) THEN 9 ELSE 10 END END ELSE CASE WHEN (`ADS`.`Feature_27` < 15.5) THEN 5 ELSE 6 END END AS node_id_2 
FROM digits AS `ADS`), 
`DT_node_data_88` AS 
(SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 5 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, 2 AS parent_id, -0.051208656281232834 AS `Score` UNION ALL SELECT 6 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, 2 AS parent_id, -0.02448047138750553 AS `Score` UNION ALL SELECT 7 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 3 AS parent_id, -0.04145907983183861 AS `Score` UNION ALL SELECT 8 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 3 AS parent_id, 0.02833356335759163 AS `Score` UNION ALL SELECT 9 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 4 AS parent_id, -0.050577808171510696 AS `Score` UNION ALL SELECT 10 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 4 AS parent_id, 0.10150796175003052 AS `Score`) AS `Values`), 
`DT_Output_88` AS 
(SELECT `DT_node_lookup_88`.`KEY` AS `KEY`, `DT_node_lookup_88`.node_id_2 AS node_id_2, `DT_node_data_88`.node_id AS node_id, `DT_node_data_88`.feature AS feature, `DT_node_data_88`.threshold AS threshold, `DT_node_data_88`.depth AS depth, `DT_node_data_88`.parent_id AS parent_id, `DT_node_data_88`.`Score` AS `Score` 
FROM `DT_node_lookup_88` LEFT OUTER JOIN `DT_node_data_88` ON `DT_node_lookup_88`.node_id_2 = `DT_node_data_88`.node_id), 
`XGB_Tree_8_8` AS 
(SELECT `DT_Output_88`.`KEY` AS `KEY`, 0.0 AS `Score_0`, 0.0 AS `Score_1`, 0.0 AS `Score_2`, 0.0 AS `Score_3`, 0.0 AS `Score_4`, 0.0 AS `Score_5`, 0.0 AS `Score_6`, 0.0 AS `Score_7`, `DT_Output_88`.`Score` AS `Score_8`, 0.0 AS `Score_9` 
FROM `DT_Output_88`), 
`DT_node_lookup_89` AS 
(SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_43` < 3.5) THEN CASE WHEN (`ADS`.`Feature_21` < 10.5) THEN CASE WHEN (`ADS`.`Feature_4` < 10.5) THEN 7 ELSE 8 END ELSE CASE WHEN (`ADS`.`Feature_42` < 10.5) THEN 9 ELSE 10 END END ELSE CASE WHEN (`ADS`.`Feature_60` < 1.5) THEN 5 ELSE CASE WHEN (`ADS`.`Feature_35` < 4.5) THEN 11 ELSE 12 END END END AS node_id_2 
FROM digits AS `ADS`), 
`DT_node_data_89` AS 
(SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 5 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, 2 AS parent_id, -0.017276590690016747 AS `Score` UNION ALL SELECT 7 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 3 AS parent_id, 0.009943329729139805 AS `Score` UNION ALL SELECT 8 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 3 AS parent_id, -0.04790820926427841 AS `Score` UNION ALL SELECT 9 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 4 AS parent_id, 0.09300456196069717 AS `Score` UNION ALL SELECT 10 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 4 AS parent_id, -0.0509030818939209 AS `Score` UNION ALL SELECT 11 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 6 AS parent_id, -0.03456619009375572 AS `Score` UNION ALL SELECT 12 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 6 AS parent_id, -0.05287975072860718 AS `Score`) AS `Values`), 
`DT_Output_89` AS 
(SELECT `DT_node_lookup_89`.`KEY` AS `KEY`, `DT_node_lookup_89`.node_id_2 AS node_id_2, `DT_node_data_89`.node_id AS node_id, `DT_node_data_89`.feature AS feature, `DT_node_data_89`.threshold AS threshold, `DT_node_data_89`.depth AS depth, `DT_node_data_89`.parent_id AS parent_id, `DT_node_data_89`.`Score` AS `Score` 
FROM `DT_node_lookup_89` LEFT OUTER JOIN `DT_node_data_89` ON `DT_node_lookup_89`.node_id_2 = `DT_node_data_89`.node_id), 
`XGB_Tree_9_8` AS 
(SELECT `DT_Output_89`.`KEY` AS `KEY`, 0.0 AS `Score_0`, 0.0 AS `Score_1`, 0.0 AS `Score_2`, 0.0 AS `Score_3`, 0.0 AS `Score_4`, 0.0 AS `Score_5`, 0.0 AS `Score_6`, 0.0 AS `Score_7`, 0.0 AS `Score_8`, `DT_Output_89`.`Score` AS `Score_9` 
FROM `DT_Output_89`), 
`DT_node_lookup_90` AS 
(SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_36` < 0.5) THEN CASE WHEN (`ADS`.`Feature_28` < 2.5) THEN CASE WHEN (`ADS`.`Feature_43` < 4.5) THEN 7 ELSE 8 END ELSE 4 END ELSE CASE WHEN (`ADS`.`Feature_28` < 0.5) THEN 5 ELSE 6 END END AS node_id_2 
FROM digits AS `ADS`), 
`DT_node_data_90` AS 
(SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, 1 AS parent_id, -0.03541151434183121 AS `Score` UNION ALL SELECT 5 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, 2 AS parent_id, -0.017219481989741325 AS `Score` UNION ALL SELECT 6 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, 2 AS parent_id, -0.05281325802206993 AS `Score` UNION ALL SELECT 7 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 3 AS parent_id, 0.10014750808477402 AS `Score` UNION ALL SELECT 8 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 3 AS parent_id, 0.03421618044376373 AS `Score`) AS `Values`), 
`DT_Output_90` AS 
(SELECT `DT_node_lookup_90`.`KEY` AS `KEY`, `DT_node_lookup_90`.node_id_2 AS node_id_2, `DT_node_data_90`.node_id AS node_id, `DT_node_data_90`.feature AS feature, `DT_node_data_90`.threshold AS threshold, `DT_node_data_90`.depth AS depth, `DT_node_data_90`.parent_id AS parent_id, `DT_node_data_90`.`Score` AS `Score` 
FROM `DT_node_lookup_90` LEFT OUTER JOIN `DT_node_data_90` ON `DT_node_lookup_90`.node_id_2 = `DT_node_data_90`.node_id), 
`XGB_Tree_0_9` AS 
(SELECT `DT_Output_90`.`KEY` AS `KEY`, `DT_Output_90`.`Score` AS `Score_0`, 0.0 AS `Score_1`, 0.0 AS `Score_2`, 0.0 AS `Score_3`, 0.0 AS `Score_4`, 0.0 AS `Score_5`, 0.0 AS `Score_6`, 0.0 AS `Score_7`, 0.0 AS `Score_8`, 0.0 AS `Score_9` 
FROM `DT_Output_90`), 
`DT_node_lookup_91` AS 
(SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_19` < 10.5) THEN CASE WHEN (`ADS`.`Feature_59` < 8.5) THEN 3 ELSE 4 END ELSE CASE WHEN (`ADS`.`Feature_20` < 11.5) THEN CASE WHEN (`ADS`.`Feature_63` < 0.5) THEN 7 ELSE 8 END ELSE CASE WHEN (`ADS`.`Feature_2` < 5.5) THEN 9 ELSE 10 END END END AS node_id_2 
FROM digits AS `ADS`), 
`DT_node_data_91` AS 
(SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, 1 AS parent_id, -0.0030654696747660637 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, 1 AS parent_id, -0.05279405042529106 AS `Score` UNION ALL SELECT 7 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 5 AS parent_id, -0.045832209289073944 AS `Score` UNION ALL SELECT 8 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 5 AS parent_id, 0.11495832353830338 AS `Score` UNION ALL SELECT 9 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 6 AS parent_id, 0.10155969113111496 AS `Score` UNION ALL SELECT 10 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 6 AS parent_id, 0.010237496346235275 AS `Score`) AS `Values`), 
`DT_Output_91` AS 
(SELECT `DT_node_lookup_91`.`KEY` AS `KEY`, `DT_node_lookup_91`.node_id_2 AS node_id_2, `DT_node_data_91`.node_id AS node_id, `DT_node_data_91`.feature AS feature, `DT_node_data_91`.threshold AS threshold, `DT_node_data_91`.depth AS depth, `DT_node_data_91`.parent_id AS parent_id, `DT_node_data_91`.`Score` AS `Score` 
FROM `DT_node_lookup_91` LEFT OUTER JOIN `DT_node_data_91` ON `DT_node_lookup_91`.node_id_2 = `DT_node_data_91`.node_id), 
`XGB_Tree_1_9` AS 
(SELECT `DT_Output_91`.`KEY` AS `KEY`, 0.0 AS `Score_0`, `DT_Output_91`.`Score` AS `Score_1`, 0.0 AS `Score_2`, 0.0 AS `Score_3`, 0.0 AS `Score_4`, 0.0 AS `Score_5`, 0.0 AS `Score_6`, 0.0 AS `Score_7`, 0.0 AS `Score_8`, 0.0 AS `Score_9` 
FROM `DT_Output_91`), 
`DT_node_lookup_92` AS 
(SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_26` < 3.5) THEN CASE WHEN (`ADS`.`Feature_38` < 0.5) THEN CASE WHEN (`ADS`.`Feature_54` < 1.5) THEN 7 ELSE 8 END ELSE CASE WHEN (`ADS`.`Feature_52` < 7.5) THEN 9 ELSE 10 END END ELSE CASE WHEN (`ADS`.`Feature_45` < 4.5) THEN CASE WHEN (`ADS`.`Feature_54` < 0.5) THEN 11 ELSE 12 END ELSE 6 END END AS node_id_2 
FROM digits AS `ADS`), 
`DT_node_data_92` AS 
(SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 6 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, 2 AS parent_id, -0.05235069990158081 AS `Score` UNION ALL SELECT 7 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 3 AS parent_id, 0.003284268546849489 AS `Score` UNION ALL SELECT 8 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 3 AS parent_id, 0.10488017648458481 AS `Score` UNION ALL SELECT 9 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 4 AS parent_id, -0.048902805894613266 AS `Score` UNION ALL SELECT 10 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 4 AS parent_id, -0.013764376752078533 AS `Score` UNION ALL SELECT 11 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 5 AS parent_id, -0.048022352159023285 AS `Score` UNION ALL SELECT 12 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 5 AS parent_id, 0.061609961092472076 AS `Score`) AS `Values`), 
`DT_Output_92` AS 
(SELECT `DT_node_lookup_92`.`KEY` AS `KEY`, `DT_node_lookup_92`.node_id_2 AS node_id_2, `DT_node_data_92`.node_id AS node_id, `DT_node_data_92`.feature AS feature, `DT_node_data_92`.threshold AS threshold, `DT_node_data_92`.depth AS depth, `DT_node_data_92`.parent_id AS parent_id, `DT_node_data_92`.`Score` AS `Score` 
FROM `DT_node_lookup_92` LEFT OUTER JOIN `DT_node_data_92` ON `DT_node_lookup_92`.node_id_2 = `DT_node_data_92`.node_id), 
`XGB_Tree_2_9` AS 
(SELECT `DT_Output_92`.`KEY` AS `KEY`, 0.0 AS `Score_0`, 0.0 AS `Score_1`, `DT_Output_92`.`Score` AS `Score_2`, 0.0 AS `Score_3`, 0.0 AS `Score_4`, 0.0 AS `Score_5`, 0.0 AS `Score_6`, 0.0 AS `Score_7`, 0.0 AS `Score_8`, 0.0 AS `Score_9` 
FROM `DT_Output_92`), 
`DT_node_lookup_93` AS 
(SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_26` < 5.5) THEN CASE WHEN (`ADS`.`Feature_43` < 2.5) THEN CASE WHEN (`ADS`.`Feature_30` < 0.5) THEN 7 ELSE 8 END ELSE CASE WHEN (`ADS`.`Feature_4` < 15.5) THEN 9 ELSE 10 END END ELSE CASE WHEN (`ADS`.`Feature_1` < 0.5) THEN CASE WHEN (`ADS`.`Feature_54` < 10.5) THEN 11 ELSE 12 END ELSE 6 END END AS node_id_2 
FROM digits AS `ADS`), 
`DT_node_data_93` AS 
(SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 6 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, 2 AS parent_id, -0.0012541812611743808 AS `Score` UNION ALL SELECT 7 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 3 AS parent_id, 0.09702526777982712 AS `Score` UNION ALL SELECT 8 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 3 AS parent_id, 0.002301378408446908 AS `Score` UNION ALL SELECT 9 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 4 AS parent_id, -0.04571797698736191 AS `Score` UNION ALL SELECT 10 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 4 AS parent_id, 0.020825697109103203 AS `Score` UNION ALL SELECT 11 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 5 AS parent_id, -0.05161675810813904 AS `Score` UNION ALL SELECT 12 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 5 AS parent_id, -0.02026638761162758 AS `Score`) AS `Values`), 
`DT_Output_93` AS 
(SELECT `DT_node_lookup_93`.`KEY` AS `KEY`, `DT_node_lookup_93`.node_id_2 AS node_id_2, `DT_node_data_93`.node_id AS node_id, `DT_node_data_93`.feature AS feature, `DT_node_data_93`.threshold AS threshold, `DT_node_data_93`.depth AS depth, `DT_node_data_93`.parent_id AS parent_id, `DT_node_data_93`.`Score` AS `Score` 
FROM `DT_node_lookup_93` LEFT OUTER JOIN `DT_node_data_93` ON `DT_node_lookup_93`.node_id_2 = `DT_node_data_93`.node_id), 
`XGB_Tree_3_9` AS 
(SELECT `DT_Output_93`.`KEY` AS `KEY`, 0.0 AS `Score_0`, 0.0 AS `Score_1`, 0.0 AS `Score_2`, `DT_Output_93`.`Score` AS `Score_3`, 0.0 AS `Score_4`, 0.0 AS `Score_5`, 0.0 AS `Score_6`, 0.0 AS `Score_7`, 0.0 AS `Score_8`, 0.0 AS `Score_9` 
FROM `DT_Output_93`), 
`DT_node_lookup_94` AS 
(SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_33` < 3.5) THEN CASE WHEN (`ADS`.`Feature_34` < 13.5) THEN CASE WHEN (`ADS`.`Feature_12` < 4.5) THEN 7 ELSE 8 END ELSE 4 END ELSE CASE WHEN (`ADS`.`Feature_44` < 7.5) THEN CASE WHEN (`ADS`.`Feature_30` < 6.5) THEN 9 ELSE 10 END ELSE CASE WHEN (`ADS`.`Feature_13` < 7.5) THEN 11 ELSE 12 END END END AS node_id_2 
FROM digits AS `ADS`), 
`DT_node_data_94` AS 
(SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, 1 AS parent_id, -0.011873692274093628 AS `Score` UNION ALL SELECT 7 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 3 AS parent_id, -0.0268925279378891 AS `Score` UNION ALL SELECT 8 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 3 AS parent_id, -0.051815129816532135 AS `Score` UNION ALL SELECT 9 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 5 AS parent_id, -0.052095867693424225 AS `Score` UNION ALL SELECT 10 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 5 AS parent_id, -0.025884563103318214 AS `Score` UNION ALL SELECT 11 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 6 AS parent_id, 0.10551740974187851 AS `Score` UNION ALL SELECT 12 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 6 AS parent_id, 0.0073084295727312565 AS `Score`) AS `Values`), 
`DT_Output_94` AS 
(SELECT `DT_node_lookup_94`.`KEY` AS `KEY`, `DT_node_lookup_94`.node_id_2 AS node_id_2, `DT_node_data_94`.node_id AS node_id, `DT_node_data_94`.feature AS feature, `DT_node_data_94`.threshold AS threshold, `DT_node_data_94`.depth AS depth, `DT_node_data_94`.parent_id AS parent_id, `DT_node_data_94`.`Score` AS `Score` 
FROM `DT_node_lookup_94` LEFT OUTER JOIN `DT_node_data_94` ON `DT_node_lookup_94`.node_id_2 = `DT_node_data_94`.node_id), 
`XGB_Tree_4_9` AS 
(SELECT `DT_Output_94`.`KEY` AS `KEY`, 0.0 AS `Score_0`, 0.0 AS `Score_1`, 0.0 AS `Score_2`, 0.0 AS `Score_3`, `DT_Output_94`.`Score` AS `Score_4`, 0.0 AS `Score_5`, 0.0 AS `Score_6`, 0.0 AS `Score_7`, 0.0 AS `Score_8`, 0.0 AS `Score_9` 
FROM `DT_Output_94`), 
`DT_node_lookup_95` AS 
(SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_21` < 2.5) THEN CASE WHEN (`ADS`.`Feature_5` < 2.5) THEN CASE WHEN (`ADS`.`Feature_44` < 2.5) THEN 7 ELSE 8 END ELSE CASE WHEN (`ADS`.`Feature_42` < 9.5) THEN 9 ELSE 10 END END ELSE CASE WHEN (`ADS`.`Feature_13` < 6.5) THEN CASE WHEN (`ADS`.`Feature_4` < 11.5) THEN 11 ELSE 12 END ELSE 6 END END AS node_id_2 
FROM digits AS `ADS`), 
`DT_node_data_95` AS 
(SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 6 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, 2 AS parent_id, -0.05168730020523071 AS `Score` UNION ALL SELECT 7 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 3 AS parent_id, -0.02282322756946087 AS `Score` UNION ALL SELECT 8 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 3 AS parent_id, -0.05129546672105789 AS `Score` UNION ALL SELECT 9 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 4 AS parent_id, 0.10101326555013657 AS `Score` UNION ALL SELECT 10 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 4 AS parent_id, -0.01870923861861229 AS `Score` UNION ALL SELECT 11 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 5 AS parent_id, -0.04958179220557213 AS `Score` UNION ALL SELECT 12 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 5 AS parent_id, -0.0034626342821866274 AS `Score`) AS `Values`), 
`DT_Output_95` AS 
(SELECT `DT_node_lookup_95`.`KEY` AS `KEY`, `DT_node_lookup_95`.node_id_2 AS node_id_2, `DT_node_data_95`.node_id AS node_id, `DT_node_data_95`.feature AS feature, `DT_node_data_95`.threshold AS threshold, `DT_node_data_95`.depth AS depth, `DT_node_data_95`.parent_id AS parent_id, `DT_node_data_95`.`Score` AS `Score` 
FROM `DT_node_lookup_95` LEFT OUTER JOIN `DT_node_data_95` ON `DT_node_lookup_95`.node_id_2 = `DT_node_data_95`.node_id), 
`XGB_Tree_5_9` AS 
(SELECT `DT_Output_95`.`KEY` AS `KEY`, 0.0 AS `Score_0`, 0.0 AS `Score_1`, 0.0 AS `Score_2`, 0.0 AS `Score_3`, 0.0 AS `Score_4`, `DT_Output_95`.`Score` AS `Score_5`, 0.0 AS `Score_6`, 0.0 AS `Score_7`, 0.0 AS `Score_8`, 0.0 AS `Score_9` 
FROM `DT_Output_95`)
 SELECT `Score_Union_CTE_esu_11`.`KEY`, `Score_Union_CTE_esu_11`.`Score_0`, `Score_Union_CTE_esu_11`.`Score_1`, `Score_Union_CTE_esu_11`.`Score_2`, `Score_Union_CTE_esu_11`.`Score_3`, `Score_Union_CTE_esu_11`.`Score_4`, `Score_Union_CTE_esu_11`.`Score_5`, `Score_Union_CTE_esu_11`.`Score_6`, `Score_Union_CTE_esu_11`.`Score_7`, `Score_Union_CTE_esu_11`.`Score_8`, `Score_Union_CTE_esu_11`.`Score_9` 
FROM (SELECT `XGB_Tree_8_8`.`KEY` AS `KEY`, `XGB_Tree_8_8`.`Score_0` AS `Score_0`, `XGB_Tree_8_8`.`Score_1` AS `Score_1`, `XGB_Tree_8_8`.`Score_2` AS `Score_2`, `XGB_Tree_8_8`.`Score_3` AS `Score_3`, `XGB_Tree_8_8`.`Score_4` AS `Score_4`, `XGB_Tree_8_8`.`Score_5` AS `Score_5`, `XGB_Tree_8_8`.`Score_6` AS `Score_6`, `XGB_Tree_8_8`.`Score_7` AS `Score_7`, `XGB_Tree_8_8`.`Score_8` AS `Score_8`, `XGB_Tree_8_8`.`Score_9` AS `Score_9` 
FROM `XGB_Tree_8_8` UNION ALL SELECT `XGB_Tree_9_8`.`KEY` AS `KEY`, `XGB_Tree_9_8`.`Score_0` AS `Score_0`, `XGB_Tree_9_8`.`Score_1` AS `Score_1`, `XGB_Tree_9_8`.`Score_2` AS `Score_2`, `XGB_Tree_9_8`.`Score_3` AS `Score_3`, `XGB_Tree_9_8`.`Score_4` AS `Score_4`, `XGB_Tree_9_8`.`Score_5` AS `Score_5`, `XGB_Tree_9_8`.`Score_6` AS `Score_6`, `XGB_Tree_9_8`.`Score_7` AS `Score_7`, `XGB_Tree_9_8`.`Score_8` AS `Score_8`, `XGB_Tree_9_8`.`Score_9` AS `Score_9` 
FROM `XGB_Tree_9_8` UNION ALL SELECT `XGB_Tree_0_9`.`KEY` AS `KEY`, `XGB_Tree_0_9`.`Score_0` AS `Score_0`, `XGB_Tree_0_9`.`Score_1` AS `Score_1`, `XGB_Tree_0_9`.`Score_2` AS `Score_2`, `XGB_Tree_0_9`.`Score_3` AS `Score_3`, `XGB_Tree_0_9`.`Score_4` AS `Score_4`, `XGB_Tree_0_9`.`Score_5` AS `Score_5`, `XGB_Tree_0_9`.`Score_6` AS `Score_6`, `XGB_Tree_0_9`.`Score_7` AS `Score_7`, `XGB_Tree_0_9`.`Score_8` AS `Score_8`, `XGB_Tree_0_9`.`Score_9` AS `Score_9` 
FROM `XGB_Tree_0_9` UNION ALL SELECT `XGB_Tree_1_9`.`KEY` AS `KEY`, `XGB_Tree_1_9`.`Score_0` AS `Score_0`, `XGB_Tree_1_9`.`Score_1` AS `Score_1`, `XGB_Tree_1_9`.`Score_2` AS `Score_2`, `XGB_Tree_1_9`.`Score_3` AS `Score_3`, `XGB_Tree_1_9`.`Score_4` AS `Score_4`, `XGB_Tree_1_9`.`Score_5` AS `Score_5`, `XGB_Tree_1_9`.`Score_6` AS `Score_6`, `XGB_Tree_1_9`.`Score_7` AS `Score_7`, `XGB_Tree_1_9`.`Score_8` AS `Score_8`, `XGB_Tree_1_9`.`Score_9` AS `Score_9` 
FROM `XGB_Tree_1_9` UNION ALL SELECT `XGB_Tree_2_9`.`KEY` AS `KEY`, `XGB_Tree_2_9`.`Score_0` AS `Score_0`, `XGB_Tree_2_9`.`Score_1` AS `Score_1`, `XGB_Tree_2_9`.`Score_2` AS `Score_2`, `XGB_Tree_2_9`.`Score_3` AS `Score_3`, `XGB_Tree_2_9`.`Score_4` AS `Score_4`, `XGB_Tree_2_9`.`Score_5` AS `Score_5`, `XGB_Tree_2_9`.`Score_6` AS `Score_6`, `XGB_Tree_2_9`.`Score_7` AS `Score_7`, `XGB_Tree_2_9`.`Score_8` AS `Score_8`, `XGB_Tree_2_9`.`Score_9` AS `Score_9` 
FROM `XGB_Tree_2_9` UNION ALL SELECT `XGB_Tree_3_9`.`KEY` AS `KEY`, `XGB_Tree_3_9`.`Score_0` AS `Score_0`, `XGB_Tree_3_9`.`Score_1` AS `Score_1`, `XGB_Tree_3_9`.`Score_2` AS `Score_2`, `XGB_Tree_3_9`.`Score_3` AS `Score_3`, `XGB_Tree_3_9`.`Score_4` AS `Score_4`, `XGB_Tree_3_9`.`Score_5` AS `Score_5`, `XGB_Tree_3_9`.`Score_6` AS `Score_6`, `XGB_Tree_3_9`.`Score_7` AS `Score_7`, `XGB_Tree_3_9`.`Score_8` AS `Score_8`, `XGB_Tree_3_9`.`Score_9` AS `Score_9` 
FROM `XGB_Tree_3_9` UNION ALL SELECT `XGB_Tree_4_9`.`KEY` AS `KEY`, `XGB_Tree_4_9`.`Score_0` AS `Score_0`, `XGB_Tree_4_9`.`Score_1` AS `Score_1`, `XGB_Tree_4_9`.`Score_2` AS `Score_2`, `XGB_Tree_4_9`.`Score_3` AS `Score_3`, `XGB_Tree_4_9`.`Score_4` AS `Score_4`, `XGB_Tree_4_9`.`Score_5` AS `Score_5`, `XGB_Tree_4_9`.`Score_6` AS `Score_6`, `XGB_Tree_4_9`.`Score_7` AS `Score_7`, `XGB_Tree_4_9`.`Score_8` AS `Score_8`, `XGB_Tree_4_9`.`Score_9` AS `Score_9` 
FROM `XGB_Tree_4_9` UNION ALL SELECT `XGB_Tree_5_9`.`KEY` AS `KEY`, `XGB_Tree_5_9`.`Score_0` AS `Score_0`, `XGB_Tree_5_9`.`Score_1` AS `Score_1`, `XGB_Tree_5_9`.`Score_2` AS `Score_2`, `XGB_Tree_5_9`.`Score_3` AS `Score_3`, `XGB_Tree_5_9`.`Score_4` AS `Score_4`, `XGB_Tree_5_9`.`Score_5` AS `Score_5`, `XGB_Tree_5_9`.`Score_6` AS `Score_6`, `XGB_Tree_5_9`.`Score_7` AS `Score_7`, `XGB_Tree_5_9`.`Score_8` AS `Score_8`, `XGB_Tree_5_9`.`Score_9` AS `Score_9` 
FROM `XGB_Tree_5_9`) AS `Score_Union_CTE_esu_11`), 
`Score_Union_CTE_12` AS 
(WITH `DT_node_lookup_96` AS 
(SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_21` < 0.5) THEN CASE WHEN (`ADS`.`Feature_42` < 7.5) THEN 3 ELSE CASE WHEN (`ADS`.`Feature_54` < 1.5) THEN 7 ELSE 8 END END ELSE CASE WHEN (`ADS`.`Feature_34` < 15.5) THEN 5 ELSE 6 END END AS node_id_2 
FROM digits AS `ADS`), 
`DT_node_data_96` AS 
(SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, 1 AS parent_id, -0.04672126844525337 AS `Score` UNION ALL SELECT 5 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, 2 AS parent_id, -0.05172860249876976 AS `Score` UNION ALL SELECT 6 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, 2 AS parent_id, -0.03403058275580406 AS `Score` UNION ALL SELECT 7 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 4 AS parent_id, -0.006417918484658003 AS `Score` UNION ALL SELECT 8 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 4 AS parent_id, 0.09642396867275238 AS `Score`) AS `Values`), 
`DT_Output_96` AS 
(SELECT `DT_node_lookup_96`.`KEY` AS `KEY`, `DT_node_lookup_96`.node_id_2 AS node_id_2, `DT_node_data_96`.node_id AS node_id, `DT_node_data_96`.feature AS feature, `DT_node_data_96`.threshold AS threshold, `DT_node_data_96`.depth AS depth, `DT_node_data_96`.parent_id AS parent_id, `DT_node_data_96`.`Score` AS `Score` 
FROM `DT_node_lookup_96` LEFT OUTER JOIN `DT_node_data_96` ON `DT_node_lookup_96`.node_id_2 = `DT_node_data_96`.node_id), 
`XGB_Tree_6_9` AS 
(SELECT `DT_Output_96`.`KEY` AS `KEY`, 0.0 AS `Score_0`, 0.0 AS `Score_1`, 0.0 AS `Score_2`, 0.0 AS `Score_3`, 0.0 AS `Score_4`, 0.0 AS `Score_5`, `DT_Output_96`.`Score` AS `Score_6`, 0.0 AS `Score_7`, 0.0 AS `Score_8`, 0.0 AS `Score_9` 
FROM `DT_Output_96`), 
`DT_node_lookup_97` AS 
(SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_53` < 0.5) THEN CASE WHEN (`ADS`.`Feature_37` < 0.5) THEN 3 ELSE CASE WHEN (`ADS`.`Feature_26` < 12.5) THEN 7 ELSE 8 END END ELSE CASE WHEN (`ADS`.`Feature_14` < 9.5) THEN CASE WHEN (`ADS`.`Feature_61` < 0.5) THEN 9 ELSE 10 END ELSE 6 END END AS node_id_2 
FROM digits AS `ADS`), 
`DT_node_data_97` AS 
(SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, 1 AS parent_id, -0.026021962985396385 AS `Score` UNION ALL SELECT 6 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, 2 AS parent_id, 0.009580346755683422 AS `Score` UNION ALL SELECT 7 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 4 AS parent_id, 0.10662728548049927 AS `Score` UNION ALL SELECT 8 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 4 AS parent_id, 0.003835584269836545 AS `Score` UNION ALL SELECT 9 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 5 AS parent_id, -0.02894289791584015 AS `Score` UNION ALL SELECT 10 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 5 AS parent_id, -0.052821289747953415 AS `Score`) AS `Values`), 
`DT_Output_97` AS 
(SELECT `DT_node_lookup_97`.`KEY` AS `KEY`, `DT_node_lookup_97`.node_id_2 AS node_id_2, `DT_node_data_97`.node_id AS node_id, `DT_node_data_97`.feature AS feature, `DT_node_data_97`.threshold AS threshold, `DT_node_data_97`.depth AS depth, `DT_node_data_97`.parent_id AS parent_id, `DT_node_data_97`.`Score` AS `Score` 
FROM `DT_node_lookup_97` LEFT OUTER JOIN `DT_node_data_97` ON `DT_node_lookup_97`.node_id_2 = `DT_node_data_97`.node_id), 
`XGB_Tree_7_9` AS 
(SELECT `DT_Output_97`.`KEY` AS `KEY`, 0.0 AS `Score_0`, 0.0 AS `Score_1`, 0.0 AS `Score_2`, 0.0 AS `Score_3`, 0.0 AS `Score_4`, 0.0 AS `Score_5`, 0.0 AS `Score_6`, `DT_Output_97`.`Score` AS `Score_7`, 0.0 AS `Score_8`, 0.0 AS `Score_9` 
FROM `DT_Output_97`), 
`DT_node_lookup_98` AS 
(SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_38` < 1.5) THEN CASE WHEN (`ADS`.`Feature_21` < 4.5) THEN CASE WHEN (`ADS`.`Feature_20` < 9.5) THEN 7 ELSE 8 END ELSE CASE WHEN (`ADS`.`Feature_42` < 7.5) THEN 9 ELSE 10 END END ELSE CASE WHEN (`ADS`.`Feature_27` < 15.5) THEN 5 ELSE 6 END END AS node_id_2 
FROM digits AS `ADS`), 
`DT_node_data_98` AS 
(SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 5 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, 2 AS parent_id, -0.05087042972445488 AS `Score` UNION ALL SELECT 6 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, 2 AS parent_id, -0.023740995675325394 AS `Score` UNION ALL SELECT 7 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 3 AS parent_id, -0.05150742083787918 AS `Score` UNION ALL SELECT 8 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 3 AS parent_id, -0.023919396102428436 AS `Score` UNION ALL SELECT 9 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 4 AS parent_id, -0.005470788571983576 AS `Score` UNION ALL SELECT 10 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 4 AS parent_id, 0.07852805405855179 AS `Score`) AS `Values`), 
`DT_Output_98` AS 
(SELECT `DT_node_lookup_98`.`KEY` AS `KEY`, `DT_node_lookup_98`.node_id_2 AS node_id_2, `DT_node_data_98`.node_id AS node_id, `DT_node_data_98`.feature AS feature, `DT_node_data_98`.threshold AS threshold, `DT_node_data_98`.depth AS depth, `DT_node_data_98`.parent_id AS parent_id, `DT_node_data_98`.`Score` AS `Score` 
FROM `DT_node_lookup_98` LEFT OUTER JOIN `DT_node_data_98` ON `DT_node_lookup_98`.node_id_2 = `DT_node_data_98`.node_id), 
`XGB_Tree_8_9` AS 
(SELECT `DT_Output_98`.`KEY` AS `KEY`, 0.0 AS `Score_0`, 0.0 AS `Score_1`, 0.0 AS `Score_2`, 0.0 AS `Score_3`, 0.0 AS `Score_4`, 0.0 AS `Score_5`, 0.0 AS `Score_6`, 0.0 AS `Score_7`, `DT_Output_98`.`Score` AS `Score_8`, 0.0 AS `Score_9` 
FROM `DT_Output_98`), 
`DT_node_lookup_99` AS 
(SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_43` < 3.5) THEN CASE WHEN (`ADS`.`Feature_21` < 10.5) THEN CASE WHEN (`ADS`.`Feature_61` < 11.5) THEN 7 ELSE 8 END ELSE CASE WHEN (`ADS`.`Feature_27` < 2.5) THEN 9 ELSE 10 END END ELSE CASE WHEN (`ADS`.`Feature_60` < 1.5) THEN 5 ELSE CASE WHEN (`ADS`.`Feature_43` < 6.5) THEN 11 ELSE 12 END END END AS node_id_2 
FROM digits AS `ADS`), 
`DT_node_data_99` AS 
(SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 5 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, 2 AS parent_id, -0.01603718101978302 AS `Score` UNION ALL SELECT 7 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 3 AS parent_id, -0.049595534801483154 AS `Score` UNION ALL SELECT 8 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 3 AS parent_id, 0.005509259179234505 AS `Score` UNION ALL SELECT 9 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 4 AS parent_id, -0.037980061024427414 AS `Score` UNION ALL SELECT 10 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 4 AS parent_id, 0.08812010288238525 AS `Score` UNION ALL SELECT 11 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 6 AS parent_id, -0.033518243581056595 AS `Score` UNION ALL SELECT 12 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, 6 AS parent_id, -0.0526418499648571 AS `Score`) AS `Values`), 
`DT_Output_99` AS 
(SELECT `DT_node_lookup_99`.`KEY` AS `KEY`, `DT_node_lookup_99`.node_id_2 AS node_id_2, `DT_node_data_99`.node_id AS node_id, `DT_node_data_99`.feature AS feature, `DT_node_data_99`.threshold AS threshold, `DT_node_data_99`.depth AS depth, `DT_node_data_99`.parent_id AS parent_id, `DT_node_data_99`.`Score` AS `Score` 
FROM `DT_node_lookup_99` LEFT OUTER JOIN `DT_node_data_99` ON `DT_node_lookup_99`.node_id_2 = `DT_node_data_99`.node_id), 
`XGB_Tree_9_9` AS 
(SELECT `DT_Output_99`.`KEY` AS `KEY`, 0.0 AS `Score_0`, 0.0 AS `Score_1`, 0.0 AS `Score_2`, 0.0 AS `Score_3`, 0.0 AS `Score_4`, 0.0 AS `Score_5`, 0.0 AS `Score_6`, 0.0 AS `Score_7`, 0.0 AS `Score_8`, `DT_Output_99`.`Score` AS `Score_9` 
FROM `DT_Output_99`)
 SELECT `Score_Union_CTE_esu_12`.`KEY`, `Score_Union_CTE_esu_12`.`Score_0`, `Score_Union_CTE_esu_12`.`Score_1`, `Score_Union_CTE_esu_12`.`Score_2`, `Score_Union_CTE_esu_12`.`Score_3`, `Score_Union_CTE_esu_12`.`Score_4`, `Score_Union_CTE_esu_12`.`Score_5`, `Score_Union_CTE_esu_12`.`Score_6`, `Score_Union_CTE_esu_12`.`Score_7`, `Score_Union_CTE_esu_12`.`Score_8`, `Score_Union_CTE_esu_12`.`Score_9` 
FROM (SELECT `XGB_Tree_6_9`.`KEY` AS `KEY`, `XGB_Tree_6_9`.`Score_0` AS `Score_0`, `XGB_Tree_6_9`.`Score_1` AS `Score_1`, `XGB_Tree_6_9`.`Score_2` AS `Score_2`, `XGB_Tree_6_9`.`Score_3` AS `Score_3`, `XGB_Tree_6_9`.`Score_4` AS `Score_4`, `XGB_Tree_6_9`.`Score_5` AS `Score_5`, `XGB_Tree_6_9`.`Score_6` AS `Score_6`, `XGB_Tree_6_9`.`Score_7` AS `Score_7`, `XGB_Tree_6_9`.`Score_8` AS `Score_8`, `XGB_Tree_6_9`.`Score_9` AS `Score_9` 
FROM `XGB_Tree_6_9` UNION ALL SELECT `XGB_Tree_7_9`.`KEY` AS `KEY`, `XGB_Tree_7_9`.`Score_0` AS `Score_0`, `XGB_Tree_7_9`.`Score_1` AS `Score_1`, `XGB_Tree_7_9`.`Score_2` AS `Score_2`, `XGB_Tree_7_9`.`Score_3` AS `Score_3`, `XGB_Tree_7_9`.`Score_4` AS `Score_4`, `XGB_Tree_7_9`.`Score_5` AS `Score_5`, `XGB_Tree_7_9`.`Score_6` AS `Score_6`, `XGB_Tree_7_9`.`Score_7` AS `Score_7`, `XGB_Tree_7_9`.`Score_8` AS `Score_8`, `XGB_Tree_7_9`.`Score_9` AS `Score_9` 
FROM `XGB_Tree_7_9` UNION ALL SELECT `XGB_Tree_8_9`.`KEY` AS `KEY`, `XGB_Tree_8_9`.`Score_0` AS `Score_0`, `XGB_Tree_8_9`.`Score_1` AS `Score_1`, `XGB_Tree_8_9`.`Score_2` AS `Score_2`, `XGB_Tree_8_9`.`Score_3` AS `Score_3`, `XGB_Tree_8_9`.`Score_4` AS `Score_4`, `XGB_Tree_8_9`.`Score_5` AS `Score_5`, `XGB_Tree_8_9`.`Score_6` AS `Score_6`, `XGB_Tree_8_9`.`Score_7` AS `Score_7`, `XGB_Tree_8_9`.`Score_8` AS `Score_8`, `XGB_Tree_8_9`.`Score_9` AS `Score_9` 
FROM `XGB_Tree_8_9` UNION ALL SELECT `XGB_Tree_9_9`.`KEY` AS `KEY`, `XGB_Tree_9_9`.`Score_0` AS `Score_0`, `XGB_Tree_9_9`.`Score_1` AS `Score_1`, `XGB_Tree_9_9`.`Score_2` AS `Score_2`, `XGB_Tree_9_9`.`Score_3` AS `Score_3`, `XGB_Tree_9_9`.`Score_4` AS `Score_4`, `XGB_Tree_9_9`.`Score_5` AS `Score_5`, `XGB_Tree_9_9`.`Score_6` AS `Score_6`, `XGB_Tree_9_9`.`Score_7` AS `Score_7`, `XGB_Tree_9_9`.`Score_8` AS `Score_8`, `XGB_Tree_9_9`.`Score_9` AS `Score_9` 
FROM `XGB_Tree_9_9`) AS `Score_Union_CTE_esu_12`), 
`Score_Union_CTE` AS 
(SELECT `Score_Union_CTEbig_esu`.`KEY` AS `KEY`, `Score_Union_CTEbig_esu`.`Score_0` AS `Score_0`, `Score_Union_CTEbig_esu`.`Score_1` AS `Score_1`, `Score_Union_CTEbig_esu`.`Score_2` AS `Score_2`, `Score_Union_CTEbig_esu`.`Score_3` AS `Score_3`, `Score_Union_CTEbig_esu`.`Score_4` AS `Score_4`, `Score_Union_CTEbig_esu`.`Score_5` AS `Score_5`, `Score_Union_CTEbig_esu`.`Score_6` AS `Score_6`, `Score_Union_CTEbig_esu`.`Score_7` AS `Score_7`, `Score_Union_CTEbig_esu`.`Score_8` AS `Score_8`, `Score_Union_CTEbig_esu`.`Score_9` AS `Score_9` 
FROM (SELECT `Score_Union_CTE_0`.`KEY` AS `KEY`, `Score_Union_CTE_0`.`Score_0` AS `Score_0`, `Score_Union_CTE_0`.`Score_1` AS `Score_1`, `Score_Union_CTE_0`.`Score_2` AS `Score_2`, `Score_Union_CTE_0`.`Score_3` AS `Score_3`, `Score_Union_CTE_0`.`Score_4` AS `Score_4`, `Score_Union_CTE_0`.`Score_5` AS `Score_5`, `Score_Union_CTE_0`.`Score_6` AS `Score_6`, `Score_Union_CTE_0`.`Score_7` AS `Score_7`, `Score_Union_CTE_0`.`Score_8` AS `Score_8`, `Score_Union_CTE_0`.`Score_9` AS `Score_9` 
FROM `Score_Union_CTE_0` UNION ALL SELECT `Score_Union_CTE_1`.`KEY` AS `KEY`, `Score_Union_CTE_1`.`Score_0` AS `Score_0`, `Score_Union_CTE_1`.`Score_1` AS `Score_1`, `Score_Union_CTE_1`.`Score_2` AS `Score_2`, `Score_Union_CTE_1`.`Score_3` AS `Score_3`, `Score_Union_CTE_1`.`Score_4` AS `Score_4`, `Score_Union_CTE_1`.`Score_5` AS `Score_5`, `Score_Union_CTE_1`.`Score_6` AS `Score_6`, `Score_Union_CTE_1`.`Score_7` AS `Score_7`, `Score_Union_CTE_1`.`Score_8` AS `Score_8`, `Score_Union_CTE_1`.`Score_9` AS `Score_9` 
FROM `Score_Union_CTE_1` UNION ALL SELECT `Score_Union_CTE_2`.`KEY` AS `KEY`, `Score_Union_CTE_2`.`Score_0` AS `Score_0`, `Score_Union_CTE_2`.`Score_1` AS `Score_1`, `Score_Union_CTE_2`.`Score_2` AS `Score_2`, `Score_Union_CTE_2`.`Score_3` AS `Score_3`, `Score_Union_CTE_2`.`Score_4` AS `Score_4`, `Score_Union_CTE_2`.`Score_5` AS `Score_5`, `Score_Union_CTE_2`.`Score_6` AS `Score_6`, `Score_Union_CTE_2`.`Score_7` AS `Score_7`, `Score_Union_CTE_2`.`Score_8` AS `Score_8`, `Score_Union_CTE_2`.`Score_9` AS `Score_9` 
FROM `Score_Union_CTE_2` UNION ALL SELECT `Score_Union_CTE_3`.`KEY` AS `KEY`, `Score_Union_CTE_3`.`Score_0` AS `Score_0`, `Score_Union_CTE_3`.`Score_1` AS `Score_1`, `Score_Union_CTE_3`.`Score_2` AS `Score_2`, `Score_Union_CTE_3`.`Score_3` AS `Score_3`, `Score_Union_CTE_3`.`Score_4` AS `Score_4`, `Score_Union_CTE_3`.`Score_5` AS `Score_5`, `Score_Union_CTE_3`.`Score_6` AS `Score_6`, `Score_Union_CTE_3`.`Score_7` AS `Score_7`, `Score_Union_CTE_3`.`Score_8` AS `Score_8`, `Score_Union_CTE_3`.`Score_9` AS `Score_9` 
FROM `Score_Union_CTE_3` UNION ALL SELECT `Score_Union_CTE_4`.`KEY` AS `KEY`, `Score_Union_CTE_4`.`Score_0` AS `Score_0`, `Score_Union_CTE_4`.`Score_1` AS `Score_1`, `Score_Union_CTE_4`.`Score_2` AS `Score_2`, `Score_Union_CTE_4`.`Score_3` AS `Score_3`, `Score_Union_CTE_4`.`Score_4` AS `Score_4`, `Score_Union_CTE_4`.`Score_5` AS `Score_5`, `Score_Union_CTE_4`.`Score_6` AS `Score_6`, `Score_Union_CTE_4`.`Score_7` AS `Score_7`, `Score_Union_CTE_4`.`Score_8` AS `Score_8`, `Score_Union_CTE_4`.`Score_9` AS `Score_9` 
FROM `Score_Union_CTE_4` UNION ALL SELECT `Score_Union_CTE_5`.`KEY` AS `KEY`, `Score_Union_CTE_5`.`Score_0` AS `Score_0`, `Score_Union_CTE_5`.`Score_1` AS `Score_1`, `Score_Union_CTE_5`.`Score_2` AS `Score_2`, `Score_Union_CTE_5`.`Score_3` AS `Score_3`, `Score_Union_CTE_5`.`Score_4` AS `Score_4`, `Score_Union_CTE_5`.`Score_5` AS `Score_5`, `Score_Union_CTE_5`.`Score_6` AS `Score_6`, `Score_Union_CTE_5`.`Score_7` AS `Score_7`, `Score_Union_CTE_5`.`Score_8` AS `Score_8`, `Score_Union_CTE_5`.`Score_9` AS `Score_9` 
FROM `Score_Union_CTE_5` UNION ALL SELECT `Score_Union_CTE_6`.`KEY` AS `KEY`, `Score_Union_CTE_6`.`Score_0` AS `Score_0`, `Score_Union_CTE_6`.`Score_1` AS `Score_1`, `Score_Union_CTE_6`.`Score_2` AS `Score_2`, `Score_Union_CTE_6`.`Score_3` AS `Score_3`, `Score_Union_CTE_6`.`Score_4` AS `Score_4`, `Score_Union_CTE_6`.`Score_5` AS `Score_5`, `Score_Union_CTE_6`.`Score_6` AS `Score_6`, `Score_Union_CTE_6`.`Score_7` AS `Score_7`, `Score_Union_CTE_6`.`Score_8` AS `Score_8`, `Score_Union_CTE_6`.`Score_9` AS `Score_9` 
FROM `Score_Union_CTE_6` UNION ALL SELECT `Score_Union_CTE_7`.`KEY` AS `KEY`, `Score_Union_CTE_7`.`Score_0` AS `Score_0`, `Score_Union_CTE_7`.`Score_1` AS `Score_1`, `Score_Union_CTE_7`.`Score_2` AS `Score_2`, `Score_Union_CTE_7`.`Score_3` AS `Score_3`, `Score_Union_CTE_7`.`Score_4` AS `Score_4`, `Score_Union_CTE_7`.`Score_5` AS `Score_5`, `Score_Union_CTE_7`.`Score_6` AS `Score_6`, `Score_Union_CTE_7`.`Score_7` AS `Score_7`, `Score_Union_CTE_7`.`Score_8` AS `Score_8`, `Score_Union_CTE_7`.`Score_9` AS `Score_9` 
FROM `Score_Union_CTE_7` UNION ALL SELECT `Score_Union_CTE_8`.`KEY` AS `KEY`, `Score_Union_CTE_8`.`Score_0` AS `Score_0`, `Score_Union_CTE_8`.`Score_1` AS `Score_1`, `Score_Union_CTE_8`.`Score_2` AS `Score_2`, `Score_Union_CTE_8`.`Score_3` AS `Score_3`, `Score_Union_CTE_8`.`Score_4` AS `Score_4`, `Score_Union_CTE_8`.`Score_5` AS `Score_5`, `Score_Union_CTE_8`.`Score_6` AS `Score_6`, `Score_Union_CTE_8`.`Score_7` AS `Score_7`, `Score_Union_CTE_8`.`Score_8` AS `Score_8`, `Score_Union_CTE_8`.`Score_9` AS `Score_9` 
FROM `Score_Union_CTE_8` UNION ALL SELECT `Score_Union_CTE_9`.`KEY` AS `KEY`, `Score_Union_CTE_9`.`Score_0` AS `Score_0`, `Score_Union_CTE_9`.`Score_1` AS `Score_1`, `Score_Union_CTE_9`.`Score_2` AS `Score_2`, `Score_Union_CTE_9`.`Score_3` AS `Score_3`, `Score_Union_CTE_9`.`Score_4` AS `Score_4`, `Score_Union_CTE_9`.`Score_5` AS `Score_5`, `Score_Union_CTE_9`.`Score_6` AS `Score_6`, `Score_Union_CTE_9`.`Score_7` AS `Score_7`, `Score_Union_CTE_9`.`Score_8` AS `Score_8`, `Score_Union_CTE_9`.`Score_9` AS `Score_9` 
FROM `Score_Union_CTE_9` UNION ALL SELECT `Score_Union_CTE_10`.`KEY` AS `KEY`, `Score_Union_CTE_10`.`Score_0` AS `Score_0`, `Score_Union_CTE_10`.`Score_1` AS `Score_1`, `Score_Union_CTE_10`.`Score_2` AS `Score_2`, `Score_Union_CTE_10`.`Score_3` AS `Score_3`, `Score_Union_CTE_10`.`Score_4` AS `Score_4`, `Score_Union_CTE_10`.`Score_5` AS `Score_5`, `Score_Union_CTE_10`.`Score_6` AS `Score_6`, `Score_Union_CTE_10`.`Score_7` AS `Score_7`, `Score_Union_CTE_10`.`Score_8` AS `Score_8`, `Score_Union_CTE_10`.`Score_9` AS `Score_9` 
FROM `Score_Union_CTE_10` UNION ALL SELECT `Score_Union_CTE_11`.`KEY` AS `KEY`, `Score_Union_CTE_11`.`Score_0` AS `Score_0`, `Score_Union_CTE_11`.`Score_1` AS `Score_1`, `Score_Union_CTE_11`.`Score_2` AS `Score_2`, `Score_Union_CTE_11`.`Score_3` AS `Score_3`, `Score_Union_CTE_11`.`Score_4` AS `Score_4`, `Score_Union_CTE_11`.`Score_5` AS `Score_5`, `Score_Union_CTE_11`.`Score_6` AS `Score_6`, `Score_Union_CTE_11`.`Score_7` AS `Score_7`, `Score_Union_CTE_11`.`Score_8` AS `Score_8`, `Score_Union_CTE_11`.`Score_9` AS `Score_9` 
FROM `Score_Union_CTE_11` UNION ALL SELECT `Score_Union_CTE_12`.`KEY` AS `KEY`, `Score_Union_CTE_12`.`Score_0` AS `Score_0`, `Score_Union_CTE_12`.`Score_1` AS `Score_1`, `Score_Union_CTE_12`.`Score_2` AS `Score_2`, `Score_Union_CTE_12`.`Score_3` AS `Score_3`, `Score_Union_CTE_12`.`Score_4` AS `Score_4`, `Score_Union_CTE_12`.`Score_5` AS `Score_5`, `Score_Union_CTE_12`.`Score_6` AS `Score_6`, `Score_Union_CTE_12`.`Score_7` AS `Score_7`, `Score_Union_CTE_12`.`Score_8` AS `Score_8`, `Score_Union_CTE_12`.`Score_9` AS `Score_9` 
FROM `Score_Union_CTE_12`) AS `Score_Union_CTEbig_esu`), 
`XGB_Sum_Scores` AS 
(SELECT `T`.`KEY` AS `KEY`, `T`.`Score_0` AS `Score_0`, `T`.`Score_1` AS `Score_1`, `T`.`Score_2` AS `Score_2`, `T`.`Score_3` AS `Score_3`, `T`.`Score_4` AS `Score_4`, `T`.`Score_5` AS `Score_5`, `T`.`Score_6` AS `Score_6`, `T`.`Score_7` AS `Score_7`, `T`.`Score_8` AS `Score_8`, `T`.`Score_9` AS `Score_9` 
FROM (SELECT `Score_Union_CTE`.`KEY` AS `KEY`, sum(`Score_Union_CTE`.`Score_0`) AS `Score_0`, sum(`Score_Union_CTE`.`Score_1`) AS `Score_1`, sum(`Score_Union_CTE`.`Score_2`) AS `Score_2`, sum(`Score_Union_CTE`.`Score_3`) AS `Score_3`, sum(`Score_Union_CTE`.`Score_4`) AS `Score_4`, sum(`Score_Union_CTE`.`Score_5`) AS `Score_5`, sum(`Score_Union_CTE`.`Score_6`) AS `Score_6`, sum(`Score_Union_CTE`.`Score_7`) AS `Score_7`, sum(`Score_Union_CTE`.`Score_8`) AS `Score_8`, sum(`Score_Union_CTE`.`Score_9`) AS `Score_9` 
FROM `Score_Union_CTE` GROUP BY `Score_Union_CTE`.`KEY`) AS `T`), 
orig_cte AS 
(SELECT `XGB_Sum_Scores`.`KEY` AS `KEY`, `XGB_Sum_Scores`.`Score_0` AS `Score_0`, `XGB_Sum_Scores`.`Score_1` AS `Score_1`, `XGB_Sum_Scores`.`Score_2` AS `Score_2`, `XGB_Sum_Scores`.`Score_3` AS `Score_3`, `XGB_Sum_Scores`.`Score_4` AS `Score_4`, `XGB_Sum_Scores`.`Score_5` AS `Score_5`, `XGB_Sum_Scores`.`Score_6` AS `Score_6`, `XGB_Sum_Scores`.`Score_7` AS `Score_7`, `XGB_Sum_Scores`.`Score_8` AS `Score_8`, `XGB_Sum_Scores`.`Score_9` AS `Score_9`, NULL AS `Proba_0`, NULL AS `Proba_1`, NULL AS `Proba_2`, NULL AS `Proba_3`, NULL AS `Proba_4`, NULL AS `Proba_5`, NULL AS `Proba_6`, NULL AS `Proba_7`, NULL AS `Proba_8`, NULL AS `Proba_9`, NULL AS `LogProba_0`, NULL AS `LogProba_1`, NULL AS `LogProba_2`, NULL AS `LogProba_3`, NULL AS `LogProba_4`, NULL AS `LogProba_5`, NULL AS `LogProba_6`, NULL AS `LogProba_7`, NULL AS `LogProba_8`, NULL AS `LogProba_9`, CAST(NULL AS SIGNED INTEGER) AS `Decision`, NULL AS `DecisionProba` 
FROM `XGB_Sum_Scores`), 
score_class_union AS 
(SELECT scu.`KEY_u` AS `KEY_u`, scu.class AS class, scu.`LogProba` AS `LogProba`, scu.`Proba` AS `Proba`, scu.`Score` AS `Score` 
FROM (SELECT orig_cte.`KEY` AS `KEY_u`, 0 AS class, orig_cte.`LogProba_0` AS `LogProba`, orig_cte.`Proba_0` AS `Proba`, orig_cte.`Score_0` AS `Score` 
FROM orig_cte UNION ALL SELECT orig_cte.`KEY` AS `KEY_u`, 1 AS class, orig_cte.`LogProba_1` AS `LogProba`, orig_cte.`Proba_1` AS `Proba`, orig_cte.`Score_1` AS `Score` 
FROM orig_cte UNION ALL SELECT orig_cte.`KEY` AS `KEY_u`, 2 AS class, orig_cte.`LogProba_2` AS `LogProba`, orig_cte.`Proba_2` AS `Proba`, orig_cte.`Score_2` AS `Score` 
FROM orig_cte UNION ALL SELECT orig_cte.`KEY` AS `KEY_u`, 3 AS class, orig_cte.`LogProba_3` AS `LogProba`, orig_cte.`Proba_3` AS `Proba`, orig_cte.`Score_3` AS `Score` 
FROM orig_cte UNION ALL SELECT orig_cte.`KEY` AS `KEY_u`, 4 AS class, orig_cte.`LogProba_4` AS `LogProba`, orig_cte.`Proba_4` AS `Proba`, orig_cte.`Score_4` AS `Score` 
FROM orig_cte UNION ALL SELECT orig_cte.`KEY` AS `KEY_u`, 5 AS class, orig_cte.`LogProba_5` AS `LogProba`, orig_cte.`Proba_5` AS `Proba`, orig_cte.`Score_5` AS `Score` 
FROM orig_cte UNION ALL SELECT orig_cte.`KEY` AS `KEY_u`, 6 AS class, orig_cte.`LogProba_6` AS `LogProba`, orig_cte.`Proba_6` AS `Proba`, orig_cte.`Score_6` AS `Score` 
FROM orig_cte UNION ALL SELECT orig_cte.`KEY` AS `KEY_u`, 7 AS class, orig_cte.`LogProba_7` AS `LogProba`, orig_cte.`Proba_7` AS `Proba`, orig_cte.`Score_7` AS `Score` 
FROM orig_cte UNION ALL SELECT orig_cte.`KEY` AS `KEY_u`, 8 AS class, orig_cte.`LogProba_8` AS `LogProba`, orig_cte.`Proba_8` AS `Proba`, orig_cte.`Score_8` AS `Score` 
FROM orig_cte UNION ALL SELECT orig_cte.`KEY` AS `KEY_u`, 9 AS class, orig_cte.`LogProba_9` AS `LogProba`, orig_cte.`Proba_9` AS `Proba`, orig_cte.`Score_9` AS `Score` 
FROM orig_cte) AS scu), 
score_max AS 
(SELECT orig_cte.`KEY` AS `KEY`, orig_cte.`Score_0` AS `Score_0`, orig_cte.`Score_1` AS `Score_1`, orig_cte.`Score_2` AS `Score_2`, orig_cte.`Score_3` AS `Score_3`, orig_cte.`Score_4` AS `Score_4`, orig_cte.`Score_5` AS `Score_5`, orig_cte.`Score_6` AS `Score_6`, orig_cte.`Score_7` AS `Score_7`, orig_cte.`Score_8` AS `Score_8`, orig_cte.`Score_9` AS `Score_9`, orig_cte.`Proba_0` AS `Proba_0`, orig_cte.`Proba_1` AS `Proba_1`, orig_cte.`Proba_2` AS `Proba_2`, orig_cte.`Proba_3` AS `Proba_3`, orig_cte.`Proba_4` AS `Proba_4`, orig_cte.`Proba_5` AS `Proba_5`, orig_cte.`Proba_6` AS `Proba_6`, orig_cte.`Proba_7` AS `Proba_7`, orig_cte.`Proba_8` AS `Proba_8`, orig_cte.`Proba_9` AS `Proba_9`, orig_cte.`LogProba_0` AS `LogProba_0`, orig_cte.`LogProba_1` AS `LogProba_1`, orig_cte.`LogProba_2` AS `LogProba_2`, orig_cte.`LogProba_3` AS `LogProba_3`, orig_cte.`LogProba_4` AS `LogProba_4`, orig_cte.`LogProba_5` AS `LogProba_5`, orig_cte.`LogProba_6` AS `LogProba_6`, orig_cte.`LogProba_7` AS `LogProba_7`, orig_cte.`LogProba_8` AS `LogProba_8`, orig_cte.`LogProba_9` AS `LogProba_9`, orig_cte.`Decision` AS `Decision`, orig_cte.`DecisionProba` AS `DecisionProba`, max_select.`KEY_m` AS `KEY_m`, max_select.`max_Score` AS `max_Score` 
FROM orig_cte LEFT OUTER JOIN (SELECT score_class_union.`KEY_u` AS `KEY_m`, max(score_class_union.`Score`) AS `max_Score` 
FROM score_class_union GROUP BY score_class_union.`KEY_u`) AS max_select ON orig_cte.`KEY` = max_select.`KEY_m`), 
score_soft_max_deltas AS 
(SELECT score_max.`KEY` AS `KEY`, score_max.`Score_0` AS `Score_0`, score_max.`Score_1` AS `Score_1`, score_max.`Score_2` AS `Score_2`, score_max.`Score_3` AS `Score_3`, score_max.`Score_4` AS `Score_4`, score_max.`Score_5` AS `Score_5`, score_max.`Score_6` AS `Score_6`, score_max.`Score_7` AS `Score_7`, score_max.`Score_8` AS `Score_8`, score_max.`Score_9` AS `Score_9`, score_max.`Proba_0` AS `Proba_0`, score_max.`Proba_1` AS `Proba_1`, score_max.`Proba_2` AS `Proba_2`, score_max.`Proba_3` AS `Proba_3`, score_max.`Proba_4` AS `Proba_4`, score_max.`Proba_5` AS `Proba_5`, score_max.`Proba_6` AS `Proba_6`, score_max.`Proba_7` AS `Proba_7`, score_max.`Proba_8` AS `Proba_8`, score_max.`Proba_9` AS `Proba_9`, score_max.`LogProba_0` AS `LogProba_0`, score_max.`LogProba_1` AS `LogProba_1`, score_max.`LogProba_2` AS `LogProba_2`, score_max.`LogProba_3` AS `LogProba_3`, score_max.`LogProba_4` AS `LogProba_4`, score_max.`LogProba_5` AS `LogProba_5`, score_max.`LogProba_6` AS `LogProba_6`, score_max.`LogProba_7` AS `LogProba_7`, score_max.`LogProba_8` AS `LogProba_8`, score_max.`LogProba_9` AS `LogProba_9`, score_max.`Decision` AS `Decision`, score_max.`DecisionProba` AS `DecisionProba`, score_max.`KEY_m` AS `KEY_m`, score_max.`max_Score` AS `max_Score`, exp(score_max.`Score_0` - score_max.`max_Score`) AS `exp_delta_Score_0`, exp(score_max.`Score_1` - score_max.`max_Score`) AS `exp_delta_Score_1`, exp(score_max.`Score_2` - score_max.`max_Score`) AS `exp_delta_Score_2`, exp(score_max.`Score_3` - score_max.`max_Score`) AS `exp_delta_Score_3`, exp(score_max.`Score_4` - score_max.`max_Score`) AS `exp_delta_Score_4`, exp(score_max.`Score_5` - score_max.`max_Score`) AS `exp_delta_Score_5`, exp(score_max.`Score_6` - score_max.`max_Score`) AS `exp_delta_Score_6`, exp(score_max.`Score_7` - score_max.`max_Score`) AS `exp_delta_Score_7`, exp(score_max.`Score_8` - score_max.`max_Score`) AS `exp_delta_Score_8`, exp(score_max.`Score_9` - score_max.`max_Score`) AS `exp_delta_Score_9` 
FROM score_max), 
score_class_union_soft AS 
(SELECT soft_scu.`KEY` AS `KEY`, soft_scu.class AS class, soft_scu.`exp_delta_Score` AS `exp_delta_Score` 
FROM (SELECT score_soft_max_deltas.`KEY` AS `KEY`, 0 AS class, score_soft_max_deltas.`exp_delta_Score_0` AS `exp_delta_Score` 
FROM score_soft_max_deltas UNION ALL SELECT score_soft_max_deltas.`KEY` AS `KEY`, 1 AS class, score_soft_max_deltas.`exp_delta_Score_1` AS `exp_delta_Score` 
FROM score_soft_max_deltas UNION ALL SELECT score_soft_max_deltas.`KEY` AS `KEY`, 2 AS class, score_soft_max_deltas.`exp_delta_Score_2` AS `exp_delta_Score` 
FROM score_soft_max_deltas UNION ALL SELECT score_soft_max_deltas.`KEY` AS `KEY`, 3 AS class, score_soft_max_deltas.`exp_delta_Score_3` AS `exp_delta_Score` 
FROM score_soft_max_deltas UNION ALL SELECT score_soft_max_deltas.`KEY` AS `KEY`, 4 AS class, score_soft_max_deltas.`exp_delta_Score_4` AS `exp_delta_Score` 
FROM score_soft_max_deltas UNION ALL SELECT score_soft_max_deltas.`KEY` AS `KEY`, 5 AS class, score_soft_max_deltas.`exp_delta_Score_5` AS `exp_delta_Score` 
FROM score_soft_max_deltas UNION ALL SELECT score_soft_max_deltas.`KEY` AS `KEY`, 6 AS class, score_soft_max_deltas.`exp_delta_Score_6` AS `exp_delta_Score` 
FROM score_soft_max_deltas UNION ALL SELECT score_soft_max_deltas.`KEY` AS `KEY`, 7 AS class, score_soft_max_deltas.`exp_delta_Score_7` AS `exp_delta_Score` 
FROM score_soft_max_deltas UNION ALL SELECT score_soft_max_deltas.`KEY` AS `KEY`, 8 AS class, score_soft_max_deltas.`exp_delta_Score_8` AS `exp_delta_Score` 
FROM score_soft_max_deltas UNION ALL SELECT score_soft_max_deltas.`KEY` AS `KEY`, 9 AS class, score_soft_max_deltas.`exp_delta_Score_9` AS `exp_delta_Score` 
FROM score_soft_max_deltas) AS soft_scu), 
score_soft_max AS 
(SELECT score_soft_max_deltas.`KEY` AS `KEY`, score_soft_max_deltas.`Score_0` AS `Score_0`, score_soft_max_deltas.`Score_1` AS `Score_1`, score_soft_max_deltas.`Score_2` AS `Score_2`, score_soft_max_deltas.`Score_3` AS `Score_3`, score_soft_max_deltas.`Score_4` AS `Score_4`, score_soft_max_deltas.`Score_5` AS `Score_5`, score_soft_max_deltas.`Score_6` AS `Score_6`, score_soft_max_deltas.`Score_7` AS `Score_7`, score_soft_max_deltas.`Score_8` AS `Score_8`, score_soft_max_deltas.`Score_9` AS `Score_9`, score_soft_max_deltas.`Proba_0` AS `Proba_0`, score_soft_max_deltas.`Proba_1` AS `Proba_1`, score_soft_max_deltas.`Proba_2` AS `Proba_2`, score_soft_max_deltas.`Proba_3` AS `Proba_3`, score_soft_max_deltas.`Proba_4` AS `Proba_4`, score_soft_max_deltas.`Proba_5` AS `Proba_5`, score_soft_max_deltas.`Proba_6` AS `Proba_6`, score_soft_max_deltas.`Proba_7` AS `Proba_7`, score_soft_max_deltas.`Proba_8` AS `Proba_8`, score_soft_max_deltas.`Proba_9` AS `Proba_9`, score_soft_max_deltas.`LogProba_0` AS `LogProba_0`, score_soft_max_deltas.`LogProba_1` AS `LogProba_1`, score_soft_max_deltas.`LogProba_2` AS `LogProba_2`, score_soft_max_deltas.`LogProba_3` AS `LogProba_3`, score_soft_max_deltas.`LogProba_4` AS `LogProba_4`, score_soft_max_deltas.`LogProba_5` AS `LogProba_5`, score_soft_max_deltas.`LogProba_6` AS `LogProba_6`, score_soft_max_deltas.`LogProba_7` AS `LogProba_7`, score_soft_max_deltas.`LogProba_8` AS `LogProba_8`, score_soft_max_deltas.`LogProba_9` AS `LogProba_9`, score_soft_max_deltas.`Decision` AS `Decision`, score_soft_max_deltas.`DecisionProba` AS `DecisionProba`, score_soft_max_deltas.`KEY_m` AS `KEY_m`, score_soft_max_deltas.`max_Score` AS `max_Score`, score_soft_max_deltas.`exp_delta_Score_0` AS `exp_delta_Score_0`, score_soft_max_deltas.`exp_delta_Score_1` AS `exp_delta_Score_1`, score_soft_max_deltas.`exp_delta_Score_2` AS `exp_delta_Score_2`, score_soft_max_deltas.`exp_delta_Score_3` AS `exp_delta_Score_3`, score_soft_max_deltas.`exp_delta_Score_4` AS `exp_delta_Score_4`, score_soft_max_deltas.`exp_delta_Score_5` AS `exp_delta_Score_5`, score_soft_max_deltas.`exp_delta_Score_6` AS `exp_delta_Score_6`, score_soft_max_deltas.`exp_delta_Score_7` AS `exp_delta_Score_7`, score_soft_max_deltas.`exp_delta_Score_8` AS `exp_delta_Score_8`, score_soft_max_deltas.`exp_delta_Score_9` AS `exp_delta_Score_9`, sum_exp_t.`KEY_sum` AS `KEY_sum`, sum_exp_t.`sum_ExpDeltaScore` AS `sum_ExpDeltaScore` 
FROM score_soft_max_deltas LEFT OUTER JOIN (SELECT score_class_union_soft.`KEY` AS `KEY_sum`, sum(score_class_union_soft.`exp_delta_Score`) AS `sum_ExpDeltaScore` 
FROM score_class_union_soft GROUP BY score_class_union_soft.`KEY`) AS sum_exp_t ON score_soft_max_deltas.`KEY` = sum_exp_t.`KEY_sum`), 
union_with_max AS 
(SELECT score_class_union.`KEY_u` AS `KEY_u`, score_class_union.class AS class, score_class_union.`LogProba` AS `LogProba`, score_class_union.`Proba` AS `Proba`, score_class_union.`Score` AS `Score`, score_soft_max.`KEY` AS `KEY`, score_soft_max.`Score_0` AS `Score_0`, score_soft_max.`Score_1` AS `Score_1`, score_soft_max.`Score_2` AS `Score_2`, score_soft_max.`Score_3` AS `Score_3`, score_soft_max.`Score_4` AS `Score_4`, score_soft_max.`Score_5` AS `Score_5`, score_soft_max.`Score_6` AS `Score_6`, score_soft_max.`Score_7` AS `Score_7`, score_soft_max.`Score_8` AS `Score_8`, score_soft_max.`Score_9` AS `Score_9`, score_soft_max.`Proba_0` AS `Proba_0`, score_soft_max.`Proba_1` AS `Proba_1`, score_soft_max.`Proba_2` AS `Proba_2`, score_soft_max.`Proba_3` AS `Proba_3`, score_soft_max.`Proba_4` AS `Proba_4`, score_soft_max.`Proba_5` AS `Proba_5`, score_soft_max.`Proba_6` AS `Proba_6`, score_soft_max.`Proba_7` AS `Proba_7`, score_soft_max.`Proba_8` AS `Proba_8`, score_soft_max.`Proba_9` AS `Proba_9`, score_soft_max.`LogProba_0` AS `LogProba_0`, score_soft_max.`LogProba_1` AS `LogProba_1`, score_soft_max.`LogProba_2` AS `LogProba_2`, score_soft_max.`LogProba_3` AS `LogProba_3`, score_soft_max.`LogProba_4` AS `LogProba_4`, score_soft_max.`LogProba_5` AS `LogProba_5`, score_soft_max.`LogProba_6` AS `LogProba_6`, score_soft_max.`LogProba_7` AS `LogProba_7`, score_soft_max.`LogProba_8` AS `LogProba_8`, score_soft_max.`LogProba_9` AS `LogProba_9`, score_soft_max.`Decision` AS `Decision`, score_soft_max.`DecisionProba` AS `DecisionProba`, score_soft_max.`KEY_m` AS `KEY_m`, score_soft_max.`max_Score` AS `max_Score`, score_soft_max.`exp_delta_Score_0` AS `exp_delta_Score_0`, score_soft_max.`exp_delta_Score_1` AS `exp_delta_Score_1`, score_soft_max.`exp_delta_Score_2` AS `exp_delta_Score_2`, score_soft_max.`exp_delta_Score_3` AS `exp_delta_Score_3`, score_soft_max.`exp_delta_Score_4` AS `exp_delta_Score_4`, score_soft_max.`exp_delta_Score_5` AS `exp_delta_Score_5`, score_soft_max.`exp_delta_Score_6` AS `exp_delta_Score_6`, score_soft_max.`exp_delta_Score_7` AS `exp_delta_Score_7`, score_soft_max.`exp_delta_Score_8` AS `exp_delta_Score_8`, score_soft_max.`exp_delta_Score_9` AS `exp_delta_Score_9`, score_soft_max.`KEY_sum` AS `KEY_sum`, score_soft_max.`sum_ExpDeltaScore` AS `sum_ExpDeltaScore` 
FROM score_class_union LEFT OUTER JOIN score_soft_max ON score_class_union.`KEY_u` = score_soft_max.`KEY`), 
arg_max_cte AS 
(SELECT score_soft_max.`KEY` AS `KEY`, score_soft_max.`Score_0` AS `Score_0`, score_soft_max.`Score_1` AS `Score_1`, score_soft_max.`Score_2` AS `Score_2`, score_soft_max.`Score_3` AS `Score_3`, score_soft_max.`Score_4` AS `Score_4`, score_soft_max.`Score_5` AS `Score_5`, score_soft_max.`Score_6` AS `Score_6`, score_soft_max.`Score_7` AS `Score_7`, score_soft_max.`Score_8` AS `Score_8`, score_soft_max.`Score_9` AS `Score_9`, score_soft_max.`Proba_0` AS `Proba_0`, score_soft_max.`Proba_1` AS `Proba_1`, score_soft_max.`Proba_2` AS `Proba_2`, score_soft_max.`Proba_3` AS `Proba_3`, score_soft_max.`Proba_4` AS `Proba_4`, score_soft_max.`Proba_5` AS `Proba_5`, score_soft_max.`Proba_6` AS `Proba_6`, score_soft_max.`Proba_7` AS `Proba_7`, score_soft_max.`Proba_8` AS `Proba_8`, score_soft_max.`Proba_9` AS `Proba_9`, score_soft_max.`LogProba_0` AS `LogProba_0`, score_soft_max.`LogProba_1` AS `LogProba_1`, score_soft_max.`LogProba_2` AS `LogProba_2`, score_soft_max.`LogProba_3` AS `LogProba_3`, score_soft_max.`LogProba_4` AS `LogProba_4`, score_soft_max.`LogProba_5` AS `LogProba_5`, score_soft_max.`LogProba_6` AS `LogProba_6`, score_soft_max.`LogProba_7` AS `LogProba_7`, score_soft_max.`LogProba_8` AS `LogProba_8`, score_soft_max.`LogProba_9` AS `LogProba_9`, score_soft_max.`Decision` AS `Decision`, score_soft_max.`DecisionProba` AS `DecisionProba`, score_soft_max.`KEY_m` AS `KEY_m`, score_soft_max.`max_Score` AS `max_Score`, score_soft_max.`exp_delta_Score_0` AS `exp_delta_Score_0`, score_soft_max.`exp_delta_Score_1` AS `exp_delta_Score_1`, score_soft_max.`exp_delta_Score_2` AS `exp_delta_Score_2`, score_soft_max.`exp_delta_Score_3` AS `exp_delta_Score_3`, score_soft_max.`exp_delta_Score_4` AS `exp_delta_Score_4`, score_soft_max.`exp_delta_Score_5` AS `exp_delta_Score_5`, score_soft_max.`exp_delta_Score_6` AS `exp_delta_Score_6`, score_soft_max.`exp_delta_Score_7` AS `exp_delta_Score_7`, score_soft_max.`exp_delta_Score_8` AS `exp_delta_Score_8`, score_soft_max.`exp_delta_Score_9` AS `exp_delta_Score_9`, score_soft_max.`KEY_sum` AS `KEY_sum`, score_soft_max.`sum_ExpDeltaScore` AS `sum_ExpDeltaScore`, `arg_max_t_Score`.`KEY_Score` AS `KEY_Score`, `arg_max_t_Score`.`arg_max_Score` AS `arg_max_Score`, soft_max_comp.`KEY_softmax` AS `KEY_softmax`, soft_max_comp.`SoftProba_0` AS `SoftProba_0`, soft_max_comp.`SoftProba_1` AS `SoftProba_1`, soft_max_comp.`SoftProba_2` AS `SoftProba_2`, soft_max_comp.`SoftProba_3` AS `SoftProba_3`, soft_max_comp.`SoftProba_4` AS `SoftProba_4`, soft_max_comp.`SoftProba_5` AS `SoftProba_5`, soft_max_comp.`SoftProba_6` AS `SoftProba_6`, soft_max_comp.`SoftProba_7` AS `SoftProba_7`, soft_max_comp.`SoftProba_8` AS `SoftProba_8`, soft_max_comp.`SoftProba_9` AS `SoftProba_9` 
FROM score_soft_max LEFT OUTER JOIN (SELECT union_with_max.`KEY` AS `KEY_Score`, min(union_with_max.class) AS `arg_max_Score` 
FROM union_with_max 
WHERE union_with_max.`max_Score` <= union_with_max.`Score` GROUP BY union_with_max.`KEY`) AS `arg_max_t_Score` ON score_soft_max.`KEY` = `arg_max_t_Score`.`KEY_Score` LEFT OUTER JOIN (SELECT score_soft_max.`KEY` AS `KEY_softmax`, score_soft_max.`exp_delta_Score_0` / score_soft_max.`sum_ExpDeltaScore` AS `SoftProba_0`, score_soft_max.`exp_delta_Score_1` / score_soft_max.`sum_ExpDeltaScore` AS `SoftProba_1`, score_soft_max.`exp_delta_Score_2` / score_soft_max.`sum_ExpDeltaScore` AS `SoftProba_2`, score_soft_max.`exp_delta_Score_3` / score_soft_max.`sum_ExpDeltaScore` AS `SoftProba_3`, score_soft_max.`exp_delta_Score_4` / score_soft_max.`sum_ExpDeltaScore` AS `SoftProba_4`, score_soft_max.`exp_delta_Score_5` / score_soft_max.`sum_ExpDeltaScore` AS `SoftProba_5`, score_soft_max.`exp_delta_Score_6` / score_soft_max.`sum_ExpDeltaScore` AS `SoftProba_6`, score_soft_max.`exp_delta_Score_7` / score_soft_max.`sum_ExpDeltaScore` AS `SoftProba_7`, score_soft_max.`exp_delta_Score_8` / score_soft_max.`sum_ExpDeltaScore` AS `SoftProba_8`, score_soft_max.`exp_delta_Score_9` / score_soft_max.`sum_ExpDeltaScore` AS `SoftProba_9` 
FROM score_soft_max) AS soft_max_comp ON soft_max_comp.`KEY_softmax` = `arg_max_t_Score`.`KEY_Score`)
 SELECT arg_max_cte.`KEY` AS `KEY`, NULL AS `Score_0`, NULL AS `Score_1`, NULL AS `Score_2`, NULL AS `Score_3`, NULL AS `Score_4`, NULL AS `Score_5`, NULL AS `Score_6`, NULL AS `Score_7`, NULL AS `Score_8`, NULL AS `Score_9`, arg_max_cte.`SoftProba_0` AS `Proba_0`, arg_max_cte.`SoftProba_1` AS `Proba_1`, arg_max_cte.`SoftProba_2` AS `Proba_2`, arg_max_cte.`SoftProba_3` AS `Proba_3`, arg_max_cte.`SoftProba_4` AS `Proba_4`, arg_max_cte.`SoftProba_5` AS `Proba_5`, arg_max_cte.`SoftProba_6` AS `Proba_6`, arg_max_cte.`SoftProba_7` AS `Proba_7`, arg_max_cte.`SoftProba_8` AS `Proba_8`, arg_max_cte.`SoftProba_9` AS `Proba_9`, CASE WHEN (arg_max_cte.`SoftProba_0` IS NULL OR arg_max_cte.`SoftProba_0` > 0.0) THEN ln(arg_max_cte.`SoftProba_0`) ELSE -1.79769313486231e+308 END AS `LogProba_0`, CASE WHEN (arg_max_cte.`SoftProba_1` IS NULL OR arg_max_cte.`SoftProba_1` > 0.0) THEN ln(arg_max_cte.`SoftProba_1`) ELSE -1.79769313486231e+308 END AS `LogProba_1`, CASE WHEN (arg_max_cte.`SoftProba_2` IS NULL OR arg_max_cte.`SoftProba_2` > 0.0) THEN ln(arg_max_cte.`SoftProba_2`) ELSE -1.79769313486231e+308 END AS `LogProba_2`, CASE WHEN (arg_max_cte.`SoftProba_3` IS NULL OR arg_max_cte.`SoftProba_3` > 0.0) THEN ln(arg_max_cte.`SoftProba_3`) ELSE -1.79769313486231e+308 END AS `LogProba_3`, CASE WHEN (arg_max_cte.`SoftProba_4` IS NULL OR arg_max_cte.`SoftProba_4` > 0.0) THEN ln(arg_max_cte.`SoftProba_4`) ELSE -1.79769313486231e+308 END AS `LogProba_4`, CASE WHEN (arg_max_cte.`SoftProba_5` IS NULL OR arg_max_cte.`SoftProba_5` > 0.0) THEN ln(arg_max_cte.`SoftProba_5`) ELSE -1.79769313486231e+308 END AS `LogProba_5`, CASE WHEN (arg_max_cte.`SoftProba_6` IS NULL OR arg_max_cte.`SoftProba_6` > 0.0) THEN ln(arg_max_cte.`SoftProba_6`) ELSE -1.79769313486231e+308 END AS `LogProba_6`, CASE WHEN (arg_max_cte.`SoftProba_7` IS NULL OR arg_max_cte.`SoftProba_7` > 0.0) THEN ln(arg_max_cte.`SoftProba_7`) ELSE -1.79769313486231e+308 END AS `LogProba_7`, CASE WHEN (arg_max_cte.`SoftProba_8` IS NULL OR arg_max_cte.`SoftProba_8` > 0.0) THEN ln(arg_max_cte.`SoftProba_8`) ELSE -1.79769313486231e+308 END AS `LogProba_8`, CASE WHEN (arg_max_cte.`SoftProba_9` IS NULL OR arg_max_cte.`SoftProba_9` > 0.0) THEN ln(arg_max_cte.`SoftProba_9`) ELSE -1.79769313486231e+308 END AS `LogProba_9`, arg_max_cte.`arg_max_Score` AS `Decision`, CASE WHEN (arg_max_cte.`SoftProba_0` <= CASE WHEN (arg_max_cte.`SoftProba_1` <= CASE WHEN (arg_max_cte.`SoftProba_2` <= CASE WHEN (arg_max_cte.`SoftProba_3` <= CASE WHEN (arg_max_cte.`SoftProba_4` <= CASE WHEN (arg_max_cte.`SoftProba_5` <= CASE WHEN (arg_max_cte.`SoftProba_6` <= CASE WHEN (arg_max_cte.`SoftProba_7` <= CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END) THEN CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END ELSE arg_max_cte.`SoftProba_7` END) THEN CASE WHEN (arg_max_cte.`SoftProba_7` <= CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END) THEN CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END ELSE arg_max_cte.`SoftProba_7` END ELSE arg_max_cte.`SoftProba_6` END) THEN CASE WHEN (arg_max_cte.`SoftProba_6` <= CASE WHEN (arg_max_cte.`SoftProba_7` <= CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END) THEN CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END ELSE arg_max_cte.`SoftProba_7` END) THEN CASE WHEN (arg_max_cte.`SoftProba_7` <= CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END) THEN CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END ELSE arg_max_cte.`SoftProba_7` END ELSE arg_max_cte.`SoftProba_6` END ELSE arg_max_cte.`SoftProba_5` END) THEN CASE WHEN (arg_max_cte.`SoftProba_5` <= CASE WHEN (arg_max_cte.`SoftProba_6` <= CASE WHEN (arg_max_cte.`SoftProba_7` <= CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END) THEN CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END ELSE arg_max_cte.`SoftProba_7` END) THEN CASE WHEN (arg_max_cte.`SoftProba_7` <= CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END) THEN CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END ELSE arg_max_cte.`SoftProba_7` END ELSE arg_max_cte.`SoftProba_6` END) THEN CASE WHEN (arg_max_cte.`SoftProba_6` <= CASE WHEN (arg_max_cte.`SoftProba_7` <= CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END) THEN CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END ELSE arg_max_cte.`SoftProba_7` END) THEN CASE WHEN (arg_max_cte.`SoftProba_7` <= CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END) THEN CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END ELSE arg_max_cte.`SoftProba_7` END ELSE arg_max_cte.`SoftProba_6` END ELSE arg_max_cte.`SoftProba_5` END ELSE arg_max_cte.`SoftProba_4` END) THEN CASE WHEN (arg_max_cte.`SoftProba_4` <= CASE WHEN (arg_max_cte.`SoftProba_5` <= CASE WHEN (arg_max_cte.`SoftProba_6` <= CASE WHEN (arg_max_cte.`SoftProba_7` <= CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END) THEN CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END ELSE arg_max_cte.`SoftProba_7` END) THEN CASE WHEN (arg_max_cte.`SoftProba_7` <= CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END) THEN CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END ELSE arg_max_cte.`SoftProba_7` END ELSE arg_max_cte.`SoftProba_6` END) THEN CASE WHEN (arg_max_cte.`SoftProba_6` <= CASE WHEN (arg_max_cte.`SoftProba_7` <= CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END) THEN CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END ELSE arg_max_cte.`SoftProba_7` END) THEN CASE WHEN (arg_max_cte.`SoftProba_7` <= CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END) THEN CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END ELSE arg_max_cte.`SoftProba_7` END ELSE arg_max_cte.`SoftProba_6` END ELSE arg_max_cte.`SoftProba_5` END) THEN CASE WHEN (arg_max_cte.`SoftProba_5` <= CASE WHEN (arg_max_cte.`SoftProba_6` <= CASE WHEN (arg_max_cte.`SoftProba_7` <= CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END) THEN CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END ELSE arg_max_cte.`SoftProba_7` END) THEN CASE WHEN (arg_max_cte.`SoftProba_7` <= CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END) THEN CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END ELSE arg_max_cte.`SoftProba_7` END ELSE arg_max_cte.`SoftProba_6` END) THEN CASE WHEN (arg_max_cte.`SoftProba_6` <= CASE WHEN (arg_max_cte.`SoftProba_7` <= CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END) THEN CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END ELSE arg_max_cte.`SoftProba_7` END) THEN CASE WHEN (arg_max_cte.`SoftProba_7` <= CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END) THEN CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END ELSE arg_max_cte.`SoftProba_7` END ELSE arg_max_cte.`SoftProba_6` END ELSE arg_max_cte.`SoftProba_5` END ELSE arg_max_cte.`SoftProba_4` END ELSE arg_max_cte.`SoftProba_3` END) THEN CASE WHEN (arg_max_cte.`SoftProba_3` <= CASE WHEN (arg_max_cte.`SoftProba_4` <= CASE WHEN (arg_max_cte.`SoftProba_5` <= CASE WHEN (arg_max_cte.`SoftProba_6` <= CASE WHEN (arg_max_cte.`SoftProba_7` <= CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END) THEN CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END ELSE arg_max_cte.`SoftProba_7` END) THEN CASE WHEN (arg_max_cte.`SoftProba_7` <= CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END) THEN CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END ELSE arg_max_cte.`SoftProba_7` END ELSE arg_max_cte.`SoftProba_6` END) THEN CASE WHEN (arg_max_cte.`SoftProba_6` <= CASE WHEN (arg_max_cte.`SoftProba_7` <= CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END) THEN CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END ELSE arg_max_cte.`SoftProba_7` END) THEN CASE WHEN (arg_max_cte.`SoftProba_7` <= CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END) THEN CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END ELSE arg_max_cte.`SoftProba_7` END ELSE arg_max_cte.`SoftProba_6` END ELSE arg_max_cte.`SoftProba_5` END) THEN CASE WHEN (arg_max_cte.`SoftProba_5` <= CASE WHEN (arg_max_cte.`SoftProba_6` <= CASE WHEN (arg_max_cte.`SoftProba_7` <= CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END) THEN CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END ELSE arg_max_cte.`SoftProba_7` END) THEN CASE WHEN (arg_max_cte.`SoftProba_7` <= CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END) THEN CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END ELSE arg_max_cte.`SoftProba_7` END ELSE arg_max_cte.`SoftProba_6` END) THEN CASE WHEN (arg_max_cte.`SoftProba_6` <= CASE WHEN (arg_max_cte.`SoftProba_7` <= CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END) THEN CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END ELSE arg_max_cte.`SoftProba_7` END) THEN CASE WHEN (arg_max_cte.`SoftProba_7` <= CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END) THEN CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END ELSE arg_max_cte.`SoftProba_7` END ELSE arg_max_cte.`SoftProba_6` END ELSE arg_max_cte.`SoftProba_5` END ELSE arg_max_cte.`SoftProba_4` END) THEN CASE WHEN (arg_max_cte.`SoftProba_4` <= CASE WHEN (arg_max_cte.`SoftProba_5` <= CASE WHEN (arg_max_cte.`SoftProba_6` <= CASE WHEN (arg_max_cte.`SoftProba_7` <= CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END) THEN CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END ELSE arg_max_cte.`SoftProba_7` END) THEN CASE WHEN (arg_max_cte.`SoftProba_7` <= CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END) THEN CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END ELSE arg_max_cte.`SoftProba_7` END ELSE arg_max_cte.`SoftProba_6` END) THEN CASE WHEN (arg_max_cte.`SoftProba_6` <= CASE WHEN (arg_max_cte.`SoftProba_7` <= CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END) THEN CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END ELSE arg_max_cte.`SoftProba_7` END) THEN CASE WHEN (arg_max_cte.`SoftProba_7` <= CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END) THEN CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END ELSE arg_max_cte.`SoftProba_7` END ELSE arg_max_cte.`SoftProba_6` END ELSE arg_max_cte.`SoftProba_5` END) THEN CASE WHEN (arg_max_cte.`SoftProba_5` <= CASE WHEN (arg_max_cte.`SoftProba_6` <= CASE WHEN (arg_max_cte.`SoftProba_7` <= CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END) THEN CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END ELSE arg_max_cte.`SoftProba_7` END) THEN CASE WHEN (arg_max_cte.`SoftProba_7` <= CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END) THEN CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END ELSE arg_max_cte.`SoftProba_7` END ELSE arg_max_cte.`SoftProba_6` END) THEN CASE WHEN (arg_max_cte.`SoftProba_6` <= CASE WHEN (arg_max_cte.`SoftProba_7` <= CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END) THEN CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END ELSE arg_max_cte.`SoftProba_7` END) THEN CASE WHEN (arg_max_cte.`SoftProba_7` <= CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END) THEN CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END ELSE arg_max_cte.`SoftProba_7` END ELSE arg_max_cte.`SoftProba_6` END ELSE arg_max_cte.`SoftProba_5` END ELSE arg_max_cte.`SoftProba_4` END ELSE arg_max_cte.`SoftProba_3` END ELSE arg_max_cte.`SoftProba_2` END) THEN CASE WHEN (arg_max_cte.`SoftProba_2` <= CASE WHEN (arg_max_cte.`SoftProba_3` <= CASE WHEN (arg_max_cte.`SoftProba_4` <= CASE WHEN (arg_max_cte.`SoftProba_5` <= CASE WHEN (arg_max_cte.`SoftProba_6` <= CASE WHEN (arg_max_cte.`SoftProba_7` <= CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END) THEN CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END ELSE arg_max_cte.`SoftProba_7` END) THEN CASE WHEN (arg_max_cte.`SoftProba_7` <= CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END) THEN CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END ELSE arg_max_cte.`SoftProba_7` END ELSE arg_max_cte.`SoftProba_6` END) THEN CASE WHEN (arg_max_cte.`SoftProba_6` <= CASE WHEN (arg_max_cte.`SoftProba_7` <= CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END) THEN CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END ELSE arg_max_cte.`SoftProba_7` END) THEN CASE WHEN (arg_max_cte.`SoftProba_7` <= CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END) THEN CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END ELSE arg_max_cte.`SoftProba_7` END ELSE arg_max_cte.`SoftProba_6` END ELSE arg_max_cte.`SoftProba_5` END) THEN CASE WHEN (arg_max_cte.`SoftProba_5` <= CASE WHEN (arg_max_cte.`SoftProba_6` <= CASE WHEN (arg_max_cte.`SoftProba_7` <= CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END) THEN CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END ELSE arg_max_cte.`SoftProba_7` END) THEN CASE WHEN (arg_max_cte.`SoftProba_7` <= CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END) THEN CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END ELSE arg_max_cte.`SoftProba_7` END ELSE arg_max_cte.`SoftProba_6` END) THEN CASE WHEN (arg_max_cte.`SoftProba_6` <= CASE WHEN (arg_max_cte.`SoftProba_7` <= CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END) THEN CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END ELSE arg_max_cte.`SoftProba_7` END) THEN CASE WHEN (arg_max_cte.`SoftProba_7` <= CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END) THEN CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END ELSE arg_max_cte.`SoftProba_7` END ELSE arg_max_cte.`SoftProba_6` END ELSE arg_max_cte.`SoftProba_5` END ELSE arg_max_cte.`SoftProba_4` END) THEN CASE WHEN (arg_max_cte.`SoftProba_4` <= CASE WHEN (arg_max_cte.`SoftProba_5` <= CASE WHEN (arg_max_cte.`SoftProba_6` <= CASE WHEN (arg_max_cte.`SoftProba_7` <= CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END) THEN CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END ELSE arg_max_cte.`SoftProba_7` END) THEN CASE WHEN (arg_max_cte.`SoftProba_7` <= CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END) THEN CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END ELSE arg_max_cte.`SoftProba_7` END ELSE arg_max_cte.`SoftProba_6` END) THEN CASE WHEN (arg_max_cte.`SoftProba_6` <= CASE WHEN (arg_max_cte.`SoftProba_7` <= CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END) THEN CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END ELSE arg_max_cte.`SoftProba_7` END) THEN CASE WHEN (arg_max_cte.`SoftProba_7` <= CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END) THEN CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END ELSE arg_max_cte.`SoftProba_7` END ELSE arg_max_cte.`SoftProba_6` END ELSE arg_max_cte.`SoftProba_5` END) THEN CASE WHEN (arg_max_cte.`SoftProba_5` <= CASE WHEN (arg_max_cte.`SoftProba_6` <= CASE WHEN (arg_max_cte.`SoftProba_7` <= CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END) THEN CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END ELSE arg_max_cte.`SoftProba_7` END) THEN CASE WHEN (arg_max_cte.`SoftProba_7` <= CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END) THEN CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END ELSE arg_max_cte.`SoftProba_7` END ELSE arg_max_cte.`SoftProba_6` END) THEN CASE WHEN (arg_max_cte.`SoftProba_6` <= CASE WHEN (arg_max_cte.`SoftProba_7` <= CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END) THEN CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END ELSE arg_max_cte.`SoftProba_7` END) THEN CASE WHEN (arg_max_cte.`SoftProba_7` <= CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END) THEN CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END ELSE arg_max_cte.`SoftProba_7` END ELSE arg_max_cte.`SoftProba_6` END ELSE arg_max_cte.`SoftProba_5` END ELSE arg_max_cte.`SoftProba_4` END ELSE arg_max_cte.`SoftProba_3` END) THEN CASE WHEN (arg_max_cte.`SoftProba_3` <= CASE WHEN (arg_max_cte.`SoftProba_4` <= CASE WHEN (arg_max_cte.`SoftProba_5` <= CASE WHEN (arg_max_cte.`SoftProba_6` <= CASE WHEN (arg_max_cte.`SoftProba_7` <= CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END) THEN CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END ELSE arg_max_cte.`SoftProba_7` END) THEN CASE WHEN (arg_max_cte.`SoftProba_7` <= CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END) THEN CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END ELSE arg_max_cte.`SoftProba_7` END ELSE arg_max_cte.`SoftProba_6` END) THEN CASE WHEN (arg_max_cte.`SoftProba_6` <= CASE WHEN (arg_max_cte.`SoftProba_7` <= CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END) THEN CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END ELSE arg_max_cte.`SoftProba_7` END) THEN CASE WHEN (arg_max_cte.`SoftProba_7` <= CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END) THEN CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END ELSE arg_max_cte.`SoftProba_7` END ELSE arg_max_cte.`SoftProba_6` END ELSE arg_max_cte.`SoftProba_5` END) THEN CASE WHEN (arg_max_cte.`SoftProba_5` <= CASE WHEN (arg_max_cte.`SoftProba_6` <= CASE WHEN (arg_max_cte.`SoftProba_7` <= CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END) THEN CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END ELSE arg_max_cte.`SoftProba_7` END) THEN CASE WHEN (arg_max_cte.`SoftProba_7` <= CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END) THEN CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END ELSE arg_max_cte.`SoftProba_7` END ELSE arg_max_cte.`SoftProba_6` END) THEN CASE WHEN (arg_max_cte.`SoftProba_6` <= CASE WHEN (arg_max_cte.`SoftProba_7` <= CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END) THEN CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END ELSE arg_max_cte.`SoftProba_7` END) THEN CASE WHEN (arg_max_cte.`SoftProba_7` <= CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END) THEN CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END ELSE arg_max_cte.`SoftProba_7` END ELSE arg_max_cte.`SoftProba_6` END ELSE arg_max_cte.`SoftProba_5` END ELSE arg_max_cte.`SoftProba_4` END) THEN CASE WHEN (arg_max_cte.`SoftProba_4` <= CASE WHEN (arg_max_cte.`SoftProba_5` <= CASE WHEN (arg_max_cte.`SoftProba_6` <= CASE WHEN (arg_max_cte.`SoftProba_7` <= CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END) THEN CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END ELSE arg_max_cte.`SoftProba_7` END) THEN CASE WHEN (arg_max_cte.`SoftProba_7` <= CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END) THEN CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END ELSE arg_max_cte.`SoftProba_7` END ELSE arg_max_cte.`SoftProba_6` END) THEN CASE WHEN (arg_max_cte.`SoftProba_6` <= CASE WHEN (arg_max_cte.`SoftProba_7` <= CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END) THEN CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END ELSE arg_max_cte.`SoftProba_7` END) THEN CASE WHEN (arg_max_cte.`SoftProba_7` <= CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END) THEN CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END ELSE arg_max_cte.`SoftProba_7` END ELSE arg_max_cte.`SoftProba_6` END ELSE arg_max_cte.`SoftProba_5` END) THEN CASE WHEN (arg_max_cte.`SoftProba_5` <= CASE WHEN (arg_max_cte.`SoftProba_6` <= CASE WHEN (arg_max_cte.`SoftProba_7` <= CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END) THEN CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END ELSE arg_max_cte.`SoftProba_7` END) THEN CASE WHEN (arg_max_cte.`SoftProba_7` <= CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END) THEN CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END ELSE arg_max_cte.`SoftProba_7` END ELSE arg_max_cte.`SoftProba_6` END) THEN CASE WHEN (arg_max_cte.`SoftProba_6` <= CASE WHEN (arg_max_cte.`SoftProba_7` <= CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END) THEN CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END ELSE arg_max_cte.`SoftProba_7` END) THEN CASE WHEN (arg_max_cte.`SoftProba_7` <= CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END) THEN CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END ELSE arg_max_cte.`SoftProba_7` END ELSE arg_max_cte.`SoftProba_6` END ELSE arg_max_cte.`SoftProba_5` END ELSE arg_max_cte.`SoftProba_4` END ELSE arg_max_cte.`SoftProba_3` END ELSE arg_max_cte.`SoftProba_2` END ELSE arg_max_cte.`SoftProba_1` END) THEN CASE WHEN (arg_max_cte.`SoftProba_1` <= CASE WHEN (arg_max_cte.`SoftProba_2` <= CASE WHEN (arg_max_cte.`SoftProba_3` <= CASE WHEN (arg_max_cte.`SoftProba_4` <= CASE WHEN (arg_max_cte.`SoftProba_5` <= CASE WHEN (arg_max_cte.`SoftProba_6` <= CASE WHEN (arg_max_cte.`SoftProba_7` <= CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END) THEN CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END ELSE arg_max_cte.`SoftProba_7` END) THEN CASE WHEN (arg_max_cte.`SoftProba_7` <= CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END) THEN CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END ELSE arg_max_cte.`SoftProba_7` END ELSE arg_max_cte.`SoftProba_6` END) THEN CASE WHEN (arg_max_cte.`SoftProba_6` <= CASE WHEN (arg_max_cte.`SoftProba_7` <= CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END) THEN CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END ELSE arg_max_cte.`SoftProba_7` END) THEN CASE WHEN (arg_max_cte.`SoftProba_7` <= CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END) THEN CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END ELSE arg_max_cte.`SoftProba_7` END ELSE arg_max_cte.`SoftProba_6` END ELSE arg_max_cte.`SoftProba_5` END) THEN CASE WHEN (arg_max_cte.`SoftProba_5` <= CASE WHEN (arg_max_cte.`SoftProba_6` <= CASE WHEN (arg_max_cte.`SoftProba_7` <= CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END) THEN CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END ELSE arg_max_cte.`SoftProba_7` END) THEN CASE WHEN (arg_max_cte.`SoftProba_7` <= CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END) THEN CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END ELSE arg_max_cte.`SoftProba_7` END ELSE arg_max_cte.`SoftProba_6` END) THEN CASE WHEN (arg_max_cte.`SoftProba_6` <= CASE WHEN (arg_max_cte.`SoftProba_7` <= CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END) THEN CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END ELSE arg_max_cte.`SoftProba_7` END) THEN CASE WHEN (arg_max_cte.`SoftProba_7` <= CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END) THEN CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END ELSE arg_max_cte.`SoftProba_7` END ELSE arg_max_cte.`SoftProba_6` END ELSE arg_max_cte.`SoftProba_5` END ELSE arg_max_cte.`SoftProba_4` END) THEN CASE WHEN (arg_max_cte.`SoftProba_4` <= CASE WHEN (arg_max_cte.`SoftProba_5` <= CASE WHEN (arg_max_cte.`SoftProba_6` <= CASE WHEN (arg_max_cte.`SoftProba_7` <= CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END) THEN CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END ELSE arg_max_cte.`SoftProba_7` END) THEN CASE WHEN (arg_max_cte.`SoftProba_7` <= CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END) THEN CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END ELSE arg_max_cte.`SoftProba_7` END ELSE arg_max_cte.`SoftProba_6` END) THEN CASE WHEN (arg_max_cte.`SoftProba_6` <= CASE WHEN (arg_max_cte.`SoftProba_7` <= CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END) THEN CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END ELSE arg_max_cte.`SoftProba_7` END) THEN CASE WHEN (arg_max_cte.`SoftProba_7` <= CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END) THEN CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END ELSE arg_max_cte.`SoftProba_7` END ELSE arg_max_cte.`SoftProba_6` END ELSE arg_max_cte.`SoftProba_5` END) THEN CASE WHEN (arg_max_cte.`SoftProba_5` <= CASE WHEN (arg_max_cte.`SoftProba_6` <= CASE WHEN (arg_max_cte.`SoftProba_7` <= CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END) THEN CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END ELSE arg_max_cte.`SoftProba_7` END) THEN CASE WHEN (arg_max_cte.`SoftProba_7` <= CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END) THEN CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END ELSE arg_max_cte.`SoftProba_7` END ELSE arg_max_cte.`SoftProba_6` END) THEN CASE WHEN (arg_max_cte.`SoftProba_6` <= CASE WHEN (arg_max_cte.`SoftProba_7` <= CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END) THEN CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END ELSE arg_max_cte.`SoftProba_7` END) THEN CASE WHEN (arg_max_cte.`SoftProba_7` <= CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END) THEN CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END ELSE arg_max_cte.`SoftProba_7` END ELSE arg_max_cte.`SoftProba_6` END ELSE arg_max_cte.`SoftProba_5` END ELSE arg_max_cte.`SoftProba_4` END ELSE arg_max_cte.`SoftProba_3` END) THEN CASE WHEN (arg_max_cte.`SoftProba_3` <= CASE WHEN (arg_max_cte.`SoftProba_4` <= CASE WHEN (arg_max_cte.`SoftProba_5` <= CASE WHEN (arg_max_cte.`SoftProba_6` <= CASE WHEN (arg_max_cte.`SoftProba_7` <= CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END) THEN CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END ELSE arg_max_cte.`SoftProba_7` END) THEN CASE WHEN (arg_max_cte.`SoftProba_7` <= CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END) THEN CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END ELSE arg_max_cte.`SoftProba_7` END ELSE arg_max_cte.`SoftProba_6` END) THEN CASE WHEN (arg_max_cte.`SoftProba_6` <= CASE WHEN (arg_max_cte.`SoftProba_7` <= CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END) THEN CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END ELSE arg_max_cte.`SoftProba_7` END) THEN CASE WHEN (arg_max_cte.`SoftProba_7` <= CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END) THEN CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END ELSE arg_max_cte.`SoftProba_7` END ELSE arg_max_cte.`SoftProba_6` END ELSE arg_max_cte.`SoftProba_5` END) THEN CASE WHEN (arg_max_cte.`SoftProba_5` <= CASE WHEN (arg_max_cte.`SoftProba_6` <= CASE WHEN (arg_max_cte.`SoftProba_7` <= CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END) THEN CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END ELSE arg_max_cte.`SoftProba_7` END) THEN CASE WHEN (arg_max_cte.`SoftProba_7` <= CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END) THEN CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END ELSE arg_max_cte.`SoftProba_7` END ELSE arg_max_cte.`SoftProba_6` END) THEN CASE WHEN (arg_max_cte.`SoftProba_6` <= CASE WHEN (arg_max_cte.`SoftProba_7` <= CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END) THEN CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END ELSE arg_max_cte.`SoftProba_7` END) THEN CASE WHEN (arg_max_cte.`SoftProba_7` <= CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END) THEN CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END ELSE arg_max_cte.`SoftProba_7` END ELSE arg_max_cte.`SoftProba_6` END ELSE arg_max_cte.`SoftProba_5` END ELSE arg_max_cte.`SoftProba_4` END) THEN CASE WHEN (arg_max_cte.`SoftProba_4` <= CASE WHEN (arg_max_cte.`SoftProba_5` <= CASE WHEN (arg_max_cte.`SoftProba_6` <= CASE WHEN (arg_max_cte.`SoftProba_7` <= CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END) THEN CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END ELSE arg_max_cte.`SoftProba_7` END) THEN CASE WHEN (arg_max_cte.`SoftProba_7` <= CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END) THEN CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END ELSE arg_max_cte.`SoftProba_7` END ELSE arg_max_cte.`SoftProba_6` END) THEN CASE WHEN (arg_max_cte.`SoftProba_6` <= CASE WHEN (arg_max_cte.`SoftProba_7` <= CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END) THEN CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END ELSE arg_max_cte.`SoftProba_7` END) THEN CASE WHEN (arg_max_cte.`SoftProba_7` <= CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END) THEN CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END ELSE arg_max_cte.`SoftProba_7` END ELSE arg_max_cte.`SoftProba_6` END ELSE arg_max_cte.`SoftProba_5` END) THEN CASE WHEN (arg_max_cte.`SoftProba_5` <= CASE WHEN (arg_max_cte.`SoftProba_6` <= CASE WHEN (arg_max_cte.`SoftProba_7` <= CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END) THEN CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END ELSE arg_max_cte.`SoftProba_7` END) THEN CASE WHEN (arg_max_cte.`SoftProba_7` <= CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END) THEN CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END ELSE arg_max_cte.`SoftProba_7` END ELSE arg_max_cte.`SoftProba_6` END) THEN CASE WHEN (arg_max_cte.`SoftProba_6` <= CASE WHEN (arg_max_cte.`SoftProba_7` <= CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END) THEN CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END ELSE arg_max_cte.`SoftProba_7` END) THEN CASE WHEN (arg_max_cte.`SoftProba_7` <= CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END) THEN CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END ELSE arg_max_cte.`SoftProba_7` END ELSE arg_max_cte.`SoftProba_6` END ELSE arg_max_cte.`SoftProba_5` END ELSE arg_max_cte.`SoftProba_4` END ELSE arg_max_cte.`SoftProba_3` END ELSE arg_max_cte.`SoftProba_2` END) THEN CASE WHEN (arg_max_cte.`SoftProba_2` <= CASE WHEN (arg_max_cte.`SoftProba_3` <= CASE WHEN (arg_max_cte.`SoftProba_4` <= CASE WHEN (arg_max_cte.`SoftProba_5` <= CASE WHEN (arg_max_cte.`SoftProba_6` <= CASE WHEN (arg_max_cte.`SoftProba_7` <= CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END) THEN CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END ELSE arg_max_cte.`SoftProba_7` END) THEN CASE WHEN (arg_max_cte.`SoftProba_7` <= CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END) THEN CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END ELSE arg_max_cte.`SoftProba_7` END ELSE arg_max_cte.`SoftProba_6` END) THEN CASE WHEN (arg_max_cte.`SoftProba_6` <= CASE WHEN (arg_max_cte.`SoftProba_7` <= CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END) THEN CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END ELSE arg_max_cte.`SoftProba_7` END) THEN CASE WHEN (arg_max_cte.`SoftProba_7` <= CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END) THEN CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END ELSE arg_max_cte.`SoftProba_7` END ELSE arg_max_cte.`SoftProba_6` END ELSE arg_max_cte.`SoftProba_5` END) THEN CASE WHEN (arg_max_cte.`SoftProba_5` <= CASE WHEN (arg_max_cte.`SoftProba_6` <= CASE WHEN (arg_max_cte.`SoftProba_7` <= CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END) THEN CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END ELSE arg_max_cte.`SoftProba_7` END) THEN CASE WHEN (arg_max_cte.`SoftProba_7` <= CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END) THEN CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END ELSE arg_max_cte.`SoftProba_7` END ELSE arg_max_cte.`SoftProba_6` END) THEN CASE WHEN (arg_max_cte.`SoftProba_6` <= CASE WHEN (arg_max_cte.`SoftProba_7` <= CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END) THEN CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END ELSE arg_max_cte.`SoftProba_7` END) THEN CASE WHEN (arg_max_cte.`SoftProba_7` <= CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END) THEN CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END ELSE arg_max_cte.`SoftProba_7` END ELSE arg_max_cte.`SoftProba_6` END ELSE arg_max_cte.`SoftProba_5` END ELSE arg_max_cte.`SoftProba_4` END) THEN CASE WHEN (arg_max_cte.`SoftProba_4` <= CASE WHEN (arg_max_cte.`SoftProba_5` <= CASE WHEN (arg_max_cte.`SoftProba_6` <= CASE WHEN (arg_max_cte.`SoftProba_7` <= CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END) THEN CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END ELSE arg_max_cte.`SoftProba_7` END) THEN CASE WHEN (arg_max_cte.`SoftProba_7` <= CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END) THEN CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END ELSE arg_max_cte.`SoftProba_7` END ELSE arg_max_cte.`SoftProba_6` END) THEN CASE WHEN (arg_max_cte.`SoftProba_6` <= CASE WHEN (arg_max_cte.`SoftProba_7` <= CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END) THEN CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END ELSE arg_max_cte.`SoftProba_7` END) THEN CASE WHEN (arg_max_cte.`SoftProba_7` <= CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END) THEN CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END ELSE arg_max_cte.`SoftProba_7` END ELSE arg_max_cte.`SoftProba_6` END ELSE arg_max_cte.`SoftProba_5` END) THEN CASE WHEN (arg_max_cte.`SoftProba_5` <= CASE WHEN (arg_max_cte.`SoftProba_6` <= CASE WHEN (arg_max_cte.`SoftProba_7` <= CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END) THEN CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END ELSE arg_max_cte.`SoftProba_7` END) THEN CASE WHEN (arg_max_cte.`SoftProba_7` <= CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END) THEN CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END ELSE arg_max_cte.`SoftProba_7` END ELSE arg_max_cte.`SoftProba_6` END) THEN CASE WHEN (arg_max_cte.`SoftProba_6` <= CASE WHEN (arg_max_cte.`SoftProba_7` <= CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END) THEN CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END ELSE arg_max_cte.`SoftProba_7` END) THEN CASE WHEN (arg_max_cte.`SoftProba_7` <= CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END) THEN CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END ELSE arg_max_cte.`SoftProba_7` END ELSE arg_max_cte.`SoftProba_6` END ELSE arg_max_cte.`SoftProba_5` END ELSE arg_max_cte.`SoftProba_4` END ELSE arg_max_cte.`SoftProba_3` END) THEN CASE WHEN (arg_max_cte.`SoftProba_3` <= CASE WHEN (arg_max_cte.`SoftProba_4` <= CASE WHEN (arg_max_cte.`SoftProba_5` <= CASE WHEN (arg_max_cte.`SoftProba_6` <= CASE WHEN (arg_max_cte.`SoftProba_7` <= CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END) THEN CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END ELSE arg_max_cte.`SoftProba_7` END) THEN CASE WHEN (arg_max_cte.`SoftProba_7` <= CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END) THEN CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END ELSE arg_max_cte.`SoftProba_7` END ELSE arg_max_cte.`SoftProba_6` END) THEN CASE WHEN (arg_max_cte.`SoftProba_6` <= CASE WHEN (arg_max_cte.`SoftProba_7` <= CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END) THEN CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END ELSE arg_max_cte.`SoftProba_7` END) THEN CASE WHEN (arg_max_cte.`SoftProba_7` <= CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END) THEN CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END ELSE arg_max_cte.`SoftProba_7` END ELSE arg_max_cte.`SoftProba_6` END ELSE arg_max_cte.`SoftProba_5` END) THEN CASE WHEN (arg_max_cte.`SoftProba_5` <= CASE WHEN (arg_max_cte.`SoftProba_6` <= CASE WHEN (arg_max_cte.`SoftProba_7` <= CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END) THEN CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END ELSE arg_max_cte.`SoftProba_7` END) THEN CASE WHEN (arg_max_cte.`SoftProba_7` <= CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END) THEN CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END ELSE arg_max_cte.`SoftProba_7` END ELSE arg_max_cte.`SoftProba_6` END) THEN CASE WHEN (arg_max_cte.`SoftProba_6` <= CASE WHEN (arg_max_cte.`SoftProba_7` <= CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END) THEN CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END ELSE arg_max_cte.`SoftProba_7` END) THEN CASE WHEN (arg_max_cte.`SoftProba_7` <= CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END) THEN CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END ELSE arg_max_cte.`SoftProba_7` END ELSE arg_max_cte.`SoftProba_6` END ELSE arg_max_cte.`SoftProba_5` END ELSE arg_max_cte.`SoftProba_4` END) THEN CASE WHEN (arg_max_cte.`SoftProba_4` <= CASE WHEN (arg_max_cte.`SoftProba_5` <= CASE WHEN (arg_max_cte.`SoftProba_6` <= CASE WHEN (arg_max_cte.`SoftProba_7` <= CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END) THEN CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END ELSE arg_max_cte.`SoftProba_7` END) THEN CASE WHEN (arg_max_cte.`SoftProba_7` <= CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END) THEN CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END ELSE arg_max_cte.`SoftProba_7` END ELSE arg_max_cte.`SoftProba_6` END) THEN CASE WHEN (arg_max_cte.`SoftProba_6` <= CASE WHEN (arg_max_cte.`SoftProba_7` <= CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END) THEN CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END ELSE arg_max_cte.`SoftProba_7` END) THEN CASE WHEN (arg_max_cte.`SoftProba_7` <= CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END) THEN CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END ELSE arg_max_cte.`SoftProba_7` END ELSE arg_max_cte.`SoftProba_6` END ELSE arg_max_cte.`SoftProba_5` END) THEN CASE WHEN (arg_max_cte.`SoftProba_5` <= CASE WHEN (arg_max_cte.`SoftProba_6` <= CASE WHEN (arg_max_cte.`SoftProba_7` <= CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END) THEN CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END ELSE arg_max_cte.`SoftProba_7` END) THEN CASE WHEN (arg_max_cte.`SoftProba_7` <= CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END) THEN CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END ELSE arg_max_cte.`SoftProba_7` END ELSE arg_max_cte.`SoftProba_6` END) THEN CASE WHEN (arg_max_cte.`SoftProba_6` <= CASE WHEN (arg_max_cte.`SoftProba_7` <= CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END) THEN CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END ELSE arg_max_cte.`SoftProba_7` END) THEN CASE WHEN (arg_max_cte.`SoftProba_7` <= CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END) THEN CASE WHEN (arg_max_cte.`SoftProba_8` <= arg_max_cte.`SoftProba_9`) THEN arg_max_cte.`SoftProba_9` ELSE arg_max_cte.`SoftProba_8` END ELSE arg_max_cte.`SoftProba_7` END ELSE arg_max_cte.`SoftProba_6` END ELSE arg_max_cte.`SoftProba_5` END ELSE arg_max_cte.`SoftProba_4` END ELSE arg_max_cte.`SoftProba_3` END ELSE arg_max_cte.`SoftProba_2` END ELSE arg_max_cte.`SoftProba_1` END ELSE arg_max_cte.`SoftProba_0` END AS `DecisionProba` 
FROM arg_max_cte