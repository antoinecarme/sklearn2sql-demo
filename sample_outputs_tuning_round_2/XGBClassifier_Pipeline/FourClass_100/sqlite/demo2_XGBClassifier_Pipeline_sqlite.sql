-- This SQL code was generated by sklearn2sql (development version).
-- Copyright 2017

WITH "Score_Union_CTE_0" AS 
(WITH "ADS_imp_1_OUT" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_0" IS NULL) THEN 0.00653574012116 ELSE "ADS"."Feature_0" END AS impter_2, CASE WHEN ("ADS"."Feature_1" IS NULL) THEN 0.16767827126 ELSE "ADS"."Feature_1" END AS impter_3, CASE WHEN ("ADS"."Feature_2" IS NULL) THEN -0.0551470417358 ELSE "ADS"."Feature_2" END AS impter_4, CASE WHEN ("ADS"."Feature_3" IS NULL) THEN 0.00152116930519 ELSE "ADS"."Feature_3" END AS impter_5, CASE WHEN ("ADS"."Feature_4" IS NULL) THEN 0.0314276019104 ELSE "ADS"."Feature_4" END AS impter_6, CASE WHEN ("ADS"."Feature_5" IS NULL) THEN 0.0261796831787 ELSE "ADS"."Feature_5" END AS impter_7, CASE WHEN ("ADS"."Feature_6" IS NULL) THEN -0.0112547131221 ELSE "ADS"."Feature_6" END AS impter_8, CASE WHEN ("ADS"."Feature_7" IS NULL) THEN -0.0168862118009 ELSE "ADS"."Feature_7" END AS impter_9, CASE WHEN ("ADS"."Feature_8" IS NULL) THEN -0.0273427029645 ELSE "ADS"."Feature_8" END AS impter_10, CASE WHEN ("ADS"."Feature_9" IS NULL) THEN -0.163701278848 ELSE "ADS"."Feature_9" END AS impter_11, CASE WHEN ("ADS"."Feature_10" IS NULL) THEN 0.0354122507389 ELSE "ADS"."Feature_10" END AS impter_12, CASE WHEN ("ADS"."Feature_11" IS NULL) THEN -0.0285291234756 ELSE "ADS"."Feature_11" END AS impter_13, CASE WHEN ("ADS"."Feature_12" IS NULL) THEN -0.0267494449896 ELSE "ADS"."Feature_12" END AS impter_14, CASE WHEN ("ADS"."Feature_13" IS NULL) THEN 0.386019822911 ELSE "ADS"."Feature_13" END AS impter_15, CASE WHEN ("ADS"."Feature_14" IS NULL) THEN 0.0162145257314 ELSE "ADS"."Feature_14" END AS impter_16, CASE WHEN ("ADS"."Feature_15" IS NULL) THEN 0.227237750778 ELSE "ADS"."Feature_15" END AS impter_17, CASE WHEN ("ADS"."Feature_16" IS NULL) THEN 0.566373456694 ELSE "ADS"."Feature_16" END AS impter_18, CASE WHEN ("ADS"."Feature_17" IS NULL) THEN 0.277696410616 ELSE "ADS"."Feature_17" END AS impter_19, CASE WHEN ("ADS"."Feature_18" IS NULL) THEN 0.00599432681235 ELSE "ADS"."Feature_18" END AS impter_20, CASE WHEN ("ADS"."Feature_19" IS NULL) THEN -0.0218525344697 ELSE "ADS"."Feature_19" END AS impter_21, CASE WHEN ("ADS"."Feature_20" IS NULL) THEN -0.028375425917 ELSE "ADS"."Feature_20" END AS impter_22, CASE WHEN ("ADS"."Feature_21" IS NULL) THEN 0.0151643232963 ELSE "ADS"."Feature_21" END AS impter_23, CASE WHEN ("ADS"."Feature_22" IS NULL) THEN 0.0174691345488 ELSE "ADS"."Feature_22" END AS impter_24, CASE WHEN ("ADS"."Feature_23" IS NULL) THEN 0.0349390944943 ELSE "ADS"."Feature_23" END AS impter_25, CASE WHEN ("ADS"."Feature_24" IS NULL) THEN -0.144361607634 ELSE "ADS"."Feature_24" END AS impter_26, CASE WHEN ("ADS"."Feature_25" IS NULL) THEN 0.146104677444 ELSE "ADS"."Feature_25" END AS impter_27, CASE WHEN ("ADS"."Feature_26" IS NULL) THEN 0.0676158423738 ELSE "ADS"."Feature_26" END AS impter_28, CASE WHEN ("ADS"."Feature_27" IS NULL) THEN -0.30836845608 ELSE "ADS"."Feature_27" END AS impter_29, CASE WHEN ("ADS"."Feature_28" IS NULL) THEN 0.952575301761 ELSE "ADS"."Feature_28" END AS impter_30, CASE WHEN ("ADS"."Feature_29" IS NULL) THEN -0.0581338391011 ELSE "ADS"."Feature_29" END AS impter_31, CASE WHEN ("ADS"."Feature_30" IS NULL) THEN -0.0131244127149 ELSE "ADS"."Feature_30" END AS impter_32, CASE WHEN ("ADS"."Feature_31" IS NULL) THEN -0.337551254331 ELSE "ADS"."Feature_31" END AS impter_33, CASE WHEN ("ADS"."Feature_32" IS NULL) THEN 0.0390265145932 ELSE "ADS"."Feature_32" END AS impter_34, CASE WHEN ("ADS"."Feature_33" IS NULL) THEN -0.0402939442132 ELSE "ADS"."Feature_33" END AS impter_35, CASE WHEN ("ADS"."Feature_34" IS NULL) THEN -0.171611885737 ELSE "ADS"."Feature_34" END AS impter_36, CASE WHEN ("ADS"."Feature_35" IS NULL) THEN 0.0126477868686 ELSE "ADS"."Feature_35" END AS impter_37, CASE WHEN ("ADS"."Feature_36" IS NULL) THEN 0.00519373530851 ELSE "ADS"."Feature_36" END AS impter_38, CASE WHEN ("ADS"."Feature_37" IS NULL) THEN -0.0171608765769 ELSE "ADS"."Feature_37" END AS impter_39, CASE WHEN ("ADS"."Feature_38" IS NULL) THEN 0.0450361559979 ELSE "ADS"."Feature_38" END AS impter_40, CASE WHEN ("ADS"."Feature_39" IS NULL) THEN -0.120358200226 ELSE "ADS"."Feature_39" END AS impter_41, CASE WHEN ("ADS"."Feature_40" IS NULL) THEN -0.176403922822 ELSE "ADS"."Feature_40" END AS impter_42, CASE WHEN ("ADS"."Feature_41" IS NULL) THEN -0.015157075927 ELSE "ADS"."Feature_41" END AS impter_43, CASE WHEN ("ADS"."Feature_42" IS NULL) THEN -0.306874019058 ELSE "ADS"."Feature_42" END AS impter_44, CASE WHEN ("ADS"."Feature_43" IS NULL) THEN -0.0403545806931 ELSE "ADS"."Feature_43" END AS impter_45, CASE WHEN ("ADS"."Feature_44" IS NULL) THEN -0.0078998151246 ELSE "ADS"."Feature_44" END AS impter_46, CASE WHEN ("ADS"."Feature_45" IS NULL) THEN 0.00264793225417 ELSE "ADS"."Feature_45" END AS impter_47, CASE WHEN ("ADS"."Feature_46" IS NULL) THEN -0.149210845983 ELSE "ADS"."Feature_46" END AS impter_48, CASE WHEN ("ADS"."Feature_47" IS NULL) THEN 0.248953992369 ELSE "ADS"."Feature_47" END AS impter_49, CASE WHEN ("ADS"."Feature_48" IS NULL) THEN -0.700424397972 ELSE "ADS"."Feature_48" END AS impter_50, CASE WHEN ("ADS"."Feature_49" IS NULL) THEN 0.0255276737501 ELSE "ADS"."Feature_49" END AS impter_51, CASE WHEN ("ADS"."Feature_50" IS NULL) THEN -0.15642138685 ELSE "ADS"."Feature_50" END AS impter_52, CASE WHEN ("ADS"."Feature_51" IS NULL) THEN -0.127838577178 ELSE "ADS"."Feature_51" END AS impter_53, CASE WHEN ("ADS"."Feature_52" IS NULL) THEN -0.369879523833 ELSE "ADS"."Feature_52" END AS impter_54, CASE WHEN ("ADS"."Feature_53" IS NULL) THEN 0.0410547455889 ELSE "ADS"."Feature_53" END AS impter_55, CASE WHEN ("ADS"."Feature_54" IS NULL) THEN -0.100474275314 ELSE "ADS"."Feature_54" END AS impter_56, CASE WHEN ("ADS"."Feature_55" IS NULL) THEN -0.131272886536 ELSE "ADS"."Feature_55" END AS impter_57, CASE WHEN ("ADS"."Feature_56" IS NULL) THEN 0.368578431365 ELSE "ADS"."Feature_56" END AS impter_58, CASE WHEN ("ADS"."Feature_57" IS NULL) THEN 0.222812465206 ELSE "ADS"."Feature_57" END AS impter_59, CASE WHEN ("ADS"."Feature_58" IS NULL) THEN -0.0062740876184 ELSE "ADS"."Feature_58" END AS impter_60, CASE WHEN ("ADS"."Feature_59" IS NULL) THEN 0.0142685989578 ELSE "ADS"."Feature_59" END AS impter_61, CASE WHEN ("ADS"."Feature_60" IS NULL) THEN -0.0285455115739 ELSE "ADS"."Feature_60" END AS impter_62, CASE WHEN ("ADS"."Feature_61" IS NULL) THEN -0.43749183185 ELSE "ADS"."Feature_61" END AS impter_63, CASE WHEN ("ADS"."Feature_62" IS NULL) THEN -0.368992780588 ELSE "ADS"."Feature_62" END AS impter_64, CASE WHEN ("ADS"."Feature_63" IS NULL) THEN 0.00116904181932 ELSE "ADS"."Feature_63" END AS impter_65, CASE WHEN ("ADS"."Feature_64" IS NULL) THEN -0.0115648737176 ELSE "ADS"."Feature_64" END AS impter_66, CASE WHEN ("ADS"."Feature_65" IS NULL) THEN -0.0435876998969 ELSE "ADS"."Feature_65" END AS impter_67, CASE WHEN ("ADS"."Feature_66" IS NULL) THEN -0.161863413739 ELSE "ADS"."Feature_66" END AS impter_68, CASE WHEN ("ADS"."Feature_67" IS NULL) THEN -0.017272641535 ELSE "ADS"."Feature_67" END AS impter_69, CASE WHEN ("ADS"."Feature_68" IS NULL) THEN -0.364030220369 ELSE "ADS"."Feature_68" END AS impter_70, CASE WHEN ("ADS"."Feature_69" IS NULL) THEN -0.0492730065024 ELSE "ADS"."Feature_69" END AS impter_71, CASE WHEN ("ADS"."Feature_70" IS NULL) THEN -0.0154685126573 ELSE "ADS"."Feature_70" END AS impter_72, CASE WHEN ("ADS"."Feature_71" IS NULL) THEN -0.191629393513 ELSE "ADS"."Feature_71" END AS impter_73, CASE WHEN ("ADS"."Feature_72" IS NULL) THEN 0.0237828303216 ELSE "ADS"."Feature_72" END AS impter_74, CASE WHEN ("ADS"."Feature_73" IS NULL) THEN 0.0204547996726 ELSE "ADS"."Feature_73" END AS impter_75, CASE WHEN ("ADS"."Feature_74" IS NULL) THEN -0.173355346593 ELSE "ADS"."Feature_74" END AS impter_76, CASE WHEN ("ADS"."Feature_75" IS NULL) THEN 0.0275822882458 ELSE "ADS"."Feature_75" END AS impter_77, CASE WHEN ("ADS"."Feature_76" IS NULL) THEN -0.0154523366782 ELSE "ADS"."Feature_76" END AS impter_78, CASE WHEN ("ADS"."Feature_77" IS NULL) THEN -0.0425555457733 ELSE "ADS"."Feature_77" END AS impter_79, CASE WHEN ("ADS"."Feature_78" IS NULL) THEN -0.00942573658037 ELSE "ADS"."Feature_78" END AS impter_80, CASE WHEN ("ADS"."Feature_79" IS NULL) THEN 0.00742367748933 ELSE "ADS"."Feature_79" END AS impter_81, CASE WHEN ("ADS"."Feature_80" IS NULL) THEN 0.0498533264368 ELSE "ADS"."Feature_80" END AS impter_82, CASE WHEN ("ADS"."Feature_81" IS NULL) THEN 0.0279602211794 ELSE "ADS"."Feature_81" END AS impter_83, CASE WHEN ("ADS"."Feature_82" IS NULL) THEN -0.00527050248758 ELSE "ADS"."Feature_82" END AS impter_84, CASE WHEN ("ADS"."Feature_83" IS NULL) THEN -0.0533936117742 ELSE "ADS"."Feature_83" END AS impter_85, CASE WHEN ("ADS"."Feature_84" IS NULL) THEN 0.171620332886 ELSE "ADS"."Feature_84" END AS impter_86, CASE WHEN ("ADS"."Feature_85" IS NULL) THEN 0.0372119970074 ELSE "ADS"."Feature_85" END AS impter_87, CASE WHEN ("ADS"."Feature_86" IS NULL) THEN 0.0184349733304 ELSE "ADS"."Feature_86" END AS impter_88, CASE WHEN ("ADS"."Feature_87" IS NULL) THEN 0.560521632617 ELSE "ADS"."Feature_87" END AS impter_89, CASE WHEN ("ADS"."Feature_88" IS NULL) THEN -0.052850462919 ELSE "ADS"."Feature_88" END AS impter_90, CASE WHEN ("ADS"."Feature_89" IS NULL) THEN 0.0793902173424 ELSE "ADS"."Feature_89" END AS impter_91, CASE WHEN ("ADS"."Feature_90" IS NULL) THEN -2.08866716312 ELSE "ADS"."Feature_90" END AS impter_92, CASE WHEN ("ADS"."Feature_91" IS NULL) THEN -1.0831020639 ELSE "ADS"."Feature_91" END AS impter_93, CASE WHEN ("ADS"."Feature_92" IS NULL) THEN -0.304702362821 ELSE "ADS"."Feature_92" END AS impter_94, CASE WHEN ("ADS"."Feature_93" IS NULL) THEN -0.935426259564 ELSE "ADS"."Feature_93" END AS impter_95, CASE WHEN ("ADS"."Feature_94" IS NULL) THEN -0.098411219927 ELSE "ADS"."Feature_94" END AS impter_96, CASE WHEN ("ADS"."Feature_95" IS NULL) THEN -0.53165348436 ELSE "ADS"."Feature_95" END AS impter_97, CASE WHEN ("ADS"."Feature_96" IS NULL) THEN 0.0141274221378 ELSE "ADS"."Feature_96" END AS impter_98, CASE WHEN ("ADS"."Feature_97" IS NULL) THEN -0.0126312774127 ELSE "ADS"."Feature_97" END AS impter_99, CASE WHEN ("ADS"."Feature_98" IS NULL) THEN 0.0312868812331 ELSE "ADS"."Feature_98" END AS impter_100, CASE WHEN ("ADS"."Feature_99" IS NULL) THEN -0.450390515385 ELSE "ADS"."Feature_99" END AS impter_101 
FROM "FourClass_100" AS "ADS"), 
"ADS_sca_2_OUT" AS 
(SELECT "ADS_imp_1_OUT"."KEY" AS "KEY", (CAST("ADS_imp_1_OUT".impter_2 AS FLOAT) - 0.00653574012116) / 0.985821711919 AS scaler_2, (CAST("ADS_imp_1_OUT".impter_3 AS FLOAT) - 0.16767827126) / 4.17893277906 AS scaler_3, (CAST("ADS_imp_1_OUT".impter_4 AS FLOAT) - -0.0551470417358) / 4.08515606391 AS scaler_4, (CAST("ADS_imp_1_OUT".impter_5 AS FLOAT) - 0.00152116930519) / 1.05839942213 AS scaler_5, (CAST("ADS_imp_1_OUT".impter_6 AS FLOAT) - 0.0314276019104) / 0.958502901404 AS scaler_6, (CAST("ADS_imp_1_OUT".impter_7 AS FLOAT) - 0.0261796831787) / 0.993854807715 AS scaler_7, (CAST("ADS_imp_1_OUT".impter_8 AS FLOAT) - -0.0112547131221) / 0.995945599637 AS scaler_8, (CAST("ADS_imp_1_OUT".impter_9 AS FLOAT) - -0.0168862118009) / 1.04542967803 AS scaler_9, (CAST("ADS_imp_1_OUT".impter_10 AS FLOAT) - -0.0273427029645) / 4.33135674182 AS scaler_10, (CAST("ADS_imp_1_OUT".impter_11 AS FLOAT) - -0.163701278848) / 4.45889820593 AS scaler_11, (CAST("ADS_imp_1_OUT".impter_12 AS FLOAT) - 0.0354122507389) / 1.03661648781 AS scaler_12, (CAST("ADS_imp_1_OUT".impter_13 AS FLOAT) - -0.0285291234756) / 1.00467620555 AS scaler_13, (CAST("ADS_imp_1_OUT".impter_14 AS FLOAT) - -0.0267494449896) / 0.99962402671 AS scaler_14, (CAST("ADS_imp_1_OUT".impter_15 AS FLOAT) - 0.386019822911) / 4.14480478652 AS scaler_15, (CAST("ADS_imp_1_OUT".impter_16 AS FLOAT) - 0.0162145257314) / 1.01728129667 AS scaler_16, (CAST("ADS_imp_1_OUT".impter_17 AS FLOAT) - 0.227237750778) / 4.36711262018 AS scaler_17, (CAST("ADS_imp_1_OUT".impter_18 AS FLOAT) - 0.566373456694) / 4.11815688405 AS scaler_18, (CAST("ADS_imp_1_OUT".impter_19 AS FLOAT) - 0.277696410616) / 4.01432897572 AS scaler_19, (CAST("ADS_imp_1_OUT".impter_20 AS FLOAT) - 0.00599432681235) / 0.972439502321 AS scaler_20, (CAST("ADS_imp_1_OUT".impter_21 AS FLOAT) - -0.0218525344697) / 0.985687517726 AS scaler_21, (CAST("ADS_imp_1_OUT".impter_22 AS FLOAT) - -0.028375425917) / 1.02310346987 AS scaler_22, (CAST("ADS_imp_1_OUT".impter_23 AS FLOAT) - 0.0151643232963) / 4.35314516918 AS scaler_23, (CAST("ADS_imp_1_OUT".impter_24 AS FLOAT) - 0.0174691345488) / 1.00180565427 AS scaler_24, (CAST("ADS_imp_1_OUT".impter_25 AS FLOAT) - 0.0349390944943) / 0.992721649768 AS scaler_25, (CAST("ADS_imp_1_OUT".impter_26 AS FLOAT) - -0.144361607634) / 4.46739766886 AS scaler_26, (CAST("ADS_imp_1_OUT".impter_27 AS FLOAT) - 0.146104677444) / 4.10734277856 AS scaler_27, (CAST("ADS_imp_1_OUT".impter_28 AS FLOAT) - 0.0676158423738) / 4.27764303646 AS scaler_28, (CAST("ADS_imp_1_OUT".impter_29 AS FLOAT) - -0.30836845608) / 4.03019568626 AS scaler_29, (CAST("ADS_imp_1_OUT".impter_30 AS FLOAT) - 0.952575301761) / 4.01730262302 AS scaler_30, (CAST("ADS_imp_1_OUT".impter_31 AS FLOAT) - -0.0581338391011) / 4.03353195749 AS scaler_31, (CAST("ADS_imp_1_OUT".impter_32 AS FLOAT) - -0.0131244127149) / 0.955198781566 AS scaler_32, (CAST("ADS_imp_1_OUT".impter_33 AS FLOAT) - -0.337551254331) / 4.10657168041 AS scaler_33, (CAST("ADS_imp_1_OUT".impter_34 AS FLOAT) - 0.0390265145932) / 0.990359225337 AS scaler_34, (CAST("ADS_imp_1_OUT".impter_35 AS FLOAT) - -0.0402939442132) / 1.01529611676 AS scaler_35, (CAST("ADS_imp_1_OUT".impter_36 AS FLOAT) - -0.171611885737) / 4.17922956302 AS scaler_36, (CAST("ADS_imp_1_OUT".impter_37 AS FLOAT) - 0.0126477868686) / 1.00783076186 AS scaler_37, (CAST("ADS_imp_1_OUT".impter_38 AS FLOAT) - 0.00519373530851) / 4.29733218367 AS scaler_38, (CAST("ADS_imp_1_OUT".impter_39 AS FLOAT) - -0.0171608765769) / 1.01737885571 AS scaler_39, (CAST("ADS_imp_1_OUT".impter_40 AS FLOAT) - 0.0450361559979) / 3.90428113679 AS scaler_40, (CAST("ADS_imp_1_OUT".impter_41 AS FLOAT) - -0.120358200226) / 3.98402860362 AS scaler_41, (CAST("ADS_imp_1_OUT".impter_42 AS FLOAT) - -0.176403922822) / 4.06931463762 AS scaler_42, (CAST("ADS_imp_1_OUT".impter_43 AS FLOAT) - -0.015157075927) / 1.02915738955 AS scaler_43, (CAST("ADS_imp_1_OUT".impter_44 AS FLOAT) - -0.306874019058) / 4.34791251221 AS scaler_44, (CAST("ADS_imp_1_OUT".impter_45 AS FLOAT) - -0.0403545806931) / 4.05064377381 AS scaler_45, (CAST("ADS_imp_1_OUT".impter_46 AS FLOAT) - -0.0078998151246) / 1.00637547659 AS scaler_46, (CAST("ADS_imp_1_OUT".impter_47 AS FLOAT) - 0.00264793225417) / 1.00214477559 AS scaler_47, (CAST("ADS_imp_1_OUT".impter_48 AS FLOAT) - -0.149210845983) / 4.10340200989 AS scaler_48, (CAST("ADS_imp_1_OUT".impter_49 AS FLOAT) - 0.248953992369) / 4.23220038033 AS scaler_49, (CAST("ADS_imp_1_OUT".impter_50 AS FLOAT) - -0.700424397972) / 4.22076654199 AS scaler_50, (CAST("ADS_imp_1_OUT".impter_51 AS FLOAT) - 0.0255276737501) / 1.02067409273 AS scaler_51, (CAST("ADS_imp_1_OUT".impter_52 AS FLOAT) - -0.15642138685) / 4.07831067125 AS scaler_52, (CAST("ADS_imp_1_OUT".impter_53 AS FLOAT) - -0.127838577178) / 4.24723680136 AS scaler_53, (CAST("ADS_imp_1_OUT".impter_54 AS FLOAT) - -0.369879523833) / 4.03767584848 AS scaler_54, (CAST("ADS_imp_1_OUT".impter_55 AS FLOAT) - 0.0410547455889) / 4.44557137144 AS scaler_55, (CAST("ADS_imp_1_OUT".impter_56 AS FLOAT) - -0.100474275314) / 4.04583682644 AS scaler_56, (CAST("ADS_imp_1_OUT".impter_57 AS FLOAT) - -0.131272886536) / 4.2566060095 AS scaler_57, (CAST("ADS_imp_1_OUT".impter_58 AS FLOAT) - 0.368578431365) / 4.04294690881 AS scaler_58, (CAST("ADS_imp_1_OUT".impter_59 AS FLOAT) - 0.222812465206) / 4.25239806876 AS scaler_59, (CAST("ADS_imp_1_OUT".impter_60 AS FLOAT) - -0.0062740876184) / 1.0131754299 AS scaler_60, (CAST("ADS_imp_1_OUT".impter_61 AS FLOAT) - 0.0142685989578) / 0.975232456173 AS scaler_61, (CAST("ADS_imp_1_OUT".impter_62 AS FLOAT) - -0.0285455115739) / 0.996017661218 AS scaler_62, (CAST("ADS_imp_1_OUT".impter_63 AS FLOAT) - -0.43749183185) / 4.23875925656 AS scaler_63, (CAST("ADS_imp_1_OUT".impter_64 AS FLOAT) - -0.368992780588) / 4.18274187652 AS scaler_64, (CAST("ADS_imp_1_OUT".impter_65 AS FLOAT) - 0.00116904181932) / 1.04333652499 AS scaler_65, (CAST("ADS_imp_1_OUT".impter_66 AS FLOAT) - -0.0115648737176) / 4.08150429415 AS scaler_66, (CAST("ADS_imp_1_OUT".impter_67 AS FLOAT) - -0.0435876998969) / 1.05866451901 AS scaler_67, (CAST("ADS_imp_1_OUT".impter_68 AS FLOAT) - -0.161863413739) / 4.25966623517 AS scaler_68, (CAST("ADS_imp_1_OUT".impter_69 AS FLOAT) - -0.017272641535) / 1.01030583344 AS scaler_69, (CAST("ADS_imp_1_OUT".impter_70 AS FLOAT) - -0.364030220369) / 4.23529048916 AS scaler_70, (CAST("ADS_imp_1_OUT".impter_71 AS FLOAT) - -0.0492730065024) / 4.31080236531 AS scaler_71, (CAST("ADS_imp_1_OUT".impter_72 AS FLOAT) - -0.0154685126573) / 1.01066080153 AS scaler_72, (CAST("ADS_imp_1_OUT".impter_73 AS FLOAT) - -0.191629393513) / 4.11604496555 AS scaler_73, (CAST("ADS_imp_1_OUT".impter_74 AS FLOAT) - 0.0237828303216) / 0.997185935238 AS scaler_74, (CAST("ADS_imp_1_OUT".impter_75 AS FLOAT) - 0.0204547996726) / 0.964047487679 AS scaler_75, (CAST("ADS_imp_1_OUT".impter_76 AS FLOAT) - -0.173355346593) / 4.26884008329 AS scaler_76, (CAST("ADS_imp_1_OUT".impter_77 AS FLOAT) - 0.0275822882458) / 1.00287363715 AS scaler_77, (CAST("ADS_imp_1_OUT".impter_78 AS FLOAT) - -0.0154523366782) / 0.951796972878 AS scaler_78, (CAST("ADS_imp_1_OUT".impter_79 AS FLOAT) - -0.0425555457733) / 1.02604198012 AS scaler_79, (CAST("ADS_imp_1_OUT".impter_80 AS FLOAT) - -0.00942573658037) / 0.981547933163 AS scaler_80, (CAST("ADS_imp_1_OUT".impter_81 AS FLOAT) - 0.00742367748933) / 1.0171447638 AS scaler_81, (CAST("ADS_imp_1_OUT".impter_82 AS FLOAT) - 0.0498533264368) / 1.01381217519 AS scaler_82, (CAST("ADS_imp_1_OUT".impter_83 AS FLOAT) - 0.0279602211794) / 1.00493310879 AS scaler_83, (CAST("ADS_imp_1_OUT".impter_84 AS FLOAT) - -0.00527050248758) / 1.02332528491 AS scaler_84, (CAST("ADS_imp_1_OUT".impter_85 AS FLOAT) - -0.0533936117742) / 1.00458919199 AS scaler_85, (CAST("ADS_imp_1_OUT".impter_86 AS FLOAT) - 0.171620332886) / 4.24884427578 AS scaler_86, (CAST("ADS_imp_1_OUT".impter_87 AS FLOAT) - 0.0372119970074) / 4.25404858308 AS scaler_87, (CAST("ADS_imp_1_OUT".impter_88 AS FLOAT) - 0.0184349733304) / 3.94972884089 AS scaler_88, (CAST("ADS_imp_1_OUT".impter_89 AS FLOAT) - 0.560521632617) / 4.33133243898 AS scaler_89, (CAST("ADS_imp_1_OUT".impter_90 AS FLOAT) - -0.052850462919) / 1.03583971022 AS scaler_90, (CAST("ADS_imp_1_OUT".impter_91 AS FLOAT) - 0.0793902173424) / 0.969876446028 AS scaler_91, (CAST("ADS_imp_1_OUT".impter_92 AS FLOAT) - -2.08866716312) / 15.3022152465 AS scaler_92, (CAST("ADS_imp_1_OUT".impter_93 AS FLOAT) - -1.0831020639) / 4.36710902027 AS scaler_93, (CAST("ADS_imp_1_OUT".impter_94 AS FLOAT) - -0.304702362821) / 4.20429236235 AS scaler_94, (CAST("ADS_imp_1_OUT".impter_95 AS FLOAT) - -0.935426259564) / 15.3570057667 AS scaler_95, (CAST("ADS_imp_1_OUT".impter_96 AS FLOAT) - -0.098411219927) / 0.952484869944 AS scaler_96, (CAST("ADS_imp_1_OUT".impter_97 AS FLOAT) - -0.53165348436) / 3.97700071824 AS scaler_97, (CAST("ADS_imp_1_OUT".impter_98 AS FLOAT) - 0.0141274221378) / 0.987925892541 AS scaler_98, (CAST("ADS_imp_1_OUT".impter_99 AS FLOAT) - -0.0126312774127) / 1.01519644483 AS scaler_99, (CAST("ADS_imp_1_OUT".impter_100 AS FLOAT) - 0.0312868812331) / 0.989361802421 AS scaler_100, (CAST("ADS_imp_1_OUT".impter_101 AS FLOAT) - -0.450390515385) / 4.24470032509 AS scaler_101 
FROM "ADS_imp_1_OUT"), 
"DT_node_lookup" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_36 < 0.4517136812210083) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_66 < -0.06868205964565277) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_4 < 0.5227227210998535) THEN 7 ELSE 8 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_70 < -0.6098105907440186) THEN 9 ELSE 10 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_10 < 0.39106184244155884) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_19 < -0.4885696768760681) THEN 11 ELSE 12 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_10 < 1.1700751781463623) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Score" AS "Score" 
FROM (SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, 3 AS parent_id, 0.02982107363641262 AS "Score" UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, 3 AS parent_id, -0.048163264989852905 AS "Score" UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, 4 AS parent_id, -0.0044052861630916595 AS "Score" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, 4 AS parent_id, -0.052241113036870956 AS "Score" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, 5 AS parent_id, 0.13502538204193115 AS "Score" UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, 5 AS parent_id, 0.0261838436126709 AS "Score" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, 6 AS parent_id, -0.05177664756774902 AS "Score" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, 6 AS parent_id, 0.02921348251402378 AS "Score") AS "Values"), 
"DT_Output" AS 
(SELECT "DT_node_lookup"."KEY" AS "KEY", "DT_node_lookup".node_id_2 AS node_id_2, "DT_node_data".node_id AS node_id, "DT_node_data".feature AS feature, "DT_node_data".threshold AS threshold, "DT_node_data".depth AS depth, "DT_node_data".parent_id AS parent_id, "DT_node_data"."Score" AS "Score" 
FROM "DT_node_lookup" LEFT OUTER JOIN "DT_node_data" ON "DT_node_lookup".node_id_2 = "DT_node_data".node_id), 
"XGB_Tree_0_0" AS 
(SELECT "DT_Output"."KEY" AS "KEY", "DT_Output"."Score" AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3" 
FROM "DT_Output"), 
"DT_node_lookup_1" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_33 < 0.2938539981842041) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_29 < -0.2826199531555176) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_90 < -0.9324021935462952) THEN 7 ELSE 8 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_70 < 0.2864289879798889) THEN 9 ELSE 10 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_42 < -0.18312549591064453) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_52 < -0.3452757000923157) THEN 11 ELSE 12 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_44 < -0.7322684526443481) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_1" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Score" AS "Score" 
FROM (SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, 3 AS parent_id, -0.003278688294813037 AS "Score" UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, 3 AS parent_id, -0.056934308260679245 AS "Score" UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, 4 AS parent_id, 0.026487523689866066 AS "Score" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, 4 AS parent_id, -0.035694051533937454 AS "Score" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, 5 AS parent_id, 0.0029850746504962444 AS "Score" UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, 5 AS parent_id, 0.09965156763792038 AS "Score" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, 6 AS parent_id, 0.06315789371728897 AS "Score" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, 6 AS parent_id, -0.02593660168349743 AS "Score") AS "Values"), 
"DT_Output_1" AS 
(SELECT "DT_node_lookup_1"."KEY" AS "KEY", "DT_node_lookup_1".node_id_2 AS node_id_2, "DT_node_data_1".node_id AS node_id, "DT_node_data_1".feature AS feature, "DT_node_data_1".threshold AS threshold, "DT_node_data_1".depth AS depth, "DT_node_data_1".parent_id AS parent_id, "DT_node_data_1"."Score" AS "Score" 
FROM "DT_node_lookup_1" LEFT OUTER JOIN "DT_node_data_1" ON "DT_node_lookup_1".node_id_2 = "DT_node_data_1".node_id), 
"XGB_Tree_1_0" AS 
(SELECT "DT_Output_1"."KEY" AS "KEY", 0.0 AS "Score_0", "DT_Output_1"."Score" AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3" 
FROM "DT_Output_1"), 
"DT_node_lookup_2" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_40 < 0.23466400802135468) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_70 < -0.07032842934131622) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_88 < -0.6326702833175659) THEN 7 ELSE 8 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_17 < -0.9114393591880798) THEN 9 ELSE 10 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_36 < -0.8171613216400146) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_93 < -0.5743521451950073) THEN 11 ELSE 12 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_68 < 0.48524123430252075) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_2" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Score" AS "Score" 
FROM (SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, 3 AS parent_id, 0 AS "Score" UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, 3 AS parent_id, -0.050349652767181396 AS "Score" UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, 4 AS parent_id, 0.08905109763145447 AS "Score" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, 4 AS parent_id, -0.015189873054623604 AS "Score" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, 5 AS parent_id, 0.15102040767669678 AS "Score" UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, 5 AS parent_id, 0.04477612301707268 AS "Score" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, 6 AS parent_id, -0.015625 AS "Score" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, 6 AS parent_id, 0.06276150792837143 AS "Score") AS "Values"), 
"DT_Output_2" AS 
(SELECT "DT_node_lookup_2"."KEY" AS "KEY", "DT_node_lookup_2".node_id_2 AS node_id_2, "DT_node_data_2".node_id AS node_id, "DT_node_data_2".feature AS feature, "DT_node_data_2".threshold AS threshold, "DT_node_data_2".depth AS depth, "DT_node_data_2".parent_id AS parent_id, "DT_node_data_2"."Score" AS "Score" 
FROM "DT_node_lookup_2" LEFT OUTER JOIN "DT_node_data_2" ON "DT_node_lookup_2".node_id_2 = "DT_node_data_2".node_id), 
"XGB_Tree_2_0" AS 
(SELECT "DT_Output_2"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", "DT_Output_2"."Score" AS "Score_2", 0.0 AS "Score_3" 
FROM "DT_Output_2"), 
"DT_node_lookup_3" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_86 < -0.2933613657951355) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_27 < -0.13283228874206543) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_52 < -0.04266424477100372) THEN 7 ELSE 8 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_47 < 0.41482824087142944) THEN 9 ELSE 10 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_4 < -1.5035641193389893) THEN 5 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_66 < -0.31590425968170166) THEN 11 ELSE 12 END END END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_3" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Score" AS "Score" 
FROM (SELECT 5 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, 2 AS parent_id, 0.0579439215362072 AS "Score" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, 3 AS parent_id, 0.1210300475358963 AS "Score" UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, 3 AS parent_id, 0.02641509473323822 AS "Score" UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, 4 AS parent_id, -0.031511254608631134 AS "Score" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, 4 AS parent_id, 0.041624363511800766 AS "Score" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, 6 AS parent_id, -0.0494915246963501 AS "Score" UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, 6 AS parent_id, -0.008436724543571472 AS "Score") AS "Values"), 
"DT_Output_3" AS 
(SELECT "DT_node_lookup_3"."KEY" AS "KEY", "DT_node_lookup_3".node_id_2 AS node_id_2, "DT_node_data_3".node_id AS node_id, "DT_node_data_3".feature AS feature, "DT_node_data_3".threshold AS threshold, "DT_node_data_3".depth AS depth, "DT_node_data_3".parent_id AS parent_id, "DT_node_data_3"."Score" AS "Score" 
FROM "DT_node_lookup_3" LEFT OUTER JOIN "DT_node_data_3" ON "DT_node_lookup_3".node_id_2 = "DT_node_data_3".node_id), 
"XGB_Tree_3_0" AS 
(SELECT "DT_Output_3"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", "DT_Output_3"."Score" AS "Score_3" 
FROM "DT_Output_3"), 
"DT_node_lookup_4" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_36 < 0.33914458751678467) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_66 < -0.06868205964565277) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_4 < 0.5513330698013306) THEN 7 ELSE 8 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_53 < 1.1752240657806396) THEN 9 ELSE 10 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_10 < 0.39106184244155884) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_19 < -0.4885696768760681) THEN 11 ELSE 12 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_96 < -0.6017748117446899) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_4" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Score" AS "Score" 
FROM (SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, 3 AS parent_id, 0.025498611852526665 AS "Score" UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, 3 AS parent_id, -0.05176679417490959 AS "Score" UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, 4 AS parent_id, -0.04878098517656326 AS "Score" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, 4 AS parent_id, 0.010918477550148964 AS "Score" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, 5 AS parent_id, 0.10659374296665192 AS "Score" UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, 5 AS parent_id, 0.023271365091204643 AS "Score" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, 6 AS parent_id, 0.02157382294535637 AS "Score" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, 6 AS parent_id, -0.04819092899560928 AS "Score") AS "Values"), 
"DT_Output_4" AS 
(SELECT "DT_node_lookup_4"."KEY" AS "KEY", "DT_node_lookup_4".node_id_2 AS node_id_2, "DT_node_data_4".node_id AS node_id, "DT_node_data_4".feature AS feature, "DT_node_data_4".threshold AS threshold, "DT_node_data_4".depth AS depth, "DT_node_data_4".parent_id AS parent_id, "DT_node_data_4"."Score" AS "Score" 
FROM "DT_node_lookup_4" LEFT OUTER JOIN "DT_node_data_4" ON "DT_node_lookup_4".node_id_2 = "DT_node_data_4".node_id), 
"XGB_Tree_0_1" AS 
(SELECT "DT_Output_4"."KEY" AS "KEY", "DT_Output_4"."Score" AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3" 
FROM "DT_Output_4"), 
"DT_node_lookup_5" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_33 < 0.2938539981842041) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_29 < -0.2826199531555176) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_101 < 0.7306463122367859) THEN 7 ELSE 8 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_70 < 0.2864289879798889) THEN 9 ELSE 10 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_42 < -0.18312549591064453) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_52 < -0.3452757000923157) THEN 11 ELSE 12 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_44 < -0.7322684526443481) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_5" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Score" AS "Score" 
FROM (SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, 3 AS parent_id, -0.05686519667506218 AS "Score" UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, 3 AS parent_id, -0.007737312000244856 AS "Score" UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, 4 AS parent_id, 0.024737540632486343 AS "Score" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, 4 AS parent_id, -0.03437568247318268 AS "Score" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, 5 AS parent_id, 0.003009149804711342 AS "Score" UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, 5 AS parent_id, 0.08948536962270737 AS "Score" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, 6 AS parent_id, 0.057923801243305206 AS "Score" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, 6 AS parent_id, -0.024935407564044 AS "Score") AS "Values"), 
"DT_Output_5" AS 
(SELECT "DT_node_lookup_5"."KEY" AS "KEY", "DT_node_lookup_5".node_id_2 AS node_id_2, "DT_node_data_5".node_id AS node_id, "DT_node_data_5".feature AS feature, "DT_node_data_5".threshold AS threshold, "DT_node_data_5".depth AS depth, "DT_node_data_5".parent_id AS parent_id, "DT_node_data_5"."Score" AS "Score" 
FROM "DT_node_lookup_5" LEFT OUTER JOIN "DT_node_data_5" ON "DT_node_lookup_5".node_id_2 = "DT_node_data_5".node_id), 
"XGB_Tree_1_1" AS 
(SELECT "DT_Output_5"."KEY" AS "KEY", 0.0 AS "Score_0", "DT_Output_5"."Score" AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3" 
FROM "DT_Output_5"), 
"DT_node_lookup_6" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_17 < 0.009806754067540169) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_63 < 0.562813401222229) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_88 < -1.3287686109542847) THEN 7 ELSE 8 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_29 < -0.12212265282869339) THEN 9 ELSE 10 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_66 < 0.4000149369239807) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_40 < 0.8938565850257874) THEN 11 ELSE 12 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_89 < -0.5889948606491089) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_6" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Score" AS "Score" 
FROM (SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, 3 AS parent_id, 0.12724867463111877 AS "Score" UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, 3 AS parent_id, 0.029889622703194618 AS "Score" UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, 4 AS parent_id, 0.007980834692716599 AS "Score" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, 4 AS parent_id, -0.05286563187837601 AS "Score" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, 5 AS parent_id, -0.04973331838846207 AS "Score" UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, 5 AS parent_id, 0.006627052556723356 AS "Score" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, 6 AS parent_id, 0.07008529454469681 AS "Score" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, 6 AS parent_id, -0.018304329365491867 AS "Score") AS "Values"), 
"DT_Output_6" AS 
(SELECT "DT_node_lookup_6"."KEY" AS "KEY", "DT_node_lookup_6".node_id_2 AS node_id_2, "DT_node_data_6".node_id AS node_id, "DT_node_data_6".feature AS feature, "DT_node_data_6".threshold AS threshold, "DT_node_data_6".depth AS depth, "DT_node_data_6".parent_id AS parent_id, "DT_node_data_6"."Score" AS "Score" 
FROM "DT_node_lookup_6" LEFT OUTER JOIN "DT_node_data_6" ON "DT_node_lookup_6".node_id_2 = "DT_node_data_6".node_id), 
"XGB_Tree_2_1" AS 
(SELECT "DT_Output_6"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", "DT_Output_6"."Score" AS "Score_2", 0.0 AS "Score_3" 
FROM "DT_Output_6"), 
"DT_node_lookup_7" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_86 < -0.2933613657951355) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_27 < -0.13283228874206543) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_26 < -0.4399028420448303) THEN 7 ELSE 8 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_70 < -0.1768035590648651) THEN 9 ELSE 10 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_10 < -0.33124351501464844) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_54 < -0.8760042190551758) THEN 11 ELSE 12 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_4 < -1.42795729637146) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_7" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Score" AS "Score" 
FROM (SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, 3 AS parent_id, 0.1155257374048233 AS "Score" UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, 3 AS parent_id, 0.03019239939749241 AS "Score" UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, 4 AS parent_id, -0.04226556047797203 AS "Score" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, 4 AS parent_id, 0.027537737041711807 AS "Score" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, 5 AS parent_id, -0.01156309898942709 AS "Score" UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, 5 AS parent_id, -0.058785151690244675 AS "Score" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, 6 AS parent_id, 0.0817631259560585 AS "Score" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, 6 AS parent_id, -0.013365225866436958 AS "Score") AS "Values"), 
"DT_Output_7" AS 
(SELECT "DT_node_lookup_7"."KEY" AS "KEY", "DT_node_lookup_7".node_id_2 AS node_id_2, "DT_node_data_7".node_id AS node_id, "DT_node_data_7".feature AS feature, "DT_node_data_7".threshold AS threshold, "DT_node_data_7".depth AS depth, "DT_node_data_7".parent_id AS parent_id, "DT_node_data_7"."Score" AS "Score" 
FROM "DT_node_lookup_7" LEFT OUTER JOIN "DT_node_data_7" ON "DT_node_lookup_7".node_id_2 = "DT_node_data_7".node_id), 
"XGB_Tree_3_1" AS 
(SELECT "DT_Output_7"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", "DT_Output_7"."Score" AS "Score_3" 
FROM "DT_Output_7")
 SELECT "Score_Union_CTE_esu_0"."KEY", "Score_Union_CTE_esu_0"."Score_0", "Score_Union_CTE_esu_0"."Score_1", "Score_Union_CTE_esu_0"."Score_2", "Score_Union_CTE_esu_0"."Score_3" 
FROM (SELECT "XGB_Tree_0_0"."KEY" AS "KEY", "XGB_Tree_0_0"."Score_0" AS "Score_0", "XGB_Tree_0_0"."Score_1" AS "Score_1", "XGB_Tree_0_0"."Score_2" AS "Score_2", "XGB_Tree_0_0"."Score_3" AS "Score_3" 
FROM "XGB_Tree_0_0" UNION ALL SELECT "XGB_Tree_1_0"."KEY" AS "KEY", "XGB_Tree_1_0"."Score_0" AS "Score_0", "XGB_Tree_1_0"."Score_1" AS "Score_1", "XGB_Tree_1_0"."Score_2" AS "Score_2", "XGB_Tree_1_0"."Score_3" AS "Score_3" 
FROM "XGB_Tree_1_0" UNION ALL SELECT "XGB_Tree_2_0"."KEY" AS "KEY", "XGB_Tree_2_0"."Score_0" AS "Score_0", "XGB_Tree_2_0"."Score_1" AS "Score_1", "XGB_Tree_2_0"."Score_2" AS "Score_2", "XGB_Tree_2_0"."Score_3" AS "Score_3" 
FROM "XGB_Tree_2_0" UNION ALL SELECT "XGB_Tree_3_0"."KEY" AS "KEY", "XGB_Tree_3_0"."Score_0" AS "Score_0", "XGB_Tree_3_0"."Score_1" AS "Score_1", "XGB_Tree_3_0"."Score_2" AS "Score_2", "XGB_Tree_3_0"."Score_3" AS "Score_3" 
FROM "XGB_Tree_3_0" UNION ALL SELECT "XGB_Tree_0_1"."KEY" AS "KEY", "XGB_Tree_0_1"."Score_0" AS "Score_0", "XGB_Tree_0_1"."Score_1" AS "Score_1", "XGB_Tree_0_1"."Score_2" AS "Score_2", "XGB_Tree_0_1"."Score_3" AS "Score_3" 
FROM "XGB_Tree_0_1" UNION ALL SELECT "XGB_Tree_1_1"."KEY" AS "KEY", "XGB_Tree_1_1"."Score_0" AS "Score_0", "XGB_Tree_1_1"."Score_1" AS "Score_1", "XGB_Tree_1_1"."Score_2" AS "Score_2", "XGB_Tree_1_1"."Score_3" AS "Score_3" 
FROM "XGB_Tree_1_1" UNION ALL SELECT "XGB_Tree_2_1"."KEY" AS "KEY", "XGB_Tree_2_1"."Score_0" AS "Score_0", "XGB_Tree_2_1"."Score_1" AS "Score_1", "XGB_Tree_2_1"."Score_2" AS "Score_2", "XGB_Tree_2_1"."Score_3" AS "Score_3" 
FROM "XGB_Tree_2_1" UNION ALL SELECT "XGB_Tree_3_1"."KEY" AS "KEY", "XGB_Tree_3_1"."Score_0" AS "Score_0", "XGB_Tree_3_1"."Score_1" AS "Score_1", "XGB_Tree_3_1"."Score_2" AS "Score_2", "XGB_Tree_3_1"."Score_3" AS "Score_3" 
FROM "XGB_Tree_3_1") AS "Score_Union_CTE_esu_0"), 
"Score_Union_CTE_1" AS 
(WITH "ADS_imp_1_OUT" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_0" IS NULL) THEN 0.00653574012116 ELSE "ADS"."Feature_0" END AS impter_2, CASE WHEN ("ADS"."Feature_1" IS NULL) THEN 0.16767827126 ELSE "ADS"."Feature_1" END AS impter_3, CASE WHEN ("ADS"."Feature_2" IS NULL) THEN -0.0551470417358 ELSE "ADS"."Feature_2" END AS impter_4, CASE WHEN ("ADS"."Feature_3" IS NULL) THEN 0.00152116930519 ELSE "ADS"."Feature_3" END AS impter_5, CASE WHEN ("ADS"."Feature_4" IS NULL) THEN 0.0314276019104 ELSE "ADS"."Feature_4" END AS impter_6, CASE WHEN ("ADS"."Feature_5" IS NULL) THEN 0.0261796831787 ELSE "ADS"."Feature_5" END AS impter_7, CASE WHEN ("ADS"."Feature_6" IS NULL) THEN -0.0112547131221 ELSE "ADS"."Feature_6" END AS impter_8, CASE WHEN ("ADS"."Feature_7" IS NULL) THEN -0.0168862118009 ELSE "ADS"."Feature_7" END AS impter_9, CASE WHEN ("ADS"."Feature_8" IS NULL) THEN -0.0273427029645 ELSE "ADS"."Feature_8" END AS impter_10, CASE WHEN ("ADS"."Feature_9" IS NULL) THEN -0.163701278848 ELSE "ADS"."Feature_9" END AS impter_11, CASE WHEN ("ADS"."Feature_10" IS NULL) THEN 0.0354122507389 ELSE "ADS"."Feature_10" END AS impter_12, CASE WHEN ("ADS"."Feature_11" IS NULL) THEN -0.0285291234756 ELSE "ADS"."Feature_11" END AS impter_13, CASE WHEN ("ADS"."Feature_12" IS NULL) THEN -0.0267494449896 ELSE "ADS"."Feature_12" END AS impter_14, CASE WHEN ("ADS"."Feature_13" IS NULL) THEN 0.386019822911 ELSE "ADS"."Feature_13" END AS impter_15, CASE WHEN ("ADS"."Feature_14" IS NULL) THEN 0.0162145257314 ELSE "ADS"."Feature_14" END AS impter_16, CASE WHEN ("ADS"."Feature_15" IS NULL) THEN 0.227237750778 ELSE "ADS"."Feature_15" END AS impter_17, CASE WHEN ("ADS"."Feature_16" IS NULL) THEN 0.566373456694 ELSE "ADS"."Feature_16" END AS impter_18, CASE WHEN ("ADS"."Feature_17" IS NULL) THEN 0.277696410616 ELSE "ADS"."Feature_17" END AS impter_19, CASE WHEN ("ADS"."Feature_18" IS NULL) THEN 0.00599432681235 ELSE "ADS"."Feature_18" END AS impter_20, CASE WHEN ("ADS"."Feature_19" IS NULL) THEN -0.0218525344697 ELSE "ADS"."Feature_19" END AS impter_21, CASE WHEN ("ADS"."Feature_20" IS NULL) THEN -0.028375425917 ELSE "ADS"."Feature_20" END AS impter_22, CASE WHEN ("ADS"."Feature_21" IS NULL) THEN 0.0151643232963 ELSE "ADS"."Feature_21" END AS impter_23, CASE WHEN ("ADS"."Feature_22" IS NULL) THEN 0.0174691345488 ELSE "ADS"."Feature_22" END AS impter_24, CASE WHEN ("ADS"."Feature_23" IS NULL) THEN 0.0349390944943 ELSE "ADS"."Feature_23" END AS impter_25, CASE WHEN ("ADS"."Feature_24" IS NULL) THEN -0.144361607634 ELSE "ADS"."Feature_24" END AS impter_26, CASE WHEN ("ADS"."Feature_25" IS NULL) THEN 0.146104677444 ELSE "ADS"."Feature_25" END AS impter_27, CASE WHEN ("ADS"."Feature_26" IS NULL) THEN 0.0676158423738 ELSE "ADS"."Feature_26" END AS impter_28, CASE WHEN ("ADS"."Feature_27" IS NULL) THEN -0.30836845608 ELSE "ADS"."Feature_27" END AS impter_29, CASE WHEN ("ADS"."Feature_28" IS NULL) THEN 0.952575301761 ELSE "ADS"."Feature_28" END AS impter_30, CASE WHEN ("ADS"."Feature_29" IS NULL) THEN -0.0581338391011 ELSE "ADS"."Feature_29" END AS impter_31, CASE WHEN ("ADS"."Feature_30" IS NULL) THEN -0.0131244127149 ELSE "ADS"."Feature_30" END AS impter_32, CASE WHEN ("ADS"."Feature_31" IS NULL) THEN -0.337551254331 ELSE "ADS"."Feature_31" END AS impter_33, CASE WHEN ("ADS"."Feature_32" IS NULL) THEN 0.0390265145932 ELSE "ADS"."Feature_32" END AS impter_34, CASE WHEN ("ADS"."Feature_33" IS NULL) THEN -0.0402939442132 ELSE "ADS"."Feature_33" END AS impter_35, CASE WHEN ("ADS"."Feature_34" IS NULL) THEN -0.171611885737 ELSE "ADS"."Feature_34" END AS impter_36, CASE WHEN ("ADS"."Feature_35" IS NULL) THEN 0.0126477868686 ELSE "ADS"."Feature_35" END AS impter_37, CASE WHEN ("ADS"."Feature_36" IS NULL) THEN 0.00519373530851 ELSE "ADS"."Feature_36" END AS impter_38, CASE WHEN ("ADS"."Feature_37" IS NULL) THEN -0.0171608765769 ELSE "ADS"."Feature_37" END AS impter_39, CASE WHEN ("ADS"."Feature_38" IS NULL) THEN 0.0450361559979 ELSE "ADS"."Feature_38" END AS impter_40, CASE WHEN ("ADS"."Feature_39" IS NULL) THEN -0.120358200226 ELSE "ADS"."Feature_39" END AS impter_41, CASE WHEN ("ADS"."Feature_40" IS NULL) THEN -0.176403922822 ELSE "ADS"."Feature_40" END AS impter_42, CASE WHEN ("ADS"."Feature_41" IS NULL) THEN -0.015157075927 ELSE "ADS"."Feature_41" END AS impter_43, CASE WHEN ("ADS"."Feature_42" IS NULL) THEN -0.306874019058 ELSE "ADS"."Feature_42" END AS impter_44, CASE WHEN ("ADS"."Feature_43" IS NULL) THEN -0.0403545806931 ELSE "ADS"."Feature_43" END AS impter_45, CASE WHEN ("ADS"."Feature_44" IS NULL) THEN -0.0078998151246 ELSE "ADS"."Feature_44" END AS impter_46, CASE WHEN ("ADS"."Feature_45" IS NULL) THEN 0.00264793225417 ELSE "ADS"."Feature_45" END AS impter_47, CASE WHEN ("ADS"."Feature_46" IS NULL) THEN -0.149210845983 ELSE "ADS"."Feature_46" END AS impter_48, CASE WHEN ("ADS"."Feature_47" IS NULL) THEN 0.248953992369 ELSE "ADS"."Feature_47" END AS impter_49, CASE WHEN ("ADS"."Feature_48" IS NULL) THEN -0.700424397972 ELSE "ADS"."Feature_48" END AS impter_50, CASE WHEN ("ADS"."Feature_49" IS NULL) THEN 0.0255276737501 ELSE "ADS"."Feature_49" END AS impter_51, CASE WHEN ("ADS"."Feature_50" IS NULL) THEN -0.15642138685 ELSE "ADS"."Feature_50" END AS impter_52, CASE WHEN ("ADS"."Feature_51" IS NULL) THEN -0.127838577178 ELSE "ADS"."Feature_51" END AS impter_53, CASE WHEN ("ADS"."Feature_52" IS NULL) THEN -0.369879523833 ELSE "ADS"."Feature_52" END AS impter_54, CASE WHEN ("ADS"."Feature_53" IS NULL) THEN 0.0410547455889 ELSE "ADS"."Feature_53" END AS impter_55, CASE WHEN ("ADS"."Feature_54" IS NULL) THEN -0.100474275314 ELSE "ADS"."Feature_54" END AS impter_56, CASE WHEN ("ADS"."Feature_55" IS NULL) THEN -0.131272886536 ELSE "ADS"."Feature_55" END AS impter_57, CASE WHEN ("ADS"."Feature_56" IS NULL) THEN 0.368578431365 ELSE "ADS"."Feature_56" END AS impter_58, CASE WHEN ("ADS"."Feature_57" IS NULL) THEN 0.222812465206 ELSE "ADS"."Feature_57" END AS impter_59, CASE WHEN ("ADS"."Feature_58" IS NULL) THEN -0.0062740876184 ELSE "ADS"."Feature_58" END AS impter_60, CASE WHEN ("ADS"."Feature_59" IS NULL) THEN 0.0142685989578 ELSE "ADS"."Feature_59" END AS impter_61, CASE WHEN ("ADS"."Feature_60" IS NULL) THEN -0.0285455115739 ELSE "ADS"."Feature_60" END AS impter_62, CASE WHEN ("ADS"."Feature_61" IS NULL) THEN -0.43749183185 ELSE "ADS"."Feature_61" END AS impter_63, CASE WHEN ("ADS"."Feature_62" IS NULL) THEN -0.368992780588 ELSE "ADS"."Feature_62" END AS impter_64, CASE WHEN ("ADS"."Feature_63" IS NULL) THEN 0.00116904181932 ELSE "ADS"."Feature_63" END AS impter_65, CASE WHEN ("ADS"."Feature_64" IS NULL) THEN -0.0115648737176 ELSE "ADS"."Feature_64" END AS impter_66, CASE WHEN ("ADS"."Feature_65" IS NULL) THEN -0.0435876998969 ELSE "ADS"."Feature_65" END AS impter_67, CASE WHEN ("ADS"."Feature_66" IS NULL) THEN -0.161863413739 ELSE "ADS"."Feature_66" END AS impter_68, CASE WHEN ("ADS"."Feature_67" IS NULL) THEN -0.017272641535 ELSE "ADS"."Feature_67" END AS impter_69, CASE WHEN ("ADS"."Feature_68" IS NULL) THEN -0.364030220369 ELSE "ADS"."Feature_68" END AS impter_70, CASE WHEN ("ADS"."Feature_69" IS NULL) THEN -0.0492730065024 ELSE "ADS"."Feature_69" END AS impter_71, CASE WHEN ("ADS"."Feature_70" IS NULL) THEN -0.0154685126573 ELSE "ADS"."Feature_70" END AS impter_72, CASE WHEN ("ADS"."Feature_71" IS NULL) THEN -0.191629393513 ELSE "ADS"."Feature_71" END AS impter_73, CASE WHEN ("ADS"."Feature_72" IS NULL) THEN 0.0237828303216 ELSE "ADS"."Feature_72" END AS impter_74, CASE WHEN ("ADS"."Feature_73" IS NULL) THEN 0.0204547996726 ELSE "ADS"."Feature_73" END AS impter_75, CASE WHEN ("ADS"."Feature_74" IS NULL) THEN -0.173355346593 ELSE "ADS"."Feature_74" END AS impter_76, CASE WHEN ("ADS"."Feature_75" IS NULL) THEN 0.0275822882458 ELSE "ADS"."Feature_75" END AS impter_77, CASE WHEN ("ADS"."Feature_76" IS NULL) THEN -0.0154523366782 ELSE "ADS"."Feature_76" END AS impter_78, CASE WHEN ("ADS"."Feature_77" IS NULL) THEN -0.0425555457733 ELSE "ADS"."Feature_77" END AS impter_79, CASE WHEN ("ADS"."Feature_78" IS NULL) THEN -0.00942573658037 ELSE "ADS"."Feature_78" END AS impter_80, CASE WHEN ("ADS"."Feature_79" IS NULL) THEN 0.00742367748933 ELSE "ADS"."Feature_79" END AS impter_81, CASE WHEN ("ADS"."Feature_80" IS NULL) THEN 0.0498533264368 ELSE "ADS"."Feature_80" END AS impter_82, CASE WHEN ("ADS"."Feature_81" IS NULL) THEN 0.0279602211794 ELSE "ADS"."Feature_81" END AS impter_83, CASE WHEN ("ADS"."Feature_82" IS NULL) THEN -0.00527050248758 ELSE "ADS"."Feature_82" END AS impter_84, CASE WHEN ("ADS"."Feature_83" IS NULL) THEN -0.0533936117742 ELSE "ADS"."Feature_83" END AS impter_85, CASE WHEN ("ADS"."Feature_84" IS NULL) THEN 0.171620332886 ELSE "ADS"."Feature_84" END AS impter_86, CASE WHEN ("ADS"."Feature_85" IS NULL) THEN 0.0372119970074 ELSE "ADS"."Feature_85" END AS impter_87, CASE WHEN ("ADS"."Feature_86" IS NULL) THEN 0.0184349733304 ELSE "ADS"."Feature_86" END AS impter_88, CASE WHEN ("ADS"."Feature_87" IS NULL) THEN 0.560521632617 ELSE "ADS"."Feature_87" END AS impter_89, CASE WHEN ("ADS"."Feature_88" IS NULL) THEN -0.052850462919 ELSE "ADS"."Feature_88" END AS impter_90, CASE WHEN ("ADS"."Feature_89" IS NULL) THEN 0.0793902173424 ELSE "ADS"."Feature_89" END AS impter_91, CASE WHEN ("ADS"."Feature_90" IS NULL) THEN -2.08866716312 ELSE "ADS"."Feature_90" END AS impter_92, CASE WHEN ("ADS"."Feature_91" IS NULL) THEN -1.0831020639 ELSE "ADS"."Feature_91" END AS impter_93, CASE WHEN ("ADS"."Feature_92" IS NULL) THEN -0.304702362821 ELSE "ADS"."Feature_92" END AS impter_94, CASE WHEN ("ADS"."Feature_93" IS NULL) THEN -0.935426259564 ELSE "ADS"."Feature_93" END AS impter_95, CASE WHEN ("ADS"."Feature_94" IS NULL) THEN -0.098411219927 ELSE "ADS"."Feature_94" END AS impter_96, CASE WHEN ("ADS"."Feature_95" IS NULL) THEN -0.53165348436 ELSE "ADS"."Feature_95" END AS impter_97, CASE WHEN ("ADS"."Feature_96" IS NULL) THEN 0.0141274221378 ELSE "ADS"."Feature_96" END AS impter_98, CASE WHEN ("ADS"."Feature_97" IS NULL) THEN -0.0126312774127 ELSE "ADS"."Feature_97" END AS impter_99, CASE WHEN ("ADS"."Feature_98" IS NULL) THEN 0.0312868812331 ELSE "ADS"."Feature_98" END AS impter_100, CASE WHEN ("ADS"."Feature_99" IS NULL) THEN -0.450390515385 ELSE "ADS"."Feature_99" END AS impter_101 
FROM "FourClass_100" AS "ADS"), 
"ADS_sca_2_OUT" AS 
(SELECT "ADS_imp_1_OUT"."KEY" AS "KEY", (CAST("ADS_imp_1_OUT".impter_2 AS FLOAT) - 0.00653574012116) / 0.985821711919 AS scaler_2, (CAST("ADS_imp_1_OUT".impter_3 AS FLOAT) - 0.16767827126) / 4.17893277906 AS scaler_3, (CAST("ADS_imp_1_OUT".impter_4 AS FLOAT) - -0.0551470417358) / 4.08515606391 AS scaler_4, (CAST("ADS_imp_1_OUT".impter_5 AS FLOAT) - 0.00152116930519) / 1.05839942213 AS scaler_5, (CAST("ADS_imp_1_OUT".impter_6 AS FLOAT) - 0.0314276019104) / 0.958502901404 AS scaler_6, (CAST("ADS_imp_1_OUT".impter_7 AS FLOAT) - 0.0261796831787) / 0.993854807715 AS scaler_7, (CAST("ADS_imp_1_OUT".impter_8 AS FLOAT) - -0.0112547131221) / 0.995945599637 AS scaler_8, (CAST("ADS_imp_1_OUT".impter_9 AS FLOAT) - -0.0168862118009) / 1.04542967803 AS scaler_9, (CAST("ADS_imp_1_OUT".impter_10 AS FLOAT) - -0.0273427029645) / 4.33135674182 AS scaler_10, (CAST("ADS_imp_1_OUT".impter_11 AS FLOAT) - -0.163701278848) / 4.45889820593 AS scaler_11, (CAST("ADS_imp_1_OUT".impter_12 AS FLOAT) - 0.0354122507389) / 1.03661648781 AS scaler_12, (CAST("ADS_imp_1_OUT".impter_13 AS FLOAT) - -0.0285291234756) / 1.00467620555 AS scaler_13, (CAST("ADS_imp_1_OUT".impter_14 AS FLOAT) - -0.0267494449896) / 0.99962402671 AS scaler_14, (CAST("ADS_imp_1_OUT".impter_15 AS FLOAT) - 0.386019822911) / 4.14480478652 AS scaler_15, (CAST("ADS_imp_1_OUT".impter_16 AS FLOAT) - 0.0162145257314) / 1.01728129667 AS scaler_16, (CAST("ADS_imp_1_OUT".impter_17 AS FLOAT) - 0.227237750778) / 4.36711262018 AS scaler_17, (CAST("ADS_imp_1_OUT".impter_18 AS FLOAT) - 0.566373456694) / 4.11815688405 AS scaler_18, (CAST("ADS_imp_1_OUT".impter_19 AS FLOAT) - 0.277696410616) / 4.01432897572 AS scaler_19, (CAST("ADS_imp_1_OUT".impter_20 AS FLOAT) - 0.00599432681235) / 0.972439502321 AS scaler_20, (CAST("ADS_imp_1_OUT".impter_21 AS FLOAT) - -0.0218525344697) / 0.985687517726 AS scaler_21, (CAST("ADS_imp_1_OUT".impter_22 AS FLOAT) - -0.028375425917) / 1.02310346987 AS scaler_22, (CAST("ADS_imp_1_OUT".impter_23 AS FLOAT) - 0.0151643232963) / 4.35314516918 AS scaler_23, (CAST("ADS_imp_1_OUT".impter_24 AS FLOAT) - 0.0174691345488) / 1.00180565427 AS scaler_24, (CAST("ADS_imp_1_OUT".impter_25 AS FLOAT) - 0.0349390944943) / 0.992721649768 AS scaler_25, (CAST("ADS_imp_1_OUT".impter_26 AS FLOAT) - -0.144361607634) / 4.46739766886 AS scaler_26, (CAST("ADS_imp_1_OUT".impter_27 AS FLOAT) - 0.146104677444) / 4.10734277856 AS scaler_27, (CAST("ADS_imp_1_OUT".impter_28 AS FLOAT) - 0.0676158423738) / 4.27764303646 AS scaler_28, (CAST("ADS_imp_1_OUT".impter_29 AS FLOAT) - -0.30836845608) / 4.03019568626 AS scaler_29, (CAST("ADS_imp_1_OUT".impter_30 AS FLOAT) - 0.952575301761) / 4.01730262302 AS scaler_30, (CAST("ADS_imp_1_OUT".impter_31 AS FLOAT) - -0.0581338391011) / 4.03353195749 AS scaler_31, (CAST("ADS_imp_1_OUT".impter_32 AS FLOAT) - -0.0131244127149) / 0.955198781566 AS scaler_32, (CAST("ADS_imp_1_OUT".impter_33 AS FLOAT) - -0.337551254331) / 4.10657168041 AS scaler_33, (CAST("ADS_imp_1_OUT".impter_34 AS FLOAT) - 0.0390265145932) / 0.990359225337 AS scaler_34, (CAST("ADS_imp_1_OUT".impter_35 AS FLOAT) - -0.0402939442132) / 1.01529611676 AS scaler_35, (CAST("ADS_imp_1_OUT".impter_36 AS FLOAT) - -0.171611885737) / 4.17922956302 AS scaler_36, (CAST("ADS_imp_1_OUT".impter_37 AS FLOAT) - 0.0126477868686) / 1.00783076186 AS scaler_37, (CAST("ADS_imp_1_OUT".impter_38 AS FLOAT) - 0.00519373530851) / 4.29733218367 AS scaler_38, (CAST("ADS_imp_1_OUT".impter_39 AS FLOAT) - -0.0171608765769) / 1.01737885571 AS scaler_39, (CAST("ADS_imp_1_OUT".impter_40 AS FLOAT) - 0.0450361559979) / 3.90428113679 AS scaler_40, (CAST("ADS_imp_1_OUT".impter_41 AS FLOAT) - -0.120358200226) / 3.98402860362 AS scaler_41, (CAST("ADS_imp_1_OUT".impter_42 AS FLOAT) - -0.176403922822) / 4.06931463762 AS scaler_42, (CAST("ADS_imp_1_OUT".impter_43 AS FLOAT) - -0.015157075927) / 1.02915738955 AS scaler_43, (CAST("ADS_imp_1_OUT".impter_44 AS FLOAT) - -0.306874019058) / 4.34791251221 AS scaler_44, (CAST("ADS_imp_1_OUT".impter_45 AS FLOAT) - -0.0403545806931) / 4.05064377381 AS scaler_45, (CAST("ADS_imp_1_OUT".impter_46 AS FLOAT) - -0.0078998151246) / 1.00637547659 AS scaler_46, (CAST("ADS_imp_1_OUT".impter_47 AS FLOAT) - 0.00264793225417) / 1.00214477559 AS scaler_47, (CAST("ADS_imp_1_OUT".impter_48 AS FLOAT) - -0.149210845983) / 4.10340200989 AS scaler_48, (CAST("ADS_imp_1_OUT".impter_49 AS FLOAT) - 0.248953992369) / 4.23220038033 AS scaler_49, (CAST("ADS_imp_1_OUT".impter_50 AS FLOAT) - -0.700424397972) / 4.22076654199 AS scaler_50, (CAST("ADS_imp_1_OUT".impter_51 AS FLOAT) - 0.0255276737501) / 1.02067409273 AS scaler_51, (CAST("ADS_imp_1_OUT".impter_52 AS FLOAT) - -0.15642138685) / 4.07831067125 AS scaler_52, (CAST("ADS_imp_1_OUT".impter_53 AS FLOAT) - -0.127838577178) / 4.24723680136 AS scaler_53, (CAST("ADS_imp_1_OUT".impter_54 AS FLOAT) - -0.369879523833) / 4.03767584848 AS scaler_54, (CAST("ADS_imp_1_OUT".impter_55 AS FLOAT) - 0.0410547455889) / 4.44557137144 AS scaler_55, (CAST("ADS_imp_1_OUT".impter_56 AS FLOAT) - -0.100474275314) / 4.04583682644 AS scaler_56, (CAST("ADS_imp_1_OUT".impter_57 AS FLOAT) - -0.131272886536) / 4.2566060095 AS scaler_57, (CAST("ADS_imp_1_OUT".impter_58 AS FLOAT) - 0.368578431365) / 4.04294690881 AS scaler_58, (CAST("ADS_imp_1_OUT".impter_59 AS FLOAT) - 0.222812465206) / 4.25239806876 AS scaler_59, (CAST("ADS_imp_1_OUT".impter_60 AS FLOAT) - -0.0062740876184) / 1.0131754299 AS scaler_60, (CAST("ADS_imp_1_OUT".impter_61 AS FLOAT) - 0.0142685989578) / 0.975232456173 AS scaler_61, (CAST("ADS_imp_1_OUT".impter_62 AS FLOAT) - -0.0285455115739) / 0.996017661218 AS scaler_62, (CAST("ADS_imp_1_OUT".impter_63 AS FLOAT) - -0.43749183185) / 4.23875925656 AS scaler_63, (CAST("ADS_imp_1_OUT".impter_64 AS FLOAT) - -0.368992780588) / 4.18274187652 AS scaler_64, (CAST("ADS_imp_1_OUT".impter_65 AS FLOAT) - 0.00116904181932) / 1.04333652499 AS scaler_65, (CAST("ADS_imp_1_OUT".impter_66 AS FLOAT) - -0.0115648737176) / 4.08150429415 AS scaler_66, (CAST("ADS_imp_1_OUT".impter_67 AS FLOAT) - -0.0435876998969) / 1.05866451901 AS scaler_67, (CAST("ADS_imp_1_OUT".impter_68 AS FLOAT) - -0.161863413739) / 4.25966623517 AS scaler_68, (CAST("ADS_imp_1_OUT".impter_69 AS FLOAT) - -0.017272641535) / 1.01030583344 AS scaler_69, (CAST("ADS_imp_1_OUT".impter_70 AS FLOAT) - -0.364030220369) / 4.23529048916 AS scaler_70, (CAST("ADS_imp_1_OUT".impter_71 AS FLOAT) - -0.0492730065024) / 4.31080236531 AS scaler_71, (CAST("ADS_imp_1_OUT".impter_72 AS FLOAT) - -0.0154685126573) / 1.01066080153 AS scaler_72, (CAST("ADS_imp_1_OUT".impter_73 AS FLOAT) - -0.191629393513) / 4.11604496555 AS scaler_73, (CAST("ADS_imp_1_OUT".impter_74 AS FLOAT) - 0.0237828303216) / 0.997185935238 AS scaler_74, (CAST("ADS_imp_1_OUT".impter_75 AS FLOAT) - 0.0204547996726) / 0.964047487679 AS scaler_75, (CAST("ADS_imp_1_OUT".impter_76 AS FLOAT) - -0.173355346593) / 4.26884008329 AS scaler_76, (CAST("ADS_imp_1_OUT".impter_77 AS FLOAT) - 0.0275822882458) / 1.00287363715 AS scaler_77, (CAST("ADS_imp_1_OUT".impter_78 AS FLOAT) - -0.0154523366782) / 0.951796972878 AS scaler_78, (CAST("ADS_imp_1_OUT".impter_79 AS FLOAT) - -0.0425555457733) / 1.02604198012 AS scaler_79, (CAST("ADS_imp_1_OUT".impter_80 AS FLOAT) - -0.00942573658037) / 0.981547933163 AS scaler_80, (CAST("ADS_imp_1_OUT".impter_81 AS FLOAT) - 0.00742367748933) / 1.0171447638 AS scaler_81, (CAST("ADS_imp_1_OUT".impter_82 AS FLOAT) - 0.0498533264368) / 1.01381217519 AS scaler_82, (CAST("ADS_imp_1_OUT".impter_83 AS FLOAT) - 0.0279602211794) / 1.00493310879 AS scaler_83, (CAST("ADS_imp_1_OUT".impter_84 AS FLOAT) - -0.00527050248758) / 1.02332528491 AS scaler_84, (CAST("ADS_imp_1_OUT".impter_85 AS FLOAT) - -0.0533936117742) / 1.00458919199 AS scaler_85, (CAST("ADS_imp_1_OUT".impter_86 AS FLOAT) - 0.171620332886) / 4.24884427578 AS scaler_86, (CAST("ADS_imp_1_OUT".impter_87 AS FLOAT) - 0.0372119970074) / 4.25404858308 AS scaler_87, (CAST("ADS_imp_1_OUT".impter_88 AS FLOAT) - 0.0184349733304) / 3.94972884089 AS scaler_88, (CAST("ADS_imp_1_OUT".impter_89 AS FLOAT) - 0.560521632617) / 4.33133243898 AS scaler_89, (CAST("ADS_imp_1_OUT".impter_90 AS FLOAT) - -0.052850462919) / 1.03583971022 AS scaler_90, (CAST("ADS_imp_1_OUT".impter_91 AS FLOAT) - 0.0793902173424) / 0.969876446028 AS scaler_91, (CAST("ADS_imp_1_OUT".impter_92 AS FLOAT) - -2.08866716312) / 15.3022152465 AS scaler_92, (CAST("ADS_imp_1_OUT".impter_93 AS FLOAT) - -1.0831020639) / 4.36710902027 AS scaler_93, (CAST("ADS_imp_1_OUT".impter_94 AS FLOAT) - -0.304702362821) / 4.20429236235 AS scaler_94, (CAST("ADS_imp_1_OUT".impter_95 AS FLOAT) - -0.935426259564) / 15.3570057667 AS scaler_95, (CAST("ADS_imp_1_OUT".impter_96 AS FLOAT) - -0.098411219927) / 0.952484869944 AS scaler_96, (CAST("ADS_imp_1_OUT".impter_97 AS FLOAT) - -0.53165348436) / 3.97700071824 AS scaler_97, (CAST("ADS_imp_1_OUT".impter_98 AS FLOAT) - 0.0141274221378) / 0.987925892541 AS scaler_98, (CAST("ADS_imp_1_OUT".impter_99 AS FLOAT) - -0.0126312774127) / 1.01519644483 AS scaler_99, (CAST("ADS_imp_1_OUT".impter_100 AS FLOAT) - 0.0312868812331) / 0.989361802421 AS scaler_100, (CAST("ADS_imp_1_OUT".impter_101 AS FLOAT) - -0.450390515385) / 4.24470032509 AS scaler_101 
FROM "ADS_imp_1_OUT"), 
"DT_node_lookup_8" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_36 < -0.3963547945022583) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_58 < -0.8081027269363403) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_70 < 0.16431987285614014) THEN 7 ELSE 8 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_76 < -0.8612054586410522) THEN 9 ELSE 10 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_19 < -0.4885696768760681) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_10 < 0.3978305160999298) THEN 11 ELSE 12 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_4 < 0.30967339873313904) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_8" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Score" AS "Score" 
FROM (SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, 3 AS parent_id, 0.05516712740063667 AS "Score" UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, 3 AS parent_id, -0.02568330429494381 AS "Score" UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, 4 AS parent_id, -0.007661888841539621 AS "Score" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, 4 AS parent_id, -0.054290879517793655 AS "Score" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, 5 AS parent_id, 0.08894934505224228 AS "Score" UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, 5 AS parent_id, -0.0014713649870827794 AS "Score" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, 6 AS parent_id, 0.016941478475928307 AS "Score" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, 6 AS parent_id, -0.04010751470923424 AS "Score") AS "Values"), 
"DT_Output_8" AS 
(SELECT "DT_node_lookup_8"."KEY" AS "KEY", "DT_node_lookup_8".node_id_2 AS node_id_2, "DT_node_data_8".node_id AS node_id, "DT_node_data_8".feature AS feature, "DT_node_data_8".threshold AS threshold, "DT_node_data_8".depth AS depth, "DT_node_data_8".parent_id AS parent_id, "DT_node_data_8"."Score" AS "Score" 
FROM "DT_node_lookup_8" LEFT OUTER JOIN "DT_node_data_8" ON "DT_node_lookup_8".node_id_2 = "DT_node_data_8".node_id), 
"XGB_Tree_0_2" AS 
(SELECT "DT_Output_8"."KEY" AS "KEY", "DT_Output_8"."Score" AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3" 
FROM "DT_Output_8"), 
"DT_node_lookup_9" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_33 < 0.2938539981842041) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_29 < -0.2826199531555176) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_90 < -0.9324021935462952) THEN 7 ELSE 8 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_70 < 0.2864289879798889) THEN 9 ELSE 10 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_52 < -0.18976891040802002) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_5 < 0.575514554977417) THEN 11 ELSE 12 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_45 < 0.4356154799461365) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_9" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Score" AS "Score" 
FROM (SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, 3 AS parent_id, -0.001108604483306408 AS "Score" UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, 3 AS parent_id, -0.054617155343294144 AS "Score" UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, 4 AS parent_id, 0.023069441318511963 AS "Score" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, 4 AS parent_id, -0.0331183485686779 AS "Score" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, 5 AS parent_id, -0.029720613732933998 AS "Score" UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, 5 AS parent_id, 0.04233134910464287 AS "Score" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, 6 AS parent_id, 0.023018721491098404 AS "Score" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, 6 AS parent_id, 0.095349982380867 AS "Score") AS "Values"), 
"DT_Output_9" AS 
(SELECT "DT_node_lookup_9"."KEY" AS "KEY", "DT_node_lookup_9".node_id_2 AS node_id_2, "DT_node_data_9".node_id AS node_id, "DT_node_data_9".feature AS feature, "DT_node_data_9".threshold AS threshold, "DT_node_data_9".depth AS depth, "DT_node_data_9".parent_id AS parent_id, "DT_node_data_9"."Score" AS "Score" 
FROM "DT_node_lookup_9" LEFT OUTER JOIN "DT_node_data_9" ON "DT_node_lookup_9".node_id_2 = "DT_node_data_9".node_id), 
"XGB_Tree_1_2" AS 
(SELECT "DT_Output_9"."KEY" AS "KEY", 0.0 AS "Score_0", "DT_Output_9"."Score" AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3" 
FROM "DT_Output_9"), 
"DT_node_lookup_10" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_40 < 0.23466400802135468) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_70 < -0.07032842934131622) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_88 < -0.6326702833175659) THEN 7 ELSE 8 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_17 < -0.9114393591880798) THEN 9 ELSE 10 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_63 < -1.1125068664550781) THEN 5 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_26 < 0.23849156498908997) THEN 11 ELSE 12 END END END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_10" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Score" AS "Score" 
FROM (SELECT 5 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, 2 AS parent_id, 0.10967139154672623 AS "Score" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, 3 AS parent_id, 0.0006981450715102255 AS "Score" UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, 3 AS parent_id, -0.048348259180784225 AS "Score" UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, 4 AS parent_id, 0.07572909444570541 AS "Score" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, 4 AS parent_id, -0.014470398426055908 AS "Score" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, 6 AS parent_id, -0.014250566251575947 AS "Score" UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, 6 AS parent_id, 0.045102499425411224 AS "Score") AS "Values"), 
"DT_Output_10" AS 
(SELECT "DT_node_lookup_10"."KEY" AS "KEY", "DT_node_lookup_10".node_id_2 AS node_id_2, "DT_node_data_10".node_id AS node_id, "DT_node_data_10".feature AS feature, "DT_node_data_10".threshold AS threshold, "DT_node_data_10".depth AS depth, "DT_node_data_10".parent_id AS parent_id, "DT_node_data_10"."Score" AS "Score" 
FROM "DT_node_lookup_10" LEFT OUTER JOIN "DT_node_data_10" ON "DT_node_lookup_10".node_id_2 = "DT_node_data_10".node_id), 
"XGB_Tree_2_2" AS 
(SELECT "DT_Output_10"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", "DT_Output_10"."Score" AS "Score_2", 0.0 AS "Score_3" 
FROM "DT_Output_10"), 
"DT_node_lookup_11" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_86 < -0.4706636071205139) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_27 < -0.13283228874206543) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_52 < -0.8087530136108398) THEN 7 ELSE 8 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_54 < -0.48071491718292236) THEN 9 ELSE 10 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_45 < -0.24294397234916687) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_66 < -0.31590425968170166) THEN 11 ELSE 12 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_65 < 1.3402111530303955) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_11" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Score" AS "Score" 
FROM (SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, 3 AS parent_id, 0.12442632764577866 AS "Score" UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, 3 AS parent_id, 0.043950628489255905 AS "Score" UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, 4 AS parent_id, 0.060867439955472946 AS "Score" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, 4 AS parent_id, -0.027648985385894775 AS "Score" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, 5 AS parent_id, -0.032984111458063126 AS "Score" UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, 5 AS parent_id, 0.03191494196653366 AS "Score" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, 6 AS parent_id, -0.04126276820898056 AS "Score" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, 6 AS parent_id, 0.029605058953166008 AS "Score") AS "Values"), 
"DT_Output_11" AS 
(SELECT "DT_node_lookup_11"."KEY" AS "KEY", "DT_node_lookup_11".node_id_2 AS node_id_2, "DT_node_data_11".node_id AS node_id, "DT_node_data_11".feature AS feature, "DT_node_data_11".threshold AS threshold, "DT_node_data_11".depth AS depth, "DT_node_data_11".parent_id AS parent_id, "DT_node_data_11"."Score" AS "Score" 
FROM "DT_node_lookup_11" LEFT OUTER JOIN "DT_node_data_11" ON "DT_node_lookup_11".node_id_2 = "DT_node_data_11".node_id), 
"XGB_Tree_3_2" AS 
(SELECT "DT_Output_11"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", "DT_Output_11"."Score" AS "Score_3" 
FROM "DT_Output_11"), 
"DT_node_lookup_12" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_36 < 0.4517136812210083) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_70 < -0.8665353059768677) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_87 < -0.2090872824192047) THEN 7 ELSE 8 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_17 < 0.21111923456192017) THEN 9 ELSE 10 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_10 < 0.39106184244155884) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_87 < 0.07485006004571915) THEN 11 ELSE 12 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_10 < 1.1700751781463623) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_12" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Score" AS "Score" 
FROM (SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, 3 AS parent_id, -0.029904210940003395 AS "Score" UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, 3 AS parent_id, 0.06685043126344681 AS "Score" UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, 4 AS parent_id, -0.045662883669137955 AS "Score" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, 4 AS parent_id, -0.0024754067417234182 AS "Score" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, 5 AS parent_id, 0.011611285619437695 AS "Score" UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, 5 AS parent_id, 0.09090034663677216 AS "Score" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, 6 AS parent_id, -0.04952401667833328 AS "Score" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, 6 AS parent_id, 0.028574800118803978 AS "Score") AS "Values"), 
"DT_Output_12" AS 
(SELECT "DT_node_lookup_12"."KEY" AS "KEY", "DT_node_lookup_12".node_id_2 AS node_id_2, "DT_node_data_12".node_id AS node_id, "DT_node_data_12".feature AS feature, "DT_node_data_12".threshold AS threshold, "DT_node_data_12".depth AS depth, "DT_node_data_12".parent_id AS parent_id, "DT_node_data_12"."Score" AS "Score" 
FROM "DT_node_lookup_12" LEFT OUTER JOIN "DT_node_data_12" ON "DT_node_lookup_12".node_id_2 = "DT_node_data_12".node_id), 
"XGB_Tree_0_3" AS 
(SELECT "DT_Output_12"."KEY" AS "KEY", "DT_Output_12"."Score" AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3" 
FROM "DT_Output_12"), 
"DT_node_lookup_13" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_33 < 0.2938539981842041) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_29 < -0.2826199531555176) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_90 < -0.9324021935462952) THEN 7 ELSE 8 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_66 < -0.575156033039093) THEN 9 ELSE 10 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_42 < -0.18312549591064453) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_70 < -0.4421713352203369) THEN 11 ELSE 12 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_44 < -0.7322684526443481) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_13" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Score" AS "Score" 
FROM (SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, 3 AS parent_id, -0.0012800133554264903 AS "Score" UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, 3 AS parent_id, -0.053506266325712204 AS "Score" UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, 4 AS parent_id, 0.043034303933382034 AS "Score" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, 4 AS parent_id, -0.015590890310704708 AS "Score" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, 5 AS parent_id, 0.10033302754163742 AS "Score" UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, 5 AS parent_id, 0.027957722544670105 AS "Score" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, 6 AS parent_id, 0.05073144659399986 AS "Score" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, 6 AS parent_id, -0.024652263149619102 AS "Score") AS "Values"), 
"DT_Output_13" AS 
(SELECT "DT_node_lookup_13"."KEY" AS "KEY", "DT_node_lookup_13".node_id_2 AS node_id_2, "DT_node_data_13".node_id AS node_id, "DT_node_data_13".feature AS feature, "DT_node_data_13".threshold AS threshold, "DT_node_data_13".depth AS depth, "DT_node_data_13".parent_id AS parent_id, "DT_node_data_13"."Score" AS "Score" 
FROM "DT_node_lookup_13" LEFT OUTER JOIN "DT_node_data_13" ON "DT_node_lookup_13".node_id_2 = "DT_node_data_13".node_id), 
"XGB_Tree_1_3" AS 
(SELECT "DT_Output_13"."KEY" AS "KEY", 0.0 AS "Score_0", "DT_Output_13"."Score" AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3" 
FROM "DT_Output_13"), 
"DT_node_lookup_14" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_63 < 0.562813401222229) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_17 < 0.009806754067540169) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_40 < -0.9351493120193481) THEN 7 ELSE 8 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_66 < 0.20733293890953064) THEN 9 ELSE 10 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_29 < -0.38603299856185913) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_23 < 0.17813389003276825) THEN 11 ELSE 12 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_51 < -0.8340598344802856) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_14" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Score" AS "Score" 
FROM (SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, 3 AS parent_id, -0.02777116559445858 AS "Score" UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, 3 AS parent_id, 0.0516267791390419 AS "Score" UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, 4 AS parent_id, -0.03446497768163681 AS "Score" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, 4 AS parent_id, 0.014176211319863796 AS "Score" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, 5 AS parent_id, -0.02818564884364605 AS "Score" UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, 5 AS parent_id, 0.05528451129794121 AS "Score" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, 6 AS parent_id, 0.0027096678968518972 AS "Score" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, 6 AS parent_id, -0.05979834869503975 AS "Score") AS "Values"), 
"DT_Output_14" AS 
(SELECT "DT_node_lookup_14"."KEY" AS "KEY", "DT_node_lookup_14".node_id_2 AS node_id_2, "DT_node_data_14".node_id AS node_id, "DT_node_data_14".feature AS feature, "DT_node_data_14".threshold AS threshold, "DT_node_data_14".depth AS depth, "DT_node_data_14".parent_id AS parent_id, "DT_node_data_14"."Score" AS "Score" 
FROM "DT_node_lookup_14" LEFT OUTER JOIN "DT_node_data_14" ON "DT_node_lookup_14".node_id_2 = "DT_node_data_14".node_id), 
"XGB_Tree_2_3" AS 
(SELECT "DT_Output_14"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", "DT_Output_14"."Score" AS "Score_2", 0.0 AS "Score_3" 
FROM "DT_Output_14"), 
"DT_node_lookup_15" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_86 < -0.2933613657951355) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_27 < -1.1628973484039307) THEN 3 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_68 < 0.18960626423358917) THEN 7 ELSE 8 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_10 < -0.33124351501464844) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_54 < -0.8760042190551758) THEN 9 ELSE 10 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_31 < -0.6048048138618469) THEN 11 ELSE 12 END END END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_15" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Score" AS "Score" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, 1 AS parent_id, 0.10651014000177383 AS "Score" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, 4 AS parent_id, 0.042609017342329025 AS "Score" UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, 4 AS parent_id, -0.019566327333450317 AS "Score" UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, 5 AS parent_id, -0.010257179848849773 AS "Score" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, 5 AS parent_id, -0.057035382837057114 AS "Score" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, 6 AS parent_id, 0.04231635481119156 AS "Score" UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, 6 AS parent_id, -0.01981682889163494 AS "Score") AS "Values"), 
"DT_Output_15" AS 
(SELECT "DT_node_lookup_15"."KEY" AS "KEY", "DT_node_lookup_15".node_id_2 AS node_id_2, "DT_node_data_15".node_id AS node_id, "DT_node_data_15".feature AS feature, "DT_node_data_15".threshold AS threshold, "DT_node_data_15".depth AS depth, "DT_node_data_15".parent_id AS parent_id, "DT_node_data_15"."Score" AS "Score" 
FROM "DT_node_lookup_15" LEFT OUTER JOIN "DT_node_data_15" ON "DT_node_lookup_15".node_id_2 = "DT_node_data_15".node_id), 
"XGB_Tree_3_3" AS 
(SELECT "DT_Output_15"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", "DT_Output_15"."Score" AS "Score_3" 
FROM "DT_Output_15")
 SELECT "Score_Union_CTE_esu_1"."KEY", "Score_Union_CTE_esu_1"."Score_0", "Score_Union_CTE_esu_1"."Score_1", "Score_Union_CTE_esu_1"."Score_2", "Score_Union_CTE_esu_1"."Score_3" 
FROM (SELECT "XGB_Tree_0_2"."KEY" AS "KEY", "XGB_Tree_0_2"."Score_0" AS "Score_0", "XGB_Tree_0_2"."Score_1" AS "Score_1", "XGB_Tree_0_2"."Score_2" AS "Score_2", "XGB_Tree_0_2"."Score_3" AS "Score_3" 
FROM "XGB_Tree_0_2" UNION ALL SELECT "XGB_Tree_1_2"."KEY" AS "KEY", "XGB_Tree_1_2"."Score_0" AS "Score_0", "XGB_Tree_1_2"."Score_1" AS "Score_1", "XGB_Tree_1_2"."Score_2" AS "Score_2", "XGB_Tree_1_2"."Score_3" AS "Score_3" 
FROM "XGB_Tree_1_2" UNION ALL SELECT "XGB_Tree_2_2"."KEY" AS "KEY", "XGB_Tree_2_2"."Score_0" AS "Score_0", "XGB_Tree_2_2"."Score_1" AS "Score_1", "XGB_Tree_2_2"."Score_2" AS "Score_2", "XGB_Tree_2_2"."Score_3" AS "Score_3" 
FROM "XGB_Tree_2_2" UNION ALL SELECT "XGB_Tree_3_2"."KEY" AS "KEY", "XGB_Tree_3_2"."Score_0" AS "Score_0", "XGB_Tree_3_2"."Score_1" AS "Score_1", "XGB_Tree_3_2"."Score_2" AS "Score_2", "XGB_Tree_3_2"."Score_3" AS "Score_3" 
FROM "XGB_Tree_3_2" UNION ALL SELECT "XGB_Tree_0_3"."KEY" AS "KEY", "XGB_Tree_0_3"."Score_0" AS "Score_0", "XGB_Tree_0_3"."Score_1" AS "Score_1", "XGB_Tree_0_3"."Score_2" AS "Score_2", "XGB_Tree_0_3"."Score_3" AS "Score_3" 
FROM "XGB_Tree_0_3" UNION ALL SELECT "XGB_Tree_1_3"."KEY" AS "KEY", "XGB_Tree_1_3"."Score_0" AS "Score_0", "XGB_Tree_1_3"."Score_1" AS "Score_1", "XGB_Tree_1_3"."Score_2" AS "Score_2", "XGB_Tree_1_3"."Score_3" AS "Score_3" 
FROM "XGB_Tree_1_3" UNION ALL SELECT "XGB_Tree_2_3"."KEY" AS "KEY", "XGB_Tree_2_3"."Score_0" AS "Score_0", "XGB_Tree_2_3"."Score_1" AS "Score_1", "XGB_Tree_2_3"."Score_2" AS "Score_2", "XGB_Tree_2_3"."Score_3" AS "Score_3" 
FROM "XGB_Tree_2_3" UNION ALL SELECT "XGB_Tree_3_3"."KEY" AS "KEY", "XGB_Tree_3_3"."Score_0" AS "Score_0", "XGB_Tree_3_3"."Score_1" AS "Score_1", "XGB_Tree_3_3"."Score_2" AS "Score_2", "XGB_Tree_3_3"."Score_3" AS "Score_3" 
FROM "XGB_Tree_3_3") AS "Score_Union_CTE_esu_1"), 
"Score_Union_CTE_2" AS 
(WITH "ADS_imp_1_OUT" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_0" IS NULL) THEN 0.00653574012116 ELSE "ADS"."Feature_0" END AS impter_2, CASE WHEN ("ADS"."Feature_1" IS NULL) THEN 0.16767827126 ELSE "ADS"."Feature_1" END AS impter_3, CASE WHEN ("ADS"."Feature_2" IS NULL) THEN -0.0551470417358 ELSE "ADS"."Feature_2" END AS impter_4, CASE WHEN ("ADS"."Feature_3" IS NULL) THEN 0.00152116930519 ELSE "ADS"."Feature_3" END AS impter_5, CASE WHEN ("ADS"."Feature_4" IS NULL) THEN 0.0314276019104 ELSE "ADS"."Feature_4" END AS impter_6, CASE WHEN ("ADS"."Feature_5" IS NULL) THEN 0.0261796831787 ELSE "ADS"."Feature_5" END AS impter_7, CASE WHEN ("ADS"."Feature_6" IS NULL) THEN -0.0112547131221 ELSE "ADS"."Feature_6" END AS impter_8, CASE WHEN ("ADS"."Feature_7" IS NULL) THEN -0.0168862118009 ELSE "ADS"."Feature_7" END AS impter_9, CASE WHEN ("ADS"."Feature_8" IS NULL) THEN -0.0273427029645 ELSE "ADS"."Feature_8" END AS impter_10, CASE WHEN ("ADS"."Feature_9" IS NULL) THEN -0.163701278848 ELSE "ADS"."Feature_9" END AS impter_11, CASE WHEN ("ADS"."Feature_10" IS NULL) THEN 0.0354122507389 ELSE "ADS"."Feature_10" END AS impter_12, CASE WHEN ("ADS"."Feature_11" IS NULL) THEN -0.0285291234756 ELSE "ADS"."Feature_11" END AS impter_13, CASE WHEN ("ADS"."Feature_12" IS NULL) THEN -0.0267494449896 ELSE "ADS"."Feature_12" END AS impter_14, CASE WHEN ("ADS"."Feature_13" IS NULL) THEN 0.386019822911 ELSE "ADS"."Feature_13" END AS impter_15, CASE WHEN ("ADS"."Feature_14" IS NULL) THEN 0.0162145257314 ELSE "ADS"."Feature_14" END AS impter_16, CASE WHEN ("ADS"."Feature_15" IS NULL) THEN 0.227237750778 ELSE "ADS"."Feature_15" END AS impter_17, CASE WHEN ("ADS"."Feature_16" IS NULL) THEN 0.566373456694 ELSE "ADS"."Feature_16" END AS impter_18, CASE WHEN ("ADS"."Feature_17" IS NULL) THEN 0.277696410616 ELSE "ADS"."Feature_17" END AS impter_19, CASE WHEN ("ADS"."Feature_18" IS NULL) THEN 0.00599432681235 ELSE "ADS"."Feature_18" END AS impter_20, CASE WHEN ("ADS"."Feature_19" IS NULL) THEN -0.0218525344697 ELSE "ADS"."Feature_19" END AS impter_21, CASE WHEN ("ADS"."Feature_20" IS NULL) THEN -0.028375425917 ELSE "ADS"."Feature_20" END AS impter_22, CASE WHEN ("ADS"."Feature_21" IS NULL) THEN 0.0151643232963 ELSE "ADS"."Feature_21" END AS impter_23, CASE WHEN ("ADS"."Feature_22" IS NULL) THEN 0.0174691345488 ELSE "ADS"."Feature_22" END AS impter_24, CASE WHEN ("ADS"."Feature_23" IS NULL) THEN 0.0349390944943 ELSE "ADS"."Feature_23" END AS impter_25, CASE WHEN ("ADS"."Feature_24" IS NULL) THEN -0.144361607634 ELSE "ADS"."Feature_24" END AS impter_26, CASE WHEN ("ADS"."Feature_25" IS NULL) THEN 0.146104677444 ELSE "ADS"."Feature_25" END AS impter_27, CASE WHEN ("ADS"."Feature_26" IS NULL) THEN 0.0676158423738 ELSE "ADS"."Feature_26" END AS impter_28, CASE WHEN ("ADS"."Feature_27" IS NULL) THEN -0.30836845608 ELSE "ADS"."Feature_27" END AS impter_29, CASE WHEN ("ADS"."Feature_28" IS NULL) THEN 0.952575301761 ELSE "ADS"."Feature_28" END AS impter_30, CASE WHEN ("ADS"."Feature_29" IS NULL) THEN -0.0581338391011 ELSE "ADS"."Feature_29" END AS impter_31, CASE WHEN ("ADS"."Feature_30" IS NULL) THEN -0.0131244127149 ELSE "ADS"."Feature_30" END AS impter_32, CASE WHEN ("ADS"."Feature_31" IS NULL) THEN -0.337551254331 ELSE "ADS"."Feature_31" END AS impter_33, CASE WHEN ("ADS"."Feature_32" IS NULL) THEN 0.0390265145932 ELSE "ADS"."Feature_32" END AS impter_34, CASE WHEN ("ADS"."Feature_33" IS NULL) THEN -0.0402939442132 ELSE "ADS"."Feature_33" END AS impter_35, CASE WHEN ("ADS"."Feature_34" IS NULL) THEN -0.171611885737 ELSE "ADS"."Feature_34" END AS impter_36, CASE WHEN ("ADS"."Feature_35" IS NULL) THEN 0.0126477868686 ELSE "ADS"."Feature_35" END AS impter_37, CASE WHEN ("ADS"."Feature_36" IS NULL) THEN 0.00519373530851 ELSE "ADS"."Feature_36" END AS impter_38, CASE WHEN ("ADS"."Feature_37" IS NULL) THEN -0.0171608765769 ELSE "ADS"."Feature_37" END AS impter_39, CASE WHEN ("ADS"."Feature_38" IS NULL) THEN 0.0450361559979 ELSE "ADS"."Feature_38" END AS impter_40, CASE WHEN ("ADS"."Feature_39" IS NULL) THEN -0.120358200226 ELSE "ADS"."Feature_39" END AS impter_41, CASE WHEN ("ADS"."Feature_40" IS NULL) THEN -0.176403922822 ELSE "ADS"."Feature_40" END AS impter_42, CASE WHEN ("ADS"."Feature_41" IS NULL) THEN -0.015157075927 ELSE "ADS"."Feature_41" END AS impter_43, CASE WHEN ("ADS"."Feature_42" IS NULL) THEN -0.306874019058 ELSE "ADS"."Feature_42" END AS impter_44, CASE WHEN ("ADS"."Feature_43" IS NULL) THEN -0.0403545806931 ELSE "ADS"."Feature_43" END AS impter_45, CASE WHEN ("ADS"."Feature_44" IS NULL) THEN -0.0078998151246 ELSE "ADS"."Feature_44" END AS impter_46, CASE WHEN ("ADS"."Feature_45" IS NULL) THEN 0.00264793225417 ELSE "ADS"."Feature_45" END AS impter_47, CASE WHEN ("ADS"."Feature_46" IS NULL) THEN -0.149210845983 ELSE "ADS"."Feature_46" END AS impter_48, CASE WHEN ("ADS"."Feature_47" IS NULL) THEN 0.248953992369 ELSE "ADS"."Feature_47" END AS impter_49, CASE WHEN ("ADS"."Feature_48" IS NULL) THEN -0.700424397972 ELSE "ADS"."Feature_48" END AS impter_50, CASE WHEN ("ADS"."Feature_49" IS NULL) THEN 0.0255276737501 ELSE "ADS"."Feature_49" END AS impter_51, CASE WHEN ("ADS"."Feature_50" IS NULL) THEN -0.15642138685 ELSE "ADS"."Feature_50" END AS impter_52, CASE WHEN ("ADS"."Feature_51" IS NULL) THEN -0.127838577178 ELSE "ADS"."Feature_51" END AS impter_53, CASE WHEN ("ADS"."Feature_52" IS NULL) THEN -0.369879523833 ELSE "ADS"."Feature_52" END AS impter_54, CASE WHEN ("ADS"."Feature_53" IS NULL) THEN 0.0410547455889 ELSE "ADS"."Feature_53" END AS impter_55, CASE WHEN ("ADS"."Feature_54" IS NULL) THEN -0.100474275314 ELSE "ADS"."Feature_54" END AS impter_56, CASE WHEN ("ADS"."Feature_55" IS NULL) THEN -0.131272886536 ELSE "ADS"."Feature_55" END AS impter_57, CASE WHEN ("ADS"."Feature_56" IS NULL) THEN 0.368578431365 ELSE "ADS"."Feature_56" END AS impter_58, CASE WHEN ("ADS"."Feature_57" IS NULL) THEN 0.222812465206 ELSE "ADS"."Feature_57" END AS impter_59, CASE WHEN ("ADS"."Feature_58" IS NULL) THEN -0.0062740876184 ELSE "ADS"."Feature_58" END AS impter_60, CASE WHEN ("ADS"."Feature_59" IS NULL) THEN 0.0142685989578 ELSE "ADS"."Feature_59" END AS impter_61, CASE WHEN ("ADS"."Feature_60" IS NULL) THEN -0.0285455115739 ELSE "ADS"."Feature_60" END AS impter_62, CASE WHEN ("ADS"."Feature_61" IS NULL) THEN -0.43749183185 ELSE "ADS"."Feature_61" END AS impter_63, CASE WHEN ("ADS"."Feature_62" IS NULL) THEN -0.368992780588 ELSE "ADS"."Feature_62" END AS impter_64, CASE WHEN ("ADS"."Feature_63" IS NULL) THEN 0.00116904181932 ELSE "ADS"."Feature_63" END AS impter_65, CASE WHEN ("ADS"."Feature_64" IS NULL) THEN -0.0115648737176 ELSE "ADS"."Feature_64" END AS impter_66, CASE WHEN ("ADS"."Feature_65" IS NULL) THEN -0.0435876998969 ELSE "ADS"."Feature_65" END AS impter_67, CASE WHEN ("ADS"."Feature_66" IS NULL) THEN -0.161863413739 ELSE "ADS"."Feature_66" END AS impter_68, CASE WHEN ("ADS"."Feature_67" IS NULL) THEN -0.017272641535 ELSE "ADS"."Feature_67" END AS impter_69, CASE WHEN ("ADS"."Feature_68" IS NULL) THEN -0.364030220369 ELSE "ADS"."Feature_68" END AS impter_70, CASE WHEN ("ADS"."Feature_69" IS NULL) THEN -0.0492730065024 ELSE "ADS"."Feature_69" END AS impter_71, CASE WHEN ("ADS"."Feature_70" IS NULL) THEN -0.0154685126573 ELSE "ADS"."Feature_70" END AS impter_72, CASE WHEN ("ADS"."Feature_71" IS NULL) THEN -0.191629393513 ELSE "ADS"."Feature_71" END AS impter_73, CASE WHEN ("ADS"."Feature_72" IS NULL) THEN 0.0237828303216 ELSE "ADS"."Feature_72" END AS impter_74, CASE WHEN ("ADS"."Feature_73" IS NULL) THEN 0.0204547996726 ELSE "ADS"."Feature_73" END AS impter_75, CASE WHEN ("ADS"."Feature_74" IS NULL) THEN -0.173355346593 ELSE "ADS"."Feature_74" END AS impter_76, CASE WHEN ("ADS"."Feature_75" IS NULL) THEN 0.0275822882458 ELSE "ADS"."Feature_75" END AS impter_77, CASE WHEN ("ADS"."Feature_76" IS NULL) THEN -0.0154523366782 ELSE "ADS"."Feature_76" END AS impter_78, CASE WHEN ("ADS"."Feature_77" IS NULL) THEN -0.0425555457733 ELSE "ADS"."Feature_77" END AS impter_79, CASE WHEN ("ADS"."Feature_78" IS NULL) THEN -0.00942573658037 ELSE "ADS"."Feature_78" END AS impter_80, CASE WHEN ("ADS"."Feature_79" IS NULL) THEN 0.00742367748933 ELSE "ADS"."Feature_79" END AS impter_81, CASE WHEN ("ADS"."Feature_80" IS NULL) THEN 0.0498533264368 ELSE "ADS"."Feature_80" END AS impter_82, CASE WHEN ("ADS"."Feature_81" IS NULL) THEN 0.0279602211794 ELSE "ADS"."Feature_81" END AS impter_83, CASE WHEN ("ADS"."Feature_82" IS NULL) THEN -0.00527050248758 ELSE "ADS"."Feature_82" END AS impter_84, CASE WHEN ("ADS"."Feature_83" IS NULL) THEN -0.0533936117742 ELSE "ADS"."Feature_83" END AS impter_85, CASE WHEN ("ADS"."Feature_84" IS NULL) THEN 0.171620332886 ELSE "ADS"."Feature_84" END AS impter_86, CASE WHEN ("ADS"."Feature_85" IS NULL) THEN 0.0372119970074 ELSE "ADS"."Feature_85" END AS impter_87, CASE WHEN ("ADS"."Feature_86" IS NULL) THEN 0.0184349733304 ELSE "ADS"."Feature_86" END AS impter_88, CASE WHEN ("ADS"."Feature_87" IS NULL) THEN 0.560521632617 ELSE "ADS"."Feature_87" END AS impter_89, CASE WHEN ("ADS"."Feature_88" IS NULL) THEN -0.052850462919 ELSE "ADS"."Feature_88" END AS impter_90, CASE WHEN ("ADS"."Feature_89" IS NULL) THEN 0.0793902173424 ELSE "ADS"."Feature_89" END AS impter_91, CASE WHEN ("ADS"."Feature_90" IS NULL) THEN -2.08866716312 ELSE "ADS"."Feature_90" END AS impter_92, CASE WHEN ("ADS"."Feature_91" IS NULL) THEN -1.0831020639 ELSE "ADS"."Feature_91" END AS impter_93, CASE WHEN ("ADS"."Feature_92" IS NULL) THEN -0.304702362821 ELSE "ADS"."Feature_92" END AS impter_94, CASE WHEN ("ADS"."Feature_93" IS NULL) THEN -0.935426259564 ELSE "ADS"."Feature_93" END AS impter_95, CASE WHEN ("ADS"."Feature_94" IS NULL) THEN -0.098411219927 ELSE "ADS"."Feature_94" END AS impter_96, CASE WHEN ("ADS"."Feature_95" IS NULL) THEN -0.53165348436 ELSE "ADS"."Feature_95" END AS impter_97, CASE WHEN ("ADS"."Feature_96" IS NULL) THEN 0.0141274221378 ELSE "ADS"."Feature_96" END AS impter_98, CASE WHEN ("ADS"."Feature_97" IS NULL) THEN -0.0126312774127 ELSE "ADS"."Feature_97" END AS impter_99, CASE WHEN ("ADS"."Feature_98" IS NULL) THEN 0.0312868812331 ELSE "ADS"."Feature_98" END AS impter_100, CASE WHEN ("ADS"."Feature_99" IS NULL) THEN -0.450390515385 ELSE "ADS"."Feature_99" END AS impter_101 
FROM "FourClass_100" AS "ADS"), 
"ADS_sca_2_OUT" AS 
(SELECT "ADS_imp_1_OUT"."KEY" AS "KEY", (CAST("ADS_imp_1_OUT".impter_2 AS FLOAT) - 0.00653574012116) / 0.985821711919 AS scaler_2, (CAST("ADS_imp_1_OUT".impter_3 AS FLOAT) - 0.16767827126) / 4.17893277906 AS scaler_3, (CAST("ADS_imp_1_OUT".impter_4 AS FLOAT) - -0.0551470417358) / 4.08515606391 AS scaler_4, (CAST("ADS_imp_1_OUT".impter_5 AS FLOAT) - 0.00152116930519) / 1.05839942213 AS scaler_5, (CAST("ADS_imp_1_OUT".impter_6 AS FLOAT) - 0.0314276019104) / 0.958502901404 AS scaler_6, (CAST("ADS_imp_1_OUT".impter_7 AS FLOAT) - 0.0261796831787) / 0.993854807715 AS scaler_7, (CAST("ADS_imp_1_OUT".impter_8 AS FLOAT) - -0.0112547131221) / 0.995945599637 AS scaler_8, (CAST("ADS_imp_1_OUT".impter_9 AS FLOAT) - -0.0168862118009) / 1.04542967803 AS scaler_9, (CAST("ADS_imp_1_OUT".impter_10 AS FLOAT) - -0.0273427029645) / 4.33135674182 AS scaler_10, (CAST("ADS_imp_1_OUT".impter_11 AS FLOAT) - -0.163701278848) / 4.45889820593 AS scaler_11, (CAST("ADS_imp_1_OUT".impter_12 AS FLOAT) - 0.0354122507389) / 1.03661648781 AS scaler_12, (CAST("ADS_imp_1_OUT".impter_13 AS FLOAT) - -0.0285291234756) / 1.00467620555 AS scaler_13, (CAST("ADS_imp_1_OUT".impter_14 AS FLOAT) - -0.0267494449896) / 0.99962402671 AS scaler_14, (CAST("ADS_imp_1_OUT".impter_15 AS FLOAT) - 0.386019822911) / 4.14480478652 AS scaler_15, (CAST("ADS_imp_1_OUT".impter_16 AS FLOAT) - 0.0162145257314) / 1.01728129667 AS scaler_16, (CAST("ADS_imp_1_OUT".impter_17 AS FLOAT) - 0.227237750778) / 4.36711262018 AS scaler_17, (CAST("ADS_imp_1_OUT".impter_18 AS FLOAT) - 0.566373456694) / 4.11815688405 AS scaler_18, (CAST("ADS_imp_1_OUT".impter_19 AS FLOAT) - 0.277696410616) / 4.01432897572 AS scaler_19, (CAST("ADS_imp_1_OUT".impter_20 AS FLOAT) - 0.00599432681235) / 0.972439502321 AS scaler_20, (CAST("ADS_imp_1_OUT".impter_21 AS FLOAT) - -0.0218525344697) / 0.985687517726 AS scaler_21, (CAST("ADS_imp_1_OUT".impter_22 AS FLOAT) - -0.028375425917) / 1.02310346987 AS scaler_22, (CAST("ADS_imp_1_OUT".impter_23 AS FLOAT) - 0.0151643232963) / 4.35314516918 AS scaler_23, (CAST("ADS_imp_1_OUT".impter_24 AS FLOAT) - 0.0174691345488) / 1.00180565427 AS scaler_24, (CAST("ADS_imp_1_OUT".impter_25 AS FLOAT) - 0.0349390944943) / 0.992721649768 AS scaler_25, (CAST("ADS_imp_1_OUT".impter_26 AS FLOAT) - -0.144361607634) / 4.46739766886 AS scaler_26, (CAST("ADS_imp_1_OUT".impter_27 AS FLOAT) - 0.146104677444) / 4.10734277856 AS scaler_27, (CAST("ADS_imp_1_OUT".impter_28 AS FLOAT) - 0.0676158423738) / 4.27764303646 AS scaler_28, (CAST("ADS_imp_1_OUT".impter_29 AS FLOAT) - -0.30836845608) / 4.03019568626 AS scaler_29, (CAST("ADS_imp_1_OUT".impter_30 AS FLOAT) - 0.952575301761) / 4.01730262302 AS scaler_30, (CAST("ADS_imp_1_OUT".impter_31 AS FLOAT) - -0.0581338391011) / 4.03353195749 AS scaler_31, (CAST("ADS_imp_1_OUT".impter_32 AS FLOAT) - -0.0131244127149) / 0.955198781566 AS scaler_32, (CAST("ADS_imp_1_OUT".impter_33 AS FLOAT) - -0.337551254331) / 4.10657168041 AS scaler_33, (CAST("ADS_imp_1_OUT".impter_34 AS FLOAT) - 0.0390265145932) / 0.990359225337 AS scaler_34, (CAST("ADS_imp_1_OUT".impter_35 AS FLOAT) - -0.0402939442132) / 1.01529611676 AS scaler_35, (CAST("ADS_imp_1_OUT".impter_36 AS FLOAT) - -0.171611885737) / 4.17922956302 AS scaler_36, (CAST("ADS_imp_1_OUT".impter_37 AS FLOAT) - 0.0126477868686) / 1.00783076186 AS scaler_37, (CAST("ADS_imp_1_OUT".impter_38 AS FLOAT) - 0.00519373530851) / 4.29733218367 AS scaler_38, (CAST("ADS_imp_1_OUT".impter_39 AS FLOAT) - -0.0171608765769) / 1.01737885571 AS scaler_39, (CAST("ADS_imp_1_OUT".impter_40 AS FLOAT) - 0.0450361559979) / 3.90428113679 AS scaler_40, (CAST("ADS_imp_1_OUT".impter_41 AS FLOAT) - -0.120358200226) / 3.98402860362 AS scaler_41, (CAST("ADS_imp_1_OUT".impter_42 AS FLOAT) - -0.176403922822) / 4.06931463762 AS scaler_42, (CAST("ADS_imp_1_OUT".impter_43 AS FLOAT) - -0.015157075927) / 1.02915738955 AS scaler_43, (CAST("ADS_imp_1_OUT".impter_44 AS FLOAT) - -0.306874019058) / 4.34791251221 AS scaler_44, (CAST("ADS_imp_1_OUT".impter_45 AS FLOAT) - -0.0403545806931) / 4.05064377381 AS scaler_45, (CAST("ADS_imp_1_OUT".impter_46 AS FLOAT) - -0.0078998151246) / 1.00637547659 AS scaler_46, (CAST("ADS_imp_1_OUT".impter_47 AS FLOAT) - 0.00264793225417) / 1.00214477559 AS scaler_47, (CAST("ADS_imp_1_OUT".impter_48 AS FLOAT) - -0.149210845983) / 4.10340200989 AS scaler_48, (CAST("ADS_imp_1_OUT".impter_49 AS FLOAT) - 0.248953992369) / 4.23220038033 AS scaler_49, (CAST("ADS_imp_1_OUT".impter_50 AS FLOAT) - -0.700424397972) / 4.22076654199 AS scaler_50, (CAST("ADS_imp_1_OUT".impter_51 AS FLOAT) - 0.0255276737501) / 1.02067409273 AS scaler_51, (CAST("ADS_imp_1_OUT".impter_52 AS FLOAT) - -0.15642138685) / 4.07831067125 AS scaler_52, (CAST("ADS_imp_1_OUT".impter_53 AS FLOAT) - -0.127838577178) / 4.24723680136 AS scaler_53, (CAST("ADS_imp_1_OUT".impter_54 AS FLOAT) - -0.369879523833) / 4.03767584848 AS scaler_54, (CAST("ADS_imp_1_OUT".impter_55 AS FLOAT) - 0.0410547455889) / 4.44557137144 AS scaler_55, (CAST("ADS_imp_1_OUT".impter_56 AS FLOAT) - -0.100474275314) / 4.04583682644 AS scaler_56, (CAST("ADS_imp_1_OUT".impter_57 AS FLOAT) - -0.131272886536) / 4.2566060095 AS scaler_57, (CAST("ADS_imp_1_OUT".impter_58 AS FLOAT) - 0.368578431365) / 4.04294690881 AS scaler_58, (CAST("ADS_imp_1_OUT".impter_59 AS FLOAT) - 0.222812465206) / 4.25239806876 AS scaler_59, (CAST("ADS_imp_1_OUT".impter_60 AS FLOAT) - -0.0062740876184) / 1.0131754299 AS scaler_60, (CAST("ADS_imp_1_OUT".impter_61 AS FLOAT) - 0.0142685989578) / 0.975232456173 AS scaler_61, (CAST("ADS_imp_1_OUT".impter_62 AS FLOAT) - -0.0285455115739) / 0.996017661218 AS scaler_62, (CAST("ADS_imp_1_OUT".impter_63 AS FLOAT) - -0.43749183185) / 4.23875925656 AS scaler_63, (CAST("ADS_imp_1_OUT".impter_64 AS FLOAT) - -0.368992780588) / 4.18274187652 AS scaler_64, (CAST("ADS_imp_1_OUT".impter_65 AS FLOAT) - 0.00116904181932) / 1.04333652499 AS scaler_65, (CAST("ADS_imp_1_OUT".impter_66 AS FLOAT) - -0.0115648737176) / 4.08150429415 AS scaler_66, (CAST("ADS_imp_1_OUT".impter_67 AS FLOAT) - -0.0435876998969) / 1.05866451901 AS scaler_67, (CAST("ADS_imp_1_OUT".impter_68 AS FLOAT) - -0.161863413739) / 4.25966623517 AS scaler_68, (CAST("ADS_imp_1_OUT".impter_69 AS FLOAT) - -0.017272641535) / 1.01030583344 AS scaler_69, (CAST("ADS_imp_1_OUT".impter_70 AS FLOAT) - -0.364030220369) / 4.23529048916 AS scaler_70, (CAST("ADS_imp_1_OUT".impter_71 AS FLOAT) - -0.0492730065024) / 4.31080236531 AS scaler_71, (CAST("ADS_imp_1_OUT".impter_72 AS FLOAT) - -0.0154685126573) / 1.01066080153 AS scaler_72, (CAST("ADS_imp_1_OUT".impter_73 AS FLOAT) - -0.191629393513) / 4.11604496555 AS scaler_73, (CAST("ADS_imp_1_OUT".impter_74 AS FLOAT) - 0.0237828303216) / 0.997185935238 AS scaler_74, (CAST("ADS_imp_1_OUT".impter_75 AS FLOAT) - 0.0204547996726) / 0.964047487679 AS scaler_75, (CAST("ADS_imp_1_OUT".impter_76 AS FLOAT) - -0.173355346593) / 4.26884008329 AS scaler_76, (CAST("ADS_imp_1_OUT".impter_77 AS FLOAT) - 0.0275822882458) / 1.00287363715 AS scaler_77, (CAST("ADS_imp_1_OUT".impter_78 AS FLOAT) - -0.0154523366782) / 0.951796972878 AS scaler_78, (CAST("ADS_imp_1_OUT".impter_79 AS FLOAT) - -0.0425555457733) / 1.02604198012 AS scaler_79, (CAST("ADS_imp_1_OUT".impter_80 AS FLOAT) - -0.00942573658037) / 0.981547933163 AS scaler_80, (CAST("ADS_imp_1_OUT".impter_81 AS FLOAT) - 0.00742367748933) / 1.0171447638 AS scaler_81, (CAST("ADS_imp_1_OUT".impter_82 AS FLOAT) - 0.0498533264368) / 1.01381217519 AS scaler_82, (CAST("ADS_imp_1_OUT".impter_83 AS FLOAT) - 0.0279602211794) / 1.00493310879 AS scaler_83, (CAST("ADS_imp_1_OUT".impter_84 AS FLOAT) - -0.00527050248758) / 1.02332528491 AS scaler_84, (CAST("ADS_imp_1_OUT".impter_85 AS FLOAT) - -0.0533936117742) / 1.00458919199 AS scaler_85, (CAST("ADS_imp_1_OUT".impter_86 AS FLOAT) - 0.171620332886) / 4.24884427578 AS scaler_86, (CAST("ADS_imp_1_OUT".impter_87 AS FLOAT) - 0.0372119970074) / 4.25404858308 AS scaler_87, (CAST("ADS_imp_1_OUT".impter_88 AS FLOAT) - 0.0184349733304) / 3.94972884089 AS scaler_88, (CAST("ADS_imp_1_OUT".impter_89 AS FLOAT) - 0.560521632617) / 4.33133243898 AS scaler_89, (CAST("ADS_imp_1_OUT".impter_90 AS FLOAT) - -0.052850462919) / 1.03583971022 AS scaler_90, (CAST("ADS_imp_1_OUT".impter_91 AS FLOAT) - 0.0793902173424) / 0.969876446028 AS scaler_91, (CAST("ADS_imp_1_OUT".impter_92 AS FLOAT) - -2.08866716312) / 15.3022152465 AS scaler_92, (CAST("ADS_imp_1_OUT".impter_93 AS FLOAT) - -1.0831020639) / 4.36710902027 AS scaler_93, (CAST("ADS_imp_1_OUT".impter_94 AS FLOAT) - -0.304702362821) / 4.20429236235 AS scaler_94, (CAST("ADS_imp_1_OUT".impter_95 AS FLOAT) - -0.935426259564) / 15.3570057667 AS scaler_95, (CAST("ADS_imp_1_OUT".impter_96 AS FLOAT) - -0.098411219927) / 0.952484869944 AS scaler_96, (CAST("ADS_imp_1_OUT".impter_97 AS FLOAT) - -0.53165348436) / 3.97700071824 AS scaler_97, (CAST("ADS_imp_1_OUT".impter_98 AS FLOAT) - 0.0141274221378) / 0.987925892541 AS scaler_98, (CAST("ADS_imp_1_OUT".impter_99 AS FLOAT) - -0.0126312774127) / 1.01519644483 AS scaler_99, (CAST("ADS_imp_1_OUT".impter_100 AS FLOAT) - 0.0312868812331) / 0.989361802421 AS scaler_100, (CAST("ADS_imp_1_OUT".impter_101 AS FLOAT) - -0.450390515385) / 4.24470032509 AS scaler_101 
FROM "ADS_imp_1_OUT"), 
"DT_node_lookup_16" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_19 < -0.4837368130683899) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_36 < 0.5660068988800049) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_27 < -0.20135825872421265) THEN 7 ELSE 8 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_50 < 0.35989823937416077) THEN 9 ELSE 10 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_53 < 0.5165193676948547) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_4 < 0.19550010561943054) THEN 11 ELSE 12 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_54 < -0.16432341933250427) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_16" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Score" AS "Score" 
FROM (SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, 3 AS parent_id, -0.04385801777243614 AS "Score" UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, 3 AS parent_id, 0.04399209842085838 AS "Score" UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, 4 AS parent_id, 0.10625304281711578 AS "Score" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, 4 AS parent_id, 0.007796549238264561 AS "Score" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, 5 AS parent_id, -0.012943456880748272 AS "Score" UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, 5 AS parent_id, -0.05297156795859337 AS "Score" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, 6 AS parent_id, -0.027847403660416603 AS "Score" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, 6 AS parent_id, 0.06330638378858566 AS "Score") AS "Values"), 
"DT_Output_16" AS 
(SELECT "DT_node_lookup_16"."KEY" AS "KEY", "DT_node_lookup_16".node_id_2 AS node_id_2, "DT_node_data_16".node_id AS node_id, "DT_node_data_16".feature AS feature, "DT_node_data_16".threshold AS threshold, "DT_node_data_16".depth AS depth, "DT_node_data_16".parent_id AS parent_id, "DT_node_data_16"."Score" AS "Score" 
FROM "DT_node_lookup_16" LEFT OUTER JOIN "DT_node_data_16" ON "DT_node_lookup_16".node_id_2 = "DT_node_data_16".node_id), 
"XGB_Tree_0_4" AS 
(SELECT "DT_Output_16"."KEY" AS "KEY", "DT_Output_16"."Score" AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3" 
FROM "DT_Output_16"), 
"DT_node_lookup_17" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_33 < 0.2938539981842041) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_29 < -0.2826199531555176) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_101 < 0.7306463122367859) THEN 7 ELSE 8 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_70 < 0.2864289879798889) THEN 9 ELSE 10 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_52 < -0.18976891040802002) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_72 < 0.822516679763794) THEN 11 ELSE 12 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_45 < -0.13795293867588043) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_17" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Score" AS "Score" 
FROM (SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, 3 AS parent_id, -0.05378418043255806 AS "Score" UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, 3 AS parent_id, -0.004072760231792927 AS "Score" UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, 4 AS parent_id, 0.021538013592362404 AS "Score" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, 4 AS parent_id, -0.03184014558792114 AS "Score" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, 5 AS parent_id, -0.028020789846777916 AS "Score" UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, 5 AS parent_id, 0.04416603222489357 AS "Score" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, 6 AS parent_id, 0.006774949375540018 AS "Score" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, 6 AS parent_id, 0.06902935355901718 AS "Score") AS "Values"), 
"DT_Output_17" AS 
(SELECT "DT_node_lookup_17"."KEY" AS "KEY", "DT_node_lookup_17".node_id_2 AS node_id_2, "DT_node_data_17".node_id AS node_id, "DT_node_data_17".feature AS feature, "DT_node_data_17".threshold AS threshold, "DT_node_data_17".depth AS depth, "DT_node_data_17".parent_id AS parent_id, "DT_node_data_17"."Score" AS "Score" 
FROM "DT_node_lookup_17" LEFT OUTER JOIN "DT_node_data_17" ON "DT_node_lookup_17".node_id_2 = "DT_node_data_17".node_id), 
"XGB_Tree_1_4" AS 
(SELECT "DT_Output_17"."KEY" AS "KEY", 0.0 AS "Score_0", "DT_Output_17"."Score" AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3" 
FROM "DT_Output_17"), 
"DT_node_lookup_18" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_40 < 0.23466400802135468) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_66 < -0.20800167322158813) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_17 < -0.7462559938430786) THEN 7 ELSE 8 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_23 < 0.653800368309021) THEN 9 ELSE 10 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_36 < -0.8171613216400146) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_93 < -0.5743521451950073) THEN 11 ELSE 12 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_68 < 0.48524123430252075) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_18" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Score" AS "Score" 
FROM (SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, 3 AS parent_id, -0.0011311509879305959 AS "Score" UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, 3 AS parent_id, -0.05170100927352905 AS "Score" UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, 4 AS parent_id, -0.01547986175864935 AS "Score" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, 4 AS parent_id, 0.054527681320905685 AS "Score" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, 5 AS parent_id, 0.12224248796701431 AS "Score" UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, 5 AS parent_id, 0.037100281566381454 AS "Score" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, 6 AS parent_id, -0.01568789966404438 AS "Score" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, 6 AS parent_id, 0.05215974524617195 AS "Score") AS "Values"), 
"DT_Output_18" AS 
(SELECT "DT_node_lookup_18"."KEY" AS "KEY", "DT_node_lookup_18".node_id_2 AS node_id_2, "DT_node_data_18".node_id AS node_id, "DT_node_data_18".feature AS feature, "DT_node_data_18".threshold AS threshold, "DT_node_data_18".depth AS depth, "DT_node_data_18".parent_id AS parent_id, "DT_node_data_18"."Score" AS "Score" 
FROM "DT_node_lookup_18" LEFT OUTER JOIN "DT_node_data_18" ON "DT_node_lookup_18".node_id_2 = "DT_node_data_18".node_id), 
"XGB_Tree_2_4" AS 
(SELECT "DT_Output_18"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", "DT_Output_18"."Score" AS "Score_2", 0.0 AS "Score_3" 
FROM "DT_Output_18"), 
"DT_node_lookup_19" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_70 < -0.24858278036117554) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_52 < -1.3446013927459717) THEN 3 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_45 < -1.1659590005874634) THEN 7 ELSE 8 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_40 < -0.9827808141708374) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_87 < 0.1358424425125122) THEN 9 ELSE 10 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_66 < -0.45711612701416016) THEN 11 ELSE 12 END END END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_19" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Score" AS "Score" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, 1 AS parent_id, 0.03998119756579399 AS "Score" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, 4 AS parent_id, 0.03256377950310707 AS "Score" UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, 4 AS parent_id, -0.04128411412239075 AS "Score" UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, 5 AS parent_id, 0.11459574848413467 AS "Score" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, 5 AS parent_id, 0.02961430884897709 AS "Score" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, 6 AS parent_id, -0.028575077652931213 AS "Score" UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, 6 AS parent_id, 0.02120259404182434 AS "Score") AS "Values"), 
"DT_Output_19" AS 
(SELECT "DT_node_lookup_19"."KEY" AS "KEY", "DT_node_lookup_19".node_id_2 AS node_id_2, "DT_node_data_19".node_id AS node_id, "DT_node_data_19".feature AS feature, "DT_node_data_19".threshold AS threshold, "DT_node_data_19".depth AS depth, "DT_node_data_19".parent_id AS parent_id, "DT_node_data_19"."Score" AS "Score" 
FROM "DT_node_lookup_19" LEFT OUTER JOIN "DT_node_data_19" ON "DT_node_lookup_19".node_id_2 = "DT_node_data_19".node_id), 
"XGB_Tree_3_4" AS 
(SELECT "DT_Output_19"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", "DT_Output_19"."Score" AS "Score_3" 
FROM "DT_Output_19"), 
"DT_node_lookup_20" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_36 < -0.3963547945022583) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_58 < -0.8081027269363403) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_70 < 0.1271437555551529) THEN 7 ELSE 8 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_58 < 0.05312246084213257) THEN 9 ELSE 10 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_19 < -0.4885696768760681) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_10 < 0.3978305160999298) THEN 11 ELSE 12 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_4 < 0.30967339873313904) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_20" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Score" AS "Score" 
FROM (SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, 3 AS parent_id, 0.055468231439590454 AS "Score" UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, 3 AS parent_id, -0.02480579912662506 AS "Score" UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, 4 AS parent_id, -0.02433389239013195 AS "Score" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, 4 AS parent_id, -0.05841735750436783 AS "Score" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, 5 AS parent_id, 0.07362955808639526 AS "Score" UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, 5 AS parent_id, -0.0022624977864325047 AS "Score" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, 6 AS parent_id, 0.015429462306201458 AS "Score" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, 6 AS parent_id, -0.03744170069694519 AS "Score") AS "Values"), 
"DT_Output_20" AS 
(SELECT "DT_node_lookup_20"."KEY" AS "KEY", "DT_node_lookup_20".node_id_2 AS node_id_2, "DT_node_data_20".node_id AS node_id, "DT_node_data_20".feature AS feature, "DT_node_data_20".threshold AS threshold, "DT_node_data_20".depth AS depth, "DT_node_data_20".parent_id AS parent_id, "DT_node_data_20"."Score" AS "Score" 
FROM "DT_node_lookup_20" LEFT OUTER JOIN "DT_node_data_20" ON "DT_node_lookup_20".node_id_2 = "DT_node_data_20".node_id), 
"XGB_Tree_0_5" AS 
(SELECT "DT_Output_20"."KEY" AS "KEY", "DT_Output_20"."Score" AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3" 
FROM "DT_Output_20"), 
"DT_node_lookup_21" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_45 < 0.3580455183982849) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_66 < -0.2498721480369568) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_29 < 0.744379997253418) THEN 7 ELSE 8 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_26 < 0.820117175579071) THEN 9 ELSE 10 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_57 < 0.458151251077652) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_64 < 0.8744536638259888) THEN 11 ELSE 12 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_4 < 0.08854421973228455) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_21" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Score" AS "Score" 
FROM (SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, 3 AS parent_id, -0.0060035912320017815 AS "Score" UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, 3 AS parent_id, 0.06701063364744186 AS "Score" UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, 4 AS parent_id, -0.044362135231494904 AS "Score" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, 4 AS parent_id, 0.011958517134189606 AS "Score" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, 5 AS parent_id, 0.06137970834970474 AS "Score" UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, 5 AS parent_id, -0.027874445542693138 AS "Score" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, 6 AS parent_id, -0.05646149069070816 AS "Score" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, 6 AS parent_id, 0.006918293423950672 AS "Score") AS "Values"), 
"DT_Output_21" AS 
(SELECT "DT_node_lookup_21"."KEY" AS "KEY", "DT_node_lookup_21".node_id_2 AS node_id_2, "DT_node_data_21".node_id AS node_id, "DT_node_data_21".feature AS feature, "DT_node_data_21".threshold AS threshold, "DT_node_data_21".depth AS depth, "DT_node_data_21".parent_id AS parent_id, "DT_node_data_21"."Score" AS "Score" 
FROM "DT_node_lookup_21" LEFT OUTER JOIN "DT_node_data_21" ON "DT_node_lookup_21".node_id_2 = "DT_node_data_21".node_id), 
"XGB_Tree_1_5" AS 
(SELECT "DT_Output_21"."KEY" AS "KEY", 0.0 AS "Score_0", "DT_Output_21"."Score" AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3" 
FROM "DT_Output_21"), 
"DT_node_lookup_22" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_63 < 0.562813401222229) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_17 < 0.009806754067540169) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_50 < 0.26147329807281494) THEN 7 ELSE 8 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_11 < 0.15686754882335663) THEN 9 ELSE 10 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_29 < -0.38603299856185913) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_23 < 0.20110999047756195) THEN 11 ELSE 12 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_51 < -0.8340598344802856) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_22" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Score" AS "Score" 
FROM (SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, 3 AS parent_id, 0.010038317181169987 AS "Score" UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, 3 AS parent_id, 0.06581904739141464 AS "Score" UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, 4 AS parent_id, -0.03301742300391197 AS "Score" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, 4 AS parent_id, 0.012963376939296722 AS "Score" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, 5 AS parent_id, -0.02734876051545143 AS "Score" UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, 5 AS parent_id, 0.05313423275947571 AS "Score" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, 6 AS parent_id, 0.003317302791401744 AS "Score" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, 6 AS parent_id, -0.058521535247564316 AS "Score") AS "Values"), 
"DT_Output_22" AS 
(SELECT "DT_node_lookup_22"."KEY" AS "KEY", "DT_node_lookup_22".node_id_2 AS node_id_2, "DT_node_data_22".node_id AS node_id, "DT_node_data_22".feature AS feature, "DT_node_data_22".threshold AS threshold, "DT_node_data_22".depth AS depth, "DT_node_data_22".parent_id AS parent_id, "DT_node_data_22"."Score" AS "Score" 
FROM "DT_node_lookup_22" LEFT OUTER JOIN "DT_node_data_22" ON "DT_node_lookup_22".node_id_2 = "DT_node_data_22".node_id), 
"XGB_Tree_2_5" AS 
(SELECT "DT_Output_22"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", "DT_Output_22"."Score" AS "Score_2", 0.0 AS "Score_3" 
FROM "DT_Output_22"), 
"DT_node_lookup_23" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_86 < -0.2933613657951355) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_27 < -0.13283228874206543) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_40 < 0.5891270041465759) THEN 7 ELSE 8 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_47 < 0.41482824087142944) THEN 9 ELSE 10 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_4 < -1.5035641193389893) THEN 5 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_66 < -0.40235328674316406) THEN 11 ELSE 12 END END END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_23" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Score" AS "Score" 
FROM (SELECT 5 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, 2 AS parent_id, 0.05113719031214714 AS "Score" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, 3 AS parent_id, 0.07376319169998169 AS "Score" UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, 3 AS parent_id, -0.009297083131968975 AS "Score" UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, 4 AS parent_id, -0.029553154483437538 AS "Score" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, 4 AS parent_id, 0.035830043256282806 AS "Score" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, 6 AS parent_id, -0.04796059429645538 AS "Score" UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, 6 AS parent_id, -0.007959111593663692 AS "Score") AS "Values"), 
"DT_Output_23" AS 
(SELECT "DT_node_lookup_23"."KEY" AS "KEY", "DT_node_lookup_23".node_id_2 AS node_id_2, "DT_node_data_23".node_id AS node_id, "DT_node_data_23".feature AS feature, "DT_node_data_23".threshold AS threshold, "DT_node_data_23".depth AS depth, "DT_node_data_23".parent_id AS parent_id, "DT_node_data_23"."Score" AS "Score" 
FROM "DT_node_lookup_23" LEFT OUTER JOIN "DT_node_data_23" ON "DT_node_lookup_23".node_id_2 = "DT_node_data_23".node_id), 
"XGB_Tree_3_5" AS 
(SELECT "DT_Output_23"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", "DT_Output_23"."Score" AS "Score_3" 
FROM "DT_Output_23")
 SELECT "Score_Union_CTE_esu_2"."KEY", "Score_Union_CTE_esu_2"."Score_0", "Score_Union_CTE_esu_2"."Score_1", "Score_Union_CTE_esu_2"."Score_2", "Score_Union_CTE_esu_2"."Score_3" 
FROM (SELECT "XGB_Tree_0_4"."KEY" AS "KEY", "XGB_Tree_0_4"."Score_0" AS "Score_0", "XGB_Tree_0_4"."Score_1" AS "Score_1", "XGB_Tree_0_4"."Score_2" AS "Score_2", "XGB_Tree_0_4"."Score_3" AS "Score_3" 
FROM "XGB_Tree_0_4" UNION ALL SELECT "XGB_Tree_1_4"."KEY" AS "KEY", "XGB_Tree_1_4"."Score_0" AS "Score_0", "XGB_Tree_1_4"."Score_1" AS "Score_1", "XGB_Tree_1_4"."Score_2" AS "Score_2", "XGB_Tree_1_4"."Score_3" AS "Score_3" 
FROM "XGB_Tree_1_4" UNION ALL SELECT "XGB_Tree_2_4"."KEY" AS "KEY", "XGB_Tree_2_4"."Score_0" AS "Score_0", "XGB_Tree_2_4"."Score_1" AS "Score_1", "XGB_Tree_2_4"."Score_2" AS "Score_2", "XGB_Tree_2_4"."Score_3" AS "Score_3" 
FROM "XGB_Tree_2_4" UNION ALL SELECT "XGB_Tree_3_4"."KEY" AS "KEY", "XGB_Tree_3_4"."Score_0" AS "Score_0", "XGB_Tree_3_4"."Score_1" AS "Score_1", "XGB_Tree_3_4"."Score_2" AS "Score_2", "XGB_Tree_3_4"."Score_3" AS "Score_3" 
FROM "XGB_Tree_3_4" UNION ALL SELECT "XGB_Tree_0_5"."KEY" AS "KEY", "XGB_Tree_0_5"."Score_0" AS "Score_0", "XGB_Tree_0_5"."Score_1" AS "Score_1", "XGB_Tree_0_5"."Score_2" AS "Score_2", "XGB_Tree_0_5"."Score_3" AS "Score_3" 
FROM "XGB_Tree_0_5" UNION ALL SELECT "XGB_Tree_1_5"."KEY" AS "KEY", "XGB_Tree_1_5"."Score_0" AS "Score_0", "XGB_Tree_1_5"."Score_1" AS "Score_1", "XGB_Tree_1_5"."Score_2" AS "Score_2", "XGB_Tree_1_5"."Score_3" AS "Score_3" 
FROM "XGB_Tree_1_5" UNION ALL SELECT "XGB_Tree_2_5"."KEY" AS "KEY", "XGB_Tree_2_5"."Score_0" AS "Score_0", "XGB_Tree_2_5"."Score_1" AS "Score_1", "XGB_Tree_2_5"."Score_2" AS "Score_2", "XGB_Tree_2_5"."Score_3" AS "Score_3" 
FROM "XGB_Tree_2_5" UNION ALL SELECT "XGB_Tree_3_5"."KEY" AS "KEY", "XGB_Tree_3_5"."Score_0" AS "Score_0", "XGB_Tree_3_5"."Score_1" AS "Score_1", "XGB_Tree_3_5"."Score_2" AS "Score_2", "XGB_Tree_3_5"."Score_3" AS "Score_3" 
FROM "XGB_Tree_3_5") AS "Score_Union_CTE_esu_2"), 
"Score_Union_CTE_3" AS 
(WITH "ADS_imp_1_OUT" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_0" IS NULL) THEN 0.00653574012116 ELSE "ADS"."Feature_0" END AS impter_2, CASE WHEN ("ADS"."Feature_1" IS NULL) THEN 0.16767827126 ELSE "ADS"."Feature_1" END AS impter_3, CASE WHEN ("ADS"."Feature_2" IS NULL) THEN -0.0551470417358 ELSE "ADS"."Feature_2" END AS impter_4, CASE WHEN ("ADS"."Feature_3" IS NULL) THEN 0.00152116930519 ELSE "ADS"."Feature_3" END AS impter_5, CASE WHEN ("ADS"."Feature_4" IS NULL) THEN 0.0314276019104 ELSE "ADS"."Feature_4" END AS impter_6, CASE WHEN ("ADS"."Feature_5" IS NULL) THEN 0.0261796831787 ELSE "ADS"."Feature_5" END AS impter_7, CASE WHEN ("ADS"."Feature_6" IS NULL) THEN -0.0112547131221 ELSE "ADS"."Feature_6" END AS impter_8, CASE WHEN ("ADS"."Feature_7" IS NULL) THEN -0.0168862118009 ELSE "ADS"."Feature_7" END AS impter_9, CASE WHEN ("ADS"."Feature_8" IS NULL) THEN -0.0273427029645 ELSE "ADS"."Feature_8" END AS impter_10, CASE WHEN ("ADS"."Feature_9" IS NULL) THEN -0.163701278848 ELSE "ADS"."Feature_9" END AS impter_11, CASE WHEN ("ADS"."Feature_10" IS NULL) THEN 0.0354122507389 ELSE "ADS"."Feature_10" END AS impter_12, CASE WHEN ("ADS"."Feature_11" IS NULL) THEN -0.0285291234756 ELSE "ADS"."Feature_11" END AS impter_13, CASE WHEN ("ADS"."Feature_12" IS NULL) THEN -0.0267494449896 ELSE "ADS"."Feature_12" END AS impter_14, CASE WHEN ("ADS"."Feature_13" IS NULL) THEN 0.386019822911 ELSE "ADS"."Feature_13" END AS impter_15, CASE WHEN ("ADS"."Feature_14" IS NULL) THEN 0.0162145257314 ELSE "ADS"."Feature_14" END AS impter_16, CASE WHEN ("ADS"."Feature_15" IS NULL) THEN 0.227237750778 ELSE "ADS"."Feature_15" END AS impter_17, CASE WHEN ("ADS"."Feature_16" IS NULL) THEN 0.566373456694 ELSE "ADS"."Feature_16" END AS impter_18, CASE WHEN ("ADS"."Feature_17" IS NULL) THEN 0.277696410616 ELSE "ADS"."Feature_17" END AS impter_19, CASE WHEN ("ADS"."Feature_18" IS NULL) THEN 0.00599432681235 ELSE "ADS"."Feature_18" END AS impter_20, CASE WHEN ("ADS"."Feature_19" IS NULL) THEN -0.0218525344697 ELSE "ADS"."Feature_19" END AS impter_21, CASE WHEN ("ADS"."Feature_20" IS NULL) THEN -0.028375425917 ELSE "ADS"."Feature_20" END AS impter_22, CASE WHEN ("ADS"."Feature_21" IS NULL) THEN 0.0151643232963 ELSE "ADS"."Feature_21" END AS impter_23, CASE WHEN ("ADS"."Feature_22" IS NULL) THEN 0.0174691345488 ELSE "ADS"."Feature_22" END AS impter_24, CASE WHEN ("ADS"."Feature_23" IS NULL) THEN 0.0349390944943 ELSE "ADS"."Feature_23" END AS impter_25, CASE WHEN ("ADS"."Feature_24" IS NULL) THEN -0.144361607634 ELSE "ADS"."Feature_24" END AS impter_26, CASE WHEN ("ADS"."Feature_25" IS NULL) THEN 0.146104677444 ELSE "ADS"."Feature_25" END AS impter_27, CASE WHEN ("ADS"."Feature_26" IS NULL) THEN 0.0676158423738 ELSE "ADS"."Feature_26" END AS impter_28, CASE WHEN ("ADS"."Feature_27" IS NULL) THEN -0.30836845608 ELSE "ADS"."Feature_27" END AS impter_29, CASE WHEN ("ADS"."Feature_28" IS NULL) THEN 0.952575301761 ELSE "ADS"."Feature_28" END AS impter_30, CASE WHEN ("ADS"."Feature_29" IS NULL) THEN -0.0581338391011 ELSE "ADS"."Feature_29" END AS impter_31, CASE WHEN ("ADS"."Feature_30" IS NULL) THEN -0.0131244127149 ELSE "ADS"."Feature_30" END AS impter_32, CASE WHEN ("ADS"."Feature_31" IS NULL) THEN -0.337551254331 ELSE "ADS"."Feature_31" END AS impter_33, CASE WHEN ("ADS"."Feature_32" IS NULL) THEN 0.0390265145932 ELSE "ADS"."Feature_32" END AS impter_34, CASE WHEN ("ADS"."Feature_33" IS NULL) THEN -0.0402939442132 ELSE "ADS"."Feature_33" END AS impter_35, CASE WHEN ("ADS"."Feature_34" IS NULL) THEN -0.171611885737 ELSE "ADS"."Feature_34" END AS impter_36, CASE WHEN ("ADS"."Feature_35" IS NULL) THEN 0.0126477868686 ELSE "ADS"."Feature_35" END AS impter_37, CASE WHEN ("ADS"."Feature_36" IS NULL) THEN 0.00519373530851 ELSE "ADS"."Feature_36" END AS impter_38, CASE WHEN ("ADS"."Feature_37" IS NULL) THEN -0.0171608765769 ELSE "ADS"."Feature_37" END AS impter_39, CASE WHEN ("ADS"."Feature_38" IS NULL) THEN 0.0450361559979 ELSE "ADS"."Feature_38" END AS impter_40, CASE WHEN ("ADS"."Feature_39" IS NULL) THEN -0.120358200226 ELSE "ADS"."Feature_39" END AS impter_41, CASE WHEN ("ADS"."Feature_40" IS NULL) THEN -0.176403922822 ELSE "ADS"."Feature_40" END AS impter_42, CASE WHEN ("ADS"."Feature_41" IS NULL) THEN -0.015157075927 ELSE "ADS"."Feature_41" END AS impter_43, CASE WHEN ("ADS"."Feature_42" IS NULL) THEN -0.306874019058 ELSE "ADS"."Feature_42" END AS impter_44, CASE WHEN ("ADS"."Feature_43" IS NULL) THEN -0.0403545806931 ELSE "ADS"."Feature_43" END AS impter_45, CASE WHEN ("ADS"."Feature_44" IS NULL) THEN -0.0078998151246 ELSE "ADS"."Feature_44" END AS impter_46, CASE WHEN ("ADS"."Feature_45" IS NULL) THEN 0.00264793225417 ELSE "ADS"."Feature_45" END AS impter_47, CASE WHEN ("ADS"."Feature_46" IS NULL) THEN -0.149210845983 ELSE "ADS"."Feature_46" END AS impter_48, CASE WHEN ("ADS"."Feature_47" IS NULL) THEN 0.248953992369 ELSE "ADS"."Feature_47" END AS impter_49, CASE WHEN ("ADS"."Feature_48" IS NULL) THEN -0.700424397972 ELSE "ADS"."Feature_48" END AS impter_50, CASE WHEN ("ADS"."Feature_49" IS NULL) THEN 0.0255276737501 ELSE "ADS"."Feature_49" END AS impter_51, CASE WHEN ("ADS"."Feature_50" IS NULL) THEN -0.15642138685 ELSE "ADS"."Feature_50" END AS impter_52, CASE WHEN ("ADS"."Feature_51" IS NULL) THEN -0.127838577178 ELSE "ADS"."Feature_51" END AS impter_53, CASE WHEN ("ADS"."Feature_52" IS NULL) THEN -0.369879523833 ELSE "ADS"."Feature_52" END AS impter_54, CASE WHEN ("ADS"."Feature_53" IS NULL) THEN 0.0410547455889 ELSE "ADS"."Feature_53" END AS impter_55, CASE WHEN ("ADS"."Feature_54" IS NULL) THEN -0.100474275314 ELSE "ADS"."Feature_54" END AS impter_56, CASE WHEN ("ADS"."Feature_55" IS NULL) THEN -0.131272886536 ELSE "ADS"."Feature_55" END AS impter_57, CASE WHEN ("ADS"."Feature_56" IS NULL) THEN 0.368578431365 ELSE "ADS"."Feature_56" END AS impter_58, CASE WHEN ("ADS"."Feature_57" IS NULL) THEN 0.222812465206 ELSE "ADS"."Feature_57" END AS impter_59, CASE WHEN ("ADS"."Feature_58" IS NULL) THEN -0.0062740876184 ELSE "ADS"."Feature_58" END AS impter_60, CASE WHEN ("ADS"."Feature_59" IS NULL) THEN 0.0142685989578 ELSE "ADS"."Feature_59" END AS impter_61, CASE WHEN ("ADS"."Feature_60" IS NULL) THEN -0.0285455115739 ELSE "ADS"."Feature_60" END AS impter_62, CASE WHEN ("ADS"."Feature_61" IS NULL) THEN -0.43749183185 ELSE "ADS"."Feature_61" END AS impter_63, CASE WHEN ("ADS"."Feature_62" IS NULL) THEN -0.368992780588 ELSE "ADS"."Feature_62" END AS impter_64, CASE WHEN ("ADS"."Feature_63" IS NULL) THEN 0.00116904181932 ELSE "ADS"."Feature_63" END AS impter_65, CASE WHEN ("ADS"."Feature_64" IS NULL) THEN -0.0115648737176 ELSE "ADS"."Feature_64" END AS impter_66, CASE WHEN ("ADS"."Feature_65" IS NULL) THEN -0.0435876998969 ELSE "ADS"."Feature_65" END AS impter_67, CASE WHEN ("ADS"."Feature_66" IS NULL) THEN -0.161863413739 ELSE "ADS"."Feature_66" END AS impter_68, CASE WHEN ("ADS"."Feature_67" IS NULL) THEN -0.017272641535 ELSE "ADS"."Feature_67" END AS impter_69, CASE WHEN ("ADS"."Feature_68" IS NULL) THEN -0.364030220369 ELSE "ADS"."Feature_68" END AS impter_70, CASE WHEN ("ADS"."Feature_69" IS NULL) THEN -0.0492730065024 ELSE "ADS"."Feature_69" END AS impter_71, CASE WHEN ("ADS"."Feature_70" IS NULL) THEN -0.0154685126573 ELSE "ADS"."Feature_70" END AS impter_72, CASE WHEN ("ADS"."Feature_71" IS NULL) THEN -0.191629393513 ELSE "ADS"."Feature_71" END AS impter_73, CASE WHEN ("ADS"."Feature_72" IS NULL) THEN 0.0237828303216 ELSE "ADS"."Feature_72" END AS impter_74, CASE WHEN ("ADS"."Feature_73" IS NULL) THEN 0.0204547996726 ELSE "ADS"."Feature_73" END AS impter_75, CASE WHEN ("ADS"."Feature_74" IS NULL) THEN -0.173355346593 ELSE "ADS"."Feature_74" END AS impter_76, CASE WHEN ("ADS"."Feature_75" IS NULL) THEN 0.0275822882458 ELSE "ADS"."Feature_75" END AS impter_77, CASE WHEN ("ADS"."Feature_76" IS NULL) THEN -0.0154523366782 ELSE "ADS"."Feature_76" END AS impter_78, CASE WHEN ("ADS"."Feature_77" IS NULL) THEN -0.0425555457733 ELSE "ADS"."Feature_77" END AS impter_79, CASE WHEN ("ADS"."Feature_78" IS NULL) THEN -0.00942573658037 ELSE "ADS"."Feature_78" END AS impter_80, CASE WHEN ("ADS"."Feature_79" IS NULL) THEN 0.00742367748933 ELSE "ADS"."Feature_79" END AS impter_81, CASE WHEN ("ADS"."Feature_80" IS NULL) THEN 0.0498533264368 ELSE "ADS"."Feature_80" END AS impter_82, CASE WHEN ("ADS"."Feature_81" IS NULL) THEN 0.0279602211794 ELSE "ADS"."Feature_81" END AS impter_83, CASE WHEN ("ADS"."Feature_82" IS NULL) THEN -0.00527050248758 ELSE "ADS"."Feature_82" END AS impter_84, CASE WHEN ("ADS"."Feature_83" IS NULL) THEN -0.0533936117742 ELSE "ADS"."Feature_83" END AS impter_85, CASE WHEN ("ADS"."Feature_84" IS NULL) THEN 0.171620332886 ELSE "ADS"."Feature_84" END AS impter_86, CASE WHEN ("ADS"."Feature_85" IS NULL) THEN 0.0372119970074 ELSE "ADS"."Feature_85" END AS impter_87, CASE WHEN ("ADS"."Feature_86" IS NULL) THEN 0.0184349733304 ELSE "ADS"."Feature_86" END AS impter_88, CASE WHEN ("ADS"."Feature_87" IS NULL) THEN 0.560521632617 ELSE "ADS"."Feature_87" END AS impter_89, CASE WHEN ("ADS"."Feature_88" IS NULL) THEN -0.052850462919 ELSE "ADS"."Feature_88" END AS impter_90, CASE WHEN ("ADS"."Feature_89" IS NULL) THEN 0.0793902173424 ELSE "ADS"."Feature_89" END AS impter_91, CASE WHEN ("ADS"."Feature_90" IS NULL) THEN -2.08866716312 ELSE "ADS"."Feature_90" END AS impter_92, CASE WHEN ("ADS"."Feature_91" IS NULL) THEN -1.0831020639 ELSE "ADS"."Feature_91" END AS impter_93, CASE WHEN ("ADS"."Feature_92" IS NULL) THEN -0.304702362821 ELSE "ADS"."Feature_92" END AS impter_94, CASE WHEN ("ADS"."Feature_93" IS NULL) THEN -0.935426259564 ELSE "ADS"."Feature_93" END AS impter_95, CASE WHEN ("ADS"."Feature_94" IS NULL) THEN -0.098411219927 ELSE "ADS"."Feature_94" END AS impter_96, CASE WHEN ("ADS"."Feature_95" IS NULL) THEN -0.53165348436 ELSE "ADS"."Feature_95" END AS impter_97, CASE WHEN ("ADS"."Feature_96" IS NULL) THEN 0.0141274221378 ELSE "ADS"."Feature_96" END AS impter_98, CASE WHEN ("ADS"."Feature_97" IS NULL) THEN -0.0126312774127 ELSE "ADS"."Feature_97" END AS impter_99, CASE WHEN ("ADS"."Feature_98" IS NULL) THEN 0.0312868812331 ELSE "ADS"."Feature_98" END AS impter_100, CASE WHEN ("ADS"."Feature_99" IS NULL) THEN -0.450390515385 ELSE "ADS"."Feature_99" END AS impter_101 
FROM "FourClass_100" AS "ADS"), 
"ADS_sca_2_OUT" AS 
(SELECT "ADS_imp_1_OUT"."KEY" AS "KEY", (CAST("ADS_imp_1_OUT".impter_2 AS FLOAT) - 0.00653574012116) / 0.985821711919 AS scaler_2, (CAST("ADS_imp_1_OUT".impter_3 AS FLOAT) - 0.16767827126) / 4.17893277906 AS scaler_3, (CAST("ADS_imp_1_OUT".impter_4 AS FLOAT) - -0.0551470417358) / 4.08515606391 AS scaler_4, (CAST("ADS_imp_1_OUT".impter_5 AS FLOAT) - 0.00152116930519) / 1.05839942213 AS scaler_5, (CAST("ADS_imp_1_OUT".impter_6 AS FLOAT) - 0.0314276019104) / 0.958502901404 AS scaler_6, (CAST("ADS_imp_1_OUT".impter_7 AS FLOAT) - 0.0261796831787) / 0.993854807715 AS scaler_7, (CAST("ADS_imp_1_OUT".impter_8 AS FLOAT) - -0.0112547131221) / 0.995945599637 AS scaler_8, (CAST("ADS_imp_1_OUT".impter_9 AS FLOAT) - -0.0168862118009) / 1.04542967803 AS scaler_9, (CAST("ADS_imp_1_OUT".impter_10 AS FLOAT) - -0.0273427029645) / 4.33135674182 AS scaler_10, (CAST("ADS_imp_1_OUT".impter_11 AS FLOAT) - -0.163701278848) / 4.45889820593 AS scaler_11, (CAST("ADS_imp_1_OUT".impter_12 AS FLOAT) - 0.0354122507389) / 1.03661648781 AS scaler_12, (CAST("ADS_imp_1_OUT".impter_13 AS FLOAT) - -0.0285291234756) / 1.00467620555 AS scaler_13, (CAST("ADS_imp_1_OUT".impter_14 AS FLOAT) - -0.0267494449896) / 0.99962402671 AS scaler_14, (CAST("ADS_imp_1_OUT".impter_15 AS FLOAT) - 0.386019822911) / 4.14480478652 AS scaler_15, (CAST("ADS_imp_1_OUT".impter_16 AS FLOAT) - 0.0162145257314) / 1.01728129667 AS scaler_16, (CAST("ADS_imp_1_OUT".impter_17 AS FLOAT) - 0.227237750778) / 4.36711262018 AS scaler_17, (CAST("ADS_imp_1_OUT".impter_18 AS FLOAT) - 0.566373456694) / 4.11815688405 AS scaler_18, (CAST("ADS_imp_1_OUT".impter_19 AS FLOAT) - 0.277696410616) / 4.01432897572 AS scaler_19, (CAST("ADS_imp_1_OUT".impter_20 AS FLOAT) - 0.00599432681235) / 0.972439502321 AS scaler_20, (CAST("ADS_imp_1_OUT".impter_21 AS FLOAT) - -0.0218525344697) / 0.985687517726 AS scaler_21, (CAST("ADS_imp_1_OUT".impter_22 AS FLOAT) - -0.028375425917) / 1.02310346987 AS scaler_22, (CAST("ADS_imp_1_OUT".impter_23 AS FLOAT) - 0.0151643232963) / 4.35314516918 AS scaler_23, (CAST("ADS_imp_1_OUT".impter_24 AS FLOAT) - 0.0174691345488) / 1.00180565427 AS scaler_24, (CAST("ADS_imp_1_OUT".impter_25 AS FLOAT) - 0.0349390944943) / 0.992721649768 AS scaler_25, (CAST("ADS_imp_1_OUT".impter_26 AS FLOAT) - -0.144361607634) / 4.46739766886 AS scaler_26, (CAST("ADS_imp_1_OUT".impter_27 AS FLOAT) - 0.146104677444) / 4.10734277856 AS scaler_27, (CAST("ADS_imp_1_OUT".impter_28 AS FLOAT) - 0.0676158423738) / 4.27764303646 AS scaler_28, (CAST("ADS_imp_1_OUT".impter_29 AS FLOAT) - -0.30836845608) / 4.03019568626 AS scaler_29, (CAST("ADS_imp_1_OUT".impter_30 AS FLOAT) - 0.952575301761) / 4.01730262302 AS scaler_30, (CAST("ADS_imp_1_OUT".impter_31 AS FLOAT) - -0.0581338391011) / 4.03353195749 AS scaler_31, (CAST("ADS_imp_1_OUT".impter_32 AS FLOAT) - -0.0131244127149) / 0.955198781566 AS scaler_32, (CAST("ADS_imp_1_OUT".impter_33 AS FLOAT) - -0.337551254331) / 4.10657168041 AS scaler_33, (CAST("ADS_imp_1_OUT".impter_34 AS FLOAT) - 0.0390265145932) / 0.990359225337 AS scaler_34, (CAST("ADS_imp_1_OUT".impter_35 AS FLOAT) - -0.0402939442132) / 1.01529611676 AS scaler_35, (CAST("ADS_imp_1_OUT".impter_36 AS FLOAT) - -0.171611885737) / 4.17922956302 AS scaler_36, (CAST("ADS_imp_1_OUT".impter_37 AS FLOAT) - 0.0126477868686) / 1.00783076186 AS scaler_37, (CAST("ADS_imp_1_OUT".impter_38 AS FLOAT) - 0.00519373530851) / 4.29733218367 AS scaler_38, (CAST("ADS_imp_1_OUT".impter_39 AS FLOAT) - -0.0171608765769) / 1.01737885571 AS scaler_39, (CAST("ADS_imp_1_OUT".impter_40 AS FLOAT) - 0.0450361559979) / 3.90428113679 AS scaler_40, (CAST("ADS_imp_1_OUT".impter_41 AS FLOAT) - -0.120358200226) / 3.98402860362 AS scaler_41, (CAST("ADS_imp_1_OUT".impter_42 AS FLOAT) - -0.176403922822) / 4.06931463762 AS scaler_42, (CAST("ADS_imp_1_OUT".impter_43 AS FLOAT) - -0.015157075927) / 1.02915738955 AS scaler_43, (CAST("ADS_imp_1_OUT".impter_44 AS FLOAT) - -0.306874019058) / 4.34791251221 AS scaler_44, (CAST("ADS_imp_1_OUT".impter_45 AS FLOAT) - -0.0403545806931) / 4.05064377381 AS scaler_45, (CAST("ADS_imp_1_OUT".impter_46 AS FLOAT) - -0.0078998151246) / 1.00637547659 AS scaler_46, (CAST("ADS_imp_1_OUT".impter_47 AS FLOAT) - 0.00264793225417) / 1.00214477559 AS scaler_47, (CAST("ADS_imp_1_OUT".impter_48 AS FLOAT) - -0.149210845983) / 4.10340200989 AS scaler_48, (CAST("ADS_imp_1_OUT".impter_49 AS FLOAT) - 0.248953992369) / 4.23220038033 AS scaler_49, (CAST("ADS_imp_1_OUT".impter_50 AS FLOAT) - -0.700424397972) / 4.22076654199 AS scaler_50, (CAST("ADS_imp_1_OUT".impter_51 AS FLOAT) - 0.0255276737501) / 1.02067409273 AS scaler_51, (CAST("ADS_imp_1_OUT".impter_52 AS FLOAT) - -0.15642138685) / 4.07831067125 AS scaler_52, (CAST("ADS_imp_1_OUT".impter_53 AS FLOAT) - -0.127838577178) / 4.24723680136 AS scaler_53, (CAST("ADS_imp_1_OUT".impter_54 AS FLOAT) - -0.369879523833) / 4.03767584848 AS scaler_54, (CAST("ADS_imp_1_OUT".impter_55 AS FLOAT) - 0.0410547455889) / 4.44557137144 AS scaler_55, (CAST("ADS_imp_1_OUT".impter_56 AS FLOAT) - -0.100474275314) / 4.04583682644 AS scaler_56, (CAST("ADS_imp_1_OUT".impter_57 AS FLOAT) - -0.131272886536) / 4.2566060095 AS scaler_57, (CAST("ADS_imp_1_OUT".impter_58 AS FLOAT) - 0.368578431365) / 4.04294690881 AS scaler_58, (CAST("ADS_imp_1_OUT".impter_59 AS FLOAT) - 0.222812465206) / 4.25239806876 AS scaler_59, (CAST("ADS_imp_1_OUT".impter_60 AS FLOAT) - -0.0062740876184) / 1.0131754299 AS scaler_60, (CAST("ADS_imp_1_OUT".impter_61 AS FLOAT) - 0.0142685989578) / 0.975232456173 AS scaler_61, (CAST("ADS_imp_1_OUT".impter_62 AS FLOAT) - -0.0285455115739) / 0.996017661218 AS scaler_62, (CAST("ADS_imp_1_OUT".impter_63 AS FLOAT) - -0.43749183185) / 4.23875925656 AS scaler_63, (CAST("ADS_imp_1_OUT".impter_64 AS FLOAT) - -0.368992780588) / 4.18274187652 AS scaler_64, (CAST("ADS_imp_1_OUT".impter_65 AS FLOAT) - 0.00116904181932) / 1.04333652499 AS scaler_65, (CAST("ADS_imp_1_OUT".impter_66 AS FLOAT) - -0.0115648737176) / 4.08150429415 AS scaler_66, (CAST("ADS_imp_1_OUT".impter_67 AS FLOAT) - -0.0435876998969) / 1.05866451901 AS scaler_67, (CAST("ADS_imp_1_OUT".impter_68 AS FLOAT) - -0.161863413739) / 4.25966623517 AS scaler_68, (CAST("ADS_imp_1_OUT".impter_69 AS FLOAT) - -0.017272641535) / 1.01030583344 AS scaler_69, (CAST("ADS_imp_1_OUT".impter_70 AS FLOAT) - -0.364030220369) / 4.23529048916 AS scaler_70, (CAST("ADS_imp_1_OUT".impter_71 AS FLOAT) - -0.0492730065024) / 4.31080236531 AS scaler_71, (CAST("ADS_imp_1_OUT".impter_72 AS FLOAT) - -0.0154685126573) / 1.01066080153 AS scaler_72, (CAST("ADS_imp_1_OUT".impter_73 AS FLOAT) - -0.191629393513) / 4.11604496555 AS scaler_73, (CAST("ADS_imp_1_OUT".impter_74 AS FLOAT) - 0.0237828303216) / 0.997185935238 AS scaler_74, (CAST("ADS_imp_1_OUT".impter_75 AS FLOAT) - 0.0204547996726) / 0.964047487679 AS scaler_75, (CAST("ADS_imp_1_OUT".impter_76 AS FLOAT) - -0.173355346593) / 4.26884008329 AS scaler_76, (CAST("ADS_imp_1_OUT".impter_77 AS FLOAT) - 0.0275822882458) / 1.00287363715 AS scaler_77, (CAST("ADS_imp_1_OUT".impter_78 AS FLOAT) - -0.0154523366782) / 0.951796972878 AS scaler_78, (CAST("ADS_imp_1_OUT".impter_79 AS FLOAT) - -0.0425555457733) / 1.02604198012 AS scaler_79, (CAST("ADS_imp_1_OUT".impter_80 AS FLOAT) - -0.00942573658037) / 0.981547933163 AS scaler_80, (CAST("ADS_imp_1_OUT".impter_81 AS FLOAT) - 0.00742367748933) / 1.0171447638 AS scaler_81, (CAST("ADS_imp_1_OUT".impter_82 AS FLOAT) - 0.0498533264368) / 1.01381217519 AS scaler_82, (CAST("ADS_imp_1_OUT".impter_83 AS FLOAT) - 0.0279602211794) / 1.00493310879 AS scaler_83, (CAST("ADS_imp_1_OUT".impter_84 AS FLOAT) - -0.00527050248758) / 1.02332528491 AS scaler_84, (CAST("ADS_imp_1_OUT".impter_85 AS FLOAT) - -0.0533936117742) / 1.00458919199 AS scaler_85, (CAST("ADS_imp_1_OUT".impter_86 AS FLOAT) - 0.171620332886) / 4.24884427578 AS scaler_86, (CAST("ADS_imp_1_OUT".impter_87 AS FLOAT) - 0.0372119970074) / 4.25404858308 AS scaler_87, (CAST("ADS_imp_1_OUT".impter_88 AS FLOAT) - 0.0184349733304) / 3.94972884089 AS scaler_88, (CAST("ADS_imp_1_OUT".impter_89 AS FLOAT) - 0.560521632617) / 4.33133243898 AS scaler_89, (CAST("ADS_imp_1_OUT".impter_90 AS FLOAT) - -0.052850462919) / 1.03583971022 AS scaler_90, (CAST("ADS_imp_1_OUT".impter_91 AS FLOAT) - 0.0793902173424) / 0.969876446028 AS scaler_91, (CAST("ADS_imp_1_OUT".impter_92 AS FLOAT) - -2.08866716312) / 15.3022152465 AS scaler_92, (CAST("ADS_imp_1_OUT".impter_93 AS FLOAT) - -1.0831020639) / 4.36710902027 AS scaler_93, (CAST("ADS_imp_1_OUT".impter_94 AS FLOAT) - -0.304702362821) / 4.20429236235 AS scaler_94, (CAST("ADS_imp_1_OUT".impter_95 AS FLOAT) - -0.935426259564) / 15.3570057667 AS scaler_95, (CAST("ADS_imp_1_OUT".impter_96 AS FLOAT) - -0.098411219927) / 0.952484869944 AS scaler_96, (CAST("ADS_imp_1_OUT".impter_97 AS FLOAT) - -0.53165348436) / 3.97700071824 AS scaler_97, (CAST("ADS_imp_1_OUT".impter_98 AS FLOAT) - 0.0141274221378) / 0.987925892541 AS scaler_98, (CAST("ADS_imp_1_OUT".impter_99 AS FLOAT) - -0.0126312774127) / 1.01519644483 AS scaler_99, (CAST("ADS_imp_1_OUT".impter_100 AS FLOAT) - 0.0312868812331) / 0.989361802421 AS scaler_100, (CAST("ADS_imp_1_OUT".impter_101 AS FLOAT) - -0.450390515385) / 4.24470032509 AS scaler_101 
FROM "ADS_imp_1_OUT"), 
"DT_node_lookup_24" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_36 < -0.3963547945022583) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_58 < 0.05312246084213257) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_59 < -0.4947929382324219) THEN 7 ELSE 8 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_28 < -0.7767775058746338) THEN 9 ELSE 10 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_10 < -0.783643364906311) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_50 < -0.07706556469202042) THEN 11 ELSE 12 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_42 < -0.17006616294384003) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_24" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Score" AS "Score" 
FROM (SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, 3 AS parent_id, 0.04272940382361412 AS "Score" UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, 3 AS parent_id, -0.025317003950476646 AS "Score" UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, 4 AS parent_id, -0.039187896996736526 AS "Score" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, 4 AS parent_id, -0.06160258129239082 AS "Score" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, 5 AS parent_id, 0.1095559224486351 AS "Score" UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, 5 AS parent_id, 0.005851211957633495 AS "Score" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, 6 AS parent_id, -0.02739163115620613 AS "Score" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, 6 AS parent_id, 0.020885992795228958 AS "Score") AS "Values"), 
"DT_Output_24" AS 
(SELECT "DT_node_lookup_24"."KEY" AS "KEY", "DT_node_lookup_24".node_id_2 AS node_id_2, "DT_node_data_24".node_id AS node_id, "DT_node_data_24".feature AS feature, "DT_node_data_24".threshold AS threshold, "DT_node_data_24".depth AS depth, "DT_node_data_24".parent_id AS parent_id, "DT_node_data_24"."Score" AS "Score" 
FROM "DT_node_lookup_24" LEFT OUTER JOIN "DT_node_data_24" ON "DT_node_lookup_24".node_id_2 = "DT_node_data_24".node_id), 
"XGB_Tree_0_6" AS 
(SELECT "DT_Output_24"."KEY" AS "KEY", "DT_Output_24"."Score" AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3" 
FROM "DT_Output_24"), 
"DT_node_lookup_25" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_42 < 0.2807415723800659) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_45 < 0.3559143543243408) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_70 < -0.5040132999420166) THEN 7 ELSE 8 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_4 < 0.06747566163539886) THEN 9 ELSE 10 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_52 < 0.3298625946044922) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_49 < -0.687016487121582) THEN 11 ELSE 12 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_62 < 0.0182533897459507) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_25" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Score" AS "Score" 
FROM (SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, 3 AS parent_id, 0.046155136078596115 AS "Score" UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, 3 AS parent_id, -0.021105259656906128 AS "Score" UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, 4 AS parent_id, 0.0028807921335101128 AS "Score" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, 4 AS parent_id, 0.07023207098245621 AS "Score" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, 5 AS parent_id, -0.005796495359390974 AS "Score" UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, 5 AS parent_id, -0.05261370539665222 AS "Score" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, 6 AS parent_id, 0.0334383063018322 AS "Score" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, 6 AS parent_id, -0.03471791371703148 AS "Score") AS "Values"), 
"DT_Output_25" AS 
(SELECT "DT_node_lookup_25"."KEY" AS "KEY", "DT_node_lookup_25".node_id_2 AS node_id_2, "DT_node_data_25".node_id AS node_id, "DT_node_data_25".feature AS feature, "DT_node_data_25".threshold AS threshold, "DT_node_data_25".depth AS depth, "DT_node_data_25".parent_id AS parent_id, "DT_node_data_25"."Score" AS "Score" 
FROM "DT_node_lookup_25" LEFT OUTER JOIN "DT_node_data_25" ON "DT_node_lookup_25".node_id_2 = "DT_node_data_25".node_id), 
"XGB_Tree_1_6" AS 
(SELECT "DT_Output_25"."KEY" AS "KEY", 0.0 AS "Score_0", "DT_Output_25"."Score" AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3" 
FROM "DT_Output_25"), 
"DT_node_lookup_26" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_66 < 0.8412501215934753) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_40 < 0.8938565850257874) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_54 < -1.4181888103485107) THEN 7 ELSE 8 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_17 < 0.7124260663986206) THEN 9 ELSE 10 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_33 < -0.41034236550331116) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_11 < -0.05106404051184654) THEN 11 ELSE 12 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_55 < 0.1811840683221817) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_26" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Score" AS "Score" 
FROM (SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, 3 AS parent_id, 0.0480872206389904 AS "Score" UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, 3 AS parent_id, -0.02567831240594387 AS "Score" UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, 4 AS parent_id, 0.055146217346191406 AS "Score" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, 4 AS parent_id, -0.043772440403699875 AS "Score" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, 5 AS parent_id, 0.03156007453799248 AS "Score" UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, 5 AS parent_id, 0.1234440729022026 AS "Score" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, 6 AS parent_id, -0.03759337589144707 AS "Score" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, 6 AS parent_id, 0.046198826283216476 AS "Score") AS "Values"), 
"DT_Output_26" AS 
(SELECT "DT_node_lookup_26"."KEY" AS "KEY", "DT_node_lookup_26".node_id_2 AS node_id_2, "DT_node_data_26".node_id AS node_id, "DT_node_data_26".feature AS feature, "DT_node_data_26".threshold AS threshold, "DT_node_data_26".depth AS depth, "DT_node_data_26".parent_id AS parent_id, "DT_node_data_26"."Score" AS "Score" 
FROM "DT_node_lookup_26" LEFT OUTER JOIN "DT_node_data_26" ON "DT_node_lookup_26".node_id_2 = "DT_node_data_26".node_id), 
"XGB_Tree_2_6" AS 
(SELECT "DT_Output_26"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", "DT_Output_26"."Score" AS "Score_2", 0.0 AS "Score_3" 
FROM "DT_Output_26"), 
"DT_node_lookup_27" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_70 < -0.24858278036117554) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_27 < 0.12399684637784958) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_26 < -0.2861015796661377) THEN 7 ELSE 8 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_92 < -0.5523350238800049) THEN 9 ELSE 10 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_40 < -0.9827808141708374) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_87 < 0.1358424425125122) THEN 11 ELSE 12 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_45 < -0.2673577070236206) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_27" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Score" AS "Score" 
FROM (SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, 3 AS parent_id, 0.02995513193309307 AS "Score" UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, 3 AS parent_id, -0.030499717220664024 AS "Score" UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, 4 AS parent_id, -0.026748795062303543 AS "Score" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, 4 AS parent_id, -0.062266673892736435 AS "Score" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, 5 AS parent_id, 0.10039789974689484 AS "Score" UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, 5 AS parent_id, 0.026707617565989494 AS "Score" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, 6 AS parent_id, 0.029458368197083473 AS "Score" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, 6 AS parent_id, -0.015608365647494793 AS "Score") AS "Values"), 
"DT_Output_27" AS 
(SELECT "DT_node_lookup_27"."KEY" AS "KEY", "DT_node_lookup_27".node_id_2 AS node_id_2, "DT_node_data_27".node_id AS node_id, "DT_node_data_27".feature AS feature, "DT_node_data_27".threshold AS threshold, "DT_node_data_27".depth AS depth, "DT_node_data_27".parent_id AS parent_id, "DT_node_data_27"."Score" AS "Score" 
FROM "DT_node_lookup_27" LEFT OUTER JOIN "DT_node_data_27" ON "DT_node_lookup_27".node_id_2 = "DT_node_data_27".node_id), 
"XGB_Tree_3_6" AS 
(SELECT "DT_Output_27"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", "DT_Output_27"."Score" AS "Score_3" 
FROM "DT_Output_27"), 
"DT_node_lookup_28" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_19 < -0.4837368130683899) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_27 < -0.5048263072967529) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_36 < 0.21062329411506653) THEN 7 ELSE 8 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_18 < 0.6413018107414246) THEN 9 ELSE 10 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_53 < 0.5165193676948547) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_4 < 0.19550010561943054) THEN 11 ELSE 12 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_54 < -0.16432341933250427) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_28" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Score" AS "Score" 
FROM (SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, 3 AS parent_id, -0.05062326788902283 AS "Score" UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, 3 AS parent_id, 0.02901136688888073 AS "Score" UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, 4 AS parent_id, 0.023958656936883926 AS "Score" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, 4 AS parent_id, 0.08924262970685959 AS "Score" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, 5 AS parent_id, -0.012246732600033283 AS "Score" UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, 5 AS parent_id, -0.05086950585246086 AS "Score" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, 6 AS parent_id, -0.02588464319705963 AS "Score" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, 6 AS parent_id, 0.05837602540850639 AS "Score") AS "Values"), 
"DT_Output_28" AS 
(SELECT "DT_node_lookup_28"."KEY" AS "KEY", "DT_node_lookup_28".node_id_2 AS node_id_2, "DT_node_data_28".node_id AS node_id, "DT_node_data_28".feature AS feature, "DT_node_data_28".threshold AS threshold, "DT_node_data_28".depth AS depth, "DT_node_data_28".parent_id AS parent_id, "DT_node_data_28"."Score" AS "Score" 
FROM "DT_node_lookup_28" LEFT OUTER JOIN "DT_node_data_28" ON "DT_node_lookup_28".node_id_2 = "DT_node_data_28".node_id), 
"XGB_Tree_0_7" AS 
(SELECT "DT_Output_28"."KEY" AS "KEY", "DT_Output_28"."Score" AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3" 
FROM "DT_Output_28"), 
"DT_node_lookup_29" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_33 < 0.2938539981842041) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_29 < -0.2826199531555176) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_90 < -0.9324021935462952) THEN 7 ELSE 8 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_70 < 0.2864289879798889) THEN 9 ELSE 10 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_15 < 0.021473340690135956) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_89 < 0.3898729681968689) THEN 11 ELSE 12 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_10 < 0.37903892993927) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_29" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Score" AS "Score" 
FROM (SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, 3 AS parent_id, 0.0009880325524136424 AS "Score" UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, 3 AS parent_id, -0.05089639499783516 AS "Score" UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, 4 AS parent_id, 0.01912977173924446 AS "Score" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, 4 AS parent_id, -0.029964029788970947 AS "Score" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, 5 AS parent_id, -0.02508319728076458 AS "Score" UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, 5 AS parent_id, 0.038584038615226746 AS "Score" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, 6 AS parent_id, 0.02349322848021984 AS "Score" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, 6 AS parent_id, 0.08804778009653091 AS "Score") AS "Values"), 
"DT_Output_29" AS 
(SELECT "DT_node_lookup_29"."KEY" AS "KEY", "DT_node_lookup_29".node_id_2 AS node_id_2, "DT_node_data_29".node_id AS node_id, "DT_node_data_29".feature AS feature, "DT_node_data_29".threshold AS threshold, "DT_node_data_29".depth AS depth, "DT_node_data_29".parent_id AS parent_id, "DT_node_data_29"."Score" AS "Score" 
FROM "DT_node_lookup_29" LEFT OUTER JOIN "DT_node_data_29" ON "DT_node_lookup_29".node_id_2 = "DT_node_data_29".node_id), 
"XGB_Tree_1_7" AS 
(SELECT "DT_Output_29"."KEY" AS "KEY", 0.0 AS "Score_0", "DT_Output_29"."Score" AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3" 
FROM "DT_Output_29"), 
"DT_node_lookup_30" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_88 < -1.4051790237426758) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_68 < -0.2062322199344635) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_89 < -0.8598697185516357) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_53 < -0.014856613241136074) THEN 7 ELSE 8 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_44 < 1.50687575340271) THEN 9 ELSE 10 END END END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_30" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Score" AS "Score" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, 1 AS parent_id, -0.034783024340867996 AS "Score" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, 1 AS parent_id, 0.10543046146631241 AS "Score" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, 5 AS parent_id, 0.08061207830905914 AS "Score" UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, 5 AS parent_id, -0.03037106990814209 AS "Score" UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, 6 AS parent_id, -0.021619809791445732 AS "Score" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, 6 AS parent_id, 0.055830515921115875 AS "Score") AS "Values"), 
"DT_Output_30" AS 
(SELECT "DT_node_lookup_30"."KEY" AS "KEY", "DT_node_lookup_30".node_id_2 AS node_id_2, "DT_node_data_30".node_id AS node_id, "DT_node_data_30".feature AS feature, "DT_node_data_30".threshold AS threshold, "DT_node_data_30".depth AS depth, "DT_node_data_30".parent_id AS parent_id, "DT_node_data_30"."Score" AS "Score" 
FROM "DT_node_lookup_30" LEFT OUTER JOIN "DT_node_data_30" ON "DT_node_lookup_30".node_id_2 = "DT_node_data_30".node_id), 
"XGB_Tree_2_7" AS 
(SELECT "DT_Output_30"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", "DT_Output_30"."Score" AS "Score_2", 0.0 AS "Score_3" 
FROM "DT_Output_30"), 
"DT_node_lookup_31" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_86 < -0.4706636071205139) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_56 < 0.8900643587112427) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_11 < -0.2773438096046448) THEN 7 ELSE 8 END ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_45 < -0.24294397234916687) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_97 < 0.20292776823043823) THEN 9 ELSE 10 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_65 < 1.3402111530303955) THEN 11 ELSE 12 END END END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_31" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Score" AS "Score" 
FROM (SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, 1 AS parent_id, -0.04847417771816254 AS "Score" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, 3 AS parent_id, 0.0729953944683075 AS "Score" UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, 3 AS parent_id, 0.013595908880233765 AS "Score" UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, 5 AS parent_id, 0.032732512801885605 AS "Score" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, 5 AS parent_id, -0.024207843467593193 AS "Score" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, 6 AS parent_id, -0.03808260336518288 AS "Score" UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, 6 AS parent_id, 0.02809174172580242 AS "Score") AS "Values"), 
"DT_Output_31" AS 
(SELECT "DT_node_lookup_31"."KEY" AS "KEY", "DT_node_lookup_31".node_id_2 AS node_id_2, "DT_node_data_31".node_id AS node_id, "DT_node_data_31".feature AS feature, "DT_node_data_31".threshold AS threshold, "DT_node_data_31".depth AS depth, "DT_node_data_31".parent_id AS parent_id, "DT_node_data_31"."Score" AS "Score" 
FROM "DT_node_lookup_31" LEFT OUTER JOIN "DT_node_data_31" ON "DT_node_lookup_31".node_id_2 = "DT_node_data_31".node_id), 
"XGB_Tree_3_7" AS 
(SELECT "DT_Output_31"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", "DT_Output_31"."Score" AS "Score_3" 
FROM "DT_Output_31")
 SELECT "Score_Union_CTE_esu_3"."KEY", "Score_Union_CTE_esu_3"."Score_0", "Score_Union_CTE_esu_3"."Score_1", "Score_Union_CTE_esu_3"."Score_2", "Score_Union_CTE_esu_3"."Score_3" 
FROM (SELECT "XGB_Tree_0_6"."KEY" AS "KEY", "XGB_Tree_0_6"."Score_0" AS "Score_0", "XGB_Tree_0_6"."Score_1" AS "Score_1", "XGB_Tree_0_6"."Score_2" AS "Score_2", "XGB_Tree_0_6"."Score_3" AS "Score_3" 
FROM "XGB_Tree_0_6" UNION ALL SELECT "XGB_Tree_1_6"."KEY" AS "KEY", "XGB_Tree_1_6"."Score_0" AS "Score_0", "XGB_Tree_1_6"."Score_1" AS "Score_1", "XGB_Tree_1_6"."Score_2" AS "Score_2", "XGB_Tree_1_6"."Score_3" AS "Score_3" 
FROM "XGB_Tree_1_6" UNION ALL SELECT "XGB_Tree_2_6"."KEY" AS "KEY", "XGB_Tree_2_6"."Score_0" AS "Score_0", "XGB_Tree_2_6"."Score_1" AS "Score_1", "XGB_Tree_2_6"."Score_2" AS "Score_2", "XGB_Tree_2_6"."Score_3" AS "Score_3" 
FROM "XGB_Tree_2_6" UNION ALL SELECT "XGB_Tree_3_6"."KEY" AS "KEY", "XGB_Tree_3_6"."Score_0" AS "Score_0", "XGB_Tree_3_6"."Score_1" AS "Score_1", "XGB_Tree_3_6"."Score_2" AS "Score_2", "XGB_Tree_3_6"."Score_3" AS "Score_3" 
FROM "XGB_Tree_3_6" UNION ALL SELECT "XGB_Tree_0_7"."KEY" AS "KEY", "XGB_Tree_0_7"."Score_0" AS "Score_0", "XGB_Tree_0_7"."Score_1" AS "Score_1", "XGB_Tree_0_7"."Score_2" AS "Score_2", "XGB_Tree_0_7"."Score_3" AS "Score_3" 
FROM "XGB_Tree_0_7" UNION ALL SELECT "XGB_Tree_1_7"."KEY" AS "KEY", "XGB_Tree_1_7"."Score_0" AS "Score_0", "XGB_Tree_1_7"."Score_1" AS "Score_1", "XGB_Tree_1_7"."Score_2" AS "Score_2", "XGB_Tree_1_7"."Score_3" AS "Score_3" 
FROM "XGB_Tree_1_7" UNION ALL SELECT "XGB_Tree_2_7"."KEY" AS "KEY", "XGB_Tree_2_7"."Score_0" AS "Score_0", "XGB_Tree_2_7"."Score_1" AS "Score_1", "XGB_Tree_2_7"."Score_2" AS "Score_2", "XGB_Tree_2_7"."Score_3" AS "Score_3" 
FROM "XGB_Tree_2_7" UNION ALL SELECT "XGB_Tree_3_7"."KEY" AS "KEY", "XGB_Tree_3_7"."Score_0" AS "Score_0", "XGB_Tree_3_7"."Score_1" AS "Score_1", "XGB_Tree_3_7"."Score_2" AS "Score_2", "XGB_Tree_3_7"."Score_3" AS "Score_3" 
FROM "XGB_Tree_3_7") AS "Score_Union_CTE_esu_3"), 
"Score_Union_CTE_4" AS 
(WITH "ADS_imp_1_OUT" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_0" IS NULL) THEN 0.00653574012116 ELSE "ADS"."Feature_0" END AS impter_2, CASE WHEN ("ADS"."Feature_1" IS NULL) THEN 0.16767827126 ELSE "ADS"."Feature_1" END AS impter_3, CASE WHEN ("ADS"."Feature_2" IS NULL) THEN -0.0551470417358 ELSE "ADS"."Feature_2" END AS impter_4, CASE WHEN ("ADS"."Feature_3" IS NULL) THEN 0.00152116930519 ELSE "ADS"."Feature_3" END AS impter_5, CASE WHEN ("ADS"."Feature_4" IS NULL) THEN 0.0314276019104 ELSE "ADS"."Feature_4" END AS impter_6, CASE WHEN ("ADS"."Feature_5" IS NULL) THEN 0.0261796831787 ELSE "ADS"."Feature_5" END AS impter_7, CASE WHEN ("ADS"."Feature_6" IS NULL) THEN -0.0112547131221 ELSE "ADS"."Feature_6" END AS impter_8, CASE WHEN ("ADS"."Feature_7" IS NULL) THEN -0.0168862118009 ELSE "ADS"."Feature_7" END AS impter_9, CASE WHEN ("ADS"."Feature_8" IS NULL) THEN -0.0273427029645 ELSE "ADS"."Feature_8" END AS impter_10, CASE WHEN ("ADS"."Feature_9" IS NULL) THEN -0.163701278848 ELSE "ADS"."Feature_9" END AS impter_11, CASE WHEN ("ADS"."Feature_10" IS NULL) THEN 0.0354122507389 ELSE "ADS"."Feature_10" END AS impter_12, CASE WHEN ("ADS"."Feature_11" IS NULL) THEN -0.0285291234756 ELSE "ADS"."Feature_11" END AS impter_13, CASE WHEN ("ADS"."Feature_12" IS NULL) THEN -0.0267494449896 ELSE "ADS"."Feature_12" END AS impter_14, CASE WHEN ("ADS"."Feature_13" IS NULL) THEN 0.386019822911 ELSE "ADS"."Feature_13" END AS impter_15, CASE WHEN ("ADS"."Feature_14" IS NULL) THEN 0.0162145257314 ELSE "ADS"."Feature_14" END AS impter_16, CASE WHEN ("ADS"."Feature_15" IS NULL) THEN 0.227237750778 ELSE "ADS"."Feature_15" END AS impter_17, CASE WHEN ("ADS"."Feature_16" IS NULL) THEN 0.566373456694 ELSE "ADS"."Feature_16" END AS impter_18, CASE WHEN ("ADS"."Feature_17" IS NULL) THEN 0.277696410616 ELSE "ADS"."Feature_17" END AS impter_19, CASE WHEN ("ADS"."Feature_18" IS NULL) THEN 0.00599432681235 ELSE "ADS"."Feature_18" END AS impter_20, CASE WHEN ("ADS"."Feature_19" IS NULL) THEN -0.0218525344697 ELSE "ADS"."Feature_19" END AS impter_21, CASE WHEN ("ADS"."Feature_20" IS NULL) THEN -0.028375425917 ELSE "ADS"."Feature_20" END AS impter_22, CASE WHEN ("ADS"."Feature_21" IS NULL) THEN 0.0151643232963 ELSE "ADS"."Feature_21" END AS impter_23, CASE WHEN ("ADS"."Feature_22" IS NULL) THEN 0.0174691345488 ELSE "ADS"."Feature_22" END AS impter_24, CASE WHEN ("ADS"."Feature_23" IS NULL) THEN 0.0349390944943 ELSE "ADS"."Feature_23" END AS impter_25, CASE WHEN ("ADS"."Feature_24" IS NULL) THEN -0.144361607634 ELSE "ADS"."Feature_24" END AS impter_26, CASE WHEN ("ADS"."Feature_25" IS NULL) THEN 0.146104677444 ELSE "ADS"."Feature_25" END AS impter_27, CASE WHEN ("ADS"."Feature_26" IS NULL) THEN 0.0676158423738 ELSE "ADS"."Feature_26" END AS impter_28, CASE WHEN ("ADS"."Feature_27" IS NULL) THEN -0.30836845608 ELSE "ADS"."Feature_27" END AS impter_29, CASE WHEN ("ADS"."Feature_28" IS NULL) THEN 0.952575301761 ELSE "ADS"."Feature_28" END AS impter_30, CASE WHEN ("ADS"."Feature_29" IS NULL) THEN -0.0581338391011 ELSE "ADS"."Feature_29" END AS impter_31, CASE WHEN ("ADS"."Feature_30" IS NULL) THEN -0.0131244127149 ELSE "ADS"."Feature_30" END AS impter_32, CASE WHEN ("ADS"."Feature_31" IS NULL) THEN -0.337551254331 ELSE "ADS"."Feature_31" END AS impter_33, CASE WHEN ("ADS"."Feature_32" IS NULL) THEN 0.0390265145932 ELSE "ADS"."Feature_32" END AS impter_34, CASE WHEN ("ADS"."Feature_33" IS NULL) THEN -0.0402939442132 ELSE "ADS"."Feature_33" END AS impter_35, CASE WHEN ("ADS"."Feature_34" IS NULL) THEN -0.171611885737 ELSE "ADS"."Feature_34" END AS impter_36, CASE WHEN ("ADS"."Feature_35" IS NULL) THEN 0.0126477868686 ELSE "ADS"."Feature_35" END AS impter_37, CASE WHEN ("ADS"."Feature_36" IS NULL) THEN 0.00519373530851 ELSE "ADS"."Feature_36" END AS impter_38, CASE WHEN ("ADS"."Feature_37" IS NULL) THEN -0.0171608765769 ELSE "ADS"."Feature_37" END AS impter_39, CASE WHEN ("ADS"."Feature_38" IS NULL) THEN 0.0450361559979 ELSE "ADS"."Feature_38" END AS impter_40, CASE WHEN ("ADS"."Feature_39" IS NULL) THEN -0.120358200226 ELSE "ADS"."Feature_39" END AS impter_41, CASE WHEN ("ADS"."Feature_40" IS NULL) THEN -0.176403922822 ELSE "ADS"."Feature_40" END AS impter_42, CASE WHEN ("ADS"."Feature_41" IS NULL) THEN -0.015157075927 ELSE "ADS"."Feature_41" END AS impter_43, CASE WHEN ("ADS"."Feature_42" IS NULL) THEN -0.306874019058 ELSE "ADS"."Feature_42" END AS impter_44, CASE WHEN ("ADS"."Feature_43" IS NULL) THEN -0.0403545806931 ELSE "ADS"."Feature_43" END AS impter_45, CASE WHEN ("ADS"."Feature_44" IS NULL) THEN -0.0078998151246 ELSE "ADS"."Feature_44" END AS impter_46, CASE WHEN ("ADS"."Feature_45" IS NULL) THEN 0.00264793225417 ELSE "ADS"."Feature_45" END AS impter_47, CASE WHEN ("ADS"."Feature_46" IS NULL) THEN -0.149210845983 ELSE "ADS"."Feature_46" END AS impter_48, CASE WHEN ("ADS"."Feature_47" IS NULL) THEN 0.248953992369 ELSE "ADS"."Feature_47" END AS impter_49, CASE WHEN ("ADS"."Feature_48" IS NULL) THEN -0.700424397972 ELSE "ADS"."Feature_48" END AS impter_50, CASE WHEN ("ADS"."Feature_49" IS NULL) THEN 0.0255276737501 ELSE "ADS"."Feature_49" END AS impter_51, CASE WHEN ("ADS"."Feature_50" IS NULL) THEN -0.15642138685 ELSE "ADS"."Feature_50" END AS impter_52, CASE WHEN ("ADS"."Feature_51" IS NULL) THEN -0.127838577178 ELSE "ADS"."Feature_51" END AS impter_53, CASE WHEN ("ADS"."Feature_52" IS NULL) THEN -0.369879523833 ELSE "ADS"."Feature_52" END AS impter_54, CASE WHEN ("ADS"."Feature_53" IS NULL) THEN 0.0410547455889 ELSE "ADS"."Feature_53" END AS impter_55, CASE WHEN ("ADS"."Feature_54" IS NULL) THEN -0.100474275314 ELSE "ADS"."Feature_54" END AS impter_56, CASE WHEN ("ADS"."Feature_55" IS NULL) THEN -0.131272886536 ELSE "ADS"."Feature_55" END AS impter_57, CASE WHEN ("ADS"."Feature_56" IS NULL) THEN 0.368578431365 ELSE "ADS"."Feature_56" END AS impter_58, CASE WHEN ("ADS"."Feature_57" IS NULL) THEN 0.222812465206 ELSE "ADS"."Feature_57" END AS impter_59, CASE WHEN ("ADS"."Feature_58" IS NULL) THEN -0.0062740876184 ELSE "ADS"."Feature_58" END AS impter_60, CASE WHEN ("ADS"."Feature_59" IS NULL) THEN 0.0142685989578 ELSE "ADS"."Feature_59" END AS impter_61, CASE WHEN ("ADS"."Feature_60" IS NULL) THEN -0.0285455115739 ELSE "ADS"."Feature_60" END AS impter_62, CASE WHEN ("ADS"."Feature_61" IS NULL) THEN -0.43749183185 ELSE "ADS"."Feature_61" END AS impter_63, CASE WHEN ("ADS"."Feature_62" IS NULL) THEN -0.368992780588 ELSE "ADS"."Feature_62" END AS impter_64, CASE WHEN ("ADS"."Feature_63" IS NULL) THEN 0.00116904181932 ELSE "ADS"."Feature_63" END AS impter_65, CASE WHEN ("ADS"."Feature_64" IS NULL) THEN -0.0115648737176 ELSE "ADS"."Feature_64" END AS impter_66, CASE WHEN ("ADS"."Feature_65" IS NULL) THEN -0.0435876998969 ELSE "ADS"."Feature_65" END AS impter_67, CASE WHEN ("ADS"."Feature_66" IS NULL) THEN -0.161863413739 ELSE "ADS"."Feature_66" END AS impter_68, CASE WHEN ("ADS"."Feature_67" IS NULL) THEN -0.017272641535 ELSE "ADS"."Feature_67" END AS impter_69, CASE WHEN ("ADS"."Feature_68" IS NULL) THEN -0.364030220369 ELSE "ADS"."Feature_68" END AS impter_70, CASE WHEN ("ADS"."Feature_69" IS NULL) THEN -0.0492730065024 ELSE "ADS"."Feature_69" END AS impter_71, CASE WHEN ("ADS"."Feature_70" IS NULL) THEN -0.0154685126573 ELSE "ADS"."Feature_70" END AS impter_72, CASE WHEN ("ADS"."Feature_71" IS NULL) THEN -0.191629393513 ELSE "ADS"."Feature_71" END AS impter_73, CASE WHEN ("ADS"."Feature_72" IS NULL) THEN 0.0237828303216 ELSE "ADS"."Feature_72" END AS impter_74, CASE WHEN ("ADS"."Feature_73" IS NULL) THEN 0.0204547996726 ELSE "ADS"."Feature_73" END AS impter_75, CASE WHEN ("ADS"."Feature_74" IS NULL) THEN -0.173355346593 ELSE "ADS"."Feature_74" END AS impter_76, CASE WHEN ("ADS"."Feature_75" IS NULL) THEN 0.0275822882458 ELSE "ADS"."Feature_75" END AS impter_77, CASE WHEN ("ADS"."Feature_76" IS NULL) THEN -0.0154523366782 ELSE "ADS"."Feature_76" END AS impter_78, CASE WHEN ("ADS"."Feature_77" IS NULL) THEN -0.0425555457733 ELSE "ADS"."Feature_77" END AS impter_79, CASE WHEN ("ADS"."Feature_78" IS NULL) THEN -0.00942573658037 ELSE "ADS"."Feature_78" END AS impter_80, CASE WHEN ("ADS"."Feature_79" IS NULL) THEN 0.00742367748933 ELSE "ADS"."Feature_79" END AS impter_81, CASE WHEN ("ADS"."Feature_80" IS NULL) THEN 0.0498533264368 ELSE "ADS"."Feature_80" END AS impter_82, CASE WHEN ("ADS"."Feature_81" IS NULL) THEN 0.0279602211794 ELSE "ADS"."Feature_81" END AS impter_83, CASE WHEN ("ADS"."Feature_82" IS NULL) THEN -0.00527050248758 ELSE "ADS"."Feature_82" END AS impter_84, CASE WHEN ("ADS"."Feature_83" IS NULL) THEN -0.0533936117742 ELSE "ADS"."Feature_83" END AS impter_85, CASE WHEN ("ADS"."Feature_84" IS NULL) THEN 0.171620332886 ELSE "ADS"."Feature_84" END AS impter_86, CASE WHEN ("ADS"."Feature_85" IS NULL) THEN 0.0372119970074 ELSE "ADS"."Feature_85" END AS impter_87, CASE WHEN ("ADS"."Feature_86" IS NULL) THEN 0.0184349733304 ELSE "ADS"."Feature_86" END AS impter_88, CASE WHEN ("ADS"."Feature_87" IS NULL) THEN 0.560521632617 ELSE "ADS"."Feature_87" END AS impter_89, CASE WHEN ("ADS"."Feature_88" IS NULL) THEN -0.052850462919 ELSE "ADS"."Feature_88" END AS impter_90, CASE WHEN ("ADS"."Feature_89" IS NULL) THEN 0.0793902173424 ELSE "ADS"."Feature_89" END AS impter_91, CASE WHEN ("ADS"."Feature_90" IS NULL) THEN -2.08866716312 ELSE "ADS"."Feature_90" END AS impter_92, CASE WHEN ("ADS"."Feature_91" IS NULL) THEN -1.0831020639 ELSE "ADS"."Feature_91" END AS impter_93, CASE WHEN ("ADS"."Feature_92" IS NULL) THEN -0.304702362821 ELSE "ADS"."Feature_92" END AS impter_94, CASE WHEN ("ADS"."Feature_93" IS NULL) THEN -0.935426259564 ELSE "ADS"."Feature_93" END AS impter_95, CASE WHEN ("ADS"."Feature_94" IS NULL) THEN -0.098411219927 ELSE "ADS"."Feature_94" END AS impter_96, CASE WHEN ("ADS"."Feature_95" IS NULL) THEN -0.53165348436 ELSE "ADS"."Feature_95" END AS impter_97, CASE WHEN ("ADS"."Feature_96" IS NULL) THEN 0.0141274221378 ELSE "ADS"."Feature_96" END AS impter_98, CASE WHEN ("ADS"."Feature_97" IS NULL) THEN -0.0126312774127 ELSE "ADS"."Feature_97" END AS impter_99, CASE WHEN ("ADS"."Feature_98" IS NULL) THEN 0.0312868812331 ELSE "ADS"."Feature_98" END AS impter_100, CASE WHEN ("ADS"."Feature_99" IS NULL) THEN -0.450390515385 ELSE "ADS"."Feature_99" END AS impter_101 
FROM "FourClass_100" AS "ADS"), 
"ADS_sca_2_OUT" AS 
(SELECT "ADS_imp_1_OUT"."KEY" AS "KEY", (CAST("ADS_imp_1_OUT".impter_2 AS FLOAT) - 0.00653574012116) / 0.985821711919 AS scaler_2, (CAST("ADS_imp_1_OUT".impter_3 AS FLOAT) - 0.16767827126) / 4.17893277906 AS scaler_3, (CAST("ADS_imp_1_OUT".impter_4 AS FLOAT) - -0.0551470417358) / 4.08515606391 AS scaler_4, (CAST("ADS_imp_1_OUT".impter_5 AS FLOAT) - 0.00152116930519) / 1.05839942213 AS scaler_5, (CAST("ADS_imp_1_OUT".impter_6 AS FLOAT) - 0.0314276019104) / 0.958502901404 AS scaler_6, (CAST("ADS_imp_1_OUT".impter_7 AS FLOAT) - 0.0261796831787) / 0.993854807715 AS scaler_7, (CAST("ADS_imp_1_OUT".impter_8 AS FLOAT) - -0.0112547131221) / 0.995945599637 AS scaler_8, (CAST("ADS_imp_1_OUT".impter_9 AS FLOAT) - -0.0168862118009) / 1.04542967803 AS scaler_9, (CAST("ADS_imp_1_OUT".impter_10 AS FLOAT) - -0.0273427029645) / 4.33135674182 AS scaler_10, (CAST("ADS_imp_1_OUT".impter_11 AS FLOAT) - -0.163701278848) / 4.45889820593 AS scaler_11, (CAST("ADS_imp_1_OUT".impter_12 AS FLOAT) - 0.0354122507389) / 1.03661648781 AS scaler_12, (CAST("ADS_imp_1_OUT".impter_13 AS FLOAT) - -0.0285291234756) / 1.00467620555 AS scaler_13, (CAST("ADS_imp_1_OUT".impter_14 AS FLOAT) - -0.0267494449896) / 0.99962402671 AS scaler_14, (CAST("ADS_imp_1_OUT".impter_15 AS FLOAT) - 0.386019822911) / 4.14480478652 AS scaler_15, (CAST("ADS_imp_1_OUT".impter_16 AS FLOAT) - 0.0162145257314) / 1.01728129667 AS scaler_16, (CAST("ADS_imp_1_OUT".impter_17 AS FLOAT) - 0.227237750778) / 4.36711262018 AS scaler_17, (CAST("ADS_imp_1_OUT".impter_18 AS FLOAT) - 0.566373456694) / 4.11815688405 AS scaler_18, (CAST("ADS_imp_1_OUT".impter_19 AS FLOAT) - 0.277696410616) / 4.01432897572 AS scaler_19, (CAST("ADS_imp_1_OUT".impter_20 AS FLOAT) - 0.00599432681235) / 0.972439502321 AS scaler_20, (CAST("ADS_imp_1_OUT".impter_21 AS FLOAT) - -0.0218525344697) / 0.985687517726 AS scaler_21, (CAST("ADS_imp_1_OUT".impter_22 AS FLOAT) - -0.028375425917) / 1.02310346987 AS scaler_22, (CAST("ADS_imp_1_OUT".impter_23 AS FLOAT) - 0.0151643232963) / 4.35314516918 AS scaler_23, (CAST("ADS_imp_1_OUT".impter_24 AS FLOAT) - 0.0174691345488) / 1.00180565427 AS scaler_24, (CAST("ADS_imp_1_OUT".impter_25 AS FLOAT) - 0.0349390944943) / 0.992721649768 AS scaler_25, (CAST("ADS_imp_1_OUT".impter_26 AS FLOAT) - -0.144361607634) / 4.46739766886 AS scaler_26, (CAST("ADS_imp_1_OUT".impter_27 AS FLOAT) - 0.146104677444) / 4.10734277856 AS scaler_27, (CAST("ADS_imp_1_OUT".impter_28 AS FLOAT) - 0.0676158423738) / 4.27764303646 AS scaler_28, (CAST("ADS_imp_1_OUT".impter_29 AS FLOAT) - -0.30836845608) / 4.03019568626 AS scaler_29, (CAST("ADS_imp_1_OUT".impter_30 AS FLOAT) - 0.952575301761) / 4.01730262302 AS scaler_30, (CAST("ADS_imp_1_OUT".impter_31 AS FLOAT) - -0.0581338391011) / 4.03353195749 AS scaler_31, (CAST("ADS_imp_1_OUT".impter_32 AS FLOAT) - -0.0131244127149) / 0.955198781566 AS scaler_32, (CAST("ADS_imp_1_OUT".impter_33 AS FLOAT) - -0.337551254331) / 4.10657168041 AS scaler_33, (CAST("ADS_imp_1_OUT".impter_34 AS FLOAT) - 0.0390265145932) / 0.990359225337 AS scaler_34, (CAST("ADS_imp_1_OUT".impter_35 AS FLOAT) - -0.0402939442132) / 1.01529611676 AS scaler_35, (CAST("ADS_imp_1_OUT".impter_36 AS FLOAT) - -0.171611885737) / 4.17922956302 AS scaler_36, (CAST("ADS_imp_1_OUT".impter_37 AS FLOAT) - 0.0126477868686) / 1.00783076186 AS scaler_37, (CAST("ADS_imp_1_OUT".impter_38 AS FLOAT) - 0.00519373530851) / 4.29733218367 AS scaler_38, (CAST("ADS_imp_1_OUT".impter_39 AS FLOAT) - -0.0171608765769) / 1.01737885571 AS scaler_39, (CAST("ADS_imp_1_OUT".impter_40 AS FLOAT) - 0.0450361559979) / 3.90428113679 AS scaler_40, (CAST("ADS_imp_1_OUT".impter_41 AS FLOAT) - -0.120358200226) / 3.98402860362 AS scaler_41, (CAST("ADS_imp_1_OUT".impter_42 AS FLOAT) - -0.176403922822) / 4.06931463762 AS scaler_42, (CAST("ADS_imp_1_OUT".impter_43 AS FLOAT) - -0.015157075927) / 1.02915738955 AS scaler_43, (CAST("ADS_imp_1_OUT".impter_44 AS FLOAT) - -0.306874019058) / 4.34791251221 AS scaler_44, (CAST("ADS_imp_1_OUT".impter_45 AS FLOAT) - -0.0403545806931) / 4.05064377381 AS scaler_45, (CAST("ADS_imp_1_OUT".impter_46 AS FLOAT) - -0.0078998151246) / 1.00637547659 AS scaler_46, (CAST("ADS_imp_1_OUT".impter_47 AS FLOAT) - 0.00264793225417) / 1.00214477559 AS scaler_47, (CAST("ADS_imp_1_OUT".impter_48 AS FLOAT) - -0.149210845983) / 4.10340200989 AS scaler_48, (CAST("ADS_imp_1_OUT".impter_49 AS FLOAT) - 0.248953992369) / 4.23220038033 AS scaler_49, (CAST("ADS_imp_1_OUT".impter_50 AS FLOAT) - -0.700424397972) / 4.22076654199 AS scaler_50, (CAST("ADS_imp_1_OUT".impter_51 AS FLOAT) - 0.0255276737501) / 1.02067409273 AS scaler_51, (CAST("ADS_imp_1_OUT".impter_52 AS FLOAT) - -0.15642138685) / 4.07831067125 AS scaler_52, (CAST("ADS_imp_1_OUT".impter_53 AS FLOAT) - -0.127838577178) / 4.24723680136 AS scaler_53, (CAST("ADS_imp_1_OUT".impter_54 AS FLOAT) - -0.369879523833) / 4.03767584848 AS scaler_54, (CAST("ADS_imp_1_OUT".impter_55 AS FLOAT) - 0.0410547455889) / 4.44557137144 AS scaler_55, (CAST("ADS_imp_1_OUT".impter_56 AS FLOAT) - -0.100474275314) / 4.04583682644 AS scaler_56, (CAST("ADS_imp_1_OUT".impter_57 AS FLOAT) - -0.131272886536) / 4.2566060095 AS scaler_57, (CAST("ADS_imp_1_OUT".impter_58 AS FLOAT) - 0.368578431365) / 4.04294690881 AS scaler_58, (CAST("ADS_imp_1_OUT".impter_59 AS FLOAT) - 0.222812465206) / 4.25239806876 AS scaler_59, (CAST("ADS_imp_1_OUT".impter_60 AS FLOAT) - -0.0062740876184) / 1.0131754299 AS scaler_60, (CAST("ADS_imp_1_OUT".impter_61 AS FLOAT) - 0.0142685989578) / 0.975232456173 AS scaler_61, (CAST("ADS_imp_1_OUT".impter_62 AS FLOAT) - -0.0285455115739) / 0.996017661218 AS scaler_62, (CAST("ADS_imp_1_OUT".impter_63 AS FLOAT) - -0.43749183185) / 4.23875925656 AS scaler_63, (CAST("ADS_imp_1_OUT".impter_64 AS FLOAT) - -0.368992780588) / 4.18274187652 AS scaler_64, (CAST("ADS_imp_1_OUT".impter_65 AS FLOAT) - 0.00116904181932) / 1.04333652499 AS scaler_65, (CAST("ADS_imp_1_OUT".impter_66 AS FLOAT) - -0.0115648737176) / 4.08150429415 AS scaler_66, (CAST("ADS_imp_1_OUT".impter_67 AS FLOAT) - -0.0435876998969) / 1.05866451901 AS scaler_67, (CAST("ADS_imp_1_OUT".impter_68 AS FLOAT) - -0.161863413739) / 4.25966623517 AS scaler_68, (CAST("ADS_imp_1_OUT".impter_69 AS FLOAT) - -0.017272641535) / 1.01030583344 AS scaler_69, (CAST("ADS_imp_1_OUT".impter_70 AS FLOAT) - -0.364030220369) / 4.23529048916 AS scaler_70, (CAST("ADS_imp_1_OUT".impter_71 AS FLOAT) - -0.0492730065024) / 4.31080236531 AS scaler_71, (CAST("ADS_imp_1_OUT".impter_72 AS FLOAT) - -0.0154685126573) / 1.01066080153 AS scaler_72, (CAST("ADS_imp_1_OUT".impter_73 AS FLOAT) - -0.191629393513) / 4.11604496555 AS scaler_73, (CAST("ADS_imp_1_OUT".impter_74 AS FLOAT) - 0.0237828303216) / 0.997185935238 AS scaler_74, (CAST("ADS_imp_1_OUT".impter_75 AS FLOAT) - 0.0204547996726) / 0.964047487679 AS scaler_75, (CAST("ADS_imp_1_OUT".impter_76 AS FLOAT) - -0.173355346593) / 4.26884008329 AS scaler_76, (CAST("ADS_imp_1_OUT".impter_77 AS FLOAT) - 0.0275822882458) / 1.00287363715 AS scaler_77, (CAST("ADS_imp_1_OUT".impter_78 AS FLOAT) - -0.0154523366782) / 0.951796972878 AS scaler_78, (CAST("ADS_imp_1_OUT".impter_79 AS FLOAT) - -0.0425555457733) / 1.02604198012 AS scaler_79, (CAST("ADS_imp_1_OUT".impter_80 AS FLOAT) - -0.00942573658037) / 0.981547933163 AS scaler_80, (CAST("ADS_imp_1_OUT".impter_81 AS FLOAT) - 0.00742367748933) / 1.0171447638 AS scaler_81, (CAST("ADS_imp_1_OUT".impter_82 AS FLOAT) - 0.0498533264368) / 1.01381217519 AS scaler_82, (CAST("ADS_imp_1_OUT".impter_83 AS FLOAT) - 0.0279602211794) / 1.00493310879 AS scaler_83, (CAST("ADS_imp_1_OUT".impter_84 AS FLOAT) - -0.00527050248758) / 1.02332528491 AS scaler_84, (CAST("ADS_imp_1_OUT".impter_85 AS FLOAT) - -0.0533936117742) / 1.00458919199 AS scaler_85, (CAST("ADS_imp_1_OUT".impter_86 AS FLOAT) - 0.171620332886) / 4.24884427578 AS scaler_86, (CAST("ADS_imp_1_OUT".impter_87 AS FLOAT) - 0.0372119970074) / 4.25404858308 AS scaler_87, (CAST("ADS_imp_1_OUT".impter_88 AS FLOAT) - 0.0184349733304) / 3.94972884089 AS scaler_88, (CAST("ADS_imp_1_OUT".impter_89 AS FLOAT) - 0.560521632617) / 4.33133243898 AS scaler_89, (CAST("ADS_imp_1_OUT".impter_90 AS FLOAT) - -0.052850462919) / 1.03583971022 AS scaler_90, (CAST("ADS_imp_1_OUT".impter_91 AS FLOAT) - 0.0793902173424) / 0.969876446028 AS scaler_91, (CAST("ADS_imp_1_OUT".impter_92 AS FLOAT) - -2.08866716312) / 15.3022152465 AS scaler_92, (CAST("ADS_imp_1_OUT".impter_93 AS FLOAT) - -1.0831020639) / 4.36710902027 AS scaler_93, (CAST("ADS_imp_1_OUT".impter_94 AS FLOAT) - -0.304702362821) / 4.20429236235 AS scaler_94, (CAST("ADS_imp_1_OUT".impter_95 AS FLOAT) - -0.935426259564) / 15.3570057667 AS scaler_95, (CAST("ADS_imp_1_OUT".impter_96 AS FLOAT) - -0.098411219927) / 0.952484869944 AS scaler_96, (CAST("ADS_imp_1_OUT".impter_97 AS FLOAT) - -0.53165348436) / 3.97700071824 AS scaler_97, (CAST("ADS_imp_1_OUT".impter_98 AS FLOAT) - 0.0141274221378) / 0.987925892541 AS scaler_98, (CAST("ADS_imp_1_OUT".impter_99 AS FLOAT) - -0.0126312774127) / 1.01519644483 AS scaler_99, (CAST("ADS_imp_1_OUT".impter_100 AS FLOAT) - 0.0312868812331) / 0.989361802421 AS scaler_100, (CAST("ADS_imp_1_OUT".impter_101 AS FLOAT) - -0.450390515385) / 4.24470032509 AS scaler_101 
FROM "ADS_imp_1_OUT"), 
"DT_node_lookup_32" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_92 < 1.6734657287597656) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_70 < -0.29918548464775085) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_49 < -0.4851910471916199) THEN 5 ELSE 6 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_36 < 0.8005539178848267) THEN 7 ELSE 8 END END ELSE 2 END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_32" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Score" AS "Score" 
FROM (SELECT 2 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS depth, 0 AS parent_id, 0.08278333395719528 AS "Score" UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, 3 AS parent_id, -0.02895318903028965 AS "Score" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, 3 AS parent_id, 0.03702819347381592 AS "Score" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, 4 AS parent_id, -0.031459055840969086 AS "Score" UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, 4 AS parent_id, 0.018474912270903587 AS "Score") AS "Values"), 
"DT_Output_32" AS 
(SELECT "DT_node_lookup_32"."KEY" AS "KEY", "DT_node_lookup_32".node_id_2 AS node_id_2, "DT_node_data_32".node_id AS node_id, "DT_node_data_32".feature AS feature, "DT_node_data_32".threshold AS threshold, "DT_node_data_32".depth AS depth, "DT_node_data_32".parent_id AS parent_id, "DT_node_data_32"."Score" AS "Score" 
FROM "DT_node_lookup_32" LEFT OUTER JOIN "DT_node_data_32" ON "DT_node_lookup_32".node_id_2 = "DT_node_data_32".node_id), 
"XGB_Tree_0_8" AS 
(SELECT "DT_Output_32"."KEY" AS "KEY", "DT_Output_32"."Score" AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3" 
FROM "DT_Output_32"), 
"DT_node_lookup_33" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_42 < 0.2807415723800659) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_88 < -0.8236199617385864) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_78 < -0.49943476915359497) THEN 7 ELSE 8 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_54 < 0.5968537330627441) THEN 9 ELSE 10 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_94 < -0.3838874101638794) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_45 < 0.3913048803806305) THEN 11 ELSE 12 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_87 < -0.9070277810096741) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_33" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Score" AS "Score" 
FROM (SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, 3 AS parent_id, 0.015440719202160835 AS "Score" UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, 3 AS parent_id, -0.05111033841967583 AS "Score" UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, 4 AS parent_id, 0.008606505580246449 AS "Score" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, 4 AS parent_id, 0.06215933710336685 AS "Score" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, 5 AS parent_id, -0.01880643330514431 AS "Score" UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, 5 AS parent_id, 0.058589089661836624 AS "Score" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, 6 AS parent_id, 0.002135075395926833 AS "Score" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, 6 AS parent_id, -0.04959695786237717 AS "Score") AS "Values"), 
"DT_Output_33" AS 
(SELECT "DT_node_lookup_33"."KEY" AS "KEY", "DT_node_lookup_33".node_id_2 AS node_id_2, "DT_node_data_33".node_id AS node_id, "DT_node_data_33".feature AS feature, "DT_node_data_33".threshold AS threshold, "DT_node_data_33".depth AS depth, "DT_node_data_33".parent_id AS parent_id, "DT_node_data_33"."Score" AS "Score" 
FROM "DT_node_lookup_33" LEFT OUTER JOIN "DT_node_data_33" ON "DT_node_lookup_33".node_id_2 = "DT_node_data_33".node_id), 
"XGB_Tree_1_8" AS 
(SELECT "DT_Output_33"."KEY" AS "KEY", 0.0 AS "Score_0", "DT_Output_33"."Score" AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3" 
FROM "DT_Output_33"), 
"DT_node_lookup_34" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_63 < 0.562813401222229) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_17 < 0.009806754067540169) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_40 < -0.9351493120193481) THEN 7 ELSE 8 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_40 < -0.39649105072021484) THEN 9 ELSE 10 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_29 < -0.38603299856185913) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_23 < 0.21378189325332642) THEN 11 ELSE 12 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_51 < -0.8340598344802856) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_34" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Score" AS "Score" 
FROM (SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, 3 AS parent_id, -0.026487398892641068 AS "Score" UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, 3 AS parent_id, 0.04266810417175293 AS "Score" UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, 4 AS parent_id, -0.04589756950736046 AS "Score" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, 4 AS parent_id, 0.002722901990637183 AS "Score" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, 5 AS parent_id, -0.027439186349511147 AS "Score" UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, 5 AS parent_id, 0.052225906401872635 AS "Score" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, 6 AS parent_id, 0.0032512873876839876 AS "Score" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, 6 AS parent_id, -0.05706444010138512 AS "Score") AS "Values"), 
"DT_Output_34" AS 
(SELECT "DT_node_lookup_34"."KEY" AS "KEY", "DT_node_lookup_34".node_id_2 AS node_id_2, "DT_node_data_34".node_id AS node_id, "DT_node_data_34".feature AS feature, "DT_node_data_34".threshold AS threshold, "DT_node_data_34".depth AS depth, "DT_node_data_34".parent_id AS parent_id, "DT_node_data_34"."Score" AS "Score" 
FROM "DT_node_lookup_34" LEFT OUTER JOIN "DT_node_data_34" ON "DT_node_lookup_34".node_id_2 = "DT_node_data_34".node_id), 
"XGB_Tree_2_8" AS 
(SELECT "DT_Output_34"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", "DT_Output_34"."Score" AS "Score_2", 0.0 AS "Score_3" 
FROM "DT_Output_34"), 
"DT_node_lookup_35" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_86 < -0.2933613657951355) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_56 < 0.9272165894508362) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_18 < -0.10678659379482269) THEN 7 ELSE 8 END ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_10 < -0.1772373765707016) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_64 < -0.7708247303962708) THEN 9 ELSE 10 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_17 < 0.6041853427886963) THEN 11 ELSE 12 END END END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_35" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Score" AS "Score" 
FROM (SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, 1 AS parent_id, -0.04925098270177841 AS "Score" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, 3 AS parent_id, 0.05965579301118851 AS "Score" UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, 3 AS parent_id, 0.0047521828673779964 AS "Score" UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, 5 AS parent_id, -0.005236402153968811 AS "Score" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, 5 AS parent_id, -0.05082934722304344 AS "Score" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, 6 AS parent_id, -0.017452681437134743 AS "Score" UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, 6 AS parent_id, 0.0426335483789444 AS "Score") AS "Values"), 
"DT_Output_35" AS 
(SELECT "DT_node_lookup_35"."KEY" AS "KEY", "DT_node_lookup_35".node_id_2 AS node_id_2, "DT_node_data_35".node_id AS node_id, "DT_node_data_35".feature AS feature, "DT_node_data_35".threshold AS threshold, "DT_node_data_35".depth AS depth, "DT_node_data_35".parent_id AS parent_id, "DT_node_data_35"."Score" AS "Score" 
FROM "DT_node_lookup_35" LEFT OUTER JOIN "DT_node_data_35" ON "DT_node_lookup_35".node_id_2 = "DT_node_data_35".node_id), 
"XGB_Tree_3_8" AS 
(SELECT "DT_Output_35"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", "DT_Output_35"."Score" AS "Score_3" 
FROM "DT_Output_35"), 
"DT_node_lookup_36" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_36 < -0.3963547945022583) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_58 < -0.8081027269363403) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_70 < 0.1271437555551529) THEN 7 ELSE 8 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_66 < -0.006859240587800741) THEN 9 ELSE 10 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_10 < 0.3894922137260437) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_87 < -0.2001642882823944) THEN 11 ELSE 12 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_26 < -0.13944058120250702) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_36" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Score" AS "Score" 
FROM (SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, 3 AS parent_id, 0.05180240422487259 AS "Score" UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, 3 AS parent_id, -0.022498054429888725 AS "Score" UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, 4 AS parent_id, -0.02637512981891632 AS "Score" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, 4 AS parent_id, -0.0599818229675293 AS "Score" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, 5 AS parent_id, -0.0050123585388064384 AS "Score" UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, 5 AS parent_id, 0.04904205724596977 AS "Score" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, 6 AS parent_id, 0.01569882594048977 AS "Score" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, 6 AS parent_id, -0.05217389389872551 AS "Score") AS "Values"), 
"DT_Output_36" AS 
(SELECT "DT_node_lookup_36"."KEY" AS "KEY", "DT_node_lookup_36".node_id_2 AS node_id_2, "DT_node_data_36".node_id AS node_id, "DT_node_data_36".feature AS feature, "DT_node_data_36".threshold AS threshold, "DT_node_data_36".depth AS depth, "DT_node_data_36".parent_id AS parent_id, "DT_node_data_36"."Score" AS "Score" 
FROM "DT_node_lookup_36" LEFT OUTER JOIN "DT_node_data_36" ON "DT_node_lookup_36".node_id_2 = "DT_node_data_36".node_id), 
"XGB_Tree_0_9" AS 
(SELECT "DT_Output_36"."KEY" AS "KEY", "DT_Output_36"."Score" AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3" 
FROM "DT_Output_36"), 
"DT_node_lookup_37" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_66 < -0.24924510717391968) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_15 < 0.06725873053073883) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_44 < -1.0043466091156006) THEN 7 ELSE 8 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_29 < -0.30656492710113525) THEN 9 ELSE 10 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_45 < 0.4339013993740082) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_89 < 0.9268244504928589) THEN 11 ELSE 12 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_52 < -0.49875593185424805) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_37" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Score" AS "Score" 
FROM (SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, 3 AS parent_id, 0.06927194446325302 AS "Score" UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, 3 AS parent_id, -0.02023971639573574 AS "Score" UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, 4 AS parent_id, -0.005124978255480528 AS "Score" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, 4 AS parent_id, 0.07468491047620773 AS "Score" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, 5 AS parent_id, -0.04250505566596985 AS "Score" UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, 5 AS parent_id, 0.017809366807341576 AS "Score" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, 6 AS parent_id, -0.03642440214753151 AS "Score" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, 6 AS parent_id, 0.03550633415579796 AS "Score") AS "Values"), 
"DT_Output_37" AS 
(SELECT "DT_node_lookup_37"."KEY" AS "KEY", "DT_node_lookup_37".node_id_2 AS node_id_2, "DT_node_data_37".node_id AS node_id, "DT_node_data_37".feature AS feature, "DT_node_data_37".threshold AS threshold, "DT_node_data_37".depth AS depth, "DT_node_data_37".parent_id AS parent_id, "DT_node_data_37"."Score" AS "Score" 
FROM "DT_node_lookup_37" LEFT OUTER JOIN "DT_node_data_37" ON "DT_node_lookup_37".node_id_2 = "DT_node_data_37".node_id), 
"XGB_Tree_1_9" AS 
(SELECT "DT_Output_37"."KEY" AS "KEY", 0.0 AS "Score_0", "DT_Output_37"."Score" AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3" 
FROM "DT_Output_37"), 
"DT_node_lookup_38" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_66 < -0.009589112363755703) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_40 < 0.8294782638549805) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_17 < -0.7462559938430786) THEN 7 ELSE 8 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_19 < 0.17532509565353394) THEN 9 ELSE 10 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_89 < -0.3456055223941803) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_94 < -0.01307676825672388) THEN 11 ELSE 12 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_11 < -0.26904869079589844) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_38" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Score" AS "Score" 
FROM (SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, 3 AS parent_id, 0.008966959081590176 AS "Score" UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, 3 AS parent_id, -0.0405251644551754 AS "Score" UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, 4 AS parent_id, -0.0213593989610672 AS "Score" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, 4 AS parent_id, 0.0535426028072834 AS "Score" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, 5 AS parent_id, 0.010978109203279018 AS "Score" UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, 5 AS parent_id, 0.09166537970304489 AS "Score" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, 6 AS parent_id, -0.03505472466349602 AS "Score" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, 6 AS parent_id, 0.014539849944412708 AS "Score") AS "Values"), 
"DT_Output_38" AS 
(SELECT "DT_node_lookup_38"."KEY" AS "KEY", "DT_node_lookup_38".node_id_2 AS node_id_2, "DT_node_data_38".node_id AS node_id, "DT_node_data_38".feature AS feature, "DT_node_data_38".threshold AS threshold, "DT_node_data_38".depth AS depth, "DT_node_data_38".parent_id AS parent_id, "DT_node_data_38"."Score" AS "Score" 
FROM "DT_node_lookup_38" LEFT OUTER JOIN "DT_node_data_38" ON "DT_node_lookup_38".node_id_2 = "DT_node_data_38".node_id), 
"XGB_Tree_2_9" AS 
(SELECT "DT_Output_38"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", "DT_Output_38"."Score" AS "Score_2", 0.0 AS "Score_3" 
FROM "DT_Output_38"), 
"DT_node_lookup_39" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_70 < -0.24858278036117554) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_27 < 0.12399684637784958) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_94 < -0.624131441116333) THEN 7 ELSE 8 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_92 < -0.5523350238800049) THEN 9 ELSE 10 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_101 < 0.07949402183294296) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_40 < -0.9563710689544678) THEN 11 ELSE 12 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_19 < 0.2882452607154846) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_39" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Score" AS "Score" 
FROM (SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, 3 AS parent_id, -0.05254552513360977 AS "Score" UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, 3 AS parent_id, 0.012479444034397602 AS "Score" UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, 4 AS parent_id, -0.02490890398621559 AS "Score" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, 4 AS parent_id, -0.06077225133776665 AS "Score" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, 5 AS parent_id, 0.08631572127342224 AS "Score" UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, 5 AS parent_id, 0.02223650924861431 AS "Score" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, 6 AS parent_id, -0.03108919970691204 AS "Score" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, 6 AS parent_id, 0.028538642451167107 AS "Score") AS "Values"), 
"DT_Output_39" AS 
(SELECT "DT_node_lookup_39"."KEY" AS "KEY", "DT_node_lookup_39".node_id_2 AS node_id_2, "DT_node_data_39".node_id AS node_id, "DT_node_data_39".feature AS feature, "DT_node_data_39".threshold AS threshold, "DT_node_data_39".depth AS depth, "DT_node_data_39".parent_id AS parent_id, "DT_node_data_39"."Score" AS "Score" 
FROM "DT_node_lookup_39" LEFT OUTER JOIN "DT_node_data_39" ON "DT_node_lookup_39".node_id_2 = "DT_node_data_39".node_id), 
"XGB_Tree_3_9" AS 
(SELECT "DT_Output_39"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", "DT_Output_39"."Score" AS "Score_3" 
FROM "DT_Output_39")
 SELECT "Score_Union_CTE_esu_4"."KEY", "Score_Union_CTE_esu_4"."Score_0", "Score_Union_CTE_esu_4"."Score_1", "Score_Union_CTE_esu_4"."Score_2", "Score_Union_CTE_esu_4"."Score_3" 
FROM (SELECT "XGB_Tree_0_8"."KEY" AS "KEY", "XGB_Tree_0_8"."Score_0" AS "Score_0", "XGB_Tree_0_8"."Score_1" AS "Score_1", "XGB_Tree_0_8"."Score_2" AS "Score_2", "XGB_Tree_0_8"."Score_3" AS "Score_3" 
FROM "XGB_Tree_0_8" UNION ALL SELECT "XGB_Tree_1_8"."KEY" AS "KEY", "XGB_Tree_1_8"."Score_0" AS "Score_0", "XGB_Tree_1_8"."Score_1" AS "Score_1", "XGB_Tree_1_8"."Score_2" AS "Score_2", "XGB_Tree_1_8"."Score_3" AS "Score_3" 
FROM "XGB_Tree_1_8" UNION ALL SELECT "XGB_Tree_2_8"."KEY" AS "KEY", "XGB_Tree_2_8"."Score_0" AS "Score_0", "XGB_Tree_2_8"."Score_1" AS "Score_1", "XGB_Tree_2_8"."Score_2" AS "Score_2", "XGB_Tree_2_8"."Score_3" AS "Score_3" 
FROM "XGB_Tree_2_8" UNION ALL SELECT "XGB_Tree_3_8"."KEY" AS "KEY", "XGB_Tree_3_8"."Score_0" AS "Score_0", "XGB_Tree_3_8"."Score_1" AS "Score_1", "XGB_Tree_3_8"."Score_2" AS "Score_2", "XGB_Tree_3_8"."Score_3" AS "Score_3" 
FROM "XGB_Tree_3_8" UNION ALL SELECT "XGB_Tree_0_9"."KEY" AS "KEY", "XGB_Tree_0_9"."Score_0" AS "Score_0", "XGB_Tree_0_9"."Score_1" AS "Score_1", "XGB_Tree_0_9"."Score_2" AS "Score_2", "XGB_Tree_0_9"."Score_3" AS "Score_3" 
FROM "XGB_Tree_0_9" UNION ALL SELECT "XGB_Tree_1_9"."KEY" AS "KEY", "XGB_Tree_1_9"."Score_0" AS "Score_0", "XGB_Tree_1_9"."Score_1" AS "Score_1", "XGB_Tree_1_9"."Score_2" AS "Score_2", "XGB_Tree_1_9"."Score_3" AS "Score_3" 
FROM "XGB_Tree_1_9" UNION ALL SELECT "XGB_Tree_2_9"."KEY" AS "KEY", "XGB_Tree_2_9"."Score_0" AS "Score_0", "XGB_Tree_2_9"."Score_1" AS "Score_1", "XGB_Tree_2_9"."Score_2" AS "Score_2", "XGB_Tree_2_9"."Score_3" AS "Score_3" 
FROM "XGB_Tree_2_9" UNION ALL SELECT "XGB_Tree_3_9"."KEY" AS "KEY", "XGB_Tree_3_9"."Score_0" AS "Score_0", "XGB_Tree_3_9"."Score_1" AS "Score_1", "XGB_Tree_3_9"."Score_2" AS "Score_2", "XGB_Tree_3_9"."Score_3" AS "Score_3" 
FROM "XGB_Tree_3_9") AS "Score_Union_CTE_esu_4"), 
"Score_Union_CTE" AS 
(SELECT "Score_Union_CTEbig_esu"."KEY" AS "KEY", "Score_Union_CTEbig_esu"."Score_0" AS "Score_0", "Score_Union_CTEbig_esu"."Score_1" AS "Score_1", "Score_Union_CTEbig_esu"."Score_2" AS "Score_2", "Score_Union_CTEbig_esu"."Score_3" AS "Score_3" 
FROM (SELECT "Score_Union_CTE_0"."KEY" AS "KEY", "Score_Union_CTE_0"."Score_0" AS "Score_0", "Score_Union_CTE_0"."Score_1" AS "Score_1", "Score_Union_CTE_0"."Score_2" AS "Score_2", "Score_Union_CTE_0"."Score_3" AS "Score_3" 
FROM "Score_Union_CTE_0" UNION ALL SELECT "Score_Union_CTE_1"."KEY" AS "KEY", "Score_Union_CTE_1"."Score_0" AS "Score_0", "Score_Union_CTE_1"."Score_1" AS "Score_1", "Score_Union_CTE_1"."Score_2" AS "Score_2", "Score_Union_CTE_1"."Score_3" AS "Score_3" 
FROM "Score_Union_CTE_1" UNION ALL SELECT "Score_Union_CTE_2"."KEY" AS "KEY", "Score_Union_CTE_2"."Score_0" AS "Score_0", "Score_Union_CTE_2"."Score_1" AS "Score_1", "Score_Union_CTE_2"."Score_2" AS "Score_2", "Score_Union_CTE_2"."Score_3" AS "Score_3" 
FROM "Score_Union_CTE_2" UNION ALL SELECT "Score_Union_CTE_3"."KEY" AS "KEY", "Score_Union_CTE_3"."Score_0" AS "Score_0", "Score_Union_CTE_3"."Score_1" AS "Score_1", "Score_Union_CTE_3"."Score_2" AS "Score_2", "Score_Union_CTE_3"."Score_3" AS "Score_3" 
FROM "Score_Union_CTE_3" UNION ALL SELECT "Score_Union_CTE_4"."KEY" AS "KEY", "Score_Union_CTE_4"."Score_0" AS "Score_0", "Score_Union_CTE_4"."Score_1" AS "Score_1", "Score_Union_CTE_4"."Score_2" AS "Score_2", "Score_Union_CTE_4"."Score_3" AS "Score_3" 
FROM "Score_Union_CTE_4") AS "Score_Union_CTEbig_esu"), 
"XGB_Sum_Scores" AS 
(SELECT "T"."KEY" AS "KEY", "T"."Score_0" AS "Score_0", "T"."Score_1" AS "Score_1", "T"."Score_2" AS "Score_2", "T"."Score_3" AS "Score_3" 
FROM (SELECT "Score_Union_CTE"."KEY" AS "KEY", sum("Score_Union_CTE"."Score_0") AS "Score_0", sum("Score_Union_CTE"."Score_1") AS "Score_1", sum("Score_Union_CTE"."Score_2") AS "Score_2", sum("Score_Union_CTE"."Score_3") AS "Score_3" 
FROM "Score_Union_CTE" GROUP BY "Score_Union_CTE"."KEY") AS "T"), 
orig_cte AS 
(SELECT "XGB_Sum_Scores"."KEY" AS "KEY", "XGB_Sum_Scores"."Score_0" AS "Score_0", "XGB_Sum_Scores"."Score_1" AS "Score_1", "XGB_Sum_Scores"."Score_2" AS "Score_2", "XGB_Sum_Scores"."Score_3" AS "Score_3", CAST(NULL AS FLOAT) AS "Proba_0", CAST(NULL AS FLOAT) AS "Proba_1", CAST(NULL AS FLOAT) AS "Proba_2", CAST(NULL AS FLOAT) AS "Proba_3", CAST(NULL AS FLOAT) AS "LogProba_0", CAST(NULL AS FLOAT) AS "LogProba_1", CAST(NULL AS FLOAT) AS "LogProba_2", CAST(NULL AS FLOAT) AS "LogProba_3", CAST(NULL AS INTEGER) AS "Decision", CAST(NULL AS FLOAT) AS "DecisionProba" 
FROM "XGB_Sum_Scores"), 
score_class_union AS 
(SELECT scu."KEY_u" AS "KEY_u", scu.class AS class, scu."LogProba" AS "LogProba", scu."Proba" AS "Proba", scu."Score" AS "Score" 
FROM (SELECT orig_cte."KEY" AS "KEY_u", 0 AS class, orig_cte."LogProba_0" AS "LogProba", orig_cte."Proba_0" AS "Proba", orig_cte."Score_0" AS "Score" 
FROM orig_cte UNION ALL SELECT orig_cte."KEY" AS "KEY_u", 1 AS class, orig_cte."LogProba_1" AS "LogProba", orig_cte."Proba_1" AS "Proba", orig_cte."Score_1" AS "Score" 
FROM orig_cte UNION ALL SELECT orig_cte."KEY" AS "KEY_u", 2 AS class, orig_cte."LogProba_2" AS "LogProba", orig_cte."Proba_2" AS "Proba", orig_cte."Score_2" AS "Score" 
FROM orig_cte UNION ALL SELECT orig_cte."KEY" AS "KEY_u", 3 AS class, orig_cte."LogProba_3" AS "LogProba", orig_cte."Proba_3" AS "Proba", orig_cte."Score_3" AS "Score" 
FROM orig_cte) AS scu), 
score_max AS 
(SELECT orig_cte."KEY" AS "KEY", orig_cte."Score_0" AS "Score_0", orig_cte."Score_1" AS "Score_1", orig_cte."Score_2" AS "Score_2", orig_cte."Score_3" AS "Score_3", orig_cte."Proba_0" AS "Proba_0", orig_cte."Proba_1" AS "Proba_1", orig_cte."Proba_2" AS "Proba_2", orig_cte."Proba_3" AS "Proba_3", orig_cte."LogProba_0" AS "LogProba_0", orig_cte."LogProba_1" AS "LogProba_1", orig_cte."LogProba_2" AS "LogProba_2", orig_cte."LogProba_3" AS "LogProba_3", orig_cte."Decision" AS "Decision", orig_cte."DecisionProba" AS "DecisionProba", max_select."KEY_m" AS "KEY_m", max_select."max_Score" AS "max_Score" 
FROM orig_cte LEFT OUTER JOIN (SELECT score_class_union."KEY_u" AS "KEY_m", max(score_class_union."Score") AS "max_Score" 
FROM score_class_union GROUP BY score_class_union."KEY_u") AS max_select ON orig_cte."KEY" = max_select."KEY_m"), 
score_soft_max_deltas AS 
(SELECT score_max."KEY" AS "KEY", score_max."Score_0" AS "Score_0", score_max."Score_1" AS "Score_1", score_max."Score_2" AS "Score_2", score_max."Score_3" AS "Score_3", score_max."Proba_0" AS "Proba_0", score_max."Proba_1" AS "Proba_1", score_max."Proba_2" AS "Proba_2", score_max."Proba_3" AS "Proba_3", score_max."LogProba_0" AS "LogProba_0", score_max."LogProba_1" AS "LogProba_1", score_max."LogProba_2" AS "LogProba_2", score_max."LogProba_3" AS "LogProba_3", score_max."Decision" AS "Decision", score_max."DecisionProba" AS "DecisionProba", score_max."KEY_m" AS "KEY_m", score_max."max_Score" AS "max_Score", exp(score_max."Score_0" - score_max."max_Score") AS "exp_delta_Score_0", exp(score_max."Score_1" - score_max."max_Score") AS "exp_delta_Score_1", exp(score_max."Score_2" - score_max."max_Score") AS "exp_delta_Score_2", exp(score_max."Score_3" - score_max."max_Score") AS "exp_delta_Score_3" 
FROM score_max), 
score_class_union_soft AS 
(SELECT soft_scu."KEY" AS "KEY", soft_scu.class AS class, soft_scu."exp_delta_Score" AS "exp_delta_Score" 
FROM (SELECT score_soft_max_deltas."KEY" AS "KEY", 0 AS class, score_soft_max_deltas."exp_delta_Score_0" AS "exp_delta_Score" 
FROM score_soft_max_deltas UNION ALL SELECT score_soft_max_deltas."KEY" AS "KEY", 1 AS class, score_soft_max_deltas."exp_delta_Score_1" AS "exp_delta_Score" 
FROM score_soft_max_deltas UNION ALL SELECT score_soft_max_deltas."KEY" AS "KEY", 2 AS class, score_soft_max_deltas."exp_delta_Score_2" AS "exp_delta_Score" 
FROM score_soft_max_deltas UNION ALL SELECT score_soft_max_deltas."KEY" AS "KEY", 3 AS class, score_soft_max_deltas."exp_delta_Score_3" AS "exp_delta_Score" 
FROM score_soft_max_deltas) AS soft_scu), 
score_soft_max AS 
(SELECT score_soft_max_deltas."KEY" AS "KEY", score_soft_max_deltas."Score_0" AS "Score_0", score_soft_max_deltas."Score_1" AS "Score_1", score_soft_max_deltas."Score_2" AS "Score_2", score_soft_max_deltas."Score_3" AS "Score_3", score_soft_max_deltas."Proba_0" AS "Proba_0", score_soft_max_deltas."Proba_1" AS "Proba_1", score_soft_max_deltas."Proba_2" AS "Proba_2", score_soft_max_deltas."Proba_3" AS "Proba_3", score_soft_max_deltas."LogProba_0" AS "LogProba_0", score_soft_max_deltas."LogProba_1" AS "LogProba_1", score_soft_max_deltas."LogProba_2" AS "LogProba_2", score_soft_max_deltas."LogProba_3" AS "LogProba_3", score_soft_max_deltas."Decision" AS "Decision", score_soft_max_deltas."DecisionProba" AS "DecisionProba", score_soft_max_deltas."KEY_m" AS "KEY_m", score_soft_max_deltas."max_Score" AS "max_Score", score_soft_max_deltas."exp_delta_Score_0" AS "exp_delta_Score_0", score_soft_max_deltas."exp_delta_Score_1" AS "exp_delta_Score_1", score_soft_max_deltas."exp_delta_Score_2" AS "exp_delta_Score_2", score_soft_max_deltas."exp_delta_Score_3" AS "exp_delta_Score_3", sum_exp_t."KEY_sum" AS "KEY_sum", sum_exp_t."sum_ExpDeltaScore" AS "sum_ExpDeltaScore" 
FROM score_soft_max_deltas LEFT OUTER JOIN (SELECT score_class_union_soft."KEY" AS "KEY_sum", sum(score_class_union_soft."exp_delta_Score") AS "sum_ExpDeltaScore" 
FROM score_class_union_soft GROUP BY score_class_union_soft."KEY") AS sum_exp_t ON score_soft_max_deltas."KEY" = sum_exp_t."KEY_sum"), 
union_with_max AS 
(SELECT score_class_union."KEY_u" AS "KEY_u", score_class_union.class AS class, score_class_union."LogProba" AS "LogProba", score_class_union."Proba" AS "Proba", score_class_union."Score" AS "Score", score_soft_max."KEY" AS "KEY", score_soft_max."Score_0" AS "Score_0", score_soft_max."Score_1" AS "Score_1", score_soft_max."Score_2" AS "Score_2", score_soft_max."Score_3" AS "Score_3", score_soft_max."Proba_0" AS "Proba_0", score_soft_max."Proba_1" AS "Proba_1", score_soft_max."Proba_2" AS "Proba_2", score_soft_max."Proba_3" AS "Proba_3", score_soft_max."LogProba_0" AS "LogProba_0", score_soft_max."LogProba_1" AS "LogProba_1", score_soft_max."LogProba_2" AS "LogProba_2", score_soft_max."LogProba_3" AS "LogProba_3", score_soft_max."Decision" AS "Decision", score_soft_max."DecisionProba" AS "DecisionProba", score_soft_max."KEY_m" AS "KEY_m", score_soft_max."max_Score" AS "max_Score", score_soft_max."exp_delta_Score_0" AS "exp_delta_Score_0", score_soft_max."exp_delta_Score_1" AS "exp_delta_Score_1", score_soft_max."exp_delta_Score_2" AS "exp_delta_Score_2", score_soft_max."exp_delta_Score_3" AS "exp_delta_Score_3", score_soft_max."KEY_sum" AS "KEY_sum", score_soft_max."sum_ExpDeltaScore" AS "sum_ExpDeltaScore" 
FROM score_class_union LEFT OUTER JOIN score_soft_max ON score_class_union."KEY_u" = score_soft_max."KEY"), 
arg_max_cte AS 
(SELECT score_soft_max."KEY" AS "KEY", score_soft_max."Score_0" AS "Score_0", score_soft_max."Score_1" AS "Score_1", score_soft_max."Score_2" AS "Score_2", score_soft_max."Score_3" AS "Score_3", score_soft_max."Proba_0" AS "Proba_0", score_soft_max."Proba_1" AS "Proba_1", score_soft_max."Proba_2" AS "Proba_2", score_soft_max."Proba_3" AS "Proba_3", score_soft_max."LogProba_0" AS "LogProba_0", score_soft_max."LogProba_1" AS "LogProba_1", score_soft_max."LogProba_2" AS "LogProba_2", score_soft_max."LogProba_3" AS "LogProba_3", score_soft_max."Decision" AS "Decision", score_soft_max."DecisionProba" AS "DecisionProba", score_soft_max."KEY_m" AS "KEY_m", score_soft_max."max_Score" AS "max_Score", score_soft_max."exp_delta_Score_0" AS "exp_delta_Score_0", score_soft_max."exp_delta_Score_1" AS "exp_delta_Score_1", score_soft_max."exp_delta_Score_2" AS "exp_delta_Score_2", score_soft_max."exp_delta_Score_3" AS "exp_delta_Score_3", score_soft_max."KEY_sum" AS "KEY_sum", score_soft_max."sum_ExpDeltaScore" AS "sum_ExpDeltaScore", "arg_max_t_Score"."KEY_Score" AS "KEY_Score", "arg_max_t_Score"."arg_max_Score" AS "arg_max_Score", soft_max_comp."KEY_softmax" AS "KEY_softmax", soft_max_comp."SoftProba_0" AS "SoftProba_0", soft_max_comp."SoftProba_1" AS "SoftProba_1", soft_max_comp."SoftProba_2" AS "SoftProba_2", soft_max_comp."SoftProba_3" AS "SoftProba_3" 
FROM score_soft_max LEFT OUTER JOIN (SELECT union_with_max."KEY" AS "KEY_Score", min(union_with_max.class) AS "arg_max_Score" 
FROM union_with_max 
WHERE union_with_max."max_Score" <= union_with_max."Score" GROUP BY union_with_max."KEY") AS "arg_max_t_Score" ON score_soft_max."KEY" = "arg_max_t_Score"."KEY_Score" LEFT OUTER JOIN (SELECT score_soft_max."KEY" AS "KEY_softmax", score_soft_max."exp_delta_Score_0" / score_soft_max."sum_ExpDeltaScore" AS "SoftProba_0", score_soft_max."exp_delta_Score_1" / score_soft_max."sum_ExpDeltaScore" AS "SoftProba_1", score_soft_max."exp_delta_Score_2" / score_soft_max."sum_ExpDeltaScore" AS "SoftProba_2", score_soft_max."exp_delta_Score_3" / score_soft_max."sum_ExpDeltaScore" AS "SoftProba_3" 
FROM score_soft_max) AS soft_max_comp ON soft_max_comp."KEY_softmax" = "arg_max_t_Score"."KEY_Score")
 SELECT arg_max_cte."KEY" AS "KEY", CAST(NULL AS FLOAT) AS "Score_0", CAST(NULL AS FLOAT) AS "Score_1", CAST(NULL AS FLOAT) AS "Score_2", CAST(NULL AS FLOAT) AS "Score_3", arg_max_cte."SoftProba_0" AS "Proba_0", arg_max_cte."SoftProba_1" AS "Proba_1", arg_max_cte."SoftProba_2" AS "Proba_2", arg_max_cte."SoftProba_3" AS "Proba_3", CASE WHEN (arg_max_cte."SoftProba_0" IS NULL OR arg_max_cte."SoftProba_0" > 0.0) THEN ln(arg_max_cte."SoftProba_0") ELSE -1.79769313486231e+308 END AS "LogProba_0", CASE WHEN (arg_max_cte."SoftProba_1" IS NULL OR arg_max_cte."SoftProba_1" > 0.0) THEN ln(arg_max_cte."SoftProba_1") ELSE -1.79769313486231e+308 END AS "LogProba_1", CASE WHEN (arg_max_cte."SoftProba_2" IS NULL OR arg_max_cte."SoftProba_2" > 0.0) THEN ln(arg_max_cte."SoftProba_2") ELSE -1.79769313486231e+308 END AS "LogProba_2", CASE WHEN (arg_max_cte."SoftProba_3" IS NULL OR arg_max_cte."SoftProba_3" > 0.0) THEN ln(arg_max_cte."SoftProba_3") ELSE -1.79769313486231e+308 END AS "LogProba_3", arg_max_cte."arg_max_Score" AS "Decision", CASE WHEN (arg_max_cte."SoftProba_0" <= CASE WHEN (arg_max_cte."SoftProba_1" <= CASE WHEN (arg_max_cte."SoftProba_2" <= arg_max_cte."SoftProba_3") THEN arg_max_cte."SoftProba_3" ELSE arg_max_cte."SoftProba_2" END) THEN CASE WHEN (arg_max_cte."SoftProba_2" <= arg_max_cte."SoftProba_3") THEN arg_max_cte."SoftProba_3" ELSE arg_max_cte."SoftProba_2" END ELSE arg_max_cte."SoftProba_1" END) THEN CASE WHEN (arg_max_cte."SoftProba_1" <= CASE WHEN (arg_max_cte."SoftProba_2" <= arg_max_cte."SoftProba_3") THEN arg_max_cte."SoftProba_3" ELSE arg_max_cte."SoftProba_2" END) THEN CASE WHEN (arg_max_cte."SoftProba_2" <= arg_max_cte."SoftProba_3") THEN arg_max_cte."SoftProba_3" ELSE arg_max_cte."SoftProba_2" END ELSE arg_max_cte."SoftProba_1" END ELSE arg_max_cte."SoftProba_0" END AS "DecisionProba" 
FROM arg_max_cte